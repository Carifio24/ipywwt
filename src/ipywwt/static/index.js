function makeMap(s, u) {
  const i = /* @__PURE__ */ Object.create(null), t = s.split(",");
  for (let n = 0; n < t.length; n++)
    i[t[n]] = !0;
  return u ? (n) => !!i[n.toLowerCase()] : (n) => !!i[n];
}
const EMPTY_OBJ = {}, EMPTY_ARR = [], NOOP = () => {
}, NO = () => !1, onRE = /^on[^a-z]/, isOn = (s) => onRE.test(s), isModelListener = (s) => s.startsWith("onUpdate:"), extend = Object.assign, remove = (s, u) => {
  const i = s.indexOf(u);
  i > -1 && s.splice(i, 1);
}, hasOwnProperty$1 = Object.prototype.hasOwnProperty, hasOwn = (s, u) => hasOwnProperty$1.call(s, u), isArray = Array.isArray, isMap = (s) => toTypeString(s) === "[object Map]", isSet = (s) => toTypeString(s) === "[object Set]", isDate = (s) => toTypeString(s) === "[object Date]", isRegExp = (s) => toTypeString(s) === "[object RegExp]", isFunction = (s) => typeof s == "function", isString = (s) => typeof s == "string", isSymbol = (s) => typeof s == "symbol", isObject = (s) => s !== null && typeof s == "object", isPromise = (s) => isObject(s) && isFunction(s.then) && isFunction(s.catch), objectToString = Object.prototype.toString, toTypeString = (s) => objectToString.call(s), toRawType = (s) => toTypeString(s).slice(8, -1), isPlainObject = (s) => toTypeString(s) === "[object Object]", isIntegerKey = (s) => isString(s) && s !== "NaN" && s[0] !== "-" && "" + parseInt(s, 10) === s, isReservedProp = /* @__PURE__ */ makeMap(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
), cacheStringFunction = (s) => {
  const u = /* @__PURE__ */ Object.create(null);
  return (i) => u[i] || (u[i] = s(i));
}, camelizeRE = /-(\w)/g, camelize = cacheStringFunction((s) => s.replace(camelizeRE, (u, i) => i ? i.toUpperCase() : "")), hyphenateRE = /\B([A-Z])/g, hyphenate = cacheStringFunction(
  (s) => s.replace(hyphenateRE, "-$1").toLowerCase()
), capitalize = cacheStringFunction(
  (s) => s.charAt(0).toUpperCase() + s.slice(1)
), toHandlerKey = cacheStringFunction(
  (s) => s ? `on${capitalize(s)}` : ""
), hasChanged = (s, u) => !Object.is(s, u), invokeArrayFns = (s, u) => {
  for (let i = 0; i < s.length; i++)
    s[i](u);
}, def = (s, u, i) => {
  Object.defineProperty(s, u, {
    configurable: !0,
    enumerable: !1,
    value: i
  });
}, looseToNumber = (s) => {
  const u = parseFloat(s);
  return isNaN(u) ? s : u;
}, toNumber = (s) => {
  const u = isString(s) ? Number(s) : NaN;
  return isNaN(u) ? s : u;
};
let _globalThis;
const getGlobalThis = () => _globalThis || (_globalThis = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {}), GLOBALS_WHITE_LISTED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console", isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);
function normalizeStyle(s) {
  if (isArray(s)) {
    const u = {};
    for (let i = 0; i < s.length; i++) {
      const t = s[i], n = isString(t) ? parseStringStyle(t) : normalizeStyle(t);
      if (n)
        for (const e in n)
          u[e] = n[e];
    }
    return u;
  } else {
    if (isString(s))
      return s;
    if (isObject(s))
      return s;
  }
}
const listDelimiterRE = /;(?![^(]*\))/g, propertyDelimiterRE = /:([^]+)/, styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(s) {
  const u = {};
  return s.replace(styleCommentRE, "").split(listDelimiterRE).forEach((i) => {
    if (i) {
      const t = i.split(propertyDelimiterRE);
      t.length > 1 && (u[t[0].trim()] = t[1].trim());
    }
  }), u;
}
function normalizeClass(s) {
  let u = "";
  if (isString(s))
    u = s;
  else if (isArray(s))
    for (let i = 0; i < s.length; i++) {
      const t = normalizeClass(s[i]);
      t && (u += t + " ");
    }
  else if (isObject(s))
    for (const i in s)
      s[i] && (u += i + " ");
  return u.trim();
}
function normalizeProps(s) {
  if (!s)
    return null;
  let { class: u, style: i } = s;
  return u && !isString(u) && (s.class = normalizeClass(u)), i && (s.style = normalizeStyle(i)), s;
}
const specialBooleanAttrs = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly", isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
function includeBooleanAttr(s) {
  return !!s || s === "";
}
function looseCompareArrays(s, u) {
  if (s.length !== u.length)
    return !1;
  let i = !0;
  for (let t = 0; i && t < s.length; t++)
    i = looseEqual(s[t], u[t]);
  return i;
}
function looseEqual(s, u) {
  if (s === u)
    return !0;
  let i = isDate(s), t = isDate(u);
  if (i || t)
    return i && t ? s.getTime() === u.getTime() : !1;
  if (i = isSymbol(s), t = isSymbol(u), i || t)
    return s === u;
  if (i = isArray(s), t = isArray(u), i || t)
    return i && t ? looseCompareArrays(s, u) : !1;
  if (i = isObject(s), t = isObject(u), i || t) {
    if (!i || !t)
      return !1;
    const n = Object.keys(s).length, e = Object.keys(u).length;
    if (n !== e)
      return !1;
    for (const _ in s) {
      const r = s.hasOwnProperty(_), o = u.hasOwnProperty(_);
      if (r && !o || !r && o || !looseEqual(s[_], u[_]))
        return !1;
    }
  }
  return String(s) === String(u);
}
function looseIndexOf(s, u) {
  return s.findIndex((i) => looseEqual(i, u));
}
const toDisplayString = (s) => isString(s) ? s : s == null ? "" : isArray(s) || isObject(s) && (s.toString === objectToString || !isFunction(s.toString)) ? JSON.stringify(s, replacer, 2) : String(s), replacer = (s, u) => u && u.__v_isRef ? replacer(s, u.value) : isMap(u) ? {
  [`Map(${u.size})`]: [...u.entries()].reduce((i, [t, n]) => (i[`${t} =>`] = n, i), {})
} : isSet(u) ? {
  [`Set(${u.size})`]: [...u.values()]
} : isObject(u) && !isArray(u) && !isPlainObject(u) ? String(u) : u;
let activeEffectScope;
class EffectScope {
  constructor(u = !1) {
    this.detached = u, this._active = !0, this.effects = [], this.cleanups = [], this.parent = activeEffectScope, !u && activeEffectScope && (this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
      this
    ) - 1);
  }
  get active() {
    return this._active;
  }
  run(u) {
    if (this._active) {
      const i = activeEffectScope;
      try {
        return activeEffectScope = this, u();
      } finally {
        activeEffectScope = i;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    activeEffectScope = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    activeEffectScope = this.parent;
  }
  stop(u) {
    if (this._active) {
      let i, t;
      for (i = 0, t = this.effects.length; i < t; i++)
        this.effects[i].stop();
      for (i = 0, t = this.cleanups.length; i < t; i++)
        this.cleanups[i]();
      if (this.scopes)
        for (i = 0, t = this.scopes.length; i < t; i++)
          this.scopes[i].stop(!0);
      if (!this.detached && this.parent && !u) {
        const n = this.parent.scopes.pop();
        n && n !== this && (this.parent.scopes[this.index] = n, n.index = this.index);
      }
      this.parent = void 0, this._active = !1;
    }
  }
}
function effectScope(s) {
  return new EffectScope(s);
}
function recordEffectScope(s, u = activeEffectScope) {
  u && u.active && u.effects.push(s);
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(s) {
  activeEffectScope && activeEffectScope.cleanups.push(s);
}
const createDep = (s) => {
  const u = new Set(s);
  return u.w = 0, u.n = 0, u;
}, wasTracked = (s) => (s.w & trackOpBit) > 0, newTracked = (s) => (s.n & trackOpBit) > 0, initDepMarkers = ({ deps: s }) => {
  if (s.length)
    for (let u = 0; u < s.length; u++)
      s[u].w |= trackOpBit;
}, finalizeDepMarkers = (s) => {
  const { deps: u } = s;
  if (u.length) {
    let i = 0;
    for (let t = 0; t < u.length; t++) {
      const n = u[t];
      wasTracked(n) && !newTracked(n) ? n.delete(s) : u[i++] = n, n.w &= ~trackOpBit, n.n &= ~trackOpBit;
    }
    u.length = i;
  }
}, targetMap = /* @__PURE__ */ new WeakMap();
let effectTrackDepth = 0, trackOpBit = 1;
const maxMarkerBits = 30;
let activeEffect;
const ITERATE_KEY = Symbol(""), MAP_KEY_ITERATE_KEY = Symbol("");
class ReactiveEffect {
  constructor(u, i = null, t) {
    this.fn = u, this.scheduler = i, this.active = !0, this.deps = [], this.parent = void 0, recordEffectScope(this, t);
  }
  run() {
    if (!this.active)
      return this.fn();
    let u = activeEffect, i = shouldTrack;
    for (; u; ) {
      if (u === this)
        return;
      u = u.parent;
    }
    try {
      return this.parent = activeEffect, activeEffect = this, shouldTrack = !0, trackOpBit = 1 << ++effectTrackDepth, effectTrackDepth <= maxMarkerBits ? initDepMarkers(this) : cleanupEffect(this), this.fn();
    } finally {
      effectTrackDepth <= maxMarkerBits && finalizeDepMarkers(this), trackOpBit = 1 << --effectTrackDepth, activeEffect = this.parent, shouldTrack = i, this.parent = void 0, this.deferStop && this.stop();
    }
  }
  stop() {
    activeEffect === this ? this.deferStop = !0 : this.active && (cleanupEffect(this), this.onStop && this.onStop(), this.active = !1);
  }
}
function cleanupEffect(s) {
  const { deps: u } = s;
  if (u.length) {
    for (let i = 0; i < u.length; i++)
      u[i].delete(s);
    u.length = 0;
  }
}
function effect(s, u) {
  s.effect && (s = s.effect.fn);
  const i = new ReactiveEffect(s);
  u && (extend(i, u), u.scope && recordEffectScope(i, u.scope)), (!u || !u.lazy) && i.run();
  const t = i.run.bind(i);
  return t.effect = i, t;
}
function stop(s) {
  s.effect.stop();
}
let shouldTrack = !0;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack), shouldTrack = !1;
}
function resetTracking() {
  const s = trackStack.pop();
  shouldTrack = s === void 0 ? !0 : s;
}
function track(s, u, i) {
  if (shouldTrack && activeEffect) {
    let t = targetMap.get(s);
    t || targetMap.set(s, t = /* @__PURE__ */ new Map());
    let n = t.get(i);
    n || t.set(i, n = createDep()), trackEffects(n);
  }
}
function trackEffects(s, u) {
  let i = !1;
  effectTrackDepth <= maxMarkerBits ? newTracked(s) || (s.n |= trackOpBit, i = !wasTracked(s)) : i = !s.has(activeEffect), i && (s.add(activeEffect), activeEffect.deps.push(s));
}
function trigger(s, u, i, t, n, e) {
  const _ = targetMap.get(s);
  if (!_)
    return;
  let r = [];
  if (u === "clear")
    r = [..._.values()];
  else if (i === "length" && isArray(s)) {
    const o = Number(t);
    _.forEach((c, l) => {
      (l === "length" || l >= o) && r.push(c);
    });
  } else
    switch (i !== void 0 && r.push(_.get(i)), u) {
      case "add":
        isArray(s) ? isIntegerKey(i) && r.push(_.get("length")) : (r.push(_.get(ITERATE_KEY)), isMap(s) && r.push(_.get(MAP_KEY_ITERATE_KEY)));
        break;
      case "delete":
        isArray(s) || (r.push(_.get(ITERATE_KEY)), isMap(s) && r.push(_.get(MAP_KEY_ITERATE_KEY)));
        break;
      case "set":
        isMap(s) && r.push(_.get(ITERATE_KEY));
        break;
    }
  if (r.length === 1)
    r[0] && triggerEffects(r[0]);
  else {
    const o = [];
    for (const c of r)
      c && o.push(...c);
    triggerEffects(createDep(o));
  }
}
function triggerEffects(s, u) {
  const i = isArray(s) ? s : [...s];
  for (const t of i)
    t.computed && triggerEffect(t);
  for (const t of i)
    t.computed || triggerEffect(t);
}
function triggerEffect(s, u) {
  (s !== activeEffect || s.allowRecurse) && (s.scheduler ? s.scheduler() : s.run());
}
function getDepFromReactive(s, u) {
  var i;
  return (i = targetMap.get(s)) == null ? void 0 : i.get(u);
}
const isNonTrackableKeys = /* @__PURE__ */ makeMap("__proto__,__v_isRef,__isVue"), builtInSymbols = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((s) => s !== "arguments" && s !== "caller").map((s) => Symbol[s]).filter(isSymbol)
), get$1 = /* @__PURE__ */ createGetter(), shallowGet = /* @__PURE__ */ createGetter(!1, !0), readonlyGet = /* @__PURE__ */ createGetter(!0), shallowReadonlyGet = /* @__PURE__ */ createGetter(!0, !0), arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();
function createArrayInstrumentations() {
  const s = {};
  return ["includes", "indexOf", "lastIndexOf"].forEach((u) => {
    s[u] = function(...i) {
      const t = toRaw(this);
      for (let e = 0, _ = this.length; e < _; e++)
        track(t, "get", e + "");
      const n = t[u](...i);
      return n === -1 || n === !1 ? t[u](...i.map(toRaw)) : n;
    };
  }), ["push", "pop", "shift", "unshift", "splice"].forEach((u) => {
    s[u] = function(...i) {
      pauseTracking();
      const t = toRaw(this)[u].apply(this, i);
      return resetTracking(), t;
    };
  }), s;
}
function hasOwnProperty(s) {
  const u = toRaw(this);
  return track(u, "has", s), u.hasOwnProperty(s);
}
function createGetter(s = !1, u = !1) {
  return function(t, n, e) {
    if (n === "__v_isReactive")
      return !s;
    if (n === "__v_isReadonly")
      return s;
    if (n === "__v_isShallow")
      return u;
    if (n === "__v_raw" && e === (s ? u ? shallowReadonlyMap : readonlyMap : u ? shallowReactiveMap : reactiveMap).get(t))
      return t;
    const _ = isArray(t);
    if (!s) {
      if (_ && hasOwn(arrayInstrumentations, n))
        return Reflect.get(arrayInstrumentations, n, e);
      if (n === "hasOwnProperty")
        return hasOwnProperty;
    }
    const r = Reflect.get(t, n, e);
    return (isSymbol(n) ? builtInSymbols.has(n) : isNonTrackableKeys(n)) || (s || track(t, "get", n), u) ? r : isRef(r) ? _ && isIntegerKey(n) ? r : r.value : isObject(r) ? s ? readonly(r) : reactive(r) : r;
  };
}
const set$1 = /* @__PURE__ */ createSetter(), shallowSet = /* @__PURE__ */ createSetter(!0);
function createSetter(s = !1) {
  return function(i, t, n, e) {
    let _ = i[t];
    if (isReadonly(_) && isRef(_) && !isRef(n))
      return !1;
    if (!s && (!isShallow(n) && !isReadonly(n) && (_ = toRaw(_), n = toRaw(n)), !isArray(i) && isRef(_) && !isRef(n)))
      return _.value = n, !0;
    const r = isArray(i) && isIntegerKey(t) ? Number(t) < i.length : hasOwn(i, t), o = Reflect.set(i, t, n, e);
    return i === toRaw(e) && (r ? hasChanged(n, _) && trigger(i, "set", t, n) : trigger(i, "add", t, n)), o;
  };
}
function deleteProperty(s, u) {
  const i = hasOwn(s, u);
  s[u];
  const t = Reflect.deleteProperty(s, u);
  return t && i && trigger(s, "delete", u, void 0), t;
}
function has$1(s, u) {
  const i = Reflect.has(s, u);
  return (!isSymbol(u) || !builtInSymbols.has(u)) && track(s, "has", u), i;
}
function ownKeys(s) {
  return track(s, "iterate", isArray(s) ? "length" : ITERATE_KEY), Reflect.ownKeys(s);
}
const mutableHandlers = {
  get: get$1,
  set: set$1,
  deleteProperty,
  has: has$1,
  ownKeys
}, readonlyHandlers = {
  get: readonlyGet,
  set(s, u) {
    return !0;
  },
  deleteProperty(s, u) {
    return !0;
  }
}, shallowReactiveHandlers = /* @__PURE__ */ extend(
  {},
  mutableHandlers,
  {
    get: shallowGet,
    set: shallowSet
  }
), shallowReadonlyHandlers = /* @__PURE__ */ extend(
  {},
  readonlyHandlers,
  {
    get: shallowReadonlyGet
  }
), toShallow = (s) => s, getProto = (s) => Reflect.getPrototypeOf(s);
function get(s, u, i = !1, t = !1) {
  s = s.__v_raw;
  const n = toRaw(s), e = toRaw(u);
  i || (u !== e && track(n, "get", u), track(n, "get", e));
  const { has: _ } = getProto(n), r = t ? toShallow : i ? toReadonly : toReactive;
  if (_.call(n, u))
    return r(s.get(u));
  if (_.call(n, e))
    return r(s.get(e));
  s !== n && s.get(u);
}
function has(s, u = !1) {
  const i = this.__v_raw, t = toRaw(i), n = toRaw(s);
  return u || (s !== n && track(t, "has", s), track(t, "has", n)), s === n ? i.has(s) : i.has(s) || i.has(n);
}
function size(s, u = !1) {
  return s = s.__v_raw, !u && track(toRaw(s), "iterate", ITERATE_KEY), Reflect.get(s, "size", s);
}
function add(s) {
  s = toRaw(s);
  const u = toRaw(this);
  return getProto(u).has.call(u, s) || (u.add(s), trigger(u, "add", s, s)), this;
}
function set(s, u) {
  u = toRaw(u);
  const i = toRaw(this), { has: t, get: n } = getProto(i);
  let e = t.call(i, s);
  e || (s = toRaw(s), e = t.call(i, s));
  const _ = n.call(i, s);
  return i.set(s, u), e ? hasChanged(u, _) && trigger(i, "set", s, u) : trigger(i, "add", s, u), this;
}
function deleteEntry(s) {
  const u = toRaw(this), { has: i, get: t } = getProto(u);
  let n = i.call(u, s);
  n || (s = toRaw(s), n = i.call(u, s)), t && t.call(u, s);
  const e = u.delete(s);
  return n && trigger(u, "delete", s, void 0), e;
}
function clear() {
  const s = toRaw(this), u = s.size !== 0, i = s.clear();
  return u && trigger(s, "clear", void 0, void 0), i;
}
function createForEach(s, u) {
  return function(t, n) {
    const e = this, _ = e.__v_raw, r = toRaw(_), o = u ? toShallow : s ? toReadonly : toReactive;
    return !s && track(r, "iterate", ITERATE_KEY), _.forEach((c, l) => t.call(n, o(c), o(l), e));
  };
}
function createIterableMethod(s, u, i) {
  return function(...t) {
    const n = this.__v_raw, e = toRaw(n), _ = isMap(e), r = s === "entries" || s === Symbol.iterator && _, o = s === "keys" && _, c = n[s](...t), l = i ? toShallow : u ? toReadonly : toReactive;
    return !u && track(
      e,
      "iterate",
      o ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    ), {
      // iterator protocol
      next() {
        const { value: g, done: a } = c.next();
        return a ? { value: g, done: a } : {
          value: r ? [l(g[0]), l(g[1])] : l(g),
          done: a
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(s) {
  return function(...u) {
    return s === "delete" ? !1 : this;
  };
}
function createInstrumentations() {
  const s = {
    get(e) {
      return get(this, e);
    },
    get size() {
      return size(this);
    },
    has,
    add,
    set,
    delete: deleteEntry,
    clear,
    forEach: createForEach(!1, !1)
  }, u = {
    get(e) {
      return get(this, e, !1, !0);
    },
    get size() {
      return size(this);
    },
    has,
    add,
    set,
    delete: deleteEntry,
    clear,
    forEach: createForEach(!1, !0)
  }, i = {
    get(e) {
      return get(this, e, !0);
    },
    get size() {
      return size(this, !0);
    },
    has(e) {
      return has.call(this, e, !0);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(!0, !1)
  }, t = {
    get(e) {
      return get(this, e, !0, !0);
    },
    get size() {
      return size(this, !0);
    },
    has(e) {
      return has.call(this, e, !0);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(!0, !0)
  };
  return ["keys", "values", "entries", Symbol.iterator].forEach((e) => {
    s[e] = createIterableMethod(
      e,
      !1,
      !1
    ), i[e] = createIterableMethod(
      e,
      !0,
      !1
    ), u[e] = createIterableMethod(
      e,
      !1,
      !0
    ), t[e] = createIterableMethod(
      e,
      !0,
      !0
    );
  }), [
    s,
    i,
    u,
    t
  ];
}
const [
  mutableInstrumentations,
  readonlyInstrumentations,
  shallowInstrumentations,
  shallowReadonlyInstrumentations
] = /* @__PURE__ */ createInstrumentations();
function createInstrumentationGetter(s, u) {
  const i = u ? s ? shallowReadonlyInstrumentations : shallowInstrumentations : s ? readonlyInstrumentations : mutableInstrumentations;
  return (t, n, e) => n === "__v_isReactive" ? !s : n === "__v_isReadonly" ? s : n === "__v_raw" ? t : Reflect.get(
    hasOwn(i, n) && n in t ? i : t,
    n,
    e
  );
}
const mutableCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!1, !1)
}, shallowCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!1, !0)
}, readonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!0, !1)
}, shallowReadonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!0, !0)
}, reactiveMap = /* @__PURE__ */ new WeakMap(), shallowReactiveMap = /* @__PURE__ */ new WeakMap(), readonlyMap = /* @__PURE__ */ new WeakMap(), shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(s) {
  switch (s) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(s) {
  return s.__v_skip || !Object.isExtensible(s) ? 0 : targetTypeMap(toRawType(s));
}
function reactive(s) {
  return isReadonly(s) ? s : createReactiveObject(
    s,
    !1,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function shallowReactive(s) {
  return createReactiveObject(
    s,
    !1,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(s) {
  return createReactiveObject(
    s,
    !0,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(s) {
  return createReactiveObject(
    s,
    !0,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(s, u, i, t, n) {
  if (!isObject(s) || s.__v_raw && !(u && s.__v_isReactive))
    return s;
  const e = n.get(s);
  if (e)
    return e;
  const _ = getTargetType(s);
  if (_ === 0)
    return s;
  const r = new Proxy(
    s,
    _ === 2 ? t : i
  );
  return n.set(s, r), r;
}
function isReactive(s) {
  return isReadonly(s) ? isReactive(s.__v_raw) : !!(s && s.__v_isReactive);
}
function isReadonly(s) {
  return !!(s && s.__v_isReadonly);
}
function isShallow(s) {
  return !!(s && s.__v_isShallow);
}
function isProxy(s) {
  return isReactive(s) || isReadonly(s);
}
function toRaw(s) {
  const u = s && s.__v_raw;
  return u ? toRaw(u) : s;
}
function markRaw(s) {
  return def(s, "__v_skip", !0), s;
}
const toReactive = (s) => isObject(s) ? reactive(s) : s, toReadonly = (s) => isObject(s) ? readonly(s) : s;
function trackRefValue(s) {
  shouldTrack && activeEffect && (s = toRaw(s), trackEffects(s.dep || (s.dep = createDep())));
}
function triggerRefValue(s, u) {
  s = toRaw(s);
  const i = s.dep;
  i && triggerEffects(i);
}
function isRef(s) {
  return !!(s && s.__v_isRef === !0);
}
function ref(s) {
  return createRef(s, !1);
}
function shallowRef(s) {
  return createRef(s, !0);
}
function createRef(s, u) {
  return isRef(s) ? s : new RefImpl(s, u);
}
class RefImpl {
  constructor(u, i) {
    this.__v_isShallow = i, this.dep = void 0, this.__v_isRef = !0, this._rawValue = i ? u : toRaw(u), this._value = i ? u : toReactive(u);
  }
  get value() {
    return trackRefValue(this), this._value;
  }
  set value(u) {
    const i = this.__v_isShallow || isShallow(u) || isReadonly(u);
    u = i ? u : toRaw(u), hasChanged(u, this._rawValue) && (this._rawValue = u, this._value = i ? u : toReactive(u), triggerRefValue(this));
  }
}
function triggerRef(s) {
  triggerRefValue(s);
}
function unref(s) {
  return isRef(s) ? s.value : s;
}
function toValue(s) {
  return isFunction(s) ? s() : unref(s);
}
const shallowUnwrapHandlers = {
  get: (s, u, i) => unref(Reflect.get(s, u, i)),
  set: (s, u, i, t) => {
    const n = s[u];
    return isRef(n) && !isRef(i) ? (n.value = i, !0) : Reflect.set(s, u, i, t);
  }
};
function proxyRefs(s) {
  return isReactive(s) ? s : new Proxy(s, shallowUnwrapHandlers);
}
class CustomRefImpl {
  constructor(u) {
    this.dep = void 0, this.__v_isRef = !0;
    const { get: i, set: t } = u(
      () => trackRefValue(this),
      () => triggerRefValue(this)
    );
    this._get = i, this._set = t;
  }
  get value() {
    return this._get();
  }
  set value(u) {
    this._set(u);
  }
}
function customRef(s) {
  return new CustomRefImpl(s);
}
function toRefs(s) {
  const u = isArray(s) ? new Array(s.length) : {};
  for (const i in s)
    u[i] = propertyToRef(s, i);
  return u;
}
class ObjectRefImpl {
  constructor(u, i, t) {
    this._object = u, this._key = i, this._defaultValue = t, this.__v_isRef = !0;
  }
  get value() {
    const u = this._object[this._key];
    return u === void 0 ? this._defaultValue : u;
  }
  set value(u) {
    this._object[this._key] = u;
  }
  get dep() {
    return getDepFromReactive(toRaw(this._object), this._key);
  }
}
class GetterRefImpl {
  constructor(u) {
    this._getter = u, this.__v_isRef = !0, this.__v_isReadonly = !0;
  }
  get value() {
    return this._getter();
  }
}
function toRef(s, u, i) {
  return isRef(s) ? s : isFunction(s) ? new GetterRefImpl(s) : isObject(s) && arguments.length > 1 ? propertyToRef(s, u, i) : ref(s);
}
function propertyToRef(s, u, i) {
  const t = s[u];
  return isRef(t) ? t : new ObjectRefImpl(
    s,
    u,
    i
  );
}
class ComputedRefImpl {
  constructor(u, i, t, n) {
    this._setter = i, this.dep = void 0, this.__v_isRef = !0, this.__v_isReadonly = !1, this._dirty = !0, this.effect = new ReactiveEffect(u, () => {
      this._dirty || (this._dirty = !0, triggerRefValue(this));
    }), this.effect.computed = this, this.effect.active = this._cacheable = !n, this.__v_isReadonly = t;
  }
  get value() {
    const u = toRaw(this);
    return trackRefValue(u), (u._dirty || !u._cacheable) && (u._dirty = !1, u._value = u.effect.run()), u._value;
  }
  set value(u) {
    this._setter(u);
  }
}
function computed$1(s, u, i = !1) {
  let t, n;
  const e = isFunction(s);
  return e ? (t = s, n = NOOP) : (t = s.get, n = s.set), new ComputedRefImpl(t, n, e || !n, i);
}
function warn(s, ...u) {
}
function assertNumber(s, u) {
}
function callWithErrorHandling(s, u, i, t) {
  let n;
  try {
    n = t ? s(...t) : s();
  } catch (e) {
    handleError(e, u, i);
  }
  return n;
}
function callWithAsyncErrorHandling(s, u, i, t) {
  if (isFunction(s)) {
    const e = callWithErrorHandling(s, u, i, t);
    return e && isPromise(e) && e.catch((_) => {
      handleError(_, u, i);
    }), e;
  }
  const n = [];
  for (let e = 0; e < s.length; e++)
    n.push(callWithAsyncErrorHandling(s[e], u, i, t));
  return n;
}
function handleError(s, u, i, t = !0) {
  const n = u ? u.vnode : null;
  if (u) {
    let e = u.parent;
    const _ = u.proxy, r = i;
    for (; e; ) {
      const c = e.ec;
      if (c) {
        for (let l = 0; l < c.length; l++)
          if (c[l](s, _, r) === !1)
            return;
      }
      e = e.parent;
    }
    const o = u.appContext.config.errorHandler;
    if (o) {
      callWithErrorHandling(
        o,
        null,
        10,
        [s, _, r]
      );
      return;
    }
  }
  logError(s, i, n, t);
}
function logError(s, u, i, t = !0) {
  console.error(s);
}
let isFlushing = !1, isFlushPending = !1;
const queue = [];
let flushIndex = 0;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null, postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
function nextTick(s) {
  const u = currentFlushPromise || resolvedPromise;
  return s ? u.then(this ? s.bind(this) : s) : u;
}
function findInsertionIndex(s) {
  let u = flushIndex + 1, i = queue.length;
  for (; u < i; ) {
    const t = u + i >>> 1;
    getId(queue[t]) < s ? u = t + 1 : i = t;
  }
  return u;
}
function queueJob(s) {
  (!queue.length || !queue.includes(
    s,
    isFlushing && s.allowRecurse ? flushIndex + 1 : flushIndex
  )) && (s.id == null ? queue.push(s) : queue.splice(findInsertionIndex(s.id), 0, s), queueFlush());
}
function queueFlush() {
  !isFlushing && !isFlushPending && (isFlushPending = !0, currentFlushPromise = resolvedPromise.then(flushJobs));
}
function invalidateJob(s) {
  const u = queue.indexOf(s);
  u > flushIndex && queue.splice(u, 1);
}
function queuePostFlushCb(s) {
  isArray(s) ? pendingPostFlushCbs.push(...s) : (!activePostFlushCbs || !activePostFlushCbs.includes(
    s,
    s.allowRecurse ? postFlushIndex + 1 : postFlushIndex
  )) && pendingPostFlushCbs.push(s), queueFlush();
}
function flushPreFlushCbs(s, u = isFlushing ? flushIndex + 1 : 0) {
  for (; u < queue.length; u++) {
    const i = queue[u];
    i && i.pre && (queue.splice(u, 1), u--, i());
  }
}
function flushPostFlushCbs(s) {
  if (pendingPostFlushCbs.length) {
    const u = [...new Set(pendingPostFlushCbs)];
    if (pendingPostFlushCbs.length = 0, activePostFlushCbs) {
      activePostFlushCbs.push(...u);
      return;
    }
    for (activePostFlushCbs = u, activePostFlushCbs.sort((i, t) => getId(i) - getId(t)), postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++)
      activePostFlushCbs[postFlushIndex]();
    activePostFlushCbs = null, postFlushIndex = 0;
  }
}
const getId = (s) => s.id == null ? 1 / 0 : s.id, comparator = (s, u) => {
  const i = getId(s) - getId(u);
  if (i === 0) {
    if (s.pre && !u.pre)
      return -1;
    if (u.pre && !s.pre)
      return 1;
  }
  return i;
};
function flushJobs(s) {
  isFlushPending = !1, isFlushing = !0, queue.sort(comparator);
  const u = NOOP;
  try {
    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
      const i = queue[flushIndex];
      i && i.active !== !1 && callWithErrorHandling(i, null, 14);
    }
  } finally {
    flushIndex = 0, queue.length = 0, flushPostFlushCbs(), isFlushing = !1, currentFlushPromise = null, (queue.length || pendingPostFlushCbs.length) && flushJobs();
  }
}
let devtools, buffer = [];
function setDevtoolsHook(s, u) {
  var i, t;
  devtools = s, devtools ? (devtools.enabled = !0, buffer.forEach(({ event: n, args: e }) => devtools.emit(n, ...e)), buffer = []) : /* handle late devtools injection - only do this if we are in an actual */ /* browser environment to avoid the timer handle stalling test runner exit */ /* (#4815) */ typeof window < "u" && // some envs mock window but not fully
  window.HTMLElement && // also exclude jsdom
  !((t = (i = window.navigator) == null ? void 0 : i.userAgent) != null && t.includes("jsdom")) ? ((u.__VUE_DEVTOOLS_HOOK_REPLAY__ = u.__VUE_DEVTOOLS_HOOK_REPLAY__ || []).push((e) => {
    setDevtoolsHook(e, u);
  }), setTimeout(() => {
    devtools || (u.__VUE_DEVTOOLS_HOOK_REPLAY__ = null, buffer = []);
  }, 3e3)) : buffer = [];
}
function emit(s, u, ...i) {
  if (s.isUnmounted)
    return;
  const t = s.vnode.props || EMPTY_OBJ;
  let n = i;
  const e = u.startsWith("update:"), _ = e && u.slice(7);
  if (_ && _ in t) {
    const l = `${_ === "modelValue" ? "model" : _}Modifiers`, { number: g, trim: a } = t[l] || EMPTY_OBJ;
    a && (n = i.map((b) => isString(b) ? b.trim() : b)), g && (n = i.map(looseToNumber));
  }
  let r, o = t[r = toHandlerKey(u)] || // also try camelCase event handler (#2249)
  t[r = toHandlerKey(camelize(u))];
  !o && e && (o = t[r = toHandlerKey(hyphenate(u))]), o && callWithAsyncErrorHandling(
    o,
    s,
    6,
    n
  );
  const c = t[r + "Once"];
  if (c) {
    if (!s.emitted)
      s.emitted = {};
    else if (s.emitted[r])
      return;
    s.emitted[r] = !0, callWithAsyncErrorHandling(
      c,
      s,
      6,
      n
    );
  }
}
function normalizeEmitsOptions(s, u, i = !1) {
  const t = u.emitsCache, n = t.get(s);
  if (n !== void 0)
    return n;
  const e = s.emits;
  let _ = {}, r = !1;
  if (!isFunction(s)) {
    const o = (c) => {
      const l = normalizeEmitsOptions(c, u, !0);
      l && (r = !0, extend(_, l));
    };
    !i && u.mixins.length && u.mixins.forEach(o), s.extends && o(s.extends), s.mixins && s.mixins.forEach(o);
  }
  return !e && !r ? (isObject(s) && t.set(s, null), null) : (isArray(e) ? e.forEach((o) => _[o] = null) : extend(_, e), isObject(s) && t.set(s, _), _);
}
function isEmitListener(s, u) {
  return !s || !isOn(u) ? !1 : (u = u.slice(2).replace(/Once$/, ""), hasOwn(s, u[0].toLowerCase() + u.slice(1)) || hasOwn(s, hyphenate(u)) || hasOwn(s, u));
}
let currentRenderingInstance = null, currentScopeId = null;
function setCurrentRenderingInstance(s) {
  const u = currentRenderingInstance;
  return currentRenderingInstance = s, currentScopeId = s && s.type.__scopeId || null, u;
}
function pushScopeId(s) {
  currentScopeId = s;
}
function popScopeId() {
  currentScopeId = null;
}
const withScopeId = (s) => withCtx;
function withCtx(s, u = currentRenderingInstance, i) {
  if (!u || s._n)
    return s;
  const t = (...n) => {
    t._d && setBlockTracking(-1);
    const e = setCurrentRenderingInstance(u);
    let _;
    try {
      _ = s(...n);
    } finally {
      setCurrentRenderingInstance(e), t._d && setBlockTracking(1);
    }
    return _;
  };
  return t._n = !0, t._c = !0, t._d = !0, t;
}
function markAttrsAccessed() {
}
function renderComponentRoot(s) {
  const {
    type: u,
    vnode: i,
    proxy: t,
    withProxy: n,
    props: e,
    propsOptions: [_],
    slots: r,
    attrs: o,
    emit: c,
    render: l,
    renderCache: g,
    data: a,
    setupState: b,
    ctx: V,
    inheritAttrs: y
  } = s;
  let C, E;
  const v = setCurrentRenderingInstance(s);
  try {
    if (i.shapeFlag & 4) {
      const L = n || t;
      C = normalizeVNode(
        l.call(
          L,
          L,
          g,
          e,
          b,
          a,
          V
        )
      ), E = o;
    } else {
      const L = u;
      C = normalizeVNode(
        L.length > 1 ? L(
          e,
          { attrs: o, slots: r, emit: c }
        ) : L(
          e,
          null
          /* we know it doesn't need it */
        )
      ), E = u.props ? o : getFunctionalFallthrough(o);
    }
  } catch (L) {
    blockStack.length = 0, handleError(L, s, 1), C = createVNode(Comment);
  }
  let m = C;
  if (E && y !== !1) {
    const L = Object.keys(E), { shapeFlag: A } = m;
    L.length && A & 7 && (_ && L.some(isModelListener) && (E = filterModelListeners(
      E,
      _
    )), m = cloneVNode(m, E));
  }
  return i.dirs && (m = cloneVNode(m), m.dirs = m.dirs ? m.dirs.concat(i.dirs) : i.dirs), i.transition && (m.transition = i.transition), C = m, setCurrentRenderingInstance(v), C;
}
function filterSingleRoot(s) {
  let u;
  for (let i = 0; i < s.length; i++) {
    const t = s[i];
    if (isVNode(t)) {
      if (t.type !== Comment || t.children === "v-if") {
        if (u)
          return;
        u = t;
      }
    } else
      return;
  }
  return u;
}
const getFunctionalFallthrough = (s) => {
  let u;
  for (const i in s)
    (i === "class" || i === "style" || isOn(i)) && ((u || (u = {}))[i] = s[i]);
  return u;
}, filterModelListeners = (s, u) => {
  const i = {};
  for (const t in s)
    (!isModelListener(t) || !(t.slice(9) in u)) && (i[t] = s[t]);
  return i;
};
function shouldUpdateComponent(s, u, i) {
  const { props: t, children: n, component: e } = s, { props: _, children: r, patchFlag: o } = u, c = e.emitsOptions;
  if (u.dirs || u.transition)
    return !0;
  if (i && o >= 0) {
    if (o & 1024)
      return !0;
    if (o & 16)
      return t ? hasPropsChanged(t, _, c) : !!_;
    if (o & 8) {
      const l = u.dynamicProps;
      for (let g = 0; g < l.length; g++) {
        const a = l[g];
        if (_[a] !== t[a] && !isEmitListener(c, a))
          return !0;
      }
    }
  } else
    return (n || r) && (!r || !r.$stable) ? !0 : t === _ ? !1 : t ? _ ? hasPropsChanged(t, _, c) : !0 : !!_;
  return !1;
}
function hasPropsChanged(s, u, i) {
  const t = Object.keys(u);
  if (t.length !== Object.keys(s).length)
    return !0;
  for (let n = 0; n < t.length; n++) {
    const e = t[n];
    if (u[e] !== s[e] && !isEmitListener(i, e))
      return !0;
  }
  return !1;
}
function updateHOCHostEl({ vnode: s, parent: u }, i) {
  for (; u && u.subTree === s; )
    (s = u.vnode).el = i, u = u.parent;
}
const isSuspense = (s) => s.__isSuspense, SuspenseImpl = {
  name: "Suspense",
  // In order to make Suspense tree-shakable, we need to avoid importing it
  // directly in the renderer. The renderer checks for the __isSuspense flag
  // on a vnode's type and calls the `process` method, passing in renderer
  // internals.
  __isSuspense: !0,
  process(s, u, i, t, n, e, _, r, o, c) {
    s == null ? mountSuspense(
      u,
      i,
      t,
      n,
      e,
      _,
      r,
      o,
      c
    ) : patchSuspense(
      s,
      u,
      i,
      t,
      n,
      _,
      r,
      o,
      c
    );
  },
  hydrate: hydrateSuspense,
  create: createSuspenseBoundary,
  normalize: normalizeSuspenseChildren
}, Suspense = SuspenseImpl;
function triggerEvent(s, u) {
  const i = s.props && s.props[u];
  isFunction(i) && i();
}
function mountSuspense(s, u, i, t, n, e, _, r, o) {
  const {
    p: c,
    o: { createElement: l }
  } = o, g = l("div"), a = s.suspense = createSuspenseBoundary(
    s,
    n,
    t,
    u,
    g,
    i,
    e,
    _,
    r,
    o
  );
  c(
    null,
    a.pendingBranch = s.ssContent,
    g,
    null,
    t,
    a,
    e,
    _
  ), a.deps > 0 ? (triggerEvent(s, "onPending"), triggerEvent(s, "onFallback"), c(
    null,
    s.ssFallback,
    u,
    i,
    t,
    null,
    // fallback tree will not have suspense context
    e,
    _
  ), setActiveBranch(a, s.ssFallback)) : a.resolve(!1, !0);
}
function patchSuspense(s, u, i, t, n, e, _, r, { p: o, um: c, o: { createElement: l } }) {
  const g = u.suspense = s.suspense;
  g.vnode = u, u.el = s.el;
  const a = u.ssContent, b = u.ssFallback, { activeBranch: V, pendingBranch: y, isInFallback: C, isHydrating: E } = g;
  if (y)
    g.pendingBranch = a, isSameVNodeType(a, y) ? (o(
      y,
      a,
      g.hiddenContainer,
      null,
      n,
      g,
      e,
      _,
      r
    ), g.deps <= 0 ? g.resolve() : C && (o(
      V,
      b,
      i,
      t,
      n,
      null,
      // fallback tree will not have suspense context
      e,
      _,
      r
    ), setActiveBranch(g, b))) : (g.pendingId++, E ? (g.isHydrating = !1, g.activeBranch = y) : c(y, n, g), g.deps = 0, g.effects.length = 0, g.hiddenContainer = l("div"), C ? (o(
      null,
      a,
      g.hiddenContainer,
      null,
      n,
      g,
      e,
      _,
      r
    ), g.deps <= 0 ? g.resolve() : (o(
      V,
      b,
      i,
      t,
      n,
      null,
      // fallback tree will not have suspense context
      e,
      _,
      r
    ), setActiveBranch(g, b))) : V && isSameVNodeType(a, V) ? (o(
      V,
      a,
      i,
      t,
      n,
      g,
      e,
      _,
      r
    ), g.resolve(!0)) : (o(
      null,
      a,
      g.hiddenContainer,
      null,
      n,
      g,
      e,
      _,
      r
    ), g.deps <= 0 && g.resolve()));
  else if (V && isSameVNodeType(a, V))
    o(
      V,
      a,
      i,
      t,
      n,
      g,
      e,
      _,
      r
    ), setActiveBranch(g, a);
  else if (triggerEvent(u, "onPending"), g.pendingBranch = a, g.pendingId++, o(
    null,
    a,
    g.hiddenContainer,
    null,
    n,
    g,
    e,
    _,
    r
  ), g.deps <= 0)
    g.resolve();
  else {
    const { timeout: v, pendingId: m } = g;
    v > 0 ? setTimeout(() => {
      g.pendingId === m && g.fallback(b);
    }, v) : v === 0 && g.fallback(b);
  }
}
function createSuspenseBoundary(s, u, i, t, n, e, _, r, o, c, l = !1) {
  const {
    p: g,
    m: a,
    um: b,
    n: V,
    o: { parentNode: y, remove: C }
  } = c;
  let E;
  const v = isVNodeSuspensible(s);
  v && u != null && u.pendingBranch && (E = u.pendingId, u.deps++);
  const m = s.props ? toNumber(s.props.timeout) : void 0, L = {
    vnode: s,
    parent: u,
    parentComponent: i,
    isSVG: _,
    container: t,
    hiddenContainer: n,
    anchor: e,
    deps: 0,
    pendingId: 0,
    timeout: typeof m == "number" ? m : -1,
    activeBranch: null,
    pendingBranch: null,
    isInFallback: !0,
    isHydrating: l,
    isUnmounted: !1,
    effects: [],
    resolve(A = !1, K = !1) {
      const {
        vnode: T,
        activeBranch: w,
        pendingBranch: f,
        pendingId: R,
        effects: O,
        parentComponent: W,
        container: N
      } = L;
      if (L.isHydrating)
        L.isHydrating = !1;
      else if (!A) {
        const I = w && f.transition && f.transition.mode === "out-in";
        I && (w.transition.afterLeave = () => {
          R === L.pendingId && a(f, N, x, 0);
        });
        let { anchor: x } = L;
        w && (x = V(w), b(w, W, L, !0)), I || a(f, N, x, 0);
      }
      setActiveBranch(L, f), L.pendingBranch = null, L.isInFallback = !1;
      let $ = L.parent, S = !1;
      for (; $; ) {
        if ($.pendingBranch) {
          $.effects.push(...O), S = !0;
          break;
        }
        $ = $.parent;
      }
      S || queuePostFlushCb(O), L.effects = [], v && u && u.pendingBranch && E === u.pendingId && (u.deps--, u.deps === 0 && !K && u.resolve()), triggerEvent(T, "onResolve");
    },
    fallback(A) {
      if (!L.pendingBranch)
        return;
      const { vnode: K, activeBranch: T, parentComponent: w, container: f, isSVG: R } = L;
      triggerEvent(K, "onFallback");
      const O = V(T), W = () => {
        L.isInFallback && (g(
          null,
          A,
          f,
          O,
          w,
          null,
          // fallback tree will not have suspense context
          R,
          r,
          o
        ), setActiveBranch(L, A));
      }, N = A.transition && A.transition.mode === "out-in";
      N && (T.transition.afterLeave = W), L.isInFallback = !0, b(
        T,
        w,
        null,
        // no suspense so unmount hooks fire now
        !0
        // shouldRemove
      ), N || W();
    },
    move(A, K, T) {
      L.activeBranch && a(L.activeBranch, A, K, T), L.container = A;
    },
    next() {
      return L.activeBranch && V(L.activeBranch);
    },
    registerDep(A, K) {
      const T = !!L.pendingBranch;
      T && L.deps++;
      const w = A.vnode.el;
      A.asyncDep.catch((f) => {
        handleError(f, A, 0);
      }).then((f) => {
        if (A.isUnmounted || L.isUnmounted || L.pendingId !== A.suspenseId)
          return;
        A.asyncResolved = !0;
        const { vnode: R } = A;
        handleSetupResult(A, f, !1), w && (R.el = w);
        const O = !w && A.subTree.el;
        K(
          A,
          R,
          // component may have been moved before resolve.
          // if this is not a hydration, instance.subTree will be the comment
          // placeholder.
          y(w || A.subTree.el),
          // anchor will not be used if this is hydration, so only need to
          // consider the comment placeholder case.
          w ? null : V(A.subTree),
          L,
          _,
          o
        ), O && C(O), updateHOCHostEl(A, R.el), T && --L.deps === 0 && L.resolve();
      });
    },
    unmount(A, K) {
      L.isUnmounted = !0, L.activeBranch && b(
        L.activeBranch,
        i,
        A,
        K
      ), L.pendingBranch && b(
        L.pendingBranch,
        i,
        A,
        K
      );
    }
  };
  return L;
}
function hydrateSuspense(s, u, i, t, n, e, _, r, o) {
  const c = u.suspense = createSuspenseBoundary(
    u,
    t,
    i,
    s.parentNode,
    document.createElement("div"),
    null,
    n,
    e,
    _,
    r,
    !0
    /* hydrating */
  ), l = o(
    s,
    c.pendingBranch = u.ssContent,
    i,
    c,
    e,
    _
  );
  return c.deps === 0 && c.resolve(!1, !0), l;
}
function normalizeSuspenseChildren(s) {
  const { shapeFlag: u, children: i } = s, t = u & 32;
  s.ssContent = normalizeSuspenseSlot(
    t ? i.default : i
  ), s.ssFallback = t ? normalizeSuspenseSlot(i.fallback) : createVNode(Comment);
}
function normalizeSuspenseSlot(s) {
  let u;
  if (isFunction(s)) {
    const i = isBlockTreeEnabled && s._c;
    i && (s._d = !1, openBlock()), s = s(), i && (s._d = !0, u = currentBlock, closeBlock());
  }
  return isArray(s) && (s = filterSingleRoot(s)), s = normalizeVNode(s), u && !s.dynamicChildren && (s.dynamicChildren = u.filter((i) => i !== s)), s;
}
function queueEffectWithSuspense(s, u) {
  u && u.pendingBranch ? isArray(s) ? u.effects.push(...s) : u.effects.push(s) : queuePostFlushCb(s);
}
function setActiveBranch(s, u) {
  s.activeBranch = u;
  const { vnode: i, parentComponent: t } = s, n = i.el = u.el;
  t && t.subTree === i && (t.vnode.el = n, updateHOCHostEl(t, n));
}
function isVNodeSuspensible(s) {
  var u;
  return ((u = s.props) == null ? void 0 : u.suspensible) != null && s.props.suspensible !== !1;
}
function watchEffect(s, u) {
  return doWatch(s, null, u);
}
function watchPostEffect(s, u) {
  return doWatch(
    s,
    null,
    { flush: "post" }
  );
}
function watchSyncEffect(s, u) {
  return doWatch(
    s,
    null,
    { flush: "sync" }
  );
}
const INITIAL_WATCHER_VALUE = {};
function watch(s, u, i) {
  return doWatch(s, u, i);
}
function doWatch(s, u, { immediate: i, deep: t, flush: n, onTrack: e, onTrigger: _ } = EMPTY_OBJ) {
  var r;
  const o = getCurrentScope() === ((r = currentInstance) == null ? void 0 : r.scope) ? currentInstance : null;
  let c, l = !1, g = !1;
  if (isRef(s) ? (c = () => s.value, l = isShallow(s)) : isReactive(s) ? (c = () => s, t = !0) : isArray(s) ? (g = !0, l = s.some((L) => isReactive(L) || isShallow(L)), c = () => s.map((L) => {
    if (isRef(L))
      return L.value;
    if (isReactive(L))
      return traverse(L);
    if (isFunction(L))
      return callWithErrorHandling(L, o, 2);
  })) : isFunction(s) ? u ? c = () => callWithErrorHandling(s, o, 2) : c = () => {
    if (!(o && o.isUnmounted))
      return a && a(), callWithAsyncErrorHandling(
        s,
        o,
        3,
        [b]
      );
  } : c = NOOP, u && t) {
    const L = c;
    c = () => traverse(L());
  }
  let a, b = (L) => {
    a = v.onStop = () => {
      callWithErrorHandling(L, o, 4);
    };
  }, V;
  if (isInSSRComponentSetup)
    if (b = NOOP, u ? i && callWithAsyncErrorHandling(u, o, 3, [
      c(),
      g ? [] : void 0,
      b
    ]) : c(), n === "sync") {
      const L = useSSRContext();
      V = L.__watcherHandles || (L.__watcherHandles = []);
    } else
      return NOOP;
  let y = g ? new Array(s.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const C = () => {
    if (v.active)
      if (u) {
        const L = v.run();
        (t || l || (g ? L.some(
          (A, K) => hasChanged(A, y[K])
        ) : hasChanged(L, y))) && (a && a(), callWithAsyncErrorHandling(u, o, 3, [
          L,
          // pass undefined as the old value when it's changed for the first time
          y === INITIAL_WATCHER_VALUE ? void 0 : g && y[0] === INITIAL_WATCHER_VALUE ? [] : y,
          b
        ]), y = L);
      } else
        v.run();
  };
  C.allowRecurse = !!u;
  let E;
  n === "sync" ? E = C : n === "post" ? E = () => queuePostRenderEffect(C, o && o.suspense) : (C.pre = !0, o && (C.id = o.uid), E = () => queueJob(C));
  const v = new ReactiveEffect(c, E);
  u ? i ? C() : y = v.run() : n === "post" ? queuePostRenderEffect(
    v.run.bind(v),
    o && o.suspense
  ) : v.run();
  const m = () => {
    v.stop(), o && o.scope && remove(o.scope.effects, v);
  };
  return V && V.push(m), m;
}
function instanceWatch(s, u, i) {
  const t = this.proxy, n = isString(s) ? s.includes(".") ? createPathGetter(t, s) : () => t[s] : s.bind(t, t);
  let e;
  isFunction(u) ? e = u : (e = u.handler, i = u);
  const _ = currentInstance;
  setCurrentInstance(this);
  const r = doWatch(n, e.bind(t), i);
  return _ ? setCurrentInstance(_) : unsetCurrentInstance(), r;
}
function createPathGetter(s, u) {
  const i = u.split(".");
  return () => {
    let t = s;
    for (let n = 0; n < i.length && t; n++)
      t = t[i[n]];
    return t;
  };
}
function traverse(s, u) {
  if (!isObject(s) || s.__v_skip || (u = u || /* @__PURE__ */ new Set(), u.has(s)))
    return s;
  if (u.add(s), isRef(s))
    traverse(s.value, u);
  else if (isArray(s))
    for (let i = 0; i < s.length; i++)
      traverse(s[i], u);
  else if (isSet(s) || isMap(s))
    s.forEach((i) => {
      traverse(i, u);
    });
  else if (isPlainObject(s))
    for (const i in s)
      traverse(s[i], u);
  return s;
}
function withDirectives(s, u) {
  const i = currentRenderingInstance;
  if (i === null)
    return s;
  const t = getExposeProxy(i) || i.proxy, n = s.dirs || (s.dirs = []);
  for (let e = 0; e < u.length; e++) {
    let [_, r, o, c = EMPTY_OBJ] = u[e];
    _ && (isFunction(_) && (_ = {
      mounted: _,
      updated: _
    }), _.deep && traverse(r), n.push({
      dir: _,
      instance: t,
      value: r,
      oldValue: void 0,
      arg: o,
      modifiers: c
    }));
  }
  return s;
}
function invokeDirectiveHook(s, u, i, t) {
  const n = s.dirs, e = u && u.dirs;
  for (let _ = 0; _ < n.length; _++) {
    const r = n[_];
    e && (r.oldValue = e[_].value);
    let o = r.dir[t];
    o && (pauseTracking(), callWithAsyncErrorHandling(o, i, 8, [
      s.el,
      r,
      s,
      u
    ]), resetTracking());
  }
}
function useTransitionState() {
  const s = {
    isMounted: !1,
    isLeaving: !1,
    isUnmounting: !1,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  return onMounted(() => {
    s.isMounted = !0;
  }), onBeforeUnmount(() => {
    s.isUnmounting = !0;
  }), s;
}
const TransitionHookValidator = [Function, Array], BaseTransitionPropsValidators = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: TransitionHookValidator,
  onEnter: TransitionHookValidator,
  onAfterEnter: TransitionHookValidator,
  onEnterCancelled: TransitionHookValidator,
  // leave
  onBeforeLeave: TransitionHookValidator,
  onLeave: TransitionHookValidator,
  onAfterLeave: TransitionHookValidator,
  onLeaveCancelled: TransitionHookValidator,
  // appear
  onBeforeAppear: TransitionHookValidator,
  onAppear: TransitionHookValidator,
  onAfterAppear: TransitionHookValidator,
  onAppearCancelled: TransitionHookValidator
}, BaseTransitionImpl = {
  name: "BaseTransition",
  props: BaseTransitionPropsValidators,
  setup(s, { slots: u }) {
    const i = getCurrentInstance(), t = useTransitionState();
    let n;
    return () => {
      const e = u.default && getTransitionRawChildren(u.default(), !0);
      if (!e || !e.length)
        return;
      let _ = e[0];
      if (e.length > 1) {
        for (const y of e)
          if (y.type !== Comment) {
            _ = y;
            break;
          }
      }
      const r = toRaw(s), { mode: o } = r;
      if (t.isLeaving)
        return emptyPlaceholder(_);
      const c = getKeepAliveChild(_);
      if (!c)
        return emptyPlaceholder(_);
      const l = resolveTransitionHooks(
        c,
        r,
        t,
        i
      );
      setTransitionHooks(c, l);
      const g = i.subTree, a = g && getKeepAliveChild(g);
      let b = !1;
      const { getTransitionKey: V } = c.type;
      if (V) {
        const y = V();
        n === void 0 ? n = y : y !== n && (n = y, b = !0);
      }
      if (a && a.type !== Comment && (!isSameVNodeType(c, a) || b)) {
        const y = resolveTransitionHooks(
          a,
          r,
          t,
          i
        );
        if (setTransitionHooks(a, y), o === "out-in")
          return t.isLeaving = !0, y.afterLeave = () => {
            t.isLeaving = !1, i.update.active !== !1 && i.update();
          }, emptyPlaceholder(_);
        o === "in-out" && c.type !== Comment && (y.delayLeave = (C, E, v) => {
          const m = getLeavingNodesForType(
            t,
            a
          );
          m[String(a.key)] = a, C._leaveCb = () => {
            E(), C._leaveCb = void 0, delete l.delayedLeave;
          }, l.delayedLeave = v;
        });
      }
      return _;
    };
  }
}, BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(s, u) {
  const { leavingVNodes: i } = s;
  let t = i.get(u.type);
  return t || (t = /* @__PURE__ */ Object.create(null), i.set(u.type, t)), t;
}
function resolveTransitionHooks(s, u, i, t) {
  const {
    appear: n,
    mode: e,
    persisted: _ = !1,
    onBeforeEnter: r,
    onEnter: o,
    onAfterEnter: c,
    onEnterCancelled: l,
    onBeforeLeave: g,
    onLeave: a,
    onAfterLeave: b,
    onLeaveCancelled: V,
    onBeforeAppear: y,
    onAppear: C,
    onAfterAppear: E,
    onAppearCancelled: v
  } = u, m = String(s.key), L = getLeavingNodesForType(i, s), A = (w, f) => {
    w && callWithAsyncErrorHandling(
      w,
      t,
      9,
      f
    );
  }, K = (w, f) => {
    const R = f[1];
    A(w, f), isArray(w) ? w.every((O) => O.length <= 1) && R() : w.length <= 1 && R();
  }, T = {
    mode: e,
    persisted: _,
    beforeEnter(w) {
      let f = r;
      if (!i.isMounted)
        if (n)
          f = y || r;
        else
          return;
      w._leaveCb && w._leaveCb(
        !0
        /* cancelled */
      );
      const R = L[m];
      R && isSameVNodeType(s, R) && R.el._leaveCb && R.el._leaveCb(), A(f, [w]);
    },
    enter(w) {
      let f = o, R = c, O = l;
      if (!i.isMounted)
        if (n)
          f = C || o, R = E || c, O = v || l;
        else
          return;
      let W = !1;
      const N = w._enterCb = ($) => {
        W || (W = !0, $ ? A(O, [w]) : A(R, [w]), T.delayedLeave && T.delayedLeave(), w._enterCb = void 0);
      };
      f ? K(f, [w, N]) : N();
    },
    leave(w, f) {
      const R = String(s.key);
      if (w._enterCb && w._enterCb(
        !0
        /* cancelled */
      ), i.isUnmounting)
        return f();
      A(g, [w]);
      let O = !1;
      const W = w._leaveCb = (N) => {
        O || (O = !0, f(), N ? A(V, [w]) : A(b, [w]), w._leaveCb = void 0, L[R] === s && delete L[R]);
      };
      L[R] = s, a ? K(a, [w, W]) : W();
    },
    clone(w) {
      return resolveTransitionHooks(w, u, i, t);
    }
  };
  return T;
}
function emptyPlaceholder(s) {
  if (isKeepAlive(s))
    return s = cloneVNode(s), s.children = null, s;
}
function getKeepAliveChild(s) {
  return isKeepAlive(s) ? s.children ? s.children[0] : void 0 : s;
}
function setTransitionHooks(s, u) {
  s.shapeFlag & 6 && s.component ? setTransitionHooks(s.component.subTree, u) : s.shapeFlag & 128 ? (s.ssContent.transition = u.clone(s.ssContent), s.ssFallback.transition = u.clone(s.ssFallback)) : s.transition = u;
}
function getTransitionRawChildren(s, u = !1, i) {
  let t = [], n = 0;
  for (let e = 0; e < s.length; e++) {
    let _ = s[e];
    const r = i == null ? _.key : String(i) + String(_.key != null ? _.key : e);
    _.type === Fragment ? (_.patchFlag & 128 && n++, t = t.concat(
      getTransitionRawChildren(_.children, u, r)
    )) : (u || _.type !== Comment) && t.push(r != null ? cloneVNode(_, { key: r }) : _);
  }
  if (n > 1)
    for (let e = 0; e < t.length; e++)
      t[e].patchFlag = -2;
  return t;
}
function defineComponent(s, u) {
  return isFunction(s) ? (
    // #8326: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    /* @__PURE__ */ (() => extend({ name: s.name }, u, { setup: s }))()
  ) : s;
}
const isAsyncWrapper = (s) => !!s.type.__asyncLoader;
function defineAsyncComponent(s) {
  isFunction(s) && (s = { loader: s });
  const {
    loader: u,
    loadingComponent: i,
    errorComponent: t,
    delay: n = 200,
    timeout: e,
    // undefined = never times out
    suspensible: _ = !0,
    onError: r
  } = s;
  let o = null, c, l = 0;
  const g = () => (l++, o = null, a()), a = () => {
    let b;
    return o || (b = o = u().catch((V) => {
      if (V = V instanceof Error ? V : new Error(String(V)), r)
        return new Promise((y, C) => {
          r(V, () => y(g()), () => C(V), l + 1);
        });
      throw V;
    }).then((V) => b !== o && o ? o : (V && (V.__esModule || V[Symbol.toStringTag] === "Module") && (V = V.default), c = V, V)));
  };
  return defineComponent({
    name: "AsyncComponentWrapper",
    __asyncLoader: a,
    get __asyncResolved() {
      return c;
    },
    setup() {
      const b = currentInstance;
      if (c)
        return () => createInnerComp(c, b);
      const V = (v) => {
        o = null, handleError(
          v,
          b,
          13,
          !t
          /* do not throw in dev if user provided error component */
        );
      };
      if (_ && b.suspense || isInSSRComponentSetup)
        return a().then((v) => () => createInnerComp(v, b)).catch((v) => (V(v), () => t ? createVNode(t, {
          error: v
        }) : null));
      const y = ref(!1), C = ref(), E = ref(!!n);
      return n && setTimeout(() => {
        E.value = !1;
      }, n), e != null && setTimeout(() => {
        if (!y.value && !C.value) {
          const v = new Error(
            `Async component timed out after ${e}ms.`
          );
          V(v), C.value = v;
        }
      }, e), a().then(() => {
        y.value = !0, b.parent && isKeepAlive(b.parent.vnode) && queueJob(b.parent.update);
      }).catch((v) => {
        V(v), C.value = v;
      }), () => {
        if (y.value && c)
          return createInnerComp(c, b);
        if (C.value && t)
          return createVNode(t, {
            error: C.value
          });
        if (i && !E.value)
          return createVNode(i);
      };
    }
  });
}
function createInnerComp(s, u) {
  const { ref: i, props: t, children: n, ce: e } = u.vnode, _ = createVNode(s, t, n);
  return _.ref = i, _.ce = e, delete u.vnode.ce, _;
}
const isKeepAlive = (s) => s.type.__isKeepAlive, KeepAliveImpl = {
  name: "KeepAlive",
  // Marker for special handling inside the renderer. We are not using a ===
  // check directly on KeepAlive in the renderer, because importing it directly
  // would prevent it from being tree-shaken.
  __isKeepAlive: !0,
  props: {
    include: [String, RegExp, Array],
    exclude: [String, RegExp, Array],
    max: [String, Number]
  },
  setup(s, { slots: u }) {
    const i = getCurrentInstance(), t = i.ctx;
    if (!t.renderer)
      return () => {
        const v = u.default && u.default();
        return v && v.length === 1 ? v[0] : v;
      };
    const n = /* @__PURE__ */ new Map(), e = /* @__PURE__ */ new Set();
    let _ = null;
    const r = i.suspense, {
      renderer: {
        p: o,
        m: c,
        um: l,
        o: { createElement: g }
      }
    } = t, a = g("div");
    t.activate = (v, m, L, A, K) => {
      const T = v.component;
      c(v, m, L, 0, r), o(
        T.vnode,
        v,
        m,
        L,
        T,
        r,
        A,
        v.slotScopeIds,
        K
      ), queuePostRenderEffect(() => {
        T.isDeactivated = !1, T.a && invokeArrayFns(T.a);
        const w = v.props && v.props.onVnodeMounted;
        w && invokeVNodeHook(w, T.parent, v);
      }, r);
    }, t.deactivate = (v) => {
      const m = v.component;
      c(v, a, null, 1, r), queuePostRenderEffect(() => {
        m.da && invokeArrayFns(m.da);
        const L = v.props && v.props.onVnodeUnmounted;
        L && invokeVNodeHook(L, m.parent, v), m.isDeactivated = !0;
      }, r);
    };
    function b(v) {
      resetShapeFlag(v), l(v, i, r, !0);
    }
    function V(v) {
      n.forEach((m, L) => {
        const A = getComponentName(m.type);
        A && (!v || !v(A)) && y(L);
      });
    }
    function y(v) {
      const m = n.get(v);
      !_ || !isSameVNodeType(m, _) ? b(m) : _ && resetShapeFlag(_), n.delete(v), e.delete(v);
    }
    watch(
      () => [s.include, s.exclude],
      ([v, m]) => {
        v && V((L) => matches(v, L)), m && V((L) => !matches(m, L));
      },
      // prune post-render after `current` has been updated
      { flush: "post", deep: !0 }
    );
    let C = null;
    const E = () => {
      C != null && n.set(C, getInnerChild(i.subTree));
    };
    return onMounted(E), onUpdated(E), onBeforeUnmount(() => {
      n.forEach((v) => {
        const { subTree: m, suspense: L } = i, A = getInnerChild(m);
        if (v.type === A.type && v.key === A.key) {
          resetShapeFlag(A);
          const K = A.component.da;
          K && queuePostRenderEffect(K, L);
          return;
        }
        b(v);
      });
    }), () => {
      if (C = null, !u.default)
        return null;
      const v = u.default(), m = v[0];
      if (v.length > 1)
        return _ = null, v;
      if (!isVNode(m) || !(m.shapeFlag & 4) && !(m.shapeFlag & 128))
        return _ = null, m;
      let L = getInnerChild(m);
      const A = L.type, K = getComponentName(
        isAsyncWrapper(L) ? L.type.__asyncResolved || {} : A
      ), { include: T, exclude: w, max: f } = s;
      if (T && (!K || !matches(T, K)) || w && K && matches(w, K))
        return _ = L, m;
      const R = L.key == null ? A : L.key, O = n.get(R);
      return L.el && (L = cloneVNode(L), m.shapeFlag & 128 && (m.ssContent = L)), C = R, O ? (L.el = O.el, L.component = O.component, L.transition && setTransitionHooks(L, L.transition), L.shapeFlag |= 512, e.delete(R), e.add(R)) : (e.add(R), f && e.size > parseInt(f, 10) && y(e.values().next().value)), L.shapeFlag |= 256, _ = L, isSuspense(m.type) ? m : L;
    };
  }
}, KeepAlive = KeepAliveImpl;
function matches(s, u) {
  return isArray(s) ? s.some((i) => matches(i, u)) : isString(s) ? s.split(",").includes(u) : isRegExp(s) ? s.test(u) : !1;
}
function onActivated(s, u) {
  registerKeepAliveHook(s, "a", u);
}
function onDeactivated(s, u) {
  registerKeepAliveHook(s, "da", u);
}
function registerKeepAliveHook(s, u, i = currentInstance) {
  const t = s.__wdc || (s.__wdc = () => {
    let n = i;
    for (; n; ) {
      if (n.isDeactivated)
        return;
      n = n.parent;
    }
    return s();
  });
  if (injectHook(u, t, i), i) {
    let n = i.parent;
    for (; n && n.parent; )
      isKeepAlive(n.parent.vnode) && injectToKeepAliveRoot(t, u, i, n), n = n.parent;
  }
}
function injectToKeepAliveRoot(s, u, i, t) {
  const n = injectHook(
    u,
    s,
    t,
    !0
    /* prepend */
  );
  onUnmounted(() => {
    remove(t[u], n);
  }, i);
}
function resetShapeFlag(s) {
  s.shapeFlag &= -257, s.shapeFlag &= -513;
}
function getInnerChild(s) {
  return s.shapeFlag & 128 ? s.ssContent : s;
}
function injectHook(s, u, i = currentInstance, t = !1) {
  if (i) {
    const n = i[s] || (i[s] = []), e = u.__weh || (u.__weh = (..._) => {
      if (i.isUnmounted)
        return;
      pauseTracking(), setCurrentInstance(i);
      const r = callWithAsyncErrorHandling(u, i, s, _);
      return unsetCurrentInstance(), resetTracking(), r;
    });
    return t ? n.unshift(e) : n.push(e), e;
  }
}
const createHook = (s) => (u, i = currentInstance) => (
  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)
  (!isInSSRComponentSetup || s === "sp") && injectHook(s, (...t) => u(...t), i)
), onBeforeMount = createHook("bm"), onMounted = createHook("m"), onBeforeUpdate = createHook("bu"), onUpdated = createHook("u"), onBeforeUnmount = createHook("bum"), onUnmounted = createHook("um"), onServerPrefetch = createHook("sp"), onRenderTriggered = createHook(
  "rtg"
), onRenderTracked = createHook(
  "rtc"
);
function onErrorCaptured(s, u = currentInstance) {
  injectHook("ec", s, u);
}
const COMPONENTS = "components", DIRECTIVES = "directives";
function resolveComponent(s, u) {
  return resolveAsset(COMPONENTS, s, !0, u) || s;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(s) {
  return isString(s) ? resolveAsset(COMPONENTS, s, !1) || s : s || NULL_DYNAMIC_COMPONENT;
}
function resolveDirective(s) {
  return resolveAsset(DIRECTIVES, s);
}
function resolveAsset(s, u, i = !0, t = !1) {
  const n = currentRenderingInstance || currentInstance;
  if (n) {
    const e = n.type;
    if (s === COMPONENTS) {
      const r = getComponentName(
        e,
        !1
        /* do not include inferred name to avoid breaking existing code */
      );
      if (r && (r === u || r === camelize(u) || r === capitalize(camelize(u))))
        return e;
    }
    const _ = (
      // local registration
      // check instance[type] first which is resolved for options API
      resolve(n[s] || e[s], u) || // global registration
      resolve(n.appContext[s], u)
    );
    return !_ && t ? e : _;
  }
}
function resolve(s, u) {
  return s && (s[u] || s[camelize(u)] || s[capitalize(camelize(u))]);
}
function renderList(s, u, i, t) {
  let n;
  const e = i && i[t];
  if (isArray(s) || isString(s)) {
    n = new Array(s.length);
    for (let _ = 0, r = s.length; _ < r; _++)
      n[_] = u(s[_], _, void 0, e && e[_]);
  } else if (typeof s == "number") {
    n = new Array(s);
    for (let _ = 0; _ < s; _++)
      n[_] = u(_ + 1, _, void 0, e && e[_]);
  } else if (isObject(s))
    if (s[Symbol.iterator])
      n = Array.from(
        s,
        (_, r) => u(_, r, void 0, e && e[r])
      );
    else {
      const _ = Object.keys(s);
      n = new Array(_.length);
      for (let r = 0, o = _.length; r < o; r++) {
        const c = _[r];
        n[r] = u(s[c], c, r, e && e[r]);
      }
    }
  else
    n = [];
  return i && (i[t] = n), n;
}
function createSlots(s, u) {
  for (let i = 0; i < u.length; i++) {
    const t = u[i];
    if (isArray(t))
      for (let n = 0; n < t.length; n++)
        s[t[n].name] = t[n].fn;
    else
      t && (s[t.name] = t.key ? (...n) => {
        const e = t.fn(...n);
        return e && (e.key = t.key), e;
      } : t.fn);
  }
  return s;
}
function renderSlot(s, u, i = {}, t, n) {
  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE)
    return u !== "default" && (i.name = u), createVNode("slot", i, t && t());
  let e = s[u];
  e && e._c && (e._d = !1), openBlock();
  const _ = e && ensureValidVNode(e(i)), r = createBlock(
    Fragment,
    {
      key: i.key || // slot content array of a dynamic conditional slot may have a branch
      // key attached in the `createSlots` helper, respect that
      _ && _.key || `_${u}`
    },
    _ || (t ? t() : []),
    _ && s._ === 1 ? 64 : -2
  );
  return !n && r.scopeId && (r.slotScopeIds = [r.scopeId + "-s"]), e && e._c && (e._d = !0), r;
}
function ensureValidVNode(s) {
  return s.some((u) => isVNode(u) ? !(u.type === Comment || u.type === Fragment && !ensureValidVNode(u.children)) : !0) ? s : null;
}
function toHandlers(s, u) {
  const i = {};
  for (const t in s)
    i[u && /[A-Z]/.test(t) ? `on:${t}` : toHandlerKey(t)] = s[t];
  return i;
}
const getPublicInstance = (s) => s ? isStatefulComponent(s) ? getExposeProxy(s) || s.proxy : getPublicInstance(s.parent) : null, publicPropertiesMap = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {
    $: (s) => s,
    $el: (s) => s.vnode.el,
    $data: (s) => s.data,
    $props: (s) => s.props,
    $attrs: (s) => s.attrs,
    $slots: (s) => s.slots,
    $refs: (s) => s.refs,
    $parent: (s) => getPublicInstance(s.parent),
    $root: (s) => getPublicInstance(s.root),
    $emit: (s) => s.emit,
    $options: (s) => resolveMergedOptions(s),
    $forceUpdate: (s) => s.f || (s.f = () => queueJob(s.update)),
    $nextTick: (s) => s.n || (s.n = nextTick.bind(s.proxy)),
    $watch: (s) => instanceWatch.bind(s)
  })
), hasSetupBinding = (s, u) => s !== EMPTY_OBJ && !s.__isScriptSetup && hasOwn(s, u), PublicInstanceProxyHandlers = {
  get({ _: s }, u) {
    const { ctx: i, setupState: t, data: n, props: e, accessCache: _, type: r, appContext: o } = s;
    let c;
    if (u[0] !== "$") {
      const b = _[u];
      if (b !== void 0)
        switch (b) {
          case 1:
            return t[u];
          case 2:
            return n[u];
          case 4:
            return i[u];
          case 3:
            return e[u];
        }
      else {
        if (hasSetupBinding(t, u))
          return _[u] = 1, t[u];
        if (n !== EMPTY_OBJ && hasOwn(n, u))
          return _[u] = 2, n[u];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (c = s.propsOptions[0]) && hasOwn(c, u)
        )
          return _[u] = 3, e[u];
        if (i !== EMPTY_OBJ && hasOwn(i, u))
          return _[u] = 4, i[u];
        shouldCacheAccess && (_[u] = 0);
      }
    }
    const l = publicPropertiesMap[u];
    let g, a;
    if (l)
      return u === "$attrs" && track(s, "get", u), l(s);
    if (
      // css module (injected by vue-loader)
      (g = r.__cssModules) && (g = g[u])
    )
      return g;
    if (i !== EMPTY_OBJ && hasOwn(i, u))
      return _[u] = 4, i[u];
    if (
      // global properties
      a = o.config.globalProperties, hasOwn(a, u)
    )
      return a[u];
  },
  set({ _: s }, u, i) {
    const { data: t, setupState: n, ctx: e } = s;
    return hasSetupBinding(n, u) ? (n[u] = i, !0) : t !== EMPTY_OBJ && hasOwn(t, u) ? (t[u] = i, !0) : hasOwn(s.props, u) || u[0] === "$" && u.slice(1) in s ? !1 : (e[u] = i, !0);
  },
  has({
    _: { data: s, setupState: u, accessCache: i, ctx: t, appContext: n, propsOptions: e }
  }, _) {
    let r;
    return !!i[_] || s !== EMPTY_OBJ && hasOwn(s, _) || hasSetupBinding(u, _) || (r = e[0]) && hasOwn(r, _) || hasOwn(t, _) || hasOwn(publicPropertiesMap, _) || hasOwn(n.config.globalProperties, _);
  },
  defineProperty(s, u, i) {
    return i.get != null ? s._.accessCache[u] = 0 : hasOwn(i, "value") && this.set(s, u, i.value, null), Reflect.defineProperty(s, u, i);
  }
}, RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend(
  {},
  PublicInstanceProxyHandlers,
  {
    get(s, u) {
      if (u !== Symbol.unscopables)
        return PublicInstanceProxyHandlers.get(s, u, s);
    },
    has(s, u) {
      return u[0] !== "_" && !isGloballyWhitelisted(u);
    }
  }
);
function defineProps() {
  return null;
}
function defineEmits() {
  return null;
}
function defineExpose(s) {
}
function defineOptions(s) {
}
function defineSlots() {
  return null;
}
function defineModel() {
}
function withDefaults(s, u) {
  return null;
}
function useSlots() {
  return getContext().slots;
}
function useAttrs() {
  return getContext().attrs;
}
function useModel(s, u, i) {
  const t = getCurrentInstance();
  if (i && i.local) {
    const n = ref(s[u]);
    return watch(
      () => s[u],
      (e) => n.value = e
    ), watch(n, (e) => {
      e !== s[u] && t.emit(`update:${u}`, e);
    }), n;
  } else
    return {
      __v_isRef: !0,
      get value() {
        return s[u];
      },
      set value(n) {
        t.emit(`update:${u}`, n);
      }
    };
}
function getContext() {
  const s = getCurrentInstance();
  return s.setupContext || (s.setupContext = createSetupContext(s));
}
function normalizePropsOrEmits(s) {
  return isArray(s) ? s.reduce(
    (u, i) => (u[i] = null, u),
    {}
  ) : s;
}
function mergeDefaults(s, u) {
  const i = normalizePropsOrEmits(s);
  for (const t in u) {
    if (t.startsWith("__skip"))
      continue;
    let n = i[t];
    n ? isArray(n) || isFunction(n) ? n = i[t] = { type: n, default: u[t] } : n.default = u[t] : n === null && (n = i[t] = { default: u[t] }), n && u[`__skip_${t}`] && (n.skipFactory = !0);
  }
  return i;
}
function mergeModels(s, u) {
  return !s || !u ? s || u : isArray(s) && isArray(u) ? s.concat(u) : extend({}, normalizePropsOrEmits(s), normalizePropsOrEmits(u));
}
function createPropsRestProxy(s, u) {
  const i = {};
  for (const t in s)
    u.includes(t) || Object.defineProperty(i, t, {
      enumerable: !0,
      get: () => s[t]
    });
  return i;
}
function withAsyncContext(s) {
  const u = getCurrentInstance();
  let i = s();
  return unsetCurrentInstance(), isPromise(i) && (i = i.catch((t) => {
    throw setCurrentInstance(u), t;
  })), [i, () => setCurrentInstance(u)];
}
let shouldCacheAccess = !0;
function applyOptions(s) {
  const u = resolveMergedOptions(s), i = s.proxy, t = s.ctx;
  shouldCacheAccess = !1, u.beforeCreate && callHook$1(u.beforeCreate, s, "bc");
  const {
    // state
    data: n,
    computed: e,
    methods: _,
    watch: r,
    provide: o,
    inject: c,
    // lifecycle
    created: l,
    beforeMount: g,
    mounted: a,
    beforeUpdate: b,
    updated: V,
    activated: y,
    deactivated: C,
    beforeDestroy: E,
    beforeUnmount: v,
    destroyed: m,
    unmounted: L,
    render: A,
    renderTracked: K,
    renderTriggered: T,
    errorCaptured: w,
    serverPrefetch: f,
    // public API
    expose: R,
    inheritAttrs: O,
    // assets
    components: W,
    directives: N,
    filters: $
  } = u;
  if (c && resolveInjections(c, t, null), _)
    for (const x in _) {
      const P = _[x];
      isFunction(P) && (t[x] = P.bind(i));
    }
  if (n) {
    const x = n.call(i, i);
    isObject(x) && (s.data = reactive(x));
  }
  if (shouldCacheAccess = !0, e)
    for (const x in e) {
      const P = e[x], d = isFunction(P) ? P.bind(i, i) : isFunction(P.get) ? P.get.bind(i, i) : NOOP, U = !isFunction(P) && isFunction(P.set) ? P.set.bind(i) : NOOP, F = computed({
        get: d,
        set: U
      });
      Object.defineProperty(t, x, {
        enumerable: !0,
        configurable: !0,
        get: () => F.value,
        set: (X) => F.value = X
      });
    }
  if (r)
    for (const x in r)
      createWatcher(r[x], t, i, x);
  if (o) {
    const x = isFunction(o) ? o.call(i) : o;
    Reflect.ownKeys(x).forEach((P) => {
      provide(P, x[P]);
    });
  }
  l && callHook$1(l, s, "c");
  function I(x, P) {
    isArray(P) ? P.forEach((d) => x(d.bind(i))) : P && x(P.bind(i));
  }
  if (I(onBeforeMount, g), I(onMounted, a), I(onBeforeUpdate, b), I(onUpdated, V), I(onActivated, y), I(onDeactivated, C), I(onErrorCaptured, w), I(onRenderTracked, K), I(onRenderTriggered, T), I(onBeforeUnmount, v), I(onUnmounted, L), I(onServerPrefetch, f), isArray(R))
    if (R.length) {
      const x = s.exposed || (s.exposed = {});
      R.forEach((P) => {
        Object.defineProperty(x, P, {
          get: () => i[P],
          set: (d) => i[P] = d
        });
      });
    } else
      s.exposed || (s.exposed = {});
  A && s.render === NOOP && (s.render = A), O != null && (s.inheritAttrs = O), W && (s.components = W), N && (s.directives = N);
}
function resolveInjections(s, u, i = NOOP) {
  isArray(s) && (s = normalizeInject(s));
  for (const t in s) {
    const n = s[t];
    let e;
    isObject(n) ? "default" in n ? e = inject(
      n.from || t,
      n.default,
      !0
      /* treat default function as factory */
    ) : e = inject(n.from || t) : e = inject(n), isRef(e) ? Object.defineProperty(u, t, {
      enumerable: !0,
      configurable: !0,
      get: () => e.value,
      set: (_) => e.value = _
    }) : u[t] = e;
  }
}
function callHook$1(s, u, i) {
  callWithAsyncErrorHandling(
    isArray(s) ? s.map((t) => t.bind(u.proxy)) : s.bind(u.proxy),
    u,
    i
  );
}
function createWatcher(s, u, i, t) {
  const n = t.includes(".") ? createPathGetter(i, t) : () => i[t];
  if (isString(s)) {
    const e = u[s];
    isFunction(e) && watch(n, e);
  } else if (isFunction(s))
    watch(n, s.bind(i));
  else if (isObject(s))
    if (isArray(s))
      s.forEach((e) => createWatcher(e, u, i, t));
    else {
      const e = isFunction(s.handler) ? s.handler.bind(i) : u[s.handler];
      isFunction(e) && watch(n, e, s);
    }
}
function resolveMergedOptions(s) {
  const u = s.type, { mixins: i, extends: t } = u, {
    mixins: n,
    optionsCache: e,
    config: { optionMergeStrategies: _ }
  } = s.appContext, r = e.get(u);
  let o;
  return r ? o = r : !n.length && !i && !t ? o = u : (o = {}, n.length && n.forEach(
    (c) => mergeOptions(o, c, _, !0)
  ), mergeOptions(o, u, _)), isObject(u) && e.set(u, o), o;
}
function mergeOptions(s, u, i, t = !1) {
  const { mixins: n, extends: e } = u;
  e && mergeOptions(s, e, i, !0), n && n.forEach(
    (_) => mergeOptions(s, _, i, !0)
  );
  for (const _ in u)
    if (!(t && _ === "expose")) {
      const r = internalOptionMergeStrats[_] || i && i[_];
      s[_] = r ? r(s[_], u[_]) : u[_];
    }
  return s;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  // objects
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  // lifecycle
  beforeCreate: mergeAsArray,
  created: mergeAsArray,
  beforeMount: mergeAsArray,
  mounted: mergeAsArray,
  beforeUpdate: mergeAsArray,
  updated: mergeAsArray,
  beforeDestroy: mergeAsArray,
  beforeUnmount: mergeAsArray,
  destroyed: mergeAsArray,
  unmounted: mergeAsArray,
  activated: mergeAsArray,
  deactivated: mergeAsArray,
  errorCaptured: mergeAsArray,
  serverPrefetch: mergeAsArray,
  // assets
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  // watch
  watch: mergeWatchOptions,
  // provide / inject
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(s, u) {
  return u ? s ? function() {
    return extend(
      isFunction(s) ? s.call(this, this) : s,
      isFunction(u) ? u.call(this, this) : u
    );
  } : u : s;
}
function mergeInject(s, u) {
  return mergeObjectOptions(normalizeInject(s), normalizeInject(u));
}
function normalizeInject(s) {
  if (isArray(s)) {
    const u = {};
    for (let i = 0; i < s.length; i++)
      u[s[i]] = s[i];
    return u;
  }
  return s;
}
function mergeAsArray(s, u) {
  return s ? [...new Set([].concat(s, u))] : u;
}
function mergeObjectOptions(s, u) {
  return s ? extend(/* @__PURE__ */ Object.create(null), s, u) : u;
}
function mergeEmitsOrPropsOptions(s, u) {
  return s ? isArray(s) && isArray(u) ? [.../* @__PURE__ */ new Set([...s, ...u])] : extend(
    /* @__PURE__ */ Object.create(null),
    normalizePropsOrEmits(s),
    normalizePropsOrEmits(u ?? {})
  ) : u;
}
function mergeWatchOptions(s, u) {
  if (!s)
    return u;
  if (!u)
    return s;
  const i = extend(/* @__PURE__ */ Object.create(null), s);
  for (const t in u)
    i[t] = mergeAsArray(s[t], u[t]);
  return i;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let uid$1 = 0;
function createAppAPI(s, u) {
  return function(t, n = null) {
    isFunction(t) || (t = extend({}, t)), n != null && !isObject(n) && (n = null);
    const e = createAppContext(), _ = /* @__PURE__ */ new Set();
    let r = !1;
    const o = e.app = {
      _uid: uid$1++,
      _component: t,
      _props: n,
      _container: null,
      _context: e,
      _instance: null,
      version,
      get config() {
        return e.config;
      },
      set config(c) {
      },
      use(c, ...l) {
        return _.has(c) || (c && isFunction(c.install) ? (_.add(c), c.install(o, ...l)) : isFunction(c) && (_.add(c), c(o, ...l))), o;
      },
      mixin(c) {
        return e.mixins.includes(c) || e.mixins.push(c), o;
      },
      component(c, l) {
        return l ? (e.components[c] = l, o) : e.components[c];
      },
      directive(c, l) {
        return l ? (e.directives[c] = l, o) : e.directives[c];
      },
      mount(c, l, g) {
        if (!r) {
          const a = createVNode(
            t,
            n
          );
          return a.appContext = e, l && u ? u(a, c) : s(a, c, g), r = !0, o._container = c, c.__vue_app__ = o, getExposeProxy(a.component) || a.component.proxy;
        }
      },
      unmount() {
        r && (s(null, o._container), delete o._container.__vue_app__);
      },
      provide(c, l) {
        return e.provides[c] = l, o;
      },
      runWithContext(c) {
        currentApp = o;
        try {
          return c();
        } finally {
          currentApp = null;
        }
      }
    };
    return o;
  };
}
let currentApp = null;
function provide(s, u) {
  if (currentInstance) {
    let i = currentInstance.provides;
    const t = currentInstance.parent && currentInstance.parent.provides;
    t === i && (i = currentInstance.provides = Object.create(t)), i[s] = u;
  }
}
function inject(s, u, i = !1) {
  const t = currentInstance || currentRenderingInstance;
  if (t || currentApp) {
    const n = t ? t.parent == null ? t.vnode.appContext && t.vnode.appContext.provides : t.parent.provides : currentApp._context.provides;
    if (n && s in n)
      return n[s];
    if (arguments.length > 1)
      return i && isFunction(u) ? u.call(t && t.proxy) : u;
  }
}
function hasInjectionContext() {
  return !!(currentInstance || currentRenderingInstance || currentApp);
}
function initProps(s, u, i, t = !1) {
  const n = {}, e = {};
  def(e, InternalObjectKey, 1), s.propsDefaults = /* @__PURE__ */ Object.create(null), setFullProps(s, u, n, e);
  for (const _ in s.propsOptions[0])
    _ in n || (n[_] = void 0);
  i ? s.props = t ? n : shallowReactive(n) : s.type.props ? s.props = n : s.props = e, s.attrs = e;
}
function updateProps(s, u, i, t) {
  const {
    props: n,
    attrs: e,
    vnode: { patchFlag: _ }
  } = s, r = toRaw(n), [o] = s.propsOptions;
  let c = !1;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (t || _ > 0) && !(_ & 16)
  ) {
    if (_ & 8) {
      const l = s.vnode.dynamicProps;
      for (let g = 0; g < l.length; g++) {
        let a = l[g];
        if (isEmitListener(s.emitsOptions, a))
          continue;
        const b = u[a];
        if (o)
          if (hasOwn(e, a))
            b !== e[a] && (e[a] = b, c = !0);
          else {
            const V = camelize(a);
            n[V] = resolvePropValue(
              o,
              r,
              V,
              b,
              s,
              !1
              /* isAbsent */
            );
          }
        else
          b !== e[a] && (e[a] = b, c = !0);
      }
    }
  } else {
    setFullProps(s, u, n, e) && (c = !0);
    let l;
    for (const g in r)
      (!u || // for camelCase
      !hasOwn(u, g) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((l = hyphenate(g)) === g || !hasOwn(u, l))) && (o ? i && // for camelCase
      (i[g] !== void 0 || // for kebab-case
      i[l] !== void 0) && (n[g] = resolvePropValue(
        o,
        r,
        g,
        void 0,
        s,
        !0
        /* isAbsent */
      )) : delete n[g]);
    if (e !== r)
      for (const g in e)
        (!u || !hasOwn(u, g)) && (delete e[g], c = !0);
  }
  c && trigger(s, "set", "$attrs");
}
function setFullProps(s, u, i, t) {
  const [n, e] = s.propsOptions;
  let _ = !1, r;
  if (u)
    for (let o in u) {
      if (isReservedProp(o))
        continue;
      const c = u[o];
      let l;
      n && hasOwn(n, l = camelize(o)) ? !e || !e.includes(l) ? i[l] = c : (r || (r = {}))[l] = c : isEmitListener(s.emitsOptions, o) || (!(o in t) || c !== t[o]) && (t[o] = c, _ = !0);
    }
  if (e) {
    const o = toRaw(i), c = r || EMPTY_OBJ;
    for (let l = 0; l < e.length; l++) {
      const g = e[l];
      i[g] = resolvePropValue(
        n,
        o,
        g,
        c[g],
        s,
        !hasOwn(c, g)
      );
    }
  }
  return _;
}
function resolvePropValue(s, u, i, t, n, e) {
  const _ = s[i];
  if (_ != null) {
    const r = hasOwn(_, "default");
    if (r && t === void 0) {
      const o = _.default;
      if (_.type !== Function && !_.skipFactory && isFunction(o)) {
        const { propsDefaults: c } = n;
        i in c ? t = c[i] : (setCurrentInstance(n), t = c[i] = o.call(
          null,
          u
        ), unsetCurrentInstance());
      } else
        t = o;
    }
    _[
      0
      /* shouldCast */
    ] && (e && !r ? t = !1 : _[
      1
      /* shouldCastTrue */
    ] && (t === "" || t === hyphenate(i)) && (t = !0));
  }
  return t;
}
function normalizePropsOptions(s, u, i = !1) {
  const t = u.propsCache, n = t.get(s);
  if (n)
    return n;
  const e = s.props, _ = {}, r = [];
  let o = !1;
  if (!isFunction(s)) {
    const l = (g) => {
      o = !0;
      const [a, b] = normalizePropsOptions(g, u, !0);
      extend(_, a), b && r.push(...b);
    };
    !i && u.mixins.length && u.mixins.forEach(l), s.extends && l(s.extends), s.mixins && s.mixins.forEach(l);
  }
  if (!e && !o)
    return isObject(s) && t.set(s, EMPTY_ARR), EMPTY_ARR;
  if (isArray(e))
    for (let l = 0; l < e.length; l++) {
      const g = camelize(e[l]);
      validatePropName(g) && (_[g] = EMPTY_OBJ);
    }
  else if (e)
    for (const l in e) {
      const g = camelize(l);
      if (validatePropName(g)) {
        const a = e[l], b = _[g] = isArray(a) || isFunction(a) ? { type: a } : extend({}, a);
        if (b) {
          const V = getTypeIndex(Boolean, b.type), y = getTypeIndex(String, b.type);
          b[
            0
            /* shouldCast */
          ] = V > -1, b[
            1
            /* shouldCastTrue */
          ] = y < 0 || V < y, (V > -1 || hasOwn(b, "default")) && r.push(g);
        }
      }
    }
  const c = [_, r];
  return isObject(s) && t.set(s, c), c;
}
function validatePropName(s) {
  return s[0] !== "$";
}
function getType(s) {
  const u = s && s.toString().match(/^\s*(function|class) (\w+)/);
  return u ? u[2] : s === null ? "null" : "";
}
function isSameType(s, u) {
  return getType(s) === getType(u);
}
function getTypeIndex(s, u) {
  return isArray(u) ? u.findIndex((i) => isSameType(i, s)) : isFunction(u) && isSameType(u, s) ? 0 : -1;
}
const isInternalKey = (s) => s[0] === "_" || s === "$stable", normalizeSlotValue = (s) => isArray(s) ? s.map(normalizeVNode) : [normalizeVNode(s)], normalizeSlot = (s, u, i) => {
  if (u._n)
    return u;
  const t = withCtx((...n) => normalizeSlotValue(u(...n)), i);
  return t._c = !1, t;
}, normalizeObjectSlots = (s, u, i) => {
  const t = s._ctx;
  for (const n in s) {
    if (isInternalKey(n))
      continue;
    const e = s[n];
    if (isFunction(e))
      u[n] = normalizeSlot(n, e, t);
    else if (e != null) {
      const _ = normalizeSlotValue(e);
      u[n] = () => _;
    }
  }
}, normalizeVNodeSlots = (s, u) => {
  const i = normalizeSlotValue(u);
  s.slots.default = () => i;
}, initSlots = (s, u) => {
  if (s.vnode.shapeFlag & 32) {
    const i = u._;
    i ? (s.slots = toRaw(u), def(u, "_", i)) : normalizeObjectSlots(
      u,
      s.slots = {}
    );
  } else
    s.slots = {}, u && normalizeVNodeSlots(s, u);
  def(s.slots, InternalObjectKey, 1);
}, updateSlots = (s, u, i) => {
  const { vnode: t, slots: n } = s;
  let e = !0, _ = EMPTY_OBJ;
  if (t.shapeFlag & 32) {
    const r = u._;
    r ? i && r === 1 ? e = !1 : (extend(n, u), !i && r === 1 && delete n._) : (e = !u.$stable, normalizeObjectSlots(u, n)), _ = u;
  } else
    u && (normalizeVNodeSlots(s, u), _ = { default: 1 });
  if (e)
    for (const r in n)
      !isInternalKey(r) && !(r in _) && delete n[r];
};
function setRef(s, u, i, t, n = !1) {
  if (isArray(s)) {
    s.forEach(
      (a, b) => setRef(
        a,
        u && (isArray(u) ? u[b] : u),
        i,
        t,
        n
      )
    );
    return;
  }
  if (isAsyncWrapper(t) && !n)
    return;
  const e = t.shapeFlag & 4 ? getExposeProxy(t.component) || t.component.proxy : t.el, _ = n ? null : e, { i: r, r: o } = s, c = u && u.r, l = r.refs === EMPTY_OBJ ? r.refs = {} : r.refs, g = r.setupState;
  if (c != null && c !== o && (isString(c) ? (l[c] = null, hasOwn(g, c) && (g[c] = null)) : isRef(c) && (c.value = null)), isFunction(o))
    callWithErrorHandling(o, r, 12, [_, l]);
  else {
    const a = isString(o), b = isRef(o);
    if (a || b) {
      const V = () => {
        if (s.f) {
          const y = a ? hasOwn(g, o) ? g[o] : l[o] : o.value;
          n ? isArray(y) && remove(y, e) : isArray(y) ? y.includes(e) || y.push(e) : a ? (l[o] = [e], hasOwn(g, o) && (g[o] = l[o])) : (o.value = [e], s.k && (l[s.k] = o.value));
        } else
          a ? (l[o] = _, hasOwn(g, o) && (g[o] = _)) : b && (o.value = _, s.k && (l[s.k] = _));
      };
      _ ? (V.id = -1, queuePostRenderEffect(V, i)) : V();
    }
  }
}
let hasMismatch = !1;
const isSVGContainer = (s) => /svg/.test(s.namespaceURI) && s.tagName !== "foreignObject", isComment = (s) => s.nodeType === 8;
function createHydrationFunctions(s) {
  const {
    mt: u,
    p: i,
    o: {
      patchProp: t,
      createText: n,
      nextSibling: e,
      parentNode: _,
      remove: r,
      insert: o,
      createComment: c
    }
  } = s, l = (E, v) => {
    if (!v.hasChildNodes()) {
      i(null, E, v), flushPostFlushCbs(), v._vnode = E;
      return;
    }
    hasMismatch = !1, g(v.firstChild, E, null, null, null), flushPostFlushCbs(), v._vnode = E, hasMismatch && console.error("Hydration completed but contains mismatches.");
  }, g = (E, v, m, L, A, K = !1) => {
    const T = isComment(E) && E.data === "[", w = () => y(
      E,
      v,
      m,
      L,
      A,
      T
    ), { type: f, ref: R, shapeFlag: O, patchFlag: W } = v;
    let N = E.nodeType;
    v.el = E, W === -2 && (K = !1, v.dynamicChildren = null);
    let $ = null;
    switch (f) {
      case Text:
        N !== 3 ? v.children === "" ? (o(v.el = n(""), _(E), E), $ = E) : $ = w() : (E.data !== v.children && (hasMismatch = !0, E.data = v.children), $ = e(E));
        break;
      case Comment:
        N !== 8 || T ? $ = w() : $ = e(E);
        break;
      case Static:
        if (T && (E = e(E), N = E.nodeType), N === 1 || N === 3) {
          $ = E;
          const S = !v.children.length;
          for (let I = 0; I < v.staticCount; I++)
            S && (v.children += $.nodeType === 1 ? $.outerHTML : $.data), I === v.staticCount - 1 && (v.anchor = $), $ = e($);
          return T ? e($) : $;
        } else
          w();
        break;
      case Fragment:
        T ? $ = V(
          E,
          v,
          m,
          L,
          A,
          K
        ) : $ = w();
        break;
      default:
        if (O & 1)
          N !== 1 || v.type.toLowerCase() !== E.tagName.toLowerCase() ? $ = w() : $ = a(
            E,
            v,
            m,
            L,
            A,
            K
          );
        else if (O & 6) {
          v.slotScopeIds = A;
          const S = _(E);
          if (u(
            v,
            S,
            null,
            m,
            L,
            isSVGContainer(S),
            K
          ), $ = T ? C(E) : e(E), $ && isComment($) && $.data === "teleport end" && ($ = e($)), isAsyncWrapper(v)) {
            let I;
            T ? (I = createVNode(Fragment), I.anchor = $ ? $.previousSibling : S.lastChild) : I = E.nodeType === 3 ? createTextVNode("") : createVNode("div"), I.el = E, v.component.subTree = I;
          }
        } else
          O & 64 ? N !== 8 ? $ = w() : $ = v.type.hydrate(
            E,
            v,
            m,
            L,
            A,
            K,
            s,
            b
          ) : O & 128 && ($ = v.type.hydrate(
            E,
            v,
            m,
            L,
            isSVGContainer(_(E)),
            A,
            K,
            s,
            g
          ));
    }
    return R != null && setRef(R, null, L, v), $;
  }, a = (E, v, m, L, A, K) => {
    K = K || !!v.dynamicChildren;
    const { type: T, props: w, patchFlag: f, shapeFlag: R, dirs: O } = v, W = T === "input" && O || T === "option";
    if (W || f !== -1) {
      if (O && invokeDirectiveHook(v, null, m, "created"), w)
        if (W || !K || f & 48)
          for (const $ in w)
            (W && $.endsWith("value") || isOn($) && !isReservedProp($)) && t(
              E,
              $,
              null,
              w[$],
              !1,
              void 0,
              m
            );
        else
          w.onClick && t(
            E,
            "onClick",
            null,
            w.onClick,
            !1,
            void 0,
            m
          );
      let N;
      if ((N = w && w.onVnodeBeforeMount) && invokeVNodeHook(N, m, v), O && invokeDirectiveHook(v, null, m, "beforeMount"), ((N = w && w.onVnodeMounted) || O) && queueEffectWithSuspense(() => {
        N && invokeVNodeHook(N, m, v), O && invokeDirectiveHook(v, null, m, "mounted");
      }, L), R & 16 && // skip if element has innerHTML / textContent
      !(w && (w.innerHTML || w.textContent))) {
        let $ = b(
          E.firstChild,
          v,
          E,
          m,
          L,
          A,
          K
        );
        for (; $; ) {
          hasMismatch = !0;
          const S = $;
          $ = $.nextSibling, r(S);
        }
      } else
        R & 8 && E.textContent !== v.children && (hasMismatch = !0, E.textContent = v.children);
    }
    return E.nextSibling;
  }, b = (E, v, m, L, A, K, T) => {
    T = T || !!v.dynamicChildren;
    const w = v.children, f = w.length;
    for (let R = 0; R < f; R++) {
      const O = T ? w[R] : w[R] = normalizeVNode(w[R]);
      if (E)
        E = g(
          E,
          O,
          L,
          A,
          K,
          T
        );
      else {
        if (O.type === Text && !O.children)
          continue;
        hasMismatch = !0, i(
          null,
          O,
          m,
          null,
          L,
          A,
          isSVGContainer(m),
          K
        );
      }
    }
    return E;
  }, V = (E, v, m, L, A, K) => {
    const { slotScopeIds: T } = v;
    T && (A = A ? A.concat(T) : T);
    const w = _(E), f = b(
      e(E),
      v,
      w,
      m,
      L,
      A,
      K
    );
    return f && isComment(f) && f.data === "]" ? e(v.anchor = f) : (hasMismatch = !0, o(v.anchor = c("]"), w, f), f);
  }, y = (E, v, m, L, A, K) => {
    if (hasMismatch = !0, v.el = null, K) {
      const f = C(E);
      for (; ; ) {
        const R = e(E);
        if (R && R !== f)
          r(R);
        else
          break;
      }
    }
    const T = e(E), w = _(E);
    return r(E), i(
      null,
      v,
      w,
      T,
      m,
      L,
      isSVGContainer(w),
      A
    ), T;
  }, C = (E) => {
    let v = 0;
    for (; E; )
      if (E = e(E), E && isComment(E) && (E.data === "[" && v++, E.data === "]")) {
        if (v === 0)
          return e(E);
        v--;
      }
    return E;
  };
  return [l, g];
}
const queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(s) {
  return baseCreateRenderer(s);
}
function createHydrationRenderer(s) {
  return baseCreateRenderer(s, createHydrationFunctions);
}
function baseCreateRenderer(s, u) {
  const i = getGlobalThis();
  i.__VUE__ = !0;
  const {
    insert: t,
    remove: n,
    patchProp: e,
    createElement: _,
    createText: r,
    createComment: o,
    setText: c,
    setElementText: l,
    parentNode: g,
    nextSibling: a,
    setScopeId: b = NOOP,
    insertStaticContent: V
  } = s, y = (z, te, re, le = null, ae = null, oe = null, de = !1, ve = null, ce = !!te.dynamicChildren) => {
    if (z === te)
      return;
    z && !isSameVNodeType(z, te) && (le = k(z), X(z, ae, oe, !0), z = null), te.patchFlag === -2 && (ce = !1, te.dynamicChildren = null);
    const { type: he, ref: ye, shapeFlag: fe } = te;
    switch (he) {
      case Text:
        C(z, te, re, le);
        break;
      case Comment:
        E(z, te, re, le);
        break;
      case Static:
        z == null && v(te, re, le, de);
        break;
      case Fragment:
        W(
          z,
          te,
          re,
          le,
          ae,
          oe,
          de,
          ve,
          ce
        );
        break;
      default:
        fe & 1 ? A(
          z,
          te,
          re,
          le,
          ae,
          oe,
          de,
          ve,
          ce
        ) : fe & 6 ? N(
          z,
          te,
          re,
          le,
          ae,
          oe,
          de,
          ve,
          ce
        ) : (fe & 64 || fe & 128) && he.process(
          z,
          te,
          re,
          le,
          ae,
          oe,
          de,
          ve,
          ce,
          j
        );
    }
    ye != null && ae && setRef(ye, z && z.ref, oe, te || z, !te);
  }, C = (z, te, re, le) => {
    if (z == null)
      t(
        te.el = r(te.children),
        re,
        le
      );
    else {
      const ae = te.el = z.el;
      te.children !== z.children && c(ae, te.children);
    }
  }, E = (z, te, re, le) => {
    z == null ? t(
      te.el = o(te.children || ""),
      re,
      le
    ) : te.el = z.el;
  }, v = (z, te, re, le) => {
    [z.el, z.anchor] = V(
      z.children,
      te,
      re,
      le,
      z.el,
      z.anchor
    );
  }, m = ({ el: z, anchor: te }, re, le) => {
    let ae;
    for (; z && z !== te; )
      ae = a(z), t(z, re, le), z = ae;
    t(te, re, le);
  }, L = ({ el: z, anchor: te }) => {
    let re;
    for (; z && z !== te; )
      re = a(z), n(z), z = re;
    n(te);
  }, A = (z, te, re, le, ae, oe, de, ve, ce) => {
    de = de || te.type === "svg", z == null ? K(
      te,
      re,
      le,
      ae,
      oe,
      de,
      ve,
      ce
    ) : f(
      z,
      te,
      ae,
      oe,
      de,
      ve,
      ce
    );
  }, K = (z, te, re, le, ae, oe, de, ve) => {
    let ce, he;
    const { type: ye, props: fe, shapeFlag: Ce, transition: Ae, dirs: Te } = z;
    if (ce = z.el = _(
      z.type,
      oe,
      fe && fe.is,
      fe
    ), Ce & 8 ? l(ce, z.children) : Ce & 16 && w(
      z.children,
      ce,
      null,
      le,
      ae,
      oe && ye !== "foreignObject",
      de,
      ve
    ), Te && invokeDirectiveHook(z, null, le, "created"), T(ce, z, z.scopeId, de, le), fe) {
      for (const De in fe)
        De !== "value" && !isReservedProp(De) && e(
          ce,
          De,
          null,
          fe[De],
          oe,
          z.children,
          le,
          ae,
          D
        );
      "value" in fe && e(ce, "value", null, fe.value), (he = fe.onVnodeBeforeMount) && invokeVNodeHook(he, le, z);
    }
    Te && invokeDirectiveHook(z, null, le, "beforeMount");
    const Re = (!ae || ae && !ae.pendingBranch) && Ae && !Ae.persisted;
    Re && Ae.beforeEnter(ce), t(ce, te, re), ((he = fe && fe.onVnodeMounted) || Re || Te) && queuePostRenderEffect(() => {
      he && invokeVNodeHook(he, le, z), Re && Ae.enter(ce), Te && invokeDirectiveHook(z, null, le, "mounted");
    }, ae);
  }, T = (z, te, re, le, ae) => {
    if (re && b(z, re), le)
      for (let oe = 0; oe < le.length; oe++)
        b(z, le[oe]);
    if (ae) {
      let oe = ae.subTree;
      if (te === oe) {
        const de = ae.vnode;
        T(
          z,
          de,
          de.scopeId,
          de.slotScopeIds,
          ae.parent
        );
      }
    }
  }, w = (z, te, re, le, ae, oe, de, ve, ce = 0) => {
    for (let he = ce; he < z.length; he++) {
      const ye = z[he] = ve ? cloneIfMounted(z[he]) : normalizeVNode(z[he]);
      y(
        null,
        ye,
        te,
        re,
        le,
        ae,
        oe,
        de,
        ve
      );
    }
  }, f = (z, te, re, le, ae, oe, de) => {
    const ve = te.el = z.el;
    let { patchFlag: ce, dynamicChildren: he, dirs: ye } = te;
    ce |= z.patchFlag & 16;
    const fe = z.props || EMPTY_OBJ, Ce = te.props || EMPTY_OBJ;
    let Ae;
    re && toggleRecurse(re, !1), (Ae = Ce.onVnodeBeforeUpdate) && invokeVNodeHook(Ae, re, te, z), ye && invokeDirectiveHook(te, z, re, "beforeUpdate"), re && toggleRecurse(re, !0);
    const Te = ae && te.type !== "foreignObject";
    if (he ? R(
      z.dynamicChildren,
      he,
      ve,
      re,
      le,
      Te,
      oe
    ) : de || P(
      z,
      te,
      ve,
      null,
      re,
      le,
      Te,
      oe,
      !1
    ), ce > 0) {
      if (ce & 16)
        O(
          ve,
          te,
          fe,
          Ce,
          re,
          le,
          ae
        );
      else if (ce & 2 && fe.class !== Ce.class && e(ve, "class", null, Ce.class, ae), ce & 4 && e(ve, "style", fe.style, Ce.style, ae), ce & 8) {
        const Re = te.dynamicProps;
        for (let De = 0; De < Re.length; De++) {
          const Oe = Re[De], Ne = fe[Oe], Fe = Ce[Oe];
          (Fe !== Ne || Oe === "value") && e(
            ve,
            Oe,
            Ne,
            Fe,
            ae,
            z.children,
            re,
            le,
            D
          );
        }
      }
      ce & 1 && z.children !== te.children && l(ve, te.children);
    } else
      !de && he == null && O(
        ve,
        te,
        fe,
        Ce,
        re,
        le,
        ae
      );
    ((Ae = Ce.onVnodeUpdated) || ye) && queuePostRenderEffect(() => {
      Ae && invokeVNodeHook(Ae, re, te, z), ye && invokeDirectiveHook(te, z, re, "updated");
    }, le);
  }, R = (z, te, re, le, ae, oe, de) => {
    for (let ve = 0; ve < te.length; ve++) {
      const ce = z[ve], he = te[ve], ye = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        ce.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (ce.type === Fragment || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !isSameVNodeType(ce, he) || // - In the case of a component, it could contain anything.
        ce.shapeFlag & 70) ? g(ce.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          re
        )
      );
      y(
        ce,
        he,
        ye,
        null,
        le,
        ae,
        oe,
        de,
        !0
      );
    }
  }, O = (z, te, re, le, ae, oe, de) => {
    if (re !== le) {
      if (re !== EMPTY_OBJ)
        for (const ve in re)
          !isReservedProp(ve) && !(ve in le) && e(
            z,
            ve,
            re[ve],
            null,
            de,
            te.children,
            ae,
            oe,
            D
          );
      for (const ve in le) {
        if (isReservedProp(ve))
          continue;
        const ce = le[ve], he = re[ve];
        ce !== he && ve !== "value" && e(
          z,
          ve,
          he,
          ce,
          de,
          te.children,
          ae,
          oe,
          D
        );
      }
      "value" in le && e(z, "value", re.value, le.value);
    }
  }, W = (z, te, re, le, ae, oe, de, ve, ce) => {
    const he = te.el = z ? z.el : r(""), ye = te.anchor = z ? z.anchor : r("");
    let { patchFlag: fe, dynamicChildren: Ce, slotScopeIds: Ae } = te;
    Ae && (ve = ve ? ve.concat(Ae) : Ae), z == null ? (t(he, re, le), t(ye, re, le), w(
      te.children,
      re,
      ye,
      ae,
      oe,
      de,
      ve,
      ce
    )) : fe > 0 && fe & 64 && Ce && // #2715 the previous fragment could've been a BAILed one as a result
    // of renderSlot() with no valid children
    z.dynamicChildren ? (R(
      z.dynamicChildren,
      Ce,
      re,
      ae,
      oe,
      de,
      ve
    ), // #2080 if the stable fragment has a key, it's a <template v-for> that may
    //  get moved around. Make sure all root level vnodes inherit el.
    // #2134 or if it's a component root, it may also get moved around
    // as the component is being moved.
    (te.key != null || ae && te === ae.subTree) && traverseStaticChildren(
      z,
      te,
      !0
      /* shallow */
    )) : P(
      z,
      te,
      re,
      ye,
      ae,
      oe,
      de,
      ve,
      ce
    );
  }, N = (z, te, re, le, ae, oe, de, ve, ce) => {
    te.slotScopeIds = ve, z == null ? te.shapeFlag & 512 ? ae.ctx.activate(
      te,
      re,
      le,
      de,
      ce
    ) : $(
      te,
      re,
      le,
      ae,
      oe,
      de,
      ce
    ) : S(z, te, ce);
  }, $ = (z, te, re, le, ae, oe, de) => {
    const ve = z.component = createComponentInstance(
      z,
      le,
      ae
    );
    if (isKeepAlive(z) && (ve.ctx.renderer = j), setupComponent(ve), ve.asyncDep) {
      if (ae && ae.registerDep(ve, I), !z.el) {
        const ce = ve.subTree = createVNode(Comment);
        E(null, ce, te, re);
      }
      return;
    }
    I(
      ve,
      z,
      te,
      re,
      ae,
      oe,
      de
    );
  }, S = (z, te, re) => {
    const le = te.component = z.component;
    if (shouldUpdateComponent(z, te, re))
      if (le.asyncDep && !le.asyncResolved) {
        x(le, te, re);
        return;
      } else
        le.next = te, invalidateJob(le.update), le.update();
    else
      te.el = z.el, le.vnode = te;
  }, I = (z, te, re, le, ae, oe, de) => {
    const ve = () => {
      if (z.isMounted) {
        let { next: ye, bu: fe, u: Ce, parent: Ae, vnode: Te } = z, Re = ye, De;
        toggleRecurse(z, !1), ye ? (ye.el = Te.el, x(z, ye, de)) : ye = Te, fe && invokeArrayFns(fe), (De = ye.props && ye.props.onVnodeBeforeUpdate) && invokeVNodeHook(De, Ae, ye, Te), toggleRecurse(z, !0);
        const Oe = renderComponentRoot(z), Ne = z.subTree;
        z.subTree = Oe, y(
          Ne,
          Oe,
          // parent may have changed if it's in a teleport
          g(Ne.el),
          // anchor may have changed if it's in a fragment
          k(Ne),
          z,
          ae,
          oe
        ), ye.el = Oe.el, Re === null && updateHOCHostEl(z, Oe.el), Ce && queuePostRenderEffect(Ce, ae), (De = ye.props && ye.props.onVnodeUpdated) && queuePostRenderEffect(
          () => invokeVNodeHook(De, Ae, ye, Te),
          ae
        );
      } else {
        let ye;
        const { el: fe, props: Ce } = te, { bm: Ae, m: Te, parent: Re } = z, De = isAsyncWrapper(te);
        if (toggleRecurse(z, !1), Ae && invokeArrayFns(Ae), !De && (ye = Ce && Ce.onVnodeBeforeMount) && invokeVNodeHook(ye, Re, te), toggleRecurse(z, !0), fe && Z) {
          const Oe = () => {
            z.subTree = renderComponentRoot(z), Z(
              fe,
              z.subTree,
              z,
              ae,
              null
            );
          };
          De ? te.type.__asyncLoader().then(
            // note: we are moving the render call into an async callback,
            // which means it won't track dependencies - but it's ok because
            // a server-rendered async wrapper is already in resolved state
            // and it will never need to change.
            () => !z.isUnmounted && Oe()
          ) : Oe();
        } else {
          const Oe = z.subTree = renderComponentRoot(z);
          y(
            null,
            Oe,
            re,
            le,
            z,
            ae,
            oe
          ), te.el = Oe.el;
        }
        if (Te && queuePostRenderEffect(Te, ae), !De && (ye = Ce && Ce.onVnodeMounted)) {
          const Oe = te;
          queuePostRenderEffect(
            () => invokeVNodeHook(ye, Re, Oe),
            ae
          );
        }
        (te.shapeFlag & 256 || Re && isAsyncWrapper(Re.vnode) && Re.vnode.shapeFlag & 256) && z.a && queuePostRenderEffect(z.a, ae), z.isMounted = !0, te = re = le = null;
      }
    }, ce = z.effect = new ReactiveEffect(
      ve,
      () => queueJob(he),
      z.scope
      // track it in component's effect scope
    ), he = z.update = () => ce.run();
    he.id = z.uid, toggleRecurse(z, !0), he();
  }, x = (z, te, re) => {
    te.component = z;
    const le = z.vnode.props;
    z.vnode = te, z.next = null, updateProps(z, te.props, le, re), updateSlots(z, te.children, re), pauseTracking(), flushPreFlushCbs(), resetTracking();
  }, P = (z, te, re, le, ae, oe, de, ve, ce = !1) => {
    const he = z && z.children, ye = z ? z.shapeFlag : 0, fe = te.children, { patchFlag: Ce, shapeFlag: Ae } = te;
    if (Ce > 0) {
      if (Ce & 128) {
        U(
          he,
          fe,
          re,
          le,
          ae,
          oe,
          de,
          ve,
          ce
        );
        return;
      } else if (Ce & 256) {
        d(
          he,
          fe,
          re,
          le,
          ae,
          oe,
          de,
          ve,
          ce
        );
        return;
      }
    }
    Ae & 8 ? (ye & 16 && D(he, ae, oe), fe !== he && l(re, fe)) : ye & 16 ? Ae & 16 ? U(
      he,
      fe,
      re,
      le,
      ae,
      oe,
      de,
      ve,
      ce
    ) : D(he, ae, oe, !0) : (ye & 8 && l(re, ""), Ae & 16 && w(
      fe,
      re,
      le,
      ae,
      oe,
      de,
      ve,
      ce
    ));
  }, d = (z, te, re, le, ae, oe, de, ve, ce) => {
    z = z || EMPTY_ARR, te = te || EMPTY_ARR;
    const he = z.length, ye = te.length, fe = Math.min(he, ye);
    let Ce;
    for (Ce = 0; Ce < fe; Ce++) {
      const Ae = te[Ce] = ce ? cloneIfMounted(te[Ce]) : normalizeVNode(te[Ce]);
      y(
        z[Ce],
        Ae,
        re,
        null,
        ae,
        oe,
        de,
        ve,
        ce
      );
    }
    he > ye ? D(
      z,
      ae,
      oe,
      !0,
      !1,
      fe
    ) : w(
      te,
      re,
      le,
      ae,
      oe,
      de,
      ve,
      ce,
      fe
    );
  }, U = (z, te, re, le, ae, oe, de, ve, ce) => {
    let he = 0;
    const ye = te.length;
    let fe = z.length - 1, Ce = ye - 1;
    for (; he <= fe && he <= Ce; ) {
      const Ae = z[he], Te = te[he] = ce ? cloneIfMounted(te[he]) : normalizeVNode(te[he]);
      if (isSameVNodeType(Ae, Te))
        y(
          Ae,
          Te,
          re,
          null,
          ae,
          oe,
          de,
          ve,
          ce
        );
      else
        break;
      he++;
    }
    for (; he <= fe && he <= Ce; ) {
      const Ae = z[fe], Te = te[Ce] = ce ? cloneIfMounted(te[Ce]) : normalizeVNode(te[Ce]);
      if (isSameVNodeType(Ae, Te))
        y(
          Ae,
          Te,
          re,
          null,
          ae,
          oe,
          de,
          ve,
          ce
        );
      else
        break;
      fe--, Ce--;
    }
    if (he > fe) {
      if (he <= Ce) {
        const Ae = Ce + 1, Te = Ae < ye ? te[Ae].el : le;
        for (; he <= Ce; )
          y(
            null,
            te[he] = ce ? cloneIfMounted(te[he]) : normalizeVNode(te[he]),
            re,
            Te,
            ae,
            oe,
            de,
            ve,
            ce
          ), he++;
      }
    } else if (he > Ce)
      for (; he <= fe; )
        X(z[he], ae, oe, !0), he++;
    else {
      const Ae = he, Te = he, Re = /* @__PURE__ */ new Map();
      for (he = Te; he <= Ce; he++) {
        const be = te[he] = ce ? cloneIfMounted(te[he]) : normalizeVNode(te[he]);
        be.key != null && Re.set(be.key, he);
      }
      let De, Oe = 0;
      const Ne = Ce - Te + 1;
      let Fe = !1, $e = 0;
      const ze = new Array(Ne);
      for (he = 0; he < Ne; he++)
        ze[he] = 0;
      for (he = Ae; he <= fe; he++) {
        const be = z[he];
        if (Oe >= Ne) {
          X(be, ae, oe, !0);
          continue;
        }
        let Pe;
        if (be.key != null)
          Pe = Re.get(be.key);
        else
          for (De = Te; De <= Ce; De++)
            if (ze[De - Te] === 0 && isSameVNodeType(be, te[De])) {
              Pe = De;
              break;
            }
        Pe === void 0 ? X(be, ae, oe, !0) : (ze[Pe - Te] = he + 1, Pe >= $e ? $e = Pe : Fe = !0, y(
          be,
          te[Pe],
          re,
          null,
          ae,
          oe,
          de,
          ve,
          ce
        ), Oe++);
      }
      const se = Fe ? getSequence(ze) : EMPTY_ARR;
      for (De = se.length - 1, he = Ne - 1; he >= 0; he--) {
        const be = Te + he, Pe = te[be], Ve = be + 1 < ye ? te[be + 1].el : le;
        ze[he] === 0 ? y(
          null,
          Pe,
          re,
          Ve,
          ae,
          oe,
          de,
          ve,
          ce
        ) : Fe && (De < 0 || he !== se[De] ? F(Pe, re, Ve, 2) : De--);
      }
    }
  }, F = (z, te, re, le, ae = null) => {
    const { el: oe, type: de, transition: ve, children: ce, shapeFlag: he } = z;
    if (he & 6) {
      F(z.component.subTree, te, re, le);
      return;
    }
    if (he & 128) {
      z.suspense.move(te, re, le);
      return;
    }
    if (he & 64) {
      de.move(z, te, re, j);
      return;
    }
    if (de === Fragment) {
      t(oe, te, re);
      for (let fe = 0; fe < ce.length; fe++)
        F(ce[fe], te, re, le);
      t(z.anchor, te, re);
      return;
    }
    if (de === Static) {
      m(z, te, re);
      return;
    }
    if (le !== 2 && he & 1 && ve)
      if (le === 0)
        ve.beforeEnter(oe), t(oe, te, re), queuePostRenderEffect(() => ve.enter(oe), ae);
      else {
        const { leave: fe, delayLeave: Ce, afterLeave: Ae } = ve, Te = () => t(oe, te, re), Re = () => {
          fe(oe, () => {
            Te(), Ae && Ae();
          });
        };
        Ce ? Ce(oe, Te, Re) : Re();
      }
    else
      t(oe, te, re);
  }, X = (z, te, re, le = !1, ae = !1) => {
    const {
      type: oe,
      props: de,
      ref: ve,
      children: ce,
      dynamicChildren: he,
      shapeFlag: ye,
      patchFlag: fe,
      dirs: Ce
    } = z;
    if (ve != null && setRef(ve, null, re, z, !0), ye & 256) {
      te.ctx.deactivate(z);
      return;
    }
    const Ae = ye & 1 && Ce, Te = !isAsyncWrapper(z);
    let Re;
    if (Te && (Re = de && de.onVnodeBeforeUnmount) && invokeVNodeHook(Re, te, z), ye & 6)
      B(z.component, re, le);
    else {
      if (ye & 128) {
        z.suspense.unmount(re, le);
        return;
      }
      Ae && invokeDirectiveHook(z, null, te, "beforeUnmount"), ye & 64 ? z.type.remove(
        z,
        te,
        re,
        ae,
        j,
        le
      ) : he && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (oe !== Fragment || fe > 0 && fe & 64) ? D(
        he,
        te,
        re,
        !1,
        !0
      ) : (oe === Fragment && fe & 384 || !ae && ye & 16) && D(ce, te, re), le && Y(z);
    }
    (Te && (Re = de && de.onVnodeUnmounted) || Ae) && queuePostRenderEffect(() => {
      Re && invokeVNodeHook(Re, te, z), Ae && invokeDirectiveHook(z, null, te, "unmounted");
    }, re);
  }, Y = (z) => {
    const { type: te, el: re, anchor: le, transition: ae } = z;
    if (te === Fragment) {
      M(re, le);
      return;
    }
    if (te === Static) {
      L(z);
      return;
    }
    const oe = () => {
      n(re), ae && !ae.persisted && ae.afterLeave && ae.afterLeave();
    };
    if (z.shapeFlag & 1 && ae && !ae.persisted) {
      const { leave: de, delayLeave: ve } = ae, ce = () => de(re, oe);
      ve ? ve(z.el, oe, ce) : ce();
    } else
      oe();
  }, M = (z, te) => {
    let re;
    for (; z !== te; )
      re = a(z), n(z), z = re;
    n(te);
  }, B = (z, te, re) => {
    const { bum: le, scope: ae, update: oe, subTree: de, um: ve } = z;
    le && invokeArrayFns(le), ae.stop(), oe && (oe.active = !1, X(de, z, te, re)), ve && queuePostRenderEffect(ve, te), queuePostRenderEffect(() => {
      z.isUnmounted = !0;
    }, te), te && te.pendingBranch && !te.isUnmounted && z.asyncDep && !z.asyncResolved && z.suspenseId === te.pendingId && (te.deps--, te.deps === 0 && te.resolve());
  }, D = (z, te, re, le = !1, ae = !1, oe = 0) => {
    for (let de = oe; de < z.length; de++)
      X(z[de], te, re, le, ae);
  }, k = (z) => z.shapeFlag & 6 ? k(z.component.subTree) : z.shapeFlag & 128 ? z.suspense.next() : a(z.anchor || z.el), G = (z, te, re) => {
    z == null ? te._vnode && X(te._vnode, null, null, !0) : y(te._vnode || null, z, te, null, null, null, re), flushPreFlushCbs(), flushPostFlushCbs(), te._vnode = z;
  }, j = {
    p: y,
    um: X,
    m: F,
    r: Y,
    mt: $,
    mc: w,
    pc: P,
    pbc: R,
    n: k,
    o: s
  };
  let ee, Z;
  return u && ([ee, Z] = u(
    j
  )), {
    render: G,
    hydrate: ee,
    createApp: createAppAPI(G, ee)
  };
}
function toggleRecurse({ effect: s, update: u }, i) {
  s.allowRecurse = u.allowRecurse = i;
}
function traverseStaticChildren(s, u, i = !1) {
  const t = s.children, n = u.children;
  if (isArray(t) && isArray(n))
    for (let e = 0; e < t.length; e++) {
      const _ = t[e];
      let r = n[e];
      r.shapeFlag & 1 && !r.dynamicChildren && ((r.patchFlag <= 0 || r.patchFlag === 32) && (r = n[e] = cloneIfMounted(n[e]), r.el = _.el), i || traverseStaticChildren(_, r)), r.type === Text && (r.el = _.el);
    }
}
function getSequence(s) {
  const u = s.slice(), i = [0];
  let t, n, e, _, r;
  const o = s.length;
  for (t = 0; t < o; t++) {
    const c = s[t];
    if (c !== 0) {
      if (n = i[i.length - 1], s[n] < c) {
        u[t] = n, i.push(t);
        continue;
      }
      for (e = 0, _ = i.length - 1; e < _; )
        r = e + _ >> 1, s[i[r]] < c ? e = r + 1 : _ = r;
      c < s[i[e]] && (e > 0 && (u[t] = i[e - 1]), i[e] = t);
    }
  }
  for (e = i.length, _ = i[e - 1]; e-- > 0; )
    i[e] = _, _ = u[_];
  return i;
}
const isTeleport = (s) => s.__isTeleport, isTeleportDisabled = (s) => s && (s.disabled || s.disabled === ""), isTargetSVG = (s) => typeof SVGElement < "u" && s instanceof SVGElement, resolveTarget = (s, u) => {
  const i = s && s.to;
  return isString(i) ? u ? u(i) : null : i;
}, TeleportImpl = {
  __isTeleport: !0,
  process(s, u, i, t, n, e, _, r, o, c) {
    const {
      mc: l,
      pc: g,
      pbc: a,
      o: { insert: b, querySelector: V, createText: y, createComment: C }
    } = c, E = isTeleportDisabled(u.props);
    let { shapeFlag: v, children: m, dynamicChildren: L } = u;
    if (s == null) {
      const A = u.el = y(""), K = u.anchor = y("");
      b(A, i, t), b(K, i, t);
      const T = u.target = resolveTarget(u.props, V), w = u.targetAnchor = y("");
      T && (b(w, T), _ = _ || isTargetSVG(T));
      const f = (R, O) => {
        v & 16 && l(
          m,
          R,
          O,
          n,
          e,
          _,
          r,
          o
        );
      };
      E ? f(i, K) : T && f(T, w);
    } else {
      u.el = s.el;
      const A = u.anchor = s.anchor, K = u.target = s.target, T = u.targetAnchor = s.targetAnchor, w = isTeleportDisabled(s.props), f = w ? i : K, R = w ? A : T;
      if (_ = _ || isTargetSVG(K), L ? (a(
        s.dynamicChildren,
        L,
        f,
        n,
        e,
        _,
        r
      ), traverseStaticChildren(s, u, !0)) : o || g(
        s,
        u,
        f,
        R,
        n,
        e,
        _,
        r,
        !1
      ), E)
        w || moveTeleport(
          u,
          i,
          A,
          c,
          1
        );
      else if ((u.props && u.props.to) !== (s.props && s.props.to)) {
        const O = u.target = resolveTarget(
          u.props,
          V
        );
        O && moveTeleport(
          u,
          O,
          null,
          c,
          0
        );
      } else
        w && moveTeleport(
          u,
          K,
          T,
          c,
          1
        );
    }
    updateCssVars(u);
  },
  remove(s, u, i, t, { um: n, o: { remove: e } }, _) {
    const { shapeFlag: r, children: o, anchor: c, targetAnchor: l, target: g, props: a } = s;
    if (g && e(l), (_ || !isTeleportDisabled(a)) && (e(c), r & 16))
      for (let b = 0; b < o.length; b++) {
        const V = o[b];
        n(
          V,
          u,
          i,
          !0,
          !!V.dynamicChildren
        );
      }
  },
  move: moveTeleport,
  hydrate: hydrateTeleport
};
function moveTeleport(s, u, i, { o: { insert: t }, m: n }, e = 2) {
  e === 0 && t(s.targetAnchor, u, i);
  const { el: _, anchor: r, shapeFlag: o, children: c, props: l } = s, g = e === 2;
  if (g && t(_, u, i), (!g || isTeleportDisabled(l)) && o & 16)
    for (let a = 0; a < c.length; a++)
      n(
        c[a],
        u,
        i,
        2
      );
  g && t(r, u, i);
}
function hydrateTeleport(s, u, i, t, n, e, {
  o: { nextSibling: _, parentNode: r, querySelector: o }
}, c) {
  const l = u.target = resolveTarget(
    u.props,
    o
  );
  if (l) {
    const g = l._lpa || l.firstChild;
    if (u.shapeFlag & 16)
      if (isTeleportDisabled(u.props))
        u.anchor = c(
          _(s),
          u,
          r(s),
          i,
          t,
          n,
          e
        ), u.targetAnchor = g;
      else {
        u.anchor = _(s);
        let a = g;
        for (; a; )
          if (a = _(a), a && a.nodeType === 8 && a.data === "teleport anchor") {
            u.targetAnchor = a, l._lpa = u.targetAnchor && _(u.targetAnchor);
            break;
          }
        c(
          g,
          u,
          l,
          i,
          t,
          n,
          e
        );
      }
    updateCssVars(u);
  }
  return u.anchor && _(u.anchor);
}
const Teleport = TeleportImpl;
function updateCssVars(s) {
  const u = s.ctx;
  if (u && u.ut) {
    let i = s.children[0].el;
    for (; i !== s.targetAnchor; )
      i.nodeType === 1 && i.setAttribute("data-v-owner", u.uid), i = i.nextSibling;
    u.ut();
  }
}
const Fragment = Symbol.for("v-fgt"), Text = Symbol.for("v-txt"), Comment = Symbol.for("v-cmt"), Static = Symbol.for("v-stc"), blockStack = [];
let currentBlock = null;
function openBlock(s = !1) {
  blockStack.push(currentBlock = s ? null : []);
}
function closeBlock() {
  blockStack.pop(), currentBlock = blockStack[blockStack.length - 1] || null;
}
let isBlockTreeEnabled = 1;
function setBlockTracking(s) {
  isBlockTreeEnabled += s;
}
function setupBlock(s) {
  return s.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null, closeBlock(), isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(s), s;
}
function createElementBlock(s, u, i, t, n, e) {
  return setupBlock(
    createBaseVNode(
      s,
      u,
      i,
      t,
      n,
      e,
      !0
      /* isBlock */
    )
  );
}
function createBlock(s, u, i, t, n) {
  return setupBlock(
    createVNode(
      s,
      u,
      i,
      t,
      n,
      !0
      /* isBlock: prevent a block from tracking itself */
    )
  );
}
function isVNode(s) {
  return s ? s.__v_isVNode === !0 : !1;
}
function isSameVNodeType(s, u) {
  return s.type === u.type && s.key === u.key;
}
function transformVNodeArgs(s) {
}
const InternalObjectKey = "__vInternal", normalizeKey = ({ key: s }) => s ?? null, normalizeRef = ({
  ref: s,
  ref_key: u,
  ref_for: i
}) => (typeof s == "number" && (s = "" + s), s != null ? isString(s) || isRef(s) || isFunction(s) ? { i: currentRenderingInstance, r: s, k: u, f: !!i } : s : null);
function createBaseVNode(s, u = null, i = null, t = 0, n = null, e = s === Fragment ? 0 : 1, _ = !1, r = !1) {
  const o = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: s,
    props: u,
    key: u && normalizeKey(u),
    ref: u && normalizeRef(u),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children: i,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: e,
    patchFlag: t,
    dynamicProps: n,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance
  };
  return r ? (normalizeChildren(o, i), e & 128 && s.normalize(o)) : i && (o.shapeFlag |= isString(i) ? 8 : 16), isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
  !_ && // has current parent block
  currentBlock && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (o.patchFlag > 0 || e & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  o.patchFlag !== 32 && currentBlock.push(o), o;
}
const createVNode = _createVNode;
function _createVNode(s, u = null, i = null, t = 0, n = null, e = !1) {
  if ((!s || s === NULL_DYNAMIC_COMPONENT) && (s = Comment), isVNode(s)) {
    const r = cloneVNode(
      s,
      u,
      !0
      /* mergeRef: true */
    );
    return i && normalizeChildren(r, i), isBlockTreeEnabled > 0 && !e && currentBlock && (r.shapeFlag & 6 ? currentBlock[currentBlock.indexOf(s)] = r : currentBlock.push(r)), r.patchFlag |= -2, r;
  }
  if (isClassComponent(s) && (s = s.__vccOpts), u) {
    u = guardReactiveProps(u);
    let { class: r, style: o } = u;
    r && !isString(r) && (u.class = normalizeClass(r)), isObject(o) && (isProxy(o) && !isArray(o) && (o = extend({}, o)), u.style = normalizeStyle(o));
  }
  const _ = isString(s) ? 1 : isSuspense(s) ? 128 : isTeleport(s) ? 64 : isObject(s) ? 4 : isFunction(s) ? 2 : 0;
  return createBaseVNode(
    s,
    u,
    i,
    t,
    n,
    _,
    e,
    !0
  );
}
function guardReactiveProps(s) {
  return s ? isProxy(s) || InternalObjectKey in s ? extend({}, s) : s : null;
}
function cloneVNode(s, u, i = !1) {
  const { props: t, ref: n, patchFlag: e, children: _ } = s, r = u ? mergeProps(t || {}, u) : t;
  return {
    __v_isVNode: !0,
    __v_skip: !0,
    type: s.type,
    props: r,
    key: r && normalizeKey(r),
    ref: u && u.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      i && n ? isArray(n) ? n.concat(normalizeRef(u)) : [n, normalizeRef(u)] : normalizeRef(u)
    ) : n,
    scopeId: s.scopeId,
    slotScopeIds: s.slotScopeIds,
    children: _,
    target: s.target,
    targetAnchor: s.targetAnchor,
    staticCount: s.staticCount,
    shapeFlag: s.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: u && s.type !== Fragment ? e === -1 ? 16 : e | 16 : e,
    dynamicProps: s.dynamicProps,
    dynamicChildren: s.dynamicChildren,
    appContext: s.appContext,
    dirs: s.dirs,
    transition: s.transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: s.component,
    suspense: s.suspense,
    ssContent: s.ssContent && cloneVNode(s.ssContent),
    ssFallback: s.ssFallback && cloneVNode(s.ssFallback),
    el: s.el,
    anchor: s.anchor,
    ctx: s.ctx,
    ce: s.ce
  };
}
function createTextVNode(s = " ", u = 0) {
  return createVNode(Text, null, s, u);
}
function createStaticVNode(s, u) {
  const i = createVNode(Static, null, s);
  return i.staticCount = u, i;
}
function createCommentVNode(s = "", u = !1) {
  return u ? (openBlock(), createBlock(Comment, null, s)) : createVNode(Comment, null, s);
}
function normalizeVNode(s) {
  return s == null || typeof s == "boolean" ? createVNode(Comment) : isArray(s) ? createVNode(
    Fragment,
    null,
    // #3666, avoid reference pollution when reusing vnode
    s.slice()
  ) : typeof s == "object" ? cloneIfMounted(s) : createVNode(Text, null, String(s));
}
function cloneIfMounted(s) {
  return s.el === null && s.patchFlag !== -1 || s.memo ? s : cloneVNode(s);
}
function normalizeChildren(s, u) {
  let i = 0;
  const { shapeFlag: t } = s;
  if (u == null)
    u = null;
  else if (isArray(u))
    i = 16;
  else if (typeof u == "object")
    if (t & 65) {
      const n = u.default;
      n && (n._c && (n._d = !1), normalizeChildren(s, n()), n._c && (n._d = !0));
      return;
    } else {
      i = 32;
      const n = u._;
      !n && !(InternalObjectKey in u) ? u._ctx = currentRenderingInstance : n === 3 && currentRenderingInstance && (currentRenderingInstance.slots._ === 1 ? u._ = 1 : (u._ = 2, s.patchFlag |= 1024));
    }
  else
    isFunction(u) ? (u = { default: u, _ctx: currentRenderingInstance }, i = 32) : (u = String(u), t & 64 ? (i = 16, u = [createTextVNode(u)]) : i = 8);
  s.children = u, s.shapeFlag |= i;
}
function mergeProps(...s) {
  const u = {};
  for (let i = 0; i < s.length; i++) {
    const t = s[i];
    for (const n in t)
      if (n === "class")
        u.class !== t.class && (u.class = normalizeClass([u.class, t.class]));
      else if (n === "style")
        u.style = normalizeStyle([u.style, t.style]);
      else if (isOn(n)) {
        const e = u[n], _ = t[n];
        _ && e !== _ && !(isArray(e) && e.includes(_)) && (u[n] = e ? [].concat(e, _) : _);
      } else
        n !== "" && (u[n] = t[n]);
  }
  return u;
}
function invokeVNodeHook(s, u, i, t = null) {
  callWithAsyncErrorHandling(s, u, 7, [
    i,
    t
  ]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(s, u, i) {
  const t = s.type, n = (u ? u.appContext : s.appContext) || emptyAppContext, e = {
    uid: uid++,
    vnode: s,
    type: t,
    parent: u,
    appContext: n,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    scope: new EffectScope(
      !0
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: u ? u.provides : Object.create(n.provides),
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: normalizePropsOptions(t, n),
    emitsOptions: normalizeEmitsOptions(t, n),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: EMPTY_OBJ,
    // inheritAttrs
    inheritAttrs: t.inheritAttrs,
    // state
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    attrsProxy: null,
    slotsProxy: null,
    // suspense related
    suspense: i,
    suspenseId: i ? i.pendingId : 0,
    asyncDep: null,
    asyncResolved: !1,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: !1,
    isUnmounted: !1,
    isDeactivated: !1,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  return e.ctx = { _: e }, e.root = u ? u.root : e, e.emit = emit.bind(null, e), s.ce && s.ce(e), e;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
let internalSetCurrentInstance, globalCurrentInstanceSetters, settersKey = "__VUE_INSTANCE_SETTERS__";
(globalCurrentInstanceSetters = getGlobalThis()[settersKey]) || (globalCurrentInstanceSetters = getGlobalThis()[settersKey] = []), globalCurrentInstanceSetters.push((s) => currentInstance = s), internalSetCurrentInstance = (s) => {
  globalCurrentInstanceSetters.length > 1 ? globalCurrentInstanceSetters.forEach((u) => u(s)) : globalCurrentInstanceSetters[0](s);
};
const setCurrentInstance = (s) => {
  internalSetCurrentInstance(s), s.scope.on();
}, unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off(), internalSetCurrentInstance(null);
};
function isStatefulComponent(s) {
  return s.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = !1;
function setupComponent(s, u = !1) {
  isInSSRComponentSetup = u;
  const { props: i, children: t } = s.vnode, n = isStatefulComponent(s);
  initProps(s, i, n, u), initSlots(s, t);
  const e = n ? setupStatefulComponent(s, u) : void 0;
  return isInSSRComponentSetup = !1, e;
}
function setupStatefulComponent(s, u) {
  const i = s.type;
  s.accessCache = /* @__PURE__ */ Object.create(null), s.proxy = markRaw(new Proxy(s.ctx, PublicInstanceProxyHandlers));
  const { setup: t } = i;
  if (t) {
    const n = s.setupContext = t.length > 1 ? createSetupContext(s) : null;
    setCurrentInstance(s), pauseTracking();
    const e = callWithErrorHandling(
      t,
      s,
      0,
      [s.props, n]
    );
    if (resetTracking(), unsetCurrentInstance(), isPromise(e)) {
      if (e.then(unsetCurrentInstance, unsetCurrentInstance), u)
        return e.then((_) => {
          handleSetupResult(s, _, u);
        }).catch((_) => {
          handleError(_, s, 0);
        });
      s.asyncDep = e;
    } else
      handleSetupResult(s, e, u);
  } else
    finishComponentSetup(s, u);
}
function handleSetupResult(s, u, i) {
  isFunction(u) ? s.type.__ssrInlineRender ? s.ssrRender = u : s.render = u : isObject(u) && (s.setupState = proxyRefs(u)), finishComponentSetup(s, i);
}
let compile$1, installWithProxy;
function registerRuntimeCompiler(s) {
  compile$1 = s, installWithProxy = (u) => {
    u.render._rc && (u.withProxy = new Proxy(u.ctx, RuntimeCompiledPublicInstanceProxyHandlers));
  };
}
const isRuntimeOnly = () => !compile$1;
function finishComponentSetup(s, u, i) {
  const t = s.type;
  if (!s.render) {
    if (!u && compile$1 && !t.render) {
      const n = t.template || resolveMergedOptions(s).template;
      if (n) {
        const { isCustomElement: e, compilerOptions: _ } = s.appContext.config, { delimiters: r, compilerOptions: o } = t, c = extend(
          extend(
            {
              isCustomElement: e,
              delimiters: r
            },
            _
          ),
          o
        );
        t.render = compile$1(n, c);
      }
    }
    s.render = t.render || NOOP, installWithProxy && installWithProxy(s);
  }
  setCurrentInstance(s), pauseTracking(), applyOptions(s), resetTracking(), unsetCurrentInstance();
}
function getAttrsProxy(s) {
  return s.attrsProxy || (s.attrsProxy = new Proxy(
    s.attrs,
    {
      get(u, i) {
        return track(s, "get", "$attrs"), u[i];
      }
    }
  ));
}
function createSetupContext(s) {
  const u = (i) => {
    s.exposed = i || {};
  };
  return {
    get attrs() {
      return getAttrsProxy(s);
    },
    slots: s.slots,
    emit: s.emit,
    expose: u
  };
}
function getExposeProxy(s) {
  if (s.exposed)
    return s.exposeProxy || (s.exposeProxy = new Proxy(proxyRefs(markRaw(s.exposed)), {
      get(u, i) {
        if (i in u)
          return u[i];
        if (i in publicPropertiesMap)
          return publicPropertiesMap[i](s);
      },
      has(u, i) {
        return i in u || i in publicPropertiesMap;
      }
    }));
}
function getComponentName(s, u = !0) {
  return isFunction(s) ? s.displayName || s.name : s.name || u && s.__name;
}
function isClassComponent(s) {
  return isFunction(s) && "__vccOpts" in s;
}
const computed = (s, u) => computed$1(s, u, isInSSRComponentSetup);
function h(s, u, i) {
  const t = arguments.length;
  return t === 2 ? isObject(u) && !isArray(u) ? isVNode(u) ? createVNode(s, null, [u]) : createVNode(s, u) : createVNode(s, null, u) : (t > 3 ? i = Array.prototype.slice.call(arguments, 2) : t === 3 && isVNode(i) && (i = [i]), createVNode(s, u, i));
}
const ssrContextKey = Symbol.for("v-scx"), useSSRContext = () => inject(ssrContextKey);
function initCustomFormatter() {
}
function withMemo(s, u, i, t) {
  const n = i[t];
  if (n && isMemoSame(n, s))
    return n;
  const e = u();
  return e.memo = s.slice(), i[t] = e;
}
function isMemoSame(s, u) {
  const i = s.memo;
  if (i.length != u.length)
    return !1;
  for (let t = 0; t < i.length; t++)
    if (hasChanged(i[t], u[t]))
      return !1;
  return isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(s), !0;
}
const version = "3.3.4", _ssrUtils = {
  createComponentInstance,
  setupComponent,
  renderComponentRoot,
  setCurrentRenderingInstance,
  isVNode,
  normalizeVNode
}, ssrUtils = _ssrUtils, resolveFilter = null, compatUtils = null, svgNS = "http://www.w3.org/2000/svg", doc = typeof document < "u" ? document : null, templateContainer = doc && /* @__PURE__ */ doc.createElement("template"), nodeOps = {
  insert: (s, u, i) => {
    u.insertBefore(s, i || null);
  },
  remove: (s) => {
    const u = s.parentNode;
    u && u.removeChild(s);
  },
  createElement: (s, u, i, t) => {
    const n = u ? doc.createElementNS(svgNS, s) : doc.createElement(s, i ? { is: i } : void 0);
    return s === "select" && t && t.multiple != null && n.setAttribute("multiple", t.multiple), n;
  },
  createText: (s) => doc.createTextNode(s),
  createComment: (s) => doc.createComment(s),
  setText: (s, u) => {
    s.nodeValue = u;
  },
  setElementText: (s, u) => {
    s.textContent = u;
  },
  parentNode: (s) => s.parentNode,
  nextSibling: (s) => s.nextSibling,
  querySelector: (s) => doc.querySelector(s),
  setScopeId(s, u) {
    s.setAttribute(u, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(s, u, i, t, n, e) {
    const _ = i ? i.previousSibling : u.lastChild;
    if (n && (n === e || n.nextSibling))
      for (; u.insertBefore(n.cloneNode(!0), i), !(n === e || !(n = n.nextSibling)); )
        ;
    else {
      templateContainer.innerHTML = t ? `<svg>${s}</svg>` : s;
      const r = templateContainer.content;
      if (t) {
        const o = r.firstChild;
        for (; o.firstChild; )
          r.appendChild(o.firstChild);
        r.removeChild(o);
      }
      u.insertBefore(r, i);
    }
    return [
      // first
      _ ? _.nextSibling : u.firstChild,
      // last
      i ? i.previousSibling : u.lastChild
    ];
  }
};
function patchClass(s, u, i) {
  const t = s._vtc;
  t && (u = (u ? [u, ...t] : [...t]).join(" ")), u == null ? s.removeAttribute("class") : i ? s.setAttribute("class", u) : s.className = u;
}
function patchStyle(s, u, i) {
  const t = s.style, n = isString(i);
  if (i && !n) {
    if (u && !isString(u))
      for (const e in u)
        i[e] == null && setStyle(t, e, "");
    for (const e in i)
      setStyle(t, e, i[e]);
  } else {
    const e = t.display;
    n ? u !== i && (t.cssText = i) : u && s.removeAttribute("style"), "_vod" in s && (t.display = e);
  }
}
const importantRE = /\s*!important$/;
function setStyle(s, u, i) {
  if (isArray(i))
    i.forEach((t) => setStyle(s, u, t));
  else if (i == null && (i = ""), u.startsWith("--"))
    s.setProperty(u, i);
  else {
    const t = autoPrefix(s, u);
    importantRE.test(i) ? s.setProperty(
      hyphenate(t),
      i.replace(importantRE, ""),
      "important"
    ) : s[t] = i;
  }
}
const prefixes = ["Webkit", "Moz", "ms"], prefixCache = {};
function autoPrefix(s, u) {
  const i = prefixCache[u];
  if (i)
    return i;
  let t = camelize(u);
  if (t !== "filter" && t in s)
    return prefixCache[u] = t;
  t = capitalize(t);
  for (let n = 0; n < prefixes.length; n++) {
    const e = prefixes[n] + t;
    if (e in s)
      return prefixCache[u] = e;
  }
  return u;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(s, u, i, t, n) {
  if (t && u.startsWith("xlink:"))
    i == null ? s.removeAttributeNS(xlinkNS, u.slice(6, u.length)) : s.setAttributeNS(xlinkNS, u, i);
  else {
    const e = isSpecialBooleanAttr(u);
    i == null || e && !includeBooleanAttr(i) ? s.removeAttribute(u) : s.setAttribute(u, e ? "" : i);
  }
}
function patchDOMProp(s, u, i, t, n, e, _) {
  if (u === "innerHTML" || u === "textContent") {
    t && _(t, n, e), s[u] = i ?? "";
    return;
  }
  const r = s.tagName;
  if (u === "value" && r !== "PROGRESS" && // custom elements may use _value internally
  !r.includes("-")) {
    s._value = i;
    const c = r === "OPTION" ? s.getAttribute("value") : s.value, l = i ?? "";
    c !== l && (s.value = l), i == null && s.removeAttribute(u);
    return;
  }
  let o = !1;
  if (i === "" || i == null) {
    const c = typeof s[u];
    c === "boolean" ? i = includeBooleanAttr(i) : i == null && c === "string" ? (i = "", o = !0) : c === "number" && (i = 0, o = !0);
  }
  try {
    s[u] = i;
  } catch {
  }
  o && s.removeAttribute(u);
}
function addEventListener(s, u, i, t) {
  s.addEventListener(u, i, t);
}
function removeEventListener(s, u, i, t) {
  s.removeEventListener(u, i, t);
}
function patchEvent(s, u, i, t, n = null) {
  const e = s._vei || (s._vei = {}), _ = e[u];
  if (t && _)
    _.value = t;
  else {
    const [r, o] = parseName(u);
    if (t) {
      const c = e[u] = createInvoker(t, n);
      addEventListener(s, r, c, o);
    } else
      _ && (removeEventListener(s, r, _, o), e[u] = void 0);
  }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(s) {
  let u;
  if (optionsModifierRE.test(s)) {
    u = {};
    let t;
    for (; t = s.match(optionsModifierRE); )
      s = s.slice(0, s.length - t[0].length), u[t[0].toLowerCase()] = !0;
  }
  return [s[2] === ":" ? s.slice(3) : hyphenate(s.slice(2)), u];
}
let cachedNow = 0;
const p = /* @__PURE__ */ Promise.resolve(), getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());
function createInvoker(s, u) {
  const i = (t) => {
    if (!t._vts)
      t._vts = Date.now();
    else if (t._vts <= i.attached)
      return;
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(t, i.value),
      u,
      5,
      [t]
    );
  };
  return i.value = s, i.attached = getNow(), i;
}
function patchStopImmediatePropagation(s, u) {
  if (isArray(u)) {
    const i = s.stopImmediatePropagation;
    return s.stopImmediatePropagation = () => {
      i.call(s), s._stopped = !0;
    }, u.map((t) => (n) => !n._stopped && t && t(n));
  } else
    return u;
}
const nativeOnRE = /^on[a-z]/, patchProp = (s, u, i, t, n = !1, e, _, r, o) => {
  u === "class" ? patchClass(s, t, n) : u === "style" ? patchStyle(s, i, t) : isOn(u) ? isModelListener(u) || patchEvent(s, u, i, t, _) : (u[0] === "." ? (u = u.slice(1), !0) : u[0] === "^" ? (u = u.slice(1), !1) : shouldSetAsProp(s, u, t, n)) ? patchDOMProp(
    s,
    u,
    t,
    e,
    _,
    r,
    o
  ) : (u === "true-value" ? s._trueValue = t : u === "false-value" && (s._falseValue = t), patchAttr(s, u, t, n));
};
function shouldSetAsProp(s, u, i, t) {
  return t ? !!(u === "innerHTML" || u === "textContent" || u in s && nativeOnRE.test(u) && isFunction(i)) : u === "spellcheck" || u === "draggable" || u === "translate" || u === "form" || u === "list" && s.tagName === "INPUT" || u === "type" && s.tagName === "TEXTAREA" || nativeOnRE.test(u) && isString(i) ? !1 : u in s;
}
function defineCustomElement(s, u) {
  const i = defineComponent(s);
  class t extends VueElement {
    constructor(e) {
      super(i, e, u);
    }
  }
  return t.def = i, t;
}
const defineSSRCustomElement = (s) => defineCustomElement(s, hydrate), BaseClass = typeof HTMLElement < "u" ? HTMLElement : class {
};
class VueElement extends BaseClass {
  constructor(u, i = {}, t) {
    super(), this._def = u, this._props = i, this._instance = null, this._connected = !1, this._resolved = !1, this._numberProps = null, this.shadowRoot && t ? t(this._createVNode(), this.shadowRoot) : (this.attachShadow({ mode: "open" }), this._def.__asyncLoader || this._resolveProps(this._def));
  }
  connectedCallback() {
    this._connected = !0, this._instance || (this._resolved ? this._update() : this._resolveDef());
  }
  disconnectedCallback() {
    this._connected = !1, nextTick(() => {
      this._connected || (render$1(null, this.shadowRoot), this._instance = null);
    });
  }
  /**
   * resolve inner component definition (handle possible async component)
   */
  _resolveDef() {
    this._resolved = !0;
    for (let t = 0; t < this.attributes.length; t++)
      this._setAttr(this.attributes[t].name);
    new MutationObserver((t) => {
      for (const n of t)
        this._setAttr(n.attributeName);
    }).observe(this, { attributes: !0 });
    const u = (t, n = !1) => {
      const { props: e, styles: _ } = t;
      let r;
      if (e && !isArray(e))
        for (const o in e) {
          const c = e[o];
          (c === Number || c && c.type === Number) && (o in this._props && (this._props[o] = toNumber(this._props[o])), (r || (r = /* @__PURE__ */ Object.create(null)))[camelize(o)] = !0);
        }
      this._numberProps = r, n && this._resolveProps(t), this._applyStyles(_), this._update();
    }, i = this._def.__asyncLoader;
    i ? i().then((t) => u(t, !0)) : u(this._def);
  }
  _resolveProps(u) {
    const { props: i } = u, t = isArray(i) ? i : Object.keys(i || {});
    for (const n of Object.keys(this))
      n[0] !== "_" && t.includes(n) && this._setProp(n, this[n], !0, !1);
    for (const n of t.map(camelize))
      Object.defineProperty(this, n, {
        get() {
          return this._getProp(n);
        },
        set(e) {
          this._setProp(n, e);
        }
      });
  }
  _setAttr(u) {
    let i = this.getAttribute(u);
    const t = camelize(u);
    this._numberProps && this._numberProps[t] && (i = toNumber(i)), this._setProp(t, i, !1);
  }
  /**
   * @internal
   */
  _getProp(u) {
    return this._props[u];
  }
  /**
   * @internal
   */
  _setProp(u, i, t = !0, n = !0) {
    i !== this._props[u] && (this._props[u] = i, n && this._instance && this._update(), t && (i === !0 ? this.setAttribute(hyphenate(u), "") : typeof i == "string" || typeof i == "number" ? this.setAttribute(hyphenate(u), i + "") : i || this.removeAttribute(hyphenate(u))));
  }
  _update() {
    render$1(this._createVNode(), this.shadowRoot);
  }
  _createVNode() {
    const u = createVNode(this._def, extend({}, this._props));
    return this._instance || (u.ce = (i) => {
      this._instance = i, i.isCE = !0;
      const t = (e, _) => {
        this.dispatchEvent(
          new CustomEvent(e, {
            detail: _
          })
        );
      };
      i.emit = (e, ..._) => {
        t(e, _), hyphenate(e) !== e && t(hyphenate(e), _);
      };
      let n = this;
      for (; n = n && (n.parentNode || n.host); )
        if (n instanceof VueElement) {
          i.parent = n._instance, i.provides = n._instance.provides;
          break;
        }
    }), u;
  }
  _applyStyles(u) {
    u && u.forEach((i) => {
      const t = document.createElement("style");
      t.textContent = i, this.shadowRoot.appendChild(t);
    });
  }
}
function useCssModule(s = "$style") {
  {
    const u = getCurrentInstance();
    if (!u)
      return EMPTY_OBJ;
    const i = u.type.__cssModules;
    if (!i)
      return EMPTY_OBJ;
    const t = i[s];
    return t || EMPTY_OBJ;
  }
}
function useCssVars(s) {
  const u = getCurrentInstance();
  if (!u)
    return;
  const i = u.ut = (n = s(u.proxy)) => {
    Array.from(
      document.querySelectorAll(`[data-v-owner="${u.uid}"]`)
    ).forEach((e) => setVarsOnNode(e, n));
  }, t = () => {
    const n = s(u.proxy);
    setVarsOnVNode(u.subTree, n), i(n);
  };
  watchPostEffect(t), onMounted(() => {
    const n = new MutationObserver(t);
    n.observe(u.subTree.el.parentNode, { childList: !0 }), onUnmounted(() => n.disconnect());
  });
}
function setVarsOnVNode(s, u) {
  if (s.shapeFlag & 128) {
    const i = s.suspense;
    s = i.activeBranch, i.pendingBranch && !i.isHydrating && i.effects.push(() => {
      setVarsOnVNode(i.activeBranch, u);
    });
  }
  for (; s.component; )
    s = s.component.subTree;
  if (s.shapeFlag & 1 && s.el)
    setVarsOnNode(s.el, u);
  else if (s.type === Fragment)
    s.children.forEach((i) => setVarsOnVNode(i, u));
  else if (s.type === Static) {
    let { el: i, anchor: t } = s;
    for (; i && (setVarsOnNode(i, u), i !== t); )
      i = i.nextSibling;
  }
}
function setVarsOnNode(s, u) {
  if (s.nodeType === 1) {
    const i = s.style;
    for (const t in u)
      i.setProperty(`--${t}`, u[t]);
  }
}
const TRANSITION = "transition", ANIMATION = "animation", Transition = (s, { slots: u }) => h(BaseTransition, resolveTransitionProps(s), u);
Transition.displayName = "Transition";
const DOMTransitionPropsValidators = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: !0
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
}, TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend(
  {},
  BaseTransitionPropsValidators,
  DOMTransitionPropsValidators
), callHook = (s, u = []) => {
  isArray(s) ? s.forEach((i) => i(...u)) : s && s(...u);
}, hasExplicitCallback = (s) => s ? isArray(s) ? s.some((u) => u.length > 1) : s.length > 1 : !1;
function resolveTransitionProps(s) {
  const u = {};
  for (const W in s)
    W in DOMTransitionPropsValidators || (u[W] = s[W]);
  if (s.css === !1)
    return u;
  const {
    name: i = "v",
    type: t,
    duration: n,
    enterFromClass: e = `${i}-enter-from`,
    enterActiveClass: _ = `${i}-enter-active`,
    enterToClass: r = `${i}-enter-to`,
    appearFromClass: o = e,
    appearActiveClass: c = _,
    appearToClass: l = r,
    leaveFromClass: g = `${i}-leave-from`,
    leaveActiveClass: a = `${i}-leave-active`,
    leaveToClass: b = `${i}-leave-to`
  } = s, V = normalizeDuration(n), y = V && V[0], C = V && V[1], {
    onBeforeEnter: E,
    onEnter: v,
    onEnterCancelled: m,
    onLeave: L,
    onLeaveCancelled: A,
    onBeforeAppear: K = E,
    onAppear: T = v,
    onAppearCancelled: w = m
  } = u, f = (W, N, $) => {
    removeTransitionClass(W, N ? l : r), removeTransitionClass(W, N ? c : _), $ && $();
  }, R = (W, N) => {
    W._isLeaving = !1, removeTransitionClass(W, g), removeTransitionClass(W, b), removeTransitionClass(W, a), N && N();
  }, O = (W) => (N, $) => {
    const S = W ? T : v, I = () => f(N, W, $);
    callHook(S, [N, I]), nextFrame(() => {
      removeTransitionClass(N, W ? o : e), addTransitionClass(N, W ? l : r), hasExplicitCallback(S) || whenTransitionEnds(N, t, y, I);
    });
  };
  return extend(u, {
    onBeforeEnter(W) {
      callHook(E, [W]), addTransitionClass(W, e), addTransitionClass(W, _);
    },
    onBeforeAppear(W) {
      callHook(K, [W]), addTransitionClass(W, o), addTransitionClass(W, c);
    },
    onEnter: O(!1),
    onAppear: O(!0),
    onLeave(W, N) {
      W._isLeaving = !0;
      const $ = () => R(W, N);
      addTransitionClass(W, g), forceReflow(), addTransitionClass(W, a), nextFrame(() => {
        W._isLeaving && (removeTransitionClass(W, g), addTransitionClass(W, b), hasExplicitCallback(L) || whenTransitionEnds(W, t, C, $));
      }), callHook(L, [W, $]);
    },
    onEnterCancelled(W) {
      f(W, !1), callHook(m, [W]);
    },
    onAppearCancelled(W) {
      f(W, !0), callHook(w, [W]);
    },
    onLeaveCancelled(W) {
      R(W), callHook(A, [W]);
    }
  });
}
function normalizeDuration(s) {
  if (s == null)
    return null;
  if (isObject(s))
    return [NumberOf(s.enter), NumberOf(s.leave)];
  {
    const u = NumberOf(s);
    return [u, u];
  }
}
function NumberOf(s) {
  return toNumber(s);
}
function addTransitionClass(s, u) {
  u.split(/\s+/).forEach((i) => i && s.classList.add(i)), (s._vtc || (s._vtc = /* @__PURE__ */ new Set())).add(u);
}
function removeTransitionClass(s, u) {
  u.split(/\s+/).forEach((t) => t && s.classList.remove(t));
  const { _vtc: i } = s;
  i && (i.delete(u), i.size || (s._vtc = void 0));
}
function nextFrame(s) {
  requestAnimationFrame(() => {
    requestAnimationFrame(s);
  });
}
let endId = 0;
function whenTransitionEnds(s, u, i, t) {
  const n = s._endId = ++endId, e = () => {
    n === s._endId && t();
  };
  if (i)
    return setTimeout(e, i);
  const { type: _, timeout: r, propCount: o } = getTransitionInfo(s, u);
  if (!_)
    return t();
  const c = _ + "end";
  let l = 0;
  const g = () => {
    s.removeEventListener(c, a), e();
  }, a = (b) => {
    b.target === s && ++l >= o && g();
  };
  setTimeout(() => {
    l < o && g();
  }, r + 1), s.addEventListener(c, a);
}
function getTransitionInfo(s, u) {
  const i = window.getComputedStyle(s), t = (V) => (i[V] || "").split(", "), n = t(`${TRANSITION}Delay`), e = t(`${TRANSITION}Duration`), _ = getTimeout(n, e), r = t(`${ANIMATION}Delay`), o = t(`${ANIMATION}Duration`), c = getTimeout(r, o);
  let l = null, g = 0, a = 0;
  u === TRANSITION ? _ > 0 && (l = TRANSITION, g = _, a = e.length) : u === ANIMATION ? c > 0 && (l = ANIMATION, g = c, a = o.length) : (g = Math.max(_, c), l = g > 0 ? _ > c ? TRANSITION : ANIMATION : null, a = l ? l === TRANSITION ? e.length : o.length : 0);
  const b = l === TRANSITION && /\b(transform|all)(,|$)/.test(
    t(`${TRANSITION}Property`).toString()
  );
  return {
    type: l,
    timeout: g,
    propCount: a,
    hasTransform: b
  };
}
function getTimeout(s, u) {
  for (; s.length < u.length; )
    s = s.concat(s);
  return Math.max(...u.map((i, t) => toMs(i) + toMs(s[t])));
}
function toMs(s) {
  return Number(s.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
  return document.body.offsetHeight;
}
const positionMap = /* @__PURE__ */ new WeakMap(), newPositionMap = /* @__PURE__ */ new WeakMap(), TransitionGroupImpl = {
  name: "TransitionGroup",
  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {
    tag: String,
    moveClass: String
  }),
  setup(s, { slots: u }) {
    const i = getCurrentInstance(), t = useTransitionState();
    let n, e;
    return onUpdated(() => {
      if (!n.length)
        return;
      const _ = s.moveClass || `${s.name || "v"}-move`;
      if (!hasCSSTransform(
        n[0].el,
        i.vnode.el,
        _
      ))
        return;
      n.forEach(callPendingCbs), n.forEach(recordPosition);
      const r = n.filter(applyTranslation);
      forceReflow(), r.forEach((o) => {
        const c = o.el, l = c.style;
        addTransitionClass(c, _), l.transform = l.webkitTransform = l.transitionDuration = "";
        const g = c._moveCb = (a) => {
          a && a.target !== c || (!a || /transform$/.test(a.propertyName)) && (c.removeEventListener("transitionend", g), c._moveCb = null, removeTransitionClass(c, _));
        };
        c.addEventListener("transitionend", g);
      });
    }), () => {
      const _ = toRaw(s), r = resolveTransitionProps(_);
      let o = _.tag || Fragment;
      n = e, e = u.default ? getTransitionRawChildren(u.default()) : [];
      for (let c = 0; c < e.length; c++) {
        const l = e[c];
        l.key != null && setTransitionHooks(
          l,
          resolveTransitionHooks(l, r, t, i)
        );
      }
      if (n)
        for (let c = 0; c < n.length; c++) {
          const l = n[c];
          setTransitionHooks(
            l,
            resolveTransitionHooks(l, r, t, i)
          ), positionMap.set(l, l.el.getBoundingClientRect());
        }
      return createVNode(o, null, e);
    };
  }
}, removeMode = (s) => delete s.mode;
TransitionGroupImpl.props;
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(s) {
  const u = s.el;
  u._moveCb && u._moveCb(), u._enterCb && u._enterCb();
}
function recordPosition(s) {
  newPositionMap.set(s, s.el.getBoundingClientRect());
}
function applyTranslation(s) {
  const u = positionMap.get(s), i = newPositionMap.get(s), t = u.left - i.left, n = u.top - i.top;
  if (t || n) {
    const e = s.el.style;
    return e.transform = e.webkitTransform = `translate(${t}px,${n}px)`, e.transitionDuration = "0s", s;
  }
}
function hasCSSTransform(s, u, i) {
  const t = s.cloneNode();
  s._vtc && s._vtc.forEach((_) => {
    _.split(/\s+/).forEach((r) => r && t.classList.remove(r));
  }), i.split(/\s+/).forEach((_) => _ && t.classList.add(_)), t.style.display = "none";
  const n = u.nodeType === 1 ? u : u.parentNode;
  n.appendChild(t);
  const { hasTransform: e } = getTransitionInfo(t);
  return n.removeChild(t), e;
}
const getModelAssigner = (s) => {
  const u = s.props["onUpdate:modelValue"] || !1;
  return isArray(u) ? (i) => invokeArrayFns(u, i) : u;
};
function onCompositionStart(s) {
  s.target.composing = !0;
}
function onCompositionEnd(s) {
  const u = s.target;
  u.composing && (u.composing = !1, u.dispatchEvent(new Event("input")));
}
const vModelText = {
  created(s, { modifiers: { lazy: u, trim: i, number: t } }, n) {
    s._assign = getModelAssigner(n);
    const e = t || n.props && n.props.type === "number";
    addEventListener(s, u ? "change" : "input", (_) => {
      if (_.target.composing)
        return;
      let r = s.value;
      i && (r = r.trim()), e && (r = looseToNumber(r)), s._assign(r);
    }), i && addEventListener(s, "change", () => {
      s.value = s.value.trim();
    }), u || (addEventListener(s, "compositionstart", onCompositionStart), addEventListener(s, "compositionend", onCompositionEnd), addEventListener(s, "change", onCompositionEnd));
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(s, { value: u }) {
    s.value = u ?? "";
  },
  beforeUpdate(s, { value: u, modifiers: { lazy: i, trim: t, number: n } }, e) {
    if (s._assign = getModelAssigner(e), s.composing || document.activeElement === s && s.type !== "range" && (i || t && s.value.trim() === u || (n || s.type === "number") && looseToNumber(s.value) === u))
      return;
    const _ = u ?? "";
    s.value !== _ && (s.value = _);
  }
}, vModelCheckbox = {
  // #4096 array checkboxes need to be deep traversed
  deep: !0,
  created(s, u, i) {
    s._assign = getModelAssigner(i), addEventListener(s, "change", () => {
      const t = s._modelValue, n = getValue(s), e = s.checked, _ = s._assign;
      if (isArray(t)) {
        const r = looseIndexOf(t, n), o = r !== -1;
        if (e && !o)
          _(t.concat(n));
        else if (!e && o) {
          const c = [...t];
          c.splice(r, 1), _(c);
        }
      } else if (isSet(t)) {
        const r = new Set(t);
        e ? r.add(n) : r.delete(n), _(r);
      } else
        _(getCheckboxValue(s, e));
    });
  },
  // set initial checked on mount to wait for true-value/false-value
  mounted: setChecked,
  beforeUpdate(s, u, i) {
    s._assign = getModelAssigner(i), setChecked(s, u, i);
  }
};
function setChecked(s, { value: u, oldValue: i }, t) {
  s._modelValue = u, isArray(u) ? s.checked = looseIndexOf(u, t.props.value) > -1 : isSet(u) ? s.checked = u.has(t.props.value) : u !== i && (s.checked = looseEqual(u, getCheckboxValue(s, !0)));
}
const vModelRadio = {
  created(s, { value: u }, i) {
    s.checked = looseEqual(u, i.props.value), s._assign = getModelAssigner(i), addEventListener(s, "change", () => {
      s._assign(getValue(s));
    });
  },
  beforeUpdate(s, { value: u, oldValue: i }, t) {
    s._assign = getModelAssigner(t), u !== i && (s.checked = looseEqual(u, t.props.value));
  }
}, vModelSelect = {
  // <select multiple> value need to be deep traversed
  deep: !0,
  created(s, { value: u, modifiers: { number: i } }, t) {
    const n = isSet(u);
    addEventListener(s, "change", () => {
      const e = Array.prototype.filter.call(s.options, (_) => _.selected).map(
        (_) => i ? looseToNumber(getValue(_)) : getValue(_)
      );
      s._assign(
        s.multiple ? n ? new Set(e) : e : e[0]
      );
    }), s._assign = getModelAssigner(t);
  },
  // set value in mounted & updated because <select> relies on its children
  // <option>s.
  mounted(s, { value: u }) {
    setSelected(s, u);
  },
  beforeUpdate(s, u, i) {
    s._assign = getModelAssigner(i);
  },
  updated(s, { value: u }) {
    setSelected(s, u);
  }
};
function setSelected(s, u) {
  const i = s.multiple;
  if (!(i && !isArray(u) && !isSet(u))) {
    for (let t = 0, n = s.options.length; t < n; t++) {
      const e = s.options[t], _ = getValue(e);
      if (i)
        isArray(u) ? e.selected = looseIndexOf(u, _) > -1 : e.selected = u.has(_);
      else if (looseEqual(getValue(e), u)) {
        s.selectedIndex !== t && (s.selectedIndex = t);
        return;
      }
    }
    !i && s.selectedIndex !== -1 && (s.selectedIndex = -1);
  }
}
function getValue(s) {
  return "_value" in s ? s._value : s.value;
}
function getCheckboxValue(s, u) {
  const i = u ? "_trueValue" : "_falseValue";
  return i in s ? s[i] : u;
}
const vModelDynamic = {
  created(s, u, i) {
    callModelHook(s, u, i, null, "created");
  },
  mounted(s, u, i) {
    callModelHook(s, u, i, null, "mounted");
  },
  beforeUpdate(s, u, i, t) {
    callModelHook(s, u, i, t, "beforeUpdate");
  },
  updated(s, u, i, t) {
    callModelHook(s, u, i, t, "updated");
  }
};
function resolveDynamicModel(s, u) {
  switch (s) {
    case "SELECT":
      return vModelSelect;
    case "TEXTAREA":
      return vModelText;
    default:
      switch (u) {
        case "checkbox":
          return vModelCheckbox;
        case "radio":
          return vModelRadio;
        default:
          return vModelText;
      }
  }
}
function callModelHook(s, u, i, t, n) {
  const _ = resolveDynamicModel(
    s.tagName,
    i.props && i.props.type
  )[n];
  _ && _(s, u, i, t);
}
function initVModelForSSR() {
  vModelText.getSSRProps = ({ value: s }) => ({ value: s }), vModelRadio.getSSRProps = ({ value: s }, u) => {
    if (u.props && looseEqual(u.props.value, s))
      return { checked: !0 };
  }, vModelCheckbox.getSSRProps = ({ value: s }, u) => {
    if (isArray(s)) {
      if (u.props && looseIndexOf(s, u.props.value) > -1)
        return { checked: !0 };
    } else if (isSet(s)) {
      if (u.props && s.has(u.props.value))
        return { checked: !0 };
    } else if (s)
      return { checked: !0 };
  }, vModelDynamic.getSSRProps = (s, u) => {
    if (typeof u.type != "string")
      return;
    const i = resolveDynamicModel(
      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
      u.type.toUpperCase(),
      u.props && u.props.type
    );
    if (i.getSSRProps)
      return i.getSSRProps(s, u);
  };
}
const systemModifiers = ["ctrl", "shift", "alt", "meta"], modifierGuards = {
  stop: (s) => s.stopPropagation(),
  prevent: (s) => s.preventDefault(),
  self: (s) => s.target !== s.currentTarget,
  ctrl: (s) => !s.ctrlKey,
  shift: (s) => !s.shiftKey,
  alt: (s) => !s.altKey,
  meta: (s) => !s.metaKey,
  left: (s) => "button" in s && s.button !== 0,
  middle: (s) => "button" in s && s.button !== 1,
  right: (s) => "button" in s && s.button !== 2,
  exact: (s, u) => systemModifiers.some((i) => s[`${i}Key`] && !u.includes(i))
}, withModifiers = (s, u) => (i, ...t) => {
  for (let n = 0; n < u.length; n++) {
    const e = modifierGuards[u[n]];
    if (e && e(i, u))
      return;
  }
  return s(i, ...t);
}, keyNames = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
}, withKeys = (s, u) => (i) => {
  if (!("key" in i))
    return;
  const t = hyphenate(i.key);
  if (u.some((n) => n === t || keyNames[n] === t))
    return s(i);
}, vShow = {
  beforeMount(s, { value: u }, { transition: i }) {
    s._vod = s.style.display === "none" ? "" : s.style.display, i && u ? i.beforeEnter(s) : setDisplay(s, u);
  },
  mounted(s, { value: u }, { transition: i }) {
    i && u && i.enter(s);
  },
  updated(s, { value: u, oldValue: i }, { transition: t }) {
    !u != !i && (t ? u ? (t.beforeEnter(s), setDisplay(s, !0), t.enter(s)) : t.leave(s, () => {
      setDisplay(s, !1);
    }) : setDisplay(s, u));
  },
  beforeUnmount(s, { value: u }) {
    setDisplay(s, u);
  }
};
function setDisplay(s, u) {
  s.style.display = u ? s._vod : "none";
}
function initVShowForSSR() {
  vShow.getSSRProps = ({ value: s }) => {
    if (!s)
      return { style: { display: "none" } };
  };
}
const rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);
let renderer, enabledHydration = !1;
function ensureRenderer() {
  return renderer || (renderer = createRenderer(rendererOptions));
}
function ensureHydrationRenderer() {
  return renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions), enabledHydration = !0, renderer;
}
const render$1 = (...s) => {
  ensureRenderer().render(...s);
}, hydrate = (...s) => {
  ensureHydrationRenderer().hydrate(...s);
}, createApp = (...s) => {
  const u = ensureRenderer().createApp(...s), { mount: i } = u;
  return u.mount = (t) => {
    const n = normalizeContainer(t);
    if (!n)
      return;
    const e = u._component;
    !isFunction(e) && !e.render && !e.template && (e.template = n.innerHTML), n.innerHTML = "";
    const _ = i(n, !1, n instanceof SVGElement);
    return n instanceof Element && (n.removeAttribute("v-cloak"), n.setAttribute("data-v-app", "")), _;
  }, u;
}, createSSRApp = (...s) => {
  const u = ensureHydrationRenderer().createApp(...s), { mount: i } = u;
  return u.mount = (t) => {
    const n = normalizeContainer(t);
    if (n)
      return i(n, !0, n instanceof SVGElement);
  }, u;
};
function normalizeContainer(s) {
  return isString(s) ? document.querySelector(s) : s;
}
let ssrDirectiveInitialized = !1;
const initDirectivesForSSR = () => {
  ssrDirectiveInitialized || (ssrDirectiveInitialized = !0, initVModelForSSR(), initVShowForSSR());
}, compile = () => {
}, vue_runtime_esmBundler = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseTransition,
  BaseTransitionPropsValidators,
  Comment,
  EffectScope,
  Fragment,
  KeepAlive,
  ReactiveEffect,
  Static,
  Suspense,
  Teleport,
  Text,
  Transition,
  TransitionGroup,
  VueElement,
  assertNumber,
  callWithAsyncErrorHandling,
  callWithErrorHandling,
  camelize,
  capitalize,
  cloneVNode,
  compatUtils,
  compile,
  computed,
  createApp,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createElementVNode: createBaseVNode,
  createHydrationRenderer,
  createPropsRestProxy,
  createRenderer,
  createSSRApp,
  createSlots,
  createStaticVNode,
  createTextVNode,
  createVNode,
  customRef,
  defineAsyncComponent,
  defineComponent,
  defineCustomElement,
  defineEmits,
  defineExpose,
  defineModel,
  defineOptions,
  defineProps,
  defineSSRCustomElement,
  defineSlots,
  get devtools() {
    return devtools;
  },
  effect,
  effectScope,
  getCurrentInstance,
  getCurrentScope,
  getTransitionRawChildren,
  guardReactiveProps,
  h,
  handleError,
  hasInjectionContext,
  hydrate,
  initCustomFormatter,
  initDirectivesForSSR,
  inject,
  isMemoSame,
  isProxy,
  isReactive,
  isReadonly,
  isRef,
  isRuntimeOnly,
  isShallow,
  isVNode,
  markRaw,
  mergeDefaults,
  mergeModels,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onActivated,
  onBeforeMount,
  onBeforeUnmount,
  onBeforeUpdate,
  onDeactivated,
  onErrorCaptured,
  onMounted,
  onRenderTracked,
  onRenderTriggered,
  onScopeDispose,
  onServerPrefetch,
  onUnmounted,
  onUpdated,
  openBlock,
  popScopeId,
  provide,
  proxyRefs,
  pushScopeId,
  queuePostFlushCb,
  reactive,
  readonly,
  ref,
  registerRuntimeCompiler,
  render: render$1,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDirective,
  resolveDynamicComponent,
  resolveFilter,
  resolveTransitionHooks,
  setBlockTracking,
  setDevtoolsHook,
  setTransitionHooks,
  shallowReactive,
  shallowReadonly,
  shallowRef,
  ssrContextKey,
  ssrUtils,
  stop,
  toDisplayString,
  toHandlerKey,
  toHandlers,
  toRaw,
  toRef,
  toRefs,
  toValue,
  transformVNodeArgs,
  triggerRef,
  unref,
  useAttrs,
  useCssModule,
  useCssVars,
  useModel,
  useSSRContext,
  useSlots,
  useTransitionState,
  vModelCheckbox,
  vModelDynamic,
  vModelRadio,
  vModelSelect,
  vModelText,
  vShow,
  version,
  warn,
  watch,
  watchEffect,
  watchPostEffect,
  watchSyncEffect,
  withAsyncContext,
  withCtx,
  withDefaults,
  withDirectives,
  withKeys,
  withMemo,
  withModifiers,
  withScopeId
}, Symbol.toStringTag, { value: "Module" }));
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getAugmentedNamespace(s) {
  if (s.__esModule)
    return s;
  var u = s.default;
  if (typeof u == "function") {
    var i = function t() {
      return this instanceof t ? Reflect.construct(u, arguments, this.constructor) : u.apply(this, arguments);
    };
    i.prototype = u.prototype;
  } else
    i = {};
  return Object.defineProperty(i, "__esModule", { value: !0 }), Object.keys(s).forEach(function(t) {
    var n = Object.getOwnPropertyDescriptor(s, t);
    Object.defineProperty(i, t, n.get ? n : {
      enumerable: !0,
      get: function() {
        return s[t];
      }
    });
  }), i;
}
var index_umd = { exports: {} }, src = { exports: {} }, hasRequiredSrc;
function requireSrc() {
  return hasRequiredSrc || (hasRequiredSrc = 1, function(module, exports) {
    (function(u, i) {
      module.exports = i();
    })(self, () => (
      /******/
      (() => {
        var __webpack_modules__ = {
          /***/
          "./esm/annotation.js": (
            /*!***************************!*\
              !*** ./esm/annotation.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Annotation: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                Circle: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                Poly: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                PolyLine: () => (
                  /* binding */
                  C
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), r = i(
                /*! ./graphics/tessellator.js */
                "./esm/graphics/tessellator.js"
              ), o = i(
                /*! ./color.js */
                "./esm/color.js"
              ), c = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              );
              function l() {
                this.addedToPrimitives = !1, this.annotationDirty = !0, this._opacity = 1, this._showHoverLabel = !1;
              }
              l.pointList = null, l.lineList = null, l.triangleFanPointList = null, l.triangleList = null, l.batchDirty = !0, l.prepBatch = function(v) {
                (l.pointList == null || l.batchDirty) && (l.pointList = new _.PointList(v), l.lineList = new _.LineList(), l.triangleFanPointList = new _.TriangleFanList(), l.triangleList = new _.TriangleList(), l.lineList.set_depthBuffered(!1), l.triangleList.depthBuffered = !1);
              }, l.drawBatch = function(v) {
                l.batchDirty = !1, v.gl != null && (l.pointList != null && l.pointList.draw(v, 1, !1), l.lineList != null && l.lineList.drawLines(v, 1), l.triangleFanPointList != null && l.triangleFanPointList.draw(v, 1), l.triangleList != null && l.triangleList.draw(v, 1, 0));
              }, l.separation = function(v, m, L, A) {
                m = m / 180 * Math.PI, A = A / 180 * Math.PI, v = v / 12 * Math.PI, L = L / 12 * Math.PI;
                var K = Math.cos(m) * Math.sin(A) - Math.sin(m) * Math.cos(A) * Math.cos(L - v), T = Math.cos(A) * Math.sin(L - v), w = Math.sin(m) * Math.sin(A) + Math.cos(m) * Math.cos(A) * Math.cos(L - v), f = Math.atan2(Math.sqrt(K * K + T * T), w);
                return f = f / Math.PI * 180, f < 0 && (f += 180), f;
              }, l.colorToUint = function(v) {
                return v.a << 24 | v.r << 16 | v.g << 8 | v.b;
              }, l.colorToUintAlpha = function(v, m) {
                return m << 24 | v.r << 16 | v.g << 8 | v.b;
              };
              var g = {
                draw: function(v) {
                },
                get_opacity: function() {
                  return this._opacity;
                },
                set_opacity: function(v) {
                  return l.batchDirty = !0, this._opacity = v, v;
                },
                get_id: function() {
                  return this._id;
                },
                set_id: function(v) {
                  return this._id = v, v;
                },
                get_tag: function() {
                  return this._tag;
                },
                set_tag: function(v) {
                  return this._tag = v, v;
                },
                get_label: function() {
                  return this._label;
                },
                set_label: function(v) {
                  return this._label = v, v;
                },
                get_showHoverLabel: function() {
                  return this._showHoverLabel;
                },
                set_showHoverLabel: function(v) {
                  return this._showHoverLabel = v, v;
                },
                hitTest: function(v, m, L, A, K) {
                  return !1;
                },
                get_center: function() {
                  return this.center;
                },
                set_center: function(v) {
                  return this.center = v, v;
                }
              };
              (0, t.registerType)("Annotation", [l, g, null]);
              function a() {
                this._fill$1 = !1, this._skyRelative$1 = !1, this._strokeWidth$1 = 1, this._radius$1 = 10, this._lineColor$1 = o.Colors.get_white(), this._fillColor$1 = o.Colors.get_white(), this._ra$1 = 0, this._dec$1 = 0, l.call(this);
              }
              var b = {
                get_fill: function() {
                  return this._fill$1;
                },
                set_fill: function(v) {
                  return l.batchDirty = !0, this._fill$1 = v, v;
                },
                get_skyRelative: function() {
                  return this._skyRelative$1;
                },
                set_skyRelative: function(v) {
                  return l.batchDirty = !0, this._skyRelative$1 = v, v;
                },
                get_lineWidth: function() {
                  return this._strokeWidth$1;
                },
                set_lineWidth: function(v) {
                  return l.batchDirty = !0, this._strokeWidth$1 = v, v;
                },
                get_radius: function() {
                  return this._radius$1;
                },
                set_radius: function(v) {
                  return l.batchDirty = !0, this._radius$1 = v, v;
                },
                get_lineColor: function() {
                  return this._lineColor$1.toString();
                },
                set_lineColor: function(v) {
                  return l.batchDirty = !0, this._lineColor$1 = o.Color.load(v), v;
                },
                get_fillColor: function() {
                  return this._fillColor$1.toString();
                },
                set_fillColor: function(v) {
                  return l.batchDirty = !0, this._fillColor$1 = o.Color.fromName(v), v;
                },
                setCenter: function(v, m) {
                  l.batchDirty = !0, this._ra$1 = v / 15, this._dec$1 = m, this.center = c.Coordinates.raDecTo3d(this._ra$1, this._dec$1);
                },
                draw: function(v) {
                  var m = !0, L = this._radius$1;
                  this._skyRelative$1 && (L /= v.get_fovScale() / 3600);
                  var A = v.WVP.transform(this.center);
                  if (A.z < 0 && (m = !1), e.Vector3d.dot(v.get_viewPoint(), this.center) < 0.55 && (m = !1), v.gl != null) {
                    if (l.batchDirty || this.annotationDirty) {
                      for (var K = e.Vector3d.create(0, 1, 0), T = e.Vector3d.cross(this.center, K), w = e.Vector3d.cross(this.center, T), f = this._radius$1 / 44, R = 72, O = Math.PI * 2 / R, W = [], N = 0; N <= R; N++) {
                        var $ = Math.cos(N * O) * f, S = Math.sin(N * O) * f;
                        W.push(e.Vector3d.create(this.center.x + $ * T.x + S * w.x, this.center.y + $ * T.y + S * w.y, this.center.z + $ * T.z + S * w.z));
                      }
                      if (this._strokeWidth$1 > 0 && W.length > 1) {
                        var I = this._lineColor$1._clone();
                        I.a = Math.round(I.a * this.get_opacity());
                        for (var x = 0; x < W.length - 1; x++)
                          l.lineList.addLine(W[x], W[x + 1], I, new _.Dates(0, 1));
                      }
                      if (this._fill$1) {
                        var P = this._fillColor$1._clone();
                        P.a = Math.round(P.a * this.get_opacity());
                        var d = e.Vector3d.create(this.center.x, this.center.y, this.center.z);
                        W.splice(0, 0, d), l.triangleFanPointList.addShape(W, P, new _.Dates(0, 1));
                      }
                      this.annotationDirty = !1;
                    }
                  } else if (m) {
                    var U = v.device;
                    U.save(), U.globalAlpha = this.get_opacity(), U.beginPath(), U.arc(A.x, A.y, L, 0, Math.PI * 2, !0), U.lineWidth = this._strokeWidth$1, U.fillStyle = this._fillColor$1.toString(), this._fill$1 && U.fill(), U.globalAlpha = 1, U.strokeStyle = this._lineColor$1.toString(), U.stroke(), U.restore();
                  }
                },
                hitTest: function(v, m, L, A, K) {
                  if (n.ss.emptyString(this.get_id()))
                    return !1;
                  var T = this._radius$1;
                  return this._skyRelative$1 || (T *= v.get_fovScale() / 3600), l.separation(m, L, this._ra$1, this._dec$1) < T;
                }
              };
              (0, t.registerType)("Circle", [a, b, l]);
              function V() {
                this._points$1 = [], this._fill$1 = !1, this._strokeWidth$1 = 1, this._lineColor$1 = o.Colors.get_white(), this._fillColor$1 = o.Colors.get_white(), l.call(this);
              }
              var y = {
                addPoint: function(v, m) {
                  l.batchDirty = !0, this._points$1.push(c.Coordinates.raDecTo3d(v / 15, m));
                },
                get_fill: function() {
                  return this._fill$1;
                },
                set_fill: function(v) {
                  return l.batchDirty = !0, this._fill$1 = v, v;
                },
                get_lineWidth: function() {
                  return this._strokeWidth$1;
                },
                set_lineWidth: function(v) {
                  return l.batchDirty = !0, this._strokeWidth$1 = v, v;
                },
                get_lineColor: function() {
                  return this._lineColor$1.toString();
                },
                set_lineColor: function(v) {
                  return l.batchDirty = !0, this._lineColor$1 = o.Color.fromName(v), v;
                },
                get_fillColor: function() {
                  return this._fillColor$1.toString();
                },
                set_fillColor: function(v) {
                  return l.batchDirty = !0, this._fillColor$1 = o.Color.fromName(v), v;
                },
                draw: function(v) {
                  if (v.gl != null) {
                    if (l.batchDirty || this.annotationDirty) {
                      var m = this._points$1;
                      if (this._strokeWidth$1 > 0 && this._points$1.length > 1) {
                        var L = this._lineColor$1._clone();
                        L.a = Math.round(L.a * this.get_opacity());
                        for (var A = 0; A < this._points$1.length - 1; A++)
                          l.lineList.addLine(m[A], m[A + 1], L, new _.Dates(0, 1));
                        l.lineList.addLine(m[this._points$1.length - 1], m[0], L, new _.Dates(0, 1));
                      }
                      if (this._fill$1) {
                        var K = this._fillColor$1._clone();
                        K.a = Math.round(K.a * this.get_opacity());
                        for (var T = r.Tessellator.tesselateSimplePoly(m), A = 0; A < T.length; A += 3)
                          l.triangleList.addSubdividedTriangles(m[T[A]], m[T[A + 1]], m[T[A + 2]], K, new _.Dates(0, 1), 2);
                      }
                      this.annotationDirty = !1;
                    }
                  } else {
                    var w = v.device;
                    w.save(), w.globalAlpha = this.get_opacity(), w.beginPath();
                    for (var f = !0, R = n.ss.enumerate(this._points$1); R.moveNext(); ) {
                      var O = R.current, W = v.WVP.transform(O);
                      if (W.z < 0) {
                        w.restore();
                        return;
                      }
                      if (e.Vector3d.dot(v.get_viewPoint(), O) < 0.75) {
                        w.restore();
                        return;
                      }
                      f ? (f = !1, w.moveTo(W.x, W.y)) : w.lineTo(W.x, W.y);
                    }
                    w.closePath(), w.lineWidth = this._strokeWidth$1, this._fill$1 && (w.fillStyle = this._fillColor$1.toString(), w.fill()), w.strokeStyle = this._lineColor$1.toString(), w.globalAlpha = 1, w.stroke(), w.restore();
                  }
                }
              };
              (0, t.registerType)("Poly", [V, y, l]);
              function C() {
                this._points$1 = [], this._strokeWidth$1 = 1, this._lineColor$1 = o.Colors.get_white(), l.call(this);
              }
              var E = {
                addPoint: function(v, m) {
                  l.batchDirty = !0, this._points$1.push(c.Coordinates.raDecTo3d(v / 15, m));
                },
                get_lineWidth: function() {
                  return this._strokeWidth$1;
                },
                set_lineWidth: function(v) {
                  return l.batchDirty = !0, this._strokeWidth$1 = v, v;
                },
                get_lineColor: function() {
                  return this._lineColor$1.toString();
                },
                set_lineColor: function(v) {
                  return l.batchDirty = !0, this._lineColor$1 = o.Color.fromName(v), v;
                },
                draw: function(v) {
                  if (v.gl != null) {
                    if (l.batchDirty || this.annotationDirty) {
                      var m = this._points$1;
                      if (this._strokeWidth$1 > 0) {
                        var L = this._lineColor$1._clone();
                        L.a = Math.round(L.a * this.get_opacity());
                        for (var A = 0; A < this._points$1.length - 1; A++)
                          l.lineList.addLine(m[A], m[A + 1], L, new _.Dates(0, 1));
                      }
                      this.annotationDirty = !1;
                    }
                  } else {
                    var K = v.device;
                    K.save(), K.globalAlpha = this.get_opacity();
                    for (var T = !0, w = n.ss.enumerate(this._points$1); w.moveNext(); ) {
                      var f = w.current, R = v.WVP.transform(f);
                      if (R.z < 0) {
                        K.restore();
                        return;
                      }
                      if (e.Vector3d.dot(v.get_viewPoint(), f) < 0.75) {
                        K.restore();
                        return;
                      }
                      T ? (T = !1, K.beginPath(), K.moveTo(R.x, R.y)) : K.lineTo(R.x, R.y);
                    }
                    K.lineWidth = this._strokeWidth$1, K.strokeStyle = this._lineColor$1.toString(), K.stroke(), K.restore();
                  }
                }
              };
              (0, t.registerType)("PolyLine", [C, E, l]);
            }
          ),
          /***/
          "./esm/astrocalc.js": (
            /*!**************************!*\
              !*** ./esm/astrocalc.js ***!
              \**************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                AstroCalc: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                AstroRaDec: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                RiseSetDetails: () => (
                  /* binding */
                  A
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./util.js */
                "./esm/util.js"
              ), _ = i(
                /*! ./astrocalc/coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), r = i(
                /*! ./astrocalc/date.js */
                "./esm/astrocalc/date.js"
              ), o = i(
                /*! ./astrocalc/nutation.js */
                "./esm/astrocalc/nutation.js"
              ), c = i(
                /*! ./astrocalc/parallax.js */
                "./esm/astrocalc/parallax.js"
              ), l = i(
                /*! ./astrocalc/physical_jupiter.js */
                "./esm/astrocalc/physical_jupiter.js"
              ), g = i(
                /*! ./astrocalc/rise_transit_set.js */
                "./esm/astrocalc/rise_transit_set.js"
              ), a = i(
                /*! ./astrocalc/elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), b = i(
                /*! ./astrocalc/galilean_moons.js */
                "./esm/astrocalc/galilean_moons.js"
              ), V = i(
                /*! ./astrocalc/moon.js */
                "./esm/astrocalc/moon.js"
              ), y = new b.GMDS(), C = new a.EPD(), E = new l.CAAPhysicalJupiterDetails(), v = 0;
              function m(f, R, O, W, N) {
                this.RA = 0, this.dec = 0, this.distance = 0, this.shadow = !1, this.eclipsed = !1, this.RA = f, this.dec = R, this.distance = O, this.shadow = W, this.eclipsed = N;
              }
              var L = {};
              (0, t.registerType)("AstroRaDec", [m, L, null]);
              function A(f, R, O, W, N) {
                this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bNeverRises = !1, this.bValid = f, this.rise = R, this.transit = O, this.set = W, this.bNeverRises = N;
              }
              var K = {};
              (0, t.registerType)("RiseSetDetails", [A, K, null]);
              function T() {
              }
              T.getPlanet = function(f, R, O, W, N) {
                var $ = R;
                if (W = -W, $ < 9) {
                  var S = a.ELL.calculate(f, R), I = c.CAAParallax.equatorial2Topocentric(S.apparentGeocentricRA, S.apparentGeocentricDeclination, S.apparentGeocentricDistance, W, O, N, f);
                  return new m(I.x, I.y, S.apparentGeocentricDistance, !1, !1);
                } else if ($ === 9) {
                  var x = V.CAAMoon.eclipticLatitude(f), P = V.CAAMoon.eclipticLongitude(f), d = V.CAAMoon.radiusVector(f) / 149598e3, U = o.CAANutation.trueObliquityOfEcliptic(f), F = _.CT.ec2Eq(P, x, U), I = c.CAAParallax.equatorial2Topocentric(F.x, F.y, d, W, O, N, f);
                  return new m(I.x, I.y, d, !1, !1);
                } else {
                  if (f !== v) {
                    C = a.ELL.calculate(f, 4), E = l.CAAPhysicalJupiter.calculate(f);
                    var I = c.CAAParallax.equatorial2Topocentric(C.apparentGeocentricRA, C.apparentGeocentricDeclination, C.apparentGeocentricDistance, W, O, N, f);
                    C.apparentGeocentricRA = I.x, C.apparentGeocentricDeclination = I.y, y = b.GM.calculate(f), v = f;
                  }
                  var X = 954501e-9, Y = Math.atan(0.5 * (X / C.apparentGeocentricDistance)) / 3.1415927 * 180, M = Y / Math.cos(C.apparentGeocentricDeclination / 180 * 3.1415927) / 15, B = 0, D = 0, k = 0, G = !1, j = !1;
                  switch ($) {
                    case 10:
                      B = y.satellite1.apparentRectangularCoordinates.x, D = y.satellite1.apparentRectangularCoordinates.y, k = y.satellite1.apparentRectangularCoordinates.z, j = y.satellite1.bInEclipse, G = y.satellite1.bInShadowTransit;
                      break;
                    case 11:
                      B = y.satellite2.apparentRectangularCoordinates.x, D = y.satellite2.apparentRectangularCoordinates.y, k = y.satellite2.apparentRectangularCoordinates.z, j = y.satellite2.bInEclipse, G = y.satellite2.bInShadowTransit;
                      break;
                    case 12:
                      B = y.satellite3.apparentRectangularCoordinates.x, D = y.satellite3.apparentRectangularCoordinates.y, k = y.satellite3.apparentRectangularCoordinates.z, j = y.satellite3.bInEclipse, G = y.satellite3.bInShadowTransit;
                      break;
                    case 13:
                      B = y.satellite4.apparentRectangularCoordinates.x, D = y.satellite4.apparentRectangularCoordinates.y, k = y.satellite4.apparentRectangularCoordinates.z, j = y.satellite4.bInEclipse, G = y.satellite4.bInShadowTransit;
                      break;
                    case 14:
                      B = y.satellite1.apparentShadowRectangularCoordinates.x, D = y.satellite1.apparentShadowRectangularCoordinates.y, k = y.satellite1.apparentShadowRectangularCoordinates.z * 0.9, G = y.satellite1.bInShadowTransit;
                      break;
                    case 15:
                      B = y.satellite2.apparentShadowRectangularCoordinates.x, D = y.satellite2.apparentShadowRectangularCoordinates.y, k = y.satellite2.apparentShadowRectangularCoordinates.z * 0.9, G = y.satellite2.bInShadowTransit;
                      break;
                    case 16:
                      B = y.satellite3.apparentShadowRectangularCoordinates.x, D = y.satellite3.apparentShadowRectangularCoordinates.y, k = y.satellite3.apparentShadowRectangularCoordinates.z * 0.9, G = y.satellite3.bInShadowTransit;
                      break;
                    case 17:
                      B = y.satellite4.apparentShadowRectangularCoordinates.x, D = y.satellite4.apparentShadowRectangularCoordinates.y, k = y.satellite4.apparentShadowRectangularCoordinates.z * 0.9, G = y.satellite4.bInShadowTransit;
                      break;
                  }
                  var ee, Z, z = E.p / 180 * 3.1415927;
                  return ee = B * Math.cos(z) - D * Math.sin(z), Z = B * Math.sin(z) + D * Math.cos(z), B = ee, D = Z, new m(C.apparentGeocentricRA - B * M, C.apparentGeocentricDeclination + D * Y, C.apparentGeocentricDistance + k * X / 2, G, j);
                }
              }, T.getJulianDay = function(f, R, O) {
                return r.DT.dateToJD(n.ss.truncate(f), n.ss.truncate(R), O, !0);
              }, T.eclipticToJ2000 = function(f, R, O) {
                var W = _.CT.ec2Eq(f, R, o.CAANutation.trueObliquityOfEcliptic(O));
                return new m(W.x, W.y, 0, !1, !1);
              }, T.galacticToJ2000 = function(f, R) {
                var O = _.CT.g2Eq(f, R);
                return new m(O.x, O.y, 0, !1, !1);
              }, T.j2000ToGalactic = function(f, R) {
                var O = _.CT.eq2G(f, R);
                return new m(O.x, O.y, 0, !1, !1);
              }, T.getRiseTrinsitSet = function(f, R, O, W, N, $, S, I, x, P) {
                var d = -0.5667;
                switch (P) {
                  case 0:
                    d = -0.5667;
                    break;
                  case 1:
                    d = -0.8333;
                    break;
                  case 2:
                    d = 0.125;
                    break;
                }
                var U = g.CAARiseTransitSet.rise(f, W, N, $, S, I, x, O, R, d), F = !1;
                return U.bValid || (F = e.Util.sign(R) !== e.Util.sign(S)), new A(U.bValid, U.rise, U.transit, U.set, F);
              };
              var w = {};
              (0, t.registerType)("AstroCalc", [T, w, null]);
            }
          ),
          /***/
          "./esm/astrocalc/aberration.js": (
            /*!*************************************!*\
              !*** ./esm/astrocalc/aberration.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ABR: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                ACFT: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./sun.js */
                "./esm/astrocalc/sun.js"
              );
              function _(g, a, b, V, y, C, E, v, m, L, A, K, T, w, f, R, O, W, N, $, S, I, x) {
                this.l2 = 0, this.l3 = 0, this.l4 = 0, this.l5 = 0, this.l6 = 0, this.l7 = 0, this.l8 = 0, this.ldash = 0, this.d = 0, this.mdash = 0, this.f = 0, this.xsin = 0, this.xsint = 0, this.xcos = 0, this.xcost = 0, this.ysin = 0, this.ysint = 0, this.ycos = 0, this.ycost = 0, this.zsin = 0, this.zsint = 0, this.zcos = 0, this.zcost = 0, this.l2 = g, this.l3 = a, this.l4 = b, this.l5 = V, this.l6 = y, this.l7 = C, this.l8 = E, this.ldash = v, this.d = m, this.mdash = L, this.f = A, this.xsin = K, this.xsint = T, this.xcos = w, this.xcost = f, this.ysin = R, this.ysint = O, this.ycos = W, this.ycost = N, this.zsin = $, this.zsint = S, this.zcos = I, this.zcost = x;
              }
              var r = {};
              (0, t.registerType)("ACFT", [_, r, null]);
              const o = [new _(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1719914, -2, -25, 0, 25, -13, 1578089, 156, 10, 32, 684185, -358), new _(0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6434, 141, 28007, -107, 25697, -95, -5904, -130, 11141, -48, -2559, -55), new _(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 715, 0, 0, 0, 6, 0, -657, 0, -15, 0, -282, 0), new _(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 715, 0, 0, 0, 0, 0, -656, 0, 0, 0, -285, 0), new _(0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 486, -5, -236, -4, -216, -4, -446, 5, -94, 0, -193, 0), new _(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 2, 0, -147, 0, -6, 0, -61, 0), new _(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, -59, 0), new _(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 39, 0, 0, 0, 0, 0, -36, 0, 0, 0, -16, 0), new _(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 33, 0, -10, 0, -9, 0, -30, 0, -5, 0, -13, 0), new _(0, 2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 31, 0, 1, 0, 1, 0, -28, 0, 0, 0, -12, 0), new _(0, 3, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, 25, 0, 8, 0, 11, 0, 3, 0), new _(0, 5, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, -25, 0, -8, 0, -11, 0, -3, 0), new _(2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, -19, 0, 0, 0, -8, 0), new _(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, 0, 17, 0, 0, 0, 8, 0), new _(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, -16, 0, 0, 0, -7, 0), new _(0, 1, 0, -2, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 1, 0, 7, 0), new _(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, -15, 0, -3, 0, -6, 0), new _(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, -1, 0, -1, 0, -10, 0, -1, 0, -5, 0), new _(2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, -10, 0, 0, 0, -4, 0, 0, 0), new _(0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, -11, 0, -2, 0, -2, 0, 9, 0, -1, 0, 4, 0), new _(0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -8, 0, -8, 0, 6, 0, -3, 0, 3, 0), new _(0, 3, 0, -2, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 9, 0, 0, 0, 4, 0), new _(1, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -9, 0, 0, 0, -4, 0), new _(2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -8, 0, 0, 0, -4, 0), new _(0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, -8, 0, 0, 0, -3, 0, 0, 0), new _(2, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 8, 0, 0, 0, 3, 0, 0, 0), new _(0, 3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, -8, 0, 0, 0, -3, 0), new _(0, 0, 0, 0, 0, 0, 0, 1, 2, -1, 0, 8, 0, 0, 0, 0, 0, -7, 0, 0, 0, -3, 0), new _(8, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, -6, 0, 4, 0, -3, 0, 2, 0), new _(8, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, 6, 0, -4, 0, 3, 0, -2, 0), new _(0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, -5, 0, -4, 0, 5, 0, -2, 0, 2, 0), new _(3, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -2, 0, -7, 0, 1, 0, -4, 0), new _(0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 4, 0, -6, 0, -5, 0, -4, 0, -2, 0, -2, 0), new _(3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -6, 0, 0, 0, -3, 0, 0, 0), new _(0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, -5, 0, -4, 0, -5, 0, -2, 0, -2, 0), new _(0, 0, 0, 0, 0, 0, 0, 1, -2, 0, 0, 5, 0, 0, 0, 0, 0, -5, 0, 0, 0, -2, 0)];
              function c() {
              }
              c.earthVelocity = function(g) {
                for (var a = (g - 2451545) / 36525, b = 3.1761467 + 1021.3285546 * a, V = 1.7534703 + 628.3075849 * a, y = 6.2034809 + 334.0612431 * a, C = 0.5995465 + 52.9690965 * a, E = 0.8740168 + 21.3299095 * a, v = 5.4812939 + 7.4781599 * a, m = 5.3118863 + 3.8133036 * a, L = 3.8103444 + 8399.6847337 * a, A = 5.1984667 + 7771.3771486 * a, K = 2.3555559 + 8328.6914289 * a, T = 1.6279052 + 8433.4661601 * a, w = new n.C3D(), f = o.length, R = 0; R < f; R++) {
                  var O = o[R].l2 * b + o[R].l3 * V + o[R].l4 * y + o[R].l5 * C + o[R].l6 * E + o[R].l7 * v + o[R].l8 * m + o[R].ldash * L + o[R].d * A + o[R].mdash * K + o[R].f * T;
                  w.x += (o[R].xsin + o[R].xsint * a) * Math.sin(O), w.x += (o[R].xcos + o[R].xcost * a) * Math.cos(O), w.y += (o[R].ysin + o[R].ysint * a) * Math.sin(O), w.y += (o[R].ycos + o[R].ycost * a) * Math.cos(O), w.z += (o[R].zsin + o[R].zsint * a) * Math.sin(O), w.z += (o[R].zcos + o[R].zcost * a) * Math.cos(O);
                }
                return w;
              }, c.eclipticAberration = function(g, a, b) {
                var V = new n.COR(), y = (b - 2451545) / 36525, C = y * y, E = 0.016708634 - 42037e-9 * y - 1267e-10 * C, v = 102.93735 + 1.71946 * y + 46e-5 * C, m = 20.49552, L = e.CAASun.geometricEclipticLongitude(b);
                return v = n.CT.d2R(v), g = n.CT.d2R(g), a = n.CT.d2R(a), L = n.CT.d2R(L), V.x = (-m * Math.cos(L - g) + E * m * Math.cos(v - g)) / Math.cos(a) / 3600, V.y = -m * Math.sin(a) * (Math.sin(L - g) - E * Math.sin(v - g)) / 3600, V;
              }, c.equatorialAberration = function(g, a, b) {
                g = n.CT.d2R(g * 15), a = n.CT.d2R(a);
                var V = Math.cos(g), y = Math.sin(g), C = Math.cos(a), E = Math.sin(a), v = c.earthVelocity(b), m = new n.COR();
                return m.x = n.CT.r2H((v.y * V - v.x * y) / (17314463350 * C)), m.y = n.CT.r2D(-(((v.x * V + v.y * y) * E - v.z * C) / 17314463350)), m;
              };
              var l = {};
              (0, t.registerType)("ABR", [c, l, null]);
            }
          ),
          /***/
          "./esm/astrocalc/angular_separation.js": (
            /*!*********************************************!*\
              !*** ./esm/astrocalc/angular_separation.js ***!
              \*********************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ASEP: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.separation = function(r, o, c, l) {
                o = n.CT.d2R(o), l = n.CT.d2R(l), r = n.CT.h2R(r), c = n.CT.h2R(c);
                var g = Math.cos(o) * Math.sin(l) - Math.sin(o) * Math.cos(l) * Math.cos(c - r), a = Math.cos(l) * Math.sin(c - r), b = Math.sin(o) * Math.sin(l) + Math.cos(o) * Math.cos(l) * Math.cos(c - r), V = Math.atan2(Math.sqrt(g * g + a * a), b);
                return V = n.CT.r2D(V), V < 0 && (V += 180), V;
              }, e.positionAngle = function(r, o, c, l) {
                var g, a, b, V;
                a = n.CT.d2R(o), V = n.CT.d2R(l), g = n.CT.h2R(r), b = n.CT.h2R(c);
                var y = g - b, C = Math.cos(V) * Math.tan(a) - Math.sin(V) * Math.cos(y), E = Math.sin(y), v = Math.atan2(E, C);
                return v = n.CT.r2D(v), v;
              }, e.distanceFromGreatArc = function(r, o, c, l, g, a) {
                o = n.CT.d2R(o), l = n.CT.d2R(l), a = n.CT.d2R(a), r = n.CT.h2R(r), c = n.CT.h2R(c), g = n.CT.h2R(g);
                var b = Math.cos(o) * Math.cos(r), V = Math.cos(l) * Math.cos(c), y = Math.cos(o) * Math.sin(r), C = Math.cos(l) * Math.sin(c), E = Math.sin(o), v = Math.sin(l), m = y * v - E * C, L = E * V - b * v, A = b * C - y * V, K = Math.tan(g), T = Math.tan(a) / Math.cos(g), w = Math.asin((m + L * K + A * T) / (Math.sqrt(m * m + L * L + A * A) * Math.sqrt(1 + K * K + T * T)));
                return w = n.CT.r2D(w), w < 0 && (w = Math.abs(w)), w;
              };
              var _ = {};
              (0, t.registerType)("ASEP", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/coordinate_transformation.js": (
            /*!****************************************************!*\
              !*** ./esm/astrocalc/coordinate_transformation.js ***!
              \****************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                C3D: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                COR: () => (
                  /* binding */
                  n
                ),
                /* harmony export */
                CT: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              );
              function n() {
                this.x = 0, this.y = 0, this.x = 0, this.y = 0;
              }
              n.create = function(l, g) {
                var a = new n();
                return a.x = l, a.y = g, a;
              };
              var e = {};
              (0, t.registerType)("COR", [n, e, null]);
              function _() {
                this.x = 0, this.y = 0, this.z = 0, this.x = 0, this.y = 0, this.z = 0;
              }
              _.create = function(l, g, a) {
                var b = new _();
                return b.x = l, b.y = g, b.z = a, b;
              };
              var r = {};
              (0, t.registerType)("C3D", [_, r, null]);
              function o() {
              }
              o.eq2Ec = function(l, g, a) {
                l = o.h2R(l), g = o.d2R(g), a = o.d2R(a);
                var b = new n();
                return b.x = o.r2D(Math.atan2(Math.sin(l) * Math.cos(a) + Math.tan(g) * Math.sin(a), Math.cos(l))), b.x < 0 && (b.x += 360), b.y = o.r2D(Math.asin(Math.sin(g) * Math.cos(a) - Math.cos(g) * Math.sin(a) * Math.sin(l))), b;
              }, o.ec2Eq = function(l, g, a) {
                l = o.d2R(l), g = o.d2R(g), a = o.d2R(a);
                var b = new n();
                return b.x = o.r2H(Math.atan2(Math.sin(l) * Math.cos(a) - Math.tan(g) * Math.sin(a), Math.cos(l))), b.x < 0 && (b.x += 24), b.y = o.r2D(Math.asin(Math.sin(g) * Math.cos(a) + Math.cos(g) * Math.sin(a) * Math.sin(l))), b;
              }, o.eq2H = function(l, g, a) {
                l = o.h2R(l), g = o.d2R(g), a = o.d2R(a);
                var b = new n();
                return b.x = o.r2D(Math.atan2(Math.sin(l), Math.cos(l) * Math.sin(a) - Math.tan(g) * Math.cos(a))), b.x < 0 && (b.x += 360), b.y = o.r2D(Math.asin(Math.sin(a) * Math.sin(g) + Math.cos(a) * Math.cos(g) * Math.cos(l))), b;
              }, o.h2Eq = function(l, g, a) {
                l = o.d2R(l), g = o.d2R(g), a = o.d2R(a);
                var b = new n();
                return b.x = o.r2H(Math.atan2(Math.sin(l), Math.cos(l) * Math.sin(a) + Math.tan(g) * Math.cos(a))), b.x < 0 && (b.x += 24), b.y = o.r2D(Math.asin(Math.sin(a) * Math.sin(g) - Math.cos(a) * Math.cos(g) * Math.cos(l))), b;
              }, o.eq2G = function(l, g) {
                l = 192.25 - o.h2D(l), l = o.d2R(l), g = o.d2R(g);
                var a = new n();
                return a.x = o.r2D(Math.atan2(Math.sin(l), Math.cos(l) * Math.sin(o.d2R(27.4)) - Math.tan(g) * Math.cos(o.d2R(27.4)))), a.x = 303 - a.x, a.x >= 360 && (a.x -= 360), a.y = o.r2D(Math.asin(Math.sin(g) * Math.sin(o.d2R(27.4)) + Math.cos(g) * Math.cos(o.d2R(27.4)) * Math.cos(l))), a;
              }, o.g2Eq = function(l, g) {
                l -= 123, l = o.d2R(l), g = o.d2R(g);
                var a = new n();
                return a.x = o.r2D(Math.atan2(Math.sin(l), Math.cos(l) * Math.sin(o.d2R(27.4)) - Math.tan(g) * Math.cos(o.d2R(27.4)))), a.x += 12.25, a.x < 0 && (a.x += 360), a.x = o.d2H(a.x), a.y = o.r2D(Math.asin(Math.sin(g) * Math.sin(o.d2R(27.4)) + Math.cos(g) * Math.cos(o.d2R(27.4)) * Math.cos(l))), a;
              }, o.d2R = function(l) {
                return l * 0.0174532925199433;
              }, o.r2D = function(l) {
                return l * 57.2957795130823;
              }, o.r2H = function(l) {
                return l * 3.81971863420549;
              }, o.h2R = function(l) {
                return l * 0.261799387799149;
              }, o.h2D = function(l) {
                return l * 15;
              }, o.d2H = function(l) {
                return l / 15;
              }, o.PI = function() {
                return 3.14159265358979;
              }, o.m360 = function(l) {
                return l - Math.floor(l / 360) * 360;
              }, o.m24 = function(l) {
                return l - Math.floor(l / 24) * 24;
              }, o.dmS2D = function(l, g, a) {
                return o.dmS2Dp(l, g, a, !0);
              }, o.dmS2Dp = function(l, g, a, b) {
                return b || (console.assert(l >= 0), console.assert(g >= 0), console.assert(a >= 0)), b ? l + g / 60 + a / 3600 : -l - g / 60 - a / 3600;
              };
              var c = {};
              (0, t.registerType)("CT", [o, c, null]);
            }
          ),
          /***/
          "./esm/astrocalc/date.js": (
            /*!*******************************!*\
              !*** ./esm/astrocalc/date.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CalD: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                DAY_OF_WEEK: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                DT: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              );
              function e() {
                this.year = 0, this.month = 0, this.day = 0, this.year = 0, this.month = 0, this.day = 0;
              }
              e.create = function(l, g, a) {
                var b = new e();
                return b.year = l, b.month = g, b.day = a, b;
              };
              var _ = {};
              (0, n.registerType)("CalD", [e, _, null]);
              var r = {
                SUNDAY: 0,
                MONDAY: 1,
                TUESDAY: 2,
                WEDNESDAY: 3,
                THURSDAY: 4,
                FRIDAY: 5,
                SATURDAY: 6
              };
              (0, n.registerType)("DAY_OF_WEEK", r);
              function o() {
                this.m_dblJulian = 0, this.m_bGregorianCalendar = !1, this.m_dblJulian = 0, this.m_bGregorianCalendar = !1;
              }
              o.create = function(l, g, a, b) {
                var V = new o();
                return V.set(l, g, a, 0, 0, 0, b), V;
              }, o.createHMS = function(l, g, a, b, V, y, C) {
                var E = new o();
                return E.set(l, g, a, b, V, y, C), E;
              }, o.createJD = function(l, g) {
                var a = new o();
                return a.setJD(l, g), a;
              }, o.dateToJD = function(l, g, a, b) {
                var V = l, y = g;
                y < 3 && (V = V - 1, y = y + 12);
                var C = 0, E = 0;
                return b && (C = t.ss.truncate(V / 100), E = 2 - C + t.ss.truncate(C / 4)), t.ss.truncate(365.25 * (V + 4716)) + t.ss.truncate(30.6001 * (y + 1)) + a + E - 1524.5;
              }, o.isLeap = function(l, g) {
                return g ? l % 100 ? !(l % 4) : !(l % 400) : !(l % 4);
              }, o.afterPapalReform = function(l, g, a) {
                return l > 1582 || l === 1582 && g > 10 || l === 1582 && g === 10 && a >= 15;
              }, o.afterPapalReformJD = function(l) {
                return l >= 22991605e-1;
              }, o.dayOfYearJD = function(l, g, a) {
                return l - o.dateToJD(g, 1, 1, a) + 1;
              }, o.daysInMonthForMonth = function(l, g) {
                console.assert(l >= 1 && l <= 12);
                var a = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0];
                return g && a[1]++, a[l - 1];
              }, o.INT = function(l) {
                return l >= 0 ? t.ss.truncate(l) : t.ss.truncate(l - 1);
              };
              var c = {
                julian: function() {
                  return this.m_dblJulian;
                },
                day: function() {
                  var l = this.get();
                  return t.ss.truncate(l[2]);
                },
                month: function() {
                  var l = this.get();
                  return t.ss.truncate(l[1]);
                },
                year: function() {
                  var l = this.get();
                  return t.ss.truncate(l[0]);
                },
                hour: function() {
                  var l = this.get();
                  return t.ss.truncate(l[3]);
                },
                minute: function() {
                  var l = this.get();
                  return t.ss.truncate(l[4]);
                },
                second: function() {
                  var l = this.get();
                  return t.ss.truncate(l[5]);
                },
                set: function(l, g, a, b, V, y, C) {
                  var E = a + b / 24 + V / 1440 + y / 86400;
                  this.setJD(o.dateToJD(l, g, E, C), C);
                },
                setJD: function(l, g) {
                  this.m_dblJulian = l, this.setInGregorianCalendar(g);
                },
                setInGregorianCalendar: function(l) {
                  var g = this.m_dblJulian >= 22991605e-1;
                  this.m_bGregorianCalendar = l && g;
                },
                get: function() {
                  var l, g, a, b, V, y, C = this.m_dblJulian + 0.5, E = Math.floor(C), v = C - E, m = t.ss.truncate(E), L;
                  if (this.m_bGregorianCalendar) {
                    var A = t.ss.truncate((m - 186721625e-2) / 36524.25);
                    L = m + 1 + A - t.ss.truncate(A / 4);
                  } else
                    L = m;
                  var K = L + 1524, T = t.ss.truncate((K - 122.1) / 365.25), w = t.ss.truncate(365.25 * T), f = t.ss.truncate((K - w) / 30.6001), R = K - w - t.ss.truncate(30.6001 * f) + v;
                  return a = t.ss.truncate(R), f < 14 ? g = f - 1 : g = f - 13, g > 2 ? l = T - 4716 : l = T - 4715, E = Math.floor(R), v = R - E, b = t.ss.truncate(v * 24), V = t.ss.truncate((v - b / 24) * 1440), y = (v - b / 24 - V / 1440) * 86400, [l, g, a, b, V, y];
                },
                dayOfWeek: function() {
                  return t.ss.truncate(this.m_dblJulian + 1.5) % 7;
                },
                dayOfYear: function() {
                  var l = t.ss.truncate(this.get()[0]);
                  return o.dayOfYearJD(this.m_dblJulian, l, o.afterPapalReform(l, 1, 1));
                },
                daysInMonth: function() {
                  var l = this.get(), g = t.ss.truncate(l[0]), a = t.ss.truncate(l[1]);
                  return o.daysInMonthForMonth(a, o.isLeap(g, this.m_bGregorianCalendar));
                },
                daysInYear: function() {
                  var l = this.get(), g = t.ss.truncate(l[0]);
                  return o.isLeap(g, this.m_bGregorianCalendar) ? 366 : 365;
                },
                leap: function() {
                  return o.isLeap(this.year(), this.m_bGregorianCalendar);
                },
                inGregorianCalendar: function() {
                  return this.m_bGregorianCalendar;
                },
                fractionalYear: function() {
                  var l = this.get(), g = t.ss.truncate(l[0]);
                  t.ss.truncate(l[1]), t.ss.truncate(l[2]), t.ss.truncate(l[3]), t.ss.truncate(l[4]), l[5];
                  var a;
                  return o.isLeap(g, this.m_bGregorianCalendar) ? a = 366 : a = 365, g + (this.m_dblJulian - o.dateToJD(g, 1, 1, o.afterPapalReform(g, 1, 1))) / a;
                }
              };
              (0, n.registerType)("DT", [o, c, null]);
            }
          ),
          /***/
          "./esm/astrocalc/dynamical_time.js": (
            /*!*****************************************!*\
              !*** ./esm/astrocalc/dynamical_time.js ***!
              \*****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                DYT: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./date.js */
                "./esm/astrocalc/date.js"
              );
              const _ = [121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51, 48, 46, 44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14, 12, 11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12, 11.9, 11.6, 11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6, 5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7, 1.4, -1.2, -2.8, -3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6, -6.3, -6.5, -6.2, -4.7, -2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16, 18.2, 20.2, 21.2, 22.4, 23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7, 24, 24.3, 25.3, 26.2, 27.3, 28.2, 29.1, 30, 30.7, 31.4, 32.2, 33.1, 34, 35, 36.5, 38.3, 40.18, 42.2, 44.5, 46.5, 48.5, 50.54, 52.2, 53.8, 54.9, 55.8, 56.86, 58.31, 59.99, 61.63, 62.97];
              function r() {
              }
              r.deltaT = function(c) {
                var l = e.DT.createJD(c, e.DT.afterPapalReformJD(c)), g = l.fractionalYear(), a = (g - 2e3) / 100, b;
                if (g < 948)
                  b = 2177 + 497 * a + 44.1 * a * a;
                else if (g < 1620)
                  b = 102 + 102 * a + 25.3 * a * a;
                else if (g < 1998) {
                  var V = n.ss.truncate((g - 1620) / 2);
                  console.assert(V < _.length), g = g / 2 - V - 810, b = _[V] + (_[V + 1] - _[V]) * g;
                } else if (g <= 2e3) {
                  var y = _.length;
                  b = _[y - 1];
                } else
                  g < 2100 ? b = 102 + 102 * a + 25.3 * a * a + 0.37 * (g - 2100) : b = 102 + 102 * a + 25.3 * a * a;
                return b;
              };
              var o = {};
              (0, t.registerType)("DYT", [r, o, null]);
            }
          ),
          /***/
          "./esm/astrocalc/earth.js": (
            /*!********************************!*\
              !*** ./esm/astrocalc/earth.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAEarth: () => (
                  /* binding */
                  S
                ),
                /* harmony export */
                VSC: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e(x, P, d) {
                this.a = 0, this.b = 0, this.c = 0, this.a = x, this.b = P, this.c = d;
              }
              var _ = {};
              (0, t.registerType)("VSC", [e, _, null]);
              const r = [new e(175347046, 0, 0), new e(3341656, 4.6692568, 6283.07585), new e(34894, 4.6261, 12566.1517), new e(3497, 2.7441, 5753.3849), new e(3418, 2.8289, 3.5231), new e(3136, 3.6277, 77713.7715), new e(2676, 4.4181, 7860.4194), new e(2343, 6.1352, 3930.2097), new e(1324, 0.7425, 11506.7698), new e(1273, 2.0371, 529.691), new e(1199, 1.1096, 1577.3435), new e(990, 5.233, 5884.927), new e(902, 2.045, 26.298), new e(857, 3.508, 398.149), new e(780, 1.179, 5223.694), new e(753, 2.533, 5507.553), new e(505, 4.583, 18849.228), new e(492, 4.205, 775.523), new e(357, 2.92, 0.067), new e(317, 5.849, 11790.629), new e(284, 1.899, 796.288), new e(271, 0.315, 10977.079), new e(243, 0.345, 5486.778), new e(206, 4.806, 2544.314), new e(205, 1.869, 5573.143), new e(202, 2.458, 6069.777), new e(156, 0.833, 213.299), new e(132, 3.411, 2942.463), new e(126, 1.083, 20.775), new e(115, 0.645, 0.98), new e(103, 0.636, 4694.003), new e(102, 0.976, 15720.839), new e(102, 4.267, 7.114), new e(99, 6.21, 2146.17), new e(98, 0.68, 155.42), new e(86, 5.98, 161000.69), new e(85, 1.3, 6275.96), new e(85, 3.67, 71430.7), new e(80, 1.81, 17260.15), new e(79, 3.04, 12036.46), new e(75, 1.76, 5088.63), new e(74, 3.5, 3154.69), new e(74, 4.68, 801.82), new e(70, 0.83, 9437.76), new e(62, 3.98, 8827.39), new e(61, 1.82, 7084.9), new e(57, 2.78, 6286.6), new e(56, 4.39, 14143.5), new e(56, 3.47, 6279.55), new e(52, 0.19, 12139.55), new e(52, 1.33, 1748.02), new e(51, 0.28, 5856.48), new e(49, 0.49, 1194.45), new e(41, 5.37, 8429.24), new e(41, 2.4, 19651.05), new e(39, 6.17, 10447.39), new e(37, 6.04, 10213.29), new e(37, 2.57, 1059.38), new e(36, 1.71, 2352.87), new e(36, 1.78, 6812.77), new e(33, 0.59, 17789.85), new e(30, 0.44, 83996.85), new e(30, 2.74, 1349.87), new e(25, 3.16, 4690.48)], o = [new e(628331966747, 0, 0), new e(206059, 2.678235, 6283.07585), new e(4303, 2.6351, 12566.1517), new e(425, 1.59, 3.523), new e(119, 5.796, 26.298), new e(109, 2.966, 1577.344), new e(93, 2.59, 18849.23), new e(72, 1.14, 529.69), new e(68, 1.87, 398.15), new e(67, 4.41, 5507.55), new e(59, 2.89, 5223.69), new e(56, 2.17, 155.42), new e(45, 0.4, 796.3), new e(36, 0.47, 775.52), new e(29, 2.65, 7.11), new e(21, 5.43, 0.98), new e(19, 1.85, 5486.78), new e(19, 4.97, 213.3), new e(17, 2.99, 6275.96), new e(16, 0.03, 2544.31), new e(16, 1.43, 2146.17), new e(15, 1.21, 10977.08), new e(12, 2.83, 1748.02), new e(12, 3.26, 5088.63), new e(12, 5.27, 1194.45), new e(12, 2.08, 4694), new e(11, 0.77, 553.57), new e(10, 1.3, 6286.6), new e(10, 4.24, 1349.87), new e(9, 2.7, 242.73), new e(9, 5.64, 951.72), new e(8, 5.3, 2352.87), new e(6, 2.65, 9437.76), new e(6, 4.67, 4690.48)], c = [new e(52919, 0, 0), new e(8720, 1.0721, 6283.0758), new e(309, 0.867, 12566.152), new e(27, 0.05, 3.52), new e(16, 5.19, 26.3), new e(16, 3.68, 155.42), new e(10, 0.76, 18849.23), new e(9, 2.06, 77713.77), new e(7, 0.83, 775.52), new e(5, 4.66, 1577.34), new e(4, 1.03, 7.11), new e(4, 3.44, 5573.14), new e(3, 5.14, 796.3), new e(3, 6.05, 5507.55), new e(3, 1.19, 242.73), new e(3, 6.12, 529.69), new e(3, 0.31, 398.15), new e(3, 2.28, 553.57), new e(2, 4.38, 5223.69), new e(2, 3.75, 0.98)], l = [new e(289, 5.844, 6283.076), new e(35, 0, 0), new e(17, 5.49, 12566.15), new e(3, 5.2, 155.42), new e(1, 4.72, 3.52), new e(1, 5.3, 18849.23), new e(1, 5.97, 242.73)], g = [new e(114, 3.142, 0), new e(8, 4.13, 6283.08), new e(1, 3.84, 12566.15)], a = [new e(1, 3.14, 0)], b = [new e(280, 3.199, 84334.662), new e(102, 5.422, 5507.553), new e(80, 3.88, 5223.69), new e(44, 3.7, 2352.87), new e(32, 4, 1577.34)], V = [new e(9, 3.9, 5507.55), new e(6, 1.73, 5223.69)], y = [new e(22378, 3.38509, 10213.28555), new e(282, 0, 0), new e(173, 5.256, 20426.571), new e(27, 3.87, 30639.86)], C = [new e(647, 4.992, 10213.286), new e(20, 3.14, 0), new e(6, 0.77, 20426.57), new e(3, 5.44, 30639.86)], E = [new e(14, 0.32, 10213.29)], v = [new e(100013989, 0, 0), new e(1670700, 3.0984635, 6283.07585), new e(13956, 3.05525, 12566.1517), new e(3084, 5.1985, 77713.7715), new e(1628, 1.1739, 5753.3849), new e(1576, 2.8469, 7860.4194), new e(925, 5.453, 11506.77), new e(542, 4.564, 3930.21), new e(472, 3.661, 5884.927), new e(346, 0.964, 5507.553), new e(329, 5.9, 5223.694), new e(307, 0.299, 5573.143), new e(243, 4.273, 11790.629), new e(212, 5.847, 1577.344), new e(186, 5.022, 10977.079), new e(175, 3.012, 18849.228), new e(110, 5.055, 5486.778), new e(98, 0.89, 6069.78), new e(86, 5.69, 15720.84), new e(86, 1.27, 161000.69), new e(65, 0.27, 17260.15), new e(63, 0.92, 529.69), new e(57, 2.01, 83996.85), new e(56, 5.24, 71430.7), new e(49, 3.25, 2544.31), new e(47, 2.58, 775.52), new e(45, 5.54, 9437.76), new e(43, 6.01, 6275.96), new e(39, 5.36, 4694), new e(38, 2.39, 8827.39), new e(37, 0.83, 19651.05), new e(37, 4.9, 12139.55), new e(36, 1.67, 12036.46), new e(35, 1.84, 2942.46), new e(33, 0.24, 7084.9), new e(32, 0.18, 5088.63), new e(32, 1.78, 398.15), new e(28, 1.21, 6286.6), new e(28, 1.9, 6279.55), new e(26, 4.59, 10447.39)], m = [new e(103019, 1.10749, 6283.07585), new e(1721, 1.0644, 12566.1517), new e(702, 3.142, 0), new e(32, 1.02, 18849.23), new e(31, 2.84, 5507.55), new e(25, 1.32, 5223.69), new e(18, 1.42, 1577.34), new e(10, 5.91, 10977.08), new e(9, 1.42, 6275.96), new e(9, 0.27, 5486.78)], L = [new e(4359, 5.7846, 6283.0758), new e(124, 5.579, 12566.152), new e(12, 3.14, 0), new e(9, 3.63, 77713.77), new e(6, 1.87, 5573.14), new e(3, 5.47, 18849.23)], A = [new e(145, 4.273, 6283.076), new e(7, 3.92, 12566.15)], K = [new e(4, 2.56, 6283.08)], T = [new e(628307584999, 0, 0), new e(206059, 2.678235, 6283.07585), new e(4303, 2.6351, 12566.1517), new e(425, 1.59, 3.523), new e(119, 5.796, 26.298), new e(109, 2.966, 1577.344), new e(93, 2.59, 18849.23), new e(72, 1.14, 529.69), new e(68, 1.87, 398.15), new e(67, 4.41, 5507.55), new e(59, 2.89, 5223.69), new e(56, 2.17, 155.42), new e(45, 0.4, 796.3), new e(36, 0.47, 775.52), new e(29, 2.65, 7.11), new e(21, 5.43, 0.98), new e(19, 1.85, 5486.78), new e(19, 4.97, 213.3), new e(17, 2.99, 6275.96), new e(16, 0.03, 2544.31), new e(16, 1.43, 2146.17), new e(15, 1.21, 10977.08), new e(12, 2.83, 1748.02), new e(12, 3.26, 5088.63), new e(12, 5.27, 1194.45), new e(12, 2.08, 4694), new e(11, 0.77, 553.57), new e(10, 1.3, 6286.6), new e(10, 4.24, 1349.87), new e(9, 2.7, 242.73), new e(9, 5.64, 951.72), new e(8, 5.3, 2352.87), new e(6, 2.65, 9437.76), new e(6, 4.67, 4690.48)], w = [new e(8722, 1.0725, 6283.0758), new e(991, 3.1416, 0), new e(295, 0.437, 12566.152), new e(27, 0.05, 3.52), new e(16, 5.19, 26.3), new e(16, 3.69, 155.42), new e(9, 0.3, 18849.23), new e(9, 2.06, 77713.77), new e(7, 0.83, 775.52), new e(5, 4.66, 1577.34), new e(4, 1.03, 7.11), new e(4, 3.44, 5573.14), new e(3, 5.14, 796.3), new e(3, 6.05, 5507.55), new e(3, 1.19, 242.73), new e(3, 6.12, 529.69), new e(3, 0.3, 398.15), new e(3, 2.28, 553.57), new e(2, 4.38, 5223.69), new e(2, 3.75, 0.98)], f = [new e(289, 5.842, 6283.076), new e(21, 6.05, 12566.15), new e(3, 5.2, 155.42), new e(3, 3.14, 0), new e(1, 4.72, 3.52), new e(1, 5.97, 242.73), new e(1, 5.54, 18849.23)], R = [new e(8, 4.14, 6283.08), new e(1, 3.28, 12566.15)], O = [new e(227778, 3.413766, 6283.07585), new e(3806, 3.3706, 12566.1517), new e(3620, 0, 0), new e(72, 3.33, 18849.23), new e(8, 3.89, 5507.55), new e(8, 1.79, 5223.69), new e(6, 5.2, 2352.87)], W = [new e(9721, 5.1519, 6283.07585), new e(233, 3.1416, 0), new e(134, 0.644, 12566.152), new e(7, 1.07, 18849.23)], N = [new e(276, 0.595, 6283.076), new e(17, 3.14, 0), new e(4, 0.12, 12566.15)], $ = [new e(6, 2.27, 6283.08), new e(1, 0, 0)];
              function S() {
              }
              S.eclipticLongitude = function(x) {
                var P = (x - 2451545) / 365250, d = P * P, U = d * P, F = U * P, X = F * P, Y = r.length, M = 0, B;
                for (B = 0; B < Y; B++)
                  M += r[B].a * Math.cos(r[B].b + r[B].c * P);
                var D = o.length, k = 0;
                for (B = 0; B < D; B++)
                  k += o[B].a * Math.cos(o[B].b + o[B].c * P);
                var G = c.length, j = 0;
                for (B = 0; B < G; B++)
                  j += c[B].a * Math.cos(c[B].b + c[B].c * P);
                var ee = l.length, Z = 0;
                for (B = 0; B < ee; B++)
                  Z += l[B].a * Math.cos(l[B].b + l[B].c * P);
                var z = g.length, te = 0;
                for (B = 0; B < z; B++)
                  te += g[B].a * Math.cos(g[B].b + g[B].c * P);
                var re = a.length, le = 0;
                for (B = 0; B < re; B++)
                  le += a[B].a * Math.cos(a[B].b + a[B].c * P);
                var ae = (M + k * P + j * d + Z * U + te * F + le * X) / 1e8;
                return ae = n.CT.m360(n.CT.r2D(ae)), ae;
              }, S.eclipticLatitude = function(x) {
                var P = (x - 2451545) / 365250, d = P * P, U = d * P, F = U * P, X = b.length, Y = 0, M;
                for (M = 0; M < X; M++)
                  Y += b[M].a * Math.cos(b[M].b + b[M].c * P);
                var B = V.length, D = 0;
                for (M = 0; M < B; M++)
                  D += V[M].a * Math.cos(V[M].b + V[M].c * P);
                var k = y.length, G = 0;
                for (M = 0; M < k; M++)
                  G += y[M].a * Math.cos(y[M].b + y[M].c * P);
                var j = C.length, ee = 0;
                for (M = 0; M < j; M++)
                  ee += C[M].a * Math.cos(C[M].b + C[M].c * P);
                var Z = E.length, z = 0;
                for (M = 0; M < Z; M++)
                  z += E[M].a * Math.cos(E[M].b + E[M].c * P);
                var te = (Y + D * P + G * d + ee * U + z * F) / 1e8;
                return te = n.CT.r2D(te), te;
              }, S.radiusVector = function(x) {
                var P = (x - 2451545) / 365250, d = P * P, U = d * P, F = U * P, X = v.length, Y = 0, M;
                for (M = 0; M < X; M++)
                  Y += v[M].a * Math.cos(v[M].b + v[M].c * P);
                var B = m.length, D = 0;
                for (M = 0; M < B; M++)
                  D += m[M].a * Math.cos(m[M].b + m[M].c * P);
                var k = L.length, G = 0;
                for (M = 0; M < k; M++)
                  G += L[M].a * Math.cos(L[M].b + L[M].c * P);
                var j = A.length, ee = 0;
                for (M = 0; M < j; M++)
                  ee += A[M].a * Math.cos(A[M].b + A[M].c * P);
                var Z = K.length, z = 0;
                for (M = 0; M < Z; M++)
                  z += K[M].a * Math.cos(K[M].b + K[M].c * P);
                return (Y + D * P + G * d + ee * U + z * F) / 1e8;
              }, S.sunMeanAnomaly = function(x) {
                var P = (x - 2451545) / 36525, d = P * P, U = d * P;
                return n.CT.m360(357.5291092 + 35999.0502909 * P - 1536e-7 * d + U / 2449e4);
              }, S.eccentricity = function(x) {
                var P = (x - 2451545) / 36525, d = P * P;
                return 1 - 2516e-6 * P - 74e-7 * d;
              }, S.eclipticLongitudeJ2000 = function(x) {
                var P = (x - 2451545) / 365250, d = P * P, U = d * P, F = U * P, X = r.length, Y = 0, M;
                for (M = 0; M < X; M++)
                  Y += r[M].a * Math.cos(r[M].b + r[M].c * P);
                var B = T.length, D = 0;
                for (M = 0; M < B; M++)
                  D += T[M].a * Math.cos(T[M].b + T[M].c * P);
                var k = w.length, G = 0;
                for (M = 0; M < k; M++)
                  G += w[M].a * Math.cos(w[M].b + w[M].c * P);
                var j = f.length, ee = 0;
                for (M = 0; M < j; M++)
                  ee += f[M].a * Math.cos(f[M].b + f[M].c * P);
                var Z = R.length, z = 0;
                for (M = 0; M < Z; M++)
                  z += R[M].a * Math.cos(R[M].b + R[M].c * P);
                var te = (Y + D * P + G * d + ee * U + z * F) / 1e8;
                return te = n.CT.m360(n.CT.r2D(te)), te;
              }, S.eclipticLatitudeJ2000 = function(x) {
                var P = (x - 2451545) / 365250, d = P * P, U = d * P, F = U * P, X = b.length, Y = 0, M;
                for (M = 0; M < X; M++)
                  Y += b[M].a * Math.cos(b[M].b + b[M].c * P);
                var B = O.length, D = 0;
                for (M = 0; M < B; M++)
                  D += O[M].a * Math.cos(O[M].b + O[M].c * P);
                var k = W.length, G = 0;
                for (M = 0; M < k; M++)
                  G += W[M].a * Math.cos(W[M].b + W[M].c * P);
                var j = N.length, ee = 0;
                for (M = 0; M < j; M++)
                  ee += N[M].a * Math.cos(N[M].b + N[M].c * P);
                var Z = $.length, z = 0;
                for (M = 0; M < Z; M++)
                  z += $[M].a * Math.cos($[M].b + $[M].c * P);
                var te = (Y + D * P + G * d + ee * U + z * F) / 1e8;
                return te = n.CT.r2D(te), te;
              };
              var I = {};
              (0, t.registerType)("CAAEarth", [S, I, null]);
            }
          ),
          /***/
          "./esm/astrocalc/ecliptical_elements.js": (
            /*!**********************************************!*\
              !*** ./esm/astrocalc/ecliptical_elements.js ***!
              \**********************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAEclipticalElementDetails: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                CAAEclipticalElements: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
                this.i = 0, this.w = 0, this.omega = 0, this.i = 0, this.w = 0, this.omega = 0;
              }
              var _ = {};
              (0, t.registerType)("CAAEclipticalElementDetails", [e, _, null]);
              function r() {
              }
              r.calculate = function(c, l, g, a, b) {
                var V = (a - 2451545) / 36525, y = V * V, C = (b - a) / 36525, E = C * C, v = E * C, m = n.CT.d2R(c), L = n.CT.d2R(g), A = (47.0029 - 0.06603 * V + 598e-6 * y) * C + (-0.03302 + 598e-6 * V) * E + 6e-5 * v;
                A = n.CT.d2R(n.CT.dmS2D(0, 0, A));
                var K = 174.876384 * 3600 + 3289.4789 * V + 0.60622 * y - (869.8089 + 0.50491 * V) * C + 0.03536 * E;
                K = n.CT.d2R(n.CT.dmS2D(0, 0, K));
                var T = (5029.0966 + 2.22226 * V - 42e-6 * y) * C + (1.11113 - 42e-6 * V) * E - 6e-6 * v;
                T = n.CT.d2R(n.CT.dmS2D(0, 0, T));
                var w = Math.sin(m), f = Math.cos(m), R = Math.sin(L - K), O = Math.cos(L - K), W = Math.sin(A), N = Math.cos(A), $ = w * R, S = -W * f + N * w * O, I = Math.asin(Math.sqrt($ * $ + S * S)), x = new e();
                x.i = n.CT.r2D(I);
                var P = f * N + w * W * O;
                P < 0 && (x.i = 180 - x.i);
                var d = K + T;
                x.omega = n.CT.m360(n.CT.r2D(Math.atan2($, S) + d)), $ = -W * R, S = w * N - f * W * O;
                var U = n.CT.r2D(Math.atan2($, S));
                return x.w = n.CT.m360(l + U), x;
              }, r.fK4B1950ToFK5J2000 = function(c, l, g) {
                var a = n.CT.d2R(5.19856209), b = n.CT.d2R(651966e-8), V = n.CT.d2R(c), y = n.CT.d2R(g), C = Math.sin(V), E = Math.cos(V), v = Math.cos(b), m = Math.sin(b), L = a + y, A = Math.cos(L), K = Math.sin(L), T = m * K, w = C * v + E * m * A, f = new e();
                f.i = n.CT.r2D(Math.asin(Math.sqrt(T * T + w * w)));
                var R = E * v - C * m * A;
                return R < 0 && (f.i = 180 - f.i), f.w = n.CT.m360(l + n.CT.r2D(Math.atan2(T, w))), f.omega = n.CT.m360(n.CT.r2D(Math.atan2(C * K, E * m + C * v * A)) - 4.50001688), f;
              };
              var o = {};
              (0, t.registerType)("CAAEclipticalElements", [r, o, null]);
            }
          ),
          /***/
          "./esm/astrocalc/elements_planetary_orbit.js": (
            /*!***************************************************!*\
              !*** ./esm/astrocalc/elements_planetary_orbit.js ***!
              \***************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                EPO: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.mercuryMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(252.250906 + 149474.0722491 * o + 3035e-7 * c + 18e-9 * l);
              }, e.mercurySemimajorAxis = function(r) {
                return 0.38709831;
              }, e.mercuryEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.20563175 + 20407e-9 * o - 283e-10 * c - 18e-11 * l;
              }, e.mercuryInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(7.004986 + 18215e-7 * o - 181e-7 * c + 56e-9 * l);
              }, e.mercuryLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(48.330893 + 1.1861883 * o + 17542e-8 * c + 215e-9 * l);
              }, e.mercuryLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(77.456119 + 1.5564776 * o + 29544e-8 * c + 9e-9 * l);
              }, e.venusMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(181.979801 + 58519.2130302 * o + 31014e-8 * c + 15e-9 * l);
              }, e.venusSemimajorAxis = function(r) {
                return 0.72332982;
              }, e.venusEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 677192e-8 - 47765e-9 * o + 981e-10 * c + 46e-11 * l;
              }, e.venusInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(3.394662 + 10037e-7 * o - 88e-8 * c - 7e-9 * l);
              }, e.venusLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(76.67992 + 0.9011206 * o + 40618e-8 * c - 93e-9 * l);
              }, e.venusLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(131.563703 + 1.4022288 * o - 107618e-8 * c - 5678e-9 * l);
              }, e.earthMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(100.466457 + 36000.7698278 * o + 30322e-8 * c + 2e-8 * l);
              }, e.earthSemimajorAxis = function(r) {
                return 1.000001018;
              }, e.earthEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.01670863 - 42037e-9 * o - 1267e-10 * c + 14e-11 * l;
              }, e.earthInclination = function(r) {
                return 0;
              }, e.earthLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(102.937348 + 1.17195366 * o + 45688e-8 * c - 18e-9 * l);
              }, e.marsMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(355.433 + 19141.6964471 * o + 31052e-8 * c + 16e-9 * l);
              }, e.marsSemimajorAxis = function(r) {
                return 1.523679342;
              }, e.marsEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.09340065 + 90484e-9 * o - 806e-10 * c - 25e-11 * l;
              }, e.marsInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(1.849726 - 6011e-7 * o + 1276e-8 * c - 7e-9 * l);
              }, e.marsLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(49.588093 + 0.7720959 * o + 1557e-8 * c + 2267e-9 * l);
              }, e.marsLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(336.060234 + 1.8410449 * o + 13477e-8 * c + 536e-9 * l);
              }, e.jupiterMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(34.351519 + 3036.3027748 * o + 2233e-7 * c + 37e-9 * l);
              }, e.jupiterSemimajorAxis = function(r) {
                var o = (r - 2451545) / 36525;
                return 5.202603209 + 1913e-10 * o;
              }, e.jupiterEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.04849793 + 163225e-9 * o - 4714e-10 * c - 201e-11 * l;
              }, e.jupiterInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(1.303267 - 54965e-7 * o + 466e-8 * c - 2e-9 * l);
              }, e.jupiterLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(100.464407 + 1.0209774 * o + 40315e-8 * c + 404e-9 * l);
              }, e.jupiterLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(14.331207 + 1.6126352 * o + 103042e-8 * c - 4464e-9 * l);
              }, e.saturnMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(50.077444 + 1223.5110686 * o + 51908e-8 * c - 3e-8 * l);
              }, e.saturnSemimajorAxis = function(r) {
                var o = (r - 2451545) / 36525, c = o * o;
                return 9.554909192 - 2139e-9 * o + 4e-9 * c;
              }, e.saturnEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.05554814 - 3446641e-10 * o - 6436e-10 * c + 34e-10 * l;
              }, e.saturnInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(2.488879 - 37362e-7 * o - 1519e-8 * c + 87e-9 * l);
              }, e.saturnLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(113.665503 + 0.877088 * o - 12176e-8 * c - 2249e-9 * l);
              }, e.saturnLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(93.057237 + 1.19637613 * o + 83753e-8 * c + 4928e-9 * l);
              }, e.uranusMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(314.055005 + 429.8640561 * o + 3039e-7 * c + 26e-9 * l);
              }, e.uranusSemimajorAxis = function(r) {
                var o = (r - 2451545) / 36525, c = o * o;
                return 19.218446062 - 372e-10 * o + 98e-11 * c;
              }, e.uranusEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.04638122 - 27293e-9 * o + 789e-10 * c + 24e-11 * l;
              }, e.uranusInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(0.773197 + 7744e-7 * o + 3749e-8 * c - 92e-9 * l);
              }, e.uranusLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(74.005957 + 0.5211278 * o + 133947e-8 * c + 18484e-9 * l);
              }, e.uranusLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(173.005291 + 1.486379 * o + 21406e-8 * c + 434e-9 * l);
              }, e.neptuneMeanLongitude = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(304.348665 + 219.8833092 * o + 30882e-8 * c + 18e-9 * l);
              }, e.neptuneSemimajorAxis = function(r) {
                var o = (r - 2451545) / 36525, c = o * o;
                return 30.110386869 - 1663e-10 * o + 69e-11 * c;
              }, e.neptuneEccentricity = function(r) {
                var o = (r - 2451545) / 36525, c = o * o * o;
                return 945575e-8 + 6033e-9 * o - 5e-11 * c;
              }, e.neptuneInclination = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(1.769953 - 93082e-7 * o - 708e-8 * c + 27e-9 * l);
              }, e.neptuneLongitudeAscendingNode = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(131.784057 + 1.1022039 * o + 25952e-8 * c - 637e-9 * l);
              }, e.neptuneLongitudePerihelion = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(48.120276 + 1.4262957 * o + 38434e-8 * c + 2e-8 * l);
              }, e.mercuryMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(252.250906 + 149472.6746358 * o - 536e-8 * c + 2e-9 * l);
              }, e.mercuryInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(7.004986 - 59516e-7 * o + 8e-7 * c + 43e-9 * l);
              }, e.mercuryLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(48.330893 - 0.1254227 * o - 8833e-8 * c - 2e-7 * l);
              }, e.mercuryLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(77.456119 + 0.1588643 * o - 1342e-8 * c - 7e-9 * l);
              }, e.venusMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(181.979801 + 58517.815676 * o + 165e-8 * c - 2e-9 * l);
              }, e.venusInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(3.394662 - 8568e-7 * o - 3244e-8 * c + 9e-9 * l);
              }, e.venusLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(76.67992 - 0.2780134 * o - 14257e-8 * c - 164e-9 * l);
              }, e.venusLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(131.563703 + 48746e-7 * o - 138467e-8 * c - 5695e-9 * l);
              }, e.earthMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(100.466457 + 35999.3728565 * o - 568e-8 * c - 1e-9 * l);
              }, e.earthInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return 0.0130548 * o - 931e-8 * c - 34e-9 * l;
              }, e.earthLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(174.873176 - 0.241098 * o + 4262e-8 * c + 1e-9 * l);
              }, e.earthLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(102.937348 + 0.3225654 * o + 14799e-8 * c - 39e-9 * l);
              }, e.marsMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(355.433 + 19140.2993039 * o + 262e-8 * c - 3e-9 * l);
              }, e.marsInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(1.849726 - 81477e-7 * o - 2255e-8 * c - 29e-9 * l);
              }, e.marsLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(49.588093 - 0.295025 * o - 64048e-8 * c - 1964e-9 * l);
              }, e.marsLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(336.060234 + 0.4439016 * o - 17313e-8 * c + 518e-9 * l);
              }, e.jupiterMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(34.351519 + 3034.9056606 * o - 8501e-8 * c + 16e-9 * l);
              }, e.jupiterInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(1.303267 - 19877e-7 * o + 332e-7 * c + 97e-9 * l);
              }, e.jupiterLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(100.464407 + 0.1767232 * o + 907e-6 * c - 7272e-9 * l);
              }, e.jupiterLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(14.331207 + 0.2155209 * o + 72211e-8 * c - 4485e-9 * l);
              }, e.saturnMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(50.077444 + 1222.1138488 * o + 21004e-8 * c - 46e-9 * l);
              }, e.saturnInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(2.488879 + 25514e-7 * o - 4906e-8 * c + 17e-9 * l);
              }, e.saturnLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(113.665503 - 0.2566722 * o - 18399e-8 * c + 48e-8 * l);
              }, e.saturnLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(93.057237 + 0.5665415 * o + 5285e-7 * c + 4912e-9 * l);
              }, e.uranusMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(314.055005 + 428.4669983 * o - 486e-8 * c + 6e-9 * l);
              }, e.uranusInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(0.773197 - 16869e-7 * o + 349e-8 * c + 16e-9 * l);
              }, e.uranusLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(74.005957 + 0.0741431 * o + 40539e-8 * c + 119e-9 * l);
              }, e.uranusLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(173.005291 + 0.0893212 * o - 947e-7 * c + 414e-9 * l);
              }, e.neptuneMeanLongitudeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(304.348665 + 218.4862002 * o + 59e-8 * c - 2e-9 * l);
              }, e.neptuneInclinationJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o;
                return n.CT.m360(1.769953 + 2256e-7 * o + 23e-8 * c);
              }, e.neptuneLongitudeAscendingNodeJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o, l = c * o;
                return n.CT.m360(131.784057 - 61651e-7 * o - 219e-8 * c - 78e-9 * l);
              }, e.neptuneLongitudePerihelionJ2000 = function(r) {
                var o = (r - 2451545) / 36525, c = o * o;
                return n.CT.m360(48.120276 + 0.0291866 * o + 761e-7 * c);
              };
              var _ = {};
              (0, t.registerType)("EPO", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/elliptical.js": (
            /*!*************************************!*\
              !*** ./esm/astrocalc/elliptical.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ELL: () => (
                  /* binding */
                  W
                ),
                /* harmony export */
                EO: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                EOD: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                EOE: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                EPD: () => (
                  /* binding */
                  T
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), e = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), _ = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), r = i(
                /*! ./fk5.js */
                "./esm/astrocalc/fk5.js"
              ), o = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              ), c = i(
                /*! ./sun.js */
                "./esm/astrocalc/sun.js"
              ), l = i(
                /*! ./mercury.js */
                "./esm/astrocalc/mercury.js"
              ), g = i(
                /*! ./venus.js */
                "./esm/astrocalc/venus.js"
              ), a = i(
                /*! ./mars.js */
                "./esm/astrocalc/mars.js"
              ), b = i(
                /*! ./jupiter.js */
                "./esm/astrocalc/jupiter.js"
              ), V = i(
                /*! ./saturn.js */
                "./esm/astrocalc/saturn.js"
              ), y = i(
                /*! ./uranus.js */
                "./esm/astrocalc/uranus.js"
              ), C = i(
                /*! ./neptune.js */
                "./esm/astrocalc/neptune.js"
              ), E = i(
                /*! ./pluto.js */
                "./esm/astrocalc/pluto.js"
              ), v = i(
                /*! ./aberration.js */
                "./esm/astrocalc/aberration.js"
              ), m = i(
                /*! ./kepler.js */
                "./esm/astrocalc/kepler.js"
              ), L = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              );
              function A() {
                this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0, this.n = 0, this.meanAnnomolyOut = 0, this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0;
              }
              A._create = function($) {
                var S = new A();
                return S.a = $.readSingle(), S.e = $.readSingle(), S.i = $.readSingle(), S.w = $.readSingle(), S.omega = $.readSingle(), S.jdEquinox = $.readSingle(), S.t = $.readSingle(), S;
              };
              var K = {};
              (0, t.registerType)("EOE", [A, K, null]);
              function T() {
                this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0, this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0;
              }
              var w = {};
              (0, t.registerType)("EPD", [T, w, null]);
              function f() {
                this.heliocentricRectangularEquatorial = new e.C3D(), this.heliocentricRectangularEcliptical = new e.C3D(), this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0, this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0;
              }
              var R = {};
              (0, t.registerType)("EOD", [f, R, null]);
              var O = {
                SUN: 0,
                MERCURY: 1,
                VENUS: 2,
                MARS: 3,
                JUPITER: 4,
                SATURN: 5,
                URANUS: 6,
                NEPTUNE: 7,
                PLUTO: 8
              };
              (0, t.registerType)("EO", O);
              function W() {
              }
              W.distanceToLightTime = function($) {
                return $ * 0.0057755183;
              }, W.calculate = function($, S) {
                var I = new T(), x = $, P = 0, d = 0, U = 0, F = 0;
                S && (P = _.CAAEarth.eclipticLongitude(x), d = _.CAAEarth.eclipticLatitude(x), U = _.CAAEarth.radiusVector(x), P = e.CT.d2R(P), d = e.CT.d2R(d), F = Math.cos(d));
                for (var X = 0, Y = 0, M = 0, B, D, k, G, j, ee, Z, z = !0, te = !0, re = 0, le = 0, ae = 0; z; ) {
                  switch (S) {
                    case 0:
                      X = c.CAASun.geometricEclipticLongitude(x), Y = c.CAASun.geometricEclipticLatitude(x), M = _.CAAEarth.radiusVector(x);
                      break;
                    case 1:
                      X = l.CAAMercury.eclipticLongitude(x), Y = l.CAAMercury.eclipticLatitude(x), M = l.CAAMercury.radiusVector(x);
                      break;
                    case 2:
                      X = g.CAAVenus.eclipticLongitude(x), Y = g.CAAVenus.eclipticLatitude(x), M = g.CAAVenus.radiusVector(x);
                      break;
                    case 3:
                      X = a.CAAMars.eclipticLongitude(x), Y = a.CAAMars.eclipticLatitude(x), M = a.CAAMars.radiusVector(x);
                      break;
                    case 4:
                      X = b.CAAJupiter.eclipticLongitude(x), Y = b.CAAJupiter.eclipticLatitude(x), M = b.CAAJupiter.radiusVector(x);
                      break;
                    case 5:
                      X = V.CAASaturn.eclipticLongitude(x), Y = V.CAASaturn.eclipticLatitude(x), M = V.CAASaturn.radiusVector(x);
                      break;
                    case 6:
                      X = y.CAAUranus.eclipticLongitude(x), Y = y.CAAUranus.eclipticLatitude(x), M = y.CAAUranus.radiusVector(x);
                      break;
                    case 7:
                      X = C.CAANeptune.eclipticLongitude(x), Y = C.CAANeptune.eclipticLatitude(x), M = C.CAANeptune.radiusVector(x);
                      break;
                    case 8:
                      X = E.CAAPluto.eclipticLongitude(x), Y = E.CAAPluto.eclipticLatitude(x), M = E.CAAPluto.radiusVector(x);
                      break;
                    default:
                      console.assert(!1);
                      break;
                  }
                  if (te ? te = !1 : (z = Math.abs(X - re) > 1e-5 || Math.abs(Y - le) > 1e-5 || Math.abs(M - ae) > 1e-6, re = X, le = Y, ae = M), z) {
                    var oe = 0;
                    S ? (B = e.CT.d2R(X), D = e.CT.d2R(Y), k = Math.cos(D), G = Math.cos(B), j = M * k * G - U * F * Math.cos(P), ee = M * k * Math.sin(B) - U * F * Math.sin(P), Z = M * Math.sin(D) - U * Math.sin(d), oe = Math.sqrt(j * j + ee * ee + Z * Z)) : oe = M, x = $ - W.distanceToLightTime(oe);
                  }
                }
                B = e.CT.d2R(X), D = e.CT.d2R(Y), k = Math.cos(D), G = Math.cos(B), j = M * k * G - U * F * Math.cos(P), ee = M * k * Math.sin(B) - U * F * Math.sin(P), Z = M * Math.sin(D) - U * Math.sin(d);
                var de = j * j, ve = ee * ee;
                I.apparentGeocentricLatitude = e.CT.r2D(Math.atan2(Z, Math.sqrt(de + ve))), I.apparentGeocentricDistance = Math.sqrt(de + ve + Z * Z), I.apparentGeocentricLongitude = e.CT.m360(e.CT.r2D(Math.atan2(ee, j))), I.apparentLightTime = W.distanceToLightTime(I.apparentGeocentricDistance);
                var ce = v.ABR.eclipticAberration(I.apparentGeocentricLongitude, I.apparentGeocentricLatitude, $);
                I.apparentGeocentricLongitude += ce.x, I.apparentGeocentricLatitude += ce.y;
                var he = r.CAAFK5.correctionInLongitude(I.apparentGeocentricLongitude, I.apparentGeocentricLatitude, $);
                I.apparentGeocentricLatitude += r.CAAFK5.correctionInLatitude(I.apparentGeocentricLongitude, $), I.apparentGeocentricLongitude += he;
                var ye = o.CAANutation.nutationInLongitude($), fe = o.CAANutation.trueObliquityOfEcliptic($);
                I.apparentGeocentricLongitude += e.CT.dmS2D(0, 0, ye);
                var Ce = e.CT.ec2Eq(I.apparentGeocentricLongitude, I.apparentGeocentricLatitude, fe);
                return I.apparentGeocentricRA = Ce.x, I.apparentGeocentricDeclination = Ce.y, I;
              }, W.semiMajorAxisFromPerihelionDistance = function($, S) {
                return $ / (1 - S);
              }, W.meanMotionFromSemiMajorAxis = function($) {
                return 0.9856076686 / ($ * Math.sqrt($));
              }, W.calculateRectangularJD = function($, S) {
                var I = $, x = e.CT.d2R(S.omega), P = e.CT.d2R(S.w), d = e.CT.d2R(S.i), U = 0, F = 1, X = Math.sin(x), Y = Math.cos(x), M = Math.cos(d), B = Math.sin(d), D = Y, k = X * F, G = X * U, j = -X * M, ee = Y * M * F - B * U, Z = Y * M * U + B * F, z = Math.sqrt(D * D + j * j), te = Math.sqrt(k * k + ee * ee), re = Math.sqrt(G * G + Z * Z), le = Math.atan2(D, j), ae = Math.atan2(k, ee), oe = Math.atan2(G, Z), de = S.n * (I - S.t);
                S.meanAnnomolyOut = de;
                var ve = m.CAAKepler.calculate(de, S.e);
                ve = e.CT.d2R(ve);
                var ce = 2 * Math.atan(Math.sqrt((1 + S.e) / (1 - S.e)) * Math.tan(ve / 2)), he = S.a * (1 - S.e * Math.cos(ve)), ye = he * z * Math.sin(le + P + ce), fe = he * te * Math.sin(ae + P + ce), Ce = he * re * Math.sin(oe + P + ce);
                return L.Vector3d.create(ye, Ce, fe);
              }, W.calculateRectangular = function($, S) {
                var I = e.CT.d2R($.omega), x = e.CT.d2R($.w), P = e.CT.d2R($.i), d = 0, U = 1, F = Math.sin(I), X = Math.cos(I), Y = Math.cos(P), M = Math.sin(P), B = X, D = F * U, k = F * d, G = -F * Y, j = X * Y * U - M * d, ee = X * Y * d + M * U, Z = Math.sqrt(B * B + G * G), z = Math.sqrt(D * D + j * j), te = Math.sqrt(k * k + ee * ee), re = Math.atan2(B, G), le = Math.atan2(D, j), ae = Math.atan2(k, ee);
                $.n;
                var oe = S, de = m.CAAKepler.calculate(oe, $.e);
                de = e.CT.d2R(de);
                var ve = 2 * Math.atan(Math.sqrt((1 + $.e) / (1 - $.e)) * Math.tan(de / 2)), ce = $.a * (1 - $.e * Math.cos(de)), he = ce * Z * Math.sin(re + x + ve), ye = ce * z * Math.sin(le + x + ve), fe = ce * te * Math.sin(ae + x + ve);
                return L.Vector3d.create(he, fe, ye);
              }, W.calculateElements = function($, S) {
                var I = o.CAANutation.meanObliquityOfEcliptic(S.jdEquinox), x = $, P = new f();
                I = e.CT.d2R(I);
                for (var d = e.CT.d2R(S.omega), U = e.CT.d2R(S.w), F = e.CT.d2R(S.i), X = Math.sin(I), Y = Math.cos(I), M = Math.sin(d), B = Math.cos(d), D = Math.cos(F), k = Math.sin(F), G = B, j = M * Y, ee = M * X, Z = -M * D, z = B * D * Y - k * X, te = B * D * X + k * Y, re = Math.sqrt(G * G + Z * Z), le = Math.sqrt(j * j + z * z), ae = Math.sqrt(ee * ee + te * te), oe = Math.atan2(G, Z), de = Math.atan2(j, z), ve = Math.atan2(ee, te), ce = W.meanMotionFromSemiMajorAxis(S.a), he = c.CAASun.equatorialRectangularCoordinatesAnyEquinox($, S.jdEquinox), ye = 0; ye < 2; ye++) {
                  var fe = ce * (x - S.t), Ce = m.CAAKepler.calculate(fe, S.e);
                  Ce = e.CT.d2R(Ce);
                  var Ae = 2 * Math.atan(Math.sqrt((1 + S.e) / (1 - S.e)) * Math.tan(Ce / 2)), Te = S.a * (1 - S.e * Math.cos(Ce)), Re = Te * re * Math.sin(oe + U + Ae), De = Te * le * Math.sin(de + U + Ae), Oe = Te * ae * Math.sin(ve + U + Ae);
                  if (!ye) {
                    P.heliocentricRectangularEquatorial.x = Re, P.heliocentricRectangularEquatorial.y = De, P.heliocentricRectangularEquatorial.z = Oe;
                    var Ne = d + Ae, Fe = Math.cos(Ne), $e = Math.sin(Ne);
                    P.heliocentricRectangularEcliptical.x = Te * (B * Fe - M * $e * D), P.heliocentricRectangularEcliptical.y = Te * (M * Fe + B * $e * D), P.heliocentricRectangularEcliptical.z = Te * k * $e, P.heliocentricEclipticLongitude = Math.atan2(De, Re), P.heliocentricEclipticLongitude = e.CT.m24(e.CT.r2D(P.heliocentricEclipticLongitude) / 15), P.heliocentricEclipticLatitude = Math.asin(Oe / Te), P.heliocentricEclipticLatitude = e.CT.r2D(P.heliocentricEclipticLatitude);
                  }
                  var ze = he.x + Re, se = he.y + De, be = he.z + Oe, Pe = Math.atan2(se, ze);
                  Pe = e.CT.r2D(Pe);
                  var Ve = Math.atan2(be, Math.sqrt(ze * ze + se * se));
                  Ve = e.CT.r2D(Ve);
                  var me = Math.sqrt(ze * ze + se * se + be * be);
                  if (!ye)
                    P.trueGeocentricRA = e.CT.m24(Pe / 15), P.trueGeocentricDeclination = Ve, P.trueGeocentricDistance = me, P.trueGeocentricLightTime = W.distanceToLightTime(me);
                  else {
                    P.astrometricGeocenticRA = e.CT.m24(Pe / 15), P.astrometricGeocentricDeclination = Ve, P.astrometricGeocentricDistance = me, P.astrometricGeocentricLightTime = W.distanceToLightTime(me);
                    var Me = Math.sqrt(he.x * he.x + he.y * he.y + he.z * he.z);
                    P.elongation = Math.acos((Me * Me + me * me - Te * Te) / (2 * Me * me)), P.elongation = e.CT.r2D(P.elongation), P.phaseAngle = Math.acos((Te * Te + me * me - Me * Me) / (2 * Te * me)), P.phaseAngle = e.CT.r2D(P.phaseAngle);
                  }
                  ye || (x = $ - P.trueGeocentricLightTime);
                }
                return P;
              }, W.instantaneousVelocity = function($, S) {
                return 42.1219 * Math.sqrt(1 / $ - 1 / (2 * S));
              }, W.velocityAtPerihelion = function($, S) {
                return 29.7847 / Math.sqrt(S) * Math.sqrt((1 + $) / (1 - $));
              }, W.velocityAtAphelion = function($, S) {
                return 29.7847 / Math.sqrt(S) * Math.sqrt((1 - $) / (1 + $));
              }, W.lengthOfEllipse = function($, S) {
                var I = S * Math.sqrt(1 - $ * $);
                return e.CT.PI() * (3 * (S + I) - Math.sqrt((S + 3 * I) * (3 * S + I)));
              }, W.cometMagnitude = function($, S, I, x) {
                return $ + 5 * n.Util.log10(S) + I * n.Util.log10(x);
              }, W.minorPlanetMagnitude = function($, S, I, x, P) {
                P = e.CT.d2R(P);
                var d = Math.exp(-3.33 * Math.pow(Math.tan(P / 2), 0.63)), U = Math.exp(-1.87 * Math.pow(Math.tan(P / 2), 1.22));
                return $ + 5 * n.Util.log10(x * S) - 2.5 * n.Util.log10((1 - I) * d + I * U);
              };
              var N = {};
              (0, t.registerType)("ELL", [W, N, null]);
            }
          ),
          /***/
          "./esm/astrocalc/equation_of_time.js": (
            /*!*******************************************!*\
              !*** ./esm/astrocalc/equation_of_time.js ***!
              \*******************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                EOT: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              ), _ = i(
                /*! ./sun.js */
                "./esm/astrocalc/sun.js"
              );
              function r() {
              }
              r.calculate = function(c) {
                var l = (c - 2451545) / 365250, g = l * l, a = g * l, b = a * l, V = b * l, y = n.CT.m360(280.4664567 + 360007.6982779 * l + 0.03032028 * g + a / 49931 - b / 15300 - V / 2e6), C = _.CAASun.apparentEclipticLongitude(c), E = _.CAASun.apparentEclipticLatitude(c), v = e.CAANutation.trueObliquityOfEcliptic(c), m = n.CT.ec2Eq(C, E, v);
                v = n.CT.d2R(v);
                var L = y - 57183e-7 - m.x * 15 + n.CT.dmS2D(0, 0, e.CAANutation.nutationInLongitude(c)) * Math.cos(v);
                return L > 180 && (L = -(360 - L)), L *= 4, L;
              };
              var o = {};
              (0, t.registerType)("EOT", [r, o, null]);
            }
          ),
          /***/
          "./esm/astrocalc/fk5.js": (
            /*!******************************!*\
              !*** ./esm/astrocalc/fk5.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAFK5: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.correctionInLongitude = function(r, o, c) {
                var l = (c - 2451545) / 36525, g = r - 1.397 * l - 31e-5 * l * l;
                g = n.CT.d2R(g), r = n.CT.d2R(r), o = n.CT.d2R(o);
                var a = -0.09033 + 0.03916 * (Math.cos(g) + Math.sin(g)) * Math.tan(o);
                return n.CT.dmS2D(0, 0, a);
              }, e.correctionInLatitude = function(r, o) {
                var c = (o - 2451545) / 36525, l = r - 1.397 * c - 31e-5 * c * c;
                l = n.CT.d2R(l), r = n.CT.d2R(r);
                var g = 0.03916 * (Math.cos(l) - Math.sin(l));
                return n.CT.dmS2D(0, 0, g);
              }, e.convertVSOPToFK5J2000 = function(r) {
                var o = new n.C3D();
                return o.x = r.x + 44036e-11 * r.y - 190919e-12 * r.z, o.y = -479966e-12 * r.x + 0.917482137087 * r.y - 0.397776982902 * r.z, o.z = 0.397776982902 * r.y + 0.917482137087 * r.z, o;
              }, e.convertVSOPToFK5B1950 = function(r) {
                var o = new n.C3D();
                return o.x = 0.999925702634 * r.x + 0.012189716217 * r.y + 11134016e-12 * r.z, o.y = -0.011179418036 * r.x + 0.917413998946 * r.y - 0.397777041885 * r.z, o.z = -0.004859003787 * r.x + 0.397747363646 * r.y + 0.917482111428 * r.z, o;
              }, e.convertVSOPToFK5AnyEquinox = function(r, o) {
                var c = (o - 2451545) / 36525, l = c * c, g = l * c, a = 2306.2181 * c + 0.30188 * l + 0.017988 * g;
                a = n.CT.d2R(n.CT.dmS2D(0, 0, a));
                var b = 2306.2181 * c + 1.09468 * l + 0.018203 * g;
                b = n.CT.d2R(n.CT.dmS2D(0, 0, b));
                var V = 2004.3109 * c - 0.42665 * l - 0.041833 * g;
                V = n.CT.d2R(n.CT.dmS2D(0, 0, V));
                var y = Math.cos(a), C = Math.cos(b), E = Math.cos(V), v = Math.sin(a), m = Math.sin(b), L = Math.sin(V), A = y * C * E - v * m, K = v * C + y * m * E, T = y * L, w = -y * m - v * C * E, f = y * C - v * m * E, R = -v * L, O = -C * L, W = -m * L, N = E, $ = new n.C3D();
                return $.x = A * r.x + w * r.y + O * r.z, $.y = K * r.x + f * r.y + W * r.z, $.z = T * r.x + R * r.y + N * r.z, $;
              };
              var _ = {};
              (0, t.registerType)("CAAFK5", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/galilean_moons.js": (
            /*!*****************************************!*\
              !*** ./esm/astrocalc/galilean_moons.js ***!
              \*****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                GM: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                GMD: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                GMDS: () => (
                  /* binding */
                  a
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./sun.js */
                "./esm/astrocalc/sun.js"
              ), _ = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), r = i(
                /*! ./jupiter.js */
                "./esm/astrocalc/jupiter.js"
              ), o = i(
                /*! ./elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), c = i(
                /*! ./elements_planetary_orbit.js */
                "./esm/astrocalc/elements_planetary_orbit.js"
              );
              function l() {
                this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.eclipticRectangularCoordinates = new n.C3D(), this.trueRectangularCoordinates = new n.C3D(), this.apparentRectangularCoordinates = new n.C3D(), this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1, this.apparentShadowRectangularCoordinates = new n.C3D(), this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1;
              }
              var g = {};
              (0, t.registerType)("GMD", [l, g, null]);
              function a() {
                this.satellite1 = new l(), this.satellite2 = new l(), this.satellite3 = new l(), this.satellite4 = new l();
              }
              var b = {};
              (0, t.registerType)("GMDS", [a, b, null]);
              function V() {
              }
              V.calculate = function(C) {
                for (var E = e.CAASun.geometricEclipticLongitude(C), v = n.CT.d2R(E), m = e.CAASun.geometricEclipticLatitude(C), L = n.CT.d2R(m), A = _.CAAEarth.radiusVector(C), K = 5, T = 0, w = o.ELL.distanceToLightTime(K), f = C - w, R = !0, O = 0, W = 0, N = 0, $ = 0, S = 0, I = 0, x = 0, P = 0; R; )
                  $ = r.CAAJupiter.eclipticLongitude(f), S = n.CT.d2R($), I = r.CAAJupiter.eclipticLatitude(f), x = n.CT.d2R(I), P = r.CAAJupiter.radiusVector(f), O = P * Math.cos(x) * Math.cos(S) + A * Math.cos(v), W = P * Math.cos(x) * Math.sin(S) + A * Math.sin(v), N = P * Math.sin(x) + A * Math.sin(L), K = Math.sqrt(O * O + W * W + N * N), w = o.ELL.distanceToLightTime(K), R = Math.abs(w - T) > 2e-6, R && (f = C - w, T = w);
                var d = V.calculateHelper(C, v, L, A);
                V.fillInPhenomenaDetails(d.satellite1), V.fillInPhenomenaDetails(d.satellite2), V.fillInPhenomenaDetails(d.satellite3), V.fillInPhenomenaDetails(d.satellite4), f = C - w, $ = r.CAAJupiter.eclipticLongitude(f), S = n.CT.d2R($), I = r.CAAJupiter.eclipticLatitude(f), x = n.CT.d2R(I), P = r.CAAJupiter.radiusVector(f), O = P * Math.cos(x) * Math.cos(S), W = P * Math.cos(x) * Math.sin(S), N = P * Math.sin(x), K = Math.sqrt(O * O + W * W + N * N);
                var U = o.ELL.distanceToLightTime(K), F = V.calculateHelper(C + U - w, v, L, 0);
                return V.fillInPhenomenaDetails(F.satellite1), V.fillInPhenomenaDetails(F.satellite2), V.fillInPhenomenaDetails(F.satellite3), V.fillInPhenomenaDetails(F.satellite4), d.satellite1.bInEclipse = F.satellite1.bInOccultation, d.satellite2.bInEclipse = F.satellite2.bInOccultation, d.satellite3.bInEclipse = F.satellite3.bInOccultation, d.satellite4.bInEclipse = F.satellite4.bInOccultation, d.satellite1.bInShadowTransit = F.satellite1.bInTransit, d.satellite2.bInShadowTransit = F.satellite2.bInTransit, d.satellite3.bInShadowTransit = F.satellite3.bInTransit, d.satellite4.bInShadowTransit = F.satellite4.bInTransit, d.satellite1.apparentShadowRectangularCoordinates = F.satellite1.apparentRectangularCoordinates, d.satellite2.apparentShadowRectangularCoordinates = F.satellite2.apparentRectangularCoordinates, d.satellite3.apparentShadowRectangularCoordinates = F.satellite3.apparentRectangularCoordinates, d.satellite4.apparentShadowRectangularCoordinates = F.satellite4.apparentRectangularCoordinates, d;
              }, V.calculateHelper = function(C, E, v, m) {
                for (var L = new a(), A = 5, K = 0, T = o.ELL.distanceToLightTime(A), w = 0, f = 0, R = 0, O = 0, W = 0, N = 0, $ = 0, S = 0, I = C - T, x = !0; x; )
                  O = r.CAAJupiter.eclipticLongitude(I), W = n.CT.d2R(O), N = r.CAAJupiter.eclipticLatitude(I), $ = n.CT.d2R(N), S = r.CAAJupiter.radiusVector(I), w = S * Math.cos($) * Math.cos(W) + m * Math.cos(E), f = S * Math.cos($) * Math.sin(W) + m * Math.sin(E), R = S * Math.sin($) + m * Math.sin(v), A = Math.sqrt(w * w + f * f + R * R), T = o.ELL.distanceToLightTime(A), x = Math.abs(T - K) > 2e-6, x && (I = C - T, K = T);
                var P = Math.atan2(f, w), d = Math.atan(R / Math.sqrt(w * w + f * f)), U = C - 24430005e-1 - T, F = 106.07719 + 203.48895579 * U, X = n.CT.d2R(F), Y = 175.73161 + 101.374724735 * U, M = n.CT.d2R(Y), B = 120.55883 + 50.317609207 * U, D = n.CT.d2R(B), k = 84.44459 + 21.571071177 * U, G = n.CT.d2R(k), j = n.CT.d2R(n.CT.m360(97.0881 + 0.16138586 * U)), ee = n.CT.d2R(n.CT.m360(154.8663 + 0.04726307 * U)), Z = n.CT.d2R(n.CT.m360(188.184 + 712734e-8 * U)), z = n.CT.d2R(n.CT.m360(335.2868 + 184e-5 * U)), te = 312.3346 - 0.13279386 * U, re = n.CT.d2R(te), le = 100.4411 - 0.03263064 * U, ae = n.CT.d2R(le), oe = 119.1942 - 717703e-8 * U, de = n.CT.d2R(oe), ve = 322.6186 - 175934e-8 * U, ce = n.CT.d2R(ve), he = 0.33033 * Math.sin(n.CT.d2R(163.679 + 10512e-7 * U)) + 0.03439 * Math.sin(n.CT.d2R(34.486 - 0.0161731 * U)), ye = n.CT.d2R(199.6766 + 0.1737919 * U), fe = n.CT.d2R(316.5182 - 208e-8 * U), Ce = n.CT.d2R(30.23756 + 0.0830925701 * U + he), Ae = n.CT.d2R(31.97853 + 0.0334597339 * U), Te = n.CT.d2R(13.469942), Re = 0.47259 * Math.sin(2 * (X - M)) + -0.03478 * Math.sin(Z - z) + 0.01081 * Math.sin(M - 2 * D + Z) + 738e-5 * Math.sin(ye) + 713e-5 * Math.sin(M - 2 * D + ee) + -674e-5 * Math.sin(j + Z - 2 * Te - 2 * Ce) + 666e-5 * Math.sin(M - 2 * D + z) + 445e-5 * Math.sin(X - Z) + -354e-5 * Math.sin(X - M) + -317e-5 * Math.sin(2 * fe - 2 * Te) + 265e-5 * Math.sin(X - z) + -186e-5 * Math.sin(Ce) + 162e-5 * Math.sin(ee - Z) + 158e-5 * Math.sin(4 * (X - M)) + -155e-5 * Math.sin(X - D) + -138e-5 * Math.sin(fe + de - 2 * Te - 2 * Ce) + -115e-5 * Math.sin(2 * (X - 2 * M + ae)) + 89e-5 * Math.sin(ee - z) + 85e-5 * Math.sin(X + Z - 2 * Te - 2 * Ce) + 83e-5 * Math.sin(ae - de) + 53e-5 * Math.sin(fe - ae), De = 1.06476 * Math.sin(2 * (M - D)) + 0.04256 * Math.sin(X - 2 * M + Z) + 0.03581 * Math.sin(M - Z) + 0.02395 * Math.sin(X - 2 * M + z) + 0.01984 * Math.sin(M - z) + -0.01778 * Math.sin(ye) + 0.01654 * Math.sin(M - ee) + 0.01334 * Math.sin(M - 2 * D + ee) + 0.01294 * Math.sin(Z - z) + -0.01142 * Math.sin(M - D) + -0.01057 * Math.sin(Ce) + -775e-5 * Math.sin(2 * (fe - Te)) + 524e-5 * Math.sin(2 * (X - M)) + -46e-4 * Math.sin(X - D) + 316e-5 * Math.sin(fe - 2 * Ce + de - 2 * Te) + -203e-5 * Math.sin(j + Z - 2 * Te - 2 * Ce) + 146e-5 * Math.sin(fe - de) + -145e-5 * Math.sin(2 * Ce) + 125e-5 * Math.sin(fe - ce) + -115e-5 * Math.sin(X - 2 * D + Z) + -94e-5 * Math.sin(2 * (M - ae)) + 86e-5 * Math.sin(2 * (X - 2 * M + ae)) + -86e-5 * Math.sin(5 * Ae - 2 * Ce + n.CT.d2R(52.225)) + -78e-5 * Math.sin(M - G) + -64e-5 * Math.sin(3 * D - 7 * G + 4 * z) + 64e-5 * Math.sin(j - z) + -63e-5 * Math.sin(X - 2 * D + z) + 58e-5 * Math.sin(de - ce) + 56e-5 * Math.sin(2 * (fe - Te - Ce)) + 56e-5 * Math.sin(2 * (M - G)) + 55e-5 * Math.sin(2 * (X - D)) + 52e-5 * Math.sin(3 * D - 7 * G + Z + 3 * z) + -43e-5 * Math.sin(X - Z) + 41e-5 * Math.sin(5 * (M - D)) + 41e-5 * Math.sin(z - Te) + 32e-5 * Math.sin(ae - de) + 32e-5 * Math.sin(2 * (D - Ce - Te)), Oe = 0.1649 * Math.sin(D - Z) + 0.09081 * Math.sin(D - z) + -0.06907 * Math.sin(M - D) + 0.03784 * Math.sin(Z - z) + 0.01846 * Math.sin(2 * (D - G)) + -0.0134 * Math.sin(Ce) + -0.01014 * Math.sin(2 * (fe - Te)) + 704e-5 * Math.sin(M - 2 * D + Z) + -62e-4 * Math.sin(M - 2 * D + ee) + -541e-5 * Math.sin(D - G) + 381e-5 * Math.sin(M - 2 * D + z) + 235e-5 * Math.sin(fe - de) + 198e-5 * Math.sin(fe - ce) + 176e-5 * Math.sin(ye) + 13e-4 * Math.sin(3 * (D - G)) + 125e-5 * Math.sin(X - D) + -119e-5 * Math.sin(5 * Ae - 2 * Ce + n.CT.d2R(52.225)) + 109e-5 * Math.sin(X - M) + -1e-3 * Math.sin(3 * D - 7 * G + 4 * z) + 91e-5 * Math.sin(de - ce) + 8e-4 * Math.sin(3 * D - 7 * G + Z + 3 * z) + -75e-5 * Math.sin(2 * M - 3 * D + Z) + 72e-5 * Math.sin(j + Z - 2 * Te - 2 * Ce) + 69e-5 * Math.sin(z - Te) + -58e-5 * Math.sin(2 * D - 3 * G + z) + -57e-5 * Math.sin(D - 2 * G + z) + 56e-5 * Math.sin(D + Z - 2 * Te - 2 * Ce) + -52e-5 * Math.sin(M - 2 * D + j) + -5e-4 * Math.sin(ee - Z) + 48e-5 * Math.sin(D - 2 * G + Z) + -45e-5 * Math.sin(2 * M - 3 * D + z) + -41e-5 * Math.sin(ee - z) + -38e-5 * Math.sin(2 * Ce) + -37e-5 * Math.sin(Z - z + de - ce) + -32e-5 * Math.sin(3 * D - 7 * G + 2 * Z + 2 * z) + 3e-4 * Math.sin(4 * (D - G)) + 29e-5 * Math.sin(D + z - 2 * Te - 2 * Ce) + -28e-5 * Math.sin(de + fe - 2 * Te - 2 * Ce) + 26e-5 * Math.sin(D - Te - Ce) + 24e-5 * Math.sin(M - 3 * D + 2 * G) + 21e-5 * Math.sin(D - Te - Ce) + -21e-5 * Math.sin(D - ee) + 17e-5 * Math.sin(2 * (D - Z)), Ne = 0.84287 * Math.sin(G - z) + 0.03431 * Math.sin(z - Z) + -0.03305 * Math.sin(2 * (fe - Te)) + -0.03211 * Math.sin(Ce) + -0.01862 * Math.sin(G - Z) + 0.01186 * Math.sin(fe - ce) + 623e-5 * Math.sin(G + z - 2 * Ce - 2 * Te) + 387e-5 * Math.sin(2 * (G - z)) + -284e-5 * Math.sin(5 * Ae - 2 * Ce + n.CT.d2R(52.225)) + -234e-5 * Math.sin(2 * (fe - z)) + -223e-5 * Math.sin(D - G) + -208e-5 * Math.sin(G - Te) + 178e-5 * Math.sin(fe + ce - 2 * z) + 134e-5 * Math.sin(z - Te) + 125e-5 * Math.sin(2 * (G - Ce - Te)) + -117e-5 * Math.sin(2 * Ce) + -112e-5 * Math.sin(2 * (D - G)) + 107e-5 * Math.sin(3 * D - 7 * G + 4 * z) + 102e-5 * Math.sin(G - Ce - Te) + 96e-5 * Math.sin(2 * G - fe - ce) + 87e-5 * Math.sin(2 * (fe - ce)) + -85e-5 * Math.sin(3 * D - 7 * G + Z + 3 * z) + 85e-5 * Math.sin(D - 2 * G + z) + -81e-5 * Math.sin(2 * (G - fe)) + 71e-5 * Math.sin(G + z - 2 * Te - 3 * Ce) + 61e-5 * Math.sin(X - G) + -56e-5 * Math.sin(fe - de) + -54e-5 * Math.sin(D - 2 * G + Z) + 51e-5 * Math.sin(M - G) + 42e-5 * Math.sin(2 * (fe - Ce - Te)) + 39e-5 * Math.sin(2 * (z - ce)) + 36e-5 * Math.sin(fe + Te - z - ce) + 35e-5 * Math.sin(2 * Ae - Ce + n.CT.d2R(188.37)) + -35e-5 * Math.sin(G - z + 2 * Te - 2 * fe) + -32e-5 * Math.sin(G + z - 2 * Te - Ce) + 3e-4 * Math.sin(2 * Ae - 2 * Ce + n.CT.d2R(149.15)) + 29e-5 * Math.sin(3 * D - 7 * G + 2 * Z + 2 * z) + 28e-5 * Math.sin(G - z + 2 * fe - 2 * Te) + -28e-5 * Math.sin(2 * (G - ce)) + -27e-5 * Math.sin(Z - z + de - ce) + -26e-5 * Math.sin(5 * Ae - 3 * Ce + n.CT.d2R(188.37)) + 25e-5 * Math.sin(ce - de) + -25e-5 * Math.sin(M - 3 * D + 2 * G) + -23e-5 * Math.sin(3 * (D - G)) + 21e-5 * Math.sin(2 * G - 2 * Te - 3 * Ce) + -21e-5 * Math.sin(2 * D - 3 * G + z) + 19e-5 * Math.sin(G - z - Ce) + -19e-5 * Math.sin(2 * G - Z - z) + -18e-5 * Math.sin(G - z + Ce) + -16e-5 * Math.sin(G + Z - 2 * Te - 2 * Ce);
                L.satellite1.meanLongitude = n.CT.m360(F), L.satellite1.trueLongitude = n.CT.m360(F + Re);
                var Fe = n.CT.d2R(L.satellite1.trueLongitude);
                L.satellite2.meanLongitude = n.CT.m360(Y), L.satellite2.trueLongitude = n.CT.m360(Y + De);
                var $e = n.CT.d2R(L.satellite2.trueLongitude);
                L.satellite3.meanLongitude = n.CT.m360(B), L.satellite3.trueLongitude = n.CT.m360(B + Oe);
                var ze = n.CT.d2R(L.satellite3.trueLongitude);
                L.satellite4.meanLongitude = n.CT.m360(k), L.satellite4.trueLongitude = n.CT.m360(k + Ne);
                var se = n.CT.d2R(L.satellite4.trueLongitude), be = Math.atan(6393e-7 * Math.sin(Fe - re) + 1825e-7 * Math.sin(Fe - ae) + 329e-7 * Math.sin(Fe - de) + -311e-7 * Math.sin(Fe - fe) + 93e-7 * Math.sin(Fe - ce) + 75e-7 * Math.sin(3 * Fe - 4 * M - 1.9927 * Re + ae) + 46e-7 * Math.sin(Fe + fe - 2 * Te - 2 * Ce));
                L.satellite1.equatorialLatitude = n.CT.r2D(be);
                var Pe = Math.atan(81004e-7 * Math.sin($e - ae) + 4512e-7 * Math.sin($e - de) + -3284e-7 * Math.sin($e - fe) + 116e-6 * Math.sin($e - ce) + 272e-7 * Math.sin(X - 2 * D + 1.0146 * De + ae) + -144e-7 * Math.sin($e - re) + 143e-7 * Math.sin($e + fe - 2 * Te - 2 * Ce) + 35e-7 * Math.sin($e - fe + Ce) + -28e-7 * Math.sin(X - 2 * D + 1.0146 * De + de));
                L.satellite2.equatorialLatitude = n.CT.r2D(Pe);
                var Ve = Math.atan(32402e-7 * Math.sin(ze - de) + -16911e-7 * Math.sin(ze - fe) + 6847e-7 * Math.sin(ze - ce) + -2797e-7 * Math.sin(ze - ae) + 321e-7 * Math.sin(ze + fe - 2 * Te - 2 * Ce) + 51e-7 * Math.sin(ze - fe + Ce) + -45e-7 * Math.sin(ze - fe - Ce) + -45e-7 * Math.sin(ze + fe - 2 * Te) + 37e-7 * Math.sin(ze + fe - 2 * Te - 3 * Ce) + 3e-6 * Math.sin(2 * M - 3 * ze + 4.03 * Oe + ae) + -21e-7 * Math.sin(2 * M - 3 * ze + 4.03 * Oe + de));
                L.satellite3.equatorialLatitude = n.CT.r2D(Ve);
                var me = Math.atan(-76579e-7 * Math.sin(se - fe) + 44134e-7 * Math.sin(se - ce) + -5112e-7 * Math.sin(se - de) + 773e-7 * Math.sin(se + fe - 2 * Te - 2 * Ce) + 104e-7 * Math.sin(se - fe + Ce) + -102e-7 * Math.sin(se - fe - Ce) + 88e-7 * Math.sin(se + fe - 2 * Te - 3 * Ce) + -38e-7 * Math.sin(se + fe - 2 * Te - Ce));
                L.satellite4.equatorialLatitude = n.CT.r2D(me), L.satellite1.r = 5.90569 * (1 + (-41339e-7 * Math.cos(2 * (X - M)) + -387e-7 * Math.cos(X - Z) + -214e-7 * Math.cos(X - z) + 17e-6 * Math.cos(X - M) + -131e-7 * Math.cos(4 * (X - M)) + 106e-7 * Math.cos(X - D) + -66e-7 * Math.cos(X + Z - 2 * Te - 2 * Ce))), L.satellite2.r = 9.39657 * (1 + (93848e-7 * Math.cos(X - M) + -3116e-7 * Math.cos(M - Z) + -1744e-7 * Math.cos(M - z) + -1442e-7 * Math.cos(M - ee) + 553e-7 * Math.cos(M - D) + 523e-7 * Math.cos(X - D) + -29e-6 * Math.cos(2 * (X - M)) + 164e-7 * Math.cos(2 * (M - ae)) + 107e-7 * Math.cos(X - 2 * D + Z) + -102e-7 * Math.cos(M - j) + -91e-7 * Math.cos(2 * (X - D)))), L.satellite3.r = 14.98832 * (1 + (-14388e-7 * Math.cos(D - Z) + -7919e-7 * Math.cos(D - z) + 6342e-7 * Math.cos(M - D) + -1761e-7 * Math.cos(2 * (D - G)) + 294e-7 * Math.cos(D - G) + -156e-7 * Math.cos(3 * (D - G)) + 156e-7 * Math.cos(X - D) + -153e-7 * Math.cos(X - M) + 7e-6 * Math.cos(2 * M - 3 * D + Z) + -51e-7 * Math.cos(D + Z - 2 * Te - 2 * Ce))), L.satellite4.r = 26.36273 * (1 + (-73546e-7 * Math.cos(G - z) + 1621e-7 * Math.cos(G - Z) + 974e-7 * Math.cos(D - G) + -543e-7 * Math.cos(G + z - 2 * Te - 2 * Ce) + -271e-7 * Math.cos(2 * (G - z)) + 182e-7 * Math.cos(G - Te) + 177e-7 * Math.cos(2 * (D - G)) + -167e-7 * Math.cos(2 * G - fe - ce) + 167e-7 * Math.cos(fe - ce) + -155e-7 * Math.cos(2 * (G - Te - Ce)) + 142e-7 * Math.cos(2 * (G - fe)) + 105e-7 * Math.cos(X - G) + 92e-7 * Math.cos(M - G) + -89e-7 * Math.cos(G - Te - Ce) + -62e-7 * Math.cos(G + z - 2 * Te - 3 * Ce) + 48e-7 * Math.cos(2 * (G - ce))));
                var Me = (C - 2433282423e-3) / 36525, ie = n.CT.d2R(1.3966626 * Me + 3088e-7 * Me * Me);
                Fe += ie, L.satellite1.tropicalLongitude = n.CT.m360(n.CT.r2D(Fe)), $e += ie, L.satellite2.tropicalLongitude = n.CT.m360(n.CT.r2D($e)), ze += ie, L.satellite3.tropicalLongitude = n.CT.m360(n.CT.r2D(ze)), se += ie, L.satellite4.tropicalLongitude = n.CT.m360(n.CT.r2D(se)), fe += ie;
                var xe = (C - 24150205e-1) / 36525, We = 3.120262 + 6e-4 * xe, J = n.CT.d2R(We), we = L.satellite1.r * Math.cos(Fe - fe) * Math.cos(be), Ee = L.satellite2.r * Math.cos($e - fe) * Math.cos(Pe), ne = L.satellite3.r * Math.cos(ze - fe) * Math.cos(Ve), _e = L.satellite4.r * Math.cos(se - fe) * Math.cos(me), Se = 0, ke = L.satellite1.r * Math.sin(Fe - fe) * Math.cos(be), Ue = L.satellite2.r * Math.sin($e - fe) * Math.cos(Pe), je = L.satellite3.r * Math.sin(ze - fe) * Math.cos(Ve), He = L.satellite4.r * Math.sin(se - fe) * Math.cos(me), ct = 0, Je = L.satellite1.r * Math.sin(be), Xe = L.satellite2.r * Math.sin(Pe), Ze = L.satellite3.r * Math.sin(Ve), tt = L.satellite4.r * Math.sin(me), et = 1, _t = n.CT.d2R(c.EPO.jupiterLongitudeAscendingNode(C)), at = n.CT.d2R(c.EPO.jupiterInclination(C)), Ye = 0, it = 0, Qe = 0, ht = new n.C3D(), qe = V.rotations(Se, ct, et, J, fe, at, _t, P, d, ht);
                Ye = qe[0], it = qe[1], Qe = qe[2];
                var st = Math.atan2(Ye, Qe);
                qe = V.rotations(we, ke, Je, J, fe, at, _t, P, d, L.satellite1.eclipticRectangularCoordinates), Ye = qe[0], it = qe[1], Qe = qe[2], L.satellite1.trueRectangularCoordinates.x = Ye * Math.cos(st) - Qe * Math.sin(st), L.satellite1.trueRectangularCoordinates.y = Ye * Math.sin(st) + Qe * Math.cos(st), L.satellite1.trueRectangularCoordinates.z = it, qe = V.rotations(Ee, Ue, Xe, J, fe, at, _t, P, d, L.satellite2.eclipticRectangularCoordinates), Ye = qe[0], it = qe[1], Qe = qe[2], L.satellite2.trueRectangularCoordinates.x = Ye * Math.cos(st) - Qe * Math.sin(st), L.satellite2.trueRectangularCoordinates.y = Ye * Math.sin(st) + Qe * Math.cos(st), L.satellite2.trueRectangularCoordinates.z = it, qe = V.rotations(ne, je, Ze, J, fe, at, _t, P, d, L.satellite3.eclipticRectangularCoordinates), Ye = qe[0], it = qe[1], Qe = qe[2], L.satellite3.trueRectangularCoordinates.x = Ye * Math.cos(st) - Qe * Math.sin(st), L.satellite3.trueRectangularCoordinates.y = Ye * Math.sin(st) + Qe * Math.cos(st), L.satellite3.trueRectangularCoordinates.z = it, qe = V.rotations(_e, He, tt, J, fe, at, _t, P, d, L.satellite4.eclipticRectangularCoordinates), Ye = qe[0], it = qe[1], Qe = qe[2], L.satellite4.trueRectangularCoordinates.x = Ye * Math.cos(st) - Qe * Math.sin(st), L.satellite4.trueRectangularCoordinates.y = Ye * Math.sin(st) + Qe * Math.cos(st), L.satellite4.trueRectangularCoordinates.z = it, L.satellite1.apparentRectangularCoordinates.x = L.satellite1.trueRectangularCoordinates.x + Math.abs(L.satellite1.trueRectangularCoordinates.z) / 17295 * Math.sqrt(1 - L.satellite1.trueRectangularCoordinates.x / L.satellite1.r * (L.satellite1.trueRectangularCoordinates.x / L.satellite1.r)), L.satellite1.apparentRectangularCoordinates.y = L.satellite1.trueRectangularCoordinates.y, L.satellite1.apparentRectangularCoordinates.z = L.satellite1.trueRectangularCoordinates.z, L.satellite2.apparentRectangularCoordinates.x = L.satellite2.trueRectangularCoordinates.x + Math.abs(L.satellite2.trueRectangularCoordinates.z) / 21819 * Math.sqrt(1 - L.satellite2.trueRectangularCoordinates.x / L.satellite2.r * (L.satellite2.trueRectangularCoordinates.x / L.satellite2.r)), L.satellite2.apparentRectangularCoordinates.y = L.satellite2.trueRectangularCoordinates.y, L.satellite2.apparentRectangularCoordinates.z = L.satellite2.trueRectangularCoordinates.z, L.satellite3.apparentRectangularCoordinates.x = L.satellite3.trueRectangularCoordinates.x + Math.abs(L.satellite3.trueRectangularCoordinates.z) / 27558 * Math.sqrt(1 - L.satellite3.trueRectangularCoordinates.x / L.satellite3.r * (L.satellite3.trueRectangularCoordinates.x / L.satellite3.r)), L.satellite3.apparentRectangularCoordinates.y = L.satellite3.trueRectangularCoordinates.y, L.satellite3.apparentRectangularCoordinates.z = L.satellite3.trueRectangularCoordinates.z, L.satellite4.apparentRectangularCoordinates.x = L.satellite4.trueRectangularCoordinates.x + Math.abs(L.satellite4.trueRectangularCoordinates.z) / 36548 * Math.sqrt(1 - L.satellite4.trueRectangularCoordinates.x / L.satellite4.r * (L.satellite4.trueRectangularCoordinates.x / L.satellite4.r)), L.satellite4.apparentRectangularCoordinates.y = L.satellite4.trueRectangularCoordinates.y, L.satellite4.apparentRectangularCoordinates.z = L.satellite4.trueRectangularCoordinates.z;
                var ut = A / (A + L.satellite1.trueRectangularCoordinates.z / 2095);
                return L.satellite1.apparentRectangularCoordinates.x *= ut, L.satellite1.apparentRectangularCoordinates.y *= ut, ut = A / (A + L.satellite2.trueRectangularCoordinates.z / 2095), L.satellite2.apparentRectangularCoordinates.x *= ut, L.satellite2.apparentRectangularCoordinates.y *= ut, ut = A / (A + L.satellite3.trueRectangularCoordinates.z / 2095), L.satellite3.apparentRectangularCoordinates.x *= ut, L.satellite3.apparentRectangularCoordinates.y *= ut, ut = A / (A + L.satellite4.trueRectangularCoordinates.z / 2095), L.satellite4.apparentRectangularCoordinates.x *= ut, L.satellite4.apparentRectangularCoordinates.y *= ut, L;
              }, V.rotations = function(C, E, v, m, L, A, K, T, w, f) {
                var R, O, W, N = L - K, $ = C, S = E * Math.cos(m) - v * Math.sin(m), I = E * Math.sin(m) + v * Math.cos(m), x = $ * Math.cos(N) - S * Math.sin(N), P = $ * Math.sin(N) + S * Math.cos(N), d = I, U = x, F = P * Math.cos(A) - d * Math.sin(A), X = P * Math.sin(A) + d * Math.cos(A), Y = U * Math.cos(K) - F * Math.sin(K), M = U * Math.sin(K) + F * Math.cos(K), B = X, D = 1 / 2095;
                f.x = Y * D, f.y = M * D, f.z = B * D;
                var k = Y * Math.sin(T) - M * Math.cos(T), G = Y * Math.cos(T) + M * Math.sin(T), j = B;
                return R = k, O = j * Math.sin(w) + G * Math.cos(w), W = j * Math.cos(w) - G * Math.sin(w), [R, O, W];
              }, V.fillInPhenomenaDetails = function(C) {
                var E = 1.071374 * C.apparentRectangularCoordinates.y, v = E * E + C.apparentRectangularCoordinates.x * C.apparentRectangularCoordinates.x;
                v < 1 ? C.apparentRectangularCoordinates.z < 0 ? (C.bInTransit = !0, C.bInOccultation = !1) : (C.bInTransit = !1, C.bInOccultation = !0) : (C.bInTransit = !1, C.bInOccultation = !1);
              };
              var y = {};
              (0, t.registerType)("GM", [V, y, null]);
            }
          ),
          /***/
          "./esm/astrocalc/globe.js": (
            /*!********************************!*\
              !*** ./esm/astrocalc/globe.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAGlobe: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.rhoSinThetaPrime = function(r, o) {
                r = n.CT.d2R(r);
                var c = Math.atan(0.99664719 * Math.tan(r));
                return 0.99664719 * Math.sin(c) + o / 6378149 * Math.sin(r);
              }, e.rhoCosThetaPrime = function(r, o) {
                r = n.CT.d2R(r);
                var c = Math.atan(0.99664719 * Math.tan(r));
                return Math.cos(c) + o / 6378149 * Math.cos(r);
              }, e.radiusOfParallelOfLatitude = function(r) {
                r = n.CT.d2R(r);
                var o = Math.sin(r);
                return 6378.14 * Math.cos(r) / Math.sqrt(1 - 0.0066943847614084 * o * o);
              }, e.radiusOfCurvature = function(r) {
                r = n.CT.d2R(r);
                var o = Math.sin(r);
                return 6335.4422767778715 / Math.pow(1 - 0.0066943847614084 * o * o, 1.5);
              }, e.distanceBetweenPoints = function(r, o, c, l) {
                r = n.CT.d2R(r), c = n.CT.d2R(c), o = n.CT.d2R(o), l = n.CT.d2R(l);
                var g = (r + c) / 2, a = (r - c) / 2, b = (o - l) / 2, V = Math.sin(a), y = Math.cos(a), C = Math.cos(g), E = Math.sin(g), v = Math.sin(b), m = Math.cos(b), L = V * V * m * m + C * C * v * v, A = y * y * m * m + E * E * v * v, K = Math.atan(Math.sqrt(L / A)), T = Math.sqrt(L * A) / K, w = 2 * K * 6378.14, f = (3 * T - 1) / (2 * A), R = (3 * T + 1) / (2 * L), O = 0.00335281317789691;
                return w * (1 + O * f * E * E * y * y - O * R * C * C * V * V);
              };
              var _ = {};
              (0, t.registerType)("CAAGlobe", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/illuminated_fraction.js": (
            /*!***********************************************!*\
              !*** ./esm/astrocalc/illuminated_fraction.js ***!
              \***********************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                IFR: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), e = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function _() {
              }
              _.phaseAngle = function(o, c, l) {
                return e.CT.m360(e.CT.r2D(Math.acos((o * o + l * l - c * c) / (2 * o * l))));
              }, _.phaseAngle2 = function(o, c, l, g, a, b) {
                return l = e.CT.d2R(l), g = e.CT.d2R(g), a = e.CT.d2R(a), e.CT.m360(e.CT.r2D(Math.acos((o - c * Math.cos(l) * Math.cos(g - a)) / b)));
              }, _.phaseAngleRectangular = function(o, c, l, g, a, b) {
                g = e.CT.d2R(g), a = e.CT.d2R(a);
                var V = Math.cos(g);
                return e.CT.m360(e.CT.r2D(Math.acos((o * V * Math.cos(a) + c * V * Math.sin(a) + l * Math.sin(g)) / b)));
              }, _.illuminatedFraction = function(o) {
                return o = e.CT.d2R(o), (1 + Math.cos(o)) / 2;
              }, _.illuminatedFraction2 = function(o, c, l) {
                return ((o + l) * (o + l) - c * c) / (4 * o * l);
              }, _.mercuryMagnitudeMuller = function(o, c, l) {
                var g = l - 50;
                return 1.16 + 5 * n.Util.log10(o * c) + 0.02838 * g + 1023e-7 * g * g;
              }, _.venusMagnitudeMuller = function(o, c, l) {
                return -4 + 5 * n.Util.log10(o * c) + 0.01322 * l + 4247e-10 * l * l * l;
              }, _.marsMagnitudeMuller = function(o, c, l) {
                return -1.3 + 5 * n.Util.log10(o * c) + 0.01486 * l;
              }, _.jupiterMagnitudeMuller = function(o, c) {
                return -8.93 + 5 * n.Util.log10(o * c);
              }, _.saturnMagnitudeMuller = function(o, c, l, g) {
                g = e.CT.d2R(g);
                var a = Math.sin(g);
                return -8.68 + 5 * n.Util.log10(o * c) + 0.044 * Math.abs(l) - 2.6 * Math.sin(Math.abs(g)) + 1.25 * a * a;
              }, _.uranusMagnitudeMuller = function(o, c) {
                return -6.85 + 5 * n.Util.log10(o * c);
              }, _.neptuneMagnitudeMuller = function(o, c) {
                return -7.05 + 5 * n.Util.log10(o * c);
              }, _.mercuryMagnitudeAA = function(o, c, l) {
                var g = l * l, a = g * l;
                return -0.42 + 5 * n.Util.log10(o * c) + 0.038 * l - 273e-6 * g + 2e-6 * a;
              }, _.venusMagnitudeAA = function(o, c, l) {
                var g = l * l, a = g * l;
                return -4.4 + 5 * n.Util.log10(o * c) + 9e-4 * l + 239e-6 * g - 65e-8 * a;
              }, _.marsMagnitudeAA = function(o, c, l) {
                return -1.52 + 5 * n.Util.log10(o * c) + 0.016 * l;
              }, _.jupiterMagnitudeAA = function(o, c, l) {
                return -9.4 + 5 * n.Util.log10(o * c) + 5e-3 * l;
              }, _.saturnMagnitudeAA = function(o, c, l, g) {
                g = e.CT.d2R(g);
                var a = Math.sin(g);
                return -8.88 + 5 * n.Util.log10(o * c) + 0.044 * Math.abs(l) - 2.6 * Math.sin(Math.abs(g)) + 1.25 * a * a;
              }, _.uranusMagnitudeAA = function(o, c) {
                return -7.19 + 5 * n.Util.log10(o * c);
              }, _.neptuneMagnitudeAA = function(o, c) {
                return -6.87 + 5 * n.Util.log10(o * c);
              }, _.plutoMagnitudeAA = function(o, c) {
                return -1 + 5 * n.Util.log10(o * c);
              };
              var r = {};
              (0, t.registerType)("IFR", [_, r, null]);
            }
          ),
          /***/
          "./esm/astrocalc/interpolate.js": (
            /*!**************************************!*\
              !*** ./esm/astrocalc/interpolate.js ***!
              \**************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                INTP: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              );
              function n() {
              }
              n.interpolate = function(_, r, o, c) {
                var l = o - r, g = c - o, a = r + c - 2 * o;
                return o + _ / 2 * (l + g + _ * a);
              }, n.interpolate2 = function(_, r, o, c, l, g) {
                var a = o - r, b = c - o, V = l - c, y = g - l, C = b - a, E = V - b, v = y - V, m = E - C, L = v - E, A = L - m, K = _ * _, T = K * _, w = T * _;
                return c + _ * ((b + V) / 2 - (m + L) / 12) + K * (E / 2 - A / 24) + T * ((m + L) / 12) + w * (A / 24);
              }, n.interpolateToHalves = function(_, r, o, c) {
                return (9 * (r + o) - _ - c) / 16;
              }, n.lagrangeInterpolate = function(_, r, o, c) {
                for (var l = 0, g = 1; g <= r; g++) {
                  for (var a = 1, b = 1; b <= r; b++)
                    b !== g && (a = a * (_ - o[b - 1]) / (o[g - 1] - o[b - 1]));
                  l += a * c[g - 1];
                }
                return l;
              }, n.zero = function(_, r, o) {
                for (var c = r - _, l = o - r, g = _ + o - 2 * r, a = !0, b = 0, V = b; a; )
                  V = -2 * r / (c + l + g * b), a = Math.abs(V - b) > 1e-12, a && (b = V);
                return V;
              }, n.zeroB = function(_, r, o, c, l) {
                for (var g = r - _, a = o - r, b = c - o, V = l - c, y = a - g, C = b - a, E = V - b, v = C - y, m = E - C, L = m - v, A = !0, K = 0, T = K; A; ) {
                  var w = K * K, f = w * K, R = f * K;
                  T = (-24 * o + w * (L - 12 * C) - 2 * f * (v + m) - R * L) / (2 * (6 * a + 6 * b - v - m)), A = Math.abs(T - K) > 1e-12, A && (K = T);
                }
                return T;
              }, n.zero2 = function(_, r, o) {
                for (var c = r - _, l = o - r, g = _ + o - 2 * r, a = !0, b = 0, V = b; a; ) {
                  var y = -(2 * r + b * (c + l + g * b)) / (c + l + 2 * g * b);
                  V = b + y, a = Math.abs(y) > 1e-12, a && (b = V);
                }
                return V;
              }, n.zero2B = function(_, r, o, c, l) {
                for (var g = r - _, a = o - r, b = c - o, V = l - c, y = a - g, C = b - a, E = V - b, v = C - y, m = E - C, L = m - v, A = L / 24, K = (v + m) / 12, T = C / 2 - A, w = (a + b) / 2 - K, f = !0, R = 0, O = R; f; ) {
                  var W = R * R, N = W * R, $ = N * R, S = -(A * $ + K * N + T * W + w * R + o) / (4 * A * N + 3 * K * W + 2 * T * R + w);
                  O = R + S, f = Math.abs(S) > 1e-12, f && (R = O);
                }
                return O;
              };
              var e = {};
              (0, t.registerType)("INTP", [n, e, null]);
            }
          ),
          /***/
          "./esm/astrocalc/jupiter.js": (
            /*!**********************************!*\
              !*** ./esm/astrocalc/jupiter.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAJupiter: () => (
                  /* binding */
                  w
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(59954691, 0, 0), new e.VSC(9695899, 5.0619179, 529.6909651), new e.VSC(573610, 1.444062, 7.113547), new e.VSC(306389, 5.417347, 1059.38193), new e.VSC(97178, 4.14265, 632.78374), new e.VSC(72903, 3.64043, 522.57742), new e.VSC(64264, 3.41145, 103.09277), new e.VSC(39806, 2.29377, 419.48464), new e.VSC(38858, 1.27232, 316.39187), new e.VSC(27965, 1.78455, 536.80451), new e.VSC(13590, 5.77481, 1589.0729), new e.VSC(8769, 3.63, 949.1756), new e.VSC(8246, 3.5823, 206.1855), new e.VSC(7368, 5.081, 735.8765), new e.VSC(6263, 0.025, 213.2991), new e.VSC(6114, 4.5132, 1162.4747), new e.VSC(5305, 4.1863, 1052.2684), new e.VSC(5305, 1.3067, 14.2271), new e.VSC(4905, 1.3208, 110.2063), new e.VSC(4647, 4.6996, 3.9322), new e.VSC(3045, 4.3168, 426.5982), new e.VSC(2610, 1.5667, 846.0828), new e.VSC(2028, 1.0638, 3.1814), new e.VSC(1921, 0.9717, 639.8973), new e.VSC(1765, 2.1415, 1066.4955), new e.VSC(1723, 3.8804, 1265.5675), new e.VSC(1633, 3.582, 515.4639), new e.VSC(1432, 4.2968, 625.6702), new e.VSC(973, 4.098, 95.979), new e.VSC(884, 2.437, 412.371), new e.VSC(733, 6.085, 838.969), new e.VSC(731, 3.806, 1581.959), new e.VSC(709, 1.293, 742.99), new e.VSC(692, 6.134, 2118.764), new e.VSC(614, 4.109, 1478.867), new e.VSC(582, 4.54, 309.278), new e.VSC(495, 3.756, 323.505), new e.VSC(441, 2.958, 454.909), new e.VSC(417, 1.036, 2.488), new e.VSC(390, 4.897, 1692.166), new e.VSC(376, 4.703, 1368.66), new e.VSC(341, 5.715, 533.623), new e.VSC(330, 4.74, 0.048), new e.VSC(262, 1.877, 0.963), new e.VSC(261, 0.82, 380.128), new e.VSC(257, 3.724, 199.072), new e.VSC(244, 5.22, 728.763), new e.VSC(235, 1.227, 909.819), new e.VSC(220, 1.651, 543.918), new e.VSC(207, 1.855, 525.759), new e.VSC(202, 1.807, 1375.774), new e.VSC(197, 5.293, 1155.361), new e.VSC(175, 3.73, 942.062), new e.VSC(175, 3.226, 1898.351), new e.VSC(175, 5.91, 956.289), new e.VSC(158, 4.365, 1795.258), new e.VSC(151, 3.906, 74.782), new e.VSC(149, 4.377, 1685.052), new e.VSC(141, 3.136, 491.558), new e.VSC(138, 1.318, 1169.588), new e.VSC(131, 4.169, 1045.155), new e.VSC(117, 2.5, 1596.186), new e.VSC(117, 3.389, 0.521), new e.VSC(106, 4.554, 526.51)], r = [new e.VSC(52993480757, 0, 0), new e.VSC(489741, 4.220667, 529.690965), new e.VSC(228919, 6.026475, 7.113547), new e.VSC(27655, 4.57266, 1059.38193), new e.VSC(20721, 5.45939, 522.57742), new e.VSC(12106, 0.16986, 536.80451), new e.VSC(6068, 4.4242, 103.0928), new e.VSC(5434, 3.9848, 419.4846), new e.VSC(4238, 5.8901, 14.2271), new e.VSC(2212, 5.2677, 206.1855), new e.VSC(1746, 4.9267, 1589.0729), new e.VSC(1296, 5.5513, 3.1814), new e.VSC(1173, 5.8565, 1052.2684), new e.VSC(1163, 0.5145, 3.9322), new e.VSC(1099, 5.307, 515.4639), new e.VSC(1007, 0.4648, 735.8765), new e.VSC(1004, 3.1504, 426.5982), new e.VSC(848, 5.758, 110.206), new e.VSC(827, 4.803, 213.299), new e.VSC(816, 0.586, 1066.495), new e.VSC(725, 5.518, 639.897), new e.VSC(568, 5.989, 625.67), new e.VSC(474, 4.132, 412.371), new e.VSC(413, 5.737, 95.979), new e.VSC(345, 4.242, 632.784), new e.VSC(336, 3.732, 1162.475), new e.VSC(234, 4.035, 949.176), new e.VSC(234, 6.243, 309.278), new e.VSC(199, 1.505, 838.969), new e.VSC(195, 2.219, 323.505), new e.VSC(187, 6.086, 742.99), new e.VSC(184, 6.28, 543.918), new e.VSC(171, 5.417, 199.072), new e.VSC(131, 0.626, 728.763), new e.VSC(115, 0.68, 846.083), new e.VSC(115, 5.286, 2118.764), new e.VSC(108, 4.493, 956.289), new e.VSC(80, 5.82, 1045.15), new e.VSC(72, 5.34, 942.06), new e.VSC(70, 5.97, 532.87), new e.VSC(67, 5.73, 21.34), new e.VSC(66, 0.13, 526.51), new e.VSC(65, 6.09, 1581.96), new e.VSC(59, 0.59, 1155.36), new e.VSC(58, 0.99, 1596.19), new e.VSC(57, 5.97, 1169.59), new e.VSC(57, 1.41, 533.62), new e.VSC(55, 5.43, 10.29), new e.VSC(52, 5.73, 117.32), new e.VSC(52, 0.23, 1368.66), new e.VSC(50, 6.08, 525.76), new e.VSC(47, 3.63, 1478.87), new e.VSC(47, 0.51, 1265.57), new e.VSC(40, 4.16, 1692.17), new e.VSC(34, 0.1, 302.16), new e.VSC(33, 5.04, 220.41), new e.VSC(32, 5.37, 508.35), new e.VSC(29, 5.42, 1272.68), new e.VSC(29, 3.36, 4.67), new e.VSC(29, 0.76, 88.87), new e.VSC(25, 1.61, 831.86)], o = [new e.VSC(47234, 4.32148, 7.11355), new e.VSC(38966, 0, 0), new e.VSC(30629, 2.93021, 529.69097), new e.VSC(3189, 1.055, 522.5774), new e.VSC(2729, 4.8455, 536.8045), new e.VSC(2723, 3.4141, 1059.3819), new e.VSC(1721, 4.1873, 14.2271), new e.VSC(383, 5.768, 419.485), new e.VSC(378, 0.76, 515.464), new e.VSC(367, 6.055, 103.093), new e.VSC(337, 3.786, 3.181), new e.VSC(308, 0.694, 206.186), new e.VSC(218, 3.814, 1589.073), new e.VSC(199, 5.34, 1066.495), new e.VSC(197, 2.484, 3.932), new e.VSC(156, 1.406, 1052.268), new e.VSC(146, 3.814, 639.897), new e.VSC(142, 1.634, 426.598), new e.VSC(130, 5.837, 412.371), new e.VSC(117, 1.414, 625.67), new e.VSC(97, 4.03, 110.21), new e.VSC(91, 1.11, 95.98), new e.VSC(87, 2.52, 632.78), new e.VSC(79, 4.64, 543.92), new e.VSC(72, 2.22, 735.88), new e.VSC(58, 0.83, 199.07), new e.VSC(57, 3.12, 213.3), new e.VSC(49, 1.67, 309.28), new e.VSC(40, 4.02, 21.34), new e.VSC(40, 0.62, 323.51), new e.VSC(36, 2.33, 728.76), new e.VSC(29, 3.61, 10.29), new e.VSC(28, 3.24, 838.97), new e.VSC(26, 4.5, 742.99), new e.VSC(26, 2.51, 1162.47), new e.VSC(25, 1.22, 1045.15), new e.VSC(24, 3.01, 956.29), new e.VSC(19, 4.29, 532.87), new e.VSC(18, 0.81, 508.35), new e.VSC(17, 4.2, 2118.76), new e.VSC(17, 1.83, 526.51), new e.VSC(15, 5.81, 1596.19), new e.VSC(15, 0.68, 942.06), new e.VSC(15, 4, 117.32), new e.VSC(14, 5.95, 316.39), new e.VSC(14, 1.8, 302.16), new e.VSC(13, 2.52, 88.87), new e.VSC(13, 4.37, 1169.59), new e.VSC(11, 4.44, 525.76), new e.VSC(10, 1.72, 1581.96), new e.VSC(9, 2.18, 1155.36), new e.VSC(9, 3.29, 220.41), new e.VSC(9, 3.32, 831.86), new e.VSC(8, 5.76, 846.08), new e.VSC(8, 2.71, 533.62), new e.VSC(7, 2.18, 1265.57), new e.VSC(6, 0.5, 949.18)], c = [new e.VSC(6502, 2.5986, 7.1135), new e.VSC(1357, 1.3464, 529.691), new e.VSC(471, 2.475, 14.227), new e.VSC(417, 3.245, 536.805), new e.VSC(353, 2.974, 522.577), new e.VSC(155, 2.076, 1059.382), new e.VSC(87, 2.51, 515.46), new e.VSC(44, 0, 0), new e.VSC(34, 3.83, 1066.5), new e.VSC(28, 2.45, 206.19), new e.VSC(24, 1.28, 412.37), new e.VSC(23, 2.98, 543.92), new e.VSC(20, 2.1, 639.9), new e.VSC(20, 1.4, 419.48), new e.VSC(19, 1.59, 103.09), new e.VSC(17, 2.3, 21.34), new e.VSC(17, 2.6, 1589.07), new e.VSC(16, 3.15, 625.67), new e.VSC(16, 3.36, 1052.27), new e.VSC(13, 2.76, 95.98), new e.VSC(13, 2.54, 199.07), new e.VSC(13, 6.27, 426.6), new e.VSC(9, 1.76, 10.29), new e.VSC(9, 2.27, 110.21), new e.VSC(7, 3.43, 309.28), new e.VSC(7, 4.04, 728.76), new e.VSC(6, 2.52, 508.35), new e.VSC(5, 2.91, 1045.15), new e.VSC(5, 5.25, 323.51), new e.VSC(4, 4.3, 88.87), new e.VSC(4, 3.52, 302.16), new e.VSC(4, 4.09, 735.88), new e.VSC(3, 1.43, 956.29), new e.VSC(3, 4.36, 1596.19), new e.VSC(3, 1.25, 213.3), new e.VSC(3, 5.02, 838.97), new e.VSC(3, 2.24, 117.32), new e.VSC(2, 2.9, 742.99), new e.VSC(2, 2.36, 942.06)], l = [new e.VSC(669, 0.853, 7.114), new e.VSC(114, 3.142, 0), new e.VSC(100, 0.743, 14.227), new e.VSC(50, 1.65, 536.8), new e.VSC(44, 5.82, 529.69), new e.VSC(32, 4.86, 522.58), new e.VSC(15, 4.29, 515.46), new e.VSC(9, 0.71, 1059.38), new e.VSC(5, 1.3, 543.92), new e.VSC(4, 2.32, 1066.5), new e.VSC(4, 0.48, 21.34), new e.VSC(3, 3, 412.37), new e.VSC(2, 0.4, 639.9), new e.VSC(2, 4.26, 199.07), new e.VSC(2, 4.91, 625.67), new e.VSC(2, 4.26, 206.19), new e.VSC(1, 5.26, 1052.27), new e.VSC(1, 4.72, 95.98), new e.VSC(1, 1.29, 1589.07)], g = [new e.VSC(50, 5.26, 7.11), new e.VSC(16, 5.25, 14.23), new e.VSC(4, 0.01, 536.8), new e.VSC(2, 1.1, 522.58), new e.VSC(1, 3.14, 0)], a = [new e.VSC(2268616, 3.5585261, 529.6909651), new e.VSC(110090, 0, 0), new e.VSC(109972, 3.908093, 1059.38193), new e.VSC(8101, 3.6051, 522.5774), new e.VSC(6438, 0.3063, 536.8045), new e.VSC(6044, 4.2588, 1589.0729), new e.VSC(1107, 2.9853, 1162.4747), new e.VSC(944, 1.675, 426.598), new e.VSC(942, 2.936, 1052.268), new e.VSC(894, 1.754, 7.114), new e.VSC(836, 5.179, 103.093), new e.VSC(767, 2.155, 632.784), new e.VSC(684, 3.678, 213.299), new e.VSC(629, 0.643, 1066.495), new e.VSC(559, 0.014, 846.083), new e.VSC(532, 2.703, 110.206), new e.VSC(464, 1.173, 949.176), new e.VSC(431, 2.608, 419.485), new e.VSC(351, 4.611, 2118.764), new e.VSC(132, 4.778, 742.99), new e.VSC(123, 3.35, 1692.166), new e.VSC(116, 1.387, 323.505), new e.VSC(115, 5.049, 316.392), new e.VSC(104, 3.701, 515.464), new e.VSC(103, 2.319, 1478.867), new e.VSC(102, 3.153, 1581.959)], b = [new e.VSC(177352, 5.701665, 529.690965), new e.VSC(3230, 5.7794, 1059.3819), new e.VSC(3081, 5.4746, 522.5774), new e.VSC(2212, 4.7348, 536.8045), new e.VSC(1694, 3.1416, 0), new e.VSC(346, 4.746, 1052.268), new e.VSC(234, 5.189, 1066.495), new e.VSC(196, 6.186, 7.114), new e.VSC(150, 3.927, 1589.073), new e.VSC(114, 3.439, 632.784), new e.VSC(97, 2.91, 949.18), new e.VSC(82, 5.08, 1162.47), new e.VSC(77, 2.51, 103.09), new e.VSC(77, 0.61, 419.48), new e.VSC(74, 5.5, 515.46), new e.VSC(61, 5.45, 213.3), new e.VSC(50, 3.95, 735.88), new e.VSC(46, 0.54, 110.21), new e.VSC(45, 1.9, 846.08), new e.VSC(37, 4.7, 543.92), new e.VSC(36, 6.11, 316.39), new e.VSC(32, 4.92, 1581.96)], V = [new e.VSC(8094, 1.4632, 529.691), new e.VSC(813, 3.1416, 0), new e.VSC(742, 0.957, 522.577), new e.VSC(399, 2.899, 536.805), new e.VSC(342, 1.447, 1059.382), new e.VSC(74, 0.41, 1052.27), new e.VSC(46, 3.48, 1066.5), new e.VSC(30, 1.93, 1589.07), new e.VSC(29, 0.99, 515.46), new e.VSC(23, 4.27, 7.11), new e.VSC(14, 2.92, 543.92), new e.VSC(12, 5.22, 632.78), new e.VSC(11, 4.88, 949.18), new e.VSC(6, 6.21, 1045.15)], y = [new e.VSC(252, 3.381, 529.691), new e.VSC(122, 2.733, 522.577), new e.VSC(49, 1.04, 536.8), new e.VSC(11, 2.31, 1052.27), new e.VSC(8, 2.77, 515.46), new e.VSC(7, 4.25, 1059.38), new e.VSC(6, 1.78, 1066.5), new e.VSC(4, 1.13, 543.92), new e.VSC(3, 3.14, 0)], C = [new e.VSC(15, 4.53, 522.58), new e.VSC(5, 4.47, 529.69), new e.VSC(4, 5.44, 536.8), new e.VSC(3, 0, 0), new e.VSC(2, 4.52, 515.46), new e.VSC(1, 4.2, 1052.27)], E = [new e.VSC(1, 0.09, 522.58)], v = [new e.VSC(520887429, 0, 0), new e.VSC(25209327, 3.4910864, 529.69096509), new e.VSC(610600, 3.841154, 1059.38193), new e.VSC(282029, 2.574199, 632.783739), new e.VSC(187647, 2.075904, 522.577418), new e.VSC(86793, 0.71001, 419.48464), new e.VSC(72063, 0.21466, 536.80451), new e.VSC(65517, 5.97996, 316.39187), new e.VSC(30135, 2.16132, 949.17561), new e.VSC(29135, 1.67759, 103.09277), new e.VSC(23947, 0.27458, 7.11355), new e.VSC(23453, 3.54023, 735.87651), new e.VSC(22284, 4.19363, 1589.0729), new e.VSC(13033, 2.96043, 1162.4747), new e.VSC(12749, 2.7155, 1052.26838), new e.VSC(9703, 1.9067, 206.1855), new e.VSC(9161, 4.4135, 213.2991), new e.VSC(7895, 2.4791, 426.5982), new e.VSC(7058, 2.1818, 1265.5675), new e.VSC(6138, 6.2642, 846.0828), new e.VSC(5477, 5.6573, 639.8973), new e.VSC(4170, 2.0161, 515.4639), new e.VSC(4137, 2.7222, 625.6702), new e.VSC(3503, 0.5653, 1066.4955), new e.VSC(2617, 2.0099, 1581.9593), new e.VSC(2500, 4.5518, 838.9693), new e.VSC(2128, 6.1275, 742.9901), new e.VSC(1912, 0.8562, 412.3711), new e.VSC(1611, 3.0887, 1368.6603), new e.VSC(1479, 2.6803, 1478.8666), new e.VSC(1231, 1.8904, 323.5054), new e.VSC(1217, 1.8017, 110.2063), new e.VSC(1015, 1.3867, 454.9094), new e.VSC(999, 2.872, 309.278), new e.VSC(961, 4.549, 2118.764), new e.VSC(886, 4.148, 533.623), new e.VSC(821, 1.593, 1898.351), new e.VSC(812, 5.941, 909.819), new e.VSC(777, 3.677, 728.763), new e.VSC(727, 3.988, 1155.361), new e.VSC(655, 2.791, 1685.052), new e.VSC(654, 3.382, 1692.166), new e.VSC(621, 4.823, 956.289), new e.VSC(615, 2.276, 942.062), new e.VSC(562, 0.081, 543.918), new e.VSC(542, 0.284, 525.759)], m = [new e.VSC(1271802, 2.6493751, 529.6909651), new e.VSC(61662, 3.00076, 1059.38193), new e.VSC(53444, 3.89718, 522.57742), new e.VSC(41390, 0, 0), new e.VSC(31185, 4.88277, 536.80451), new e.VSC(11847, 2.4133, 419.48464), new e.VSC(9166, 4.7598, 7.1135), new e.VSC(3404, 3.3469, 1589.0729), new e.VSC(3203, 5.2108, 735.8765), new e.VSC(3176, 2.793, 103.0928), new e.VSC(2806, 3.7422, 515.4639), new e.VSC(2677, 4.3305, 1052.2684), new e.VSC(2600, 3.6344, 206.1855), new e.VSC(2412, 1.4695, 426.5982), new e.VSC(2101, 3.9276, 639.8973), new e.VSC(1646, 4.4163, 1066.4955), new e.VSC(1641, 4.4163, 625.6702), new e.VSC(1050, 3.1611, 213.2991), new e.VSC(1025, 2.5543, 412.3711), new e.VSC(806, 2.678, 632.784), new e.VSC(741, 2.171, 1162.475), new e.VSC(677, 6.25, 838.969), new e.VSC(567, 4.577, 742.99), new e.VSC(485, 2.469, 949.176), new e.VSC(469, 4.71, 543.918), new e.VSC(445, 0.403, 323.505), new e.VSC(416, 5.368, 728.763), new e.VSC(402, 4.605, 309.278), new e.VSC(347, 4.681, 14.227), new e.VSC(338, 3.168, 956.289), new e.VSC(261, 5.343, 846.083), new e.VSC(247, 3.923, 942.062), new e.VSC(220, 4.842, 1368.66), new e.VSC(203, 5.6, 1155.361), new e.VSC(200, 4.439, 1045.155), new e.VSC(197, 3.706, 2118.764), new e.VSC(196, 3.759, 199.072), new e.VSC(184, 4.265, 95.979), new e.VSC(180, 4.402, 532.872), new e.VSC(170, 4.846, 526.51), new e.VSC(146, 6.13, 533.623), new e.VSC(133, 1.322, 110.206), new e.VSC(132, 4.512, 525.759)], L = [new e.VSC(79645, 1.35866, 529.69097), new e.VSC(8252, 5.7777, 522.5774), new e.VSC(7030, 3.2748, 536.8045), new e.VSC(5314, 1.8384, 1059.3819), new e.VSC(1861, 2.9768, 7.1135), new e.VSC(964, 5.48, 515.464), new e.VSC(836, 4.199, 419.485), new e.VSC(498, 3.142, 0), new e.VSC(427, 2.228, 639.897), new e.VSC(406, 3.783, 1066.495), new e.VSC(377, 2.242, 1589.073), new e.VSC(363, 5.368, 206.186), new e.VSC(342, 6.099, 1052.268), new e.VSC(339, 6.127, 625.67), new e.VSC(333, 3e-3, 426.598), new e.VSC(280, 4.262, 412.371), new e.VSC(257, 0.963, 632.784), new e.VSC(230, 0.705, 735.877), new e.VSC(201, 3.069, 543.918), new e.VSC(200, 4.429, 103.093), new e.VSC(139, 2.932, 14.227), new e.VSC(114, 0.787, 728.763), new e.VSC(95, 1.7, 838.97), new e.VSC(86, 5.14, 323.51), new e.VSC(83, 0.06, 309.28), new e.VSC(80, 2.98, 742.99), new e.VSC(75, 1.6, 956.29), new e.VSC(70, 1.51, 213.3), new e.VSC(67, 5.47, 199.07), new e.VSC(62, 6.1, 1045.15), new e.VSC(56, 0.96, 1162.47), new e.VSC(52, 5.58, 942.06), new e.VSC(50, 2.72, 532.87), new e.VSC(45, 5.52, 508.35), new e.VSC(44, 0.27, 526.51), new e.VSC(40, 5.95, 95.98)], A = [new e.VSC(3519, 6.058, 529.691), new e.VSC(1073, 1.6732, 536.8045), new e.VSC(916, 1.413, 522.577), new e.VSC(342, 0.523, 1059.382), new e.VSC(255, 1.196, 7.114), new e.VSC(222, 0.952, 515.464), new e.VSC(90, 3.14, 0), new e.VSC(69, 2.27, 1066.5), new e.VSC(58, 1.41, 543.92), new e.VSC(58, 0.53, 639.9), new e.VSC(51, 5.98, 412.37), new e.VSC(47, 1.58, 625.67), new e.VSC(43, 6.12, 419.48), new e.VSC(37, 1.18, 14.23), new e.VSC(34, 1.67, 1052.27), new e.VSC(34, 0.85, 206.19), new e.VSC(31, 1.04, 1589.07), new e.VSC(30, 4.63, 426.6), new e.VSC(21, 2.5, 728.76), new e.VSC(15, 0.89, 199.07), new e.VSC(14, 0.96, 508.35), new e.VSC(13, 1.5, 1045.15), new e.VSC(12, 2.61, 735.88), new e.VSC(12, 3.56, 323.51), new e.VSC(11, 1.79, 309.28), new e.VSC(11, 6.28, 956.29), new e.VSC(10, 6.26, 103.09), new e.VSC(9, 3.45, 838.97)], K = [new e.VSC(129, 0.084, 536.805), new e.VSC(113, 4.249, 529.691), new e.VSC(83, 3.3, 522.58), new e.VSC(38, 2.73, 515.46), new e.VSC(27, 5.69, 7.11), new e.VSC(18, 5.4, 1059.38), new e.VSC(13, 6.02, 543.92), new e.VSC(9, 0.77, 1066.5), new e.VSC(8, 5.68, 14.23), new e.VSC(7, 1.43, 412.37), new e.VSC(6, 5.12, 639.9), new e.VSC(5, 3.34, 625.67), new e.VSC(3, 3.4, 1052.27), new e.VSC(3, 4.16, 728.76), new e.VSC(3, 2.9, 426.6)], T = [new e.VSC(11, 4.75, 536.8), new e.VSC(4, 5.92, 522.58), new e.VSC(2, 5.57, 515.46), new e.VSC(2, 4.3, 543.92), new e.VSC(2, 3.69, 7.11), new e.VSC(2, 4.13, 1059.38), new e.VSC(2, 5.49, 1066.5)];
              function w() {
              }
              w.eclipticLongitude = function(R) {
                var O = (R - 2451545) / 365250, W = O * O, N = W * O, $ = N * O, S = $ * O, I = _.length, x = 0, P;
                for (P = 0; P < I; P++)
                  x += _[P].a * Math.cos(_[P].b + _[P].c * O);
                var d = r.length, U = 0;
                for (P = 0; P < d; P++)
                  U += r[P].a * Math.cos(r[P].b + r[P].c * O);
                var F = o.length, X = 0;
                for (P = 0; P < F; P++)
                  X += o[P].a * Math.cos(o[P].b + o[P].c * O);
                var Y = c.length, M = 0;
                for (P = 0; P < Y; P++)
                  M += c[P].a * Math.cos(c[P].b + c[P].c * O);
                var B = l.length, D = 0;
                for (P = 0; P < B; P++)
                  D += l[P].a * Math.cos(l[P].b + l[P].c * O);
                var k = g.length, G = 0;
                for (P = 0; P < k; P++)
                  G += g[P].a * Math.cos(g[P].b + g[P].c * O);
                var j = (x + U * O + X * W + M * N + D * $ + G * S) / 1e8;
                return j = n.CT.m360(n.CT.r2D(j)), j;
              }, w.eclipticLatitude = function(R) {
                var O = (R - 2451545) / 365250, W = O * O, N = W * O, $ = N * O, S = $ * O, I = a.length, x = 0, P;
                for (P = 0; P < I; P++)
                  x += a[P].a * Math.cos(a[P].b + a[P].c * O);
                var d = b.length, U = 0;
                for (P = 0; P < d; P++)
                  U += b[P].a * Math.cos(b[P].b + b[P].c * O);
                var F = V.length, X = 0;
                for (P = 0; P < F; P++)
                  X += V[P].a * Math.cos(V[P].b + V[P].c * O);
                var Y = y.length, M = 0;
                for (P = 0; P < Y; P++)
                  M += y[P].a * Math.cos(y[P].b + y[P].c * O);
                var B = C.length, D = 0;
                for (P = 0; P < B; P++)
                  D += C[P].a * Math.cos(C[P].b + C[P].c * O);
                var k = E.length, G = 0;
                for (P = 0; P < k; P++)
                  G += E[P].a * Math.cos(E[P].b + E[P].c * O);
                var j = (x + U * O + X * W + M * N + D * $ + G * S) / 1e8;
                return j = n.CT.r2D(j), j;
              }, w.radiusVector = function(R) {
                var O = (R - 2451545) / 365250, W = O * O, N = W * O, $ = N * O, S = $ * O, I = v.length, x = 0, P;
                for (P = 0; P < I; P++)
                  x += v[P].a * Math.cos(v[P].b + v[P].c * O);
                var d = m.length, U = 0;
                for (P = 0; P < d; P++)
                  U += m[P].a * Math.cos(m[P].b + m[P].c * O);
                var F = L.length, X = 0;
                for (P = 0; P < F; P++)
                  X += L[P].a * Math.cos(L[P].b + L[P].c * O);
                var Y = A.length, M = 0;
                for (P = 0; P < Y; P++)
                  M += A[P].a * Math.cos(A[P].b + A[P].c * O);
                var B = K.length, D = 0;
                for (P = 0; P < B; P++)
                  D += K[P].a * Math.cos(K[P].b + K[P].c * O);
                var k = T.length, G = 0;
                for (P = 0; P < k; P++)
                  G += T[P].a * Math.cos(T[P].b + T[P].c * O);
                return (x + U * O + X * W + M * N + D * $ + G * S) / 1e8;
              };
              var f = {};
              (0, t.registerType)("CAAJupiter", [w, f, null]);
            }
          ),
          /***/
          "./esm/astrocalc/kepler.js": (
            /*!*********************************!*\
              !*** ./esm/astrocalc/kepler.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAKepler: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function _() {
              }
              _.calculate = function(o, c) {
                return _.calculateIter(o, c, 53);
              }, _.calculateIter = function(o, c, l) {
                o = e.CT.d2R(o);
                var g = e.CT.PI(), a = 1;
                o < 0 && (a = -1), o = Math.abs(o) / (2 * g), o = (o - n.ss.truncate(o)) * 2 * g * a, o < 0 && (o += 2 * g), a = 1, o > g && (a = -1), o > g && (o = 2 * g - o);
                for (var b = g / 2, V = g / 4, y = 0; y < l; y++) {
                  var C = b - c * Math.sin(b);
                  o > C ? b += V : b -= V, V /= 2;
                }
                return e.CT.r2D(b) * a;
              };
              var r = {};
              (0, t.registerType)("CAAKepler", [_, r, null]);
            }
          ),
          /***/
          "./esm/astrocalc/mars.js": (
            /*!*******************************!*\
              !*** ./esm/astrocalc/mars.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAMars: () => (
                  /* binding */
                  K
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(620347712, 0, 0), new e.VSC(18656368, 5.050371, 3340.6124267), new e.VSC(1108217, 5.4009984, 6681.2248534), new e.VSC(91798, 5.75479, 10021.83728), new e.VSC(27745, 5.9705, 3.52312), new e.VSC(12316, 0.84956, 2810.92146), new e.VSC(10610, 2.93959, 2281.2305), new e.VSC(8927, 4.157, 0.0173), new e.VSC(8716, 6.1101, 13362.4497), new e.VSC(7775, 3.3397, 5621.8429), new e.VSC(6798, 0.3646, 398.149), new e.VSC(4161, 0.2281, 2942.4634), new e.VSC(3575, 1.6619, 2544.3144), new e.VSC(3075, 0.857, 191.4483), new e.VSC(2938, 6.0789, 0.0673), new e.VSC(2628, 0.6481, 3337.0893), new e.VSC(2580, 0.03, 3344.1355), new e.VSC(2389, 5.039, 796.298), new e.VSC(1799, 0.6563, 529.691), new e.VSC(1546, 2.9158, 1751.5395), new e.VSC(1528, 1.1498, 6151.5339), new e.VSC(1286, 3.068, 2146.1654), new e.VSC(1264, 3.6228, 5092.152), new e.VSC(1025, 3.6933, 8962.4553), new e.VSC(892, 0.183, 16703.062), new e.VSC(859, 2.401, 2914.014), new e.VSC(833, 4.495, 3340.63), new e.VSC(833, 2.464, 3340.595), new e.VSC(749, 3.822, 155.42), new e.VSC(724, 0.675, 3738.761), new e.VSC(713, 3.663, 1059.382), new e.VSC(655, 0.489, 3127.313), new e.VSC(636, 2.922, 8432.764), new e.VSC(553, 4.475, 1748.016), new e.VSC(550, 3.81, 0.98), new e.VSC(472, 3.625, 1194.447), new e.VSC(426, 0.554, 6283.076), new e.VSC(415, 0.497, 213.299), new e.VSC(312, 0.999, 6677.702), new e.VSC(307, 0.381, 6684.748), new e.VSC(302, 4.486, 3532.061), new e.VSC(299, 2.783, 6254.627), new e.VSC(293, 4.221, 20.775), new e.VSC(284, 5.769, 3149.164), new e.VSC(281, 5.882, 1349.867), new e.VSC(274, 0.542, 3340.545), new e.VSC(274, 0.134, 3340.68), new e.VSC(239, 5.372, 4136.91), new e.VSC(236, 5.755, 3333.499), new e.VSC(231, 1.282, 3870.303), new e.VSC(221, 3.505, 382.897), new e.VSC(204, 2.821, 1221.849), new e.VSC(193, 3.357, 3.59), new e.VSC(189, 1.491, 9492.146), new e.VSC(179, 1.006, 951.718), new e.VSC(174, 2.414, 553.569), new e.VSC(172, 0.439, 5486.778), new e.VSC(160, 3.949, 4562.461), new e.VSC(144, 1.419, 135.065), new e.VSC(140, 3.326, 2700.715), new e.VSC(138, 4.301, 7.114), new e.VSC(131, 4.045, 12303.068), new e.VSC(128, 2.208, 1592.596), new e.VSC(128, 1.807, 5088.629), new e.VSC(117, 3.128, 7903.073), new e.VSC(113, 3.701, 1589.073), new e.VSC(110, 1.052, 242.729), new e.VSC(105, 0.785, 8827.39), new e.VSC(100, 3.243, 11773.377)], r = [new e.VSC(334085627474, 0, 0), new e.VSC(1458227, 3.6042605, 3340.6124267), new e.VSC(164901, 3.926313, 6681.224853), new e.VSC(19963, 4.26594, 10021.83728), new e.VSC(3452, 4.7321, 3.5231), new e.VSC(2485, 4.6128, 13362.4497), new e.VSC(842, 4.459, 2281.23), new e.VSC(538, 5.016, 398.149), new e.VSC(521, 4.994, 3344.136), new e.VSC(433, 2.561, 191.448), new e.VSC(430, 5.316, 155.42), new e.VSC(382, 3.539, 796.298), new e.VSC(314, 4.963, 16703.062), new e.VSC(283, 3.16, 2544.314), new e.VSC(206, 4.569, 2146.165), new e.VSC(169, 1.329, 3337.089), new e.VSC(158, 4.185, 1751.54), new e.VSC(134, 2.233, 0.98), new e.VSC(134, 5.974, 1748.016), new e.VSC(118, 6.024, 6151.534), new e.VSC(117, 2.213, 1059.382), new e.VSC(114, 2.129, 1194.447), new e.VSC(114, 5.428, 3738.761), new e.VSC(91, 1.1, 1349.87), new e.VSC(85, 3.91, 553.57), new e.VSC(83, 5.3, 6684.75), new e.VSC(81, 4.43, 529.69), new e.VSC(80, 2.25, 8962.46), new e.VSC(73, 2.5, 951.72), new e.VSC(73, 5.84, 242.73), new e.VSC(71, 3.86, 2914.01), new e.VSC(68, 5.02, 382.9), new e.VSC(65, 1.02, 3340.6), new e.VSC(65, 3.05, 3340.63), new e.VSC(62, 4.15, 3149.16), new e.VSC(57, 3.89, 4136.91), new e.VSC(48, 4.87, 213.3), new e.VSC(48, 1.18, 3333.5), new e.VSC(47, 1.31, 3185.19), new e.VSC(41, 0.71, 1592.6), new e.VSC(40, 2.73, 7.11), new e.VSC(40, 5.32, 20043.67), new e.VSC(33, 5.41, 6283.08), new e.VSC(28, 0.05, 9492.15), new e.VSC(27, 3.89, 1221.85), new e.VSC(27, 5.11, 2700.72)], o = [new e.VSC(58016, 2.04979, 3340.61243), new e.VSC(54188, 0, 0), new e.VSC(13908, 2.45742, 6681.22485), new e.VSC(2465, 2.8, 10021.8373), new e.VSC(398, 3.141, 13362.45), new e.VSC(222, 3.194, 3.523), new e.VSC(121, 0.543, 155.42), new e.VSC(62, 3.49, 16703.06), new e.VSC(54, 3.54, 3344.14), new e.VSC(34, 6, 2281.23), new e.VSC(32, 4.14, 191.45), new e.VSC(30, 2, 796.3), new e.VSC(23, 4.33, 242.73), new e.VSC(22, 3.45, 398.15), new e.VSC(20, 5.42, 553.57), new e.VSC(16, 0.66, 0.98), new e.VSC(16, 6.11, 2146.17), new e.VSC(16, 1.22, 1748.02), new e.VSC(15, 6.1, 3185.19), new e.VSC(14, 4.02, 951.72), new e.VSC(14, 2.62, 1349.87), new e.VSC(13, 0.6, 1194.45), new e.VSC(12, 3.86, 6684.75), new e.VSC(11, 4.72, 2544.31), new e.VSC(10, 0.25, 382.9), new e.VSC(9, 0.68, 1059.38), new e.VSC(9, 3.83, 20043.67), new e.VSC(9, 3.88, 3738.76), new e.VSC(8, 5.46, 1751.54), new e.VSC(7, 2.58, 3149.16), new e.VSC(7, 2.38, 4136.91), new e.VSC(6, 5.48, 1592.6), new e.VSC(6, 2.34, 3097.88)], c = [new e.VSC(1482, 0.4443, 3340.6124), new e.VSC(662, 0.885, 6681.225), new e.VSC(188, 1.288, 10021.837), new e.VSC(41, 1.65, 13362.45), new e.VSC(26, 0, 0), new e.VSC(23, 2.05, 155.42), new e.VSC(10, 1.58, 3.52), new e.VSC(8, 2, 16703.06), new e.VSC(5, 2.82, 242.73), new e.VSC(4, 2.02, 3344.14), new e.VSC(3, 4.59, 3185.19), new e.VSC(3, 0.65, 553.57)], l = [new e.VSC(114, 3.1416, 0), new e.VSC(29, 5.64, 6681.22), new e.VSC(24, 5.14, 3340.61), new e.VSC(11, 6.03, 10021.84), new e.VSC(3, 0.13, 13362.45), new e.VSC(3, 3.56, 155.42), new e.VSC(1, 0.49, 16703.06), new e.VSC(1, 1.32, 242.73)], g = [new e.VSC(1, 3.14, 0), new e.VSC(1, 4.04, 6681.22)], a = [new e.VSC(3197135, 3.7683204, 3340.6124267), new e.VSC(298033, 4.10617, 6681.224853), new e.VSC(289105, 0, 0), new e.VSC(31366, 4.44651, 10021.83728), new e.VSC(3484, 4.7881, 13362.4497), new e.VSC(443, 5.026, 3344.136), new e.VSC(443, 5.652, 3337.089), new e.VSC(399, 5.131, 16703.062), new e.VSC(293, 3.793, 2281.23), new e.VSC(182, 6.136, 6151.534), new e.VSC(163, 4.264, 529.691), new e.VSC(160, 2.232, 1059.382), new e.VSC(149, 2.165, 5621.843), new e.VSC(143, 1.182, 3340.595), new e.VSC(143, 3.213, 3340.63), new e.VSC(139, 2.418, 8962.455)], b = [new e.VSC(350069, 5.368478, 3340.612427), new e.VSC(14116, 3.14159, 0), new e.VSC(9671, 5.4788, 6681.2249), new e.VSC(1472, 3.2021, 10021.8373), new e.VSC(426, 3.408, 13362.45), new e.VSC(102, 0.776, 3337.089), new e.VSC(79, 3.72, 16703.06), new e.VSC(33, 3.46, 5621.84), new e.VSC(26, 2.48, 2281.23)], V = [new e.VSC(16727, 0.60221, 3340.61243), new e.VSC(4987, 4.1416, 0), new e.VSC(302, 3.559, 6681.225), new e.VSC(26, 1.9, 13362.45), new e.VSC(21, 0.92, 10021.84), new e.VSC(12, 2.24, 3337.09), new e.VSC(8, 2.25, 16703.06)], y = [new e.VSC(607, 1.981, 3340.612), new e.VSC(43, 0, 0), new e.VSC(14, 1.8, 6681.22), new e.VSC(3, 3.45, 10021.84)], C = [new e.VSC(13, 0, 0), new e.VSC(11, 3.46, 3340.61), new e.VSC(1, 0.5, 6681.22)], E = [new e.VSC(153033488, 0, 0), new e.VSC(14184953, 3.47971284, 3340.6124267), new e.VSC(660776, 3.817834, 6681.224853), new e.VSC(46179, 4.15595, 10021.83728), new e.VSC(8110, 5.5596, 2810.9215), new e.VSC(7485, 1.7724, 5621.8429), new e.VSC(5523, 1.3644, 2281.2305), new e.VSC(3825, 4.4941, 13362.4497), new e.VSC(2484, 4.9255, 2942.4634), new e.VSC(2307, 0.0908, 2544.3144), new e.VSC(1999, 5.3606, 3337.0893), new e.VSC(1960, 4.7425, 3344.1355), new e.VSC(1167, 2.1126, 5092.152), new e.VSC(1103, 5.0091, 398.149), new e.VSC(992, 5.839, 6151.534), new e.VSC(899, 4.408, 529.691), new e.VSC(807, 2.102, 1059.382), new e.VSC(798, 3.448, 796.298), new e.VSC(741, 1.499, 2146.165), new e.VSC(726, 1.245, 8432.764), new e.VSC(692, 2.134, 8962.455), new e.VSC(633, 0.894, 3340.595), new e.VSC(633, 2.924, 3340.63), new e.VSC(630, 1.287, 1751.54), new e.VSC(574, 0.829, 2914.014), new e.VSC(526, 5.383, 3738.761), new e.VSC(473, 5.199, 3127.313), new e.VSC(348, 4.832, 16703.062), new e.VSC(284, 2.907, 3532.061), new e.VSC(280, 5.257, 6283.076), new e.VSC(276, 1.218, 6254.627), new e.VSC(275, 2.908, 1748.016), new e.VSC(270, 3.764, 5884.927), new e.VSC(239, 2.037, 1194.447), new e.VSC(234, 5.105, 5486.778), new e.VSC(228, 3.255, 6872.673), new e.VSC(223, 4.199, 3149.164), new e.VSC(219, 5.583, 191.448), new e.VSC(208, 5.255, 3340.545), new e.VSC(208, 4.846, 3340.68), new e.VSC(186, 5.699, 6677.702), new e.VSC(183, 5.081, 6684.748), new e.VSC(179, 4.184, 3333.499), new e.VSC(176, 5.953, 3870.303), new e.VSC(164, 3.799, 4136.91)], v = [new e.VSC(1107433, 2.0325052, 3340.6124267), new e.VSC(103176, 2.370718, 6681.224853), new e.VSC(12877, 0, 0), new e.VSC(10816, 2.70888, 10021.83728), new e.VSC(1195, 3.047, 13362.4497), new e.VSC(439, 2.888, 2281.23), new e.VSC(396, 3.423, 3344.136), new e.VSC(183, 1.584, 2544.314), new e.VSC(136, 3.385, 16703.062), new e.VSC(128, 6.043, 3337.089), new e.VSC(128, 0.63, 1059.382), new e.VSC(127, 1.954, 796.298), new e.VSC(118, 2.998, 2146.165), new e.VSC(88, 3.42, 398.15), new e.VSC(83, 3.86, 3738.76), new e.VSC(76, 4.45, 6151.53), new e.VSC(72, 2.76, 529.69), new e.VSC(67, 2.55, 1751.54), new e.VSC(66, 4.41, 1748.02), new e.VSC(58, 0.54, 1194.45), new e.VSC(54, 0.68, 8962.46), new e.VSC(51, 3.73, 6684.75), new e.VSC(49, 5.73, 3340.6), new e.VSC(49, 1.48, 3340.63), new e.VSC(48, 2.58, 3149.16), new e.VSC(48, 2.29, 2914.01), new e.VSC(39, 2.32, 4136.91)], m = [new e.VSC(44242, 0.47931, 3340.61243), new e.VSC(8138, 0.87, 6681.2249), new e.VSC(1275, 1.2259, 10021.8373), new e.VSC(187, 1.573, 13362.45), new e.VSC(52, 3.14, 0), new e.VSC(41, 1.97, 3344.14), new e.VSC(27, 1.92, 16703.06), new e.VSC(18, 4.43, 2281.23), new e.VSC(12, 4.53, 3185.19), new e.VSC(10, 5.39, 1059.38), new e.VSC(10, 0.42, 796.3)], L = [new e.VSC(1113, 5.1499, 3340.6124), new e.VSC(424, 5.613, 6681.225), new e.VSC(100, 5.997, 10021.837), new e.VSC(20, 0.08, 13362.45), new e.VSC(5, 3.14, 0), new e.VSC(3, 0.43, 16703.06)], A = [new e.VSC(20, 3.58, 3340.61), new e.VSC(16, 4.05, 6681.22), new e.VSC(6, 4.46, 10021.84), new e.VSC(2, 4.84, 13362.45)];
              function K() {
              }
              K.eclipticLongitude = function(w) {
                var f = (w - 2451545) / 365250, R = f * f, O = R * f, W = O * f, N = W * f, $ = _.length, S = 0, I;
                for (I = 0; I < $; I++)
                  S += _[I].a * Math.cos(_[I].b + _[I].c * f);
                var x = r.length, P = 0;
                for (I = 0; I < x; I++)
                  P += r[I].a * Math.cos(r[I].b + r[I].c * f);
                var d = o.length, U = 0;
                for (I = 0; I < d; I++)
                  U += o[I].a * Math.cos(o[I].b + o[I].c * f);
                var F = c.length, X = 0;
                for (I = 0; I < F; I++)
                  X += c[I].a * Math.cos(c[I].b + c[I].c * f);
                var Y = l.length, M = 0;
                for (I = 0; I < Y; I++)
                  M += l[I].a * Math.cos(l[I].b + l[I].c * f);
                var B = g.length, D = 0;
                for (I = 0; I < B; I++)
                  D += g[I].a * Math.cos(g[I].b + g[I].c * f);
                var k = (S + P * f + U * R + X * O + M * W + D * N) / 1e8;
                return k = n.CT.m360(n.CT.r2D(k)), k;
              }, K.eclipticLatitude = function(w) {
                var f = (w - 2451545) / 365250, R = f * f, O = R * f, W = O * f, N = a.length, $ = 0, S;
                for (S = 0; S < N; S++)
                  $ += a[S].a * Math.cos(a[S].b + a[S].c * f);
                var I = b.length, x = 0;
                for (S = 0; S < I; S++)
                  x += b[S].a * Math.cos(b[S].b + b[S].c * f);
                var P = V.length, d = 0;
                for (S = 0; S < P; S++)
                  d += V[S].a * Math.cos(V[S].b + V[S].c * f);
                var U = y.length, F = 0;
                for (S = 0; S < U; S++)
                  F += y[S].a * Math.cos(y[S].b + y[S].c * f);
                var X = C.length, Y = 0;
                for (S = 0; S < X; S++)
                  Y += C[S].a * Math.cos(C[S].b + C[S].c * f);
                var M = ($ + x * f + d * R + F * O + Y * W) / 1e8;
                return M = n.CT.r2D(M), M;
              }, K.radiusVector = function(w) {
                var f = (w - 2451545) / 365250, R = f * f, O = R * f, W = O * f, N = E.length, $ = 0, S;
                for (S = 0; S < N; S++)
                  $ += E[S].a * Math.cos(E[S].b + E[S].c * f);
                var I = v.length, x = 0;
                for (S = 0; S < I; S++)
                  x += v[S].a * Math.cos(v[S].b + v[S].c * f);
                var P = m.length, d = 0;
                for (S = 0; S < P; S++)
                  d += m[S].a * Math.cos(m[S].b + m[S].c * f);
                var U = L.length, F = 0;
                for (S = 0; S < U; S++)
                  F += L[S].a * Math.cos(L[S].b + L[S].c * f);
                var X = A.length, Y = 0;
                for (S = 0; S < X; S++)
                  Y += A[S].a * Math.cos(A[S].b + A[S].c * f);
                return ($ + x * f + d * R + F * O + Y * W) / 1e8;
              };
              var T = {};
              (0, t.registerType)("CAAMars", [K, T, null]);
            }
          ),
          /***/
          "./esm/astrocalc/mercury.js": (
            /*!**********************************!*\
              !*** ./esm/astrocalc/mercury.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAMercury: () => (
                  /* binding */
                  A
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(440250710, 0, 0), new e.VSC(40989415, 1.48302034, 26087.90314157), new e.VSC(5046294, 4.47785449, 52175.8062831), new e.VSC(855347, 1.165203, 78263.709425), new e.VSC(165590, 4.119692, 104351.612566), new e.VSC(34562, 0.77931, 130439.51571), new e.VSC(7583, 3.7135, 156527.4188), new e.VSC(3560, 1.512, 1109.3786), new e.VSC(1803, 4.1033, 5661.332), new e.VSC(1726, 0.3583, 182615.322), new e.VSC(1590, 2.9951, 25028.5212), new e.VSC(1365, 4.5992, 27197.2817), new e.VSC(1017, 0.8803, 31749.2352), new e.VSC(714, 1.541, 24978.525), new e.VSC(644, 5.303, 21535.95), new e.VSC(451, 6.05, 51116.424), new e.VSC(404, 3.282, 208703.225), new e.VSC(352, 5.242, 20426.571), new e.VSC(345, 2.792, 15874.618), new e.VSC(343, 5.765, 955.6), new e.VSC(339, 5.863, 25558.212), new e.VSC(325, 1.337, 53285.185), new e.VSC(273, 2.495, 529.691), new e.VSC(264, 3.917, 57837.138), new e.VSC(260, 0.987, 4551.953), new e.VSC(239, 0.113, 1059.382), new e.VSC(235, 0.267, 11322.664), new e.VSC(217, 0.66, 13521.751), new e.VSC(209, 2.092, 47623.853), new e.VSC(183, 2.629, 27043.503), new e.VSC(182, 2.434, 25661.305), new e.VSC(176, 4.536, 51066.428), new e.VSC(173, 2.452, 24498.83), new e.VSC(142, 3.36, 37410.567), new e.VSC(138, 0.291, 10213.286), new e.VSC(125, 3.721, 39609.655), new e.VSC(118, 2.781, 77204.327), new e.VSC(106, 4.206, 19804.827)], r = [new e.VSC(2608814706223, 0, 0), new e.VSC(1126008, 6.2170397, 26087.9031416), new e.VSC(303471, 3.055655, 52175.806283), new e.VSC(80538, 6.10455, 78263.70942), new e.VSC(21245, 2.83532, 104351.61257), new e.VSC(5592, 5.8268, 130439.5157), new e.VSC(1472, 2.5185, 156527.4188), new e.VSC(388, 5.48, 182615.322), new e.VSC(352, 3.052, 1109.379), new e.VSC(103, 2.149, 208703.225), new e.VSC(94, 6.12, 27197.28), new e.VSC(91, 0, 24978.52), new e.VSC(52, 5.62, 5661.33), new e.VSC(44, 4.57, 25028.52), new e.VSC(28, 3.04, 51066.43), new e.VSC(27, 5.09, 234791.13)], o = [new e.VSC(53050, 0, 0), new e.VSC(16904, 4.69072, 26087.90314), new e.VSC(7397, 1.3474, 52175.8063), new e.VSC(3018, 4.4564, 78263.7094), new e.VSC(1107, 1.264, 104351.6126), new e.VSC(378, 4.32, 130439.516), new e.VSC(123, 1.069, 156527.419), new e.VSC(39, 4.08, 182615.32), new e.VSC(15, 4.63, 1109.38), new e.VSC(12, 0.79, 208703.23)], c = [new e.VSC(188, 0.035, 52175.806), new e.VSC(142, 3.125, 26087.903), new e.VSC(97, 3, 78263.71), new e.VSC(44, 6.02, 104351.61), new e.VSC(35, 0, 0), new e.VSC(18, 2.78, 130439.52), new e.VSC(7, 5.82, 156527.42), new e.VSC(3, 2.57, 182615.32)], l = [new e.VSC(114, 3.1416, 0), new e.VSC(2, 2.03, 26087.9), new e.VSC(2, 1.42, 78263.71), new e.VSC(2, 4.5, 52175.81), new e.VSC(1, 4.5, 104351.61), new e.VSC(1, 1.27, 130439.52)], g = [new e.VSC(1, 3.14, 0)], a = [new e.VSC(11737529, 1.98357499, 26087.90314157), new e.VSC(2388077, 5.0373896, 52175.8062831), new e.VSC(1222840, 3.1415927, 0), new e.VSC(543252, 1.796444, 78263.709425), new e.VSC(129779, 4.832325, 104351.612566), new e.VSC(31867, 1.58088, 130439.51571), new e.VSC(7963, 4.6097, 156527.4188), new e.VSC(2014, 1.3532, 182615.322), new e.VSC(514, 4.378, 208703.325), new e.VSC(209, 2.02, 24978.525), new e.VSC(208, 4.918, 27197.282), new e.VSC(132, 1.119, 234791.128), new e.VSC(121, 1.813, 53285.185), new e.VSC(100, 5.657, 20426.571)], b = [new e.VSC(429151, 3.501698, 26087.903142), new e.VSC(146234, 3.141593, 0), new e.VSC(22675, 0.01515, 52175.80628), new e.VSC(10895, 0.4854, 78263.70942), new e.VSC(6353, 3.4294, 104351.6126), new e.VSC(2496, 0.1605, 130439.5157), new e.VSC(860, 3.185, 156527.419), new e.VSC(278, 6.21, 182615.322), new e.VSC(86, 2.95, 208703.23), new e.VSC(28, 0.29, 27197.28), new e.VSC(26, 5.98, 234791.13)], V = [new e.VSC(11831, 4.79066, 26087.90314), new e.VSC(1914, 0, 0), new e.VSC(1045, 1.2122, 52175.8063), new e.VSC(266, 4.434, 78263.709), new e.VSC(170, 1.623, 104351.613), new e.VSC(96, 4.8, 130439.52), new e.VSC(45, 1.61, 156527.42), new e.VSC(18, 4.67, 182615.32), new e.VSC(7, 1.43, 208703.23)], y = [new e.VSC(235, 0.354, 26087.903), new e.VSC(161, 0, 0), new e.VSC(19, 4.36, 52175.81), new e.VSC(6, 2.51, 78263.71), new e.VSC(5, 6.14, 104351.61), new e.VSC(3, 3.12, 130439.52), new e.VSC(2, 6.27, 156527.42)], C = [new e.VSC(4, 1.75, 26087.9), new e.VSC(1, 3.14, 0)], E = [new e.VSC(39528272, 0, 0), new e.VSC(7834132, 6.1923372, 26087.9031416), new e.VSC(795526, 2.959897, 52175.806283), new e.VSC(121282, 6.010642, 78263.709425), new e.VSC(21922, 2.7782, 104351.61257), new e.VSC(4354, 5.8289, 130439.5157), new e.VSC(918, 2.597, 156527.419), new e.VSC(290, 1.424, 25028.521), new e.VSC(260, 3.028, 27197.282), new e.VSC(202, 5.647, 182615.322), new e.VSC(201, 5.592, 31749.235), new e.VSC(142, 6.253, 24978.525), new e.VSC(100, 3.734, 21535.95)], v = [new e.VSC(217348, 4.656172, 26087.903142), new e.VSC(44142, 1.42386, 52175.80628), new e.VSC(10094, 4.47466, 78263.70942), new e.VSC(2433, 1.2423, 104351.6126), new e.VSC(1624, 0, 0), new e.VSC(604, 4.293, 130439.516), new e.VSC(153, 1.061, 156527.419), new e.VSC(39, 4.11, 182615.32)], m = [new e.VSC(3118, 3.0823, 26087.9031), new e.VSC(1245, 6.1518, 52175.8063), new e.VSC(425, 2.926, 78263.709), new e.VSC(136, 5.98, 104351.613), new e.VSC(42, 2.75, 130439.52), new e.VSC(22, 3.14, 0), new e.VSC(13, 5.8, 156527.42)], L = [new e.VSC(33, 1.68, 26087.9), new e.VSC(24, 4.63, 52175.81), new e.VSC(12, 1.39, 78263.71), new e.VSC(5, 4.44, 104351.61), new e.VSC(2, 1.21, 130439.52)];
              function A() {
              }
              A.eclipticLongitude = function(T) {
                var w = (T - 2451545) / 365250, f = w * w, R = f * w, O = R * w, W = O * w, N = _.length, $ = 0, S;
                for (S = 0; S < N; S++)
                  $ += _[S].a * Math.cos(_[S].b + _[S].c * w);
                var I = r.length, x = 0;
                for (S = 0; S < I; S++)
                  x += r[S].a * Math.cos(r[S].b + r[S].c * w);
                var P = o.length, d = 0;
                for (S = 0; S < P; S++)
                  d += o[S].a * Math.cos(o[S].b + o[S].c * w);
                var U = c.length, F = 0;
                for (S = 0; S < U; S++)
                  F += c[S].a * Math.cos(c[S].b + c[S].c * w);
                var X = l.length, Y = 0;
                for (S = 0; S < X; S++)
                  Y += l[S].a * Math.cos(l[S].b + l[S].c * w);
                var M = g.length, B = 0;
                for (S = 0; S < M; S++)
                  B += g[S].a * Math.cos(g[S].b + g[S].c * w);
                var D = ($ + x * w + d * f + F * R + Y * O + B * W) / 1e8;
                return D = n.CT.m360(n.CT.r2D(D)), D;
              }, A.eclipticLatitude = function(T) {
                var w = (T - 2451545) / 365250, f = w * w, R = f * w, O = R * w, W = a.length, N = 0, $;
                for ($ = 0; $ < W; $++)
                  N += a[$].a * Math.cos(a[$].b + a[$].c * w);
                var S = b.length, I = 0;
                for ($ = 0; $ < S; $++)
                  I += b[$].a * Math.cos(b[$].b + b[$].c * w);
                var x = V.length, P = 0;
                for ($ = 0; $ < x; $++)
                  P += V[$].a * Math.cos(V[$].b + V[$].c * w);
                var d = y.length, U = 0;
                for ($ = 0; $ < d; $++)
                  U += y[$].a * Math.cos(y[$].b + y[$].c * w);
                var F = C.length, X = 0;
                for ($ = 0; $ < F; $++)
                  X += C[$].a * Math.cos(C[$].b + C[$].c * w);
                var Y = (N + I * w + P * f + U * R + X * O) / 1e8;
                return Y = n.CT.r2D(Y), Y;
              }, A.radiusVector = function(T) {
                var w = (T - 2451545) / 365250, f = w * w, R = f * w, O = E.length, W = 0, N;
                for (N = 0; N < O; N++)
                  W += E[N].a * Math.cos(E[N].b + E[N].c * w);
                var $ = v.length, S = 0;
                for (N = 0; N < $; N++)
                  S += v[N].a * Math.cos(v[N].b + v[N].c * w);
                var I = m.length, x = 0;
                for (N = 0; N < I; N++)
                  x += m[N].a * Math.cos(m[N].b + m[N].c * w);
                var P = L.length, d = 0;
                for (N = 0; N < P; N++)
                  d += L[N].a * Math.cos(L[N].b + L[N].c * w);
                return (W + S * w + x * f + d * R) / 1e8;
              };
              var K = {};
              (0, t.registerType)("CAAMercury", [A, K, null]);
            }
          ),
          /***/
          "./esm/astrocalc/moon.js": (
            /*!*******************************!*\
              !*** ./esm/astrocalc/moon.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAMoon: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                MoonCoefficient1: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                MoonCoefficient2: () => (
                  /* binding */
                  c
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), _ = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              );
              function r(E, v, m, L) {
                this.d = 0, this.m = 0, this.mdash = 0, this.f = 0, this.d = E, this.m = v, this.mdash = m, this.f = L;
              }
              var o = {};
              (0, t.registerType)("MoonCoefficient1", [r, o, null]);
              function c(E, v) {
                this.a = 0, this.b = 0, this.a = E, this.b = v;
              }
              var l = {};
              (0, t.registerType)("MoonCoefficient2", [c, l, null]);
              const g = [new r(0, 0, 1, 0), new r(2, 0, -1, 0), new r(2, 0, 0, 0), new r(0, 0, 2, 0), new r(0, 1, 0, 0), new r(0, 0, 0, 2), new r(2, 0, -2, 0), new r(2, -1, -1, 0), new r(2, 0, 1, 0), new r(2, -1, 0, 0), new r(0, 1, -1, 0), new r(1, 0, 0, 0), new r(0, 1, 1, 0), new r(2, 0, 0, -2), new r(0, 0, 1, 2), new r(0, 0, 1, -2), new r(4, 0, -1, 0), new r(0, 0, 3, 0), new r(4, 0, -2, 0), new r(2, 1, -1, 0), new r(2, 1, 0, 0), new r(1, 0, -1, 0), new r(1, 1, 0, 0), new r(2, -1, 1, 0), new r(2, 0, 2, 0), new r(4, 0, 0, 0), new r(2, 0, -3, 0), new r(0, 1, -2, 0), new r(2, 0, -1, 2), new r(2, -1, -2, 0), new r(1, 0, 1, 0), new r(2, -2, 0, 0), new r(0, 1, 2, 0), new r(0, 2, 0, 0), new r(2, -2, -1, 0), new r(2, 0, 1, -2), new r(2, 0, 0, 2), new r(4, -1, -1, 0), new r(0, 0, 2, 2), new r(3, 0, -1, 0), new r(2, 1, 1, 0), new r(4, -1, -2, 0), new r(0, 2, -1, 0), new r(2, 2, -1, 0), new r(2, 1, -2, 0), new r(2, -1, 0, -2), new r(4, 0, 1, 0), new r(0, 0, 4, 0), new r(4, -1, 0, 0), new r(1, 0, -2, 0), new r(2, 1, 0, -2), new r(0, 0, 2, -2), new r(1, 1, 1, 0), new r(3, 0, -2, 0), new r(4, 0, -3, 0), new r(2, -1, 2, 0), new r(0, 2, 1, 0), new r(1, 1, -1, 0), new r(2, 0, 3, 0), new r(2, 0, -1, -2)], a = [new c(6288774, -20905355), new c(1274027, -3699111), new c(658314, -2955968), new c(213618, -569925), new c(-185116, 48888), new c(-114332, -3149), new c(58793, 246158), new c(57066, -152138), new c(53322, -170733), new c(45758, -204586), new c(-40923, -129620), new c(-34720, 108743), new c(-30383, 104755), new c(15327, 10321), new c(-12528, 0), new c(10980, 79661), new c(10675, -34782), new c(10034, -23210), new c(8548, -21636), new c(-7888, 24208), new c(-6766, 30824), new c(-5163, -8379), new c(4987, -16675), new c(4036, -12831), new c(3994, -10445), new c(3861, -11650), new c(3665, 14403), new c(-2689, -7003), new c(-2602, 0), new c(2390, 10056), new c(-2348, 6322), new c(2236, -9884), new c(-2120, 5751), new c(-2069, 0), new c(2048, -4950), new c(-1773, 4130), new c(-1595, 0), new c(1215, -3958), new c(-1110, 0), new c(-892, 3258), new c(-810, 2616), new c(759, -1897), new c(-713, -2117), new c(-700, 2354), new c(691, 0), new c(596, 0), new c(549, -1423), new c(537, -1117), new c(520, -1571), new c(-487, -1739), new c(-399, 0), new c(-381, -4421), new c(351, 0), new c(-340, 0), new c(330, 0), new c(327, 0), new c(-323, 1165), new c(299, 0), new c(294, 0), new c(0, 8752)], b = [new r(0, 0, 0, 1), new r(0, 0, 1, 1), new r(0, 0, 1, -1), new r(2, 0, 0, -1), new r(2, 0, -1, 1), new r(2, 0, -1, -1), new r(2, 0, 0, 1), new r(0, 0, 2, 1), new r(2, 0, 1, -1), new r(0, 0, 2, -1), new r(2, -1, 0, -1), new r(2, 0, -2, -1), new r(2, 0, 1, 1), new r(2, 1, 0, -1), new r(2, -1, -1, 1), new r(2, -1, 0, 1), new r(2, -1, -1, -1), new r(0, 1, -1, -1), new r(4, 0, -1, -1), new r(0, 1, 0, 1), new r(0, 0, 0, 3), new r(0, 1, -1, 1), new r(1, 0, 0, 1), new r(0, 1, 1, 1), new r(0, 1, 1, -1), new r(0, 1, 0, -1), new r(1, 0, 0, -1), new r(0, 0, 3, 1), new r(4, 0, 0, -1), new r(4, 0, -1, 1), new r(0, 0, 1, -3), new r(4, 0, -2, 1), new r(2, 0, 0, -3), new r(2, 0, 2, -1), new r(2, -1, 1, -1), new r(2, 0, -2, 1), new r(0, 0, 3, -1), new r(2, 0, 2, 1), new r(2, 0, -3, -1), new r(2, 1, -1, 1), new r(2, 1, 0, 1), new r(4, 0, 0, 1), new r(2, -1, 1, 1), new r(2, -2, 0, -1), new r(0, 0, 1, 3), new r(2, 1, 1, -1), new r(1, 1, 0, -1), new r(1, 1, 0, 1), new r(0, 1, -2, -1), new r(2, 1, -1, -1), new r(1, 0, 1, 1), new r(2, -1, -2, -1), new r(0, 1, 2, 1), new r(4, 0, -2, -1), new r(4, -1, -1, -1), new r(1, 0, 1, -1), new r(4, 0, 1, -1), new r(1, 0, -1, -1), new r(4, -1, 0, -1), new r(2, -2, 0, 1)], V = [5128122, 280602, 277693, 173237, 55413, 46271, 32573, 17198, 9266, 8822, 8216, 4324, 4200, -3359, 2463, 2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833, 777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107];
              function y() {
              }
              y.meanLongitude = function(E) {
                var v = (E - 2451545) / 36525, m = v * v, L = m * v, A = L * v;
                return n.CT.m360(218.3164477 + 481267.88123421 * v - 15786e-7 * m + L / 538841 - A / 65194e3);
              }, y.meanElongation = function(E) {
                var v = (E - 2451545) / 36525, m = v * v, L = m * v, A = L * v;
                return n.CT.m360(297.8501921 + 445267.1114034 * v - 18819e-7 * m + L / 545868 - A / 113065e3);
              }, y.meanAnomaly = function(E) {
                var v = (E - 2451545) / 36525, m = v * v, L = m * v, A = L * v;
                return n.CT.m360(134.9633964 + 477198.8675055 * v + 87414e-7 * m + L / 69699 - A / 14712e3);
              }, y.argumentOfLatitude = function(E) {
                var v = (E - 2451545) / 36525, m = v * v, L = m * v, A = L * v;
                return n.CT.m360(93.272095 + 483202.0175233 * v - 36539e-7 * m - L / 3526e3 + A / 86331e4);
              }, y.meanLongitudeAscendingNode = function(E) {
                var v = (E - 2451545) / 36525, m = v * v, L = m * v, A = L * v;
                return n.CT.m360(125.0445479 - 1934.1362891 * v + 20754e-7 * m + L / 467441 - A / 60616e3);
              }, y.meanLongitudePerigee = function(E) {
                var v = (E - 2451545) / 36525, m = v * v, L = m * v, A = L * v;
                return n.CT.m360(83.3532465 + 4069.0137287 * v - 0.01032 * m - L / 80053 + A / 18999e3);
              }, y.trueLongitudeAscendingNode = function(E) {
                var v = y.meanLongitudeAscendingNode(E), m = y.meanElongation(E);
                m = n.CT.d2R(m);
                var L = e.CAAEarth.sunMeanAnomaly(E);
                L = n.CT.d2R(L);
                var A = y.meanAnomaly(E);
                A = n.CT.d2R(A);
                var K = y.argumentOfLatitude(E);
                return K = n.CT.d2R(K), v -= 1.4979 * Math.sin(2 * (m - K)), v -= 0.15 * Math.sin(L), v -= 0.1226 * Math.sin(2 * m), v += 0.1176 * Math.sin(2 * K), v -= 0.0801 * Math.sin(2 * (A - K)), n.CT.m360(v);
              }, y.eclipticLongitude = function(E) {
                var v = y.meanLongitude(E), m = v;
                v = n.CT.d2R(v);
                var L = y.meanElongation(E);
                L = n.CT.d2R(L);
                var A = e.CAAEarth.sunMeanAnomaly(E);
                A = n.CT.d2R(A);
                var K = y.meanAnomaly(E);
                K = n.CT.d2R(K);
                var T = y.argumentOfLatitude(E);
                T = n.CT.d2R(T);
                var w = e.CAAEarth.eccentricity(E), f = (E - 2451545) / 36525, R = n.CT.m360(119.75 + 131.849 * f);
                R = n.CT.d2R(R);
                var O = n.CT.m360(53.09 + 479264.29 * f);
                O = n.CT.d2R(O);
                var W = n.CT.m360(313.45 + 481266.484 * f);
                W = n.CT.d2R(W);
                var N = g.length;
                console.assert(a.length === N);
                for (var $ = 0, S = 0; S < N; S++) {
                  var I = a[S].a * Math.sin(g[S].d * L + g[S].m * A + g[S].mdash * K + g[S].f * T);
                  g[S].m && (I *= w), $ += I;
                }
                $ += 3958 * Math.sin(R), $ += 1962 * Math.sin(v - T), $ += 318 * Math.sin(O);
                var x = _.CAANutation.nutationInLongitude(E);
                return n.CT.m360(m + $ / 1e6 + x / 3600);
              }, y.eclipticLatitude = function(E) {
                var v = y.meanLongitude(E);
                v = n.CT.d2R(v);
                var m = y.meanElongation(E);
                m = n.CT.d2R(m);
                var L = e.CAAEarth.sunMeanAnomaly(E);
                L = n.CT.d2R(L);
                var A = y.meanAnomaly(E);
                A = n.CT.d2R(A);
                var K = y.argumentOfLatitude(E);
                K = n.CT.d2R(K);
                var T = e.CAAEarth.eccentricity(E), w = (E - 2451545) / 36525, f = n.CT.m360(119.75 + 131.849 * w);
                f = n.CT.d2R(f);
                var R = n.CT.m360(53.09 + 479264.29 * w);
                R = n.CT.d2R(R);
                var O = n.CT.m360(313.45 + 481266.484 * w);
                O = n.CT.d2R(O);
                var W = b.length;
                console.assert(V.length === W);
                for (var N = 0, $ = 0; $ < W; $++) {
                  var S = V[$] * Math.sin(b[$].d * m + b[$].m * L + b[$].mdash * A + b[$].f * K);
                  b[$].m && (S *= T), N += S;
                }
                return N -= 2235 * Math.sin(v), N += 382 * Math.sin(O), N += 175 * Math.sin(f - K), N += 175 * Math.sin(f + K), N += 127 * Math.sin(v - A), N -= 115 * Math.sin(v + A), N / 1e6;
              }, y.radiusVector = function(E) {
                var v = y.meanLongitude(E);
                v = n.CT.d2R(v);
                var m = y.meanElongation(E);
                m = n.CT.d2R(m);
                var L = e.CAAEarth.sunMeanAnomaly(E);
                L = n.CT.d2R(L);
                var A = y.meanAnomaly(E);
                A = n.CT.d2R(A);
                var K = y.argumentOfLatitude(E);
                K = n.CT.d2R(K);
                var T = e.CAAEarth.eccentricity(E), w = (E - 2451545) / 36525, f = n.CT.m360(119.75 + 131.849 * w);
                f = n.CT.d2R(f);
                var R = n.CT.m360(53.09 + 479264.29 * w);
                R = n.CT.d2R(R);
                var O = n.CT.m360(313.45 + 481266.484 * w);
                O = n.CT.d2R(O);
                var W = g.length;
                console.assert(a.length === W);
                for (var N = 0, $ = 0; $ < W; $++) {
                  var S = a[$].b * Math.cos(g[$].d * m + g[$].m * L + g[$].mdash * A + g[$].f * K);
                  g[$].m && (S *= T), N += S;
                }
                return 385000.56 + N / 1e3;
              }, y.radiusVectorToHorizontalParallax = function(E) {
                return n.CT.r2D(Math.asin(6378.14 / E));
              }, y.horizontalParallaxToRadiusVector = function(E) {
                return 6378.14 / Math.sin(n.CT.d2R(E));
              };
              var C = {};
              (0, t.registerType)("CAAMoon", [y, C, null]);
            }
          ),
          /***/
          "./esm/astrocalc/moon_illuminated_fraction.js": (
            /*!****************************************************!*\
              !*** ./esm/astrocalc/moon_illuminated_fraction.js ***!
              \****************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                MIFR: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.geocentricElongation = function(r, o, c, l) {
                return r = n.CT.d2R(r * 15), c = n.CT.d2R(c * 15), o = n.CT.d2R(o), l = n.CT.d2R(l), n.CT.r2D(Math.acos(Math.sin(l) * Math.sin(o) + Math.cos(l) * Math.cos(o) * Math.cos(c - r)));
              }, e.phaseAngle = function(r, o, c) {
                return r = n.CT.d2R(r), n.CT.m360(n.CT.r2D(Math.atan2(c * Math.sin(r), o - c * Math.cos(r))));
              }, e.illuminatedFraction = function(r) {
                return r = n.CT.d2R(r), (1 + Math.cos(r)) / 2;
              }, e.positionAngle = function(r, o, c, l) {
                return r = n.CT.h2R(r), c = n.CT.h2R(c), o = n.CT.d2R(o), l = n.CT.d2R(l), n.CT.m360(n.CT.r2D(Math.atan2(Math.cos(o) * Math.sin(r - c), Math.sin(o) * Math.cos(l) - Math.cos(o) * Math.sin(l) * Math.cos(r - c))));
              };
              var _ = {};
              (0, t.registerType)("MIFR", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/moon_nodes.js": (
            /*!*************************************!*\
              !*** ./esm/astrocalc/moon_nodes.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAMoonNodes: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.k = function(r) {
                return 13.4223 * (r - 2000.05);
              }, e.passageThroNode = function(r) {
                var o = r / 1342.23, c = o * o, l = c * o, g = l * o, a = n.CT.m360(183.638 + 331.73735682 * r + 14852e-7 * c + 209e-8 * l - 1e-8 * g), b = n.CT.m360(17.4006 + 26.8203725 * r + 1186e-7 * c + 6e-8 * l), V = n.CT.m360(38.3776 + 355.52747313 * r + 0.0123499 * c + 14627e-9 * l - 69e-9 * g), y = n.CT.m360(123.9767 - 1.44098956 * r + 20608e-7 * c + 214e-8 * l - 16e-9 * g), C = n.CT.m360(299.75 + 132.85 * o - 9173e-6 * c), E = n.CT.m360(y + 272.75 - 2.3 * o), v = 1 - 2516e-6 * o - 74e-7 * c;
                a = n.CT.d2R(a);
                var m = 2 * a, L = m * m;
                b = n.CT.d2R(b), V = n.CT.d2R(V);
                var A = 2 * V;
                y = n.CT.d2R(y), C = n.CT.d2R(C), E = n.CT.d2R(E);
                var K = 24515651619e-4 + 27.212220817 * r + 2762e-7 * c + 21e-9 * l - 88e-12 * g - 0.4721 * Math.sin(V) - 0.1649 * Math.sin(m) - 0.0868 * Math.sin(m - V) + 84e-4 * Math.sin(m + V) - v * 83e-4 * Math.sin(m - b) - v * 39e-4 * Math.sin(m - b - V) + 34e-4 * Math.sin(A) - 31e-4 * Math.sin(m - A) + v * 3e-3 * Math.sin(m + b) + v * 28e-4 * Math.sin(b - V) + v * 26e-4 * Math.sin(b) + 25e-4 * Math.sin(L) + 24e-4 * Math.sin(a) + v * 22e-4 * Math.sin(b + V) + 17e-4 * Math.sin(y) + 14e-4 * Math.sin(L - V) + v * 5e-4 * Math.sin(m + b - V) + v * 4e-4 * Math.sin(m - b + V) - v * 3e-4 * Math.sin(m - b * b) + v * 3e-4 * Math.sin(L - b) + 3e-4 * Math.sin(C) + 3e-4 * Math.sin(E);
                return K;
              };
              var _ = {};
              (0, t.registerType)("CAAMoonNodes", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/moon_perigee_apogee.js": (
            /*!**********************************************!*\
              !*** ./esm/astrocalc/moon_perigee_apogee.js ***!
              \**********************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAMoonPerigeeApogee: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                MPAC: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e(b, V, y, C, E) {
                this.d = 0, this.m = 0, this.f = 0, this.c = 0, this.t = 0, this.d = b, this.m = V, this.f = y, this.c = C, this.t = E;
              }
              var _ = {};
              (0, t.registerType)("MPAC", [e, _, null]);
              const r = [new e(2, 0, 0, -1.6769, 0), new e(4, 0, 0, 0.4589, 0), new e(6, 0, 0, -0.1856, 0), new e(8, 0, 0, 0.0883, 0), new e(2, -1, 0, -0.0773, 19e-5), new e(0, 1, 0, 0.0502, -13e-5), new e(10, 0, 0, -0.046, 0), new e(4, -1, 0, 0.0422, -11e-5), new e(6, -1, 0, -0.0256, 0), new e(12, 0, 0, 0.0253, 0), new e(1, 0, 0, 0.0237, 0), new e(8, -1, 0, 0.0162, 0), new e(14, 0, 0, -0.0145, 0), new e(0, 0, 2, 0.0129, 0), new e(3, 0, 0, -0.0112, 0), new e(10, -1, 0, -0.0104, 0), new e(16, 0, 0, 86e-4, 0), new e(12, -1, 0, 69e-4, 0), new e(5, 0, 0, 66e-4, 0), new e(2, 0, 2, -53e-4, 0), new e(18, 0, 0, -52e-4, 0), new e(14, -1, 0, -46e-4, 0), new e(7, 0, 0, -41e-4, 0), new e(2, 1, 0, 4e-3, 0), new e(20, 0, 0, 32e-4, 0), new e(1, 1, 0, -32e-4, 0), new e(16, -1, 0, 31e-4, 0), new e(4, 1, 0, -29e-4, 0), new e(9, 0, 0, 27e-4, 0), new e(4, 0, 2, 27e-4, 0), new e(2, -2, 0, -27e-4, 0), new e(4, -2, 0, 24e-4, 0), new e(6, -2, 0, -21e-4, 0), new e(22, 0, 0, -21e-4, 0), new e(18, -1, 0, -21e-4, 0), new e(6, 1, 0, 19e-4, 0), new e(11, 0, 0, -18e-4, 0), new e(8, 1, 0, -14e-4, 0), new e(4, 0, -2, -14e-4, 0), new e(6, 0, 2, -14e-4, 0), new e(3, 1, 0, 14e-4, 0), new e(5, 1, 0, -14e-4, 0), new e(13, 0, 0, 13e-4, 0), new e(20, -1, 0, 13e-4, 0), new e(3, 2, 0, 11e-4, 0), new e(4, -2, 2, -11e-4, 0), new e(1, 2, 0, -11e-4, 0), new e(22, -1, 0, -9e-4, 0), new e(0, 0, 4, -8e-4, 0), new e(6, 0, -2, 8e-4, 0), new e(2, 1, -2, 8e-4, 0), new e(0, 2, 0, 7e-4, 0), new e(0, -1, 2, 7e-4, 0), new e(2, 0, 4, 7e-4, 0), new e(0, -2, 2, -6e-4, 0), new e(2, 2, -2, -6e-4, 0), new e(24, 0, 0, 6e-4, 0), new e(4, 0, -4, 5e-4, 0), new e(2, 2, 0, 5e-4, 0), new e(1, -1, 0, -4e-4, 0)], o = [new e(2, 0, 0, 0.4392, 0), new e(4, 0, 0, 0.0684, 0), new e(0, 1, 0, 0.0456, -11e-5), new e(2, -1, 0, 0.0426, -11e-5), new e(0, 0, 2, 0.0212, 0), new e(1, 0, 0, -0.0189, 0), new e(6, 0, 0, 0.0144, 0), new e(4, -1, 0, 0.0113, 0), new e(2, 0, 2, 47e-4, 0), new e(1, 1, 0, 36e-4, 0), new e(8, 0, 0, 35e-4, 0), new e(6, -1, 0, 34e-4, 0), new e(2, 0, -2, -34e-4, 0), new e(2, -2, 0, 22e-4, 0), new e(3, 0, 0, -17e-4, 0), new e(4, 0, 2, 13e-4, 0), new e(8, -1, 0, 11e-4, 0), new e(4, -2, 0, 1e-3, 0), new e(10, 0, 0, 9e-4, 0), new e(3, 1, 0, 7e-4, 0), new e(0, 2, 0, 6e-4, 0), new e(2, 1, 0, 5e-4, 0), new e(2, 2, 0, 5e-4, 0), new e(6, 0, 2, 4e-4, 0), new e(6, -2, 0, 4e-4, 0), new e(10, -1, 0, 4e-4, 0), new e(5, 0, 0, -4e-4, 0), new e(4, 0, -2, -4e-4, 0), new e(0, 1, 2, 3e-4, 0), new e(12, 0, 0, 3e-4, 0), new e(2, -1, 2, 3e-4, 0), new e(1, -1, 0, -3e-4, 0)], c = [new e(2, 0, 0, 63.224, 0), new e(4, 0, 0, -6.99, 0), new e(2, -1, 0, 2.834, 0), new e(2, -1, 0, 0, -71e-4), new e(6, 0, 0, 1.927, 0), new e(1, 0, 0, -1.263, 0), new e(8, 0, 0, -0.702, 0), new e(0, 1, 0, 0.696, 0), new e(0, 1, 0, 0, -17e-4), new e(0, 0, 2, -0.69, 0), new e(4, -1, 0, -0.629, 0), new e(4, -1, 0, 0, 16e-4), new e(2, 0, -2, -0.392, 0), new e(10, 0, 0, 0.297, 0), new e(6, -1, 0, 0.26, 0), new e(3, 0, 0, 0.201, 0), new e(2, 1, 0, -0.161, 0), new e(1, 1, 0, 0.157, 0), new e(12, 0, 0, -0.138, 0), new e(8, -1, 0, -0.127, 0), new e(2, 0, 2, 0.104, 0), new e(2, -2, 0, 0.104, 0), new e(5, 0, 0, -0.079, 0), new e(14, 0, 0, 0.068, 0), new e(10, -1, 0, 0.067, 0), new e(4, 1, 0, 0.054, 0), new e(12, -1, 0, -0.038, 0), new e(4, -2, 0, -0.038, 0), new e(7, 0, 0, 0.037, 0), new e(4, 0, 2, -0.037, 0), new e(16, 0, 0, -0.035, 0), new e(3, 1, 0, -0.03, 0), new e(1, -1, 0, 0.029, 0), new e(6, 1, 0, -0.025, 0), new e(0, 2, 0, 0.023, 0), new e(14, -1, 0, 0.023, 0), new e(2, 2, 0, -0.023, 0), new e(6, -2, 0, 0.022, 0), new e(2, -1, -2, -0.021, 0), new e(9, 0, 0, -0.02, 0), new e(18, 0, 0, 0.019, 0), new e(6, 0, 2, 0.017, 0), new e(0, -1, 2, 0.014, 0), new e(16, -1, 0, -0.014, 0), new e(4, 0, -20, 0.013, 0), new e(8, 1, 0, 0.012, 0), new e(11, 0, 0, 0.011, 0), new e(5, 1, 0, 0.01, 0), new e(20, 0, 0, -0.01, 0)], l = [new e(2, 0, 0, -9.147, 0), new e(1, 0, 0, -0.841, 0), new e(0, 0, 2, 0.697, 0), new e(0, 1, 0, -0.656, 16e-4), new e(4, 0, 0, 0.355, 0), new e(2, -1, 0, 0.159, 0), new e(1, 1, 0, 0.127, 0), new e(4, -1, 0, 0.065, 0), new e(6, 0, 0, 0.052, 0), new e(2, 1, 0, 0.043, 0), new e(2, 0, 2, 0.031, 0), new e(2, 0, -2, -0.023, 0), new e(2, -2, 0, 0.022, 0), new e(2, 2, 0, 0.019, 0), new e(0, 2, 0, -0.016, 0), new e(6, -1, 0, 0.014, 0), new e(8, 0, 0, 0.01, 0)];
              function g() {
              }
              g.k = function(b) {
                return 13.2555 * (b - 1999.97);
              }, g.meanPerigee = function(b) {
                var V = b / 1325.55, y = V * V, C = y * V, E = C * V;
                return 24515346698e-4 + 27.55454989 * b - 6691e-7 * y - 1098e-9 * C + 52e-10 * E;
              }, g.meanApogee = function(b) {
                return g.meanPerigee(b);
              }, g.truePerigee = function(b) {
                var V = g.meanPerigee(b), y = b / 1325.55, C = y * y, E = C * y, v = E * y, m = n.CT.m360(171.9179 + 335.9106046 * b - 0.0100383 * C - 1156e-8 * E + 55e-9 * v);
                m = n.CT.d2R(m);
                var L = n.CT.m360(347.3477 + 27.1577721 * b - 813e-6 * C - 1e-6 * E);
                L = n.CT.d2R(L);
                var A = n.CT.m360(316.6109 + 364.5287911 * b - 0.0125053 * C - 148e-7 * E);
                A = n.CT.d2R(A);
                for (var K = r.length, T = 0, w = 0; w < K; w++)
                  T += r[w].c * Math.sin(m * r[w].d + L * r[w].m + A * r[w].f + y * r[w].t);
                return V + T;
              }, g.trueApogee = function(b) {
                var V = g.meanApogee(b), y = b / 1325.55, C = y * y, E = C * y, v = E * y, m = n.CT.m360(171.9179 + 335.9106046 * b - 0.0100383 * C - 1156e-8 * E + 55e-9 * v);
                m = n.CT.d2R(m);
                var L = n.CT.m360(347.3477 + 27.1577721 * b - 813e-6 * C - 1e-6 * E);
                L = n.CT.d2R(L);
                var A = n.CT.m360(316.6109 + 364.5287911 * b - 0.0125053 * C - 148e-7 * E);
                A = n.CT.d2R(A);
                for (var K = o.length, T = 0, w = 0; w < K; w++)
                  T += (o[w].c + y * o[w].t) * Math.sin(m * o[w].d + L * o[w].m + A * o[w].f);
                return V + T;
              }, g.perigeeParallax = function(b) {
                var V = b / 1325.55, y = V * V, C = y * V, E = C * V, v = n.CT.m360(171.9179 + 335.9106046 * b - 0.0100383 * y - 1156e-8 * C + 55e-9 * E);
                v = n.CT.d2R(v);
                var m = n.CT.m360(347.3477 + 27.1577721 * b - 813e-6 * y - 1e-6 * C);
                m = n.CT.d2R(m);
                var L = n.CT.m360(316.6109 + 364.5287911 * b - 0.0125053 * y - 148e-7 * C);
                L = n.CT.d2R(L);
                for (var A = c.length, K = 3629.215, T = 0; T < A; T++)
                  K += (c[T].c + V * c[T].t) * Math.cos(v * c[T].d + m * c[T].m + L * c[T].f);
                return K / 3600;
              }, g.apogeeParallax = function(b) {
                var V = b / 1325.55, y = V * V, C = y * V, E = C * V, v = n.CT.m360(171.9179 + 335.9106046 * b - 0.0100383 * y - 1156e-8 * C + 55e-9 * E);
                v = n.CT.d2R(v);
                var m = n.CT.m360(347.3477 + 27.1577721 * b - 813e-6 * y - 1e-6 * C);
                m = n.CT.d2R(m);
                var L = n.CT.m360(316.6109 + 364.5287911 * b - 0.0125053 * y - 148e-7 * C);
                L = n.CT.d2R(L);
                for (var A = l.length, K = 3245.251, T = 0; T < A; T++)
                  K += (l[T].c + V * l[T].t) * Math.cos(v * l[T].d + m * l[T].m + L * l[T].f);
                return K / 3600;
              };
              var a = {};
              (0, t.registerType)("CAAMoonPerigeeApogee", [g, a, null]);
            }
          ),
          /***/
          "./esm/astrocalc/moon_phases.js": (
            /*!**************************************!*\
              !*** ./esm/astrocalc/moon_phases.js ***!
              \**************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAMoonPhases: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.k = function(r) {
                return 12.3685 * (r - 2e3);
              }, e.meanPhase = function(r) {
                var o = r / 1236.85, c = o * o, l = c * o, g = l * o;
                return 245155009766e-5 + 29.530588861 * r + 15437e-8 * c - 15e-8 * l + 73e-11 * g;
              }, e.truePhase = function(r) {
                var o = e.meanPhase(r), c = r / 1236.85, l = c * c, g = l * c, a = g * c, b = 1 - 2516e-6 * c - 74e-7 * l, V = b * b, y = n.CT.m360(2.5534 + 29.1053567 * r - 14e-7 * l - 11e-8 * g);
                y = n.CT.d2R(y);
                var C = n.CT.m360(201.5643 + 385.81693528 * r + 0.0107582 * l + 1238e-8 * g - 58e-9 * a);
                C = n.CT.d2R(C);
                var E = n.CT.m360(160.7108 + 390.67050284 * r - 16118e-7 * l - 227e-8 * g + 1e-8 * a);
                E = n.CT.d2R(E);
                var v = n.CT.m360(124.7746 - 1.56375588 * r + 20672e-7 * l + 215e-8 * g);
                v = n.CT.d2R(v);
                var m = n.CT.m360(299.77 + 0.107408 * r - 9173e-6 * l);
                m = n.CT.d2R(m);
                var L = n.CT.m360(251.88 + 0.016321 * r);
                L = n.CT.d2R(L);
                var A = n.CT.m360(251.83 + 26.651886 * r);
                A = n.CT.d2R(A);
                var K = n.CT.m360(349.42 + 36.412478 * r);
                K = n.CT.d2R(K);
                var T = n.CT.m360(84.66 + 18.206239 * r);
                T = n.CT.d2R(T);
                var w = n.CT.m360(141.74 + 53.303771 * r);
                w = n.CT.d2R(w);
                var f = n.CT.m360(207.14 + 2.453732 * r);
                f = n.CT.d2R(f);
                var R = n.CT.m360(154.84 + 7.30686 * r);
                R = n.CT.d2R(R);
                var O = n.CT.m360(34.52 + 27.261239 * r);
                O = n.CT.d2R(O);
                var W = n.CT.m360(207.19 + 0.121824 * r);
                W = n.CT.d2R(W);
                var N = n.CT.m360(291.34 + 1.844379 * r);
                N = n.CT.d2R(N);
                var $ = n.CT.m360(161.72 + 24.198154 * r);
                $ = n.CT.d2R($);
                var S = n.CT.m360(239.56 + 25.513099 * r);
                S = n.CT.d2R(S);
                var I = n.CT.m360(331.55 + 3.592518 * r);
                I = n.CT.d2R(I);
                var x = Math.floor(r), P = r - x;
                if (P < 0 && (P = 1 + P), P)
                  if (P === 0.25 || P === 0.75) {
                    var d = -0.62801 * Math.sin(C) + 0.17172 * b * Math.sin(y) + -0.01183 * b * Math.sin(C + y) + 862e-5 * Math.sin(2 * C) + 804e-5 * Math.sin(2 * E) + 454e-5 * b * Math.sin(C - y) + 204e-5 * V * Math.sin(2 * y) + -18e-4 * Math.sin(C - 2 * E) + -7e-4 * Math.sin(C + 2 * E) + -4e-4 * Math.sin(3 * C) + -34e-5 * b * Math.sin(2 * C - y) + 32e-5 * b * Math.sin(y + 2 * E) + 32e-5 * b * Math.sin(y - 2 * E) + -28e-5 * V * Math.sin(C + 2 * y) + 27e-5 * b * Math.sin(2 * C + y) + -17e-5 * Math.sin(v) + -5e-5 * Math.sin(C - y - 2 * E) + 4e-5 * Math.sin(2 * C + 2 * E) + -4e-5 * Math.sin(C + y + 2 * E) + 4e-5 * Math.sin(C - 2 * y) + 3e-5 * Math.sin(C + y - 2 * E) + 3e-5 * Math.sin(3 * y) + 2e-5 * Math.sin(2 * C - 2 * E) + 2e-5 * Math.sin(C - y + 2 * E) + -2e-5 * Math.sin(3 * C + y);
                    o += d;
                    var U = 306e-5 - 38e-5 * b * Math.cos(y) + 26e-5 * Math.cos(C) - 2e-5 * Math.cos(C - y) + 2e-5 * Math.cos(C + y) + 2e-5 * Math.cos(2 * E);
                    P === 0.25 ? o += U : o -= U;
                  } else if (P === 0.5) {
                    var d = -0.40614 * Math.sin(C) + 0.17302 * b * Math.sin(y) + 0.01614 * Math.sin(2 * C) + 0.01043 * Math.sin(2 * E) + 734e-5 * b * Math.sin(C - y) + -514e-5 * b * Math.sin(C + y) + 209e-5 * V * Math.sin(2 * y) + -111e-5 * Math.sin(C - 2 * E) + -57e-5 * Math.sin(C + 2 * E) + 56e-5 * b * Math.sin(2 * C + y) + -42e-5 * Math.sin(3 * C) + 42e-5 * b * Math.sin(y + 2 * E) + 38e-5 * b * Math.sin(y - 2 * E) + -24e-5 * b * Math.sin(2 * C - y) + -17e-5 * Math.sin(v) + -7e-5 * Math.sin(C + 2 * y) + 4e-5 * Math.sin(2 * C - 2 * E) + 4e-5 * Math.sin(3 * y) + 3e-5 * Math.sin(C + y - 2 * E) + 3e-5 * Math.sin(2 * C + 2 * E) + -3e-5 * Math.sin(C + y + 2 * E) + 3e-5 * Math.sin(C - y + 2 * E) + -2e-5 * Math.sin(C - y - 2 * E) + -2e-5 * Math.sin(3 * C + y) + 2e-5 * Math.sin(4 * C);
                    o += d;
                  } else
                    console.assert(!1);
                else {
                  var d = -0.4072 * Math.sin(C) + 0.17241 * b * Math.sin(y) + 0.01608 * Math.sin(2 * C) + 0.01039 * Math.sin(2 * E) + 739e-5 * b * Math.sin(C - y) + -514e-5 * b * Math.sin(C + y) + 208e-5 * V * Math.sin(2 * y) + -111e-5 * Math.sin(C - 2 * E) + -57e-5 * Math.sin(C + 2 * E) + 56e-5 * b * Math.sin(2 * C + y) + -42e-5 * Math.sin(3 * C) + 42e-5 * b * Math.sin(y + 2 * E) + 38e-5 * b * Math.sin(y - 2 * E) + -24e-5 * b * Math.sin(2 * C - y) + -17e-5 * Math.sin(v) + -7e-5 * Math.sin(C + 2 * y) + 4e-5 * Math.sin(2 * C - 2 * E) + 4e-5 * Math.sin(3 * y) + 3e-5 * Math.sin(C + y - 2 * E) + 3e-5 * Math.sin(2 * C + 2 * E) + -3e-5 * Math.sin(C + y + 2 * E) + 3e-5 * Math.sin(C - y + 2 * E) + -2e-5 * Math.sin(C - y - 2 * E) + -2e-5 * Math.sin(3 * C + y) + 2e-5 * Math.sin(4 * C);
                  o += d;
                }
                var F = 325e-6 * Math.sin(m) + 165e-6 * Math.sin(L) + 164e-6 * Math.sin(A) + 126e-6 * Math.sin(K) + 11e-5 * Math.sin(T) + 62e-6 * Math.sin(w) + 6e-5 * Math.sin(f) + 56e-6 * Math.sin(R) + 47e-6 * Math.sin(O) + 42e-6 * Math.sin(W) + 4e-5 * Math.sin(N) + 37e-6 * Math.sin($) + 35e-6 * Math.sin(S) + 23e-6 * Math.sin(I);
                return o += F, o;
              };
              var _ = {};
              (0, t.registerType)("CAAMoonPhases", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/neptune.js": (
            /*!**********************************!*\
              !*** ./esm/astrocalc/neptune.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAANeptune: () => (
                  /* binding */
                  L
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(531188633, 0, 0), new e.VSC(1798476, 2.9010127, 38.1330356), new e.VSC(1019728, 0.4858092, 1.4844727), new e.VSC(124532, 4.830081, 36.648563), new e.VSC(42064, 5.41055, 2.96895), new e.VSC(37715, 6.09222, 35.16409), new e.VSC(33785, 1.24489, 76.26607), new e.VSC(16483, 8e-5, 491.55793), new e.VSC(9199, 4.9375, 39.6175), new e.VSC(8994, 0.2746, 175.1661), new e.VSC(4216, 1.9871, 73.2971), new e.VSC(3365, 1.0359, 33.6796), new e.VSC(2285, 4.2061, 4.4534), new e.VSC(1434, 2.7834, 74.7816), new e.VSC(900, 2.076, 109.946), new e.VSC(745, 3.19, 71.813), new e.VSC(506, 5.748, 114.399), new e.VSC(400, 0.35, 1021.249), new e.VSC(345, 3.462, 41.102), new e.VSC(340, 3.304, 77.751), new e.VSC(323, 2.248, 32.195), new e.VSC(306, 0.497, 0.521), new e.VSC(287, 4.505, 0.048), new e.VSC(282, 2.246, 146.594), new e.VSC(267, 4.889, 0.963), new e.VSC(252, 5.782, 388.465), new e.VSC(245, 1.247, 9.561), new e.VSC(233, 2.505, 137.033), new e.VSC(227, 1.797, 453.425), new e.VSC(170, 3.324, 108.461), new e.VSC(151, 2.192, 33.94), new e.VSC(150, 2.997, 5.938), new e.VSC(148, 0.859, 111.43), new e.VSC(119, 3.677, 2.448), new e.VSC(109, 2.416, 183.243), new e.VSC(103, 0.041, 0.261), new e.VSC(103, 4.404, 70.328), new e.VSC(102, 5.705, 0.112)], r = [new e.VSC(3837687717, 0, 0), new e.VSC(16604, 4.86319, 1.48447), new e.VSC(15807, 2.27923, 38.13304), new e.VSC(3335, 3.682, 76.2661), new e.VSC(1306, 3.6732, 2.9689), new e.VSC(605, 1.505, 35.164), new e.VSC(179, 3.453, 39.618), new e.VSC(107, 2.451, 4.453), new e.VSC(106, 2.755, 33.68), new e.VSC(73, 5.49, 36.65), new e.VSC(57, 1.86, 114.4), new e.VSC(57, 5.22, 0.52), new e.VSC(35, 4.52, 74.78), new e.VSC(32, 5.9, 77.75), new e.VSC(30, 3.67, 388.47), new e.VSC(29, 5.17, 9.56), new e.VSC(29, 5.17, 2.45), new e.VSC(26, 5.25, 168.05)], o = [new e.VSC(53893, 0, 0), new e.VSC(296, 1.855, 1.484), new e.VSC(281, 1.191, 38.133), new e.VSC(270, 5.721, 76.266), new e.VSC(23, 1.21, 2.97), new e.VSC(9, 4.43, 35.16), new e.VSC(7, 0.54, 2.45)], c = [new e.VSC(31, 0, 0), new e.VSC(15, 1.35, 76.27), new e.VSC(12, 6.04, 1.48), new e.VSC(12, 6.11, 38.13)], l = [new e.VSC(114, 3.142, 0)], g = [new e.VSC(3088623, 1.4410437, 38.1330356), new e.VSC(27789, 5.91272, 76.26607), new e.VSC(27624, 0, 0), new e.VSC(15448, 3.50877, 39.61751), new e.VSC(15355, 2.52124, 36.64856), new e.VSC(2e3, 1.51, 74.7816), new e.VSC(1968, 4.3778, 1.4845), new e.VSC(1015, 3.2156, 35.1641), new e.VSC(606, 2.802, 73.297), new e.VSC(595, 2.129, 41.102), new e.VSC(589, 3.187, 2.969), new e.VSC(402, 4.169, 114.399), new e.VSC(280, 1.682, 77.751), new e.VSC(262, 3.767, 213.299), new e.VSC(254, 3.271, 453.425), new e.VSC(206, 4.257, 529.691), new e.VSC(140, 3.53, 137.033)], a = [new e.VSC(227279, 3.807931, 38.133036), new e.VSC(1803, 1.9758, 76.2661), new e.VSC(1433, 3.1416, 0), new e.VSC(1386, 4.8256, 36.6486), new e.VSC(1073, 6.0805, 39.6175), new e.VSC(148, 3.858, 74.782), new e.VSC(136, 0.478, 1.484), new e.VSC(70, 6.19, 35.16), new e.VSC(52, 5.05, 73.3), new e.VSC(43, 0.31, 114.4), new e.VSC(37, 4.89, 41.1), new e.VSC(37, 5.76, 2.97), new e.VSC(26, 5.22, 213.3)], b = [new e.VSC(9691, 5.5712, 38.133), new e.VSC(79, 3.63, 76.27), new e.VSC(72, 0.45, 36.65), new e.VSC(59, 3.14, 0), new e.VSC(30, 1.61, 39.62), new e.VSC(6, 5.61, 74.78)], V = [new e.VSC(273, 1.017, 38.133), new e.VSC(2, 0, 0), new e.VSC(2, 2.37, 36.65), new e.VSC(2, 5.33, 76.27)], y = [new e.VSC(6, 2.67, 38.13)], C = [new e.VSC(3007013206, 0, 0), new e.VSC(27062259, 1.32999459, 38.13303564), new e.VSC(1691764, 3.2518614, 36.6485629), new e.VSC(807831, 5.185928, 1.484473), new e.VSC(537761, 4.521139, 35.16409), new e.VSC(495726, 1.571057, 491.557929), new e.VSC(274572, 1.845523, 175.16606), new e.VSC(135134, 3.372206, 39.617508), new e.VSC(121802, 5.797544, 76.266071), new e.VSC(100895, 0.377027, 73.297126), new e.VSC(69792, 3.79617, 2.96895), new e.VSC(46688, 5.74938, 33.67962), new e.VSC(24594, 0.50802, 109.94569), new e.VSC(16939, 1.59422, 71.81265), new e.VSC(14230, 1.07786, 74.7816), new e.VSC(12012, 1.92062, 1021.24889), new e.VSC(8395, 0.6782, 146.5943), new e.VSC(7572, 1.0715, 388.4652), new e.VSC(5721, 2.5906, 4.4534), new e.VSC(4840, 1.9069, 41.102), new e.VSC(4483, 2.9057, 529.691), new e.VSC(4421, 1.7499, 108.4612), new e.VSC(4354, 0.6799, 32.1951), new e.VSC(4270, 3.4134, 453.4249), new e.VSC(3381, 0.8481, 183.2428), new e.VSC(2881, 1.986, 137.033), new e.VSC(2879, 3.6742, 350.3321), new e.VSC(2636, 3.0976, 213.2991), new e.VSC(2530, 5.7984, 490.0735), new e.VSC(2523, 0.4863, 493.0424), new e.VSC(2306, 2.8096, 70.3282), new e.VSC(2087, 0.6186, 33.9402)], E = [new e.VSC(236339, 0.70498, 38.133036), new e.VSC(13220, 3.32015, 1.48447), new e.VSC(8622, 6.2163, 35.1641), new e.VSC(2702, 1.8814, 39.6175), new e.VSC(2155, 2.0943, 2.9689), new e.VSC(2153, 5.1687, 76.2661), new e.VSC(1603, 0, 0), new e.VSC(1464, 1.1842, 33.6796), new e.VSC(1136, 3.9189, 36.6486), new e.VSC(898, 5.241, 388.465), new e.VSC(790, 0.533, 168.053), new e.VSC(760, 0.021, 182.28), new e.VSC(607, 1.077, 1021.249), new e.VSC(572, 3.401, 484.444), new e.VSC(561, 2.887, 498.671)], v = [new e.VSC(4247, 5.8991, 38.133), new e.VSC(218, 0.346, 1.484), new e.VSC(163, 2.239, 168.053), new e.VSC(156, 4.594, 182.28), new e.VSC(127, 2.848, 35.164)], m = [new e.VSC(166, 4.552, 38.133)];
              function L() {
              }
              L.eclipticLongitude = function(K) {
                var T = (K - 2451545) / 365250, w = T * T, f = w * T, R = f * T, O = _.length, W = 0, N;
                for (N = 0; N < O; N++)
                  W += _[N].a * Math.cos(_[N].b + _[N].c * T);
                var $ = r.length, S = 0;
                for (N = 0; N < $; N++)
                  S += r[N].a * Math.cos(r[N].b + r[N].c * T);
                var I = o.length, x = 0;
                for (N = 0; N < I; N++)
                  x += o[N].a * Math.cos(o[N].b + o[N].c * T);
                var P = c.length, d = 0;
                for (N = 0; N < P; N++)
                  d += c[N].a * Math.cos(c[N].b + c[N].c * T);
                var U = l.length, F = 0;
                for (N = 0; N < U; N++)
                  F += l[N].a * Math.cos(l[N].b + l[N].c * T);
                var X = (W + S * T + x * w + d * f + F * R) / 1e8;
                return X = n.CT.m360(n.CT.r2D(X)), X;
              }, L.eclipticLatitude = function(K) {
                var T = (K - 2451545) / 365250, w = T * T, f = w * T, R = f * T, O = g.length, W = 0, N;
                for (N = 0; N < O; N++)
                  W += g[N].a * Math.cos(g[N].b + g[N].c * T);
                var $ = a.length, S = 0;
                for (N = 0; N < $; N++)
                  S += a[N].a * Math.cos(a[N].b + a[N].c * T);
                var I = b.length, x = 0;
                for (N = 0; N < I; N++)
                  x += b[N].a * Math.cos(b[N].b + b[N].c * T);
                var P = V.length, d = 0;
                for (N = 0; N < P; N++)
                  d += V[N].a * Math.cos(V[N].b + V[N].c * T);
                var U = y.length, F = 0;
                for (N = 0; N < U; N++)
                  F += y[N].a * Math.cos(y[N].b + y[N].c * T);
                var X = (W + S * T + x * w + d * f + F * R) / 1e8;
                return X = n.CT.r2D(X), X;
              }, L.radiusVector = function(K) {
                var T = (K - 2451545) / 365250, w = T * T, f = w * T, R = C.length, O = 0, W;
                for (W = 0; W < R; W++)
                  O += C[W].a * Math.cos(C[W].b + C[W].c * T);
                var N = E.length, $ = 0;
                for (W = 0; W < N; W++)
                  $ += E[W].a * Math.cos(E[W].b + E[W].c * T);
                var S = v.length, I = 0;
                for (W = 0; W < S; W++)
                  I += v[W].a * Math.cos(v[W].b + v[W].c * T);
                var x = m.length, P = 0;
                for (W = 0; W < x; W++)
                  P += m[W].a * Math.cos(m[W].b + m[W].c * T);
                return (O + $ * T + I * w + P * f) / 1e8;
              };
              var A = {};
              (0, t.registerType)("CAANeptune", [L, A, null]);
            }
          ),
          /***/
          "./esm/astrocalc/nutation.js": (
            /*!***********************************!*\
              !*** ./esm/astrocalc/nutation.js ***!
              \***********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAANutation: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                NUC: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              function e(l, g, a, b, V, y, C, E, v) {
                this.d = 0, this.m = 0, this.mprime = 0, this.f = 0, this.omega = 0, this.sincoeff1 = 0, this.sincoeff2 = 0, this.coscoeff1 = 0, this.coscoeff2 = 0, this.d = l, this.m = g, this.mprime = a, this.f = b, this.omega = V, this.sincoeff1 = y, this.sincoeff2 = C, this.coscoeff1 = E, this.coscoeff2 = v;
              }
              var _ = {};
              (0, t.registerType)("NUC", [e, _, null]);
              const r = [new e(0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9), new e(-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1), new e(0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5), new e(0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5), new e(0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1), new e(0, 0, 1, 0, 0, 712, 0.1, -7, 0), new e(-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6), new e(0, 0, 0, 2, 1, -386, -0.4, 200, 0), new e(0, 0, 1, 2, 2, -301, 0, 129, -0.1), new e(-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3), new e(-2, 0, 1, 0, 0, -158, 0, 0, 0), new e(-2, 0, 0, 2, 1, 129, 0.1, -70, 0), new e(0, 0, -1, 2, 2, 123, 0, -53, 0), new e(2, 0, 0, 0, 0, 63, 0, 0, 0), new e(0, 0, 1, 0, 1, 63, 0.1, -33, 0), new e(2, 0, -1, 2, 2, -59, 0, 26, 0), new e(0, 0, -1, 0, 1, -58, -0.1, 32, 0), new e(0, 0, 1, 2, 1, -51, 0, 27, 0), new e(-2, 0, 2, 0, 0, 48, 0, 0, 0), new e(0, 0, -2, 2, 1, 46, 0, -24, 0), new e(2, 0, 0, 2, 2, -38, 0, 16, 0), new e(0, 0, 2, 2, 2, -31, 0, 13, 0), new e(0, 0, 2, 0, 0, 29, 0, 0, 0), new e(-2, 0, 1, 2, 2, 29, 0, -12, 0), new e(0, 0, 0, 2, 0, 26, 0, 0, 0), new e(-2, 0, 0, 2, 0, -22, 0, 0, 0), new e(0, 0, -1, 2, 1, 21, 0, -10, 0), new e(0, 2, 0, 0, 0, 17, -0.1, 0, 0), new e(2, 0, -1, 0, 1, 16, 0, -8, 0), new e(-2, 2, 0, 2, 2, -16, 0.1, 7, 0), new e(0, 1, 0, 0, 1, -15, 0, 9, 0), new e(-2, 0, 1, 0, 1, -13, 0, 7, 0), new e(0, -1, 0, 0, 1, -12, 0, 6, 0), new e(0, 0, 2, -2, 0, 11, 0, 0, 0), new e(2, 0, -1, 2, 1, -10, 0, 5, 0), new e(2, 0, 1, 2, 2, -8, 0, 3, 0), new e(0, 1, 0, 2, 2, 7, 0, -3, 0), new e(-2, 1, 1, 0, 0, -7, 0, 0, 0), new e(0, -1, 0, 2, 2, -7, 0, 3, 0), new e(2, 0, 0, 2, 1, -7, 0, 3, 0), new e(2, 0, 1, 0, 0, 6, 0, 0, 0), new e(-2, 0, 2, 2, 2, 6, 0, -3, 0), new e(-2, 0, 1, 2, 1, 6, 0, -3, 0), new e(2, 0, -2, 0, 1, -6, 0, 3, 0), new e(2, 0, 0, 0, 1, -6, 0, 3, 0), new e(0, -1, 1, 0, 0, 5, 0, 0, 0), new e(-2, -1, 0, 2, 1, -5, 0, 3, 0), new e(-2, 0, 0, 0, 1, -5, 0, 3, 0), new e(0, 0, 2, 2, 1, -5, 0, 3, 0), new e(-2, 0, 2, 0, 1, 4, 0, 0, 0), new e(-2, 1, 0, 2, 1, 4, 0, 0, 0), new e(0, 0, 1, -2, 0, 4, 0, 0, 0), new e(-1, 0, 1, 0, 0, -4, 0, 0, 0), new e(-2, 1, 0, 0, 0, -4, 0, 0, 0), new e(1, 0, 0, 0, 0, -4, 0, 0, 0), new e(0, 0, 1, 2, 0, 3, 0, 0, 0), new e(0, 0, -2, 2, 2, -3, 0, 0, 0), new e(-1, -1, 1, 0, 0, -3, 0, 0, 0), new e(0, 1, 1, 0, 0, -3, 0, 0, 0), new e(0, -1, 1, 2, 2, -3, 0, 0, 0), new e(2, -1, -1, 2, 2, -3, 0, 0, 0), new e(0, 0, 3, 2, 2, -3, 0, 0, 0), new e(2, -1, 0, 2, 2, -3, 0, 0, 0)];
              function o() {
              }
              o.nutationInLongitude = function(l) {
                var g = (l - 2451545) / 36525, a = g * g, b = a * g, V = 297.85036 + 445267.11148 * g - 19142e-7 * a + b / 189474;
                V = n.CT.m360(V);
                var y = 357.52772 + 35999.05034 * g - 1603e-7 * a - b / 3e5;
                y = n.CT.m360(y);
                var C = 134.96298 + 477198.867398 * g + 86972e-7 * a + b / 56250;
                C = n.CT.m360(C);
                var E = 93.27191 + 483202.017538 * g - 36825e-7 * a + b / 327270;
                E = n.CT.m360(E);
                var v = 125.04452 - 1934.136261 * g + 20708e-7 * a + b / 45e4;
                v = n.CT.m360(v);
                for (var m = r.length, L = 0, A = 0; A < m; A++) {
                  var K = r[A].d * V + r[A].m * y + r[A].mprime * C + r[A].f * E + r[A].omega * v, T = n.CT.d2R(K);
                  L += (r[A].sincoeff1 + r[A].sincoeff2 * g) * Math.sin(T) * 1e-4;
                }
                return L;
              }, o.nutationInObliquity = function(l) {
                var g = (l - 2451545) / 36525, a = g * g, b = a * g, V = 297.85036 + 445267.11148 * g - 19142e-7 * a + b / 189474;
                V = n.CT.m360(V);
                var y = 357.52772 + 35999.05034 * g - 1603e-7 * a - b / 3e5;
                y = n.CT.m360(y);
                var C = 134.96298 + 477198.867398 * g + 86972e-7 * a + b / 56250;
                C = n.CT.m360(C);
                var E = 93.27191 + 483202.017538 * g - 36825e-7 * a + b / 327270;
                E = n.CT.m360(E);
                var v = 125.04452 - 1934.136261 * g + 20708e-7 * a + b / 45e4;
                v = n.CT.m360(v);
                for (var m = r.length, L = 0, A = 0; A < m; A++) {
                  var K = r[A].d * V + r[A].m * y + r[A].mprime * C + r[A].f * E + r[A].omega * v, T = n.CT.d2R(K);
                  L += (r[A].coscoeff1 + r[A].coscoeff2 * g) * Math.cos(T) * 1e-4;
                }
                return L;
              }, o.nutationInRightAscension = function(l, g, a, b, V) {
                return l = n.CT.h2R(l), g = n.CT.d2R(g), a = n.CT.d2R(a), (Math.cos(a) + Math.sin(a) * Math.sin(l) * Math.tan(g)) * b - Math.cos(l) * Math.tan(g) * V;
              }, o.nutationInDeclination = function(l, g, a, b, V) {
                return l = n.CT.h2R(l), g = n.CT.d2R(g), a = n.CT.d2R(a), Math.sin(a) * Math.cos(l) * b + Math.sin(l) * V;
              }, o.meanObliquityOfEcliptic = function(l) {
                var g = (l - 2451545) / 3652500, a = g * g, b = a * g, V = b * g, y = V * g, C = y * g, E = C * g, v = E * g, m = v * g, L = m * g;
                return n.CT.dmS2D(23, 26, 21.448) - n.CT.dmS2D(0, 0, 4680.93) * g - n.CT.dmS2D(0, 0, 1.55) * a + n.CT.dmS2D(0, 0, 1999.25) * b - n.CT.dmS2D(0, 0, 51.38) * V - n.CT.dmS2D(0, 0, 249.67) * y - n.CT.dmS2D(0, 0, 39.05) * C + n.CT.dmS2D(0, 0, 7.12) * E + n.CT.dmS2D(0, 0, 27.87) * v + n.CT.dmS2D(0, 0, 5.79) * m + n.CT.dmS2D(0, 0, 2.45) * L;
              }, o.trueObliquityOfEcliptic = function(l) {
                return o.meanObliquityOfEcliptic(l) + n.CT.dmS2D(0, 0, o.nutationInObliquity(l));
              };
              var c = {};
              (0, t.registerType)("CAANutation", [o, c, null]);
            }
          ),
          /***/
          "./esm/astrocalc/parallax.js": (
            /*!***********************************!*\
              !*** ./esm/astrocalc/parallax.js ***!
              \***********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAParallax: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                CAATopocentricEclipticDetails: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./globe.js */
                "./esm/astrocalc/globe.js"
              ), _ = i(
                /*! ./sidereal.js */
                "./esm/astrocalc/sidereal.js"
              );
              function r() {
                this.lambda = 0, this.beta = 0, this.semidiameter = 0, this.lambda = 0, this.beta = 0, this.semidiameter = 0;
              }
              var o = {};
              (0, t.registerType)("CAATopocentricEclipticDetails", [r, o, null]);
              const c = Math.sin(n.CT.d2R(n.CT.dmS2D(0, 0, 8.794)));
              function l() {
              }
              l.equatorial2TopocentricDelta = function(a, b, V, y, C, E, v) {
                var m = e.CAAGlobe.rhoSinThetaPrime(C, E), L = e.CAAGlobe.rhoCosThetaPrime(C, E), A = _.CAASidereal.apparentGreenwichSiderealTime(v);
                b = n.CT.d2R(b);
                var K = Math.cos(b), T = Math.asin(c / V), w = n.CT.h2R(A - y / 15 - a), f = Math.cos(w), R = Math.sin(w), O = new n.COR();
                return O.x = n.CT.r2H(-T * L * R / K), O.y = n.CT.r2D(-T * (m * K - L * f * Math.sin(b))), O;
              }, l.equatorial2Topocentric = function(a, b, V, y, C, E, v) {
                var m = e.CAAGlobe.rhoSinThetaPrime(C, E), L = e.CAAGlobe.rhoCosThetaPrime(C, E), A = _.CAASidereal.apparentGreenwichSiderealTime(v);
                b = n.CT.d2R(b);
                var K = Math.cos(b), T = Math.asin(c / V), w = Math.sin(T), f = n.CT.h2R(A - y / 15 - a), R = Math.cos(f), O = Math.sin(f), W = Math.atan2(-L * w * O, K - L * w * R), N = new n.COR();
                return N.x = n.CT.m24(a + n.CT.r2H(W)), N.y = n.CT.r2D(Math.atan2((Math.sin(b) - m * w) * Math.cos(W), K - L * w * R)), N;
              }, l.ecliptic2Topocentric = function(a, b, V, y, C, E, v, m, L) {
                var A = e.CAAGlobe.rhoSinThetaPrime(v, m), K = e.CAAGlobe.rhoCosThetaPrime(v, m);
                a = n.CT.d2R(a), b = n.CT.d2R(b), C = n.CT.d2R(C), E = n.CT.d2R(E), v = n.CT.d2R(v), V = n.CT.d2R(V);
                var T = Math.sin(C), w = Math.cos(C), f = Math.cos(b), R = Math.sin(b), O = _.CAASidereal.apparentGreenwichSiderealTime(L);
                O = n.CT.h2R(O);
                var W = Math.sin(O), N = Math.asin(c / y), $ = Math.sin(N), S = Math.cos(a) * f - K * $ * Math.cos(O), I = new r();
                I.lambda = Math.atan2(Math.sin(a) * f - $ * (A * T + K * w * W), S);
                var x = Math.cos(I.lambda);
                return I.beta = Math.atan(x * (R - $ * (A * w - K * T * W)) / S), I.semidiameter = Math.asin(x * Math.cos(I.beta) * Math.sin(V) / S), I.semidiameter = n.CT.r2D(I.semidiameter), I.lambda = n.CT.m360(n.CT.r2D(I.lambda)), I.beta = n.CT.r2D(I.beta), I;
              }, l.parallaxToDistance = function(a) {
                return c / Math.sin(n.CT.d2R(a));
              }, l.distanceToParallax = function(a) {
                var b = Math.asin(c / a);
                return n.CT.r2D(b);
              };
              var g = {};
              (0, t.registerType)("CAAParallax", [l, g, null]);
            }
          ),
          /***/
          "./esm/astrocalc/physical_jupiter.js": (
            /*!*******************************************!*\
              !*** ./esm/astrocalc/physical_jupiter.js ***!
              \*******************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAPhysicalJupiter: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                CAAPhysicalJupiterDetails: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              ), _ = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), r = i(
                /*! ./jupiter.js */
                "./esm/astrocalc/jupiter.js"
              );
              function o() {
                this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0, this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0;
              }
              var c = {};
              (0, t.registerType)("CAAPhysicalJupiterDetails", [o, c, null]);
              function l() {
              }
              l.calculate = function(a) {
                var b = new o(), V = a - 24332825e-1, y = V / 36525, C = 268 + 0.1061 * y, E = n.CT.d2R(C), v = 64.5 - 0.0164 * y, m = n.CT.d2R(v), L = n.CT.m360(17.71 + 877.90003539 * V), A = n.CT.m360(16.838 + 870.27003539 * V), K = _.CAAEarth.eclipticLongitude(a), T = n.CT.d2R(K), w = _.CAAEarth.eclipticLatitude(a), f = n.CT.d2R(w), R = _.CAAEarth.radiusVector(a), O = r.CAAJupiter.eclipticLongitude(a), W = n.CT.d2R(O), N = r.CAAJupiter.eclipticLatitude(a), $ = n.CT.d2R(N), S = r.CAAJupiter.radiusVector(a), I = S * Math.cos($) * Math.cos(W) - R * Math.cos(T), x = S * Math.cos($) * Math.sin(W) - R * Math.sin(T), P = S * Math.sin($) - R * Math.sin(f), d = Math.sqrt(I * I + x * x + P * P);
                O -= 0.01299 * d / (S * S), W = n.CT.d2R(O), I = S * Math.cos($) * Math.cos(W) - R * Math.cos(T), x = S * Math.cos($) * Math.sin(W) - R * Math.sin(T), P = S * Math.sin($) - R * Math.sin(f), d = Math.sqrt(I * I + x * x + P * P);
                var U = e.CAANutation.meanObliquityOfEcliptic(a), F = n.CT.d2R(U), X = Math.atan2(Math.cos(F) * Math.sin(W) - Math.sin(F) * Math.tan($), Math.cos(W)), Y = Math.asin(Math.cos(F) * Math.sin($) + Math.sin(F) * Math.cos($) * Math.sin(W));
                b.DS = n.CT.r2D(Math.asin(-Math.sin(m) * Math.sin(Y) - Math.cos(m) * Math.cos(Y) * Math.cos(E - X)));
                var M = x * Math.cos(F) - P * Math.sin(F), B = x * Math.sin(F) + P * Math.cos(F), D = Math.atan2(M, I), k = n.CT.r2D(D), G = Math.atan2(B, Math.sqrt(I * I + M * M)), j = n.CT.r2D(G), ee = Math.atan2(Math.sin(m) * Math.cos(G) * Math.cos(E - D) - Math.sin(G) * Math.cos(m), Math.cos(G) * Math.sin(E - D));
                b.DE = n.CT.r2D(Math.asin(-Math.sin(m) * Math.sin(G) - Math.cos(m) * Math.cos(G) * Math.cos(E - D))), b.geometricw1 = n.CT.m360(L - n.CT.r2D(ee) - 5.07033 * d), b.geometricw2 = n.CT.m360(A - n.CT.r2D(ee) - 5.02626 * d);
                var Z = 57.2958 * (2 * S * d + R * R - S * S - d * d) / (4 * S * d);
                Math.sin(W - T) > 0 ? (b.apparentw1 = n.CT.m360(b.geometricw1 + Z), b.apparentw2 = n.CT.m360(b.geometricw2 + Z)) : (b.apparentw1 = n.CT.m360(b.geometricw1 - Z), b.apparentw2 = n.CT.m360(b.geometricw2 - Z));
                var z = e.CAANutation.nutationInLongitude(a), te = e.CAANutation.nutationInObliquity(a);
                U += te / 3600, F = n.CT.d2R(U), k += 5693e-6 * (Math.cos(D) * Math.cos(T) * Math.cos(F) + Math.sin(D) * Math.sin(T)) / Math.cos(G), k = n.CT.m360(k), D = n.CT.d2R(k), j += 5693e-6 * (Math.cos(T) * Math.cos(F) * (Math.tan(F) * Math.cos(G) - Math.sin(D) * Math.sin(G)) + Math.cos(D) * Math.sin(G) * Math.sin(T)), G = n.CT.d2R(j);
                var re = e.CAANutation.nutationInRightAscension(k / 15, j, U, z, te), le = k + re / 3600, ae = n.CT.d2R(le), oe = e.CAANutation.nutationInDeclination(k / 15, j, U, z, te), de = j + oe / 3600, ve = n.CT.d2R(de);
                re = e.CAANutation.nutationInRightAscension(C / 15, v, U, z, te);
                var ce = C + re / 3600, he = n.CT.d2R(ce);
                oe = e.CAANutation.nutationInDeclination(C / 15, v, U, z, te);
                var ye = v + oe / 3600, fe = n.CT.d2R(ye);
                return b.p = n.CT.m360(n.CT.r2D(Math.atan2(Math.cos(fe) * Math.sin(he - ae), Math.sin(fe) * Math.cos(ve) - Math.cos(fe) * Math.sin(ve) * Math.cos(he - ae)))), b;
              };
              var g = {};
              (0, t.registerType)("CAAPhysicalJupiter", [l, g, null]);
            }
          ),
          /***/
          "./esm/astrocalc/physical_mars.js": (
            /*!****************************************!*\
              !*** ./esm/astrocalc/physical_mars.js ***!
              \****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAPhysicalMars: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                CAAPhysicalMarsDetails: () => (
                  /* binding */
                  a
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              ), _ = i(
                /*! ./sun.js */
                "./esm/astrocalc/sun.js"
              ), r = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), o = i(
                /*! ./mars.js */
                "./esm/astrocalc/mars.js"
              ), c = i(
                /*! ./elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), l = i(
                /*! ./illuminated_fraction.js */
                "./esm/astrocalc/illuminated_fraction.js"
              ), g = i(
                /*! ./moon_illuminated_fraction.js */
                "./esm/astrocalc/moon_illuminated_fraction.js"
              );
              function a() {
                this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0, this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0;
              }
              var b = {};
              (0, t.registerType)("CAAPhysicalMarsDetails", [a, b, null]);
              function V() {
              }
              V.calculate = function(C) {
                for (var E = new a(), v = (C - 2451545) / 36525, m = 352.9065 + 1.1733 * v, L = n.CT.d2R(m), A = 63.2818 - 394e-5 * v, K = n.CT.d2R(A), T = r.CAAEarth.eclipticLongitude(C), w = n.CT.d2R(T), f = r.CAAEarth.eclipticLatitude(C), R = n.CT.d2R(f), O = r.CAAEarth.radiusVector(C), W = 0, N = 0, $ = 0, S = 0, I = 0, x = !0, P = 0, d = 0, U = 0, F = 0, X = 0, Y = 0; x; ) {
                  var M = C - N;
                  d = o.CAAMars.eclipticLongitude(M), U = n.CT.d2R(d), F = o.CAAMars.eclipticLatitude(M), X = n.CT.d2R(F), Y = o.CAAMars.radiusVector(M), $ = Y * Math.cos(X) * Math.cos(U) - O * Math.cos(w), S = Y * Math.cos(X) * Math.sin(U) - O * Math.sin(w), I = Y * Math.sin(X) - O * Math.sin(R), P = Math.sqrt($ * $ + S * S + I * I), N = c.ELL.distanceToLightTime(P), x = Math.abs(N - W) > 2e-6, x && (W = N);
                }
                var B = Math.atan2(S, $), D = n.CT.r2D(B), k = Math.atan2(I, Math.sqrt($ * $ + S * S)), G = n.CT.r2D(k);
                E.DE = n.CT.r2D(Math.asin(-Math.sin(K) * Math.sin(k) - Math.cos(K) * Math.cos(k) * Math.cos(L - B)));
                var j = 49.5581 + 0.7721 * v, ee = n.CT.d2R(j), Z = d - 697e-5 / Y, z = n.CT.d2R(Z), te = F - 225e-6 * (Math.cos(U - ee) / Y), re = n.CT.d2R(te);
                E.DS = n.CT.r2D(Math.asin(-Math.sin(K) * Math.sin(re) - Math.cos(K) * Math.cos(re) * Math.cos(L - z)));
                var le = n.CT.m360(11.504 + 350.89200025 * (C - N - 24332825e-1)), ae = e.CAANutation.meanObliquityOfEcliptic(C), oe = n.CT.d2R(ae), de = n.CT.ec2Eq(m, A, ae), ve = n.CT.h2R(de.x), ce = n.CT.d2R(de.y), he = S * Math.cos(oe) - I * Math.sin(oe), ye = S * Math.sin(oe) + I * Math.cos(oe), fe = Math.atan2(he, $), Ce = n.CT.r2H(fe), Ae = Math.atan2(ye, Math.sqrt($ * $ + he * he)), Te = n.CT.r2D(Ae), Re = Math.atan2(Math.sin(ce) * Math.cos(Ae) * Math.cos(ve - fe) - Math.sin(Ae) * Math.cos(ce), Math.cos(Ae) * Math.sin(ve - fe));
                E.w = n.CT.m360(le - n.CT.r2D(Re));
                var De = e.CAANutation.nutationInLongitude(C), Oe = e.CAANutation.nutationInObliquity(C);
                D += 5693e-6 * Math.cos(w - B) / Math.cos(k), G += 5693e-6 * Math.sin(w - B) * Math.sin(k), m += De / 3600, L = n.CT.d2R(m), D += De / 3600, B = n.CT.d2R(D), ae += Oe / 3600, oe = n.CT.d2R(oe);
                var Ne = n.CT.ec2Eq(m, A, ae), Fe = n.CT.h2R(Ne.x), $e = n.CT.d2R(Ne.y), ze = n.CT.ec2Eq(D, G, ae), se = n.CT.h2R(ze.x), be = n.CT.d2R(ze.y);
                E.p = n.CT.m360(n.CT.r2D(Math.atan2(Math.cos($e) * Math.sin(Fe - se), Math.sin($e) * Math.cos(be) - Math.cos($e) * Math.sin(be) * Math.cos(Fe - se))));
                var Pe = _.CAASun.geometricEclipticLongitude(C), Ve = _.CAASun.geometricEclipticLatitude(C), me = n.CT.ec2Eq(Pe, Ve, ae);
                return E.x = g.MIFR.positionAngle(me.x, me.y, Ce, Te), E.d = 9.36 / P, E.k = l.IFR.illuminatedFraction2(Y, O, P), E.q = (1 - E.k) * E.d, E;
              };
              var y = {};
              (0, t.registerType)("CAAPhysicalMars", [V, y, null]);
            }
          ),
          /***/
          "./esm/astrocalc/physical_sun.js": (
            /*!***************************************!*\
              !*** ./esm/astrocalc/physical_sun.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAPhysicalSun: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                CAAPhysicalSunDetails: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              ), _ = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              function r() {
                this.p = 0, this.b0 = 0, this.l0 = 0, this.p = 0, this.b0 = 0, this.l0 = 0;
              }
              var o = {};
              (0, t.registerType)("CAAPhysicalSunDetails", [r, o, null]);
              function c() {
              }
              c.calculate = function(g) {
                var a = n.CT.m360((g - 2398220) * 360 / 25.38), b = 7.25, V = 73.6667 + 1.3958333 * (g - 2396758) / 36525, y = _.CAAEarth.eclipticLongitude(g), C = _.CAAEarth.radiusVector(g), E = y + 180 - n.CT.dmS2D(0, 0, 20.4898 / C), v = E + n.CT.dmS2D(0, 0, e.CAANutation.nutationInLongitude(g)), m = e.CAANutation.trueObliquityOfEcliptic(g);
                m = n.CT.d2R(m), E = n.CT.d2R(E), v = n.CT.d2R(v), V = n.CT.d2R(V), b = n.CT.d2R(b), a = n.CT.d2R(a);
                var L = Math.atan(-Math.cos(E) * Math.tan(m)), A = Math.atan(-Math.cos(E - V) * Math.tan(b)), K = new r();
                K.p = n.CT.r2D(L + A), K.b0 = n.CT.r2D(Math.asin(Math.sin(E - V) * Math.sin(b)));
                var T = Math.atan(Math.tan(E - V) * Math.cos(b));
                return K.l0 = n.CT.m360(n.CT.r2D(T - a)), K;
              }, c.timeOfStartOfRotation = function(g) {
                var a = 2398140227e-3 + 27.2752316 * g, b = n.CT.m360(281.96 + 26.882476 * g);
                return b = n.CT.d2R(b), a += 0.1454 * Math.sin(b) - 85e-4 * Math.sin(2 * b) - 0.0141 * Math.cos(2 * b), a;
              };
              var l = {};
              (0, t.registerType)("CAAPhysicalSun", [c, l, null]);
            }
          ),
          /***/
          "./esm/astrocalc/pluto.js": (
            /*!********************************!*\
              !*** ./esm/astrocalc/pluto.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAPluto: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                PlutoCoefficient1: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                PlutoCoefficient2: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e(y, C, E) {
                this.j = 0, this.s = 0, this.p = 0, this.j = y, this.s = C, this.p = E;
              }
              var _ = {};
              (0, t.registerType)("PlutoCoefficient1", [e, _, null]);
              function r(y, C) {
                this.a = 0, this.b = 0, this.a = y, this.b = C;
              }
              var o = {};
              (0, t.registerType)("PlutoCoefficient2", [r, o, null]);
              const c = [new e(0, 0, 1), new e(0, 0, 2), new e(0, 0, 3), new e(0, 0, 4), new e(0, 0, 5), new e(0, 0, 6), new e(0, 1, -1), new e(0, 1, 0), new e(0, 1, 1), new e(0, 1, 2), new e(0, 1, 3), new e(0, 2, -2), new e(0, 2, -1), new e(0, 2, 0), new e(1, -1, 0), new e(1, -1, 1), new e(1, 0, -3), new e(1, 0, -2), new e(1, 0, -1), new e(1, 0, 0), new e(1, 0, 1), new e(1, 0, 2), new e(1, 0, 3), new e(1, 0, 4), new e(1, 1, -3), new e(1, 1, -2), new e(1, 1, -1), new e(1, 1, 0), new e(1, 1, 1), new e(1, 1, 3), new e(2, 0, -6), new e(2, 0, -5), new e(2, 0, -4), new e(2, 0, -3), new e(2, 0, -2), new e(2, 0, -1), new e(2, 0, 0), new e(2, 0, 1), new e(2, 0, 2), new e(2, 0, 3), new e(3, 0, -2), new e(3, 0, -1), new e(3, 0, 0)], l = [new r(-19799805, 19850055), new r(897144, -4954829), new r(611149, 1211027), new r(-341243, -189585), new r(129287, -34992), new r(-38164, 30893), new r(20442, -9987), new r(-4063, -5071), new r(-6016, -3336), new r(-3956, 3039), new r(-667, 3572), new r(1276, 501), new r(1152, -917), new r(630, -1277), new r(2571, -459), new r(899, -1449), new r(-1016, 1043), new r(-2343, -1012), new r(7042, 788), new r(1199, -338), new r(418, -67), new r(120, -274), new r(-60, -159), new r(-82, -29), new r(-36, -29), new r(-40, 7), new r(-14, 22), new r(4, 13), new r(5, 2), new r(-1, 0), new r(2, 0), new r(-4, 5), new r(4, -7), new r(14, 24), new r(-49, -34), new r(163, -48), new r(9, -24), new r(-4, 1), new r(-3, 1), new r(1, 3), new r(-3, -1), new r(5, -3), new r(0, 0)], g = [new r(-5452852, -14974862), new r(3527812, 1672790), new r(-1050748, 327647), new r(178690, -292153), new r(18650, 100340), new r(-30697, -25823), new r(4878, 11248), new r(226, -64), new r(2030, -836), new r(69, -604), new r(-247, -567), new r(-57, 1), new r(-122, 175), new r(-49, -164), new r(-197, 199), new r(-25, 217), new r(589, -248), new r(-269, 711), new r(185, 193), new r(315, 807), new r(-130, -43), new r(5, 3), new r(2, 17), new r(2, 5), new r(2, 3), new r(3, 1), new r(2, -1), new r(1, -1), new r(0, -1), new r(0, 0), new r(0, -2), new r(2, 2), new r(-7, 0), new r(10, -8), new r(-3, 20), new r(6, 5), new r(14, 17), new r(-2, 0), new r(0, 0), new r(0, 0), new r(0, 1), new r(0, 0), new r(1, 0)], a = [new r(66865439, 68951812), new r(-11827535, -332538), new r(1593179, -1438890), new r(-18444, 483220), new r(-65977, -85431), new r(31174, -6032), new r(-5794, 22161), new r(4601, 4032), new r(-1729, 234), new r(-415, 702), new r(239, 723), new r(67, -67), new r(1034, -451), new r(-129, 504), new r(480, -231), new r(2, -441), new r(-3359, 265), new r(7856, -7832), new r(36, 45763), new r(8663, 8547), new r(-809, -769), new r(263, -144), new r(-126, 32), new r(-35, -16), new r(-19, -4), new r(-15, 8), new r(-4, 12), new r(5, 6), new r(3, 1), new r(6, -2), new r(2, 2), new r(-2, -2), new r(14, 13), new r(-63, 13), new r(136, -236), new r(273, 1065), new r(251, 149), new r(-25, -9), new r(9, -2), new r(-8, 7), new r(2, -10), new r(19, 35), new r(10, 3)];
              function b() {
              }
              b.eclipticLongitude = function(y) {
                for (var C = (y - 2451545) / 36525, E = 34.35 + 3034.9057 * C, v = 50.08 + 1222.1138 * C, m = 238.96 + 144.96 * C, L = 0, A = c.length, K = 0; K < A; K++) {
                  var T = c[K].j * E + c[K].s * v + c[K].p * m;
                  T = n.CT.d2R(T), L += l[K].a * Math.sin(T) + l[K].b * Math.cos(T);
                }
                return L = L / 1e6, L += 238.958116 + 144.96 * C, L = n.CT.m360(L), L;
              }, b.eclipticLatitude = function(y) {
                for (var C = (y - 2451545) / 36525, E = 34.35 + 3034.9057 * C, v = 50.08 + 1222.1138 * C, m = 238.96 + 144.96 * C, L = 0, A = c.length, K = 0; K < A; K++) {
                  var T = c[K].j * E + c[K].s * v + c[K].p * m;
                  T = n.CT.d2R(T), L += g[K].a * Math.sin(T) + g[K].b * Math.cos(T);
                }
                return L = L / 1e6, L += -3.908239, L;
              }, b.radiusVector = function(y) {
                for (var C = (y - 2451545) / 36525, E = 34.35 + 3034.9057 * C, v = 50.08 + 1222.1138 * C, m = 238.96 + 144.96 * C, L = 0, A = c.length, K = 0; K < A; K++) {
                  var T = c[K].j * E + c[K].s * v + c[K].p * m;
                  T = n.CT.d2R(T), L += a[K].a * Math.sin(T) + a[K].b * Math.cos(T);
                }
                return L = L / 1e7, L += 40.7241346, L;
              };
              var V = {};
              (0, t.registerType)("CAAPluto", [b, V, null]);
            }
          ),
          /***/
          "./esm/astrocalc/precession.js": (
            /*!*************************************!*\
              !*** ./esm/astrocalc/precession.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAPrecession: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              );
              function e() {
              }
              e.precessEquatorial = function(r, o, c, l) {
                var g = (c - 2451545) / 36525, a = g * g, b = (l - c) / 36525, V = b * b, y = V * b;
                r = n.CT.h2R(r), o = n.CT.d2R(o);
                var C = (2306.2181 + 1.39656 * g - 139e-6 * a) * b + (0.30188 - 344e-7 * g) * V + 0.017988 * y;
                C = n.CT.d2R(n.CT.dmS2D(0, 0, C));
                var E = (2306.2181 + 1.39656 * g - 138e-6 * a) * b + (1.09468 + 66e-6 * g) * V + 0.018203 * y;
                E = n.CT.d2R(n.CT.dmS2D(0, 0, E));
                var v = (2004.3109 - 0.8533 * g - 217e-6 * a) * b - (0.42665 + 217e-6 * g) * V - 0.041833 * y;
                v = n.CT.d2R(n.CT.dmS2D(0, 0, v));
                var m = Math.cos(o) * Math.sin(r + C), L = Math.cos(v) * Math.cos(o) * Math.cos(r + C) - Math.sin(v) * Math.sin(o), A = Math.sin(v) * Math.cos(o) * Math.cos(r + C) + Math.cos(v) * Math.sin(o), K = new n.COR();
                return K.x = n.CT.r2H(Math.atan2(m, L) + E), K.x < 0 && (K.x += 24), K.y = n.CT.r2D(Math.asin(A)), K;
              }, e.precessEquatorialFK4 = function(r, o, c, l) {
                var g = (c - 24150203135e-4) / 36524.2199, a = (l - c) / 36524.2199, b = a * a, V = b * a;
                r = n.CT.h2R(r), o = n.CT.d2R(o);
                var y = (2304.25 + 1.396 * g) * a + 0.302 * b + 0.018 * V;
                y = n.CT.d2R(n.CT.dmS2D(0, 0, y));
                var C = 0.791 * b + 1e-3 * V;
                C = n.CT.d2R(n.CT.dmS2D(0, 0, C)), C += y;
                var E = (2004.682 - 0.853 * g) * a - 0.426 * b - 0.042 * V;
                E = n.CT.d2R(n.CT.dmS2D(0, 0, E));
                var v = Math.cos(o) * Math.sin(r + y), m = Math.cos(E) * Math.cos(o) * Math.cos(r + y) - Math.sin(E) * Math.sin(o), L = Math.sin(E) * Math.cos(o) * Math.cos(r + y) + Math.cos(E) * Math.sin(o), A = new n.COR();
                return A.x = n.CT.r2H(Math.atan2(v, m) + C), A.x < 0 && (A.x += 24), A.y = n.CT.r2D(Math.asin(L)), A;
              }, e.precessEcliptic = function(r, o, c, l) {
                var g = (c - 2451545) / 36525, a = g * g, b = (l - c) / 36525, V = b * b, y = V * b;
                r = n.CT.d2R(r), o = n.CT.d2R(o);
                var C = (47.0029 - 0.06603 * g + 598e-6 * a) * b + (-0.03302 + 598e-6 * g) * V + 6e-5 * y;
                C = n.CT.d2R(n.CT.dmS2D(0, 0, C));
                var E = 174.876384 * 3600 + 3289.4789 * g + 0.60622 * a - (869.8089 + 0.50491 * g) * b + 0.03536 * V;
                E = n.CT.d2R(n.CT.dmS2D(0, 0, E));
                var v = (5029.0966 + 2.22226 * g - 42e-6 * a) * b + (1.11113 - 42e-6 * g) * V - 6e-6 * y;
                v = n.CT.d2R(n.CT.dmS2D(0, 0, v));
                var m = Math.cos(C) * Math.cos(o) * Math.sin(E - r) - Math.sin(C) * Math.sin(o), L = Math.cos(o) * Math.cos(E - r), A = Math.cos(C) * Math.sin(o) + Math.sin(C) * Math.cos(o) * Math.sin(E - r), K = new n.COR();
                return K.x = n.CT.r2D(v + E - Math.atan2(m, L)), K.x < 0 && (K.x += 360), K.y = n.CT.r2D(Math.asin(A)), K;
              }, e.equatorialPMToEcliptic = function(r, o, c, l, g, a) {
                a = n.CT.d2R(a), r = n.CT.h2R(r), o = n.CT.d2R(o), c = n.CT.d2R(c);
                var b = Math.cos(c), V = Math.sin(a), y = new n.COR();
                return y.x = (g * V * Math.cos(r) + l * Math.cos(o) * (Math.cos(a) * Math.cos(o) + V * Math.sin(o) * Math.sin(r))) / (b * b), y.y = (g * (Math.cos(a) * Math.cos(o) + V * Math.sin(o) * Math.sin(r)) - l * V * Math.cos(r) * Math.cos(o)) / b, y;
              }, e.adjustPositionUsingUniformProperMotion = function(r, o, c, l, g) {
                var a = new n.COR();
                return a.x = o + l * r / 3600, a.y = c + g * r / 3600, a;
              }, e.adjustPositionUsingMotionInSpace = function(r, o, c, l, g, a, b) {
                o /= 977792, a /= 13751, b /= 206265, l = n.CT.h2R(l), g = n.CT.d2R(g);
                var V = r * Math.cos(g) * Math.cos(l), y = r * Math.cos(g) * Math.sin(l), C = r * Math.sin(g), E = V / r * o - C * b * Math.cos(l) - y * a, v = y / r * o - C * b * Math.sin(l) + V * a, m = C / r * o + r * b * Math.cos(g);
                V += c * E, y += c * v, C += c * m;
                var L = new n.COR();
                return L.x = n.CT.r2H(Math.atan2(y, V)), L.x < 0 && (L.x += 24), L.y = n.CT.r2D(Math.atan2(C, Math.sqrt(V * V + y * y))), L;
              };
              var _ = {};
              (0, t.registerType)("CAAPrecession", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/rise_transit_set.js": (
            /*!*******************************************!*\
              !*** ./esm/astrocalc/rise_transit_set.js ***!
              \*******************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAARiseTransitSet: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                CAARiseTransitSetDetails: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./dynamical_time.js */
                "./esm/astrocalc/dynamical_time.js"
              ), _ = i(
                /*! ./interpolate.js */
                "./esm/astrocalc/interpolate.js"
              ), r = i(
                /*! ./sidereal.js */
                "./esm/astrocalc/sidereal.js"
              );
              function o() {
                this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0;
              }
              var c = {};
              (0, t.registerType)("CAARiseTransitSetDetails", [o, c, null]);
              function l() {
              }
              l.rise = function(a, b, V, y, C, E, v, m, L, A) {
                var K = new o();
                K.bValid = !1;
                var T = r.CAASidereal.apparentGreenwichSiderealTime(a);
                T *= 15;
                var w = e.DYT.deltaT(a), f = n.CT.d2R(C), R = n.CT.d2R(L), O = n.CT.d2R(A), W = (Math.sin(O) - Math.sin(R) * Math.sin(f)) / (Math.cos(R) * Math.cos(f));
                if (W > 1 || W < -1)
                  return K;
                var N = Math.acos(W);
                N = n.CT.r2D(N);
                var $ = (y * 15 + m - T) / 360, S = $ - N / 360, I = $ + N / 360;
                $ > 1 ? $ -= 1 : $ < 0 && ($ += 1), S > 1 ? S -= 1 : S < 0 && (S += 1), I > 1 ? I -= 1 : I < 0 && (I += 1);
                for (var x = 0; x < 2; x++) {
                  var P = T + 360.985647 * S;
                  P = n.CT.m360(P);
                  var d = S + w / 86400, U = _.INTP.interpolate(d, b, y, E), F = _.INTP.interpolate(d, V, C, v), X = P - m - U * 15, Y = n.CT.eq2H(X / 15, F, L), M = (Y.y - A) / (360 * Math.cos(n.CT.d2R(F)) * Math.cos(R) * Math.sin(n.CT.d2R(X)));
                  S += M, P = T + 360.985647 * $, P = n.CT.m360(P), d = $ + w / 86400, U = _.INTP.interpolate(d, b, y, E), X = P - m - U * 15, X < -180 && (X += 360), M = -X / 360, $ += M, P = T + 360.985647 * I, P = n.CT.m360(P), d = I + w / 86400, U = _.INTP.interpolate(d, b, y, E), F = _.INTP.interpolate(d, V, C, v), X = P - m - U * 15, Y = n.CT.eq2H(X / 15, F, L), M = (Y.y - A) / (360 * Math.cos(n.CT.d2R(F)) * Math.cos(R) * Math.sin(n.CT.d2R(X))), I += M;
                }
                return K.bValid = !0, K.rise = S * 24, K.set = I * 24, K.transit = $ * 24, K;
              };
              var g = {};
              (0, t.registerType)("CAARiseTransitSet", [l, g, null]);
            }
          ),
          /***/
          "./esm/astrocalc/saturn.js": (
            /*!*********************************!*\
              !*** ./esm/astrocalc/saturn.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAASaturn: () => (
                  /* binding */
                  w
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(87401354, 0, 0), new e.VSC(11107660, 3.9620509, 213.29909544), new e.VSC(1414151, 4.5858152, 7.113547), new e.VSC(398379, 0.52112, 206.185548), new e.VSC(350769, 3.303299, 426.598191), new e.VSC(206816, 0.246584, 103.092774), new e.VSC(79271, 3.84007, 220.41264), new e.VSC(23990, 4.66977, 110.20632), new e.VSC(16574, 0.43719, 419.48464), new e.VSC(15820, 0.93809, 632.78374), new e.VSC(15054, 2.7167, 639.89729), new e.VSC(14907, 5.76903, 316.39187), new e.VSC(14610, 1.56519, 3.93215), new e.VSC(13160, 4.44891, 14.22709), new e.VSC(13005, 5.98119, 11.0457), new e.VSC(10725, 3.1294, 202.2534), new e.VSC(6126, 1.7633, 277.035), new e.VSC(5863, 0.2366, 529.691), new e.VSC(5228, 4.2078, 3.1814), new e.VSC(5020, 3.1779, 433.7117), new e.VSC(4593, 0.6198, 199.072), new e.VSC(4006, 2.2448, 63.7359), new e.VSC(3874, 3.2228, 138.5175), new e.VSC(3269, 0.7749, 949.1756), new e.VSC(2954, 0.9828, 95.9792), new e.VSC(2461, 2.0316, 735.8765), new e.VSC(1758, 3.2658, 522.5774), new e.VSC(1640, 5.505, 846.0828), new e.VSC(1581, 4.3727, 309.2783), new e.VSC(1391, 4.0233, 323.5054), new e.VSC(1124, 2.8373, 415.5525), new e.VSC(1087, 4.1834, 2.4477), new e.VSC(1017, 3.717, 227.5262), new e.VSC(957, 0.507, 1265.567), new e.VSC(853, 3.421, 175.166), new e.VSC(849, 3.191, 209.367), new e.VSC(789, 5.007, 0.963), new e.VSC(749, 2.144, 853.196), new e.VSC(744, 5.253, 224.345), new e.VSC(687, 1.747, 1052.268), new e.VSC(654, 1.599, 0.048), new e.VSC(634, 2.299, 412.371), new e.VSC(625, 0.97, 210.118), new e.VSC(580, 3.093, 74.782), new e.VSC(546, 2.127, 350.332), new e.VSC(543, 1.518, 9.561), new e.VSC(530, 4.449, 117.32), new e.VSC(478, 2.965, 137.033), new e.VSC(474, 5.475, 742.99), new e.VSC(452, 1.044, 490.334), new e.VSC(449, 1.29, 127.472), new e.VSC(372, 2.278, 217.231), new e.VSC(355, 3.013, 838.969), new e.VSC(347, 1.539, 340.771), new e.VSC(343, 0.246, 0.521), new e.VSC(330, 0.247, 1581.959), new e.VSC(322, 0.961, 203.738), new e.VSC(322, 2.572, 647.011), new e.VSC(309, 3.495, 216.48), new e.VSC(287, 2.37, 351.817), new e.VSC(278, 0.4, 211.815), new e.VSC(249, 1.47, 1368.66), new e.VSC(227, 4.91, 12.53), new e.VSC(220, 4.204, 200.769), new e.VSC(209, 1.345, 625.67), new e.VSC(208, 0.483, 1162.475), new e.VSC(208, 1.283, 39.357), new e.VSC(204, 6.011, 265.989), new e.VSC(185, 3.503, 149.563), new e.VSC(184, 0.973, 4.193), new e.VSC(182, 5.491, 2.921), new e.VSC(174, 1.863, 0.751), new e.VSC(165, 0.44, 5.417), new e.VSC(149, 5.736, 52.69), new e.VSC(148, 1.535, 5.629), new e.VSC(146, 6.231, 195.14), new e.VSC(140, 4.295, 21.341), new e.VSC(131, 4.068, 10.295), new e.VSC(125, 6.277, 1898.351), new e.VSC(122, 1.976, 4.666), new e.VSC(118, 5.341, 554.07), new e.VSC(117, 2.679, 1155.361), new e.VSC(114, 5.594, 1059.382), new e.VSC(112, 1.105, 191.208), new e.VSC(110, 0.166, 1.484), new e.VSC(109, 3.438, 536.805), new e.VSC(107, 4.012, 956.289), new e.VSC(104, 2.192, 88.866), new e.VSC(103, 1.197, 1685.052), new e.VSC(101, 4.965, 269.921)], r = [new e.VSC(21354295596, 0, 0), new e.VSC(1296855, 1.8282054, 213.2990954), new e.VSC(564348, 2.885001, 7.113547), new e.VSC(107679, 2.277699, 206.185548), new e.VSC(98323, 1.0807, 426.59819), new e.VSC(40255, 2.04128, 220.41264), new e.VSC(19942, 1.27955, 103.09277), new e.VSC(10512, 2.7488, 14.22709), new e.VSC(6939, 0.4049, 639.8973), new e.VSC(4803, 2.4419, 419.4846), new e.VSC(4056, 2.9217, 110.2063), new e.VSC(3769, 3.6497, 3.9322), new e.VSC(3385, 2.4169, 3.1814), new e.VSC(3302, 1.2626, 433.7117), new e.VSC(3071, 2.3274, 199.072), new e.VSC(1953, 3.5639, 11.0457), new e.VSC(1249, 2.628, 95.9792), new e.VSC(922, 1.961, 227.526), new e.VSC(706, 4.417, 529.691), new e.VSC(650, 6.174, 202.253), new e.VSC(628, 6.111, 309.278), new e.VSC(487, 6.04, 853.196), new e.VSC(479, 4.988, 522.577), new e.VSC(468, 4.617, 63.736), new e.VSC(417, 2.117, 323.505), new e.VSC(408, 1.299, 209.367), new e.VSC(352, 2.317, 632.784), new e.VSC(344, 3.959, 412.371), new e.VSC(340, 3.634, 316.392), new e.VSC(336, 3.772, 735.877), new e.VSC(332, 2.861, 210.118), new e.VSC(289, 2.733, 117.32), new e.VSC(281, 5.744, 2.448), new e.VSC(266, 0.543, 647.011), new e.VSC(230, 1.644, 216.48), new e.VSC(192, 2.965, 224.345), new e.VSC(173, 4.077, 846.083), new e.VSC(167, 2.597, 21.341), new e.VSC(136, 2.286, 10.295), new e.VSC(131, 3.441, 742.99), new e.VSC(128, 4.095, 217.231), new e.VSC(109, 6.161, 415.552), new e.VSC(98, 4.73, 838.97), new e.VSC(94, 3.48, 1052.27), new e.VSC(92, 3.95, 88.87), new e.VSC(87, 1.22, 440.83), new e.VSC(83, 3.11, 625.67), new e.VSC(78, 6.24, 302.16), new e.VSC(67, 0.29, 4.67), new e.VSC(66, 5.65, 9.56), new e.VSC(62, 4.29, 127.47), new e.VSC(62, 1.83, 195.14), new e.VSC(58, 2.48, 191.96), new e.VSC(57, 5.02, 137.03), new e.VSC(55, 0.28, 74.78), new e.VSC(54, 5.13, 490.33), new e.VSC(51, 1.46, 536.8), new e.VSC(47, 1.18, 149.56), new e.VSC(47, 5.15, 515.46), new e.VSC(46, 2.23, 956.29), new e.VSC(44, 2.71, 5.42), new e.VSC(40, 0.41, 269.92), new e.VSC(40, 3.89, 728.76), new e.VSC(38, 0.65, 422.67), new e.VSC(38, 2.53, 12.53), new e.VSC(37, 3.78, 2.92), new e.VSC(35, 6.08, 5.63), new e.VSC(34, 3.21, 1368.66), new e.VSC(33, 4.64, 277.03), new e.VSC(33, 5.43, 1066.5), new e.VSC(33, 0.3, 351.82), new e.VSC(32, 4.39, 1155.36), new e.VSC(31, 2.43, 52.69), new e.VSC(30, 2.84, 203), new e.VSC(30, 6.19, 284.15), new e.VSC(30, 3.39, 1059.38), new e.VSC(29, 2.03, 330.62), new e.VSC(28, 2.74, 265.99), new e.VSC(26, 4.51, 340.77)], o = [new e.VSC(116441, 1.179879, 7.113547), new e.VSC(91921, 0.07425, 213.2991), new e.VSC(90592, 0, 0), new e.VSC(15277, 4.06492, 206.18555), new e.VSC(10631, 0.25778, 220.41264), new e.VSC(10605, 5.40964, 426.59819), new e.VSC(4265, 1.046, 14.2271), new e.VSC(1216, 2.9186, 103.0928), new e.VSC(1165, 4.6094, 639.8973), new e.VSC(1082, 5.6913, 433.7117), new e.VSC(1045, 4.0421, 199.072), new e.VSC(1020, 0.6337, 3.1814), new e.VSC(634, 4.388, 419.485), new e.VSC(549, 5.573, 3.932), new e.VSC(457, 1.268, 110.206), new e.VSC(425, 0.209, 227.526), new e.VSC(274, 4.288, 95.979), new e.VSC(162, 1.381, 11.046), new e.VSC(129, 1.566, 309.278), new e.VSC(117, 3.881, 853.196), new e.VSC(105, 4.9, 647.011), new e.VSC(101, 0.893, 21.341), new e.VSC(96, 2.91, 316.39), new e.VSC(95, 5.63, 412.37), new e.VSC(85, 5.73, 209.37), new e.VSC(83, 6.05, 216.48), new e.VSC(82, 1.02, 117.32), new e.VSC(75, 4.76, 210.12), new e.VSC(67, 0.46, 522.58), new e.VSC(66, 0.48, 10.29), new e.VSC(64, 0.35, 323.51), new e.VSC(61, 4.88, 632.78), new e.VSC(53, 2.75, 529.69), new e.VSC(46, 5.69, 440.83), new e.VSC(45, 1.67, 202.25), new e.VSC(42, 5.71, 88.87), new e.VSC(32, 0.07, 63.74), new e.VSC(32, 1.67, 302.16), new e.VSC(31, 4.16, 191.96), new e.VSC(27, 0.83, 224.34), new e.VSC(25, 5.66, 735.88), new e.VSC(20, 5.94, 217.23), new e.VSC(18, 4.9, 625.67), new e.VSC(17, 1.63, 742.99), new e.VSC(16, 0.58, 515.46), new e.VSC(14, 0.21, 838.97), new e.VSC(14, 3.76, 195.14), new e.VSC(12, 4.72, 203), new e.VSC(12, 0.13, 234.64), new e.VSC(12, 3.12, 846.08), new e.VSC(11, 5.92, 536.8), new e.VSC(11, 5.6, 728.76), new e.VSC(11, 3.2, 1066.5), new e.VSC(10, 4.99, 422.67), new e.VSC(10, 0.26, 330.62), new e.VSC(10, 4.15, 860.31), new e.VSC(9, 0.46, 956.29), new e.VSC(8, 2.14, 269.92), new e.VSC(8, 5.25, 429.78), new e.VSC(8, 4.03, 9.56), new e.VSC(7, 5.4, 1052.27), new e.VSC(6, 4.46, 284.15), new e.VSC(6, 5.93, 405.26)], c = [new e.VSC(16039, 5.73945, 7.11355), new e.VSC(4250, 4.5854, 213.2991), new e.VSC(1907, 4.7608, 220.4126), new e.VSC(1466, 5.9133, 206.1855), new e.VSC(1162, 5.6197, 14.2271), new e.VSC(1067, 3.6082, 426.5982), new e.VSC(239, 3.861, 433.712), new e.VSC(237, 5.768, 199.072), new e.VSC(166, 5.116, 3.181), new e.VSC(151, 2.736, 639.897), new e.VSC(131, 4.743, 227.526), new e.VSC(63, 0.23, 419.48), new e.VSC(62, 4.74, 103.09), new e.VSC(40, 5.47, 21.34), new e.VSC(40, 5.96, 95.98), new e.VSC(39, 5.83, 110.21), new e.VSC(28, 3.01, 647.01), new e.VSC(25, 0.99, 3.93), new e.VSC(19, 1.92, 853.2), new e.VSC(18, 4.97, 10.29), new e.VSC(18, 1.03, 412.37), new e.VSC(18, 4.2, 216.48), new e.VSC(18, 3.32, 309.28), new e.VSC(16, 3.9, 440.83), new e.VSC(16, 5.62, 117.32), new e.VSC(13, 1.18, 88.87), new e.VSC(11, 5.58, 11.05), new e.VSC(11, 5.93, 191.96), new e.VSC(10, 3.95, 209.37), new e.VSC(9, 3.39, 302.16), new e.VSC(8, 4.88, 323.51), new e.VSC(7, 0.38, 632.78), new e.VSC(6, 2.25, 522.58), new e.VSC(6, 1.06, 210.12), new e.VSC(5, 4.64, 234.64), new e.VSC(4, 3.14, 0), new e.VSC(4, 2.31, 515.46), new e.VSC(3, 2.2, 860.31), new e.VSC(3, 0.59, 529.69), new e.VSC(3, 4.93, 224.34), new e.VSC(3, 0.42, 625.67), new e.VSC(2, 4.77, 330.62), new e.VSC(2, 3.35, 429.78), new e.VSC(2, 3.2, 202.25), new e.VSC(2, 1.19, 1066.5), new e.VSC(2, 1.35, 405.26), new e.VSC(2, 4.16, 223.59), new e.VSC(2, 3.07, 654.12)], l = [new e.VSC(1662, 3.9983, 7.1135), new e.VSC(257, 2.984, 220.413), new e.VSC(236, 3.902, 14.227), new e.VSC(149, 2.741, 213.299), new e.VSC(114, 3.142, 0), new e.VSC(110, 1.515, 206.186), new e.VSC(68, 1.72, 426.6), new e.VSC(40, 2.05, 433.71), new e.VSC(38, 1.24, 199.07), new e.VSC(31, 3.01, 227.53), new e.VSC(15, 0.83, 639.9), new e.VSC(9, 3.71, 21.34), new e.VSC(6, 2.42, 419.48), new e.VSC(6, 1.16, 647.01), new e.VSC(4, 1.45, 95.98), new e.VSC(4, 2.12, 440.83), new e.VSC(3, 4.09, 110.21), new e.VSC(3, 2.77, 412.37), new e.VSC(3, 3.01, 88.87), new e.VSC(3, 0, 853.2), new e.VSC(3, 0.39, 103.09), new e.VSC(2, 3.78, 117.32), new e.VSC(2, 2.83, 234.64), new e.VSC(2, 5.08, 309.28), new e.VSC(2, 2.24, 216.48), new e.VSC(2, 5.19, 302.16), new e.VSC(1, 1.55, 191.96)], g = [new e.VSC(124, 2.259, 7.114), new e.VSC(34, 2.16, 14.23), new e.VSC(28, 1.2, 220.41), new e.VSC(6, 1.22, 227.53), new e.VSC(5, 0.24, 433.71), new e.VSC(4, 6.23, 426.6), new e.VSC(3, 2.97, 199.07), new e.VSC(3, 4.29, 206.19), new e.VSC(2, 6.25, 213.3), new e.VSC(1, 5.28, 639.9), new e.VSC(1, 0.24, 440.83), new e.VSC(1, 3.14, 0)], a = [new e.VSC(4330678, 3.6028443, 213.2990954), new e.VSC(240348, 2.852385, 426.598191), new e.VSC(84746, 0, 0), new e.VSC(34116, 0.57297, 206.18555), new e.VSC(30863, 3.48442, 220.41264), new e.VSC(14734, 2.11847, 639.89729), new e.VSC(9917, 5.79, 419.4846), new e.VSC(6994, 4.736, 7.1135), new e.VSC(4808, 5.4331, 316.3919), new e.VSC(4788, 4.9651, 110.2063), new e.VSC(3432, 2.7326, 433.7117), new e.VSC(1506, 6.013, 103.0928), new e.VSC(1060, 5.631, 529.691), new e.VSC(969, 5.204, 632.784), new e.VSC(942, 1.396, 853.196), new e.VSC(708, 3.803, 323.505), new e.VSC(552, 5.131, 202.253), new e.VSC(400, 3.359, 227.526), new e.VSC(319, 3.626, 209.367), new e.VSC(316, 1.997, 647.011), new e.VSC(314, 0.465, 217.231), new e.VSC(284, 4.886, 224.345), new e.VSC(236, 2.139, 11.046), new e.VSC(215, 5.95, 846.083), new e.VSC(209, 2.12, 415.552), new e.VSC(207, 0.73, 199.072), new e.VSC(179, 2.954, 63.736), new e.VSC(141, 0.644, 490.334), new e.VSC(139, 4.595, 14.227), new e.VSC(139, 1.998, 735.877), new e.VSC(135, 5.245, 742.99), new e.VSC(122, 3.115, 522.577), new e.VSC(116, 3.109, 216.48), new e.VSC(114, 0.963, 210.118)], b = [new e.VSC(397555, 5.3329, 213.299095), new e.VSC(49479, 3.14159, 0), new e.VSC(18572, 6.09919, 426.59819), new e.VSC(14801, 2.30586, 206.18555), new e.VSC(9644, 1.6967, 220.4126), new e.VSC(3757, 1.2543, 419.4846), new e.VSC(2717, 5.9117, 639.8973), new e.VSC(1455, 0.8516, 433.7117), new e.VSC(1291, 2.9177, 7.1135), new e.VSC(853, 0.436, 316.392), new e.VSC(298, 0.919, 632.784), new e.VSC(292, 5.316, 853.196), new e.VSC(284, 1.619, 227.526), new e.VSC(275, 3.889, 103.093), new e.VSC(172, 0.052, 647.011), new e.VSC(166, 2.444, 199.072), new e.VSC(158, 5.209, 110.206), new e.VSC(128, 1.207, 529.691), new e.VSC(110, 2.457, 217.231), new e.VSC(82, 2.76, 210.12), new e.VSC(81, 2.86, 14.23), new e.VSC(69, 1.66, 202.25), new e.VSC(65, 1.26, 216.48), new e.VSC(61, 1.25, 209.37), new e.VSC(59, 1.82, 323.51), new e.VSC(46, 0.82, 440.83), new e.VSC(36, 1.82, 224.34), new e.VSC(34, 2.84, 117.32), new e.VSC(33, 1.31, 412.37), new e.VSC(32, 1.19, 846.08), new e.VSC(27, 4.65, 1066.5), new e.VSC(27, 4.44, 11.05)], V = [new e.VSC(20630, 0.50482, 213.2991), new e.VSC(3720, 3.9983, 206.1855), new e.VSC(1627, 6.1819, 220.4126), new e.VSC(1346, 0, 0), new e.VSC(706, 3.039, 419.485), new e.VSC(365, 5.099, 426.598), new e.VSC(330, 5.279, 433.712), new e.VSC(219, 3.828, 639.897), new e.VSC(139, 1.043, 7.114), new e.VSC(104, 6.157, 227.526), new e.VSC(93, 1.98, 316.39), new e.VSC(71, 4.15, 199.07), new e.VSC(52, 2.88, 632.78), new e.VSC(49, 4.43, 647.01), new e.VSC(41, 3.16, 853.2), new e.VSC(29, 4.53, 210.12), new e.VSC(24, 1.12, 14.23), new e.VSC(21, 4.35, 217.23), new e.VSC(20, 5.31, 440.83), new e.VSC(18, 0.85, 110.21), new e.VSC(17, 5.68, 216.48), new e.VSC(16, 4.26, 103.09), new e.VSC(14, 3, 412.37), new e.VSC(12, 2.53, 529.69), new e.VSC(8, 3.32, 202.25), new e.VSC(7, 5.56, 209.37), new e.VSC(7, 0.29, 323.51), new e.VSC(6, 1.16, 117.32), new e.VSC(6, 3.61, 869.31)], y = [new e.VSC(666, 1.99, 213.299), new e.VSC(632, 5.698, 206.186), new e.VSC(398, 0, 0), new e.VSC(188, 4.338, 220.413), new e.VSC(92, 4.84, 419.48), new e.VSC(52, 3.42, 433.71), new e.VSC(42, 2.38, 426.6), new e.VSC(26, 4.4, 227.53), new e.VSC(21, 5.85, 199.07), new e.VSC(18, 1.99, 639.9), new e.VSC(11, 5.37, 7.11), new e.VSC(10, 2.55, 647.01), new e.VSC(7, 3.46, 316.39), new e.VSC(6, 4.8, 632.78), new e.VSC(6, 0.02, 210.12), new e.VSC(6, 3.52, 440.83), new e.VSC(5, 5.64, 14.23), new e.VSC(5, 1.22, 853.2), new e.VSC(4, 4.71, 412.37), new e.VSC(3, 0.63, 103.09), new e.VSC(2, 3.72, 216.48)], C = [new e.VSC(80, 1.12, 206.19), new e.VSC(32, 3.12, 213.3), new e.VSC(17, 2.48, 220.41), new e.VSC(12, 3.14, 0), new e.VSC(9, 0.38, 419.48), new e.VSC(6, 1.56, 433.71), new e.VSC(5, 2.63, 227.53), new e.VSC(5, 1.28, 199.07), new e.VSC(1, 1.43, 426.6), new e.VSC(1, 0.67, 647.01), new e.VSC(1, 1.72, 440.83), new e.VSC(1, 6.18, 639.9)], E = [new e.VSC(8, 2.82, 206.19), new e.VSC(1, 0.51, 220.41)], v = [new e.VSC(955758136, 0, 0), new e.VSC(52921382, 2.3922622, 213.29909544), new e.VSC(1873680, 5.2354961, 206.1855484), new e.VSC(1464664, 1.6476305, 426.5981909), new e.VSC(821891, 5.9352, 316.39187), new e.VSC(547507, 5.015326, 103.092774), new e.VSC(371684, 2.271148, 220.412642), new e.VSC(361778, 3.139043, 7.113547), new e.VSC(140618, 5.704067, 632.783739), new e.VSC(108975, 3.293136, 110.206321), new e.VSC(69007, 5.941, 419.48464), new e.VSC(61053, 0.94038, 639.89729), new e.VSC(48913, 1.55733, 202.2534), new e.VSC(34144, 0.19519, 277.03499), new e.VSC(32402, 5.47085, 949.17561), new e.VSC(20937, 0.46349, 735.87651), new e.VSC(20839, 1.52103, 433.71174), new e.VSC(20747, 5.33256, 199.072), new e.VSC(15298, 3.05944, 529.69097), new e.VSC(14296, 2.60434, 323.50542), new e.VSC(12884, 1.64892, 138.5175), new e.VSC(11993, 5.98051, 846.08283), new e.VSC(11380, 1.73106, 522.57742), new e.VSC(9796, 5.2048, 1265.5675), new e.VSC(7753, 5.8519, 95.9792), new e.VSC(6771, 3.0043, 14.2271), new e.VSC(6466, 0.1773, 1052.2684), new e.VSC(5850, 1.4552, 415.5525), new e.VSC(5307, 0.5974, 63.7359), new e.VSC(4696, 2.1492, 227.5262), new e.VSC(4044, 1.6401, 209.3669), new e.VSC(3688, 0.7802, 412.3711), new e.VSC(3461, 1.8509, 175.1661), new e.VSC(3420, 4.9455, 1581.9593), new e.VSC(3401, 0.5539, 350.3321), new e.VSC(3376, 3.6953, 224.3448), new e.VSC(2976, 5.6847, 210.1177), new e.VSC(2885, 1.3876, 838.9693), new e.VSC(2881, 0.1796, 853.1964), new e.VSC(2508, 3.5385, 742.9901), new e.VSC(2448, 6.1841, 1368.6603), new e.VSC(2406, 2.9656, 117.3199), new e.VSC(2174, 0.0151, 340.7709), new e.VSC(2024, 5.0541, 11.0457)], m = [new e.VSC(6182981, 0.2584352, 213.2990954), new e.VSC(506578, 0.711147, 206.185548), new e.VSC(341394, 5.796358, 426.598191), new e.VSC(188491, 0.472157, 220.412642), new e.VSC(186262, 3.141593, 0), new e.VSC(143891, 1.407449, 7.113547), new e.VSC(49621, 6.01744, 103.09277), new e.VSC(20928, 5.09246, 639.89729), new e.VSC(19953, 1.1756, 419.48464), new e.VSC(18840, 1.6082, 110.20632), new e.VSC(13877, 0.75886, 199.072), new e.VSC(12893, 5.9433, 433.71174), new e.VSC(5397, 1.2885, 14.2271), new e.VSC(4869, 0.8679, 323.5054), new e.VSC(4247, 0.393, 227.5262), new e.VSC(3252, 1.2585, 95.9792), new e.VSC(3081, 3.4366, 522.5774), new e.VSC(2909, 4.6068, 202.2534), new e.VSC(2856, 2.1673, 735.8765), new e.VSC(1988, 2.4505, 412.3711), new e.VSC(1941, 6.0239, 209.3669), new e.VSC(1581, 1.2919, 210.1177), new e.VSC(1340, 4.308, 853.1964), new e.VSC(1316, 1.253, 117.3199), new e.VSC(1203, 1.8665, 316.3919), new e.VSC(1091, 0.0753, 216.4805), new e.VSC(966, 0.48, 632.784), new e.VSC(954, 5.152, 647.011), new e.VSC(898, 0.983, 529.691), new e.VSC(882, 1.885, 1052.268), new e.VSC(874, 1.402, 224.345), new e.VSC(785, 3.064, 838.969), new e.VSC(740, 1.382, 625.67), new e.VSC(658, 4.144, 309.278), new e.VSC(650, 1.725, 742.99), new e.VSC(613, 3.033, 63.736), new e.VSC(599, 2.549, 217.231), new e.VSC(503, 2.13, 3.932)], L = [new e.VSC(436902, 4.786717, 213.299095), new e.VSC(71923, 2.5007, 206.18555), new e.VSC(49767, 4.97168, 220.41264), new e.VSC(43221, 3.8694, 426.59819), new e.VSC(29646, 5.9631, 7.11355), new e.VSC(4721, 2.4753, 199.072), new e.VSC(4142, 4.1067, 433.7117), new e.VSC(3789, 3.0977, 639.8973), new e.VSC(2964, 1.3721, 103.0928), new e.VSC(2556, 2.8507, 419.4846), new e.VSC(2327, 0, 0), new e.VSC(2208, 6.2759, 110.2063), new e.VSC(2188, 5.8555, 14.2271), new e.VSC(1957, 4.9245, 227.5262), new e.VSC(924, 5.464, 323.505), new e.VSC(706, 2.971, 95.979), new e.VSC(546, 4.129, 412.371), new e.VSC(431, 5.178, 522.577), new e.VSC(405, 4.173, 209.367), new e.VSC(391, 4.481, 216.48), new e.VSC(374, 5.834, 117.32), new e.VSC(361, 3.277, 647.011), new e.VSC(356, 3.192, 210.118), new e.VSC(326, 2.269, 853.196), new e.VSC(207, 4.022, 735.877), new e.VSC(204, 0.088, 202.253), new e.VSC(180, 3.597, 632.784), new e.VSC(178, 4.097, 440.825), new e.VSC(154, 3.135, 625.67), new e.VSC(148, 0.136, 302.165), new e.VSC(133, 2.594, 191.958), new e.VSC(132, 5.933, 309.278)], A = [new e.VSC(20315, 3.02187, 213.2991), new e.VSC(8924, 3.1914, 220.4126), new e.VSC(6909, 4.3517, 206.1855), new e.VSC(4087, 4.2241, 7.1135), new e.VSC(3879, 2.0106, 426.5982), new e.VSC(1071, 4.2036, 199.072), new e.VSC(907, 2.283, 433.712), new e.VSC(606, 3.175, 227.526), new e.VSC(597, 4.135, 14.227), new e.VSC(483, 1.173, 639.897), new e.VSC(393, 0, 0), new e.VSC(229, 4.698, 419.485), new e.VSC(188, 4.59, 110.206), new e.VSC(150, 3.202, 103.093), new e.VSC(121, 3.768, 323.505), new e.VSC(102, 4.71, 95.979), new e.VSC(101, 5.819, 412.371), new e.VSC(93, 1.44, 647.01), new e.VSC(84, 2.63, 216.48), new e.VSC(73, 4.15, 117.32), new e.VSC(62, 2.31, 440.83), new e.VSC(55, 0.31, 853.2), new e.VSC(50, 2.39, 209.37), new e.VSC(45, 4.37, 191.96), new e.VSC(41, 0.69, 522.58), new e.VSC(40, 1.84, 302.16), new e.VSC(38, 5.94, 88.87), new e.VSC(32, 4.01, 21.34)], K = [new e.VSC(1202, 1.415, 220.4126), new e.VSC(708, 1.162, 213.299), new e.VSC(516, 6.24, 206.186), new e.VSC(427, 2.469, 7.114), new e.VSC(268, 0.187, 426.598), new e.VSC(170, 5.959, 199.072), new e.VSC(150, 0.48, 433.712), new e.VSC(145, 1.442, 227.526), new e.VSC(121, 2.405, 14.227), new e.VSC(47, 5.57, 639.9), new e.VSC(19, 5.86, 647.01), new e.VSC(17, 0.53, 440.83), new e.VSC(16, 2.9, 110.21), new e.VSC(15, 0.3, 419.48), new e.VSC(14, 1.3, 412.37), new e.VSC(13, 2.09, 323.51), new e.VSC(11, 0.22, 95.98), new e.VSC(11, 2.46, 117.32), new e.VSC(10, 3.14, 0), new e.VSC(9, 1.56, 88.87), new e.VSC(9, 2.28, 21.34), new e.VSC(9, 0.68, 216.48), new e.VSC(8, 1.27, 234.64)], T = [new e.VSC(129, 5.913, 220.413), new e.VSC(32, 0.69, 7.11), new e.VSC(27, 5.91, 227.53), new e.VSC(20, 4.95, 433.71), new e.VSC(20, 0.67, 14.23), new e.VSC(14, 2.67, 206.19), new e.VSC(14, 1.46, 199.07), new e.VSC(13, 4.59, 426.6), new e.VSC(7, 4.63, 213.3), new e.VSC(5, 3.61, 639.9), new e.VSC(4, 4.9, 440.83), new e.VSC(3, 4.07, 647.01), new e.VSC(3, 4.66, 191.96), new e.VSC(3, 0.49, 323.51), new e.VSC(3, 3.18, 419.48), new e.VSC(2, 3.7, 88.87), new e.VSC(2, 3.32, 95.98), new e.VSC(2, 0.56, 117.32)];
              function w() {
              }
              w.eclipticLongitude = function(R) {
                var O = (R - 2451545) / 365250, W = O * O, N = W * O, $ = N * O, S = $ * O, I = _.length, x = 0, P;
                for (P = 0; P < I; P++)
                  x += _[P].a * Math.cos(_[P].b + _[P].c * O);
                var d = r.length, U = 0;
                for (P = 0; P < d; P++)
                  U += r[P].a * Math.cos(r[P].b + r[P].c * O);
                var F = o.length, X = 0;
                for (P = 0; P < F; P++)
                  X += o[P].a * Math.cos(o[P].b + o[P].c * O);
                var Y = c.length, M = 0;
                for (P = 0; P < Y; P++)
                  M += c[P].a * Math.cos(c[P].b + c[P].c * O);
                var B = l.length, D = 0;
                for (P = 0; P < B; P++)
                  D += l[P].a * Math.cos(l[P].b + l[P].c * O);
                var k = g.length, G = 0;
                for (P = 0; P < k; P++)
                  G += g[P].a * Math.cos(g[P].b + g[P].c * O);
                var j = (x + U * O + X * W + M * N + D * $ + G * S) / 1e8;
                return j = n.CT.m360(n.CT.r2D(j)), j;
              }, w.eclipticLatitude = function(R) {
                var O = (R - 2451545) / 365250, W = O * O, N = W * O, $ = N * O, S = $ * O, I = a.length, x = 0, P;
                for (P = 0; P < I; P++)
                  x += a[P].a * Math.cos(a[P].b + a[P].c * O);
                var d = b.length, U = 0;
                for (P = 0; P < d; P++)
                  U += b[P].a * Math.cos(b[P].b + b[P].c * O);
                var F = V.length, X = 0;
                for (P = 0; P < F; P++)
                  X += V[P].a * Math.cos(V[P].b + V[P].c * O);
                var Y = y.length, M = 0;
                for (P = 0; P < Y; P++)
                  M += y[P].a * Math.cos(y[P].b + y[P].c * O);
                var B = C.length, D = 0;
                for (P = 0; P < B; P++)
                  D += C[P].a * Math.cos(C[P].b + C[P].c * O);
                var k = E.length, G = 0;
                for (P = 0; P < k; P++)
                  G += E[P].a * Math.cos(E[P].b + E[P].c * O);
                var j = (x + U * O + X * W + M * N + D * $ + G * S) / 1e8;
                return j = n.CT.r2D(j), j;
              }, w.radiusVector = function(R) {
                var O = (R - 2451545) / 365250, W = O * O, N = W * O, $ = N * O, S = $ * O, I = v.length, x = 0, P;
                for (P = 0; P < I; P++)
                  x += v[P].a * Math.cos(v[P].b + v[P].c * O);
                var d = m.length, U = 0;
                for (P = 0; P < d; P++)
                  U += m[P].a * Math.cos(m[P].b + m[P].c * O);
                var F = L.length, X = 0;
                for (P = 0; P < F; P++)
                  X += L[P].a * Math.cos(L[P].b + L[P].c * O);
                var Y = A.length, M = 0;
                for (P = 0; P < Y; P++)
                  M += A[P].a * Math.cos(A[P].b + A[P].c * O);
                var B = K.length, D = 0;
                for (P = 0; P < B; P++)
                  D += K[P].a * Math.cos(K[P].b + K[P].c * O);
                var k = T.length, G = 0;
                for (P = 0; P < k; P++)
                  G += T[P].a * Math.cos(T[P].b + T[P].c * O);
                return (x + U * O + X * W + M * N + D * $ + G * S) / 1e8;
              };
              var f = {};
              (0, t.registerType)("CAASaturn", [w, f, null]);
            }
          ),
          /***/
          "./esm/astrocalc/saturn_rings.js": (
            /*!***************************************!*\
              !*** ./esm/astrocalc/saturn_rings.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAASaturnRingDetails: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                CAASaturnRings: () => (
                  /* binding */
                  a
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./fk5.js */
                "./esm/astrocalc/fk5.js"
              ), _ = i(
                /*! ./elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), r = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              ), o = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), c = i(
                /*! ./saturn.js */
                "./esm/astrocalc/saturn.js"
              );
              function l() {
                this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0, this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0;
              }
              var g = {};
              (0, t.registerType)("CAASaturnRingDetails", [l, g, null]);
              function a() {
              }
              a.calculate = function(V) {
                var y = new l(), C = (V - 2451545) / 36525, E = C * C, v = 28.075216 - 0.012998 * C + 4e-6 * E, m = n.CT.d2R(v), L = 169.50847 + 1.394681 * C + 412e-6 * E, A = n.CT.d2R(L), K = o.CAAEarth.eclipticLongitude(V), T = o.CAAEarth.eclipticLatitude(V);
                K += e.CAAFK5.correctionInLongitude(K, T, V);
                var w = n.CT.d2R(K);
                T += e.CAAFK5.correctionInLatitude(K, V);
                for (var f = n.CT.d2R(T), R = o.CAAEarth.radiusVector(V), O = 9, W = 0, N = _.ELL.distanceToLightTime(O), $ = V - N, S = !0, I = 0, x = 0, P = 0, d = 0, U = 0, F = 0; S; ) {
                  d = c.CAASaturn.eclipticLongitude($), U = c.CAASaturn.eclipticLatitude($), d += e.CAAFK5.correctionInLongitude(d, U, $), U += e.CAAFK5.correctionInLatitude(d, $);
                  var X = n.CT.d2R(d), Y = n.CT.d2R(U);
                  F = c.CAASaturn.radiusVector($), I = F * Math.cos(Y) * Math.cos(X) - R * Math.cos(w), x = F * Math.cos(Y) * Math.sin(X) - R * Math.sin(w), P = F * Math.sin(Y) - R * Math.sin(f), O = Math.sqrt(I * I + x * x + P * P), N = _.ELL.distanceToLightTime(O), S = Math.abs(N - W) > 2e-6, S && ($ = V - N, W = N);
                }
                var M = Math.atan2(x, I), B = Math.atan2(P, Math.sqrt(I * I + x * x));
                y.b = Math.asin(Math.sin(m) * Math.cos(B) * Math.sin(M - A) - Math.cos(m) * Math.sin(B)), y.a = 375.35 / O, y.b = y.a * Math.sin(Math.abs(y.b)), y.b = n.CT.r2D(y.b);
                var D = 113.6655 + 0.8771 * C, k = n.CT.d2R(D), G = d - 0.01759 / F, j = n.CT.d2R(G), ee = U - 764e-6 * Math.cos(j - k) / F, Z = n.CT.d2R(ee);
                y.bdash = n.CT.r2D(Math.asin(Math.sin(m) * Math.cos(Z) * Math.sin(j - A) - Math.cos(m) * Math.sin(Z)));
                var z = Math.atan2(Math.sin(m) * Math.sin(Z) + Math.cos(m) * Math.cos(Z) * Math.sin(j - A), Math.cos(Z) * Math.cos(j - A)), te = Math.atan2(Math.sin(m) * Math.sin(B) + Math.cos(m) * Math.cos(B) * Math.sin(M - A), Math.cos(B) * Math.cos(M - A));
                y.deltaU = n.CT.r2D(Math.abs(z - te));
                var re = r.CAANutation.trueObliquityOfEcliptic(V), le = r.CAANutation.nutationInLongitude(V), ae = L - 90, oe = 90 - v;
                M += n.CT.d2R(5693e-6 * Math.cos(w - M) / Math.cos(B)), B += n.CT.d2R(5693e-6 * Math.sin(w - M) * Math.sin(B)), M = n.CT.r2D(M), M += le / 3600, M = n.CT.m360(M), ae += le / 3600, ae = n.CT.m360(ae), B = n.CT.r2D(B);
                var de = n.CT.ec2Eq(M, B, re), ve = n.CT.h2R(de.x), ce = n.CT.d2R(de.y), he = n.CT.ec2Eq(ae, oe, re), ye = n.CT.h2R(he.x), fe = n.CT.d2R(he.y);
                return y.p = n.CT.r2D(Math.atan2(Math.cos(fe) * Math.sin(ye - ve), Math.sin(fe) * Math.cos(ce) - Math.cos(fe) * Math.sin(ce) * Math.cos(ye - ve))), y;
              };
              var b = {};
              (0, t.registerType)("CAASaturnRings", [a, b, null]);
            }
          ),
          /***/
          "./esm/astrocalc/sidereal.js": (
            /*!***********************************!*\
              !*** ./esm/astrocalc/sidereal.js ***!
              \***********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAASidereal: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./date.js */
                "./esm/astrocalc/date.js"
              ), _ = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), r = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              );
              function o() {
              }
              o.meanGreenwichSiderealTime = function(l) {
                var g = new e.DT();
                g.setJD(l, e.DT.afterPapalReformJD(l));
                var a = g.get(), b = n.ss.truncate(a[0]), V = n.ss.truncate(a[1]), y = n.ss.truncate(a[2]), C = n.ss.truncate(a[3]), E = n.ss.truncate(a[4]), v = a[5];
                g.set(b, V, y, 0, 0, 0, g.inGregorianCalendar());
                var m = g.julian(), L = (m - 2451545) / 36525, A = L * L, K = A * L, T = 100.46061837 + 36000.770053608 * L + 387933e-9 * A - K / 3871e4;
                return T += (C * 15 + E * 0.25 + v * 0.00416666666666667) * 1.00273790935, T = _.CT.d2H(T), _.CT.m24(T);
              }, o.apparentGreenwichSiderealTime = function(l) {
                var g = r.CAANutation.meanObliquityOfEcliptic(l), a = g + r.CAANutation.nutationInObliquity(l) / 3600, b = r.CAANutation.nutationInLongitude(l), V = o.meanGreenwichSiderealTime(l) + b * Math.cos(_.CT.d2R(a)) / 54e3;
                return _.CT.m24(V);
              };
              var c = {};
              (0, t.registerType)("CAASidereal", [o, c, null]);
            }
          ),
          /***/
          "./esm/astrocalc/stellar_magnitudes.js": (
            /*!*********************************************!*\
              !*** ./esm/astrocalc/stellar_magnitudes.js ***!
              \*********************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAStellarMagnitudes: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              );
              function e() {
              }
              e.combinedMagnitude = function(r, o) {
                var c = 0.4 * (o - r);
                return o - 2.5 * n.Util.log10(Math.pow(10, c) + 1);
              }, e.combinedMagnitude2 = function(r, o) {
                for (var c = 0, l = 0; l < r; l++)
                  c += Math.pow(10, -0.4 * o[l]);
                return -2.5 * n.Util.log10(c);
              }, e.brightnessRatio = function(r, o) {
                var c = 0.4 * (o - r);
                return Math.pow(10, c);
              }, e.magnitudeDifference = function(r) {
                return 2.5 * n.Util.log10(r);
              };
              var _ = {};
              (0, t.registerType)("CAAStellarMagnitudes", [e, _, null]);
            }
          ),
          /***/
          "./esm/astrocalc/sun.js": (
            /*!******************************!*\
              !*** ./esm/astrocalc/sun.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAASun: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              ), _ = i(
                /*! ./fk5.js */
                "./esm/astrocalc/fk5.js"
              ), r = i(
                /*! ./nutation.js */
                "./esm/astrocalc/nutation.js"
              );
              function o() {
              }
              o.geometricEclipticLongitude = function(l) {
                return n.CT.m360(e.CAAEarth.eclipticLongitude(l) + 180);
              }, o.geometricEclipticLatitude = function(l) {
                return -e.CAAEarth.eclipticLatitude(l);
              }, o.geometricEclipticLongitudeJ2000 = function(l) {
                return n.CT.m360(e.CAAEarth.eclipticLongitudeJ2000(l) + 180);
              }, o.geometricEclipticLatitudeJ2000 = function(l) {
                return -e.CAAEarth.eclipticLatitudeJ2000(l);
              }, o.geometricFK5EclipticLongitude = function(l) {
                var g = o.geometricEclipticLongitude(l), a = o.geometricEclipticLatitude(l);
                return g += _.CAAFK5.correctionInLongitude(g, a, l), g;
              }, o.geometricFK5EclipticLatitude = function(l) {
                var g = o.geometricEclipticLongitude(l), a = o.geometricEclipticLatitude(l), b = _.CAAFK5.correctionInLatitude(g, l);
                return a += b, a;
              }, o.apparentEclipticLongitude = function(l) {
                var g = o.geometricFK5EclipticLongitude(l);
                g += n.CT.dmS2D(0, 0, r.CAANutation.nutationInLongitude(l));
                var a = e.CAAEarth.radiusVector(l);
                return g -= n.CT.dmS2D(0, 0, 20.4898 / a), g;
              }, o.apparentEclipticLatitude = function(l) {
                return o.geometricFK5EclipticLatitude(l);
              }, o.eclipticRectangularCoordinatesMeanEquinox = function(l) {
                var g = n.CT.d2R(o.geometricFK5EclipticLongitude(l)), a = n.CT.d2R(o.geometricFK5EclipticLatitude(l)), b = e.CAAEarth.radiusVector(l), V = n.CT.d2R(r.CAANutation.meanObliquityOfEcliptic(l)), y = new n.C3D();
                return y.x = b * Math.cos(a) * Math.cos(g), y.y = b * (Math.cos(a) * Math.sin(g) * Math.cos(V) - Math.sin(a) * Math.sin(V)), y.z = b * (Math.cos(a) * Math.sin(g) * Math.sin(V) + Math.sin(a) * Math.cos(V)), y;
              }, o.eclipticRectangularCoordinatesJ2000 = function(l) {
                var g = o.geometricEclipticLongitudeJ2000(l);
                g = n.CT.d2R(g);
                var a = o.geometricEclipticLatitudeJ2000(l);
                a = n.CT.d2R(a);
                var b = e.CAAEarth.radiusVector(l), V = new n.C3D(), y = Math.cos(a);
                return V.x = b * y * Math.cos(g), V.y = b * y * Math.sin(g), V.z = b * Math.sin(a), V;
              }, o.equatorialRectangularCoordinatesJ2000 = function(l) {
                var g = o.eclipticRectangularCoordinatesJ2000(l);
                return g = _.CAAFK5.convertVSOPToFK5J2000(g), g;
              }, o.equatorialRectangularCoordinatesB1950 = function(l) {
                var g = o.eclipticRectangularCoordinatesJ2000(l);
                return g = _.CAAFK5.convertVSOPToFK5B1950(g), g;
              }, o.equatorialRectangularCoordinatesAnyEquinox = function(l, g) {
                var a = o.equatorialRectangularCoordinatesJ2000(l);
                return a = _.CAAFK5.convertVSOPToFK5AnyEquinox(a, g), a;
              };
              var c = {};
              (0, t.registerType)("CAASun", [o, c, null]);
            }
          ),
          /***/
          "./esm/astrocalc/uranus.js": (
            /*!*********************************!*\
              !*** ./esm/astrocalc/uranus.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAUranus: () => (
                  /* binding */
                  A
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(548129294, 0, 0), new e.VSC(9260408, 0.8910642, 74.7815986), new e.VSC(1504248, 3.6271926, 1.4844727), new e.VSC(365982, 1.899622, 73.297126), new e.VSC(272328, 3.358237, 149.563197), new e.VSC(70328, 5.39254, 63.7359), new e.VSC(68893, 6.09292, 76.26607), new e.VSC(61999, 2.26952, 2.96895), new e.VSC(61951, 2.85099, 11.0457), new e.VSC(26469, 3.14152, 71.81265), new e.VSC(25711, 6.1138, 454.90937), new e.VSC(21079, 4.36059, 148.07872), new e.VSC(17819, 1.74437, 36.64856), new e.VSC(14613, 4.73732, 3.93215), new e.VSC(11163, 5.82682, 224.3448), new e.VSC(10998, 0.48865, 138.5175), new e.VSC(9527, 2.9552, 35.1641), new e.VSC(7546, 5.2363, 109.9457), new e.VSC(4220, 3.2333, 70.8494), new e.VSC(4052, 2.2775, 151.0477), new e.VSC(3490, 5.4831, 146.5943), new e.VSC(3355, 1.0655, 4.4534), new e.VSC(3144, 4.752, 77.7505), new e.VSC(2927, 4.629, 9.5612), new e.VSC(2922, 5.3524, 85.8273), new e.VSC(2273, 4.366, 70.3282), new e.VSC(2149, 0.6075, 38.133), new e.VSC(2051, 1.5177, 0.1119), new e.VSC(1992, 4.9244, 277.035), new e.VSC(1667, 3.6274, 380.1278), new e.VSC(1533, 2.5859, 52.6902), new e.VSC(1376, 2.0428, 65.2204), new e.VSC(1372, 4.1964, 111.4302), new e.VSC(1284, 3.1135, 202.2534), new e.VSC(1282, 0.5427, 222.8603), new e.VSC(1244, 0.9161, 2.4477), new e.VSC(1221, 0.199, 108.4612), new e.VSC(1151, 4.179, 33.6796), new e.VSC(1150, 0.9334, 3.1814), new e.VSC(1090, 1.775, 12.5302), new e.VSC(1072, 0.2356, 62.2514), new e.VSC(946, 1.192, 127.472), new e.VSC(708, 5.183, 213.299), new e.VSC(653, 0.966, 78.714), new e.VSC(628, 0.182, 984.6), new e.VSC(607, 5.432, 529.691), new e.VSC(559, 3.358, 0.521), new e.VSC(524, 2.013, 299.126), new e.VSC(483, 2.106, 0.963), new e.VSC(471, 1.407, 184.727), new e.VSC(467, 0.415, 145.11), new e.VSC(434, 5.521, 183.243), new e.VSC(405, 5.987, 8.077), new e.VSC(399, 0.338, 415.552), new e.VSC(396, 5.87, 351.817), new e.VSC(379, 2.35, 56.622), new e.VSC(310, 5.833, 145.631), new e.VSC(300, 5.644, 22.091), new e.VSC(294, 5.839, 39.618), new e.VSC(252, 1.637, 221.376), new e.VSC(249, 4.746, 225.829), new e.VSC(239, 2.35, 137.033), new e.VSC(224, 0.516, 84.343), new e.VSC(223, 2.843, 0.261), new e.VSC(220, 1.922, 67.668), new e.VSC(217, 6.142, 5.938), new e.VSC(216, 4.778, 340.771), new e.VSC(208, 5.58, 68.844), new e.VSC(202, 1.297, 0.048), new e.VSC(199, 0.956, 152.532), new e.VSC(194, 1.888, 456.394), new e.VSC(193, 0.916, 453.425), new e.VSC(187, 1.319, 0.16), new e.VSC(182, 3.536, 79.235), new e.VSC(173, 1.539, 160.609), new e.VSC(172, 5.68, 219.891), new e.VSC(170, 3.677, 5.417), new e.VSC(169, 5.879, 18.159), new e.VSC(165, 1.424, 106.977), new e.VSC(163, 3.05, 112.915), new e.VSC(158, 0.738, 54.175), new e.VSC(147, 1.263, 59.804), new e.VSC(143, 1.3, 35.425), new e.VSC(139, 5.386, 32.195), new e.VSC(139, 4.26, 909.819), new e.VSC(124, 1.374, 7.114), new e.VSC(110, 2.027, 554.07), new e.VSC(109, 5.706, 77.963), new e.VSC(104, 5.028, 0.751), new e.VSC(104, 1.458, 24.379), new e.VSC(103, 0.681, 14.978)], r = [new e.VSC(7502543122, 0, 0), new e.VSC(154458, 5.242017, 74.781599), new e.VSC(24456, 1.71256, 1.48447), new e.VSC(9258, 0.4284, 11.0457), new e.VSC(8266, 1.5022, 63.7359), new e.VSC(7842, 1.3198, 149.5632), new e.VSC(3899, 0.4648, 3.9322), new e.VSC(2284, 4.1737, 76.2661), new e.VSC(1927, 0.5301, 2.9689), new e.VSC(1233, 1.5863, 70.8494), new e.VSC(791, 5.436, 3.181), new e.VSC(767, 1.996, 73.297), new e.VSC(482, 2.984, 85.827), new e.VSC(450, 4.138, 138.517), new e.VSC(446, 3.723, 224.345), new e.VSC(427, 4.731, 71.813), new e.VSC(354, 2.583, 148.079), new e.VSC(348, 2.454, 9.561), new e.VSC(317, 5.579, 52.69), new e.VSC(206, 2.363, 2.448), new e.VSC(189, 4.202, 56.622), new e.VSC(184, 0.284, 151.048), new e.VSC(180, 5.684, 12.53), new e.VSC(171, 3.001, 78.714), new e.VSC(158, 2.909, 0.963), new e.VSC(155, 5.591, 4.453), new e.VSC(154, 4.652, 35.164), new e.VSC(152, 2.942, 77.751), new e.VSC(143, 2.59, 62.251), new e.VSC(121, 4.148, 127.472), new e.VSC(116, 3.732, 65.22), new e.VSC(102, 4.188, 145.631), new e.VSC(102, 6.034, 0.112), new e.VSC(88, 3.99, 18.16), new e.VSC(88, 6.16, 202.25), new e.VSC(81, 2.64, 22.09), new e.VSC(72, 6.05, 70.33), new e.VSC(69, 4.05, 77.96), new e.VSC(59, 3.7, 67.67), new e.VSC(47, 3.54, 351.82), new e.VSC(44, 5.91, 7.11), new e.VSC(43, 5.72, 5.42), new e.VSC(39, 4.92, 222.86), new e.VSC(36, 5.9, 33.68), new e.VSC(36, 3.29, 8.08), new e.VSC(36, 3.33, 71.6), new e.VSC(35, 5.08, 38.13), new e.VSC(31, 5.62, 984.6), new e.VSC(31, 5.5, 59.8), new e.VSC(31, 5.46, 160.61), new e.VSC(30, 1.66, 447.8), new e.VSC(29, 1.15, 462.02), new e.VSC(29, 4.52, 84.34), new e.VSC(27, 5.54, 131.4), new e.VSC(27, 6.15, 299.13), new e.VSC(26, 4.99, 137.03), new e.VSC(25, 5.74, 380.13)], o = [new e.VSC(53033, 0, 0), new e.VSC(2358, 2.2601, 74.7816), new e.VSC(769, 4.526, 11.046), new e.VSC(552, 3.258, 63.736), new e.VSC(542, 2.276, 3.932), new e.VSC(529, 4.923, 1.484), new e.VSC(258, 3.691, 3.181), new e.VSC(239, 5.858, 149.563), new e.VSC(182, 6.218, 70.849), new e.VSC(54, 1.44, 76.27), new e.VSC(49, 6.03, 56.62), new e.VSC(45, 3.91, 2.45), new e.VSC(45, 0.81, 85.83), new e.VSC(38, 1.78, 52.69), new e.VSC(37, 4.46, 2.97), new e.VSC(33, 0.86, 9.56), new e.VSC(29, 5.1, 73.3), new e.VSC(24, 2.11, 18.16), new e.VSC(22, 5.99, 138.52), new e.VSC(22, 4.82, 78.71), new e.VSC(21, 2.4, 77.96), new e.VSC(21, 2.17, 224.34), new e.VSC(17, 2.54, 145.63), new e.VSC(17, 3.47, 12.53), new e.VSC(12, 0.02, 22.09), new e.VSC(11, 0.08, 127.47), new e.VSC(10, 5.16, 71.6), new e.VSC(10, 4.46, 62.25), new e.VSC(9, 4.26, 7.11), new e.VSC(8, 5.5, 67.67), new e.VSC(7, 1.25, 5.42), new e.VSC(6, 3.36, 447.8), new e.VSC(6, 5.45, 65.22), new e.VSC(6, 4.52, 151.05), new e.VSC(6, 5.73, 462.02)], c = [new e.VSC(121, 0.024, 74.782), new e.VSC(68, 4.12, 3.93), new e.VSC(53, 2.39, 11.05), new e.VSC(46, 0, 0), new e.VSC(45, 2.04, 3.18), new e.VSC(44, 2.96, 1.48), new e.VSC(25, 4.89, 63.74), new e.VSC(21, 4.55, 70.85), new e.VSC(20, 2.31, 149.56), new e.VSC(9, 1.58, 56.62), new e.VSC(4, 0.23, 18.16), new e.VSC(4, 5.39, 76.27), new e.VSC(4, 0.95, 77.96), new e.VSC(3, 4.98, 85.83), new e.VSC(3, 4.13, 52.69), new e.VSC(3, 0.37, 78.71), new e.VSC(2, 0.86, 145.63), new e.VSC(2, 5.66, 9.56)], l = [new e.VSC(114, 3.142, 0), new e.VSC(6, 4.58, 74.78), new e.VSC(3, 0.35, 11.05), new e.VSC(1, 3.42, 56.62)], g = [new e.VSC(1346278, 2.6187781, 74.7815986), new e.VSC(62341, 5.08111, 149.5632), new e.VSC(61601, 3.14159, 0), new e.VSC(9964, 1.616, 76.2661), new e.VSC(9926, 0.5763, 73.2971), new e.VSC(3259, 1.2612, 224.3448), new e.VSC(2972, 2.2437, 1.4845), new e.VSC(2010, 6.0555, 148.0787), new e.VSC(1522, 0.2796, 63.7359), new e.VSC(924, 4.038, 151.048), new e.VSC(761, 6.14, 71.813), new e.VSC(522, 3.321, 138.517), new e.VSC(463, 0.743, 85.827), new e.VSC(437, 3.381, 529.691), new e.VSC(435, 0.341, 77.751), new e.VSC(431, 3.554, 213.299), new e.VSC(420, 5.213, 11.046), new e.VSC(245, 0.788, 2.969), new e.VSC(233, 2.257, 222.86), new e.VSC(216, 1.591, 38.133), new e.VSC(180, 3.725, 299.126), new e.VSC(175, 1.236, 146.594), new e.VSC(174, 1.937, 380.128), new e.VSC(160, 5.336, 111.43), new e.VSC(144, 5.962, 35.164), new e.VSC(116, 5.739, 70.849), new e.VSC(106, 0.941, 70.328), new e.VSC(102, 2.619, 78.714)], a = [new e.VSC(206366, 4.123943, 74.781599), new e.VSC(8563, 0.3382, 149.5632), new e.VSC(1726, 2.1219, 73.2971), new e.VSC(1374, 0, 0), new e.VSC(1369, 3.0686, 76.2661), new e.VSC(451, 3.777, 1.484), new e.VSC(400, 2.848, 224.345), new e.VSC(307, 1.255, 148.079), new e.VSC(154, 3.786, 63.736), new e.VSC(112, 5.573, 151.048), new e.VSC(111, 5.329, 138.517), new e.VSC(83, 3.59, 71.81), new e.VSC(56, 3.4, 85.83), new e.VSC(54, 1.7, 77.75), new e.VSC(42, 1.21, 11.05), new e.VSC(41, 4.45, 78.71), new e.VSC(32, 3.77, 222.86), new e.VSC(30, 2.56, 2.97), new e.VSC(27, 5.34, 213.3), new e.VSC(26, 0.42, 380.13)], b = [new e.VSC(9212, 5.8004, 74.7816), new e.VSC(557, 0, 0), new e.VSC(286, 2.177, 149.563), new e.VSC(95, 3.84, 73.3), new e.VSC(45, 4.88, 76.27), new e.VSC(20, 5.46, 1.48), new e.VSC(15, 0.88, 138.52), new e.VSC(14, 2.85, 148.08), new e.VSC(14, 5.07, 63.74), new e.VSC(10, 5, 224.34), new e.VSC(8, 6.27, 78.71)], V = [new e.VSC(268, 1.251, 74.782), new e.VSC(11, 3.14, 0), new e.VSC(6, 4.01, 149.56), new e.VSC(3, 5.78, 73.3)], y = [new e.VSC(6, 2.85, 74.78)], C = [new e.VSC(1921264848, 0, 0), new e.VSC(88784984, 5.60377527, 74.78159857), new e.VSC(3440836, 0.328361, 73.2971259), new e.VSC(2055653, 1.7829517, 149.5631971), new e.VSC(649322, 4.522473, 76.266071), new e.VSC(602248, 3.860038, 63.735898), new e.VSC(496404, 1.401399, 454.909367), new e.VSC(338526, 1.580027, 138.517497), new e.VSC(243508, 1.570866, 71.812653), new e.VSC(190522, 1.998094, 1.484473), new e.VSC(161858, 2.791379, 148.078724), new e.VSC(143706, 1.383686, 11.0457), new e.VSC(93192, 0.17437, 36.64856), new e.VSC(89806, 3.66105, 109.94569), new e.VSC(71424, 4.24509, 224.3448), new e.VSC(46677, 1.39977, 35.16409), new e.VSC(39026, 3.36235, 277.03499), new e.VSC(39010, 1.66971, 70.84945), new e.VSC(36755, 3.88649, 146.59425), new e.VSC(30349, 0.701, 151.04767), new e.VSC(29156, 3.18056, 77.75054), new e.VSC(25786, 3.78538, 85.8273), new e.VSC(25620, 5.25656, 380.12777), new e.VSC(22637, 0.72519, 529.69097), new e.VSC(20473, 2.7964, 70.32818), new e.VSC(20472, 1.55589, 202.2534), new e.VSC(17901, 0.55455, 2.96895), new e.VSC(15503, 5.35405, 38.13304), new e.VSC(14702, 4.90434, 108.46122), new e.VSC(12897, 2.62154, 111.43016), new e.VSC(12328, 5.96039, 127.4718), new e.VSC(11959, 1.75044, 984.60033), new e.VSC(11853, 0.99343, 52.6902), new e.VSC(11696, 3.29826, 3.93215), new e.VSC(11495, 0.43774, 65.22037), new e.VSC(10793, 1.42105, 213.2991), new e.VSC(9111, 4.9964, 62.2514), new e.VSC(8421, 5.2535, 222.8603), new e.VSC(8402, 5.0388, 415.5525), new e.VSC(7449, 0.7949, 351.8166), new e.VSC(7329, 3.9728, 183.2428), new e.VSC(6046, 5.6796, 78.7138), new e.VSC(5524, 3.115, 9.5612), new e.VSC(5445, 5.1058, 145.1098), new e.VSC(5238, 2.6296, 33.6796), new e.VSC(4079, 3.2206, 340.7709), new e.VSC(3919, 4.2502, 39.6175), new e.VSC(3802, 6.1099, 184.7273), new e.VSC(3781, 3.4584, 456.3938), new e.VSC(3687, 2.4872, 453.4249), new e.VSC(3102, 4.1403, 219.8914), new e.VSC(2963, 0.8298, 56.6224), new e.VSC(2942, 0.4239, 299.1264), new e.VSC(2940, 2.1464, 137.033), new e.VSC(2938, 3.6766, 140.002), new e.VSC(2865, 0.31, 12.5302), new e.VSC(2538, 4.8546, 131.4039), new e.VSC(2364, 0.4425, 554.07), new e.VSC(2183, 2.9404, 305.3462)], E = [new e.VSC(1479896, 3.6720571, 74.7815986), new e.VSC(71212, 6.22601, 63.7359), new e.VSC(68627, 6.13411, 149.5632), new e.VSC(24060, 3.14159, 0), new e.VSC(21468, 2.60177, 76.26607), new e.VSC(20857, 5.24625, 11.0457), new e.VSC(11405, 0.01848, 70.84945), new e.VSC(7497, 0.4236, 73.2971), new e.VSC(4244, 1.4169, 85.8273), new e.VSC(3927, 3.1551, 71.8127), new e.VSC(3578, 2.3116, 224.3448), new e.VSC(3506, 2.5835, 138.5175), new e.VSC(3229, 5.255, 3.9322), new e.VSC(3060, 0.1532, 1.4845), new e.VSC(2564, 0.9808, 148.0787), new e.VSC(2429, 3.9944, 52.6902), new e.VSC(1645, 2.6535, 127.4718), new e.VSC(1584, 1.4305, 78.7138), new e.VSC(1508, 5.06, 151.0477), new e.VSC(1490, 2.6756, 56.6224), new e.VSC(1413, 4.5746, 202.2534), new e.VSC(1403, 1.3699, 77.7505), new e.VSC(1228, 1.047, 62.2514), new e.VSC(1033, 0.2646, 131.4039), new e.VSC(992, 2.172, 65.22), new e.VSC(862, 5.055, 351.817), new e.VSC(744, 3.076, 35.164), new e.VSC(687, 2.499, 77.963), new e.VSC(647, 4.473, 70.328), new e.VSC(624, 0.863, 9.561), new e.VSC(604, 0.907, 984.6), new e.VSC(575, 3.231, 447.796), new e.VSC(562, 2.718, 462.023), new e.VSC(530, 5.917, 213.299), new e.VSC(528, 5.151, 2.969)], v = [new e.VSC(22440, 0.69953, 74.7816), new e.VSC(4727, 1.699, 63.7359), new e.VSC(1682, 4.6483, 70.8494), new e.VSC(1650, 3.0966, 11.0457), new e.VSC(1434, 3.5212, 149.5632), new e.VSC(770, 0, 0), new e.VSC(500, 6.172, 76.266), new e.VSC(461, 0.767, 3.932), new e.VSC(390, 4.496, 56.622), new e.VSC(390, 5.527, 85.827), new e.VSC(292, 0.204, 52.69), new e.VSC(287, 3.534, 73.297), new e.VSC(273, 3.847, 138.517), new e.VSC(220, 1.964, 131.404), new e.VSC(216, 0.848, 77.963), new e.VSC(205, 3.248, 78.714), new e.VSC(149, 4.898, 127.472), new e.VSC(129, 2.081, 3.181)], m = [new e.VSC(1164, 4.7345, 74.7816), new e.VSC(212, 3.343, 63.736), new e.VSC(196, 2.98, 70.849), new e.VSC(105, 0.958, 11.046), new e.VSC(73, 1, 149.56), new e.VSC(72, 0.03, 56.62), new e.VSC(55, 2.59, 3.93), new e.VSC(36, 5.65, 77.96), new e.VSC(34, 3.82, 76.27), new e.VSC(32, 3.6, 131.4)], L = [new e.VSC(53, 3.01, 74.78), new e.VSC(10, 1.91, 56.62)];
              function A() {
              }
              A.eclipticLongitude = function(T) {
                var w = (T - 2451545) / 365250, f = w * w, R = f * w, O = R * w, W = _.length, N = 0, $;
                for ($ = 0; $ < W; $++)
                  N += _[$].a * Math.cos(_[$].b + _[$].c * w);
                var S = r.length, I = 0;
                for ($ = 0; $ < S; $++)
                  I += r[$].a * Math.cos(r[$].b + r[$].c * w);
                var x = o.length, P = 0;
                for ($ = 0; $ < x; $++)
                  P += o[$].a * Math.cos(o[$].b + o[$].c * w);
                var d = c.length, U = 0;
                for ($ = 0; $ < d; $++)
                  U += c[$].a * Math.cos(c[$].b + c[$].c * w);
                var F = l.length, X = 0;
                for ($ = 0; $ < F; $++)
                  X += l[$].a * Math.cos(l[$].b + l[$].c * w);
                var Y = (N + I * w + P * f + U * R + X * O) / 1e8;
                return Y = n.CT.m360(n.CT.r2D(Y)), Y;
              }, A.eclipticLatitude = function(T) {
                var w = (T - 2451545) / 365250, f = w * w, R = f * w, O = R * w, W = g.length, N = 0, $;
                for ($ = 0; $ < W; $++)
                  N += g[$].a * Math.cos(g[$].b + g[$].c * w);
                var S = a.length, I = 0;
                for ($ = 0; $ < S; $++)
                  I += a[$].a * Math.cos(a[$].b + a[$].c * w);
                var x = b.length, P = 0;
                for ($ = 0; $ < x; $++)
                  P += b[$].a * Math.cos(b[$].b + b[$].c * w);
                var d = V.length, U = 0;
                for ($ = 0; $ < d; $++)
                  U += V[$].a * Math.cos(V[$].b + V[$].c * w);
                var F = y.length, X = 0;
                for ($ = 0; $ < F; $++)
                  X += y[$].a * Math.cos(y[$].b + y[$].c * w);
                var Y = (N + I * w + P * f + U * R + X * O) / 1e8;
                return Y = n.CT.r2D(Y), Y;
              }, A.radiusVector = function(T) {
                var w = (T - 2451545) / 365250, f = w * w, R = f * w, O = R * w, W = C.length, N = 0, $;
                for ($ = 0; $ < W; $++)
                  N += C[$].a * Math.cos(C[$].b + C[$].c * w);
                var S = E.length, I = 0;
                for ($ = 0; $ < S; $++)
                  I += E[$].a * Math.cos(E[$].b + E[$].c * w);
                var x = v.length, P = 0;
                for ($ = 0; $ < x; $++)
                  P += v[$].a * Math.cos(v[$].b + v[$].c * w);
                var d = m.length, U = 0;
                for ($ = 0; $ < d; $++)
                  U += m[$].a * Math.cos(m[$].b + m[$].c * w);
                var F = L.length, X = 0;
                for ($ = 0; $ < F; $++)
                  X += L[$].a * Math.cos(L[$].b + L[$].c * w);
                return (N + I * w + P * f + U * R + X * O) / 1e8;
              };
              var K = {};
              (0, t.registerType)("CAAUranus", [A, K, null]);
            }
          ),
          /***/
          "./esm/astrocalc/venus.js": (
            /*!********************************!*\
              !*** ./esm/astrocalc/venus.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CAAVenus: () => (
                  /* binding */
                  K
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), e = i(
                /*! ./earth.js */
                "./esm/astrocalc/earth.js"
              );
              const _ = [new e.VSC(317614667, 0, 0), new e.VSC(1353968, 5.5931332, 10213.2855462), new e.VSC(89892, 5.3065, 20426.57109), new e.VSC(5477, 4.4163, 7860.4194), new e.VSC(3456, 2.6996, 11790.6291), new e.VSC(2372, 2.9938, 3930.2097), new e.VSC(1664, 4.2502, 1577.3435), new e.VSC(1438, 4.1575, 9683.5946), new e.VSC(1317, 5.1867, 26.2983), new e.VSC(1201, 6.1536, 30639.8566), new e.VSC(769, 0.816, 9437.763), new e.VSC(761, 1.95, 529.691), new e.VSC(708, 1.065, 775.523), new e.VSC(585, 3.998, 191.448), new e.VSC(500, 4.123, 15720.839), new e.VSC(429, 3.586, 19367.189), new e.VSC(327, 5.677, 5507.553), new e.VSC(326, 4.591, 10404.734), new e.VSC(232, 3.163, 9153.904), new e.VSC(180, 4.653, 1109.379), new e.VSC(155, 5.57, 19651.048), new e.VSC(128, 4.226, 20.775), new e.VSC(128, 0.962, 5661.332), new e.VSC(106, 1.537, 801.821)], r = [new e.VSC(1021352943053, 0, 0), new e.VSC(95708, 2.46424, 10213.28555), new e.VSC(14445, 0.51625, 20426.57109), new e.VSC(213, 1.795, 30639.857), new e.VSC(174, 2.655, 26.298), new e.VSC(152, 6.106, 1577.344), new e.VSC(82, 5.7, 191.45), new e.VSC(70, 2.68, 9437.76), new e.VSC(52, 3.6, 775.52), new e.VSC(38, 1.03, 529.69), new e.VSC(30, 1.25, 5507.55), new e.VSC(25, 6.11, 10404.73)], o = [new e.VSC(54127, 0, 0), new e.VSC(3891, 0.3451, 10213.2855), new e.VSC(1338, 2.0201, 20426.5711), new e.VSC(24, 2.05, 26.3), new e.VSC(19, 3.54, 30639.86), new e.VSC(10, 3.97, 775.52), new e.VSC(7, 1.52, 1577.34), new e.VSC(6, 1, 191.45)], c = [new e.VSC(136, 4.804, 10213.286), new e.VSC(78, 3.67, 20426.57), new e.VSC(26, 0, 0)], l = [new e.VSC(114, 3.1416, 0), new e.VSC(3, 5.21, 20426.57), new e.VSC(2, 2.51, 10213.29)], g = [new e.VSC(1, 3.14, 0)], a = [new e.VSC(5923638, 0.2670278, 10213.2855462), new e.VSC(40108, 1.14737, 20426.57109), new e.VSC(32815, 3.14737, 0), new e.VSC(1011, 1.0895, 30639.8566), new e.VSC(149, 6.254, 18073.705), new e.VSC(138, 0.86, 1577.344), new e.VSC(130, 3.672, 9437.763), new e.VSC(120, 3.705, 2352.866), new e.VSC(108, 4.539, 22003.915)], b = [new e.VSC(513348, 1.803643, 10213.285546), new e.VSC(4380, 3.3862, 20426.5711), new e.VSC(199, 0, 0), new e.VSC(197, 2.53, 30639.857)], V = [new e.VSC(22378, 3.38509, 10213.28555), new e.VSC(282, 0, 0), new e.VSC(173, 5.256, 20426.571), new e.VSC(27, 3.87, 30639.86)], y = [new e.VSC(647, 4.992, 10213.286), new e.VSC(20, 3.14, 0), new e.VSC(6, 0.77, 20426.57), new e.VSC(3, 5.44, 30639.86)], C = [new e.VSC(14, 0.32, 10213.29)], E = [new e.VSC(72334821, 0, 0), new e.VSC(489824, 4.021518, 10213.285546), new e.VSC(1658, 4.9021, 20426.5711), new e.VSC(1632, 2.8455, 7860.4194), new e.VSC(1378, 1.1285, 11790.6291), new e.VSC(498, 2.587, 9683.595), new e.VSC(374, 1.423, 3930.21), new e.VSC(264, 5.529, 9437.763), new e.VSC(237, 2.551, 15720.839), new e.VSC(222, 2.013, 19367.189), new e.VSC(126, 2.728, 1577.344), new e.VSC(119, 3.02, 10404.734)], v = [new e.VSC(34551, 0.89199, 10213.28555), new e.VSC(234, 1.772, 20426.571), new e.VSC(234, 3.142, 0)], m = [new e.VSC(1407, 5.0637, 10213.2855), new e.VSC(16, 5.47, 20426.57), new e.VSC(13, 0, 0)], L = [new e.VSC(50, 3.22, 10213.29)], A = [new e.VSC(1, 0.92, 10213.29)];
              function K() {
              }
              K.eclipticLongitude = function(w) {
                var f = (w - 2451545) / 365250, R = f * f, O = R * f, W = O * f, N = W * f, $ = _.length, S = 0, I;
                for (I = 0; I < $; I++)
                  S += _[I].a * Math.cos(_[I].b + _[I].c * f);
                var x = r.length, P = 0;
                for (I = 0; I < x; I++)
                  P += r[I].a * Math.cos(r[I].b + r[I].c * f);
                var d = o.length, U = 0;
                for (I = 0; I < d; I++)
                  U += o[I].a * Math.cos(o[I].b + o[I].c * f);
                var F = c.length, X = 0;
                for (I = 0; I < F; I++)
                  X += c[I].a * Math.cos(c[I].b + c[I].c * f);
                var Y = l.length, M = 0;
                for (I = 0; I < Y; I++)
                  M += l[I].a * Math.cos(l[I].b + l[I].c * f);
                var B = g.length, D = 0;
                for (I = 0; I < B; I++)
                  D += g[I].a * Math.cos(g[I].b + g[I].c * f);
                var k = (S + P * f + U * R + X * O + M * W + D * N) / 1e8;
                return k = n.CT.m360(n.CT.r2D(k)), k;
              }, K.eclipticLatitude = function(w) {
                var f = (w - 2451545) / 365250, R = f * f, O = R * f, W = O * f, N = a.length, $ = 0, S;
                for (S = 0; S < N; S++)
                  $ += a[S].a * Math.cos(a[S].b + a[S].c * f);
                var I = b.length, x = 0;
                for (S = 0; S < I; S++)
                  x += b[S].a * Math.cos(b[S].b + b[S].c * f);
                var P = V.length, d = 0;
                for (S = 0; S < P; S++)
                  d += V[S].a * Math.cos(V[S].b + V[S].c * f);
                var U = y.length, F = 0;
                for (S = 0; S < U; S++)
                  F += y[S].a * Math.cos(y[S].b + y[S].c * f);
                var X = C.length, Y = 0;
                for (S = 0; S < X; S++)
                  Y += C[S].a * Math.cos(C[S].b + C[S].c * f);
                var M = ($ + x * f + d * R + F * O + Y * W) / 1e8;
                return M = n.CT.r2D(M), M;
              }, K.radiusVector = function(w) {
                var f = (w - 2451545) / 365250, R = f * f, O = R * f, W = O * f, N = E.length, $ = 0, S;
                for (S = 0; S < N; S++)
                  $ += E[S].a * Math.cos(E[S].b + E[S].c * f);
                var I = v.length, x = 0;
                for (S = 0; S < I; S++)
                  x += v[S].a * Math.cos(v[S].b + v[S].c * f);
                var P = m.length, d = 0;
                for (S = 0; S < P; S++)
                  d += m[S].a * Math.cos(m[S].b + m[S].c * f);
                var U = L.length, F = 0;
                for (S = 0; S < U; S++)
                  F += L[S].a * Math.cos(L[S].b + L[S].c * f);
                var X = A.length, Y = 0;
                for (S = 0; S < X; S++)
                  Y += A[S].a * Math.cos(A[S].b + A[S].c * f);
                return ($ + x * f + d * R + F * O + Y * W) / 1e8;
              };
              var T = {};
              (0, t.registerType)("CAAVenus", [K, T, null]);
            }
          ),
          /***/
          "./esm/baseplanets.js": (
            /*!****************************!*\
              !*** ./esm/baseplanets.js ***!
              \****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                BasePlanets: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), e = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              );
              function _() {
              }
              _.drawPointPlanet = function(r, o, c, l, g) {
                var a = o, b = c / 2;
                if (r.gl != null) {
                  var V = new e.PointList(r);
                  V.minSize = 20, V.addPoint(o.copy(), l._clone(), new e.Dates(0, 1), c / 100), V.depthBuffered = !0, V.draw(r, 1, !1);
                } else {
                  var y = r.WVP.transform(a);
                  if (y.z < 0 || !g && n.Vector3d.dot(r.get_viewPoint(), a) < 0.55)
                    return;
                  var C = r.device;
                  C.save(), C.beginPath(), C.arc(y.x, y.y, b, 0, Math.PI * 2, !0), C.lineWidth = 1, C.fillStyle = l.toString(), C.fill(), C.globalAlpha = 1, C.strokeStyle = l.toString(), C.stroke(), C.restore();
                }
              }, (0, t.registerType)("BasePlanets", [_, {}, null]);
            }
          ),
          /***/
          "./esm/baseutil.js": (
            /*!*************************!*\
              !*** ./esm/baseutil.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Util: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              );
              function e() {
              }
              e.splitString = function(r, o) {
                for (var c = [], l = 0, g = 0, a = 0; a < r.length; a++) {
                  for (var b = !1, V = 0; V < o.length; V++) {
                    if (r[a] === o[V]) {
                      c.push(r.substring(l, g - l)), b = !0;
                      continue;
                    }
                    l = a + 1, g = a + 1;
                  }
                  b || g++;
                }
                return g > l && c.push(r.substring(l, g - l)), c;
              }, e.stringContains = function(r, o) {
                for (var c = 0; c < o.length; c++)
                  if (r.indexOf(o[c]) > -1)
                    return !0;
                return !1;
              }, e.getHashCode = function(r) {
                var o = 0;
                if (!r.length)
                  return o;
                for (var c = 0; c < r.length; c++) {
                  var l = r.charCodeAt(c);
                  o = (o << 5) - o + l;
                }
                return o;
              }, e.compare = function(r, o) {
                return r === o ? 0 : r > o ? 1 : -1;
              }, e.logN = function(r, o) {
                return Math.log(r) / Math.log(o);
              }, e.parseTimeSpan = function(r) {
                var o = 0, c = r.split(":");
                return c.length === 3 && (o += parseInt(c[0]) * 36e5, o += parseInt(c[1]) * 6e4, o += n.ss.truncate(parseFloat(c[2]) * 1e3)), o;
              }, e.xmlDuration = function(r) {
                var o = r / 1e3, c = Math.floor(o / 3600), l = Math.floor(o / 60) - c * 60, g = o - (c * 3600 + l * 60);
                return n.ss.format("{0}:{1}:{2}", c, l, g);
              }, e.xmlDate = function(r) {
                var o = r.getHours(), c = "AM";
                return o > 12 && (o -= 12, c = "PM"), (r.getMonth() + 1).toString() + "/" + r.getDate().toString() + "/" + r.getFullYear().toString() + " " + o.toString() + ":" + r.getMinutes().toString() + ":" + r.getSeconds().toString() + " " + c;
              }, e.selectSingleNode = function(r, o) {
                for (var c = null, l = n.ss.enumerate(r.childNodes); l.moveNext(); ) {
                  var g = l.current;
                  if (g.nodeName === o) {
                    c = g;
                    break;
                  }
                }
                return c;
              }, e.getInnerText = function(r) {
                if (n.ss.emptyString(r.text)) {
                  var o = r;
                  return o.textContent;
                } else
                  return r.text;
              }, e.getWrappedText = function(r, o, c) {
                var l = [];
                return l.push(o), l;
              }, e.toHex = function(r) {
                var o = Math.max(0, Math.min(n.ss.truncate(r), 255));
                return "0123456789ABCDEF".substr((o - o % 16) / 16, 1) + "0123456789ABCDEF".substr(o % 16, 1);
              }, e.fromHex = function(r) {
                var o = 0;
                switch (r.substr(1, 1).toUpperCase()) {
                  case "A":
                    o += 10;
                    break;
                  case "B":
                    o += 11;
                    break;
                  case "C":
                    o += 12;
                    break;
                  case "D":
                    o += 13;
                    break;
                  case "E":
                    o += 14;
                    break;
                  case "F":
                    o += 15;
                    break;
                  default:
                    o += parseInt(r.substr(1, 1));
                    break;
                }
                switch (r.substr(0, 1).toUpperCase()) {
                  case "A":
                    o += 160;
                    break;
                  case "B":
                    o += 176;
                    break;
                  case "C":
                    o += 192;
                    break;
                  case "D":
                    o += 208;
                    break;
                  case "E":
                    o += 224;
                    break;
                  case "F":
                    o += 240;
                    break;
                  default:
                    o += parseInt(r.substr(0, 1)) * 16;
                    break;
                }
                return o;
              }, e._openUrl = function(r) {
                window.open(r);
              }, e.log10 = function(r) {
                return Math.log(r) / 2.30258509299405;
              }, e.sign = function(r) {
                return r < 0 ? -1 : 1;
              };
              var _ = {};
              (0, t.registerType)("Util", [e, _, null]);
            }
          ),
          /***/
          "./esm/blend_state.js": (
            /*!****************************!*\
              !*** ./esm/blend_state.js ***!
              \****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                BlendState: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              );
              function e() {
                this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = !1, this._targetState = this._state, this._delayTime = 1e3;
              }
              e.create = function(r, o) {
                var c = new e();
                return c._state = r, c._targetState = r, c._delayTime = o, c;
              };
              var _ = {
                get_state: function() {
                  if (this._targetState !== this._state) {
                    var r = t.ss.now() - this._switchedTime;
                    return r > this._delayTime && (this._state = this._targetState), !0;
                  }
                  return this._state;
                },
                set_state: function(r) {
                  return this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = r, this._targetState = this._state, r;
                },
                get_targetState: function() {
                  return this._targetState;
                },
                set_targetState: function(r) {
                  return this._targetState !== r && (this._switchedTime = t.ss.now(), this._targetState = r), r;
                },
                get_opacity: function() {
                  if (this._targetState !== this._state) {
                    var r = t.ss.now() - this._switchedTime;
                    if (r > this._delayTime)
                      this._state = this._targetState;
                    else {
                      var o = r / this._delayTime;
                      return this._targetState ? o : 1 - o;
                    }
                  }
                  return this._state ? 1 : 0;
                },
                get_delayTime: function() {
                  return this._delayTime;
                },
                set_delayTime: function(r) {
                  return this._delayTime = r, r;
                }
              };
              (0, n.registerType)("BlendState", [e, _, null]);
            }
          ),
          /***/
          "./esm/camera_parameters.js": (
            /*!**********************************!*\
              !*** ./esm/camera_parameters.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CameraParameters: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                InterpolationType: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                SolarSystemObjects: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), r = {
                sun: 0,
                mercury: 1,
                venus: 2,
                mars: 3,
                jupiter: 4,
                saturn: 5,
                uranus: 6,
                neptune: 7,
                pluto: 8,
                moon: 9,
                io: 10,
                europa: 11,
                ganymede: 12,
                callisto: 13,
                ioShadow: 14,
                europaShadow: 15,
                ganymedeShadow: 16,
                callistoShadow: 17,
                sunEclipsed: 18,
                earth: 19,
                custom: 20,
                undefined: 65536
              };
              (0, t.registerType)("SolarSystemObjects", r), (0, t.registerEnum)("SolarSystemObjects", r);
              var o = {
                linear: 0,
                easeIn: 1,
                easeOut: 2,
                easeInOut: 3,
                exponential: 4,
                defaultV: 5
              };
              (0, t.registerType)("InterpolationType", o), (0, t.registerEnum)("InterpolationType", o);
              function c() {
                this.lat = 0, this.lng = 0, this.zoom = 0, this.rotation = 0, this.angle = 0, this.raDec = !1, this.opacity = 0, this.target = 0, this.zoom = 360, this.viewTarget = new e.Vector3d();
              }
              c.create = function(g, a, b, V, y, C) {
                var E = new c();
                return E.lat = g, E.lng = a, E.zoom = b, E.rotation = V, E.angle = y, E.raDec = !1, E.opacity = C, E.viewTarget = e.Vector3d.create(0, 0, 0), E.target = 20, E.targetReferenceFrame = "", E;
              }, c.logN = function(g, a) {
                return Math.log(g) / Math.log(a);
              }, c.sinh = function(g) {
                return (Math.exp(g) - Math.exp(-g)) / 2;
              }, c.interpolate = function(g, a, b, V, y) {
                var C = new c(), E = c.easeCurve(b, V), v = Math.min(1, b * 2), m = c.easeCurve(v, V);
                return C.angle = a.angle * E + g.angle * (1 - E), C.rotation = a.rotation * E + g.rotation * (1 - E), y ? (C.lat = a.lat * m + g.lat * (1 - m), C.lng = a.lng * m + g.lng * (1 - m)) : (C.lat = a.lat * E + g.lat * (1 - E), C.lng = a.lng * E + g.lng * (1 - E)), C.zoom = Math.pow(2, c.logN(a.zoom, 2) * E + c.logN(g.zoom, 2) * (1 - E)), C.opacity = a.opacity * E + g.opacity * (1 - E), C.viewTarget = e.Vector3d.lerp(g.viewTarget, a.viewTarget, E), C.targetReferenceFrame = a.targetReferenceFrame, a.target === g.target ? C.target = a.target : C.target = 20, C;
              }, c.interpolateGreatCircle = function(g, a, b, V, y) {
                var C = new c(), E = c.easeCurve(b, V), v = Math.min(1, b * 2);
                c.easeCurve(v, V), C.angle = a.angle * E + g.angle * (1 - E), C.rotation = a.rotation * E + g.rotation * (1 - E);
                var m = _.Coordinates.geoTo3dDouble(g.lat, g.lng), L = _.Coordinates.geoTo3dDouble(a.lat, a.lng), A = e.Vector3d.slerp(m, L, E), K = _.Coordinates.cartesianToLatLng(A);
                return C.lat = K.y, C.lng = K.x, C.zoom = Math.pow(2, c.logN(a.zoom, 2) * E + c.logN(g.zoom, 2) * (1 - E)), C.opacity = a.opacity * E + g.opacity * (1 - E), C.viewTarget = e.Vector3d.lerp(g.viewTarget, a.viewTarget, E), C.targetReferenceFrame = a.targetReferenceFrame, a.target === g.target ? C.target = a.target : C.target = 20, C;
              }, c.easeCurve = function(g, a) {
                switch (a) {
                  case 0:
                    return g;
                  case 4:
                    return Math.pow(g, 2);
                  case 1:
                    return (1 - g) * c.sinh(g / 0.2171424688) / 100 + g * g;
                  case 2:
                    return g * (1 - c.sinh((1 - g) / 0.2171424688) / 100) + (1 - g) * g;
                  case 3:
                    return g < 0.5 ? c.sinh(g / 0.1085712344) / 100 : 1 - c.sinh((1 - g) / 0.1085712344) / 100;
                  default:
                    return g;
                }
              };
              var l = {
                copy: function() {
                  var g = new c();
                  return g.lat = this.lat, g.lng = this.lng, g.zoom = this.zoom, g.rotation = this.rotation, g.angle = this.angle, g.raDec = this.raDec, g.opacity = this.opacity, g.viewTarget = this.viewTarget.copy(), g.target = this.target, g.targetReferenceFrame = this.targetReferenceFrame, g;
                },
                get_RA: function() {
                  return (180 - (this.lng - 180)) / 360 * 24 % 24;
                },
                set_RA: function(g) {
                  return this.lng = 180 - g / 24 * 360 - 180, this.raDec = !0, g;
                },
                get_dec: function() {
                  return this.lat;
                },
                set_dec: function(g) {
                  return this.lat = g, g;
                },
                equals: function(g) {
                  if (n.ss.canCast(g, c)) {
                    var a = g;
                    return !(Math.abs(a.angle - this.angle) > 0.01 || Math.abs(a.lat - this.lat) > a.zoom / 1e4 || Math.abs(a.get_RA() - this.get_RA()) > a.zoom / 1e3 || Math.abs(a.rotation - this.rotation) > 0.1 || Math.abs(a.zoom - this.zoom) > Math.abs(a.zoom) / 1e3);
                  } else
                    return !1;
                }
              };
              (0, t.registerType)("CameraParameters", [c, l, null]);
            }
          ),
          /***/
          "./esm/color.js": (
            /*!**********************!*\
              !*** ./esm/color.js ***!
              \**********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Color: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                Colors: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./util.js */
                "./esm/util.js"
              );
              function _() {
                this.a = 255, this.b = 255, this.g = 255, this.r = 255, this.name = "";
              }
              _.fromArgb = function(l, g, a, b) {
                var V = new _();
                return V.a = l, V.r = g, V.g = a, V.b = b, V;
              }, _._fromArgbColor = function(l, g) {
                var a = new _();
                return a.a = l, a.r = g.r, a.g = g.g, a.b = g.b, a;
              }, _.fromName = function(l) {
                var g = _.load(l);
                return g;
              }, _.load = function(l) {
                var g = 255, a = 255, b = 255, V = 255, y = l.split(":");
                if (y.length === 5)
                  g = parseInt(y[1]), a = parseInt(y[2]), b = parseInt(y[3]), V = parseInt(y[4]);
                else {
                  if (y.length === 2)
                    return _.fromName(y[1].toLowerCase());
                  if (y.length === 1 && n.ss.startsWith(y[0], "#"))
                    return _.fromHex(y[0]);
                  if (y.length === 1 && y[0].length === 8)
                    return _.fromSimpleHex(y[0]);
                  if (y.length === 1)
                    return _._fromWindowsNamedColor(y[0]);
                }
                return _.fromArgb(g, a, b, V);
              }, _._fromWindowsNamedColor = function(l) {
                switch (l.toLowerCase()) {
                  case "activeborder":
                    return _.fromArgb(255, 180, 180, 180);
                  case "activecaption":
                    return _.fromArgb(255, 153, 180, 209);
                  case "activecaptiontext":
                    return _.fromArgb(255, 0, 0, 0);
                  case "appworkspace":
                    return _.fromArgb(255, 171, 171, 171);
                  case "control":
                    return _.fromArgb(255, 240, 240, 240);
                  case "controldark":
                    return _.fromArgb(255, 160, 160, 160);
                  case "controldarkdark":
                    return _.fromArgb(255, 105, 105, 105);
                  case "controllight":
                    return _.fromArgb(255, 227, 227, 227);
                  case "controllightlight":
                    return _.fromArgb(255, 255, 255, 255);
                  case "controltext":
                    return _.fromArgb(255, 0, 0, 0);
                  case "desktop":
                    return _.fromArgb(255, 255, 255, 255);
                  case "graytext":
                    return _.fromArgb(255, 109, 109, 109);
                  case "highlight":
                    return _.fromArgb(255, 51, 153, 255);
                  case "highlighttext":
                    return _.fromArgb(255, 255, 255, 255);
                  case "hottrack":
                    return _.fromArgb(255, 0, 102, 204);
                  case "inactiveborder":
                    return _.fromArgb(255, 244, 247, 252);
                  case "inactivecaption":
                    return _.fromArgb(255, 191, 205, 219);
                  case "inactivecaptiontext":
                    return _.fromArgb(255, 0, 0, 0);
                  case "info":
                    return _.fromArgb(255, 255, 255, 225);
                  case "infotext":
                    return _.fromArgb(255, 0, 0, 0);
                  case "menu":
                    return _.fromArgb(255, 240, 240, 240);
                  case "menutext":
                    return _.fromArgb(255, 0, 0, 0);
                  case "scrollbar":
                    return _.fromArgb(255, 200, 200, 200);
                  case "window":
                    return _.fromArgb(255, 255, 255, 255);
                  case "windowframe":
                    return _.fromArgb(255, 100, 100, 100);
                  case "windowtext":
                    return _.fromArgb(255, 0, 0, 0);
                  case "transparent":
                    return _.fromArgb(0, 255, 255, 255);
                  case "aliceblue":
                    return _.fromArgb(255, 240, 248, 255);
                  case "antiquewhite":
                    return _.fromArgb(255, 250, 235, 215);
                  case "aqua":
                    return _.fromArgb(255, 0, 255, 255);
                  case "aquamarine":
                    return _.fromArgb(255, 127, 255, 212);
                  case "azure":
                    return _.fromArgb(255, 240, 255, 255);
                  case "beige":
                    return _.fromArgb(255, 245, 245, 220);
                  case "bisque":
                    return _.fromArgb(255, 255, 228, 196);
                  case "black":
                    return _.fromArgb(255, 0, 0, 0);
                  case "blanchedalmond":
                    return _.fromArgb(255, 255, 235, 205);
                  case "blue":
                    return _.fromArgb(255, 0, 0, 255);
                  case "blueviolet":
                    return _.fromArgb(255, 138, 43, 226);
                  case "brown":
                    return _.fromArgb(255, 165, 42, 42);
                  case "burlywood":
                    return _.fromArgb(255, 222, 184, 135);
                  case "cadetblue":
                    return _.fromArgb(255, 95, 158, 160);
                  case "chartreuse":
                    return _.fromArgb(255, 127, 255, 0);
                  case "chocolate":
                    return _.fromArgb(255, 210, 105, 30);
                  case "coral":
                    return _.fromArgb(255, 255, 127, 80);
                  case "cornflowerblue":
                    return _.fromArgb(255, 100, 149, 237);
                  case "cornsilk":
                    return _.fromArgb(255, 255, 248, 220);
                  case "crimson":
                    return _.fromArgb(255, 220, 20, 60);
                  case "cyan":
                    return _.fromArgb(255, 0, 255, 255);
                  case "darkblue":
                    return _.fromArgb(255, 0, 0, 139);
                  case "darkcyan":
                    return _.fromArgb(255, 0, 139, 139);
                  case "darkgoldenrod":
                    return _.fromArgb(255, 184, 134, 11);
                  case "darkgray":
                    return _.fromArgb(255, 169, 169, 169);
                  case "darkgreen":
                    return _.fromArgb(255, 0, 100, 0);
                  case "darkkhaki":
                    return _.fromArgb(255, 189, 183, 107);
                  case "darkmagenta":
                    return _.fromArgb(255, 139, 0, 139);
                  case "darkolivegreen":
                    return _.fromArgb(255, 85, 107, 47);
                  case "darkorange":
                    return _.fromArgb(255, 255, 140, 0);
                  case "darkorchid":
                    return _.fromArgb(255, 153, 50, 204);
                  case "darkred":
                    return _.fromArgb(255, 139, 0, 0);
                  case "darksalmon":
                    return _.fromArgb(255, 233, 150, 122);
                  case "darkseagreen":
                    return _.fromArgb(255, 143, 188, 139);
                  case "darkslateblue":
                    return _.fromArgb(255, 72, 61, 139);
                  case "darkslategray":
                    return _.fromArgb(255, 47, 79, 79);
                  case "darkturquoise":
                    return _.fromArgb(255, 0, 206, 209);
                  case "darkviolet":
                    return _.fromArgb(255, 148, 0, 211);
                  case "deeppink":
                    return _.fromArgb(255, 255, 20, 147);
                  case "deepskyblue":
                    return _.fromArgb(255, 0, 191, 255);
                  case "dimgray":
                    return _.fromArgb(255, 105, 105, 105);
                  case "dodgerblue":
                    return _.fromArgb(255, 30, 144, 255);
                  case "firebrick":
                    return _.fromArgb(255, 178, 34, 34);
                  case "floralwhite":
                    return _.fromArgb(255, 255, 250, 240);
                  case "forestgreen":
                    return _.fromArgb(255, 34, 139, 34);
                  case "fuchsia":
                    return _.fromArgb(255, 255, 0, 255);
                  case "gainsboro":
                    return _.fromArgb(255, 220, 220, 220);
                  case "ghostwhite":
                    return _.fromArgb(255, 248, 248, 255);
                  case "gold":
                    return _.fromArgb(255, 255, 215, 0);
                  case "goldenrod":
                    return _.fromArgb(255, 218, 165, 32);
                  case "gray":
                    return _.fromArgb(255, 128, 128, 128);
                  case "green":
                    return _.fromArgb(255, 0, 128, 0);
                  case "greenyellow":
                    return _.fromArgb(255, 173, 255, 47);
                  case "honeydew":
                    return _.fromArgb(255, 240, 255, 240);
                  case "hotpink":
                    return _.fromArgb(255, 255, 105, 180);
                  case "indianred":
                    return _.fromArgb(255, 205, 92, 92);
                  case "indigo":
                    return _.fromArgb(255, 75, 0, 130);
                  case "ivory":
                    return _.fromArgb(255, 255, 255, 240);
                  case "khaki":
                    return _.fromArgb(255, 240, 230, 140);
                  case "lavender":
                    return _.fromArgb(255, 230, 230, 250);
                  case "lavenderblush":
                    return _.fromArgb(255, 255, 240, 245);
                  case "lawngreen":
                    return _.fromArgb(255, 124, 252, 0);
                  case "lemonchiffon":
                    return _.fromArgb(255, 255, 250, 205);
                  case "lightblue":
                    return _.fromArgb(255, 173, 216, 230);
                  case "lightcoral":
                    return _.fromArgb(255, 240, 128, 128);
                  case "lightcyan":
                    return _.fromArgb(255, 224, 255, 255);
                  case "lightgoldenrodyellow":
                    return _.fromArgb(255, 250, 250, 210);
                  case "lightgray":
                    return _.fromArgb(255, 211, 211, 211);
                  case "lightgreen":
                    return _.fromArgb(255, 144, 238, 144);
                  case "lightpink":
                    return _.fromArgb(255, 255, 182, 193);
                  case "lightsalmon":
                    return _.fromArgb(255, 255, 160, 122);
                  case "lightseagreen":
                    return _.fromArgb(255, 32, 178, 170);
                  case "lightskyblue":
                    return _.fromArgb(255, 135, 206, 250);
                  case "lightslategray":
                    return _.fromArgb(255, 119, 136, 153);
                  case "lightsteelblue":
                    return _.fromArgb(255, 176, 196, 222);
                  case "lightyellow":
                    return _.fromArgb(255, 255, 255, 224);
                  case "lime":
                    return _.fromArgb(255, 0, 255, 0);
                  case "limegreen":
                    return _.fromArgb(255, 50, 205, 50);
                  case "linen":
                    return _.fromArgb(255, 250, 240, 230);
                  case "magenta":
                    return _.fromArgb(255, 255, 0, 255);
                  case "maroon":
                    return _.fromArgb(255, 128, 0, 0);
                  case "mediumaquamarine":
                    return _.fromArgb(255, 102, 205, 170);
                  case "mediumblue":
                    return _.fromArgb(255, 0, 0, 205);
                  case "mediumorchid":
                    return _.fromArgb(255, 186, 85, 211);
                  case "mediumpurple":
                    return _.fromArgb(255, 147, 112, 219);
                  case "mediumseagreen":
                    return _.fromArgb(255, 60, 179, 113);
                  case "mediumslateblue":
                    return _.fromArgb(255, 123, 104, 238);
                  case "mediumspringgreen":
                    return _.fromArgb(255, 0, 250, 154);
                  case "mediumturquoise":
                    return _.fromArgb(255, 72, 209, 204);
                  case "mediumvioletred":
                    return _.fromArgb(255, 199, 21, 133);
                  case "midnightblue":
                    return _.fromArgb(255, 25, 25, 112);
                  case "mintcream":
                    return _.fromArgb(255, 245, 255, 250);
                  case "mistyrose":
                    return _.fromArgb(255, 255, 228, 225);
                  case "moccasin":
                    return _.fromArgb(255, 255, 228, 181);
                  case "navajowhite":
                    return _.fromArgb(255, 255, 222, 173);
                  case "navy":
                    return _.fromArgb(255, 0, 0, 128);
                  case "oldlace":
                    return _.fromArgb(255, 253, 245, 230);
                  case "olive":
                    return _.fromArgb(255, 128, 128, 0);
                  case "olivedrab":
                    return _.fromArgb(255, 107, 142, 35);
                  case "orange":
                    return _.fromArgb(255, 255, 165, 0);
                  case "orangered":
                    return _.fromArgb(255, 255, 69, 0);
                  case "orchid":
                    return _.fromArgb(255, 218, 112, 214);
                  case "palegoldenrod":
                    return _.fromArgb(255, 238, 232, 170);
                  case "palegreen":
                    return _.fromArgb(255, 152, 251, 152);
                  case "paleturquoise":
                    return _.fromArgb(255, 175, 238, 238);
                  case "palevioletred":
                    return _.fromArgb(255, 219, 112, 147);
                  case "papayawhip":
                    return _.fromArgb(255, 255, 239, 213);
                  case "peachpuff":
                    return _.fromArgb(255, 255, 218, 185);
                  case "peru":
                    return _.fromArgb(255, 205, 133, 63);
                  case "pink":
                    return _.fromArgb(255, 255, 192, 203);
                  case "plum":
                    return _.fromArgb(255, 221, 160, 221);
                  case "powderblue":
                    return _.fromArgb(255, 176, 224, 230);
                  case "purple":
                    return _.fromArgb(255, 128, 0, 128);
                  case "red":
                    return _.fromArgb(255, 255, 0, 0);
                  case "rosybrown":
                    return _.fromArgb(255, 188, 143, 143);
                  case "royalblue":
                    return _.fromArgb(255, 65, 105, 225);
                  case "saddlebrown":
                    return _.fromArgb(255, 139, 69, 19);
                  case "salmon":
                    return _.fromArgb(255, 250, 128, 114);
                  case "sandybrown":
                    return _.fromArgb(255, 244, 164, 96);
                  case "seagreen":
                    return _.fromArgb(255, 46, 139, 87);
                  case "seashell":
                    return _.fromArgb(255, 255, 245, 238);
                  case "sienna":
                    return _.fromArgb(255, 160, 82, 45);
                  case "silver":
                    return _.fromArgb(255, 192, 192, 192);
                  case "skyblue":
                    return _.fromArgb(255, 135, 206, 235);
                  case "slateblue":
                    return _.fromArgb(255, 106, 90, 205);
                  case "slategray":
                    return _.fromArgb(255, 112, 128, 144);
                  case "snow":
                    return _.fromArgb(255, 255, 250, 250);
                  case "springgreen":
                    return _.fromArgb(255, 0, 255, 127);
                  case "steelblue":
                    return _.fromArgb(255, 70, 130, 180);
                  case "tan":
                    return _.fromArgb(255, 210, 180, 140);
                  case "teal":
                    return _.fromArgb(255, 0, 128, 128);
                  case "thistle":
                    return _.fromArgb(255, 216, 191, 216);
                  case "tomato":
                    return _.fromArgb(255, 255, 99, 71);
                  case "turquoise":
                    return _.fromArgb(255, 64, 224, 208);
                  case "violet":
                    return _.fromArgb(255, 238, 130, 238);
                  case "wheat":
                    return _.fromArgb(255, 245, 222, 179);
                  case "white":
                    return _.fromArgb(255, 255, 255, 255);
                  case "whitesmoke":
                    return _.fromArgb(255, 245, 245, 245);
                  case "yellow":
                    return _.fromArgb(255, 255, 255, 0);
                  case "yellowgreen":
                    return _.fromArgb(255, 154, 205, 50);
                  case "buttonface":
                    return _.fromArgb(255, 240, 240, 240);
                  case "buttonhighlight":
                    return _.fromArgb(255, 255, 255, 255);
                  case "buttonshadow":
                    return _.fromArgb(255, 160, 160, 160);
                  case "gradientactivecaption":
                    return _.fromArgb(255, 185, 209, 234);
                  case "gradientinactivecaption":
                    return _.fromArgb(255, 215, 228, 242);
                  case "menubar":
                    return _.fromArgb(255, 240, 240, 240);
                  case "menuhighlight":
                    return _.fromArgb(255, 51, 153, 255);
                }
                return _.fromArgb(255, 255, 255, 255);
              }, _.fromHex = function(l) {
                var g = e.Util.fromHex(l.substr(1, 2)), a = e.Util.fromHex(l.substr(3, 2)), b = e.Util.fromHex(l.substr(5, 2)), V = 255;
                return _.fromArgb(V, g, a, b);
              }, _.fromSimpleHex = function(l) {
                var g = e.Util.fromHex(l.substr(0, 2)), a = e.Util.fromHex(l.substr(2, 2)), b = e.Util.fromHex(l.substr(4, 2)), V = e.Util.fromHex(l.substr(6, 2));
                return _.fromArgb(g, a, b, V);
              }, _.fromInt = function(l) {
                var g = (l & 4278190080) >>> 24, a = (l & 16711680) >>> 16, b = (l & 65280) >>> 8, V = l & 255;
                return _.fromArgb(V, g, a, b);
              };
              var r = {
                toFormat: function() {
                  return n.ss.emptyString(this.name) ? n.ss.format("rgb({0},{1},{2})", this.r.toString(), this.g.toString(), this.b.toString()) : this.name;
                },
                save: function() {
                  return n.ss.emptyString(this.name) ? n.ss.format("{0}:{1}:{2}:{3}:{4}", 1, this.a, this.r, this.g, this.b) : n.ss.format("{0}:{1}", 0, this.name);
                },
                toString: function() {
                  return n.ss.emptyString(this.name) ? n.ss.format("#{0}{1}{2}", e.Util.toHex(this.r), e.Util.toHex(this.g), e.Util.toHex(this.b)) : this.name;
                },
                toSimpleHex: function() {
                  return n.ss.emptyString(this.name) ? n.ss.format("{0}{1}{2}{3}", e.Util.toHex(this.a), e.Util.toHex(this.r), e.Util.toHex(this.g), e.Util.toHex(this.b)) : this.name;
                },
                _clone: function() {
                  return _.fromArgb(this.a, this.r, this.g, this.b);
                }
              };
              (0, t.registerType)("Color", [_, r, null]);
              function o() {
              }
              o.get_black = function() {
                return _.fromArgb(255, 0, 0, 0);
              }, o.get_blue = function() {
                return _.fromArgb(255, 0, 0, 255);
              }, o.get_brown = function() {
                return _.fromArgb(255, 165, 42, 42);
              }, o.get_cyan = function() {
                return _.fromArgb(255, 0, 255, 255);
              }, o.get_darkGray = function() {
                return _.fromArgb(255, 169, 169, 169);
              }, o.get_gray = function() {
                return _.fromArgb(255, 128, 128, 128);
              }, o.get_green = function() {
                return _.fromArgb(255, 0, 255, 0);
              }, o.get_lightGray = function() {
                return _.fromArgb(255, 211, 211, 211);
              }, o.get_magenta = function() {
                return _.fromArgb(255, 255, 0, 255);
              }, o.get_orange = function() {
                return _.fromArgb(255, 255, 165, 0);
              }, o.get_purple = function() {
                return _.fromArgb(255, 128, 0, 128);
              }, o.get_red = function() {
                return _.fromArgb(255, 255, 0, 0);
              }, o.get_transparent = function() {
                return _.fromArgb(0, 255, 255, 255);
              }, o.get_white = function() {
                return _.fromArgb(255, 255, 255, 255);
              }, o.get_yellow = function() {
                return _.fromArgb(255, 255, 255, 0);
              };
              var c = {};
              (0, t.registerType)("Colors", [o, c, null]);
            }
          ),
          /***/
          "./esm/constellation_filter.js": (
            /*!*************************************!*\
              !*** ./esm/constellation_filter.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ConstellationFilter: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./blend_state.js */
                "./esm/blend_state.js"
              );
              function _() {
                this.bits = new Array(3), this.oldBits = new Array(3), this.blendState = e.BlendState.create(!1, 1e3), this.internal = !1, this.settingsOwned = !1;
                for (var o = 0; o < 3; o++)
                  this.bits[o] = ~this.bits[o], this.oldBits[o] = this.bits[o];
              }
              _.families = {}, _.bitIDs = {}, _.buildConstellationFilters = function() {
                var o = _.get_allConstellation();
                o.internal = !0, _.families.AllConstellation = o, _.families.Zodiacal = _.get_zodiacal(), _.families["Ursa Major Family"] = _.get_ursaMajorFamily(), _.families["Perseus Family"] = _.get_perseusFamily(), _.families["Hercules Family"] = _.get_herculesFamily(), _.families["Orion Family"] = _.get_orionFamily(), _.families["Heavenly Waters"] = _.get_heavenlyWaters(), _.families["Bayer Family"] = _.get_bayerFamily(), _.families["La Caille Family"] = _.get_laCaileFamily();
              }, _.saveCustomFilters = function() {
                var o = new t.ss.StringBuilder(), c = _.families;
                for (var l in c) {
                  var g = { key: l, value: c[l] };
                  g.value.internal || (o.append(g.key), o.append(";"), o.appendLine(g.value.toString()));
                }
              }, _.get_allConstellation = function() {
                var o = new _();
                return o.setAll(!0), o;
              }, _.get_zodiacal = function() {
                var o = new _();
                return o.set("ARI", !0), o.set("TAU", !0), o.set("GEM", !0), o.set("CNC", !0), o.set("LEO", !0), o.set("VIR", !0), o.set("LIB", !0), o.set("SCO", !0), o.set("SGR", !0), o.set("CAP", !0), o.set("AQR", !0), o.set("PSC", !0), o.internal = !0, o;
              }, _.get_ursaMajorFamily = function() {
                var o = new _();
                return o.set("UMA", !0), o.set("UMI", !0), o.set("DRA", !0), o.set("CVN", !0), o.set("BOO", !0), o.set("COM", !0), o.set("CRB", !0), o.set("CAM", !0), o.set("LYN", !0), o.set("LMI", !0), o.internal = !0, o;
              }, _.get_perseusFamily = function() {
                var o = new _();
                return o.set("CAS", !0), o.set("CEP", !0), o.set("AND", !0), o.set("PER", !0), o.set("PEG", !0), o.set("CET", !0), o.set("AUR", !0), o.set("LAC", !0), o.set("TRI", !0), o.internal = !0, o;
              }, _.get_herculesFamily = function() {
                var o = new _();
                return o.set("HER", !0), o.set("SGE", !0), o.set("AQL", !0), o.set("LYR", !0), o.set("CYG", !0), o.set("VUL", !0), o.set("HYA", !0), o.set("SEX", !0), o.set("CRT", !0), o.set("CRV", !0), o.set("OPH", !0), o.set("SER1", !0), o.set("SER2", !0), o.set("SCT", !0), o.set("CEN", !0), o.set("LUP", !0), o.set("CRA", !0), o.set("ARA", !0), o.set("TRA", !0), o.set("CRU", !0), o.internal = !0, o;
              }, _.get_orionFamily = function() {
                var o = new _();
                return o.set("ORI", !0), o.set("CMA", !0), o.set("CMI", !0), o.set("MON", !0), o.set("LEP", !0), o.internal = !0, o;
              }, _.get_heavenlyWaters = function() {
                var o = new _();
                return o.set("DEL", !0), o.set("EQU", !0), o.set("ERI", !0), o.set("PSA", !0), o.set("CAR", !0), o.set("PUP", !0), o.set("VEL", !0), o.set("PYX", !0), o.set("COL", !0), o.internal = !0, o;
              }, _.get_bayerFamily = function() {
                var o = new _();
                return o.set("HYA", !0), o.set("DOR", !0), o.set("VOL", !0), o.set("APS", !0), o.set("PAV", !0), o.set("GRU", !0), o.set("PHE", !0), o.set("TUC", !0), o.set("IND", !0), o.set("CHA", !0), o.set("MUS", !0), o.internal = !0, o;
              }, _.get_laCaileFamily = function() {
                var o = new _();
                return o.set("NOR", !0), o.set("CIR", !0), o.set("TEL", !0), o.set("MIC", !0), o.set("SCL", !0), o.set("FOR", !0), o.set("CAE", !0), o.set("HOR", !0), o.set("OCT", !0), o.set("MEN", !0), o.set("RET", !0), o.set("PIC", !0), o.set("ANT", !0), o.internal = !0, o;
              }, _.parse = function(o) {
                var c = o.split(","), l = new _();
                try {
                  for (var g = 0; g < 3; g++)
                    l.bits[g] = parseInt(c[g]);
                } catch {
                }
                return l;
              };
              var r = {
                _saveBits: function() {
                  for (var o = 0; o < 3; o++)
                    this.oldBits[o] = this.bits[o];
                },
                _isChanged: function() {
                  for (var o = 0; o < 3; o++)
                    if (this.oldBits[o] !== this.bits[o])
                      return !0;
                  return !1;
                },
                _checkChanged: function() {
                  this._isChanged() && this._fireChanged();
                },
                isEnabled: function(o) {
                  var c = _.bitIDs[o], l = c / 32;
                  return c = c % 32, this.blendState.get_state() && !!(1 << c & this.bits[l]);
                },
                isSet: function(o) {
                  this._saveBits();
                  var c = _.bitIDs[o], l = t.ss.truncate(c / 32);
                  return c = c % 32, !!(1 << c & this.bits[l]);
                },
                set: function(o, c) {
                  this._saveBits();
                  var l = _.bitIDs[o], g = l / 32;
                  l = l % 32, c ? this.bits[g] = this.bits[g] | 1 << l : this.bits[g] = this.bits[g] ^ 1 << l, this._checkChanged();
                },
                setAll: function(o) {
                  this._saveBits();
                  for (var c = 0; c < 89; c++) {
                    var l = c / 32, g = c % 32;
                    o ? this.bits[l] = this.bits[l] | 1 << g : this.bits[l] = this.bits[l] ^ 1 << g;
                  }
                  this._checkChanged();
                },
                setBits: function(o) {
                  this._saveBits();
                  for (var c = 0; c < 3; c++)
                    this.bits[c] = o[c * 4] + (o[c * 4 + 1] << 8) + (o[c * 4 + 2] << 16) + (o[c * 4 + 3] << 24);
                  this._checkChanged();
                },
                getBits: function() {
                  for (var o = new Array(12), c = 0, l = 0; l < 3; l++)
                    o[c++] = this.bits[l], o[c++] = this.bits[l] >> 8, o[c++] = this.bits[l] >> 16, o[c++] = this.bits[l] >> 24;
                  return o;
                },
                cloneFilter: function(o) {
                  this._saveBits();
                  for (var c = 0; c < 3; c++)
                    this.bits[c] = o.bits[c];
                  this._checkChanged();
                },
                clone: function() {
                  var o = new _();
                  return o.cloneFilter(this), o;
                },
                combine: function(o) {
                  this._saveBits();
                  for (var c = 0; c < 3; c++)
                    this.bits[c] = this.bits[c] | o.bits[c];
                  this._checkChanged();
                },
                remove: function(o) {
                  this._saveBits();
                  for (var c = 0; c < 3; c++)
                    this.bits[c] = this.bits[c] & ~o.bits[c];
                  this._checkChanged();
                },
                _fireChanged: function() {
                  this.settingsOwned;
                },
                toString: function() {
                  return t.ss.format("{0},{1},{2}", this.bits[0], this.bits[1], this.bits[2]);
                }
              };
              (0, n.registerType)("ConstellationFilter", [_, r, null]);
            }
          ),
          /***/
          "./esm/constellations.js": (
            /*!*******************************!*\
              !*** ./esm/constellations.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Constellations: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                Linepoint: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                Lineset: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                PointType: () => (
                  /* binding */
                  C
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), r = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), o = i(
                /*! ./blend_state.js */
                "./esm/blend_state.js"
              ), c = i(
                /*! ./color.js */
                "./esm/color.js"
              ), l = i(
                /*! ./constellation_filter.js */
                "./esm/constellation_filter.js"
              ), g = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), a = i(
                /*! ./settings.js */
                "./esm/settings.js"
              ), b = i(
                /*! ./sky_text.js */
                "./esm/sky_text.js"
              ), V = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), y = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              ), C = {
                move: 0,
                line: 1,
                dash: 2,
                start: 3
              };
              (0, n.registerType)("PointType", C), (0, n.registerEnum)("PointType", C);
              function E(T) {
                this._name = T, this.points = [];
              }
              var v = {
                get_name: function() {
                  return this._name;
                },
                set_name: function(T) {
                  return this._name = T, T;
                },
                add: function(T, w, f, R) {
                  this.points.push(new m(T, w, f, R));
                }
              };
              (0, n.registerType)("Lineset", [E, v, null]);
              function m(T, w, f, R) {
                this.RA = 0, this.dec = 0, this.pointType = 0, this.name = null, this.RA = T, this.dec = w, this.pointType = f, this.name = R;
              }
              var L = {
                toString: function() {
                  return t.ss.emptyString(this.name) ? g.Coordinates.formatDMS((this.RA / 360 * 24 + 12) % 24) + ", " + g.Coordinates.formatDMS(this.dec) + ", " + this.pointType.toString() : this.name + ", " + this.pointType.toString();
                }
              };
              (0, n.registerType)("Linepoint", [m, L, null]);
              function A() {
                this._pointCount = 0, this._boundry = !1, this._noInterpollation = !1, this.readOnly = !1, this.radius = 1, this._drawCount = 0, this._constellationVertexBuffers = {};
              }
              A.RC = 0.017453292519943, A._maxSeperation = 0.745, A.containment = null, A._constToDraw = "", A.selectedSegment = null, A._artFile = null, A.artwork = null, A.boundries = null, A.pictureBlendStates = {}, A.createBasic = function(T) {
                var w = new A();
                w._name = T, w._url = null, w.lines = [];
                for (var f = t.ss.enumerate(t.ss.keys(A.fullNames)); f.moveNext(); ) {
                  var R = f.current;
                  w.lines.push(new E(R));
                }
                return w;
              }, A.create = function(T, w, f, R, O) {
                var W = new A();
                return W._noInterpollation = R, W._boundry = f, W._name = T, W._url = w, W.getFile(), W;
              }, A.drawConstellationNames = function(T, w, f) {
                A._namesBatch == null && (A.initializeConstellationNames(), A._namesBatch == null) || A._namesBatch.draw(T, w, f);
              }, A.initializeConstellationNames = function() {
                if (A.constellationCentroids != null) {
                  A._namesBatch = new b.Text3dBatch(a.Settings.get_active().get_constellationLabelsHeight());
                  for (var T = t.ss.enumerate(t.ss.keys(A.constellationCentroids)); T.moveNext(); ) {
                    var w = T.current, f = A.constellationCentroids[w], R = g.Coordinates.raDecTo3dAu(f.get_RA(), f.get_dec(), 1), O = e.Vector3d.create(0, 1, 0), W = f.get_name();
                    f.get_name() === "Triangulum Australe" && (W = t.ss.replaceString(W, " ", `
   `)), A._namesBatch.add(new b.Text3d(R, O, W, a.Settings.get_active().get_constellationLabelsHeight(), 125e-6));
                  }
                }
              }, A.drawArtwork = function(T) {
                if (A.artwork == null) {
                  A._artFile == null && (A._artFile = (0, _.makeNewFolder)(), A._artFile.loadFromUrl(V.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?W=hevelius"), A._onArtReady));
                  return;
                }
                A._maxSeperation = Math.max(0.5, Math.cos(T.get_fovAngle() * 2 / 180 * Math.PI));
                for (var w = t.ss.enumerate(A.artwork); w.moveNext(); ) {
                  var f = w.current, R = A.pictureBlendStates[f.get_constellation()];
                  if (R.set_targetState(a.Settings.get_active().get_constellationArtFilter().isSet(f.get_constellation())), R.get_state()) {
                    var O = !1, W = A.constellationCentroids[f.get_constellation()];
                    if (W != null) {
                      var N = g.Coordinates.raDecTo3d(O ? -W.get_RA() - 6 : W.get_RA(), W.get_dec());
                      e.Vector3d.dot(T.get_viewPoint(), N) > A._maxSeperation && T.drawImageSet(f.get_studyImageset(), 100);
                    }
                  }
                }
              }, A._onArtReady = function() {
                A._artFile.childLoadCallback(A._loadArtList);
              }, A._loadArtList = function() {
                A.artwork = A._artFile.get_places();
              }, A.initializeConstellations = function() {
                if (A.containment == null) {
                  var T = V.URLHelpers.singleton.engineAssetUrl("ConstellationNamePositions_EN.txt");
                  A._webFileConstNames = new y.WebFile(T), A._webFileConstNames.onStateChange = A._loadNames, A._webFileConstNames.send(), A.containment = A.create(
                    "Constellations",
                    V.URLHelpers.singleton.engineAssetUrl("constellations.txt"),
                    !0,
                    // "boundry"
                    !0,
                    // "noInterpollation"
                    !0
                    // "resource"
                  );
                }
              }, A._loadNames = function() {
                A._webFileConstNames.get_state() === 2 ? alert(A._webFileConstNames.get_message()) : A._webFileConstNames.get_state() === 1 && A._centroidsReady(A._webFileConstNames.getText());
              }, A._centroidsReady = function(T) {
                A.constellationCentroids = {}, A.fullNames = {}, A.abbreviations = {};
                for (var w = T.split(`\r
`), f = 0, R, O = t.ss.enumerate(w); O.moveNext(); ) {
                  var W = O.current;
                  R = W;
                  var N = R.split(",");
                  A.fullNames[N[1]] = N[0], A.abbreviations[N[0]] = N[1], l.ConstellationFilter.bitIDs[N[1]] = f++, A.pictureBlendStates[N[1]] = o.BlendState.create(!0, 1e3), A.constellationCentroids[N[1]] = (0, _.createPlace)(N[0], parseFloat(N[3]), parseFloat(N[2]), 128, N[1], 2, 360);
                }
                l.ConstellationFilter.buildConstellationFilters();
              }, A.fullName = function(T) {
                return t.ss.keyExists(A.fullNames, T) ? A.fullNames[T] : T;
              }, A.abbreviation = function(T) {
                return A.abbreviations != null && !t.ss.emptyString(T) && t.ss.keyExists(A.abbreviations, T) ? A.abbreviations[T] : T;
              };
              var K = {
                get_name: function() {
                  return this._name;
                },
                set_name: function(T) {
                  return this._name = T, T;
                },
                getFile: function() {
                  this._webFile = new y.WebFile(this._url), this._webFile.onStateChange = t.ss.bind("fileStateChange", this), this._webFile.send();
                },
                fileStateChange: function() {
                  this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadConstellationData(this._webFile.getText());
                },
                _loadConstellationData: function(T) {
                  this._boundry && !this._noInterpollation && (A.boundries = {}), this.lines = [];
                  var w = null;
                  try {
                    for (var f = T.split(`\r
`), R, O = "", W, N, $ = 0, S = 0, I = t.ss.enumerate(f); I.moveNext(); ) {
                      var x = I.current, P = x;
                      if (P.substr(11, 2) === "- " && (P = P.substr(0, 11) + " -" + P.substr(13, P.length - 13)), P.substr(11, 2) === "+ " && (P = P.substr(0, 11) + " +" + P.substr(13, P.length - 13)), N = parseFloat(P.substr(11, 10)), this._noInterpollation, W = parseFloat(P.substr(0, 10)), R = t.ss.trim(P.substr(23, 4)), !this._boundry)
                        t.ss.trim(P.substr(28, 1)) && (S = parseInt(P.substr(28, 1)));
                      else if (this._noInterpollation && P.substr(28, 1) !== "O")
                        continue;
                      R !== O && (S = 3, w = new E(R), this.lines.push(w), this._boundry && !this._noInterpollation && (A.boundries[R] = w), O = R, $ = 0), this._noInterpollation && (Math.abs(W - $) > 12 && (W = W - 24 * (W - $ < 0 ? -1 : 1)), $ = W);
                      var d = null;
                      P.length > 30 && (d = t.ss.trim(P.substr(30))), (d == null || d !== "Empty") && w.add(W, N, S, d), this._pointCount++, S = 1;
                    }
                  } catch {
                  }
                },
                draw: function(T, w, f, R) {
                  A._maxSeperation = Math.max(0.6, Math.cos(T.get_fovAngle() * 2 / 180 * Math.PI)), this._drawCount = 0;
                  var O = null;
                  if (!(this.lines == null || A.constellationCentroids == null)) {
                    A._constToDraw = f;
                    for (var W = t.ss.enumerate(this.lines); W.moveNext(); ) {
                      var N = W.current;
                      A._constToDraw === N.get_name() && this._boundry ? O = N : (!w || !this._boundry) && this._drawSingleConstellation(T, N, 1);
                    }
                    O != null && this._drawSingleConstellation(T, O, 1);
                  }
                },
                _drawSingleConstellation: function(T, w, f) {
                  var R = A.constellationCentroids[w.get_name()];
                  if (R != null) {
                    var O = g.Coordinates.raDecTo3d(R.get_RA(), R.get_dec());
                    if (e.Vector3d.dot(T.get_viewPoint(), O) < A._maxSeperation)
                      return;
                  }
                  if (!t.ss.keyExists(this._constellationVertexBuffers, w.get_name())) {
                    var W = w.points.length, N = new r.SimpleLineList();
                    N.set_depthBuffered(!1), this._constellationVertexBuffers[w.get_name()] = N;
                    for (var $ = new e.Vector3d(), S, I = 0; I < W; I++)
                      !w.points[I].pointType || !I ? $ = g.Coordinates.raDecTo3d(w.points[I].RA, w.points[I].dec) : (S = g.Coordinates.raDecTo3d(w.points[I].RA, w.points[I].dec), N.addLine($, S), $ = S);
                    this._boundry && (S = g.Coordinates.raDecTo3d(w.points[0].RA, w.points[0].dec), N.addLine($, S));
                  }
                  var x = "red";
                  this._boundry ? A._constToDraw !== w.get_name() ? x = a.Settings.get_globalSettings().get_constellationBoundryColor() : x = a.Settings.get_globalSettings().get_constellationSelectionColor() : x = a.Settings.get_globalSettings().get_constellationFigureColor(), this._constellationVertexBuffers[w.get_name()].drawLines(T, f, c.Color.load(x));
                },
                _drawSingleConstellationOld: function(T, w) {
                  var f = A.constellationCentroids[w.get_name()];
                  if (f != null) {
                    var R = g.Coordinates.raDecTo3d(f.get_RA(), f.get_dec());
                    if (e.Vector3d.dot(T.get_viewPoint(), R) < A._maxSeperation)
                      return;
                  }
                  this._drawCount++;
                  var O;
                  if (this._boundry ? A._constToDraw !== w.get_name() ? O = a.Settings.get_globalSettings().get_constellationBoundryColor() : O = a.Settings.get_globalSettings().get_constellationSelectionColor() : O = a.Settings.get_globalSettings().get_constellationFigureColor(), T.gl == null) {
                    var W = T.device, N = w.points.length, $ = new e.Vector3d();
                    W.save();
                    var S = !1;
                    W.beginPath(), W.strokeStyle = O, W.lineWidth = 2, W.globalAlpha = 0.25;
                    for (var I = 0; I < N; I++)
                      if (!w.points[I].pointType || !I)
                        S && W.stroke(), $ = T.WVP.transform(g.Coordinates.raDecTo3d(w.points[I].RA, w.points[I].dec)), W.moveTo($.x, $.y);
                      else {
                        var x = T.WVP.transform(g.Coordinates.raDecTo3d(w.points[I].RA, w.points[I].dec));
                        W.lineTo(x.x, x.y), S = !0;
                      }
                    this._boundry && W.closePath(), W.stroke(), W.restore();
                  }
                },
                findConstellationForPoint: function(T, w) {
                  if (w > 88.402 || this.lines == null)
                    return "UMI";
                  for (var f = t.ss.enumerate(this.lines); f.moveNext(); ) {
                    var R = f.current, O = R.points.length, W, N, $ = !1;
                    for (W = 0, N = O - 1; W < O; N = W++)
                      (R.points[W].dec <= w && w < R.points[N].dec || R.points[N].dec <= w && w < R.points[W].dec) && T < (R.points[N].RA - R.points[W].RA) * (w - R.points[W].dec) / (R.points[N].dec - R.points[W].dec) + R.points[W].RA && ($ = !$);
                    if ($)
                      return R.get_name();
                  }
                  return T > 0 ? this.findConstellationForPoint(T - 24, w) : w > 65.5 ? "UMI" : w < -65.5 ? "OCT" : "Error";
                }
              };
              (0, n.registerType)("Constellations", [A, K, null]);
            }
          ),
          /***/
          "./esm/coordinates.js": (
            /*!****************************!*\
              !*** ./esm/coordinates.js ***!
              \****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Coordinates: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              );
              function r(c, l) {
                this._ascention = 0, this._declination = 0, this._ascention = c + Math.PI * 80 % (Math.PI * 2), this._declination = l;
              }
              r.RC = 0.01745329277777778, r.RCRA = 0.26179939166666666, r.radius = 1, r._rotationMatrix = null, r.geoTo3d = function(c, l) {
                return _.Vector3d.create(Math.cos(l * r.RC) * Math.cos(c * r.RC) * 1, Math.sin(c * r.RC) * 1, Math.sin(l * r.RC) * Math.cos(c * r.RC) * 1);
              }, r.geoTo3dDouble = function(c, l) {
                return _.Vector3d.create(Math.cos(l * r.RC) * Math.cos(c * r.RC) * 1, Math.sin(c * r.RC) * 1, Math.sin(l * r.RC) * Math.cos(c * r.RC) * 1);
              }, r.geoTo3dRad = function(c, l, g) {
                return _.Vector3d.create(Math.cos(l * r.RC) * Math.cos(c * r.RC) * g, Math.sin(c * r.RC) * g, Math.sin(l * r.RC) * Math.cos(c * r.RC) * g);
              }, r.raDecTo3d = function(c, l) {
                return _.Vector3d.create(Math.cos(c * r.RCRA) * Math.cos(l * r.RC) * 1, Math.sin(l * r.RC) * 1, Math.sin(c * r.RCRA) * Math.cos(l * r.RC) * 1);
              }, r.raDecTo3dAu = function(c, l, g) {
                return _.Vector3d.create(Math.cos(c * r.RCRA) * Math.cos(l * r.RC) * g, Math.sin(l * r.RC) * g, Math.sin(c * r.RCRA) * Math.cos(l * r.RC) * g);
              }, r.raDecTo3dMat = function(c, l, g) {
                return _.Vector3d._transformCoordinate(_.Vector3d.create(Math.cos(c * r.RCRA) * Math.cos(l * r.RC) * 1, Math.sin(l * r.RC) * 1, Math.sin(c * r.RCRA) * Math.cos(l * r.RC) * 1), g);
              }, r.raDecTo3dPointRad = function(c, l) {
                return c.set_dec(-c.get_dec()), _.Vector3d.create(Math.cos(c.get_RA() * r.RCRA) * Math.cos(c.get_dec() * r.RC) * l, Math.sin(c.get_dec() * r.RC) * l, Math.sin(c.get_RA() * r.RCRA) * Math.cos(c.get_dec() * r.RC) * l);
              }, r.sterographicTo3d = function(c, l, g, a, b, V, y, C, E) {
                var v = 90, m = 0;
                if (c -= V, l -= y, c || l) {
                  var L = (1 + Math.sin(Math.abs(a) / 180 * Math.PI)) * 6371e3 / C, A = L * L, K = 180 / Math.PI;
                  c ? m = Math.atan2(l, c) * K : m = 90 * l < 0 ? -1 : 1;
                  var T = c * c + l * l;
                  v = (A - T) / (A + T), v = Math.asin(v) * K, E || (v = -v, m = -m, b = -b);
                }
                return r.geoTo3dRad(v, 90 + m + b, g);
              }, r.equitorialToHorizon = function(c, l, g) {
                var a = r.mstFromUTC2(g, l.get_lng()) - c.get_RA() * 15;
                a < 0 && (a += 360);
                var b = a * r.RC, V = c.get_dec() * r.RC, y = l.get_lat() * r.RC, C = Math.sin(V) * Math.sin(y) + Math.cos(V) * Math.cos(y) * Math.cos(b), E = Math.asin(C), v = (Math.sin(V) - Math.sin(E) * Math.sin(y)) / (Math.cos(E) * Math.cos(y)), m = Math.acos(v), L = new r(m, E);
                return Math.sin(b) > 0 && L.set_az(360 - L.get_az()), L;
              }, r.horizonToEquitorial = function(c, l, g) {
                var a = r.mstFromUTC2(g, l.get_lng()), b, V, y = r._altAzToRaDec(c.get_alt() * r.RC, c.get_az() * r.RC, l.get_lat() * r.RC);
                b = y.x, V = y.y;
                var C = b / r.RC;
                return a += C, a < 0 && (a += 360), a > 360 && (a -= 360), r.fromRaDec(a / 15, V / r.RC);
              }, r._altAzToRaDec = function(c, l, g) {
                var a = 0, b = 0;
                return l = Math.PI - l, l < 0 && (l += Math.PI * 2), a = Math.atan2(Math.sin(l), Math.cos(l) * Math.sin(g) + Math.tan(c) * Math.cos(g)), a < 0 && (a += Math.PI * 2), b = Math.asin(Math.sin(g) * Math.sin(c) - Math.cos(g) * Math.cos(c) * Math.cos(l)), _.Vector2d.create(a, b);
              }, r.mstFromUTC2 = function(c, l) {
                var g = c.getUTCFullYear(), a = c.getUTCMonth() + 1, b = c.getUTCDate(), V = c.getUTCHours(), y = c.getUTCMinutes(), C = c.getUTCSeconds() + c.getUTCMilliseconds() / 1e3;
                (a === 1 || a === 2) && (g -= 1, a += 12);
                var E = n.ss.truncate(g / 100), v = 2 - E + Math.floor(E / 4), m = Math.floor(365.25 * g), L = Math.floor(30.6001 * (a + 1)), A, K, T;
                if (A = v + m + L - 730550.5 + b + (V + y / 60 + C / 3600) / 24, K = A / 36525, T = 280.46061837 + 360.98564736629 * A + 387933e-9 * K * K - K * K * K / 3871e4 + l, T > 0)
                  for (; T > 360; )
                    T = T - 360;
                else
                  for (; T < 0; )
                    T = T + 360;
                return T;
              }, r.cartesianToSpherical = function(c) {
                var l, g, a = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z), b = Math.sqrt(c.x * c.x + c.z * c.z);
                return g = Math.asin(c.y / a), 0 < c.x ? l = Math.asin(c.z / b) : 0 > c.x ? l = Math.PI - Math.asin(c.z / b) : l = 0, new r(l, g);
              }, r.cartesianToSpherical2 = function(c) {
                var l = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z), g = Math.atan2(c.z, c.x), a = Math.asin(c.y / l);
                return new r(g, a);
              }, r.cartesianToSphericalSky = function(c) {
                var l = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z), g = Math.atan2(c.z, c.x), a = Math.asin(-c.y / l);
                return _.Vector2d.create(g / Math.PI * 12, a / Math.PI * 180);
              }, r.sphericalSkyToCartesian = function(c) {
                var l = c.x * (Math.PI / 12), g = c.y * (Math.PI / 180), a = Math.cos(l) * Math.cos(g), b = -Math.sin(g), V = Math.sin(l) * Math.cos(g);
                return _.Vector3d.create(a, b, V);
              }, r.cartesianToLatLng = function(c) {
                var l = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z), g = Math.atan2(c.z, c.x), a = Math.asin(c.y / l);
                return _.Vector2d.create(g * 180 / Math.PI, a * 180 / Math.PI);
              }, r.cartesianToSpherical3 = function(c) {
                var l = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z), g = Math.atan2(c.z, c.x), a = Math.asin(c.y / l);
                return new r(g, a);
              }, r.sign = function(c) {
                return c < 0 ? -1 : 1;
              }, r.formatDMSSign = function(c, l) {
                try {
                  c += r.sign(c) * 1388888888889e-16;
                  var g = n.ss.truncate(c), a = (c - n.ss.truncate(c)) * 60, b = (a - n.ss.truncate(a)) * 60;
                  if (l) {
                    var V = c > 0 ? "+" : "-";
                    return n.ss.format("{3}{0:00;00}:{1:00}:{2:00}", g, Math.abs(n.ss.truncate(a)), Math.abs(n.ss.truncate(b)), V);
                  } else
                    return n.ss.format("{0:00}:{1:00}:{2:00}", g, Math.abs(n.ss.truncate(a)), Math.abs(n.ss.truncate(b)));
                } catch {
                  return "";
                }
              }, r.twoPlaces = function(c) {
                var l = c.toString();
                return l.length < 2 && (l = "0" + l), l;
              }, r.formatDMS = function(c) {
                try {
                  c += (c < 0 ? -1 : 1) * 1388888888889e-16;
                  var l = Math.abs(n.ss.truncate(c)), g = (c - n.ss.truncate(c)) * 60, a = (g - n.ss.truncate(g)) * 60, b = c < 0 ? "-" : "";
                  return n.ss.format("{3}{0}:{1}:{2}", Math.abs(l), r.twoPlaces(Math.abs(n.ss.truncate(g))), r.twoPlaces(Math.abs(n.ss.truncate(a))), b);
                } catch {
                  return "";
                }
              }, r.formatDMSWide = function(c) {
                try {
                  c += r.sign(c) * 1388888888889e-16;
                  var l = Math.abs(n.ss.truncate(c)), g = (c - n.ss.truncate(c)) * 60, a = (g - n.ss.truncate(g)) * 60, b = c < 0 ? "-" : "";
                  return n.ss.format("{3}{0:00} : {1:00} : {2:00}", l, Math.abs(n.ss.truncate(g)), Math.abs(n.ss.truncate(a)), b);
                } catch {
                  return "";
                }
              }, r.formatHMS = function(c) {
                try {
                  c += r.sign(c) * 1388888888889e-16;
                  var l = n.ss.truncate(c), g = (c - n.ss.truncate(c)) * 60, a = (g - n.ss.truncate(g)) * 60;
                  return n.ss.format("{0:00}h{1:00}m{2:00}s", l, Math.abs(n.ss.truncate(g)), Math.abs(n.ss.truncate(a)));
                } catch {
                  return "";
                }
              }, r.parseRA = function(c, l) {
                c = n.ss.trim(c).toLowerCase(), (c.indexOf("d") > -1 || c.indexOf("°") > -1) && (l = !0), (c.indexOf("h") > -1 || c.indexOf(":") > -1) && (l = !1);
                var g = r.parse(c) / (l ? 15 : 1);
                return Math.max(Math.min(g, 24), 0);
              }, r.parseDec = function(c) {
                var l = r.parse(c);
                return Math.max(Math.min(l, 90), -90);
              }, r.parse = function(c) {
                try {
                  if (c = n.ss.trim(c).toLowerCase(), c = n.ss.replaceString(n.ss.replaceString(n.ss.replaceString(n.ss.replaceString(n.ss.replaceString(n.ss.replaceString(c, "d ", "d"), "h ", "h"), "m ", "m"), "s ", "s"), "' ", "'"), '" ', '"'), e.Util.stringContains(c, [":", " ", "d", "h", "m", "s", "'", '"', "°"])) {
                    var l = 0, g = 0, a = 0, b = 0, V = e.Util.splitString(c, [":", " ", "d", "h", "m", "s", "'", '"', "°"]);
                    return V.length > 0 && (n.ss.emptyString(V[0]) || (l = Math.abs(parseFloat(V[0])), b = parseFloat(V[0]) < 0 ? -1 : 1, V[0].indexOf("-") > -1 && (b = -1))), V.length > 1 && (n.ss.emptyString(V[1]) || (g = parseFloat(V[1]))), V.length > 2 && (n.ss.emptyString(V[2]) || (a = parseFloat(V[2]))), b || (b = 1), b * (l + g / 60 + a / 3600);
                  } else {
                    var y = 0;
                    try {
                      y = parseFloat(c);
                    } catch {
                      y = 0;
                    }
                    return y;
                  }
                } catch {
                  return 0;
                }
              }, r.fromRaDec = function(c, l) {
                return new r((c - 12) * 15 * r.RC, l * r.RC);
              }, r.fromLatLng = function(c, l) {
                return new r(l * r.RC, c * r.RC);
              }, r.dmsToDegrees = function(c, l, g) {
                return c + l / 60 + g / 3600;
              }, r.degreesToRadians = function(c) {
                return c * 0.0174532925199433;
              }, r.radiansToDegrees = function(c) {
                return c * 57.2957795130823;
              }, r.radiansToHours = function(c) {
                return c * 3.81971863420549;
              }, r.hoursToRadians = function(c) {
                return c * 0.261799387799149;
              }, r.hoursToDegrees = function(c) {
                return c * 15;
              }, r.degreesToHours = function(c) {
                return c / 15;
              }, r.PI = function() {
                return 3.14159265358979;
              }, r.mapTo0To360Range = function(c) {
                for (var l = c; l < 0; )
                  l += 360;
                for (; l > 360; )
                  l -= 360;
                return l;
              }, r.mapTo0To24Range = function(c) {
                for (var l = c; l < 0; )
                  l += 24;
                for (; l > 24; )
                  l -= 24;
                return l;
              }, r.meanObliquityOfEcliptic = function(c) {
                var l = (c - 2451545) / 3652500, g = l * l, a = g * l, b = a * l, V = b * l, y = V * l, C = y * l, E = C * l, v = E * l, m = v * l;
                return r.dmsToDegrees(23, 26, 21.448) - r.dmsToDegrees(0, 0, 4680.93) * l - r.dmsToDegrees(0, 0, 1.55) * g + r.dmsToDegrees(0, 0, 1999.25) * a - r.dmsToDegrees(0, 0, 51.38) * b - r.dmsToDegrees(0, 0, 249.67) * V - r.dmsToDegrees(0, 0, 39.05) * y + r.dmsToDegrees(0, 0, 7.12) * C + r.dmsToDegrees(0, 0, 27.87) * E + r.dmsToDegrees(0, 0, 5.79) * v + r.dmsToDegrees(0, 0, 2.45) * m;
              }, r.j2000toGalactic = function(c, l) {
                var g = [Math.cos(c / 180 * Math.PI) * Math.cos(l / 180 * Math.PI), Math.sin(c / 180 * Math.PI) * Math.cos(l / 180 * Math.PI), Math.sin(l / 180 * Math.PI)];
                r._rotationMatrix == null && (r._rotationMatrix = new Array(3), r._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], r._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], r._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
                for (var a = new Array(3), b = 0; b < 3; b++)
                  a[b] = g[0] * r._rotationMatrix[b][0] + g[1] * r._rotationMatrix[b][1] + g[2] * r._rotationMatrix[b][2];
                var V = Math.atan2(a[1], a[0]);
                V < 0 && (V = V + 2 * Math.PI), V > 2 * Math.PI && (V = V - 2 * Math.PI);
                var y = Math.atan2(a[2], Math.sqrt(a[0] * a[0] + a[1] * a[1]));
                return [V / Math.PI * 180, y / Math.PI * 180];
              }, r.galacticTo3dDouble = function(c, l) {
                var g = r.galactictoJ2000(c, l);
                return r.raDecTo3dAu(g[0] / 15, g[1], 1);
              }, r.galactictoJ2000 = function(c, l) {
                var g = [Math.cos(c / 180 * Math.PI) * Math.cos(l / 180 * Math.PI), Math.sin(c / 180 * Math.PI) * Math.cos(l / 180 * Math.PI), Math.sin(l / 180 * Math.PI)];
                r._rotationMatrix == null && (r._rotationMatrix = new Array(3), r._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], r._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], r._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
                for (var a = new Array(3), b = 0; b < 3; b++)
                  a[b] = g[0] * r._rotationMatrix[0][b] + g[1] * r._rotationMatrix[1][b] + g[2] * r._rotationMatrix[2][b];
                var V = Math.atan2(a[1], a[0]);
                V < 0 && (V = V + 2 * Math.PI), V > 2 * Math.PI && (V = V - 2 * Math.PI);
                var y = Math.atan2(a[2], Math.sqrt(a[0] * a[0] + a[1] * a[1]));
                return [V / Math.PI * 180, y / Math.PI * 180];
              };
              var o = {
                distance: function(c) {
                  var l = this.get_lat(), g = this.get_lng() * Math.cos(l * r.RC), a = c.get_lat(), b = c.get_lng() * Math.cos(a * r.RC);
                  return Math.sqrt((l - a) * (l - a) + (g - b) * (g - b));
                },
                distance3d: function(c) {
                  var l = r.geoTo3dDouble(c.get_lat(), c.get_lng()), g = r.geoTo3dDouble(this.get_lat(), this.get_lng()), a = _.Vector3d.subtractVectors(l, g);
                  return a.length() / r.RC;
                },
                angle: function(c) {
                  var l = this.get_lat(), g = this.get_lng() * Math.cos(l * r.RC), a = c.get_lat(), b = c.get_lng() * Math.cos(a * r.RC);
                  return Math.atan2(a - l, b - g);
                },
                get_RA: function() {
                  return (this._ascention / Math.PI * 12 + 12) % 24;
                },
                set_RA: function(c) {
                  return this._ascention = c / 12 * Math.PI, c;
                },
                get_dec: function() {
                  return this._declination / r.RC;
                },
                set_dec: function(c) {
                  return this._declination = c * r.RC, c;
                },
                get_lat: function() {
                  return this._declination / r.RC;
                },
                set_lat: function(c) {
                  return this._declination = c * r.RC, c;
                },
                get_lng: function() {
                  var c = this._ascention / r.RC;
                  return c <= 180 ? c : -180 + (180 - c);
                },
                set_lng: function(c) {
                  return this._ascention = c * r.RC + Math.PI * 2 % (Math.PI * 2), c;
                },
                get_alt: function() {
                  return this._declination / r.RC;
                },
                set_alt: function(c) {
                  return this._declination = c * r.RC, c;
                },
                get_az: function() {
                  return this._ascention / r.RC;
                },
                set_az: function(c) {
                  return this._ascention = c * r.RC, c;
                },
                toString: function() {
                  return n.ss.format("Lat: {0}, Lng: {1}", this.get_lat(), this.get_lng());
                }
              };
              (0, t.registerType)("Coordinates", [r, o, null]);
            }
          ),
          /***/
          "./esm/data_globals.js": (
            /*!*****************************!*\
              !*** ./esm/data_globals.js ***!
              \*****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                createPlace: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                freestandingMode: () => (
                  /* binding */
                  t
                ),
                /* harmony export */
                globalScriptInterface: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                globalWWTControl: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                layerManagerGetAllMaps: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                loadWtmlFile: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                makeNewFolder: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                makeNewHipsProperties: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                setManagerVisibleLayerList: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                set_createPlace: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                set_freestandingMode: () => (
                  /* binding */
                  n
                ),
                /* harmony export */
                set_globalScriptInterface: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                set_globalWWTControl: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                set_layerManagerGetAllMaps: () => (
                  /* binding */
                  L
                ),
                /* harmony export */
                set_loadWtmlFile: () => (
                  /* binding */
                  K
                ),
                /* harmony export */
                set_makeNewFolder: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                set_makeNewHipsProperties: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                set_setManagerVisibleLayerList: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                set_tourDocumentFromUrlRaw: () => (
                  /* binding */
                  v
                ),
                /* harmony export */
                tourDocumentFromUrlRaw: () => (
                  /* binding */
                  E
                )
                /* harmony export */
              });
              var t = !1;
              function n(T) {
                t = !!T;
              }
              var e = null;
              function _(T) {
                e = T;
              }
              var r = null;
              function o(T) {
                r = T;
              }
              var c = null;
              function l(T) {
                c = T;
              }
              var g = null;
              function a(T) {
                g = T;
              }
              var b = null;
              function V(T) {
                b = T;
              }
              var y = null;
              function C(T) {
                y = T;
              }
              var E = null;
              function v(T) {
                E = T;
              }
              var m = null;
              function L(T) {
                m = T;
              }
              var A = null;
              function K(T) {
                A = T;
              }
            }
          ),
          /***/
          "./esm/double3d.js": (
            /*!*************************!*\
              !*** ./esm/double3d.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ConvexHull: () => (
                  /* binding */
                  X
                ),
                /* harmony export */
                DoubleUtilities: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                LocationHint: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                Matrix2d: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                Matrix3d: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                PlaneD: () => (
                  /* binding */
                  W
                ),
                /* harmony export */
                PositionColored: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                PositionColoredTextured: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                PositionNormalTextured: () => (
                  /* binding */
                  P
                ),
                /* harmony export */
                PositionNormalTexturedTangent: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                PositionNormalTexturedX2: () => (
                  /* binding */
                  I
                ),
                /* harmony export */
                PositionTexture: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                SphereHull: () => (
                  /* binding */
                  U
                ),
                /* harmony export */
                Vector2d: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                Vector3d: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                Vector4d: () => (
                  /* binding */
                  $
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./color.js */
                "./esm/color.js"
              ), _ = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              );
              const r = 3.1415927 / 180;
              function o(M, B) {
                return m.create(
                  Math.cos(B * r) * Math.cos(M * r) * 1,
                  Math.sin(M * r) * 1,
                  Math.sin(B * r) * Math.cos(M * r) * 1
                );
              }
              function c(M) {
                var B = Math.sqrt(M.x * M.x + M.y * M.y + M.z * M.z), D = Math.atan2(M.z, M.x), k = Math.asin(M.y / B);
                D = D + Math.PI * 80 % (Math.PI * 2);
                var G = D / r;
                G > 180 && (G = -180 + (180 - G));
                var j = k / r;
                return [j, G];
              }
              var l = {
                slash: 0,
                backslash: 1,
                top: 2
              };
              (0, t.registerType)("LocationHint", l);
              function g() {
                this.tu = 0, this.tv = 0, this.position = new m();
              }
              g.createPos = function(M, B, D) {
                var k = new g();
                return k.tu = B * _.tileUvMultiple, k.tv = D * _.tileUvMultiple, k.position = M, k;
              }, g.createPosRaw = function(M, B, D) {
                var k = new g();
                return k.tu = B, k.tv = D, k.position = M, k;
              }, g.createPosSize = function(M, B, D, k, G) {
                var j = new g();
                return j.tu = B * k, j.tv = D * G, j.position = M, j;
              }, g.create = function(M, B, D, k, G) {
                var j = new g();
                return j.position = m.create(M, B, D), j.tu = k * _.tileUvMultiple, j.tv = G * _.tileUvMultiple, j;
              };
              var a = {
                copy: function() {
                  var M = new g();
                  return M.position = m.makeCopy(this.position), M.tu = this.tu, M.tv = this.tv, M;
                },
                toString: function() {
                  return n.ss.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
                }
              };
              (0, t.registerType)("PositionTexture", [g, a, null]);
              function b() {
                this.tu = 0, this.tv = 0, this.color = new e.Color(), this.position = new m();
              }
              b.createPos = function(M, B, D) {
                var k = new b();
                return k.tu = B * _.tileUvMultiple, k.tv = D * _.tileUvMultiple, k.position = M, k;
              }, b.createPosRaw = function(M, B, D) {
                var k = new b();
                return k.tu = B, k.tv = D, k.position = M, k;
              }, b.createPosSize = function(M, B, D, k, G) {
                var j = new b();
                return j.tu = B * k, j.tv = D * G, j.position = M, j;
              }, b.create = function(M, B, D, k, G) {
                var j = new g();
                return j.position = m.create(M, B, D), j.tu = k * _.tileUvMultiple, j.tv = G * _.tileUvMultiple, j;
              };
              var V = {
                copy: function() {
                  var M = new g();
                  return M.position = m.makeCopy(this.position), M.tu = this.tu, M.tv = this.tv, M;
                },
                toString: function() {
                  return n.ss.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
                }
              };
              (0, t.registerType)("PositionColoredTextured", [b, V, null]);
              function y(M, B) {
                this.color = new e.Color(), this.color = B._clone(), this.position = M.copy();
              }
              var C = {
                copy: function() {
                  var M = new y(this.position, this.color);
                  return M;
                },
                toString: function() {
                  return n.ss.format("{0}, {1}, {2}, {3}", this.position.x, this.position.y, this.position.z, this.color.toString());
                }
              };
              (0, t.registerType)("PositionColored", [y, C, null]);
              function E(M, B, D, k) {
                this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tanx = 0, this.tany = 0, this.tanz = 0, this.x = M.x, this.y = M.y, this.z = M.z, this.nx = B.x, this.ny = B.y, this.nz = B.z, this.tu = D.x, this.tv = D.y, this.tanx = k.x, this.tany = k.y, this.tanz = k.z;
              }
              var v = {
                get_normal: function() {
                  return m.create(this.nx, this.ny, this.nz);
                },
                set_normal: function(M) {
                  return this.nx = M.x, this.ny = M.y, this.nz = M.z, M;
                },
                get_position: function() {
                  return m.create(this.x, this.y, this.z);
                },
                set_position: function(M) {
                  return this.x = M.x, this.y = M.y, this.z = M.z, M;
                },
                get_texCoord: function() {
                  return A.create(this.tu, this.tv);
                },
                set_texCoord: function(M) {
                  return this.tu = M.x, this.tv = M.y, M;
                },
                get_tangent: function() {
                  return m.create(this.tanx, this.tany, this.tanz);
                },
                set_tangent: function(M) {
                  return this.tanx = M.x, this.tany = M.y, this.tanz = M.z, M;
                },
                toString: function() {
                  return n.ss.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, TanX={8}, TanY={9}, TanZ={10}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tanx, this.tany, this.tanz);
                }
              };
              (0, t.registerType)("PositionNormalTexturedTangent", [E, v, null]);
              function m() {
                this.x = 0, this.y = 0, this.z = 0;
              }
              m.create = function(M, B, D) {
                var k = new m();
                return k.x = M, k.y = B, k.z = D, k;
              }, m.makeCopy = function(M) {
                var B = new m();
                return B.x = M.x, B.y = M.y, B.z = M.z, B;
              }, m.negate = function(M) {
                return m.create(-M.x, -M.y, -M.z);
              }, m.midPoint = function(M, B) {
                var D = m.create((M.x + B.x) / 2, (M.y + B.y) / 2, (M.z + B.z) / 2);
                return D;
              }, m.midPointByLength = function(M, B) {
                var D = m.create((M.x + B.x) / 2, (M.y + B.y) / 2, (M.z + B.z) / 2);
                return D.normalize(), D.multiply(M.length()), D;
              }, m.get_empty = function() {
                return m.create(0, 0, 0);
              }, m.addVectors = function(M, B) {
                return m.create(M.x + B.x, M.y + B.y, M.z + B.z);
              }, m.cross = function(M, B) {
                return m.create(M.y * B.z - M.z * B.y, M.z * B.x - M.x * B.z, M.x * B.y - M.y * B.x);
              }, m.dot = function(M, B) {
                return M.x * B.x + M.y * B.y + M.z * B.z;
              }, m.getLength = function(M) {
                return Math.sqrt(M.x * M.x + M.y * M.y + M.z * M.z);
              }, m.getLengthSq = function(M) {
                return M.x * M.x + M.y * M.y + M.z * M.z;
              }, m.lerp = function(M, B, D) {
                return m.create(M.x * (1 - D) + B.x * D, M.y * (1 - D) + B.y * D, M.z * (1 - D) + B.z * D);
              }, m.midpoint = function(M, B) {
                var D = m.create(M.x * 0.5 + B.x * 0.5, M.y * 0.5 + B.y * 0.5, M.z * 0.5 + B.z * 0.5);
                return D.normalize(), D;
              }, m.slerp = function(M, B, D) {
                for (var k = m.dot(M, B); k < 0.98; ) {
                  var G = m.midpoint(M, B);
                  D > 0.5 ? (M = G, D -= 0.5, D *= 2) : (B = G, D *= 2), k = m.dot(M, B);
                }
                var j = m.lerp(M, B, D);
                return j.normalize(), j;
              }, m.multiplyScalar = function(M, B) {
                var D = M.copy();
                return D.multiply(B), D;
              }, m.scale = function(M, B) {
                var D = M;
                return D.multiply(B), D;
              }, m.subtractVectors = function(M, B) {
                var D = M.copy();
                return D.subtract(B), D;
              }, m.parse = function(M) {
                var B = new m(), D = M.split(",");
                return D.length === 3 && (B.x = parseFloat(D[0]), B.y = parseFloat(D[1]), B.z = parseFloat(D[2])), B;
              }, m._transformCoordinate = function(M, B) {
                return B.transform(M);
              };
              var L = {
                set: function(M, B, D) {
                  this.x = M, this.y = B, this.z = D;
                },
                copy: function() {
                  var M = new m();
                  return M.x = this.x, M.y = this.y, M.z = this.z, M;
                },
                round: function() {
                  this.x = n.ss.truncate(this.x * 65536) / 65536, this.y = n.ss.truncate(this.y * 65536) / 65536, this.z = n.ss.truncate(this.z * 65536) / 65536;
                },
                add: function(M) {
                  this.x += M.x, this.y += M.y, this.z += M.z;
                },
                length: function() {
                  return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
                },
                lengthSq: function() {
                  return this.x * this.x + this.y * this.y + this.z * this.z;
                },
                multiply: function(M) {
                  this.x *= M, this.y *= M, this.z *= M;
                },
                normalize: function() {
                  var M = this.length();
                  M && (this.x /= M, this.y /= M, this.z /= M);
                },
                rotateX: function(M) {
                  var B, D;
                  D = this.y * Math.cos(M) - this.z * Math.sin(M), B = this.y * Math.sin(M) + this.z * Math.cos(M), this.z = B, this.y = D;
                },
                rotateZ: function(M) {
                  var B, D;
                  B = this.x * Math.cos(M) - this.y * Math.sin(M), D = this.x * Math.sin(M) + this.y * Math.cos(M), this.y = D, this.x = B;
                },
                rotateY: function(M) {
                  var B, D;
                  B = this.z * Math.cos(M) - this.x * Math.sin(M), D = this.z * Math.sin(M) + this.x * Math.cos(M), this.x = D, this.z = B;
                },
                subtract: function(M) {
                  return this.x -= M.x, this.y -= M.y, this.z -= M.z, this;
                },
                toString: function() {
                  return n.ss.format("{0}, {1}, {2}", this.x, this.y, this.z);
                },
                toSpherical: function() {
                  var M, B, D = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z), k = Math.sqrt(this.x * this.x + this.z * this.z);
                  return B = Math.asin(this.y / D), k ? 0 <= this.x ? M = Math.asin(this.z / k) : M = Math.PI - Math.asin(this.z / k) : M = 0, A.create((M + Math.PI) % (2 * Math.PI), B + Math.PI / 2);
                },
                toRaDec: function() {
                  var M = this.toSpherical();
                  return M.x = M.x / Math.PI * 12, M.y = M.y / Math.PI * 180 - 90, M;
                },
                distanceToLine: function(M, B) {
                  var D = m.subtractVectors(B, M), k = m.subtractVectors(M, this), G = m.cross(D, k), j = G.length(), ee = m.subtractVectors(B, M), Z = ee.length();
                  return j / Z;
                },
                _transformByMatrics: function(M) {
                  var B = M.transform(this);
                  this.x = B.x, this.y = B.y, this.z = B.z;
                }
              };
              (0, t.registerType)("Vector3d", [m, L, null]), m.zero = new m();
              function A() {
                this.x = 0, this.y = 0;
              }
              A.lerp = function(M, B, D) {
                return A.create(M.x * (1 - D) + B.x * D, M.y * (1 - D) + B.y * D);
              }, A.cartesianToSpherical2 = function(M) {
                var B = Math.sqrt(M.x * M.x + M.y * M.y + M.z * M.z), D = Math.atan2(M.z, M.x), k = Math.asin(M.y / B);
                return A.create(D / Math.PI * 180, k / Math.PI * 180);
              }, A.average3d = function(M, B) {
                var D = o(M.y, M.x), k = o(B.y, B.x), G = m.addVectors(D, k);
                return G.multiply(0.5), G.normalize(), A.cartesianToSpherical2(G);
              }, A.create = function(M, B) {
                var D = new A();
                return D.x = M, D.y = B, D;
              }, A.subtract = function(M, B) {
                return A.create(M.x - B.x, M.y - B.y);
              };
              var K = {
                distance3d: function(M) {
                  var B = o(M.y, M.x), D = o(this.y, this.x), k = m.subtractVectors(B, D);
                  return k.length() / Math.PI * 180;
                },
                get_length: function() {
                  return Math.sqrt(this.x * this.x + this.y * this.y);
                },
                normalize: function() {
                  var M = this.get_length();
                  M && (this.x /= M, this.y /= M);
                },
                extend: function(M) {
                  this.x = this.x * M, this.y = this.y * M;
                }
              };
              (0, t.registerType)("Vector2d", [A, K, null]);
              function T() {
                this._m11 = 0, this._m12 = 0, this._m13 = 0, this._m14 = 0, this._m21 = 0, this._m22 = 0, this._m23 = 0, this._m24 = 0, this._m31 = 0, this._m32 = 0, this._m33 = 0, this._m34 = 0, this._offsetX = 0, this._offsetY = 0, this._offsetZ = 0, this._m44 = 0, this._isNotKnownToBeIdentity = !1;
              }
              T.create = function(M, B, D, k, G, j, ee, Z, z, te, re, le, ae, oe, de, ve) {
                var ce = new T();
                return ce._m11 = M, ce._m12 = B, ce._m13 = D, ce._m14 = k, ce._m21 = G, ce._m22 = j, ce._m23 = ee, ce._m24 = Z, ce._m31 = z, ce._m32 = te, ce._m33 = re, ce._m34 = le, ce._offsetX = ae, ce._offsetY = oe, ce._offsetZ = de, ce._m44 = ve, ce._isNotKnownToBeIdentity = !0, ce;
              }, T.get_identity = function() {
                var M = new T();
                return M.set(T._s_identity), M;
              }, T.multiplyMatrix = function(M, B) {
                return M.get__isDistinguishedIdentity() ? B : B.get__isDistinguishedIdentity() ? M : T.create(M._m11 * B._m11 + M._m12 * B._m21 + M._m13 * B._m31 + M._m14 * B._offsetX, M._m11 * B._m12 + M._m12 * B._m22 + M._m13 * B._m32 + M._m14 * B._offsetY, M._m11 * B._m13 + M._m12 * B._m23 + M._m13 * B._m33 + M._m14 * B._offsetZ, M._m11 * B._m14 + M._m12 * B._m24 + M._m13 * B._m34 + M._m14 * B._m44, M._m21 * B._m11 + M._m22 * B._m21 + M._m23 * B._m31 + M._m24 * B._offsetX, M._m21 * B._m12 + M._m22 * B._m22 + M._m23 * B._m32 + M._m24 * B._offsetY, M._m21 * B._m13 + M._m22 * B._m23 + M._m23 * B._m33 + M._m24 * B._offsetZ, M._m21 * B._m14 + M._m22 * B._m24 + M._m23 * B._m34 + M._m24 * B._m44, M._m31 * B._m11 + M._m32 * B._m21 + M._m33 * B._m31 + M._m34 * B._offsetX, M._m31 * B._m12 + M._m32 * B._m22 + M._m33 * B._m32 + M._m34 * B._offsetY, M._m31 * B._m13 + M._m32 * B._m23 + M._m33 * B._m33 + M._m34 * B._offsetZ, M._m31 * B._m14 + M._m32 * B._m24 + M._m33 * B._m34 + M._m34 * B._m44, M._offsetX * B._m11 + M._offsetY * B._m21 + M._offsetZ * B._m31 + M._m44 * B._offsetX, M._offsetX * B._m12 + M._offsetY * B._m22 + M._offsetZ * B._m32 + M._m44 * B._offsetY, M._offsetX * B._m13 + M._offsetY * B._m23 + M._offsetZ * B._m33 + M._m44 * B._offsetZ, M._offsetX * B._m14 + M._offsetY * B._m24 + M._offsetZ * B._m34 + M._m44 * B._m44);
              }, T.lookAtLH = function(M, B, D) {
                var k = m.subtractVectors(B, M);
                k.normalize();
                var G = m.cross(D, k);
                G.normalize();
                var j = m.cross(k, G), ee = T.create(G.x, j.x, k.x, 0, G.y, j.y, k.y, 0, G.z, j.z, k.z, 0, -m.dot(G, M), -m.dot(j, M), -m.dot(k, M), 1);
                return ee;
              }, T._createIdentity = function() {
                var M = T.create(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                return M.set__isDistinguishedIdentity(!0), M;
              }, T.equals = function(M, B) {
                return M.get__isDistinguishedIdentity() || B.get__isDistinguishedIdentity() ? M.get_isIdentity() === B.get_isIdentity() : M.get_m11() === B.get_m11() && M.get_m12() === B.get_m12() && M.get_m13() === B.get_m13() && M.get_m14() === B.get_m14() && M.get_m21() === B.get_m21() && M.get_m22() === B.get_m22() && M.get_m23() === B.get_m23() && M.get_m24() === B.get_m24() && M.get_m31() === B.get_m31() && M.get_m32() === B.get_m32() && M.get_m33() === B.get_m33() && M.get_m34() === B.get_m34() && M.get_offsetX() === B.get_offsetX() && M.get_offsetY() === B.get_offsetY() && M.get_offsetZ() === B.get_offsetZ() ? M.get_m44() === B.get_m44() : !1;
              }, T.fromMatrix2d = function(M) {
                var B = T._createIdentity();
                return B.set_m11(M.m11), B.set_m12(M.m12), B.set_m13(M.m13), B.set_m21(M.m21), B.set_m22(M.m22), B.set_m23(M.m23), B.set_m31(M.m31), B.set_m32(M.m32), B.set_m33(M.m33), B._isNotKnownToBeIdentity = !0, B;
              }, T.rotationYawPitchRoll = function(M, B, D) {
                var k = T._rotationX(B), G = T._rotationY(M), j = T._rotationZ(D);
                return T.multiplyMatrix(T.multiplyMatrix(G, k), j);
              }, T._rotationY = function(M) {
                var B = M, D = T.get_identity();
                return D._m11 = Math.cos(B), D._m22 = 1, D._m31 = Math.sin(B), D._m13 = -Math.sin(B), D._m33 = Math.cos(B), D._isNotKnownToBeIdentity = !0, D;
              }, T._rotationX = function(M) {
                var B = M, D = T.get_identity();
                return D._m11 = 1, D._m22 = Math.cos(B), D._m32 = -Math.sin(B), D._m23 = Math.sin(B), D._m33 = Math.cos(B), D._isNotKnownToBeIdentity = !0, D;
              }, T._rotationZ = function(M) {
                var B = M, D = T.get_identity();
                return D._m11 = Math.cos(B), D._m21 = -Math.sin(B), D._m12 = Math.sin(B), D._m22 = Math.cos(B), D._m33 = 1, D._isNotKnownToBeIdentity = !0, D;
              }, T._scaling = function(M, B, D) {
                var k = T.get_identity();
                return k._m11 = M, k._m22 = B, k._m33 = D, k._isNotKnownToBeIdentity = !0, k;
              }, T._translationXYZ = function(M, B, D) {
                var k = T.get_identity();
                return k.set_offsetX(M), k.set_offsetY(B), k.set_offsetZ(D), k._isNotKnownToBeIdentity = !0, k;
              }, T.perspectiveFovLH = function(M, B, D, k) {
                var G = 1 / Math.tan(M / 2), j = G / B;
                return T.create(j, 0, 0, 0, 0, G, 0, 0, 0, 0, k / (k - D), 1, 0, 0, -D * k / (k - D), 0);
              }, T.perspectiveOffCenterLH = function(M, B, D, k, G, j) {
                return T.create(2 * G / (B - M), 0, 0, 0, 0, 2 * G / (k - D), 0, 0, (M + B) / (M - B), (k + D) / (D - k), j / (j - G), 1, 0, 0, G * j / (G - j), 0);
              }, T.invertMatrix = function(M) {
                var B = M.clone();
                return B.invert(), B;
              }, T.translation = function(M) {
                return T._translationXYZ(M.x, M.y, M.z);
              }, T.getMapMatrix = function(M, B, D, k) {
                var G = 0, j = 0;
                G = -((M.get_lng() + 180 - B / 2) / 360), j = -(1 - (M.get_lat() + 90 + D / 2) / 180);
                var ee = new f(), Z = 0, z = 0;
                return Z = 360 / B, z = 180 / D, ee = f.multiply(ee, f.translation(G, j)), ee = f.multiply(ee, f.scaling(Z, z)), k && (ee = f.multiply(ee, f.translation(-0.5, -0.5)), ee = f.multiply(ee, f.rotation(k)), ee = f.multiply(ee, f.translation(0.5, 0.5))), T.fromMatrix2d(ee);
              };
              var w = {
                clone: function() {
                  var M = new T();
                  return M.set(this), M;
                },
                setIdentity: function() {
                  this.set(T._s_identity);
                },
                set: function(M) {
                  this._m11 = M._m11, this._m12 = M._m12, this._m13 = M._m13, this._m14 = M._m14, this._m21 = M._m21, this._m22 = M._m22, this._m23 = M._m23, this._m24 = M._m24, this._m31 = M._m31, this._m32 = M._m32, this._m33 = M._m33, this._m34 = M._m34, this._offsetX = M._offsetX, this._offsetY = M._offsetY, this._offsetZ = M._offsetZ, this._m44 = M._m44, this._isNotKnownToBeIdentity = !0;
                },
                floatArray: function() {
                  var M = new Array(16);
                  return M[0] = this._m11, M[1] = this._m12, M[2] = this._m13, M[3] = this._m14, M[4] = this._m21, M[5] = this._m22, M[6] = this._m23, M[7] = this._m24, M[8] = this._m31, M[9] = this._m32, M[10] = this._m33, M[11] = this._m34, M[12] = this._offsetX, M[13] = this._offsetY, M[14] = this._offsetZ, M[15] = this._m44, M;
                },
                get_isIdentity: function() {
                  return this.get__isDistinguishedIdentity() ? !0 : this._m11 === 1 && !this._m12 && !this._m13 && !this._m14 && !this._m21 && this._m22 === 1 && !this._m23 && !this._m24 && !this._m31 && !this._m32 && this._m33 === 1 && !this._m34 && !this._offsetX && !this._offsetY && !this._offsetZ && this._m44 === 1 ? (this.set__isDistinguishedIdentity(!0), !0) : !1;
                },
                prepend: function(M) {
                  this.set(T.multiplyMatrix(M, this));
                },
                append: function(M) {
                  this._multiply(M);
                },
                scale: function(M) {
                  this.get__isDistinguishedIdentity() ? this._setScaleMatrix(M) : (this._m11 *= M.x, this._m12 *= M.y, this._m13 *= M.z, this._m21 *= M.x, this._m22 *= M.y, this._m23 *= M.z, this._m31 *= M.x, this._m32 *= M.y, this._m33 *= M.z, this._offsetX *= M.x, this._offsetY *= M.y, this._offsetZ *= M.z);
                },
                scalePrepend: function(M) {
                  this.get__isDistinguishedIdentity() ? this._setScaleMatrix(M) : (this._m11 *= M.x, this._m12 *= M.x, this._m13 *= M.x, this._m14 *= M.x, this._m21 *= M.y, this._m22 *= M.y, this._m23 *= M.y, this._m24 *= M.y, this._m31 *= M.z, this._m32 *= M.z, this._m33 *= M.z, this._m34 *= M.z);
                },
                scaleAt: function(M, B) {
                  if (this.get__isDistinguishedIdentity())
                    this._setScaleMatrixCenter(M, B);
                  else {
                    var D = this._m14 * B.x;
                    this._m11 = D + M.x * (this._m11 - D), D = this._m14 * B.y, this._m12 = D + M.y * (this._m12 - D), D = this._m14 * B.z, this._m13 = D + M.z * (this._m13 - D), D = this._m24 * B.x, this._m21 = D + M.x * (this._m21 - D), D = this._m24 * B.y, this._m22 = D + M.y * (this._m22 - D), D = this._m24 * B.z, this._m23 = D + M.z * (this._m23 - D), D = this._m34 * B.x, this._m31 = D + M.x * (this._m31 - D), D = this._m34 * B.y, this._m32 = D + M.y * (this._m32 - D), D = this._m34 * B.z, this._m33 = D + M.z * (this._m33 - D), D = this._m44 * B.x, this._offsetX = D + M.x * (this._offsetX - D), D = this._m44 * B.y, this._offsetY = D + M.y * (this._offsetY - D), D = this._m44 * B.z, this._offsetZ = D + M.z * (this._offsetZ - D);
                  }
                },
                scaleAtPrepend: function(M, B) {
                  if (this.get__isDistinguishedIdentity())
                    this._setScaleMatrixCenter(M, B);
                  else {
                    var D = B.x - B.x * M.x, k = B.y - B.y * M.y, G = B.z - B.z * M.z;
                    this._offsetX += this._m11 * D + this._m21 * k + this._m31 * G, this._offsetY += this._m12 * D + this._m22 * k + this._m32 * G, this._offsetZ += this._m13 * D + this._m23 * k + this._m33 * G, this._m44 += this._m14 * D + this._m24 * k + this._m34 * G, this._m11 *= M.x, this._m12 *= M.x, this._m13 *= M.x, this._m14 *= M.x, this._m21 *= M.y, this._m22 *= M.y, this._m23 *= M.y, this._m24 *= M.y, this._m31 *= M.z, this._m32 *= M.z, this._m33 *= M.z, this._m34 *= M.z;
                  }
                },
                translate: function(M) {
                  this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(M) : (this._m11 += this._m14 * M.x, this._m12 += this._m14 * M.y, this._m13 += this._m14 * M.z, this._m21 += this._m24 * M.x, this._m22 += this._m24 * M.y, this._m23 += this._m24 * M.z, this._m31 += this._m34 * M.x, this._m32 += this._m34 * M.y, this._m33 += this._m34 * M.z, this._offsetX += this._m44 * M.x, this._offsetY += this._m44 * M.y, this._offsetZ += this._m44 * M.z);
                },
                translatePrepend: function(M) {
                  this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(M) : (this._offsetX += this._m11 * M.x + this._m21 * M.y + this._m31 * M.z, this._offsetY += this._m12 * M.x + this._m22 * M.y + this._m32 * M.z, this._offsetZ += this._m13 * M.x + this._m23 * M.y + this._m33 * M.z, this._m44 += this._m14 * M.x + this._m24 * M.y + this._m34 * M.z);
                },
                transform: function(M) {
                  var B = new m();
                  if (!this.get__isDistinguishedIdentity()) {
                    var D = M.x, k = M.y, G = M.z;
                    if (B.x = D * this._m11 + k * this._m21 + G * this._m31 + this._offsetX, B.y = D * this._m12 + k * this._m22 + G * this._m32 + this._offsetY, B.z = D * this._m13 + k * this._m23 + G * this._m33 + this._offsetZ, !this.get_isAffine()) {
                      var j = D * this._m14 + k * this._m24 + G * this._m34 + this._m44;
                      B.x /= j, B.y /= j, B.z /= j;
                    }
                  }
                  return B;
                },
                _transformTo: function(M, B) {
                  B.x = M.x * this._m11 + M.y * this._m21 + M.z * this._m31 + this._offsetX, B.y = M.x * this._m12 + M.y * this._m22 + M.z * this._m32 + this._offsetY, B.z = M.x * this._m13 + M.y * this._m23 + M.z * this._m33 + this._offsetZ;
                  var D = M.x * this._m14 + M.y * this._m24 + M.z * this._m34 + this._m44;
                  B.x /= D, B.y /= D, B.z /= D;
                },
                transformArray: function(M) {
                  if (M != null)
                    for (var B = 0; B < M.length; B++)
                      this._multiplyPoint(M[B]);
                },
                projectArrayToScreen: function(M, B) {
                  if (M != null && B != null)
                    for (var D = this.get_isAffine(), k = 0; k < M.length; k++) {
                      var G = M[k].x, j = M[k].y, ee = M[k].z;
                      if (D)
                        B[k].x = G * this._m11 + j * this._m21 + ee * this._m31 + this._offsetX, B[k].y = G * this._m12 + j * this._m22 + ee * this._m32 + this._offsetY, B[k].z = G * this._m13 + j * this._m23 + ee * this._m33 + this._offsetZ;
                      else {
                        var Z = G * this._m14 + j * this._m24 + ee * this._m34 + this._m44;
                        B[k].x = (G * this._m11 + j * this._m21 + ee * this._m31 + this._offsetX) / Z, B[k].y = (G * this._m12 + j * this._m22 + ee * this._m32 + this._offsetY) / Z, B[k].z = (G * this._m13 + j * this._m23 + ee * this._m33 + this._offsetZ) / Z;
                      }
                    }
                },
                projectToScreen: function(M, B, D) {
                  var k = new m(), G = M.x, j = M.y, ee = M.z;
                  if (this.get_isAffine())
                    k.x = (G * this._m11 + j * this._m21 + ee * this._m31 + this._offsetX + 0.5) * B, k.y = (-(G * this._m12 + j * this._m22 + ee * this._m32 + this._offsetY) + 0.5) * D, k.z = G * this._m13 + j * this._m23 + ee * this._m33 + this._offsetZ;
                  else {
                    var Z = G * this._m14 + j * this._m24 + ee * this._m34 + this._m44;
                    k.x = ((G * this._m11 + j * this._m21 + ee * this._m31 + this._offsetX) / Z + 0.5) * B, k.y = (-((G * this._m12 + j * this._m22 + ee * this._m32 + this._offsetY) / Z) + 0.5) * D, k.z = (G * this._m13 + j * this._m23 + ee * this._m33 + this._offsetZ) / Z;
                  }
                  return k;
                },
                get_isAffine: function() {
                  return this.get__isDistinguishedIdentity() ? !0 : !this._m14 && !this._m24 && !this._m34 ? this._m44 === 1 : !1;
                },
                get_determinant: function() {
                  if (this.get__isDistinguishedIdentity())
                    return 1;
                  if (this.get_isAffine())
                    return this._getNormalizedAffineDeterminant();
                  var M = this._m13 * this._m24 - this._m23 * this._m14, B = this._m13 * this._m34 - this._m33 * this._m14, D = this._m13 * this._m44 - this._offsetZ * this._m14, k = this._m23 * this._m34 - this._m33 * this._m24, G = this._m23 * this._m44 - this._offsetZ * this._m24, j = this._m33 * this._m44 - this._offsetZ * this._m34, ee = this._m22 * B - this._m32 * M - this._m12 * k, Z = this._m12 * G - this._m22 * D + this._offsetY * M, z = this._m32 * D - this._offsetY * B - this._m12 * j, te = this._m22 * j - this._m32 * G + this._offsetY * k;
                  return this._offsetX * ee + this._m31 * Z + this._m21 * z + this._m11 * te;
                },
                get_hasInverse: function() {
                  return !O.isZero(this.get_determinant());
                },
                invert: function() {
                  this._invertCore();
                },
                transpose: function() {
                  var M = new T();
                  M.set(this), this._m12 = M._m21, this._m13 = M._m31, this._m14 = M._offsetX, this._m23 = M._m32, this._m24 = M._offsetY, this._m34 = M._offsetZ, this._m21 = M._m12, this._m31 = M._m13, this._offsetX = M._m14, this._m32 = M._m23, this._offsetY = M._m24, this._offsetZ = M._m34;
                },
                get_m11: function() {
                  return this.get__isDistinguishedIdentity() ? 1 : this._m11;
                },
                set_m11: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m11 = M, M;
                },
                get_m12: function() {
                  return this._m12;
                },
                set_m12: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m12 = M, M;
                },
                get_m13: function() {
                  return this._m13;
                },
                set_m13: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m13 = M, M;
                },
                get_m14: function() {
                  return this._m14;
                },
                set_m14: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m14 = M, M;
                },
                get_m21: function() {
                  return this._m21;
                },
                set_m21: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m21 = M, M;
                },
                get_m22: function() {
                  return this.get__isDistinguishedIdentity() ? 1 : this._m22;
                },
                set_m22: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m22 = M, M;
                },
                get_m23: function() {
                  return this._m23;
                },
                set_m23: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m23 = M, M;
                },
                get_m24: function() {
                  return this._m24;
                },
                set_m24: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m24 = M, M;
                },
                get_m31: function() {
                  return this._m31;
                },
                set_m31: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m31 = M, M;
                },
                get_m32: function() {
                  return this._m32;
                },
                set_m32: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m32 = M, M;
                },
                get_m33: function() {
                  return this.get__isDistinguishedIdentity() ? 1 : this._m33;
                },
                set_m33: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m33 = M, M;
                },
                get_m34: function() {
                  return this._m34;
                },
                set_m34: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m34 = M, M;
                },
                get_m41: function() {
                  return this.get_offsetX();
                },
                set_m41: function(M) {
                  return this.set_offsetX(M), M;
                },
                get_m42: function() {
                  return this.get_offsetY();
                },
                set_m42: function(M) {
                  return this.set_offsetY(M), M;
                },
                get_m43: function() {
                  return this.get_offsetZ();
                },
                set_m43: function(M) {
                  return this.set_offsetZ(M), M;
                },
                get_offsetX: function() {
                  return this._offsetX;
                },
                set_offsetX: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetX = M, M;
                },
                get_offsetY: function() {
                  return this._offsetY;
                },
                set_offsetY: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetY = M, M;
                },
                get_offsetZ: function() {
                  return this._offsetZ;
                },
                set_offsetZ: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetZ = M, M;
                },
                get_m44: function() {
                  return this.get__isDistinguishedIdentity() ? 1 : this._m44;
                },
                set_m44: function(M) {
                  return this.get__isDistinguishedIdentity() && (this.set(T._s_identity), this.set__isDistinguishedIdentity(!1)), this._m44 = M, M;
                },
                _setScaleMatrix: function(M) {
                  this._m11 = M.x, this._m22 = M.y, this._m33 = M.z, this._m44 = 1, this.set__isDistinguishedIdentity(!1);
                },
                _setScaleMatrixCenter: function(M, B) {
                  this._m11 = M.x, this._m22 = M.y, this._m33 = M.z, this._m44 = 1, this._offsetX = B.x - B.x * M.x, this._offsetY = B.y - B.y * M.y, this._offsetZ = B.z - B.z * M.z, this.set__isDistinguishedIdentity(!1);
                },
                _setTranslationMatrix: function(M) {
                  this._m11 = this._m22 = this._m33 = this._m44 = 1, this._offsetX = M.x, this._offsetY = M.y, this._offsetZ = M.z, this.set__isDistinguishedIdentity(!1);
                },
                _multiplyPoint: function(M) {
                  if (!this.get__isDistinguishedIdentity()) {
                    var B = M.x, D = M.y, k = M.z;
                    if (M.x = B * this._m11 + D * this._m21 + k * this._m31 + this._offsetX, M.y = B * this._m12 + D * this._m22 + k * this._m32 + this._offsetY, M.z = B * this._m13 + D * this._m23 + k * this._m33 + this._offsetZ, !this.get_isAffine()) {
                      var G = B * this._m14 + D * this._m24 + k * this._m34 + this._m44;
                      M.x /= G, M.y /= G, M.z /= G;
                    }
                  }
                },
                multiplyVector: function(M) {
                  if (!this.get__isDistinguishedIdentity()) {
                    var B = M.x, D = M.y, k = M.z;
                    M.x = B * this._m11 + D * this._m21 + k * this._m31, M.y = B * this._m12 + D * this._m22 + k * this._m32, M.z = B * this._m13 + D * this._m23 + k * this._m33;
                  }
                },
                _getNormalizedAffineDeterminant: function() {
                  var M = this._m12 * this._m23 - this._m22 * this._m13, B = this._m32 * this._m13 - this._m12 * this._m33, D = this._m22 * this._m33 - this._m32 * this._m23;
                  return this._m31 * M + this._m21 * B + this._m11 * D;
                },
                _normalizedAffineInvert: function() {
                  var M = this._m12 * this._m23 - this._m22 * this._m13, B = this._m32 * this._m13 - this._m12 * this._m33, D = this._m22 * this._m33 - this._m32 * this._m23, k = this._m31 * M + this._m21 * B + this._m11 * D;
                  if (O.isZero(k))
                    return !1;
                  var G = this._m21 * this._m13 - this._m11 * this._m23, j = this._m11 * this._m33 - this._m31 * this._m13, ee = this._m31 * this._m23 - this._m21 * this._m33, Z = this._m11 * this._m22 - this._m21 * this._m12, z = this._m11 * this._m32 - this._m31 * this._m12, te = this._m11 * this._offsetY - this._offsetX * this._m12, re = this._m21 * this._m32 - this._m31 * this._m22, le = this._m21 * this._offsetY - this._offsetX * this._m22, ae = this._m31 * this._offsetY - this._offsetX * this._m32, oe = this._m23 * te - this._offsetZ * Z - this._m13 * le, de = this._m13 * ae - this._m33 * te + this._offsetZ * z, ve = this._m33 * le - this._offsetZ * re - this._m23 * ae, ce = Z, he = -z, ye = re, fe = 1 / k;
                  return this._m11 = D * fe, this._m12 = B * fe, this._m13 = M * fe, this._m21 = ee * fe, this._m22 = j * fe, this._m23 = G * fe, this._m31 = ye * fe, this._m32 = he * fe, this._m33 = ce * fe, this._offsetX = ve * fe, this._offsetY = de * fe, this._offsetZ = oe * fe, !0;
                },
                _invertCore: function() {
                  if (!this.get__isDistinguishedIdentity()) {
                    if (this.get_isAffine())
                      return this._normalizedAffineInvert();
                    var M = this._m13 * this._m24 - this._m23 * this._m14, B = this._m13 * this._m34 - this._m33 * this._m14, D = this._m13 * this._m44 - this._offsetZ * this._m14, k = this._m23 * this._m34 - this._m33 * this._m24, G = this._m23 * this._m44 - this._offsetZ * this._m24, j = this._m33 * this._m44 - this._offsetZ * this._m34, ee = this._m22 * B - this._m32 * M - this._m12 * k, Z = this._m12 * G - this._m22 * D + this._offsetY * M, z = this._m32 * D - this._offsetY * B - this._m12 * j, te = this._m22 * j - this._m32 * G + this._offsetY * k, re = this._offsetX * ee + this._m31 * Z + this._m21 * z + this._m11 * te;
                    if (O.isZero(re))
                      return !1;
                    var le = this._m11 * k - this._m21 * B + this._m31 * M, ae = this._m21 * D - this._offsetX * M - this._m11 * G, oe = this._m11 * j - this._m31 * D + this._offsetX * B, de = this._m31 * G - this._offsetX * k - this._m21 * j;
                    M = this._m11 * this._m22 - this._m21 * this._m12, B = this._m11 * this._m32 - this._m31 * this._m12, D = this._m11 * this._offsetY - this._offsetX * this._m12, k = this._m21 * this._m32 - this._m31 * this._m22, G = this._m21 * this._offsetY - this._offsetX * this._m22, j = this._m31 * this._offsetY - this._offsetX * this._m32;
                    var ve = this._m13 * k - this._m23 * B + this._m33 * M, ce = this._m23 * D - this._offsetZ * M - this._m13 * G, he = this._m13 * j - this._m33 * D + this._offsetZ * B, ye = this._m33 * G - this._offsetZ * k - this._m23 * j, fe = this._m24 * B - this._m34 * M - this._m14 * k, Ce = this._m14 * G - this._m24 * D + this._m44 * M, Ae = this._m34 * D - this._m44 * B - this._m14 * j, Te = this._m24 * j - this._m34 * G + this._m44 * k, Re = 1 / re;
                    this._m11 = te * Re, this._m12 = z * Re, this._m13 = Z * Re, this._m14 = ee * Re, this._m21 = de * Re, this._m22 = oe * Re, this._m23 = ae * Re, this._m24 = le * Re, this._m31 = Te * Re, this._m32 = Ae * Re, this._m33 = Ce * Re, this._m34 = fe * Re, this._offsetX = ye * Re, this._offsetY = he * Re, this._offsetZ = ce * Re, this._m44 = ve * Re;
                  }
                  return !0;
                },
                get__isDistinguishedIdentity: function() {
                  return !this._isNotKnownToBeIdentity;
                },
                set__isDistinguishedIdentity: function(M) {
                  return this._isNotKnownToBeIdentity = !M, M;
                },
                _multiply: function(M) {
                  this.set(T.multiplyMatrix(this, M));
                }
              };
              (0, t.registerType)("Matrix3d", [T, w, null]), T._s_identity = T._createIdentity();
              function f() {
                this.m11 = 1, this.m12 = 0, this.m13 = 0, this.m21 = 0, this.m22 = 1, this.m23 = 0, this.m31 = 0, this.m32 = 0, this.m33 = 1;
              }
              f.create = function(M, B, D, k, G, j, ee, Z, z) {
                var te = new f();
                return te.m11 = M, te.m12 = B, te.m13 = D, te.m21 = k, te.m22 = G, te.m23 = j, te.m31 = ee, te.m32 = Z, te.m33 = z, te;
              }, f.rotation = function(M) {
                var B = new f();
                return B.m11 = Math.cos(M), B.m21 = -Math.sin(M), B.m12 = Math.sin(M), B.m22 = Math.cos(M), B;
              }, f.translation = function(M, B) {
                var D = new f();
                return D.m31 = M, D.m32 = B, D;
              }, f.scaling = function(M, B) {
                var D = new f();
                return D.m11 = M, D.m22 = B, D;
              }, f.multiply = function(M, B) {
                return f.create(M.m11 * B.m11 + M.m12 * B.m21 + M.m13 * B.m31, M.m11 * B.m12 + M.m12 * B.m22 + M.m13 * B.m32, M.m11 * B.m13 + M.m12 * B.m23 + M.m13 * B.m33, M.m21 * B.m11 + M.m22 * B.m21 + M.m23 * B.m31, M.m21 * B.m12 + M.m22 * B.m22 + M.m23 * B.m32, M.m21 * B.m13 + M.m22 * B.m23 + M.m23 * B.m33, M.m31 * B.m11 + M.m32 * B.m21 + M.m33 * B.m31, M.m31 * B.m12 + M.m32 * B.m22 + M.m33 * B.m32, M.m31 * B.m13 + M.m32 * B.m23 + M.m33 * B.m33);
              }, f.rotateAt = function(M, B) {
                var D = f.translation(-B.x, -B.y), k = f.rotation(M), G = f.translation(B.x, B.y);
                return f.multiply(f.multiply(D, k), G);
              };
              var R = {
                _transformPoints: function(M) {
                  for (var B = n.ss.enumerate(M); B.moveNext(); ) {
                    var D = B.current;
                    this.multiplyPoint(D);
                  }
                },
                multiplyPoint: function(M) {
                  var B = M.x, D = M.y;
                  M.x = B * this.m11 + D * this.m21 + this.m31, M.y = B * this.m12 + D * this.m22 + this.m32;
                }
              };
              (0, t.registerType)("Matrix2d", [f, R, null]);
              function O() {
              }
              O.isZero = function(M) {
                return Math.abs(M) < 222044604925031e-64;
              }, O.isOne = function(M) {
                return Math.abs(M - 1) < 222044604925031e-64;
              }, O.radiansToDegrees = function(M) {
                return M * 180 / Math.PI;
              }, O.degreesToRadians = function(M) {
                return M * Math.PI / 180;
              }, O.clamp = function(M, B, D) {
                return Math.max(B, Math.min(M, D));
              }, (0, t.registerType)("DoubleUtilities", [O, null, null]);
              function W(M, B, D, k) {
                this.a = 0, this.b = 0, this.c = 0, this.d = 0, this.a = M, this.b = B, this.c = D, this.d = k;
              }
              var N = {
                normalize: function() {
                  var M = Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);
                  this.a /= M, this.b /= M, this.c /= M, this.d /= M;
                },
                dot: function(M) {
                  return this.b * M.y + this.c * M.z + this.d * M.w + this.a * M.x;
                }
              };
              (0, t.registerType)("PlaneD", [W, N, null]);
              function $(M, B, D, k) {
                this.x = 0, this.y = 0, this.z = 0, this.w = 0, this.x = M, this.y = B, this.z = D, this.w = k;
              }
              var S = {};
              (0, t.registerType)("Vector4d", [$, S, null]);
              function I() {
                this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tu1 = 0, this.tv1 = 0;
              }
              I.create2UV = function(M, B, D, k, G, j) {
                var ee = new I();
                return ee.x = M.x, ee.y = M.y, ee.z = M.z, ee.nx = B.x, ee.ny = B.y, ee.nz = B.z, ee.tu = D, ee.tv = k, ee.tu1 = G, ee.tv1 = j, ee;
              }, I.create = function(M, B, D, k) {
                var G = new I();
                G.x = M.x, G.y = M.y, G.z = M.z, G.nx = B.x, G.ny = B.y, G.nz = B.z, G.tu = D, G.tv = k;
                var j = c(B);
                return G.tu1 = (j[1] + 180) / 360, G.tv1 = 1 - (j[0] + 90) / 180, G;
              }, I.createLong2UV = function(M, B, D, k, G, j, ee, Z, z, te) {
                var re = new I();
                return re.x = M, re.y = B, re.z = D, re.nx = k, re.ny = G, re.nz = j, re.tu = ee, re.tv = Z, re.tu1 = z, re.tv1 = te, re;
              }, I.get_strideSize = function() {
                return 40;
              };
              var x = {
                get_lat: function() {
                  return (1 - this.tv1) * 180 - 90;
                },
                set_lat: function(M) {
                  return this.tv1 = 1 - (M + 90) / 180, M;
                },
                get_lng: function() {
                  return this.tu1 * 360 - 180;
                },
                set_lng: function(M) {
                  return this.tu1 = (M + 180) / 360, M;
                },
                createLong: function(M, B, D, k, G, j, ee, Z) {
                  var z = new I();
                  z.x = M, z.y = B, z.z = D, z.nx = k, z.ny = G, z.nz = j, z.tu = ee, z.tv = Z;
                  var te = c(m.create(this.nx, this.ny, this.nz));
                  return z.tu1 = (te[1] + 180) / 360, z.tv1 = 1 - (te[0] + 90) / 180, z;
                },
                get_normal: function() {
                  return m.create(this.nx, this.ny, this.nz);
                },
                set_normal: function(M) {
                  return this.nx = M.x, this.ny = M.y, this.nz = M.z, M;
                },
                get_position: function() {
                  return m.create(this.x, this.y, this.y);
                },
                set_position: function(M) {
                  return this.x = M.x, this.y = M.y, this.z = M.z, M;
                },
                toString: function() {
                  return n.ss.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tu1, this.tv1);
                }
              };
              (0, t.registerType)("PositionNormalTexturedX2", [I, x, null]);
              function P() {
                this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0;
              }
              P.createShort = function(M, B, D, k) {
                var G = new P();
                return G.x = M.x, G.y = M.y, G.z = M.z, G.nx = B.x, G.ny = B.y, G.nz = B.z, G.tu = D, G.tv = k, G;
              }, P._create = function(M, B, D, k, G, j, ee, Z) {
                var z = new P();
                return z.x = M, z.y = B, z.z = D, z.nx = k, z.ny = G, z.nz = j, z.tu = ee, z.tv = Z, z;
              }, P.createUV = function(M, B, D) {
                var k = new P();
                return k.x = M.x, k.y = M.y, k.z = M.z, k.nx = B.x, k.ny = B.y, k.nz = B.z, k.tu = D.x, k.tv = D.y, k;
              };
              var d = {
                // ** is it a mistake that this returns an X2 class? almost surely! **
                //
                // Summary:
                //     Initializes a new instance of the PositionNormalTextured
                //     class.
                //
                // Parameters:
                //   xvalue:
                //     Floating-point value that represents the x coordinate of the position.
                //
                //   yvalue:
                //     Floating-point value that represents the y coordinate of the position.
                //
                //   zvalue:
                //     Floating-point value that represents the z coordinate of the position.
                //
                //   nxvalue:
                //     Floating-point value that represents the nx coordinate of the vertex normal.
                //
                //   nyvalue:
                //     Floating-point value that represents the ny coordinate of the vertex normal.
                //
                //   nzvalue:
                //     Floating-point value that represents the nz coordinate of the vertex normal.
                //
                //   u:
                //     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
                //     component of the texture coordinate.
                //
                //   v:
                //     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
                //     component of the texture coordinate.
                createLong: function(M, B, D, k, G, j, ee, Z) {
                  var z = new I();
                  return z.x = M, z.y = B, z.z = D, z.nx = k, z.ny = G, z.nz = j, z.tu = ee, z.tv = Z, z;
                },
                get_normal: function() {
                  return m.create(this.nx, this.ny, this.nz);
                },
                set_normal: function(M) {
                  return this.nx = M.x, this.ny = M.y, this.nz = M.z, M;
                },
                get_position: function() {
                  return m.create(this.x, this.y, this.z);
                },
                set_position: function(M) {
                  return this.x = M.x, this.y = M.y, this.z = M.z, M;
                },
                toString: function() {
                  return n.ss.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv);
                }
              };
              (0, t.registerType)("PositionNormalTextured", [P, d, null]);
              function U() {
                this.radius = 0;
              }
              U._create = function(M, B) {
                var D = new U();
                return D.center = M, D.radius = B, D;
              };
              var F = {};
              (0, t.registerType)("SphereHull", [U, F, null]);
              function X() {
              }
              X.findEnclosingSphereFast = function(M) {
                for (var B = new U(), D = M.length, k = m.zero, G = 0; G < D; ++G)
                  k.add(M[G]);
                k.multiply(1 / D);
                for (var j = 0, G = 0; G < D; ++G) {
                  var ee = m.getLengthSq(m.subtractVectors(M[G], k));
                  ee > j && (j = ee);
                }
                return j = Math.sqrt(j), B.center = k, B.radius = j, B;
              }, X.findEnclosingSphere = function(M) {
                var B = new m(), D = 0, k = M.length, G, j, ee, Z, z, te, re, le, ae, oe, de, ve, ce = new m(), he = new m(), ye = new m(), fe = new m(), Ce = new m(), Ae = new m(), Te = new m(), Re = new m();
                for (ce.x = ye.y = Ce.z = 1e8, he.x = fe.y = Ae.z = -1e9, G = 0; G < k; G++) {
                  var De = M[G];
                  De.x < ce.x && (ce = De), De.x > he.x && (he = De), De.y < ye.y && (ye = De), De.y > fe.y && (fe = De), De.z < Ce.z && (Ce = De), De.z > Ae.z && (Ae = De);
                }
                for (j = he.x - ce.x, ee = he.y - ce.y, Z = he.z - ce.z, te = j * j + ee * ee + Z * Z, j = fe.x - ye.x, ee = fe.y - ye.y, Z = fe.z - ye.z, re = j * j + ee * ee + Z * Z, j = Ae.x - Ce.x, ee = Ae.y - Ce.y, Z = Ae.z - Ce.z, le = j * j + ee * ee + Z * Z, Te = ce, Re = he, ae = te, re > ae && (ae = re, Te = ye, Re = fe), le > ae && (Te = Ce, Re = Ae), B.x = (Te.x + Re.x) / 2, B.y = (Te.y + Re.y) / 2, B.z = (Te.z + Re.z) / 2, j = Re.x - B.x, ee = Re.y - B.y, Z = Re.z - B.z, z = j * j + ee * ee + Z * Z, D = Math.sqrt(z), G = 0; G < k; G++) {
                  var De = M[G];
                  j = De.x - B.x, ee = De.y - B.y, Z = De.z - B.z, de = j * j + ee * ee + Z * Z, de > z && (oe = Math.sqrt(de), D = (D + oe) / 2, z = D * D, ve = oe - D, B.x = (D * B.x + ve * De.x) / oe, B.y = (D * B.y + ve * De.y) / oe, B.z = (D * B.z + ve * De.z) / oe);
                }
                return U._create(B, D);
              };
              var Y = {};
              (0, t.registerType)("ConvexHull", [X, Y, null]);
            }
          ),
          /***/
          "./esm/equirectangular_tile.js": (
            /*!*************************************!*\
              !*** ./esm/equirectangular_tile.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                EquirectangularTile: () => (
                  /* binding */
                  l
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), o = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), c = i(
                /*! ./tile.js */
                "./esm/tile.js"
              );
              function l() {
                this._tileDegrees$1 = 0, this._topDown$1 = !0, this._subDivisionLevel$1 = 1, c.Tile.call(this);
              }
              l.create = function(a, b, V, y, C) {
                var E = new l();
                return E.parent = C, E.level = a, E.tileX = b, E.tileY = V, E.dataset = y, E._topDown$1 = !y.get_bottomsUp(), E.computeBoundingSphere(), E;
              };
              var g = {
                computeBoundingSphere: function() {
                  if (!this._topDown$1) {
                    this.computeBoundingSphereBottomsUp();
                    return;
                  }
                  this._tileDegrees$1 = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
                  var a = 90 - this.tileY * this._tileDegrees$1, b = 90 - (this.tileY + 1) * this._tileDegrees$1, V = this.tileX * this._tileDegrees$1 - 180, y = (this.tileX + 1) * this._tileDegrees$1 - 180, C = (a + b) / 2, E = (V + y) / 2;
                  this.sphereCenter = this.geoTo3d(C, E, !1), this.topLeft = this.geoTo3d(a, V, !1), this.bottomRight = this.geoTo3d(b, y, !1), this.topRight = this.geoTo3d(a, y, !1), this.bottomLeft = this.geoTo3d(b, V, !1);
                  var v = this.geoTo3d(a, V, !1);
                  v.subtract(this.sphereCenter), this.sphereRadius = v.length(), this._tileDegrees$1 = y - V;
                },
                computeBoundingSphereBottomsUp: function() {
                  var a = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), b = -90 + (this.tileY + 1) * a, V = -90 + this.tileY * a, y = this.tileX * a - 180, C = (this.tileX + 1) * a - 180, E = (b + V) / 2, v = (y + C) / 2;
                  this.sphereCenter = this.geoTo3d(E, v, !1), this.topLeft = this.geoTo3d(b, y, !1), this.bottomRight = this.geoTo3d(V, C, !1), this.topRight = this.geoTo3d(b, C, !1), this.bottomLeft = this.geoTo3d(V, y, !1);
                  var m = this.topLeft;
                  m.subtract(this.sphereCenter), this.sphereRadius = m.length(), a = C - y;
                },
                createGeometry: function(a) {
                  c.Tile.prototype.createGeometry.call(this, a), a.gl == null ? (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (4 - this.level) * 2)) : this._subDivisionLevel$1 = 32;
                  try {
                    for (var b = 0; b < 4; b++)
                      this._renderTriangleLists[b] = [];
                    if (!this._topDown$1)
                      return this._createGeometryBottomsUp$1(a);
                    var V, y, C = 0, E = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), v = 90 - this.tileY * E, m = 90 - (this.tileY + 1) * E, L = this.tileX * E - 180, A = (this.tileX + 1) * E - 180, K = A - L, T = m - v;
                    this.topLeft = this.geoTo3d(v, L, !1), this.bottomRight = this.geoTo3d(m, A, !1), this.topRight = this.geoTo3d(v, A, !1), this.bottomLeft = this.geoTo3d(m, L, !1);
                    var w = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), f, R, O = 1 / this._subDivisionLevel$1;
                    for (R = 0; R <= this._subDivisionLevel$1; R++)
                      for (R !== this._subDivisionLevel$1 ? V = v + O * T * R : V = m, f = 0; f <= this._subDivisionLevel$1; f++)
                        f !== this._subDivisionLevel$1 ? y = L + O * K * f : y = A, C = R * (this._subDivisionLevel$1 + 1) + f, w[C] = _.PositionTexture.createPos(this.geoTo3d(V, y, !1), f * O, R * O);
                    this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
                    var W = this._subDivisionLevel$1 / 2, N = 0;
                    if (a.gl == null)
                      for (var $ = 0; $ < 2; $++)
                        for (var S = 0; S < 2; S++) {
                          C = 0;
                          for (var I = W * $; I < W * ($ + 1); I++)
                            for (var x = W * S; x < W * (S + 1); x++) {
                              var P, d, U;
                              P = w[I * (this._subDivisionLevel$1 + 1) + x], d = w[(I + 1) * (this._subDivisionLevel$1 + 1) + x], U = w[I * (this._subDivisionLevel$1 + 1) + (x + 1)], this._renderTriangleLists[N].push(o.RenderTriangle.create(P, U, d, this.texture, this.level)), P = w[I * (this._subDivisionLevel$1 + 1) + (x + 1)], d = w[(I + 1) * (this._subDivisionLevel$1 + 1) + x], U = w[(I + 1) * (this._subDivisionLevel$1 + 1) + (x + 1)], this._renderTriangleLists[N].push(o.RenderTriangle.create(P, U, d, this.texture, this.level));
                            }
                          N++;
                        }
                    else {
                      this._vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                      var F = new Float32Array(w.length * 5), X = F;
                      C = 0;
                      for (var Y = t.ss.enumerate(w); Y.moveNext(); ) {
                        var M = Y.current;
                        C = this.addVertex(X, C, M);
                      }
                      e.tilePrepDevice.bufferData(r.WEBGL.ARRAY_BUFFER, F, r.WEBGL.STATIC_DRAW);
                      for (var $ = 0; $ < 2; $++)
                        for (var S = 0; S < 2; S++) {
                          var B = new Uint16Array(this.triangleCount * 3), D = B;
                          C = 0;
                          for (var I = W * $; I < W * ($ + 1); I++)
                            for (var x = W * S; x < W * (S + 1); x++)
                              D[C++] = I * (this._subDivisionLevel$1 + 1) + x, D[C++] = (I + 1) * (this._subDivisionLevel$1 + 1) + x, D[C++] = I * (this._subDivisionLevel$1 + 1) + (x + 1), D[C++] = I * (this._subDivisionLevel$1 + 1) + (x + 1), D[C++] = (I + 1) * (this._subDivisionLevel$1 + 1) + x, D[C++] = (I + 1) * (this._subDivisionLevel$1 + 1) + (x + 1);
                          this._indexBuffers[N] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[N]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, B, r.WEBGL.STATIC_DRAW), N++;
                        }
                    }
                  } catch {
                  }
                  return !0;
                },
                _createGeometryBottomsUp$1: function(a) {
                  var b, V, y = 0, C = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), E = -90 + (this.tileY + 1) * C, v = -90 + this.tileY * C, m = this.tileX * C - 180, L = (this.tileX + 1) * C - 180, A = L - m, K = v - E, T = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), w, f, R = 1 / this._subDivisionLevel$1;
                  for (f = 0; f <= this._subDivisionLevel$1; f++)
                    for (f !== this._subDivisionLevel$1 ? b = E + R * K * f : b = v, w = 0; w <= this._subDivisionLevel$1; w++)
                      w !== this._subDivisionLevel$1 ? V = m + R * A * w : V = L, y = f * (this._subDivisionLevel$1 + 1) + w, T[y] = _.PositionTexture.createPos(this.geoTo3d(b, V, !1), w * R, f * R);
                  this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
                  var O = this._subDivisionLevel$1 / 2, W = 0;
                  if (a.gl == null)
                    for (var N = 0; N < 2; N++)
                      for (var $ = 0; $ < 2; $++) {
                        y = 0;
                        for (var S = O * N; S < O * (N + 1); S++)
                          for (var I = O * $; I < O * ($ + 1); I++) {
                            var x, P, d;
                            x = T[S * (this._subDivisionLevel$1 + 1) + I], P = T[(S + 1) * (this._subDivisionLevel$1 + 1) + I], d = T[S * (this._subDivisionLevel$1 + 1) + (I + 1)], this._renderTriangleLists[W].push(o.RenderTriangle.create(x, d, P, this.texture, this.level)), x = T[S * (this._subDivisionLevel$1 + 1) + (I + 1)], P = T[(S + 1) * (this._subDivisionLevel$1 + 1) + I], d = T[(S + 1) * (this._subDivisionLevel$1 + 1) + (I + 1)], this._renderTriangleLists[W].push(o.RenderTriangle.create(x, d, P, this.texture, this.level));
                          }
                        W++;
                      }
                  else {
                    this._vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                    var U = new Float32Array(T.length * 5), F = U;
                    y = 0;
                    for (var X = t.ss.enumerate(T); X.moveNext(); ) {
                      var Y = X.current;
                      y = this.addVertex(F, y, Y);
                    }
                    e.tilePrepDevice.bufferData(r.WEBGL.ARRAY_BUFFER, U, r.WEBGL.STATIC_DRAW);
                    for (var N = 0; N < 2; N++)
                      for (var $ = 0; $ < 2; $++) {
                        var M = new Uint16Array(this.triangleCount * 3), B = M;
                        y = 0;
                        for (var S = O * N; S < O * (N + 1); S++)
                          for (var I = O * $; I < O * ($ + 1); I++)
                            B[y++] = S * (this._subDivisionLevel$1 + 1) + I, B[y++] = (S + 1) * (this._subDivisionLevel$1 + 1) + I, B[y++] = S * (this._subDivisionLevel$1 + 1) + (I + 1), B[y++] = S * (this._subDivisionLevel$1 + 1) + (I + 1), B[y++] = (S + 1) * (this._subDivisionLevel$1 + 1) + I, B[y++] = (S + 1) * (this._subDivisionLevel$1 + 1) + (I + 1);
                        this._indexBuffers[W] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[W]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, M, r.WEBGL.STATIC_DRAW), W++;
                      }
                  }
                  return !0;
                }
              };
              (0, n.registerType)("EquirectangularTile", [l, g, c.Tile]);
            }
          ),
          /***/
          "./esm/fast_math.js": (
            /*!**************************!*\
              !*** ./esm/fast_math.js ***!
              \**************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FastMath: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              );
              function n() {
              }
              const e = 0.785398155450821, _ = 794662735614793e-23, r = 306161699786838e-31, o = 0.318309886183791;
              n._mulsign = function(l, g) {
                return n._sign(g) * l;
              }, n._isnan = function(l) {
                return l !== l;
              }, n._isinf = function(l) {
                return Math.abs(l) === Number.POSITIVE_INFINITY;
              }, n._sign = function(l) {
                return l ? l > 0 ? 1 : -1 : 0;
              }, n._atanhelper = function(l) {
                var g = l * l, a = -188796008463073e-19;
                return a = a * g + 209850076645817e-18, a = a * g + -0.00110611831486672, a = a * g + 0.00370026744188713, a = a * g + -0.00889896195887655, a = a * g + 0.0165993297735292, a = a * g + -0.0254517624932313, a = a * g + 0.0337852580001353, a = a * g + -0.0407629191276837, a = a * g + 0.0466667150077841, a = a * g + -0.0523674852303482, a = a * g + 0.0587666392926674, a = a * g + -0.0666573579361081, a = a * g + 0.076921953831177, a = a * g + -0.090908995008245, a = a * g + 0.111111105648261, a = a * g + -0.142857142667713, a = a * g + 0.199999999996591, a = a * g + -0.333333333333311, a * g * l + l;
              }, n._atan2k = function(l, g) {
                var a = 0;
                if (g < 0 && (g = -g, a = -2), l > g) {
                  var b = g;
                  g = l, l = -b, a += 1;
                }
                return n._atanhelper(l / g) + a * (Math.PI / 2);
              }, n.atan2 = function(l, g) {
                var a = n._atan2k(Math.abs(l), g);
                return a = n._mulsign(a, g), (n._isinf(g) || !g) && (a = Math.PI / 2 - (n._isinf(g) ? n._sign(g) * (Math.PI / 2) : 0)), n._isinf(l) && (a = Math.PI / 2 - (n._isinf(g) ? n._sign(g) * (Math.PI * 1 / 4) : 0)), l || (a = n._sign(g) === -1 ? Math.PI : 0), n._isnan(g) || n._isnan(l) ? Number.NaN : n._mulsign(a, l);
              }, n.asin = function(l) {
                return n._mulsign(n._atan2k(Math.abs(l), Math.sqrt((1 + l) * (1 - l))), l);
              }, n.acos = function(l) {
                return n._mulsign(n._atan2k(Math.sqrt((1 + l) * (1 - l)), Math.abs(l)), l) + (l < 0 ? Math.PI : 0);
              }, n.atan = function(l) {
                var g = 0;
                l < 0 && (l = -l, g = 2), l > 1 && (l = 1 / l, g |= 1);
                var a = n._atanhelper(l);
                return g & 1 && (a = 1.5707963267949 - a), g & 2 && (a = -a), a;
              }, n._sincoshelper = function(l) {
                var g = l * l, a = -797255955009038e-32;
                return a = a * g + 281009972710863e-29, a = a * g - 764712219118159e-27, a = a * g + 160590430605665e-24, a = a * g - 250521083763502e-22, a = a * g + 275573192239199e-20, a = a * g - 198412698412696e-18, a = a * g + 0.00833333333333333, a = a * g - 0.166666666666667, g * a * l + l;
              }, n.sin = function(l) {
                var g = l * o, a = Math.floor(g < 0 ? g - 0.5 : g + 0.5), b = 4 * a;
                return l -= b * e, l -= b * _, l -= b * r, a & 1 && (l = -l), n._sincoshelper(l);
              }, n.cos = function(l) {
                var g = l * o - 0.5, a = 1 + 2 * Math.floor(g < 0 ? g - 0.5 : g + 0.5), b = 2 * a;
                return l -= b * e, l -= b * _, l -= b * r, a & 2 || (l = -l), n._sincoshelper(l);
              };
              var c = {};
              (0, t.registerType)("FastMath", [n, c, null]);
            }
          ),
          /***/
          "./esm/fits_properties.js": (
            /*!********************************!*\
              !*** ./esm/fits_properties.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FitsProperties: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                ScaleTypes: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = {
                linear: 0,
                log: 1,
                power: 2,
                squareRoot: 3,
                histogramEqualization: 4
              };
              (0, t.registerType)("ScaleTypes", n), (0, t.registerEnum)("ScaleTypes", n);
              function e() {
                this.bZero = 0, this.bScale = 1, this.containsBlanks = !1, this.blankValue = Number.MIN_VALUE, this.maxVal = Number.MIN_VALUE, this.minVal = Number.MAX_VALUE, this.upperCut = Number.MIN_VALUE, this.lowerCut = Number.MAX_VALUE, this.transparentBlack = !1, this.colorMapName = "viridis", this.scaleType = 0, this.onMainImageLoaded = null, this.mainImageLoadedEventHasFired = !1;
              }
              var _ = {
                // See description of the onMainImageLoaded field. This method exists to
                // help non-HiPS tiled FITS datasets notify callers when the initial
                // data have loaded and these FitsProperties can be trusted.
                _fireMainImageLoaded: function(r) {
                  this.onMainImageLoaded != null && !this.mainImageLoadedEventHasFired && (this.mainImageLoadedEventHasFired = !0, this.onMainImageLoaded(r));
                }
              };
              (0, t.registerType)("FitsProperties", [e, _, null]);
            }
          ),
          /***/
          "./esm/folder.js": (
            /*!***********************!*\
              !*** ./esm/folder.js ***!
              \***********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Folder: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                FolderGroup: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                FolderRefreshType: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                FolderType: () => (
                  /* binding */
                  C
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), r = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), o = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), c = i(
                /*! ./folder_up.js */
                "./esm/folder_up.js"
              ), l = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), g = i(
                /*! ./place.js */
                "./esm/place.js"
              ), a = i(
                /*! ./tour.js */
                "./esm/tour.js"
              ), b = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              ), V = {
                explorer: 0,
                tour: 1,
                search: 2,
                constellation: 3,
                view: 4,
                goTo: 5,
                community: 6,
                context: 7,
                voTable: 8,
                imageStack: 9
              };
              (0, n.registerType)("FolderGroup", V), (0, n.registerEnum)("FolderGroup", V);
              var y = {
                interval: 0,
                conditionalGet: 1,
                viewChange: 2
              };
              (0, n.registerType)("FolderRefreshType", y), (0, n.registerEnum)("FolderRefreshType", y);
              var C = {
                earth: 0,
                planet: 1,
                sky: 2,
                panorama: 3
              };
              (0, n.registerType)("FolderType", C), (0, n.registerEnum)("FolderType", C);
              function E() {
                this.parent = null, this.isProxy = !1, this._versionDependent = !1, this._readOnly = !0, this._dirty = !1, this._thumbnail = null, this._proxyFolder = null, this._lastUpdate = /* @__PURE__ */ new Date(), this._childList = [], this._itemsField = [], this._imagesets = [], this._tours = [], this._folders = [], this._places = [], this._groupField = 0, this._refreshTypeField = 0, this._refreshTypeFieldSpecified = !1, this._browseableField = !0, this._browseableFieldSpecified = !1, this._searchableField = !1, this._typeField = 0, this._communityIdField = 0, this._componentIdField = 0, this._permissionField = 0;
              }
              var v = {
                toString: function() {
                  return this._nameField;
                },
                get_versionDependent: function() {
                  return this._versionDependent;
                },
                set_versionDependent: function(m) {
                  this._versionDependent = m;
                  for (var L = t.ss.enumerate(this._folders); L.moveNext(); ) {
                    var A = L.current;
                    A.set_versionDependent(this._versionDependent);
                  }
                  return m;
                },
                get_readOnly: function() {
                  return this._readOnly;
                },
                set_readOnly: function(m) {
                  return this._readOnly = m, m;
                },
                get_dirty: function() {
                  return this._dirty;
                },
                set_dirty: function(m) {
                  return this._dirty = m, m;
                },
                loadFromUrlWithErrorCallback: function(m, L, A) {
                  this._onError = A, this.loadFromUrl(m, L);
                },
                loadFromUrl: function(m, L) {
                  this._onComplete = L, this._webFile = new b.WebFile(o.URLHelpers.singleton.rewrite(m, 1)), this._webFile.onStateChange = t.ss.bind("_loadData", this), this._webFile.send();
                },
                _loadData: function() {
                  if (this._webFile.get_state() === 2)
                    console.error(this._webFile.get_message()), this._onError != null && this._onError();
                  else if (this._webFile.get_state() === 1) {
                    var m = _.Util.selectSingleNode(this._webFile.getXml(), "Folder");
                    if (m == null) {
                      var L = this._webFile.getXml();
                      L != null && (m = _.Util.selectSingleNode(L, "Folder"));
                    }
                    m != null && (this._clearChildren(), this._parseXML(m)), this._onComplete != null && this._onComplete();
                  }
                },
                _clearChildren: function() {
                  this._folders.length = 0, this._tours.length = 0, this._places.length = 0, this.get_imagesets().length = 0;
                },
                _parseXML: function(m) {
                  m.attributes.getNamedItem("Name") != null ? this._nameField = m.attributes.getNamedItem("Name").nodeValue : this._nameField = "", m.attributes.getNamedItem("Url") != null && (this._urlField = m.attributes.getNamedItem("Url").nodeValue), m.attributes.getNamedItem("Thumbnail") != null && (this._thumbnailUrlField = m.attributes.getNamedItem("Thumbnail").nodeValue);
                  for (var L = t.ss.enumerate(m.childNodes); L.moveNext(); ) {
                    var A = L.current;
                    switch (A.nodeName) {
                      case "Folder":
                        var K = new E();
                        K.parent = this, K._parseXML(A), this._folders.push(K);
                        break;
                      case "Place":
                        this._places.push(g.Place._fromXml(A));
                        break;
                      case "ImageSet":
                        this.get_imagesets().push(l.Imageset.fromXMLNode(A));
                        break;
                      case "Tour":
                        this.get_tours().push(a.Tour._fromXml(A));
                        break;
                    }
                  }
                },
                addChildFolder: function(m) {
                  this._folders.push(m), this._dirty = !0;
                },
                removeChildFolder: function(m) {
                  t.ss.remove(this._folders, m), this._dirty = !0;
                },
                addChildPlace: function(m) {
                  this._places.push(m), this._dirty = !0;
                },
                removeChildPlace: function(m) {
                  t.ss.remove(this._places, m), this._dirty = !0;
                },
                get_thumbnail: function() {
                  return this._thumbnail;
                },
                set_thumbnail: function(m) {
                  return this._thumbnail = m, m;
                },
                get_bounds: function() {
                  return this._bounds;
                },
                set_bounds: function(m) {
                  return this._bounds = m, m;
                },
                get_isImage: function() {
                  return !1;
                },
                get_isTour: function() {
                  return !1;
                },
                get_isFolder: function() {
                  return !0;
                },
                get_isCloudCommunityItem: function() {
                  return !!this._communityIdField || this._permissionField > 0;
                },
                refresh: function() {
                  this._proxyFolder == null && (this._proxyFolder = new E(), this._proxyFolder.isProxy = !0, this._proxyFolder.parent = this.parent), this._proxyFolder.loadFromUrlWithErrorCallback(this._urlField, this._childReadyCallback, this._childReadyCallback), this._childReadyCallback = null;
                },
                childLoadCallback: function(m) {
                  this._childReadyCallback = m, this.get_children(), this._proxyFolder == null && m();
                },
                get_children: function() {
                  if (t.ss.emptyString(this._urlField)) {
                    if (this._childList.length = 0, this.parent != null) {
                      var m = new c.FolderUp();
                      m.parent = this.parent, this._childList.push(m);
                    }
                    if (this.get_folders() != null)
                      for (var L = t.ss.enumerate(this.get_folders()); L.moveNext(); ) {
                        var A = L.current;
                        this._childList.push(A);
                      }
                    if (this.get_imagesets() != null)
                      for (var K = t.ss.enumerate(this.get_imagesets()); K.moveNext(); ) {
                        var T = K.current;
                        this._childList.push(T);
                      }
                    if (this.get_places() != null)
                      for (var w = t.ss.enumerate(this.get_places()); w.moveNext(); ) {
                        var f = w.current;
                        this._childList.push(f);
                      }
                    if (this.get_tours() != null)
                      for (var R = t.ss.enumerate(this.get_tours()); R.moveNext(); ) {
                        var O = R.current;
                        this._childList.push(O);
                      }
                    return this._childList;
                  } else {
                    var W = (this._lastUpdate - t.ss.now()) / 1e3;
                    return (this.get_refreshType() === 1 || this._proxyFolder == null || !this.get_refreshType() && parseInt(this._refreshIntervalField) < W) && this.refresh(), this._proxyFolder != null ? this._proxyFolder.get_children() : null;
                  }
                },
                get_msrCommunityId: function() {
                  return this._communityIdField;
                },
                set_msrCommunityId: function(m) {
                  return this._communityIdField = m, m;
                },
                get_msrComponentId: function() {
                  return this._componentIdField;
                },
                set_msrComponentId: function(m) {
                  return this._componentIdField = m, m;
                },
                get_permission: function() {
                  return this._permissionField;
                },
                set_permission: function(m) {
                  return this._permissionField = m, m;
                },
                get_folders: function() {
                  return this._folders;
                },
                set_folders: function(m) {
                  return this._folders = m, m;
                },
                get_places: function() {
                  return this._places;
                },
                set_places: function(m) {
                  return this._places = m, m;
                },
                get_imagesets: function() {
                  return this._imagesets;
                },
                set_imagesets: function(m) {
                  return this._imagesets = m, m;
                },
                get_tours: function() {
                  return this._tours;
                },
                set_tours: function(m) {
                  return this._tours = m, m;
                },
                get_name: function() {
                  return this._nameField == null ? "" : this._nameField;
                },
                set_name: function(m) {
                  return this._nameField = m, m;
                },
                get_group: function() {
                  return this._groupField;
                },
                set_group: function(m) {
                  return this._groupField = m, m;
                },
                get_url: function() {
                  return this._urlField;
                },
                set_url: function(m) {
                  return this._urlField = m, m;
                },
                get_thumbnailUrl: function() {
                  return t.ss.emptyString(this._thumbnailUrlField) ? o.URLHelpers.singleton.engineAssetUrl("thumb_folder.jpg") : this._thumbnailUrlField;
                },
                set_thumbnailUrl: function(m) {
                  return this._thumbnailUrlField = m, m;
                },
                get_refreshType: function() {
                  return this._refreshTypeField;
                },
                set_refreshType: function(m) {
                  return this._refreshTypeField = m, this.set_refreshTypeSpecified(!0), m;
                },
                get_refreshTypeSpecified: function() {
                  return this._refreshTypeFieldSpecified;
                },
                set_refreshTypeSpecified: function(m) {
                  return this._refreshTypeFieldSpecified = m, m;
                },
                get_refreshInterval: function() {
                  return this._refreshIntervalField;
                },
                set_refreshInterval: function(m) {
                  return this._refreshIntervalField = m, m;
                },
                get_browseable: function() {
                  return this._browseableField;
                },
                set_browseable: function(m) {
                  return this._browseableField = m, this._browseableFieldSpecified = !0, m;
                },
                get_browseableSpecified: function() {
                  return this._browseableFieldSpecified;
                },
                set_browseableSpecified: function(m) {
                  return this._browseableFieldSpecified = m, m;
                },
                get_searchable: function() {
                  return this._searchableField;
                },
                set_searchable: function(m) {
                  return this._searchableField = m, m;
                },
                get_type: function() {
                  return this._typeField;
                },
                set_type: function(m) {
                  return this._typeField = m, m;
                },
                get_subType: function() {
                  return this._subTypeField;
                },
                set_subType: function(m) {
                  return this._subTypeField = m, m;
                }
              };
              (0, n.registerType)("Folder", [E, v, null, r.IThumbnail]), (0, e.set_makeNewFolder)(function() {
                return new E();
              });
            }
          ),
          /***/
          "./esm/folder_browser.js": (
            /*!*******************************!*\
              !*** ./esm/folder_browser.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FolderBrowser: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                ThumbnailSize: () => (
                  /* binding */
                  y
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), o = i(
                /*! ./folder.js */
                "./esm/folder.js"
              ), c = i(
                /*! ./folder_up.js */
                "./esm/folder_up.js"
              ), l = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), g = i(
                /*! ./place.js */
                "./esm/place.js"
              ), a = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), b = i(
                /*! ./tour.js */
                "./esm/tour.js"
              ), V = i(
                /*! ./util.js */
                "./esm/util.js"
              ), y = {
                small: 0,
                big: 1
              };
              (0, n.registerType)("ThumbnailSize", y), (0, n.registerEnum)("ThumbnailSize", y);
              function C() {
                this._items = [], this.top = 10, this.left = 10, this._indexTouchDown = -1, this._mouseDown = !1, this._lastX = 0, this._lastY = 0, this._ignoreClick = !1, this._thumbnailSize = 0, this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110, this._horzMultiple = 110, this._rowCount = 1, this._colCount = 6, this._dragging = !1, this._startIndex = 0, this._startOffset = 0, this._selectedItem = -1, this._hoverItem = -1, this.showAddButton = !1, this.width = 0, this.height = 0, this._addButtonHover = !1, this.imageClicked = !1;
              }
              C._downloading = !1, C._imagesLoaded = !1, C._imageLoadCount = 0, C.create = function() {
                var v = new C();
                return v.height = 85, v.width = 1920, v.canvas = document.createElement("canvas"), v.canvas.width = v.width, v.canvas.height = v.height, v.setup(), v.loadImages(), v;
              };
              var E = {
                setup: function() {
                  this.canvas.addEventListener("click", t.ss.bind("onClick", this), !1), this.canvas.addEventListener("dblclick", t.ss.bind("onDoubleClick", this), !1), this.canvas.addEventListener("mousemove", t.ss.bind("onMouseMove", this), !1), this.canvas.addEventListener("mouseup", t.ss.bind("onMouseUp", this), !1), this.canvas.addEventListener("mousedown", t.ss.bind("onMouseDown", this), !1), this.canvas.addEventListener("touchstart", t.ss.bind("onTouchStart", this), !1), this.canvas.addEventListener("touchmove", t.ss.bind("onTouchMove", this), !1), this.canvas.addEventListener("touchend", t.ss.bind("onTouchEnd", this), !1), this.canvas.addEventListener("mouseout", t.ss.bind("onMouseUp", this), !1);
                },
                onTouchStart: function(v) {
                  var m = v;
                  m.preventDefault(), this._mouseDown = !0, this._lastX = m.targetTouches[0].pageX, this._lastY = m.targetTouches[0].pageY, this._indexTouchDown = this._getItemIndexFromCursor(r.Vector2d.create(m.targetTouches[0].pageX, m.targetTouches[0].pageY));
                },
                onTouchMove: function(v) {
                  var m = v;
                  if (m.preventDefault(), this._mouseDown) {
                    if (m.targetTouches[0].pageX - this._lastX, m.targetTouches[0].pageY - this._lastY, this._mouseDown && (this._dragging = !0), this._dragging) {
                      var A = Math.round((m.targetTouches[0].pageX - this._lastX + this._startOffset) / this._horzSpacing), K = Math.round(m.targetTouches[0].pageX - this._lastX + this._startOffset - A * this._horzSpacing);
                      this._startOffset = K, this._startIndex -= A, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = m.targetTouches[0].pageX, this._lastY = m.targetTouches[0].pageY;
                    } else {
                      var L = this._getItemIndexFromCursor(r.Vector2d.create(m.targetTouches[0].pageX, m.targetTouches[0].pageY));
                      this._hoverItem !== L && (this._hoverItem = L);
                    }
                    this.refresh();
                  }
                },
                onTouchEnd: function(v) {
                  var m = v;
                  m.preventDefault(), this._dragging ? (this._dragging = !1, this._ignoreClick = !0) : this._indexTouchDown > -1 && this._mouseDown && this._handleClick(this._indexTouchDown), this._startOffset = 0, this._mouseDown = !1, this.refresh();
                },
                onClick: function(v) {
                  if (this._ignoreClick)
                    this._ignoreClick = !1;
                  else {
                    var m = this._getItemIndexFromCursor(r.Vector2d.create(v.offsetX, v.offsetY));
                    this._handleClick(m);
                  }
                },
                _handleClick: function(v) {
                  var m = this;
                  if (v > -1) {
                    if (t.ss.canCast(this._items[v], g.Place)) {
                      var L = this._items[v];
                      e.globalWWTControl.gotoTarget(L, !1, !1, !0);
                      return;
                    }
                    if (t.ss.canCast(this._items[v], l.Imageset)) {
                      var A = this._items[v];
                      _.globalRenderContext.set_backgroundImageset(A);
                      return;
                    }
                    if (t.ss.canCast(this._items[v], b.Tour)) {
                      var K = this._items[v];
                      e.globalWWTControl.playTour(K.get_tourUrl());
                      return;
                    }
                    if (t.ss.canCast(this._items[v], o.Folder)) {
                      var T = this._items[v];
                      this._startIndex = 0, T.childLoadCallback(function() {
                        m._items = T.get_children(), m.refresh();
                      });
                      return;
                    }
                    if (t.ss.canCast(this._items[v], c.FolderUp)) {
                      var w = this._items[v];
                      w.parent != null && (this._startIndex = 0, w.parent.childLoadCallback(function() {
                        m._items = w.parent.get_children(), m.refresh();
                      }));
                      return;
                    }
                  }
                },
                onDoubleClick: function(v) {
                  a.RenderTriangle.renderingOn = !a.RenderTriangle.renderingOn;
                },
                onGestureChange: function(v) {
                  var m = v;
                  this._mouseDown = !1, m.scale;
                },
                onMouseDown: function(v) {
                  this._mouseDown = !0, this._lastX = V.Mouse.offsetX(this.canvas, v), this._lastY = V.Mouse.offsetY(this.canvas, v);
                },
                onMouseMove: function(v) {
                  if (this._mouseDown && (this._dragging = !0), this._dragging) {
                    var L = Math.round((V.Mouse.offsetX(this.canvas, v) - this._lastX + this._startOffset) / this._horzSpacing), A = Math.round(V.Mouse.offsetX(this.canvas, v) - this._lastX + this._startOffset - L * this._horzSpacing);
                    this._startOffset = A, this._startIndex -= L, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = V.Mouse.offsetX(this.canvas, v), this._lastY = V.Mouse.offsetY(this.canvas, v);
                  } else {
                    var m = this._getItemIndexFromCursor(r.Vector2d.create(V.Mouse.offsetX(this.canvas, v), V.Mouse.offsetY(this.canvas, v)));
                    this._hoverItem !== m && (this._hoverItem = m);
                  }
                  this.refresh();
                },
                onMouseUp: function(v) {
                  this._dragging && (this._startOffset = 0, this._dragging = !1, this._ignoreClick = !0), this._mouseDown = !1, this.refresh();
                },
                loadImages: function() {
                  var v = this;
                  !C._imagesLoaded && !C._downloading && (C._imageLoadCount = 0, C._imagesLoaded = !1, C._downloading = !0, C._bmpBackground = document.createElement("img"), C._bmpBackground.src = "images/thumbBackground.png", C._bmpBackground.addEventListener("load", function(m) {
                    C._imageLoadCount++, C._imageLoadCount === 5 && (C._downloading = !1, C._imagesLoaded = !0, v.refresh());
                  }, !1), C._bmpBackgroundHover = document.createElement("img"), C._bmpBackgroundHover.src = "images/thumbBackgroundHover.png", C._bmpBackgroundHover.addEventListener("load", function(m) {
                    C._imageLoadCount++, C._imageLoadCount === 5 && (C._downloading = !1, C._imagesLoaded = !0, v.refresh());
                  }, !1), C._bmpBackgroundWide = document.createElement("img"), C._bmpBackgroundWide.src = "images/thumbBackgroundWide.png", C._bmpBackgroundWide.addEventListener("load", function(m) {
                    C._imageLoadCount++, C._imageLoadCount === 5 && (C._downloading = !1, C._imagesLoaded = !0, v.refresh());
                  }, !1), C._bmpBackgroundWideHover = document.createElement("img"), C._bmpBackgroundWideHover.src = "images/thumbBackgroundWideHover.png", C._bmpBackgroundWideHover.addEventListener("load", function(m) {
                    C._imageLoadCount++, C._imageLoadCount === 5 && (C._downloading = !1, C._imagesLoaded = !0, v.refresh());
                  }, !1), C._bmpDropInsertMarker = document.createElement("img"), C._bmpDropInsertMarker.src = "images/dragInsertMarker.png", C._bmpDropInsertMarker.addEventListener("load", function(m) {
                    C._imageLoadCount++, C._imageLoadCount === 5 && (C._downloading = !1, C._imagesLoaded = !0, v.refresh());
                  }, !1));
                },
                get_thumbnailSize: function() {
                  return this._thumbnailSize;
                },
                set_thumbnailSize: function(v) {
                  switch (this._thumbnailSize = v, v) {
                    case 1:
                      this._horzSpacing = 180, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 180;
                      break;
                    case 0:
                      this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110;
                      break;
                  }
                  return this._updatePaginator(), this.refresh(), v;
                },
                refresh: function() {
                  this.width !== window.innerWidth && (this.width = window.innerWidth), this.paint();
                },
                get_rowCount: function() {
                  return this._rowCount;
                },
                set_rowCount: function(v) {
                  return this._rowCount !== v && (this._rowCount = v, this._updatePaginator()), v;
                },
                _updatePaginator: function() {
                },
                get_colCount: function() {
                  return this._colCount;
                },
                set_colCount: function(v) {
                  return this._colCount !== v && (this._colCount = v, this._updatePaginator()), v;
                },
                get_itemsPerPage: function() {
                  return this._rowCount * this._colCount;
                },
                get_currentPage: function() {
                  return this._startIndex / this.get_itemsPerPage();
                },
                get_pageCount: function() {
                  return Math.max(1, (this._items.length + this.get_itemsPerPage() - 1 + (this.showAddButton ? 1 : 0)) / this.get_itemsPerPage());
                },
                paint: function() {
                  var v = this, m = this.canvas.getContext("2d");
                  if (m.fillStyle = "rgb(20, 22, 31)", m.fillRect(0, 0, this.width, this.height), !!C._imagesLoaded) {
                    var L = this.height - 10 * 2, A = this.width - 10 * 2;
                    this.set_rowCount(Math.round(Math.max(L / this._thumbHeight, 1))), this.set_colCount(Math.round(Math.max(A / this._horzSpacing, 1))), this._horzMultiple = (A + 13) / this.get_colCount(), this._startIndex = Math.round(this._startIndex / this.get_itemsPerPage() * this.get_itemsPerPage());
                    for (var K, T = this._startIndex, w = 0; w < this._rowCount; w++) {
                      for (var f = 0; f < this._colCount; f++) {
                        if (T >= this._items.length) {
                          (!this._items.length || this.showAddButton) && (K = V.Rectangle.create(this.left + f * this._horzMultiple + 3 + this._startOffset, this.top + w * this._vertSpacing, this._thumbWidth - 10, 60), m.drawImage(this._thumbnailSize === 1 ? C._bmpBackgroundWide : C._bmpBackground, t.ss.truncate(f * this._horzMultiple) + this._startOffset, w * this._vertSpacing));
                          break;
                        }
                        K = V.Rectangle.create(this.left + f * this._horzMultiple + 3 + this._startOffset, this.top + w * this._vertSpacing, this._thumbWidth - 14, 60);
                        var R = "white";
                        T === this._hoverItem || T === this._selectedItem && this._hoverItem === -1 ? (m.drawImage(this._thumbnailSize === 1 ? C._bmpBackgroundWideHover : C._bmpBackgroundHover, this.left + t.ss.truncate(f * this._horzMultiple) + this._startOffset, this.top + w * this._vertSpacing), R = "yellow") : m.drawImage(this._thumbnailSize === 1 ? C._bmpBackgroundWide : C._bmpBackground, this.left + t.ss.truncate(f * this._horzMultiple) + this._startOffset, this.top + w * this._vertSpacing), this._items[T].set_bounds(V.Rectangle.create(this.left + f * this._horzMultiple + this._startOffset, this.top + w * this._vertSpacing, t.ss.truncate(this._horzMultiple), this._vertSpacing));
                        try {
                          var O = this._items[T].get_thumbnail();
                          O != null ? (m.drawImage(O, this.left + f * this._horzMultiple + 2 + this._startOffset, this.top + w * this._vertSpacing + 3), m.strokeStyle = "rgb(0,0,0)", m.rect(this.left + t.ss.truncate(f * this._horzMultiple) + 2 + this._startOffset, this.top + w * this._vertSpacing + 3, this._items[T].get_thumbnail().width, this._items[T].get_thumbnail().height)) : (this._items[T].set_thumbnail(document.createElement("img")), this._items[T].get_thumbnail().src = this._items[T].get_thumbnailUrl(), this._items[T].get_thumbnail().addEventListener("load", function(W) {
                            v.refresh();
                          }, !1));
                        } catch {
                        }
                        m.fillStyle = R, m.strokeStyle = R, m.lineWidth = 1, m.font = "normal 8pt Arial", m.fillText(this._items[T].get_name(), K.x, K.y + K.height, K.width), T++;
                      }
                      if (T >= this._items.length)
                        break;
                    }
                  }
                },
                _getItemIndexFromCursor: function(v) {
                  var m = r.Vector2d.create(v.x + this.left, v.y + this.top);
                  this.imageClicked = !1;
                  var L = -1, A = t.ss.truncate(m.x / this._horzMultiple), K = t.ss.truncate(m.x % this._horzMultiple);
                  if (A >= this._colCount || A < 0)
                    return -1;
                  var T = t.ss.truncate(m.y / this._vertSpacing), w = t.ss.truncate(m.y % this._vertSpacing);
                  return T >= this._rowCount || T < 0 || (L = this._startIndex + T * this._colCount + A, L === this._items.length ? this._addButtonHover = !0 : this._addButtonHover = !1, L > this._items.length - 1) ? -1 : (this._items[L].get_isImage() && w < 16 && K > 78 && (this.imageClicked = !0), L);
                },
                _addItems: function(v) {
                  this._items = v;
                }
              };
              (0, n.registerType)("FolderBrowser", [C, E, null]);
            }
          ),
          /***/
          "./esm/folder_up.js": (
            /*!**************************!*\
              !*** ./esm/folder_up.js ***!
              \**************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FolderUp: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), e = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), _ = i(
                /*! ./util.js */
                "./esm/util.js"
              );
              function r() {
                this.parent = null, this._bounds = new _.Rectangle();
              }
              var o = {
                get_name: function() {
                  return "Up Level";
                },
                get_thumbnail: function() {
                  return this._thumbnail;
                },
                set_thumbnail: function(c) {
                  return this._thumbnail = c, c;
                },
                get_thumbnailUrl: function() {
                  return e.URLHelpers.singleton.engineAssetUrl("thumb_folderup.jpg");
                },
                set_thumbnailUrl: function(c) {
                  return c;
                },
                get_bounds: function() {
                  return this._bounds;
                },
                set_bounds: function(c) {
                  return this._bounds = c, c;
                },
                get_isImage: function() {
                  return !1;
                },
                get_isTour: function() {
                  return !1;
                },
                get_isFolder: function() {
                  return !1;
                },
                get_isCloudCommunityItem: function() {
                  return !1;
                },
                get_readOnly: function() {
                  return !1;
                },
                get_children: function() {
                  return this.parent == null ? [] : this.parent.get_children();
                }
              };
              (0, t.registerType)("FolderUp", [r, o, null, n.IThumbnail]);
            }
          ),
          /***/
          "./esm/fxyf.js": (
            /*!*********************!*\
              !*** ./esm/fxyf.js ***!
              \*********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Fxyf: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./healpix_tables.js */
                "./esm/healpix_tables.js"
              ), _ = i(
                /*! ./healpix_utils.js */
                "./esm/healpix_utils.js"
              ), r = i(
                /*! ./hploc.js */
                "./esm/hploc.js"
              );
              function o() {
                this.fx = 0, this.fy = 0, this.face = 0, e.HealpixTables.call(this);
              }
              o._halfpi$1 = Math.PI / 2, o._inv_halfpi$1 = 2 / Math.PI, o._twothird$1 = 0.6666666666666666, o.create = function(l, g, a) {
                var b = new o();
                return b.fx = l, b.fy = g, b.face = a, b;
              }, o._fromHploc$1 = function(l) {
                var g = new o(), a = l.z, b = l.phi, V = Math.abs(a), y = _.HealpixUtils.fmodulo(b * o._inv_halfpi$1, 4);
                if (V <= o._twothird$1) {
                  var C = 0.5 + y, E = a * 0.75, v = C - E, m = C + E, L = v, A = m, K = L === A ? L | 4 : L < A ? L : A + 8;
                  g.fx = _.HealpixUtils.fmodulo(m, 1), g.fy = 1 - _.HealpixUtils.fmodulo(v, 1), g.face = K;
                } else {
                  var T = Math.min(3, n.ss.truncate(y)), w = y - T, f;
                  V < 0.99 || !l.have_sth ? f = Math.sqrt(3 * (1 - V)) : f = l.sth / Math.sqrt((1 + V) / 3);
                  var v = w * f, m = (1 - w) * f;
                  v >= 1 && (v = 1), m >= 1 && (m = 1), a >= 0 ? (g.fx = 1 - m, g.fy = 1 - v, g.face = T) : (g.fx = v, g.fy = m, g.face = T + 8);
                }
                return g;
              }, o.fromVector = function(l) {
                return o._fromHploc$1(r.Hploc.create(l));
              };
              var c = {
                toHploc: function() {
                  var l = new r.Hploc(), g = e.HealpixTables.jrll[this.face] - this.fx - this.fy, a, b;
                  return g < 1 ? (a = g, b = a * a / 3, l.z = 1 - b, l.z > 0.99 && (l.sth = Math.sqrt(b * (2 - b)), l.have_sth = !0)) : g > 3 ? (a = 4 - g, b = a * a / 3, l.z = b - 1, l.z < -0.99 && (l.sth = Math.sqrt(b * (2 - b)), l.have_sth = !0)) : (a = 1, l.z = (2 - g) * 2 / 3), b = e.HealpixTables.jpll[this.face] * a + this.fx - this.fy, b < 0 && (b += 8), b >= 8 && (b -= 8), l.phi = a < 1e-15 ? 0 : 0.5 * o._halfpi$1 * b / a, l;
                },
                toVec3: function() {
                  return this.toHploc().toVec3();
                }
              };
              (0, t.registerType)("Fxyf", [o, c, e.HealpixTables]);
            }
          ),
          /***/
          "./esm/graphics/gl_buffers.js": (
            /*!************************************!*\
              !*** ./esm/graphics/gl_buffers.js ***!
              \************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                IndexBuffer: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                KeplerVertexBuffer: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                PositionColoredTexturedVertexBuffer: () => (
                  /* binding */
                  N
                ),
                /* harmony export */
                PositionColoredVertexBuffer: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                PositionNormalTexturedTangentVertexBuffer: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                PositionNormalTexturedVertexBuffer: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                PositionTextureVertexBuffer: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                PositionVertexBuffer: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                ShortIndexBuffer: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                TimeSeriesLineVertexBuffer: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                TimeSeriesPointVertexBuffer: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                VertexBufferBase: () => (
                  /* binding */
                  g
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              );
              function r(S) {
                this.buffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ELEMENT_ARRAY_BUFFER, this.buffer), e.tilePrepDevice.bufferData(_.WEBGL.ELEMENT_ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
              }
              var o = {};
              (0, t.registerType)("ShortIndexBuffer", [r, o, null]);
              function c(S) {
                this.buffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ELEMENT_ARRAY_BUFFER, this.buffer), e.tilePrepDevice.bufferData(_.WEBGL.ELEMENT_ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
              }
              var l = {
                dispose: function() {
                  e.tilePrepDevice.bindBuffer(_.WEBGL.ELEMENT_ARRAY_BUFFER, null), e.tilePrepDevice.deleteBuffer(this.buffer), this.buffer = null;
                }
              };
              (0, t.registerType)("IndexBuffer", [c, l, null, n.ss.IDisposable]);
              function g() {
              }
              var a = {
                dispose: function() {
                  e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, null), e.tilePrepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
                }
              };
              (0, t.registerType)("VertexBufferBase", [g, a, null, n.ss.IDisposable]);
              function b(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              var V = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 3), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.x, I[x++] = d.y, I[x++] = d.z;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("PositionVertexBuffer", [b, V, g]);
              function y(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              y.create = function(S) {
                var I = new y(S.length);
                return I._verts$1 = S, I.unlock(), I;
              };
              var C = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 5), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.position.x, I[x++] = d.position.y, I[x++] = d.position.z, I[x++] = d.tu, I[x++] = d.tv;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("PositionTextureVertexBuffer", [y, C, g]);
              function E(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              E.create = function(S) {
                var I = new E(S.length);
                return I._verts$1 = S, I.unlock(), I;
              };
              var v = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 8), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.x, I[x++] = d.y, I[x++] = d.z, I[x++] = d.nx, I[x++] = d.ny, I[x++] = d.nz, I[x++] = d.tu, I[x++] = d.tv;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("PositionNormalTexturedVertexBuffer", [E, v, g]);
              function m(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              m.create = function(S) {
                var I = new m(S.length);
                return I._verts$1 = S, I.unlock(), I;
              };
              var L = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 11), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.x, I[x++] = d.y, I[x++] = d.z, I[x++] = d.nx, I[x++] = d.ny, I[x++] = d.nz, I[x++] = d.tanx, I[x++] = d.tany, I[x++] = d.tanz, I[x++] = d.tu, I[x++] = d.tv;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("PositionNormalTexturedTangentVertexBuffer", [m, L, g]);
              function A(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              A.create = function(S) {
                var I = new A(S.length);
                return I._verts$1 = S, I;
              };
              var K = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 19), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.ABC.x, I[x++] = d.ABC.y, I[x++] = d.ABC.z, I[x++] = d.abc1.x, I[x++] = d.abc1.y, I[x++] = d.abc1.z, I[x++] = d.pointSize, I[x++] = d.color.r / 255, I[x++] = d.color.g / 255, I[x++] = d.color.b / 255, I[x++] = d.color.a / 255, I[x++] = d.w, I[x++] = d.e, I[x++] = d.n, I[x++] = d.t, I[x++] = d.a, I[x++] = d.z, I[x++] = d.orbitPos, I[x++] = d.orbits;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("KeplerVertexBuffer", [A, K, g]);
              function T(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              var w = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 9), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.position.x, I[x++] = d.position.y, I[x++] = d.position.z, I[x++] = d.get_color().r / 255, I[x++] = d.get_color().g / 255, I[x++] = d.get_color().b / 255, I[x++] = d.get_color().a / 255, I[x++] = d.tu, I[x++] = d.tv;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("TimeSeriesLineVertexBuffer", [T, w, g]);
              function f(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              var R = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 10), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.position.x, I[x++] = d.position.y, I[x++] = d.position.z, I[x++] = d.get_color().r / 255, I[x++] = d.get_color().g / 255, I[x++] = d.get_color().b / 255, I[x++] = d.get_color().a / 255, I[x++] = d.tu, I[x++] = d.tv, I[x++] = d.pointSize;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                },
                dispose: function() {
                  e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, null), e.tilePrepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
                }
              };
              (0, t.registerType)("TimeSeriesPointVertexBuffer", [f, R, g]);
              function O(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              var W = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 7), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.position.x, I[x++] = d.position.y, I[x++] = d.position.z, I[x++] = d.color.r / 255, I[x++] = d.color.g / 255, I[x++] = d.color.b / 255, I[x++] = d.color.a / 255;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("PositionColoredVertexBuffer", [O, W, g]);
              function N(S) {
                this.count = 0, this._verts$1 = null, g.call(this), this.count = S;
              }
              var $ = {
                lock: function() {
                  return this._verts$1 = new Array(this.count), this._verts$1;
                },
                unlock: function() {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(_.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var S = new Float32Array(this.count * 9), I = S, x = 0, P = n.ss.enumerate(this._verts$1); P.moveNext(); ) {
                    var d = P.current;
                    I[x++] = d.position.x, I[x++] = d.position.y, I[x++] = d.position.z, I[x++] = d.color.r / 255, I[x++] = d.color.g / 255, I[x++] = d.color.b / 255, I[x++] = d.color.a / 255, I[x++] = d.tu, I[x++] = d.tv;
                  }
                  e.tilePrepDevice.bufferData(_.WEBGL.ARRAY_BUFFER, S, _.WEBGL.STATIC_DRAW);
                }
              };
              (0, t.registerType)("PositionColoredTexturedVertexBuffer", [N, $, g]);
            }
          ),
          /***/
          "./esm/graphics/primitives3d.js": (
            /*!**************************************!*\
              !*** ./esm/graphics/primitives3d.js ***!
              \**************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CullMode: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                DataItem: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                Dates: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                LineList: () => (
                  /* binding */
                  K
                ),
                /* harmony export */
                OrbitLineList: () => (
                  /* binding */
                  L
                ),
                /* harmony export */
                PointList: () => (
                  /* binding */
                  W
                ),
                /* harmony export */
                PointScaleTypes: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                SimpleLineList: () => (
                  /* binding */
                  v
                ),
                /* harmony export */
                TimeSeriesLineVertex: () => (
                  /* binding */
                  $
                ),
                /* harmony export */
                TimeSeriesPointVertex: () => (
                  /* binding */
                  I
                ),
                /* harmony export */
                TriangleFanList: () => (
                  /* binding */
                  R
                ),
                /* harmony export */
                TriangleList: () => (
                  /* binding */
                  w
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../color.js */
                "./esm/color.js"
              ), r = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), o = i(
                /*! ./webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), c = i(
                /*! ./gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), l = i(
                /*! ./texture.js */
                "./esm/graphics/texture.js"
              ), g = i(
                /*! ./shaders.js */
                "./esm/graphics/shaders.js"
              ), a = {
                none: 0,
                counterClockwise: 2,
                clockwise: 1
              };
              (0, t.registerType)("CullMode", a), (0, t.registerEnum)("CullMode", a);
              var b = {
                linear: 0,
                power: 1,
                log: 2,
                constant: 3,
                stellarMagnitude: 4
              };
              (0, t.registerType)("PointScaleTypes", b), (0, t.registerEnum)("PointScaleTypes", b);
              function V() {
                this.size = 0;
              }
              var y = {
                getColor: function() {
                  return "Red";
                }
              };
              (0, t.registerType)("DataItem", [V, y, null]);
              function C(P, d) {
                this.startDate = 0, this.endDate = 0, this.startDate = P, this.endDate = d;
              }
              C.empty = function() {
                return new C(0, 0);
              };
              var E = {
                copy: function() {
                  return new C(this.startDate, this.endDate);
                }
              };
              (0, t.registerType)("Dates", [C, E, null]);
              function v() {
                this._zBuffer = !0, this._linePoints = [], this._usingLocalCenter = !1, this.sky = !0, this.aaFix = !0, this.pure2D = !1, this.viewTransform = e.Matrix3d.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
              }
              var m = {
                get_depthBuffered: function() {
                  return this._zBuffer;
                },
                set_depthBuffered: function(P) {
                  return this._zBuffer = P, P;
                },
                addLine: function(P, d) {
                  this._linePoints.push(P), this._linePoints.push(d), this._emptyLineBuffer();
                },
                clear: function() {
                  this._linePoints.length = 0, this._emptyLineBuffer();
                },
                drawLines: function(P, d, U) {
                  if (!(this._linePoints.length < 2)) {
                    this._initLineBuffer(P);
                    var F = this._linePoints.length;
                    if (P.gl == null) {
                      var X = e.Vector3d._transformCoordinate(P.get_viewPoint(), this.viewTransform), Y = P.device;
                      Y.save(), Y.strokeStyle = U.toString(), Y.lineWidth = 2, Y.globalAlpha = 0.25;
                      for (var M = new e.Vector3d(), B = new e.Vector3d(), D = 0; D < F; D += 2)
                        M = P.WVP.transform(this._linePoints[D]), B = P.WVP.transform(this._linePoints[D + 1]), e.Vector3d.dot(this._linePoints[D], X) > 0.6 && (Y.beginPath(), Y.moveTo(M.x, M.y), Y.lineTo(B.x, B.y), Y.stroke());
                      Y.restore();
                    } else
                      for (var k = n.ss.enumerate(this._lineBuffers); k.moveNext(); ) {
                        var G = k.current;
                        this.pure2D ? g.SimpleLineShader2D.use(P, G.vertexBuffer, U, this._zBuffer) : g.SimpleLineShader.use(P, G.vertexBuffer, U, this._zBuffer), P.gl.drawArrays(o.WEBGL.LINES, 0, G.count);
                      }
                  }
                },
                _initLineBuffer: function(P) {
                  if (P.gl != null && !this._lineBuffers.length) {
                    var d = this._linePoints.length, U = null, F = null;
                    if (this._localCenter = new e.Vector3d(), this.get_depthBuffered()) {
                      for (var X = n.ss.enumerate(this._linePoints); X.moveNext(); ) {
                        var Y = X.current;
                        this._localCenter.add(Y);
                      }
                      this._localCenter.x /= d, this._localCenter.y /= d, this._localCenter.z /= d;
                    }
                    for (var M = d, B = 0, D, k = n.ss.enumerate(this._linePoints); k.moveNext(); ) {
                      var Y = k.current;
                      if (B >= 1e5 || F == null) {
                        U != null && U.unlock();
                        var G = Math.min(1e5, M);
                        M -= G, U = new c.PositionVertexBuffer(G), F = U.lock(), this._lineBuffers.push(U), this._lineBufferCounts.push(G), B = 0;
                      }
                      this.useLocalCenters ? (D = e.Vector3d.subtractVectors(Y, this._localCenter), F[B] = D) : F[B] = Y, B++;
                    }
                    U != null && U.unlock();
                  }
                },
                _emptyLineBuffer: function() {
                }
              };
              (0, t.registerType)("SimpleLineList", [v, m, null]);
              function L() {
                this._zBuffer = !0, this._linePoints = [], this._lineColors = [], this.sky = !0, this.aaFix = !0, this.viewTransform = e.Matrix3d.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
              }
              var A = {
                get_depthBuffered: function() {
                  return this._zBuffer;
                },
                set_depthBuffered: function(P) {
                  return this._zBuffer = P, P;
                },
                addLine: function(P, d, U, F) {
                  this._linePoints.push(P), this._lineColors.push(U), this._linePoints.push(d), this._lineColors.push(F), this._emptyLineBuffer();
                },
                clear: function() {
                  this._linePoints.length = 0, this._emptyLineBuffer();
                },
                drawLines: function(P, d, U) {
                  if (!(this._linePoints.length < 2)) {
                    this._initLineBuffer(P), this._linePoints.length;
                    for (var F = n.ss.enumerate(this._lineBuffers); F.moveNext(); ) {
                      var X = F.current;
                      g.OrbitLineShader.use(P, X.vertexBuffer, U), P.gl.drawArrays(o.WEBGL.LINES, 0, X.count);
                    }
                  }
                },
                _initLineBuffer: function(P) {
                  if (P.gl != null && !this._lineBuffers.length) {
                    var d = this._linePoints.length, U = null, F = null;
                    if (this._localCenter = new e.Vector3d(), this.get_depthBuffered()) {
                      for (var X = n.ss.enumerate(this._linePoints); X.moveNext(); ) {
                        var Y = X.current;
                        this._localCenter.add(Y);
                      }
                      this._localCenter.x /= d, this._localCenter.y /= d, this._localCenter.z /= d;
                    }
                    for (var M = d, B = 0, D = 0, k, G = n.ss.enumerate(this._linePoints); G.moveNext(); ) {
                      var Y = G.current;
                      if (D >= 1e5 || F == null) {
                        U != null && U.unlock();
                        var j = Math.min(1e5, M);
                        M -= j, U = new c.PositionColoredVertexBuffer(j), F = U.lock(), this._lineBuffers.push(U), this._lineBufferCounts.push(j), D = 0;
                      }
                      this.useLocalCenters ? (k = e.Vector3d.subtractVectors(Y, this._localCenter), F[D] = new e.PositionColored(k, this._lineColors[B])) : F[D] = new e.PositionColored(Y, this._lineColors[B]), B++, D++;
                    }
                    U != null && U.unlock();
                  }
                },
                _emptyLineBuffer: function() {
                  for (var P = n.ss.enumerate(this._lineBuffers); P.moveNext(); ) {
                    var d = P.current;
                    d.dispose();
                  }
                  this._lineBuffers.length = 0;
                }
              };
              (0, t.registerType)("OrbitLineList", [L, A, null]);
              function K() {
                this._zBuffer = !0, this.timeSeries = !1, this.showFarSide = !0, this.sky = !1, this.decay = 0, this.useNonRotatingFrame = !1, this.jNow = 0, this._linePoints = [], this._lineColors = [], this._lineDates = [], this._usingLocalCenter = !0, this._lineBuffers = [], this._lineBufferCounts = [];
              }
              var T = {
                get_depthBuffered: function() {
                  return this._zBuffer;
                },
                set_depthBuffered: function(P) {
                  return this._zBuffer = P, P;
                },
                addLine: function(P, d, U, F) {
                  this._linePoints.push(P), this._linePoints.push(d), this._lineColors.push(U), this._lineDates.push(F), this._emptyLineBuffer();
                },
                addLineNoDate: function(P, d, U) {
                  this._linePoints.push(P), this._linePoints.push(d), this._lineColors.push(U), this._lineDates.push(new C(0, 0)), this._emptyLineBuffer();
                },
                clear: function() {
                  this._linePoints.length = 0, this._lineColors.length = 0, this._lineDates.length = 0;
                },
                drawLines: function(P, d) {
                  if (!(this._linePoints.length < 2 || d <= 0) && P.gl != null) {
                    this._initLineBuffer();
                    for (var U = n.ss.enumerate(this._lineBuffers); U.moveNext(); ) {
                      var F = U.current;
                      g.LineShaderNormalDates.use(P, F.vertexBuffer, _.Color.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), P.gl.drawArrays(o.WEBGL.LINES, 0, F.count);
                    }
                  }
                },
                _initLineBuffer: function() {
                  if (!this._lineBuffers.length) {
                    for (var P = this._linePoints.length, d = null, U = null, F = P, X = 0, Y = 0, M, B = n.ss.enumerate(this._linePoints); B.moveNext(); ) {
                      var D = B.current;
                      if (Y >= 1e5 || U == null) {
                        d != null && d.unlock();
                        var k = Math.min(1e5, F);
                        F -= k, d = new c.TimeSeriesLineVertexBuffer(k), U = d.lock(), this._lineBuffers.push(d), this._lineBufferCounts.push(k), Y = 0;
                      }
                      var G = n.ss.truncate(X / 2);
                      M = D, U[Y] = new $(), U[Y].position = M, U[Y].normal = D, U[Y].tu = this._lineDates[G].startDate, U[Y].tv = this._lineDates[G].endDate, U[Y].set_color(this._lineColors[G]), X++, Y++;
                    }
                    d != null && d.unlock();
                  }
                },
                _emptyLineBuffer: function() {
                }
              };
              (0, t.registerType)("LineList", [K, T, null]);
              function w() {
                this._trianglePoints = [], this._triangleColors = [], this._triangleDates = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.writeZbuffer = !1, this.decay = 0, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this._triangleBuffers = [], this._triangleBufferCounts = [];
              }
              var f = {
                addTriangle: function(P, d, U, F, X) {
                  this._trianglePoints.push(P), this._trianglePoints.push(d), this._trianglePoints.push(U), this._triangleColors.push(F), this._triangleDates.push(X), this._emptyTriangleBuffer();
                },
                addSubdividedTriangles: function(P, d, U, F, X, Y) {
                  if (Y--, Y < 0)
                    this.addTriangle(P, d, U, F, X);
                  else {
                    var M, B, D;
                    M = e.Vector3d.midPointByLength(P, d), B = e.Vector3d.midPointByLength(d, U), D = e.Vector3d.midPointByLength(U, P), this.addSubdividedTriangles(P, M, D, F, X, Y), this.addSubdividedTriangles(M, B, D, F, X, Y), this.addSubdividedTriangles(M, d, B, F, X, Y), this.addSubdividedTriangles(B, U, D, F, X, Y);
                  }
                },
                addQuad: function(P, d, U, F, X, Y) {
                  this._trianglePoints.push(P), this._trianglePoints.push(U), this._trianglePoints.push(d), this._trianglePoints.push(d), this._trianglePoints.push(U), this._trianglePoints.push(F), this._triangleColors.push(X), this._triangleDates.push(Y), this._triangleColors.push(X), this._triangleDates.push(Y), this._emptyTriangleBuffer();
                },
                clear: function() {
                  this._triangleColors.length = 0, this._trianglePoints.length = 0, this._triangleDates.length = 0, this._emptyTriangleBuffer();
                },
                _emptyTriangleBuffer: function() {
                },
                _initTriangleBuffer: function() {
                  if (!this._triangleBuffers.length) {
                    for (var P = this._trianglePoints.length, d = null, U = null, F = P, X = 0, Y = 0, M = n.ss.enumerate(this._trianglePoints); M.moveNext(); ) {
                      var B = M.current;
                      if (Y >= 9e4 || d == null) {
                        d != null && d.unlock();
                        var D = Math.min(9e4, F);
                        F -= D, d = new c.TimeSeriesLineVertexBuffer(D), this._triangleBuffers.push(d), this._triangleBufferCounts.push(D), U = d.lock(), Y = 0;
                      }
                      U[Y] = new $(), U[Y].position = B, U[Y].normal = B;
                      var k = n.ss.truncate(X / 3);
                      U[Y].set_color(this._triangleColors[k]), U[Y].tu = this._triangleDates[k].startDate, U[Y].tv = this._triangleDates[k].endDate, X++, Y++;
                    }
                    d != null && d.unlock(), this._triangleColors.length = 0, this._triangleDates.length = 0, this._trianglePoints.length = 0, this._dataToDraw = !0;
                  }
                },
                draw: function(P, d, U) {
                  if (!(this._trianglePoints.length < 1 && !this._dataToDraw) && P.gl != null) {
                    this._initTriangleBuffer();
                    for (var F = n.ss.enumerate(this._triangleBuffers); F.moveNext(); ) {
                      var X = F.current;
                      g.LineShaderNormalDates.use(P, X.vertexBuffer, _.Color.fromArgb(255, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0), P.gl.drawArrays(o.WEBGL.TRIANGLES, 0, X.count);
                    }
                  }
                }
              };
              (0, t.registerType)("TriangleList", [w, f, null]);
              function R() {
                this._zBuffer = !0, this.timeSeries = !1, this.decay = 0, this.jNow = 0, this._shapes = [], this._colors = [], this._dates = [], this._buffers = [], this._bufferCounts = [];
              }
              var O = {
                get_depthBuffered: function() {
                  return this._zBuffer;
                },
                set_depthBuffered: function(P) {
                  return this._zBuffer = P, P;
                },
                addShape: function(P, d, U) {
                  this._shapes.push(P), this._colors.push(d), this._dates.push(U);
                },
                draw: function(P, d) {
                  if (!(d <= 0) && P.gl != null) {
                    this._initBuffer();
                    for (var U = n.ss.enumerate(this._buffers); U.moveNext(); ) {
                      var F = U.current;
                      g.LineShaderNormalDates.use(P, F.vertexBuffer, _.Color.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), P.gl.drawArrays(o.WEBGL.TRIANGLE_FAN, 0, F.count);
                    }
                  }
                },
                _initBuffer: function() {
                  if (this._buffers.length !== this._shapes.length) {
                    this._buffers.length = 0;
                    for (var P = 0, d = n.ss.enumerate(this._shapes); d.moveNext(); ) {
                      var U = d.current, F = new c.TimeSeriesLineVertexBuffer(U.length), X = F.lock();
                      this._buffers.push(F), this._bufferCounts.push(U.length);
                      for (var Y = 0, M = n.ss.enumerate(U); M.moveNext(); ) {
                        var B = M.current;
                        X[Y] = new $(), X[Y].position = B, X[Y].tu = this._dates[P].startDate, X[Y].tv = this._dates[P].endDate, X[Y].set_color(this._colors[P]), Y++;
                      }
                      P++, F != null && F.unlock();
                    }
                  }
                }
              };
              (0, t.registerType)("TriangleFanList", [R, O, null]);
              function W(P) {
                this._points = [], this._colors = [], this._dates = [], this._sizes = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.decay = 0, this.scale = 1, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this.items = [], this._imageReady = !1, this._init = !1, this.minSize = 2, this._pointBuffers = [], this._pointBufferCounts = [], this._device = P;
              }
              W.starTexture = null;
              var N = {
                addPoint: function(P, d, U, F) {
                  this._points.push(P), this._colors.push(d._clone()), this._dates.push(U), this._sizes.push(F), this._emptyPointBuffer();
                },
                clear: function() {
                  this._colors.length = 0, this._points.length = 0, this._dates.length = 0, this._sizes.length = 0, this._emptyPointBuffer();
                },
                _emptyPointBuffer: function() {
                  for (var P = n.ss.enumerate(this._pointBuffers); P.moveNext(); ) {
                    var d = P.current;
                    d.dispose();
                  }
                  this._pointBuffers.length = 0, this._init = !1;
                },
                _initBuffer: function(P) {
                  var d = this;
                  if (!this._init) {
                    if (P.gl == null) {
                      this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(z) {
                        d._imageReady = !0;
                      }, !1), this._starProfile.src = r.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png"), this._worldList = new Array(this._points.length), this._transformedList = new Array(this._points.length);
                      for (var U = 0, F = n.ss.enumerate(this._points); F.moveNext(); ) {
                        var X = F.current, Y = new V();
                        Y.location = X, Y.tranformed = new e.Vector3d(), Y.size = this._sizes[U], Y.color = this._colors[U], this._worldList[U] = Y.location, this._transformedList[U] = Y.tranformed, this.items.push(Y), U++;
                      }
                    } else if (!this._pointBuffers.length) {
                      W.starTexture == null && (W.starTexture = l.Texture.fromUrl(r.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png")));
                      for (var M = this._points.length, B = null, D = null, k = M, U = 0, G = 0, j = n.ss.enumerate(this._points); j.moveNext(); ) {
                        var ee = j.current;
                        if (G >= 1e5 || D == null) {
                          B != null && B.unlock();
                          var Z = Math.min(1e5, k);
                          k -= Z, B = new c.TimeSeriesPointVertexBuffer(Z), D = B.lock(), this._pointBuffers.push(B), this._pointBufferCounts.push(Z), G = 0;
                        }
                        D[G] = new I(), D[G].position = ee, D[G].pointSize = this._sizes[U], D[G].tu = this._dates[U].startDate, D[G].tv = this._dates[U].endDate, D[G].set_color(this._colors[U]), U++, G++;
                      }
                      B != null && B.unlock();
                    }
                    this._init = !0;
                  }
                },
                draw: function(P, d, U) {
                  if (this._initBuffer(P), P.gl == null) {
                    if (!this._imageReady)
                      return;
                    P.device.save(), P.WVP.projectArrayToScreen(this._worldList, this._transformedList);
                    var F = P.device;
                    F.globalAlpha = 0.4;
                    var X = P.width, Y = P.height;
                    e.Vector3d.makeCopy(P.get_viewPoint());
                    for (var M = P.get_fovScale() / 100, B = n.ss.enumerate(this.items); B.moveNext(); ) {
                      var D = B.current;
                      if (D.tranformed.z < 1) {
                        var k = D.tranformed.x, G = D.tranformed.y, j = 0.1 * D.size / M, ee = j / 2;
                        k > -ee && k < X + ee && G > -ee && G < Y + ee && (F.beginPath(), F.fillStyle = D.color.toFormat(), F.arc(k, G, j, 0, Math.PI * 2, !0), F.fill());
                      }
                    }
                    P.device.restore();
                  } else {
                    var Z = new e.Vector3d(), z = e.Matrix3d.multiplyMatrix(P.get_world(), P.get_view());
                    z.invert();
                    for (var te = e.Vector3d._transformCoordinate(Z, z), re = n.ss.enumerate(this._pointBuffers); re.moveNext(); ) {
                      var le = re.current;
                      g.TimeSeriesPointSpriteShader.use(P, le.vertexBuffer, W.starTexture.texture2d, _.Color.fromArgb(255 * d, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0, te, this.scale * (P.height / 960), this.minSize, this.showFarSide, this.sky), P.gl.drawArrays(o.WEBGL.POINTS, 0, le.count);
                    }
                  }
                },
                drawTextured: function(P, d, U) {
                  this._initBuffer(P);
                  var F = new e.Vector3d(), X = e.Matrix3d.multiplyMatrix(P.get_world(), P.get_view());
                  X.invert();
                  for (var Y = e.Vector3d._transformCoordinate(F, X), M = n.ss.enumerate(this._pointBuffers); M.moveNext(); ) {
                    var B = M.current;
                    g.TimeSeriesPointSpriteShader.use(P, B.vertexBuffer, d, _.Color.fromArgb(255 * U, 255, 255, 255), this.depthBuffered, this.jNow, this.decay, Y, this.scale * (P.height / 960), this.minSize, this.showFarSide, this.sky), P.gl.drawArrays(o.WEBGL.POINTS, 0, B.count);
                  }
                }
              };
              (0, t.registerType)("PointList", [W, N, null]);
              function $() {
                this.position = new e.Vector3d(), this.normal = new e.Vector3d(), this.tu = 0, this.tv = 0;
              }
              $.create = function(P, d, U, F) {
                var X = new $();
                return X.position = P, X.normal = d, X.tu = U, X.tv = 0, X.color = F, X;
              };
              var S = {
                get_color: function() {
                  return this.color;
                },
                set_color: function(P) {
                  return this.color = P, P;
                }
              };
              (0, t.registerType)("TimeSeriesLineVertex", [$, S, null]);
              function I() {
                this.pointSize = 0, this.tu = 0, this.tv = 0;
              }
              I.create = function(P, d, U, F) {
                var X = new I();
                return X.position = P, X.pointSize = d, X.tu = U, X.tv = 0, X.color = F, X;
              };
              var x = {
                get_color: function() {
                  return this.color;
                },
                set_color: function(P) {
                  return this.color = P, P;
                }
              };
              (0, t.registerType)("TimeSeriesPointVertex", [I, x, null]);
            }
          ),
          /***/
          "./esm/graphics/shaders.js": (
            /*!*********************************!*\
              !*** ./esm/graphics/shaders.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                EllipseShader: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                FitsShader: () => (
                  /* binding */
                  N
                ),
                /* harmony export */
                ImageShader: () => (
                  /* binding */
                  S
                ),
                /* harmony export */
                ImageShader2: () => (
                  /* binding */
                  x
                ),
                /* harmony export */
                KeplerPointSpriteShader: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                LineShaderNormalDates: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                ModelShader: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                ModelShaderTan: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                OrbitLineShader: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                ShapeSpriteShader: () => (
                  /* binding */
                  F
                ),
                /* harmony export */
                SimpleLineShader: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                SimpleLineShader2D: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                SpriteShader: () => (
                  /* binding */
                  d
                ),
                /* harmony export */
                TextShader: () => (
                  /* binding */
                  Y
                ),
                /* harmony export */
                TileShader: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                TimeSeriesPointSpriteShader: () => (
                  /* binding */
                  E
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), e = i(
                /*! ../color.js */
                "./esm/color.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ./webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), o = i(
                /*! ./texture.js */
                "./esm/graphics/texture.js"
              );
              function c() {
              }
              c.vertLoc = 0, c.initialized = !1, c._prog = null, c.init = function(B) {
                var D = B.gl;
                const k = `        precision highp float;
        uniform vec4 lineColor;

        void main(void) {
            gl_FragColor = lineColor;
        }
    `, G = `        attribute vec3 aVertexPosition;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        }
    `;
                c._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(c._frag, k), D.compileShader(c._frag), D.getShaderParameter(c._frag, r.WEBGL.COMPILE_STATUS), c._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(c._vert, G), D.compileShader(c._vert), D.getShaderParameter(c._vert, r.WEBGL.COMPILE_STATUS), c._prog = D.createProgram(), D.attachShader(c._prog, c._vert), D.attachShader(c._prog, c._frag), D.linkProgram(c._prog), D.getProgramParameter(c._prog, r.WEBGL.LINK_STATUS), D.useProgram(c._prog), c.vertLoc = D.getAttribLocation(c._prog, "aVertexPosition"), c.lineColorLoc = D.getUniformLocation(c._prog, "lineColor"), c.projMatLoc = D.getUniformLocation(c._prog, "uPMatrix"), c.mvMatLoc = D.getUniformLocation(c._prog, "uMVMatrix"), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), c.initialized = !0;
              }, c.use = function(B, D, k, G) {
                var j = B.gl;
                if (j != null) {
                  c.initialized || c.init(B), j.useProgram(c._prog);
                  var ee = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  j.uniformMatrix4fv(c.mvMatLoc, !1, ee.floatArray()), j.uniformMatrix4fv(c.projMatLoc, !1, B.get_projection().floatArray()), j.uniform4f(c.lineColorLoc, k.r / 255, k.g / 255, k.b / 255, 1), B.space || !G ? j.disable(r.WEBGL.DEPTH_TEST) : j.enable(r.WEBGL.DEPTH_TEST), j.disableVertexAttribArray(0), j.disableVertexAttribArray(1), j.disableVertexAttribArray(2), j.disableVertexAttribArray(3), j.enableVertexAttribArray(c.vertLoc), j.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), j.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), j.vertexAttribPointer(c.vertLoc, 3, r.WEBGL.FLOAT, !1, 0, 0), j.lineWidth(1), j.enable(r.WEBGL.BLEND), j.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var l = {};
              (0, t.registerType)("SimpleLineShader", [c, l, null]);
              function g() {
              }
              g.vertLoc = 0, g.initialized = !1, g._prog = null, g.init = function(B) {
                var D = B.gl;
                const k = `       precision highp float;
       uniform vec4 lineColor;

       void main(void) {
           gl_FragColor = lineColor;
       }
    `, G = `        attribute vec3 aVertexPosition;

        void main(void) {
            gl_Position = vec4(aVertexPosition, 1.0);
        }
    `;
                g._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(g._frag, k), D.compileShader(g._frag), D.getShaderParameter(g._frag, r.WEBGL.COMPILE_STATUS), g._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(g._vert, G), D.compileShader(g._vert), D.getShaderParameter(g._vert, r.WEBGL.COMPILE_STATUS), g._prog = D.createProgram(), D.attachShader(g._prog, g._vert), D.attachShader(g._prog, g._frag), D.linkProgram(g._prog), D.getProgramParameter(g._prog, r.WEBGL.LINK_STATUS), D.useProgram(g._prog), g.vertLoc = D.getAttribLocation(g._prog, "aVertexPosition"), g.lineColorLoc = D.getUniformLocation(g._prog, "lineColor"), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), g.initialized = !0;
              }, g.use = function(B, D, k, G) {
                var j = B.gl;
                j != null && (g.initialized || g.init(B), j.useProgram(g._prog), n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view()), j.uniform4f(g.lineColorLoc, k.r / 255, k.g / 255, k.b / 255, 1), B.space || !G ? j.disable(r.WEBGL.DEPTH_TEST) : j.enable(r.WEBGL.DEPTH_TEST), j.disableVertexAttribArray(0), j.disableVertexAttribArray(1), j.disableVertexAttribArray(2), j.disableVertexAttribArray(3), j.enableVertexAttribArray(g.vertLoc), j.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), j.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), j.vertexAttribPointer(g.vertLoc, 3, r.WEBGL.FLOAT, !1, 0, 0), j.lineWidth(1), j.enable(r.WEBGL.BLEND), j.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA));
              };
              var a = {};
              (0, t.registerType)("SimpleLineShader2D", [g, a, null]);
              function b() {
              }
              b.vertLoc = 0, b.colorLoc = 0, b.initialized = !1, b._prog = null, b.init = function(B) {
                var D = B.gl;
                const k = `        precision highp float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;

        void main(void) {
            gl_FragColor = lineColor * vColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        varying lowp vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor = aVertexColor;
        }
    `;
                b._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(b._frag, k), D.compileShader(b._frag), D.getShaderParameter(b._frag, r.WEBGL.COMPILE_STATUS), b._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(b._vert, G), D.compileShader(b._vert), D.getShaderParameter(b._vert, r.WEBGL.COMPILE_STATUS), b._prog = D.createProgram(), D.attachShader(b._prog, b._vert), D.attachShader(b._prog, b._frag), D.linkProgram(b._prog), D.getProgramParameter(b._prog, r.WEBGL.LINK_STATUS), D.useProgram(b._prog), b.vertLoc = D.getAttribLocation(b._prog, "aVertexPosition"), b.colorLoc = D.getAttribLocation(b._prog, "aVertexColor"), b.lineColorLoc = D.getUniformLocation(b._prog, "lineColor"), b.projMatLoc = D.getUniformLocation(b._prog, "uPMatrix"), b.mvMatLoc = D.getUniformLocation(b._prog, "uMVMatrix"), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), b.initialized = !0;
              }, b.use = function(B, D, k) {
                var G = B.gl;
                if (G != null) {
                  b.initialized || b.init(B), G.useProgram(b._prog);
                  var j = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  G.uniformMatrix4fv(b.mvMatLoc, !1, j.floatArray()), G.uniformMatrix4fv(b.projMatLoc, !1, B.get_projection().floatArray()), G.uniform4f(b.lineColorLoc, k.r / 255, k.g / 255, k.b / 255, 1), B.space ? G.disable(r.WEBGL.DEPTH_TEST) : G.enable(r.WEBGL.DEPTH_TEST), G.disableVertexAttribArray(0), G.disableVertexAttribArray(1), G.disableVertexAttribArray(2), G.disableVertexAttribArray(3), G.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), G.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), G.enableVertexAttribArray(b.vertLoc), G.enableVertexAttribArray(b.colorLoc), G.vertexAttribPointer(b.vertLoc, 3, r.WEBGL.FLOAT, !1, 28, 0), G.vertexAttribPointer(b.colorLoc, 4, r.WEBGL.FLOAT, !1, 28, 12), G.lineWidth(1), G.enable(r.WEBGL.BLEND), G.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var V = {};
              (0, t.registerType)("OrbitLineShader", [b, V, null]);
              function y() {
              }
              y.vertLoc = 0, y.colorLoc = 0, y.timeLoc = 0, y.initialized = !1, y._prog = null, y.init = function(B) {
                var D = B.gl;
                const k = `        precision highp float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;

        void main(void)
        {
            gl_FragColor = lineColor * vColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;
        attribute vec2 aTime;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform float decay;

        varying lowp vec4 vColor;

        void main(void)
        {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            float dAlpha = 1.0;

            if (decay > 0.0)
            {
                    dAlpha = 1.0 - ((jNow - aTime.y) / decay);
                    if (dAlpha > 1.0 )
                    {
                        dAlpha = 1.0;
                    }
            }

            if (jNow < aTime.x && decay > 0.0)
            {
                vColor = vec4(1, 1, 1, 1);
            }
            else
            {
                vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha * aVertexColor.a);
            }
        }
    `;
                y._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(y._frag, k), D.compileShader(y._frag), D.getShaderParameter(y._frag, r.WEBGL.COMPILE_STATUS), y._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(y._vert, G), D.compileShader(y._vert), D.getShaderParameter(y._vert, r.WEBGL.COMPILE_STATUS), y._prog = D.createProgram(), D.attachShader(y._prog, y._vert), D.attachShader(y._prog, y._frag), D.linkProgram(y._prog), D.getProgramParameter(y._prog, r.WEBGL.LINK_STATUS), D.useProgram(y._prog), y.vertLoc = D.getAttribLocation(y._prog, "aVertexPosition"), y.colorLoc = D.getAttribLocation(y._prog, "aVertexColor"), y.timeLoc = D.getAttribLocation(y._prog, "aTime"), y.lineColorLoc = D.getUniformLocation(y._prog, "lineColor"), y.projMatLoc = D.getUniformLocation(y._prog, "uPMatrix"), y.mvMatLoc = D.getUniformLocation(y._prog, "uMVMatrix"), y.jNowLoc = D.getUniformLocation(y._prog, "jNow"), y.decayLoc = D.getUniformLocation(y._prog, "decay"), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), y.initialized = !0;
              }, y.use = function(B, D, k, G, j, ee) {
                var Z = B.gl;
                if (Z != null) {
                  y.initialized || y.init(B), Z.useProgram(y._prog);
                  var z = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  Z.uniformMatrix4fv(y.mvMatLoc, !1, z.floatArray()), Z.uniformMatrix4fv(y.projMatLoc, !1, B.get_projection().floatArray()), Z.uniform4f(y.lineColorLoc, k.r / 255, k.g / 255, k.b / 255, 1), Z.uniform1f(y.jNowLoc, j), Z.uniform1f(y.decayLoc, ee), G ? Z.enable(r.WEBGL.DEPTH_TEST) : Z.disable(r.WEBGL.DEPTH_TEST), Z.disableVertexAttribArray(0), Z.disableVertexAttribArray(1), Z.disableVertexAttribArray(2), Z.disableVertexAttribArray(3), Z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), Z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), Z.enableVertexAttribArray(y.vertLoc), Z.enableVertexAttribArray(y.colorLoc), Z.vertexAttribPointer(y.vertLoc, 3, r.WEBGL.FLOAT, !1, 36, 0), Z.vertexAttribPointer(y.colorLoc, 4, r.WEBGL.FLOAT, !1, 36, 12), Z.vertexAttribPointer(y.timeLoc, 2, r.WEBGL.FLOAT, !1, 36, 28), Z.lineWidth(1), Z.enable(r.WEBGL.BLEND), Z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var C = {};
              (0, t.registerType)("LineShaderNormalDates", [y, C, null]);
              function E() {
              }
              E.vertLoc = 0, E.colorLoc = 0, E.pointSizeLoc = 0, E.timeLoc = 0, E.initialized = !1, E._prog = null, E.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void)
        {
            vec4 texColor;
            texColor = texture2D(uSampler, gl_PointCoord);
            gl_FragColor = lineColor * vColor * texColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;
        attribute vec2 aTime;
        attribute float aPointSize;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform vec3 cameraPosition;
        uniform float decay;
        uniform float scale;
        uniform float minSize;
        uniform float sky;
        uniform float showFarSide;

        varying lowp vec4 vColor;

        void main(void)
        {
            float dotCam = dot( normalize(cameraPosition-aVertexPosition), normalize(aVertexPosition));
            float dist = distance(aVertexPosition, cameraPosition);
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            float dAlpha = 1.0;

            if ( decay > 0.0)
            {
                    dAlpha = 1.0 - ((jNow - aTime.y) / decay);
                    if (dAlpha > 1.0 )
                    {
                        dAlpha = 1.0;
                    }
            }

            if ( showFarSide == 0.0 && (dotCam * sky) < 0.0 || (jNow < aTime.x && decay > 0.0))
            {
                vColor = vec4(0.0, 0.0, 0.0, 0.0);
            }
            else
            {
                vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha);
            }

            float lSize = scale;

            if (scale < 0.0)
            {
                lSize = -scale;
                dist = 1.0;
            }

            gl_PointSize = max(minSize, (lSize * ( aPointSize ) / dist));
        }
    `;
                E._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(E._frag, k), D.compileShader(E._frag), D.getShaderParameter(E._frag, r.WEBGL.COMPILE_STATUS), E._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(E._vert, G), D.compileShader(E._vert), D.getShaderParameter(E._vert, r.WEBGL.COMPILE_STATUS), D.getShaderInfoLog(E._vert), E._prog = D.createProgram(), D.attachShader(E._prog, E._vert), D.attachShader(E._prog, E._frag), D.linkProgram(E._prog), D.getProgramParameter(E._prog, r.WEBGL.LINK_STATUS), D.useProgram(E._prog), E.vertLoc = D.getAttribLocation(E._prog, "aVertexPosition"), E.colorLoc = D.getAttribLocation(E._prog, "aVertexColor"), E.pointSizeLoc = D.getAttribLocation(E._prog, "aPointSize"), E.timeLoc = D.getAttribLocation(E._prog, "aTime"), E.projMatLoc = D.getUniformLocation(E._prog, "uPMatrix"), E.mvMatLoc = D.getUniformLocation(E._prog, "uMVMatrix"), E.sampLoc = D.getUniformLocation(E._prog, "uSampler"), E.jNowLoc = D.getUniformLocation(E._prog, "jNow"), E.decayLoc = D.getUniformLocation(E._prog, "decay"), E.lineColorLoc = D.getUniformLocation(E._prog, "lineColor"), E.cameraPosLoc = D.getUniformLocation(E._prog, "cameraPosition"), E.scaleLoc = D.getUniformLocation(E._prog, "scale"), E.skyLoc = D.getUniformLocation(E._prog, "sky"), E.showFarSideLoc = D.getUniformLocation(E._prog, "showFarSide"), E.minSizeLoc = D.getUniformLocation(E._prog, "minSize"), D.enable(r.WEBGL.BLEND), E.initialized = !0;
              }, E.use = function(B, D, k, G, j, ee, Z, z, te, re, le, ae) {
                k == null && (k = o.Texture.getEmpty());
                var oe = B.gl;
                if (oe != null) {
                  E.initialized || E.init(B), oe.useProgram(E._prog);
                  var de = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  oe.uniformMatrix4fv(E.mvMatLoc, !1, de.floatArray()), oe.uniformMatrix4fv(E.projMatLoc, !1, B.get_projection().floatArray()), oe.uniform1i(E.sampLoc, 0), oe.uniform1f(E.jNowLoc, ee), oe.uniform1f(E.decayLoc, Z), oe.uniform4f(E.lineColorLoc, G.r / 255, G.g / 255, G.b / 255, G.a / 255), oe.uniform3f(E.cameraPosLoc, z.x, z.y, z.z), oe.uniform1f(E.scaleLoc, te), oe.uniform1f(E.minSizeLoc, re), oe.uniform1f(E.showFarSideLoc, le ? 1 : 0), oe.uniform1f(E.skyLoc, ae ? -1 : 1), j ? oe.enable(r.WEBGL.DEPTH_TEST) : oe.disable(r.WEBGL.DEPTH_TEST), oe.disableVertexAttribArray(0), oe.disableVertexAttribArray(1), oe.disableVertexAttribArray(2), oe.disableVertexAttribArray(3), oe.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), oe.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), oe.enableVertexAttribArray(E.vertLoc), oe.enableVertexAttribArray(E.colorLoc), oe.enableVertexAttribArray(E.pointSizeLoc), oe.enableVertexAttribArray(E.timeLoc), oe.vertexAttribPointer(E.vertLoc, 3, r.WEBGL.FLOAT, !1, 40, 0), oe.vertexAttribPointer(E.colorLoc, 4, r.WEBGL.FLOAT, !1, 40, 12), oe.vertexAttribPointer(E.pointSizeLoc, 1, r.WEBGL.FLOAT, !1, 40, 36), oe.vertexAttribPointer(E.timeLoc, 2, r.WEBGL.FLOAT, !1, 40, 28), oe.activeTexture(r.WEBGL.TEXTURE0), oe.bindTexture(r.WEBGL.TEXTURE_2D, k), oe.lineWidth(1), oe.enable(r.WEBGL.BLEND), oe.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE);
                }
              };
              var v = {};
              (0, t.registerType)("TimeSeriesPointSpriteShader", [E, v, null]);
              function m() {
              }
              m.abcLoc = 0, m.abcLoc1 = 0, m.pointSizeLoc = 0, m.colorLoc = 0, m.weLoc = 0, m.nTLoc = 0, m.azLoc = 0, m.orbitLoc = 0, m.initialized = !1, m._prog = null, m.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void)
        {
            vec4 texColor;
            texColor = texture2D(uSampler, gl_PointCoord);
            gl_FragColor = lineColor * vColor * texColor;
        }
    `, G = `        attribute vec3 ABC;
        attribute vec3 abc;
        attribute float PointSize;
        attribute vec4 Color;
        attribute vec2 we;
        attribute vec2 nT;
        attribute vec2 az;
        attribute vec2 orbit;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform vec3 cameraPosition;
        uniform float MM;
        uniform float scaling;
        uniform float minSize;
        uniform float opacity;
        varying lowp vec4 vColor;

        void main(void)
        {
            float M = nT.x * (jNow - nT.y) * 0.01745329251994;
            float e = we.y;
            float a = az.x;
            float PI = 3.1415926535897932384;
            float w = we.x* 0.01745329251994;
            float F = 1.0;

            if (M < 0.0)
                F = -1.0;

            M = abs(M) / (2.0 * PI);
            M = (M - float(int(M)))*2.0 *PI *F;

            if (MM != 0.0)
            {
                M = MM + (1.0- orbit.x) *2.0 *PI;
                if (M > (2.0*PI))
                    M = M - (2.0*PI);
            }

            if (M < 0.0)
                M += 2.0 *PI;

            F = 1.0;
            if (M > PI)
                F = -1.0;

            if (M > PI)
                M = 2.0 *PI - M;

            float E = PI / 2.0;
            float scale = PI / 4.0;

            for (int i =0; i<23; i++)
            {
                float R = E - e *sin(E);
                if (M > R)
                    E += scale;
                else
                    E -= scale;
                scale /= 2.0;
            }

            E = E * F;

            float v = 2.0 * atan(sqrt((1.0 + e) / (1.0 -e )) * tan(E/2.0));
            float r = a * (1.0-e * cos(E));

            vec4 pnt;
            pnt.x = r * abc.x * sin(ABC.x + w + v);
            pnt.z = r * abc.y * sin(ABC.y + w + v);
            pnt.y = r * abc.z * sin(ABC.z + w + v);
            pnt.w = 1.0;

            float dist = distance(pnt.xyz, cameraPosition.xyz);
            gl_Position = uPMatrix * uMVMatrix * pnt;
            vColor.a = opacity * (1.0-(orbit.x));
            vColor.r = Color.r;
            vColor.g = Color.g;
            vColor.b = Color.b;
            gl_PointSize = max(minSize, scaling * (PointSize / dist));
        }
    `;
                m._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(m._frag, k), D.compileShader(m._frag), D.getShaderParameter(m._frag, r.WEBGL.COMPILE_STATUS), m._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(m._vert, G), D.compileShader(m._vert), D.getShaderParameter(m._vert, r.WEBGL.COMPILE_STATUS), D.getShaderInfoLog(m._vert), m._prog = D.createProgram(), D.attachShader(m._prog, m._vert), D.attachShader(m._prog, m._frag), D.linkProgram(m._prog), D.getProgramParameter(m._prog, r.WEBGL.LINK_STATUS), D.useProgram(m._prog), m.abcLoc1 = D.getAttribLocation(m._prog, "abc"), m.abcLoc = D.getAttribLocation(m._prog, "ABC"), m.pointSizeLoc = D.getAttribLocation(m._prog, "PointSize"), m.colorLoc = D.getAttribLocation(m._prog, "Color"), m.weLoc = D.getAttribLocation(m._prog, "we"), m.nTLoc = D.getAttribLocation(m._prog, "nT"), m.azLoc = D.getAttribLocation(m._prog, "az"), m.orbitLoc = D.getAttribLocation(m._prog, "orbit"), m.projMatLoc = D.getUniformLocation(m._prog, "uPMatrix"), m.mvMatLoc = D.getUniformLocation(m._prog, "uMVMatrix"), m.jNowLoc = D.getUniformLocation(m._prog, "jNow"), m.cameraPosLoc = D.getUniformLocation(m._prog, "cameraPosition"), m.mmLoc = D.getUniformLocation(m._prog, "MM"), m.scaleLoc = D.getUniformLocation(m._prog, "scaling"), m.minSizeLoc = D.getUniformLocation(m._prog, "minSize"), m.lineColorLoc = D.getUniformLocation(m._prog, "lineColor"), m.opacityLoc = D.getUniformLocation(m._prog, "opacity"), m.sampLoc = D.getUniformLocation(m._prog, "uSampler"), D.enable(r.WEBGL.BLEND), m.initialized = !0;
              }, m.use = function(B, D, k, G, j, ee, Z, z, te, re, le, ae) {
                G == null && (G = o.Texture.getEmpty());
                var oe = B.gl;
                oe != null && (m.initialized || m.init(B), oe.useProgram(m._prog), oe.uniformMatrix4fv(m.mvMatLoc, !1, D.floatArray()), oe.uniformMatrix4fv(m.projMatLoc, !1, B.get_projection().floatArray()), oe.uniform1i(m.sampLoc, 0), oe.uniform1f(m.jNowLoc, z), oe.uniform1f(m.mmLoc, te), oe.uniform4f(m.lineColorLoc, j.r / 255, j.g / 255, j.b / 255, j.a / 255), oe.uniform1f(m.opacityLoc, ee), oe.uniform3f(m.cameraPosLoc, re.x, re.y, re.z), oe.uniform1f(m.scaleLoc, le), oe.uniform1f(m.minSizeLoc, ae), Z ? oe.enable(r.WEBGL.DEPTH_TEST) : oe.disable(r.WEBGL.DEPTH_TEST), oe.disableVertexAttribArray(0), oe.disableVertexAttribArray(1), oe.disableVertexAttribArray(2), oe.disableVertexAttribArray(3), oe.bindBuffer(r.WEBGL.ARRAY_BUFFER, k), oe.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), oe.enableVertexAttribArray(m.abcLoc), oe.enableVertexAttribArray(m.abcLoc1), oe.enableVertexAttribArray(m.colorLoc), oe.enableVertexAttribArray(m.pointSizeLoc), oe.enableVertexAttribArray(m.weLoc), oe.enableVertexAttribArray(m.nTLoc), oe.enableVertexAttribArray(m.azLoc), oe.enableVertexAttribArray(m.orbitLoc), oe.enableVertexAttribArray(m.weLoc), oe.vertexAttribPointer(m.abcLoc, 3, r.WEBGL.FLOAT, !1, 76, 0), oe.vertexAttribPointer(m.abcLoc1, 3, r.WEBGL.FLOAT, !1, 76, 12), oe.vertexAttribPointer(m.pointSizeLoc, 1, r.WEBGL.FLOAT, !1, 76, 24), oe.vertexAttribPointer(m.colorLoc, 4, r.WEBGL.FLOAT, !1, 76, 28), oe.vertexAttribPointer(m.weLoc, 2, r.WEBGL.FLOAT, !1, 76, 44), oe.vertexAttribPointer(m.nTLoc, 2, r.WEBGL.FLOAT, !1, 76, 52), oe.vertexAttribPointer(m.azLoc, 2, r.WEBGL.FLOAT, !1, 76, 60), oe.vertexAttribPointer(m.orbitLoc, 2, r.WEBGL.FLOAT, !1, 76, 68), oe.activeTexture(r.WEBGL.TEXTURE0), oe.bindTexture(r.WEBGL.TEXTURE_2D, G), oe.lineWidth(1), oe.enable(r.WEBGL.BLEND), oe.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE));
              };
              var L = {};
              (0, t.registerType)("KeplerPointSpriteShader", [m, L, null]);
              function A() {
              }
              A.angleLoc = 0, A.initialized = !1, A._prog = null, A.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;
        varying lowp vec4 vColor;

        void main(void)
        {
            gl_FragColor = vColor;
        }
    `, G = `        attribute vec3 Angle;
        uniform mat4 matWVP;
        uniform mat4 matPosition;
        uniform vec3 positionNow;
        uniform float semiMajorAxis;
        uniform float eccentricity;
        uniform vec4 color;
        uniform float eccentricAnomaly;
        varying lowp vec4 vColor;

        void main(void)
        {
            float fade = (1.0 - Angle.x);
            float PI = 3.1415927;
            float E = eccentricAnomaly - Angle.x * 2.0 * PI;
            vec2 semiAxes = vec2(1.0, sqrt(1.0 - eccentricity * eccentricity)) * semiMajorAxis;
            vec2 planePos = semiAxes * vec2(cos(E) - eccentricity, sin(E));

            if (Angle.x == 0.0)
                gl_Position =  matPosition * vec4(positionNow, 1.0);
            else
                gl_Position = matWVP * vec4(planePos.x, planePos.y, 0.0, 1.0);

            vColor = vec4(color.rgb, fade * color.a);
        }
    `;
                A._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(A._frag, k), D.compileShader(A._frag), D.getShaderParameter(A._frag, r.WEBGL.COMPILE_STATUS), A._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(A._vert, G), D.compileShader(A._vert), D.getShaderParameter(A._vert, r.WEBGL.COMPILE_STATUS), D.getShaderInfoLog(A._vert), A._prog = D.createProgram(), D.attachShader(A._prog, A._vert), D.attachShader(A._prog, A._frag), D.linkProgram(A._prog), D.getProgramParameter(A._prog, r.WEBGL.LINK_STATUS), D.useProgram(A._prog), A.angleLoc = D.getAttribLocation(A._prog, "Angle"), A.matWVPLoc = D.getUniformLocation(A._prog, "matWVP"), A.matPositionLoc = D.getUniformLocation(A._prog, "matPosition"), A.positionNowLoc = D.getUniformLocation(A._prog, "positionNow"), A.colorLoc = D.getUniformLocation(A._prog, "color"), A.semiMajorAxisLoc = D.getUniformLocation(A._prog, "semiMajorAxis"), A.eccentricityLoc = D.getUniformLocation(A._prog, "eccentricity"), A.eccentricAnomalyLoc = D.getUniformLocation(A._prog, "eccentricAnomaly"), D.enable(r.WEBGL.BLEND), A.initialized = !0;
              }, A.use = function(B, D, k, G, j, ee, Z, z) {
                var te = B.gl;
                if (te != null) {
                  A.initialized || A.init(B), te.useProgram(A._prog);
                  var re = n.Matrix3d.multiplyMatrix(n.Matrix3d.multiplyMatrix(Z, B.get_view()), B.get_projection()), le = n.Matrix3d.multiplyMatrix(n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view()), B.get_projection());
                  te.uniformMatrix4fv(A.matWVPLoc, !1, le.floatArray()), te.uniformMatrix4fv(A.matPositionLoc, !1, re.floatArray()), te.uniform3f(A.positionNowLoc, z.x, z.y, z.z), te.uniform4f(A.colorLoc, j.r / 255, j.g / 255, j.b / 255, j.a / 255), te.uniform1f(A.semiMajorAxisLoc, D), te.uniform1f(A.eccentricityLoc, k), te.uniform1f(A.eccentricAnomalyLoc, G), te.disable(r.WEBGL.DEPTH_TEST), te.disableVertexAttribArray(0), te.disableVertexAttribArray(1), te.disableVertexAttribArray(2), te.disableVertexAttribArray(3), te.enableVertexAttribArray(A.angleLoc), te.vertexAttribPointer(A.angleLoc, 3, r.WEBGL.FLOAT, !1, 0, 0), te.lineWidth(1), te.enable(r.WEBGL.BLEND), te.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE);
                }
              };
              var K = {};
              (0, t.registerType)("EllipseShader", [A, K, null]);
              function T() {
              }
              T.vertLoc = 0, T.normalLoc = 0, T.textureLoc = 0, T.initialized = !1, T._prog = null, T.sunPosition = n.Vector3d.create(-1, -1, -1), T.minLightingBrightness = 1, T.atmosphereColor = e.Color.fromArgb(0, 0, 0, 0), T.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec3 aNormal;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
            vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;
                T._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(T._frag, k), D.compileShader(T._frag);
                var j = D.getShaderParameter(T._frag, r.WEBGL.COMPILE_STATUS);
                j || D.getShaderInfoLog(T._frag), T._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(T._vert, G), D.compileShader(T._vert);
                var ee = D.getShaderParameter(T._vert, r.WEBGL.COMPILE_STATUS);
                ee || D.getShaderInfoLog(T._vert), T._prog = D.createProgram(), D.attachShader(T._prog, T._vert), D.attachShader(T._prog, T._frag), D.linkProgram(T._prog), D.getProgramParameter(T._prog, r.WEBGL.LINK_STATUS), D.useProgram(T._prog), T.vertLoc = D.getAttribLocation(T._prog, "aVertexPosition"), T.normalLoc = D.getAttribLocation(T._prog, "aNormal"), T.textureLoc = D.getAttribLocation(T._prog, "aTextureCoord"), T.projMatLoc = D.getUniformLocation(T._prog, "uPMatrix"), T.mvMatLoc = D.getUniformLocation(T._prog, "uMVMatrix"), T.sampLoc = D.getUniformLocation(T._prog, "uSampler"), T.sunLoc = D.getUniformLocation(T._prog, "uSunPosition"), T.minBrightnessLoc = D.getUniformLocation(T._prog, "uMinBrightness"), T.opacityLoc = D.getUniformLocation(T._prog, "opacity"), T.atmosphereColorLoc = D.getUniformLocation(T._prog, "uAtmosphereColor"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), T.initialized = !0;
              }, T.use = function(B, D, k, G, j, ee, Z) {
                G == null && (G = o.Texture.getEmpty());
                var z = B.gl;
                if (z != null) {
                  T.initialized || T.init(B), z.useProgram(T._prog);
                  var te = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  z.uniform1f(T.opacityLoc, j), z.uniform1f(T.minBrightnessLoc, B.lighting ? T.minLightingBrightness : 1), B.lighting ? z.uniform3f(T.atmosphereColorLoc, T.atmosphereColor.r / 255, T.atmosphereColor.g / 255, T.atmosphereColor.b / 255) : z.uniform3f(T.atmosphereColorLoc, 0, 0, 0), z.uniformMatrix4fv(T.mvMatLoc, !1, te.floatArray()), z.uniformMatrix4fv(T.projMatLoc, !1, B.get_projection().floatArray()), T.sunPosition.normalize();
                  var re = B.get_view().clone();
                  re.set_m41(0), re.set_m42(0), re.set_m43(0), re.set_m44(1);
                  var le = n.Vector3d._transformCoordinate(T.sunPosition, re);
                  le.normalize(), z.uniform3f(T.sunLoc, le.x, le.y, le.z), z.uniform1i(T.sampLoc, 0), B.space || ee ? z.disable(r.WEBGL.DEPTH_TEST) : z.enable(r.WEBGL.DEPTH_TEST), z.disableVertexAttribArray(0), z.disableVertexAttribArray(1), z.disableVertexAttribArray(2), z.disableVertexAttribArray(3), z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), z.enableVertexAttribArray(T.vertLoc), z.enableVertexAttribArray(T.normalLoc), z.enableVertexAttribArray(T.textureLoc), z.vertexAttribPointer(T.vertLoc, 3, r.WEBGL.FLOAT, !1, Z, 0), z.vertexAttribPointer(T.normalLoc, 3, r.WEBGL.FLOAT, !1, Z, 12), z.vertexAttribPointer(T.textureLoc, 2, r.WEBGL.FLOAT, !1, Z, Z - 8), z.activeTexture(r.WEBGL.TEXTURE0), z.bindTexture(r.WEBGL.TEXTURE_2D, G), z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, k), z.enable(r.WEBGL.BLEND), ee ? z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE) : z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var w = {};
              (0, t.registerType)("ModelShader", [T, w, null]);
              function f() {
              }
              f.vertLoc = 0, f.normalLoc = 0, f.textureLoc = 0, f.initialized = !1, f._prog = null, f.sunPosition = n.Vector3d.create(-1, -1, -1), f.minLightingBrightness = 1, f.atmosphereColor = e.Color.fromArgb(0, 0, 0, 0), f.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec3 aNormal;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
            vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;
                f._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(f._frag, k), D.compileShader(f._frag);
                var j = D.getShaderParameter(f._frag, r.WEBGL.COMPILE_STATUS);
                j || D.getShaderInfoLog(f._frag), f._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(f._vert, G), D.compileShader(f._vert);
                var ee = D.getShaderParameter(f._vert, r.WEBGL.COMPILE_STATUS);
                ee || D.getShaderInfoLog(f._vert), f._prog = D.createProgram(), D.attachShader(f._prog, f._vert), D.attachShader(f._prog, f._frag), D.linkProgram(f._prog), D.getProgramParameter(f._prog, r.WEBGL.LINK_STATUS), D.useProgram(f._prog), f.vertLoc = D.getAttribLocation(f._prog, "aVertexPosition"), f.normalLoc = D.getAttribLocation(f._prog, "aNormal"), f.textureLoc = D.getAttribLocation(f._prog, "aTextureCoord"), f.projMatLoc = D.getUniformLocation(f._prog, "uPMatrix"), f.mvMatLoc = D.getUniformLocation(f._prog, "uMVMatrix"), f.sampLoc = D.getUniformLocation(f._prog, "uSampler"), f.sunLoc = D.getUniformLocation(f._prog, "uSunPosition"), f.minBrightnessLoc = D.getUniformLocation(f._prog, "uMinBrightness"), f.opacityLoc = D.getUniformLocation(f._prog, "opacity"), f.atmosphereColorLoc = D.getUniformLocation(f._prog, "uAtmosphereColor"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), f.initialized = !0;
              }, f.use = function(B, D, k, G, j, ee, Z) {
                G == null && (G = o.Texture.getEmpty());
                var z = B.gl;
                if (z != null) {
                  f.initialized || f.init(B), z.useProgram(f._prog);
                  var te = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  z.uniform1f(f.opacityLoc, j), z.uniform1f(f.minBrightnessLoc, B.lighting ? f.minLightingBrightness : 1), B.lighting ? z.uniform3f(f.atmosphereColorLoc, f.atmosphereColor.r / 255, f.atmosphereColor.g / 255, f.atmosphereColor.b / 255) : z.uniform3f(f.atmosphereColorLoc, 0, 0, 0), z.uniformMatrix4fv(f.mvMatLoc, !1, te.floatArray()), z.uniformMatrix4fv(f.projMatLoc, !1, B.get_projection().floatArray()), f.sunPosition.normalize();
                  var re = B.get_view().clone();
                  re.set_m41(0), re.set_m42(0), re.set_m43(0), re.set_m44(1);
                  var le = n.Vector3d._transformCoordinate(f.sunPosition, re);
                  le.normalize(), z.uniform3f(f.sunLoc, -le.x, -le.y, -le.z), z.uniform1i(f.sampLoc, 0), B.space || ee ? z.disable(r.WEBGL.DEPTH_TEST) : z.enable(r.WEBGL.DEPTH_TEST), z.disableVertexAttribArray(0), z.disableVertexAttribArray(1), z.disableVertexAttribArray(2), z.disableVertexAttribArray(3), z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), z.enableVertexAttribArray(f.vertLoc), z.enableVertexAttribArray(f.normalLoc), z.enableVertexAttribArray(f.textureLoc), z.vertexAttribPointer(f.vertLoc, 3, r.WEBGL.FLOAT, !1, Z, 0), z.vertexAttribPointer(f.normalLoc, 3, r.WEBGL.FLOAT, !1, Z, 12), z.vertexAttribPointer(f.textureLoc, 2, r.WEBGL.FLOAT, !1, Z, Z - 8), z.activeTexture(r.WEBGL.TEXTURE0), z.bindTexture(r.WEBGL.TEXTURE_2D, G), z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, k), z.enable(r.WEBGL.BLEND), ee ? z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE) : z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var R = {};
              (0, t.registerType)("ModelShaderTan", [f, R, null]);
              function O() {
              }
              O.vertLoc = 0, O.textureLoc = 0, O.initialized = !1, O._prog = null, O.sunPosition = n.Vector3d.create(-1, -1, -1), O.minLightingBrightness = 1, O.atmosphereColor = e.Color.fromArgb(0, 0, 0, 0), O.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm = 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform vec3 uCenterScreen;
        uniform vec3 uCenterWorld;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            vec3 normal;

            if (length(uCenterWorld) > 0.00001) {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);
                vCamVector = normalize((mat3(uMVMatrix) * (aVertexPosition + uCenterWorld)).xyz);
                normal = normalize(aVertexPosition + uCenterWorld);
            } else {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
                vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
                normal = normalize(aVertexPosition);
            }

            vec3 normalT = normalize(mat3(uMVMatrix) * normal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;
                O._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(O._frag, k), D.compileShader(O._frag);
                var j = D.getShaderParameter(O._frag, r.WEBGL.COMPILE_STATUS);
                j || D.getShaderInfoLog(O._frag), O._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(O._vert, G), D.compileShader(O._vert);
                var ee = D.getShaderParameter(O._vert, r.WEBGL.COMPILE_STATUS);
                ee || D.getShaderInfoLog(O._vert), O._prog = D.createProgram(), D.attachShader(O._prog, O._vert), D.attachShader(O._prog, O._frag), D.linkProgram(O._prog), D.getProgramParameter(O._prog, r.WEBGL.LINK_STATUS), D.useProgram(O._prog), O.vertLoc = D.getAttribLocation(O._prog, "aVertexPosition"), O.textureLoc = D.getAttribLocation(O._prog, "aTextureCoord"), O.projMatLoc = D.getUniformLocation(O._prog, "uPMatrix"), O.mvMatLoc = D.getUniformLocation(O._prog, "uMVMatrix"), O.sampLoc = D.getUniformLocation(O._prog, "uSampler"), O.centerScreenLoc = D.getUniformLocation(O._prog, "uCenterScreen"), O.centerWorldLoc = D.getUniformLocation(O._prog, "uCenterWorld"), O.sunLoc = D.getUniformLocation(O._prog, "uSunPosition"), O.minBrightnessLoc = D.getUniformLocation(O._prog, "uMinBrightness"), O.opacityLoc = D.getUniformLocation(O._prog, "opacity"), O.atmosphereColorLoc = D.getUniformLocation(O._prog, "uAtmosphereColor"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), O.initialized = !0;
              }, O.use = function(B, D, k, G, j, ee, Z) {
                G == null && (G = o.Texture.getEmpty());
                var z = B.gl;
                if (z != null) {
                  O.initialized || O.init(B), z.useProgram(O._prog);
                  var te = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  if (z.uniform1f(O.opacityLoc, j), z.uniform1f(O.minBrightnessLoc, B.lighting ? O.minLightingBrightness : 1), B.lighting ? z.uniform3f(O.atmosphereColorLoc, O.atmosphereColor.r / 255, O.atmosphereColor.g / 255, O.atmosphereColor.b / 255) : z.uniform3f(O.atmosphereColorLoc, 0, 0, 0), z.uniform3f(O.centerWorldLoc, Z.x, Z.y, Z.z), Z.lengthSq() > 1e-3) {
                    var re = n.Matrix3d.multiplyMatrix(te, B.get_projection()), le = re.transform(Z);
                    z.uniform3f(O.centerScreenLoc, le.x, le.y, le.z);
                  } else
                    z.uniform3f(O.centerScreenLoc, 0, 0, 0);
                  z.uniformMatrix4fv(O.mvMatLoc, !1, te.floatArray()), z.uniformMatrix4fv(O.projMatLoc, !1, B.get_projection().floatArray()), O.sunPosition.normalize();
                  var ae = B.get_view().clone();
                  ae.set_m41(0), ae.set_m42(0), ae.set_m43(0), ae.set_m44(1);
                  var oe = n.Vector3d._transformCoordinate(O.sunPosition, ae);
                  oe.normalize(), z.uniform3f(O.sunLoc, -oe.x, -oe.y, -oe.z), z.uniform1i(O.sampLoc, 0), B.space || ee ? z.disable(r.WEBGL.DEPTH_TEST) : z.enable(r.WEBGL.DEPTH_TEST), z.disableVertexAttribArray(0), z.disableVertexAttribArray(1), z.disableVertexAttribArray(2), z.disableVertexAttribArray(3), z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), z.enableVertexAttribArray(O.vertLoc), z.enableVertexAttribArray(O.textureLoc), z.vertexAttribPointer(O.vertLoc, 3, r.WEBGL.FLOAT, !1, 20, 0), z.vertexAttribPointer(O.textureLoc, 2, r.WEBGL.FLOAT, !1, 20, 12), z.activeTexture(r.WEBGL.TEXTURE0), z.bindTexture(r.WEBGL.TEXTURE_2D, G), z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, k), z.enable(r.WEBGL.BLEND), ee ? z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE) : z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var W = {};
              (0, t.registerType)("TileShader", [O, W, null]);
              function N() {
              }
              N.vertLoc = 0, N.textureLoc = 0, N.initialized = !1, N._prog = null, N.blankValue = 0, N.bScale = 1, N.bZero = 0, N.min = 0, N.max = 0, N.transparentBlack = !1, N.containsBlanks = !1, N.scaleType = 0, N.init = function(B) {
                var D = B.gl;
                const k = `        #version 300 es

        precision mediump float;
        in vec2 vTextureCoord;
        in vec3 vNormal;
        in vec3 vCamVector;
        out vec4 fragmentColor;

        uniform sampler2D uSampler;
        uniform sampler2D colorSampler;
        uniform float blank;
        uniform float bzero;
        uniform float bscale;
        uniform float min;
        uniform float max;
        uniform bool containsBlanks;
        uniform bool transparentBlack;
        uniform int scaleType;
        uniform float opacity;

        bool isNaN(float value) {
            // See https://stackoverflow.com/questions/9446888/best-way-to-detect-nans-in-opengl-shaders
            // PKGW also finds that we need "value != value" on his Dell laptop running
            // Chrome on Linux.
            return (value != value) || !(value < 0.0 || 0.0 < value || value == 0.0);
        }

        void main(void) {
            //FITS images are flipped on the y axis
            vec4 color = texture(uSampler, vec2(vTextureCoord.x, 1.0 - vTextureCoord.y));

            if(isNaN(color.r) || (containsBlanks && abs(blank - color.r) < 0.00000001)){
                fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);
            } else {
                float physicalValue = (bzero + bscale * color.r - min) / (max - min);
                if(transparentBlack && physicalValue <= 0.0){
                    fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);
                    return;
                }

                physicalValue = clamp(physicalValue, 0.0, 1.0);

                switch(scaleType){
                    case 1:
                        physicalValue = log(physicalValue * 255.0 + 1.0 ) / log(256.0);
                        break;
                    case 2:
                        physicalValue = physicalValue * physicalValue;
                        break;
                    case 3:
                        physicalValue = sqrt(physicalValue);
                        break;
                }
                vec4 colorFromColorMapper = texture(colorSampler, vec2(physicalValue, 0.5));
                fragmentColor = vec4(colorFromColorMapper.rgb, opacity);
            }
        }
    `, G = `        #version 300 es

        in vec3 aVertexPosition;
        in vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform vec3 uCenterScreen;

        out vec2 vTextureCoord;

        void main(void) {
            if(length(uCenterScreen) > 0.0000001) {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);
            } else {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            }

            vTextureCoord = aTextureCoord;
        }
    `;
                N._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(N._frag, k), D.compileShader(N._frag);
                var j = D.getShaderParameter(N._frag, r.WEBGL.COMPILE_STATUS);
                if (!j) {
                  var ee = D.getShaderInfoLog(N._frag);
                  console.log(ee);
                }
                N._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(N._vert, G), D.compileShader(N._vert);
                var Z = D.getShaderParameter(N._vert, r.WEBGL.COMPILE_STATUS);
                if (!Z) {
                  var z = D.getShaderInfoLog(N._vert);
                  console.log(z);
                }
                N._prog = D.createProgram(), D.attachShader(N._prog, N._vert), D.attachShader(N._prog, N._frag), D.linkProgram(N._prog), D.getProgramParameter(N._prog, r.WEBGL.LINK_STATUS), D.useProgram(N._prog), N.vertLoc = D.getAttribLocation(N._prog, "aVertexPosition"), N.textureLoc = D.getAttribLocation(N._prog, "aTextureCoord"), N.projMatLoc = D.getUniformLocation(N._prog, "uPMatrix"), N.mvMatLoc = D.getUniformLocation(N._prog, "uMVMatrix"), N.sampLoc = D.getUniformLocation(N._prog, "uSampler"), N.colorLoc = D.getUniformLocation(N._prog, "colorSampler"), N.centerScreenLoc = D.getUniformLocation(N._prog, "uCenterScreen"), N.blank = D.getUniformLocation(N._prog, "blank"), N.bzero = D.getUniformLocation(N._prog, "bzero"), N.bscale = D.getUniformLocation(N._prog, "bscale"), N.minLoc = D.getUniformLocation(N._prog, "min"), N.maxLoc = D.getUniformLocation(N._prog, "max"), N.transparentBlackLoc = D.getUniformLocation(N._prog, "transparentBlack"), N.containsBlanksLoc = D.getUniformLocation(N._prog, "containsBlanks"), N.scalingLocation = D.getUniformLocation(N._prog, "scaleType"), N.opacityLoc = D.getUniformLocation(N._prog, "opacity"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), N.initialized = !0;
              }, N.use = function(B, D, k, G, j, ee, Z) {
                G == null && (G = o.Texture.getEmpty());
                var z = B.gl;
                if (z != null) {
                  N.initialized || N.init(B), z.useProgram(N._prog);
                  var te = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  if (z.uniform1f(N.opacityLoc, j), z.uniformMatrix4fv(N.mvMatLoc, !1, te.floatArray()), z.uniformMatrix4fv(N.projMatLoc, !1, B.get_projection().floatArray()), Z.lengthSq() > 1e-3) {
                    var re = n.Matrix3d.multiplyMatrix(te, B.get_projection()), le = re.transform(Z);
                    z.uniform3f(N.centerScreenLoc, le.x, le.y, le.z);
                  } else
                    z.uniform3f(N.centerScreenLoc, 0, 0, 0);
                  z.uniform1i(N.sampLoc, 0), z.uniform1i(N.colorLoc, 1), z.uniform1f(N.blank, N.blankValue), z.uniform1f(N.bzero, N.bZero), z.uniform1f(N.bscale, N.bScale), z.uniform1f(N.minLoc, N.min), z.uniform1f(N.maxLoc, N.max), z.uniform1i(N.transparentBlackLoc, N.transparentBlack), z.uniform1i(N.containsBlanksLoc, N.containsBlanks), z.uniform1i(N.scalingLocation, N.scaleType), B.space || ee ? z.disable(r.WEBGL.DEPTH_TEST) : z.enable(r.WEBGL.DEPTH_TEST), z.disableVertexAttribArray(0), z.disableVertexAttribArray(1), z.disableVertexAttribArray(2), z.disableVertexAttribArray(3), z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), z.enableVertexAttribArray(N.vertLoc), z.enableVertexAttribArray(N.textureLoc), z.vertexAttribPointer(N.vertLoc, 3, r.WEBGL.FLOAT, !1, 20, 0), z.vertexAttribPointer(N.textureLoc, 2, r.WEBGL.FLOAT, !1, 20, 12), z.activeTexture(r.WEBGL.TEXTURE0), z.bindTexture(r.WEBGL.TEXTURE_2D, G), z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, k), z.enable(r.WEBGL.BLEND), ee ? z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE) : z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var $ = {};
              (0, t.registerType)("FitsShader", [N, $, null]);
              function S() {
              }
              S.vertLoc = 0, S.textureLoc = 0, S.initialized = !1, S._prog = null, S.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;
        uniform float opacity;

        void main(void) {
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;
                S._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(S._frag, k), D.compileShader(S._frag);
                var j = D.getShaderParameter(S._frag, r.WEBGL.COMPILE_STATUS);
                j || D.getShaderInfoLog(S._frag), S._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(S._vert, G), D.compileShader(S._vert);
                var ee = D.getShaderParameter(S._vert, r.WEBGL.COMPILE_STATUS);
                ee || D.getShaderInfoLog(S._vert), S._prog = D.createProgram(), D.attachShader(S._prog, S._vert), D.attachShader(S._prog, S._frag), D.linkProgram(S._prog), D.getProgramParameter(S._prog, r.WEBGL.LINK_STATUS), D.useProgram(S._prog), S.vertLoc = D.getAttribLocation(S._prog, "aVertexPosition"), S.textureLoc = D.getAttribLocation(S._prog, "aTextureCoord"), S.projMatLoc = D.getUniformLocation(S._prog, "uPMatrix"), S.mvMatLoc = D.getUniformLocation(S._prog, "uMVMatrix"), S.sampLoc = D.getUniformLocation(S._prog, "uSampler"), S.opacityLoc = D.getUniformLocation(S._prog, "opacity"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), S.initialized = !0;
              }, S.use = function(B, D, k, G, j, ee) {
                G == null && (G = o.Texture.getEmpty());
                var Z = B.gl;
                if (Z != null) {
                  S.initialized || S.init(B), Z.useProgram(S._prog);
                  var z = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  Z.uniform1f(S.opacityLoc, j), Z.uniformMatrix4fv(S.mvMatLoc, !1, z.floatArray()), Z.uniformMatrix4fv(S.projMatLoc, !1, B.get_projection().floatArray()), Z.uniform1i(S.sampLoc, 0), B.space || ee ? Z.disable(r.WEBGL.DEPTH_TEST) : Z.enable(r.WEBGL.DEPTH_TEST), Z.disableVertexAttribArray(0), Z.disableVertexAttribArray(1), Z.disableVertexAttribArray(2), Z.disableVertexAttribArray(3), Z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), Z.enableVertexAttribArray(S.vertLoc), Z.enableVertexAttribArray(S.textureLoc), Z.vertexAttribPointer(S.vertLoc, 3, r.WEBGL.FLOAT, !1, 20, 0), Z.vertexAttribPointer(S.textureLoc, 2, r.WEBGL.FLOAT, !1, 20, 12), Z.activeTexture(r.WEBGL.TEXTURE0), Z.bindTexture(r.WEBGL.TEXTURE_2D, G), Z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, k), Z.enable(r.WEBGL.BLEND), ee ? Z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE) : Z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var I = {};
              (0, t.registerType)("ImageShader", [S, I, null]);
              function x() {
              }
              x.vertLoc = 0, x.textureLoc = 0, x.initialized = !1, x._prog = null, x.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;
        uniform float opacity;

        void main(void) {
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;
                x._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(x._frag, k), D.compileShader(x._frag);
                var j = D.getShaderParameter(x._frag, r.WEBGL.COMPILE_STATUS);
                j || D.getShaderInfoLog(x._frag), x._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(x._vert, G), D.compileShader(x._vert);
                var ee = D.getShaderParameter(x._vert, r.WEBGL.COMPILE_STATUS);
                ee || D.getShaderInfoLog(x._vert), x._prog = D.createProgram(), D.attachShader(x._prog, x._vert), D.attachShader(x._prog, x._frag), D.linkProgram(x._prog), D.getProgramParameter(x._prog, r.WEBGL.LINK_STATUS), D.useProgram(x._prog), x.vertLoc = D.getAttribLocation(x._prog, "aVertexPosition"), x.textureLoc = D.getAttribLocation(x._prog, "aTextureCoord"), x.projMatLoc = D.getUniformLocation(x._prog, "uPMatrix"), x.mvMatLoc = D.getUniformLocation(x._prog, "uMVMatrix"), x.sampLoc = D.getUniformLocation(x._prog, "uSampler"), x.opacityLoc = D.getUniformLocation(x._prog, "opacity"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), x.initialized = !0;
              }, x.use = function(B, D, k, G, j, ee) {
                G == null && (G = o.Texture.getEmpty());
                var Z = B.gl;
                if (Z != null) {
                  x.initialized || x.init(B), Z.useProgram(x._prog);
                  var z = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  Z.uniform1f(x.opacityLoc, j), Z.uniformMatrix4fv(x.mvMatLoc, !1, z.floatArray()), Z.uniformMatrix4fv(x.projMatLoc, !1, B.get_projection().floatArray()), Z.uniform1i(x.sampLoc, 0), B.space || ee ? Z.disable(r.WEBGL.DEPTH_TEST) : Z.enable(r.WEBGL.DEPTH_TEST), Z.disableVertexAttribArray(0), Z.disableVertexAttribArray(1), Z.disableVertexAttribArray(2), Z.disableVertexAttribArray(3), Z.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), Z.enableVertexAttribArray(x.vertLoc), Z.enableVertexAttribArray(x.textureLoc), Z.vertexAttribPointer(x.vertLoc, 3, r.WEBGL.FLOAT, !1, 32, 0), Z.vertexAttribPointer(x.textureLoc, 2, r.WEBGL.FLOAT, !1, 32, 24), Z.activeTexture(r.WEBGL.TEXTURE0), Z.bindTexture(r.WEBGL.TEXTURE_2D, G), Z.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, k), Z.enable(r.WEBGL.BLEND), ee ? Z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE) : Z.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var P = {};
              (0, t.registerType)("ImageShader2", [x, P, null]);
              function d() {
              }
              d.vertLoc = 0, d.textureLoc = 0, d.colorLoc = 0, d.initialized = !1, d._prog = null, d.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void) {
            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;
        attribute lowp vec4 aColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
            vColor = aColor;
        }
    `;
                d._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(d._frag, k), D.compileShader(d._frag), D.getShaderParameter(d._frag, r.WEBGL.COMPILE_STATUS), d._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(d._vert, G), D.compileShader(d._vert), D.getShaderParameter(d._vert, r.WEBGL.COMPILE_STATUS), d._prog = D.createProgram(), D.attachShader(d._prog, d._vert), D.attachShader(d._prog, d._frag), D.linkProgram(d._prog), D.getProgramParameter(d._prog, r.WEBGL.LINK_STATUS), D.useProgram(d._prog), d.vertLoc = D.getAttribLocation(d._prog, "aVertexPosition"), d.textureLoc = D.getAttribLocation(d._prog, "aTextureCoord"), d.colorLoc = D.getAttribLocation(d._prog, "aColor"), d.projMatLoc = D.getUniformLocation(d._prog, "uPMatrix"), d.mvMatLoc = D.getUniformLocation(d._prog, "uMVMatrix"), d.sampLoc = D.getUniformLocation(d._prog, "uSampler"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), d.initialized = !0;
              }, d.use = function(B, D, k) {
                k == null && (k = o.Texture.getEmpty());
                var G = B.gl;
                if (G != null) {
                  d.initialized || d.init(B), G.useProgram(d._prog);
                  var j = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  G.uniformMatrix4fv(d.mvMatLoc, !1, j.floatArray()), G.uniformMatrix4fv(d.projMatLoc, !1, B.get_projection().floatArray()), G.uniform1i(d.sampLoc, 0), G.disable(r.WEBGL.DEPTH_TEST), G.disableVertexAttribArray(0), G.disableVertexAttribArray(1), G.disableVertexAttribArray(2), G.disableVertexAttribArray(3), G.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), G.enableVertexAttribArray(d.vertLoc), G.enableVertexAttribArray(d.textureLoc), G.enableVertexAttribArray(d.colorLoc), G.vertexAttribPointer(d.vertLoc, 3, r.WEBGL.FLOAT, !1, 36, 0), G.vertexAttribPointer(d.colorLoc, 4, r.WEBGL.FLOAT, !1, 36, 12), G.vertexAttribPointer(d.textureLoc, 2, r.WEBGL.FLOAT, !1, 36, 28), G.activeTexture(r.WEBGL.TEXTURE0), G.bindTexture(r.WEBGL.TEXTURE_2D, k), G.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), G.enable(r.WEBGL.BLEND), G.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var U = {};
              (0, t.registerType)("SpriteShader", [d, U, null]);
              function F() {
              }
              F.vertLoc = 0, F.textureLoc = 0, F.colorLoc = 0, F.initialized = !1, F._prog = null, F.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying lowp vec4 vColor;

        void main(void) {
            gl_FragColor =  vColor;
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute lowp vec4 aColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor = aColor;
        }
    `;
                F._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(F._frag, k), D.compileShader(F._frag), D.getShaderParameter(F._frag, r.WEBGL.COMPILE_STATUS), F._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(F._vert, G), D.compileShader(F._vert), D.getShaderParameter(F._vert, r.WEBGL.COMPILE_STATUS), F._prog = D.createProgram(), D.attachShader(F._prog, F._vert), D.attachShader(F._prog, F._frag), D.linkProgram(F._prog), D.getProgramParameter(F._prog, r.WEBGL.LINK_STATUS), D.useProgram(F._prog), F.vertLoc = D.getAttribLocation(F._prog, "aVertexPosition"), F.colorLoc = D.getAttribLocation(F._prog, "aColor"), F.projMatLoc = D.getUniformLocation(F._prog, "uPMatrix"), F.mvMatLoc = D.getUniformLocation(F._prog, "uMVMatrix"), D.disable(r.WEBGL.DEPTH_TEST), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), F.initialized = !0;
              }, F.use = function(B, D) {
                var k = B.gl;
                if (k != null) {
                  F.initialized || F.init(B), k.useProgram(F._prog);
                  var G = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  k.uniformMatrix4fv(F.mvMatLoc, !1, G.floatArray()), k.uniformMatrix4fv(F.projMatLoc, !1, B.get_projection().floatArray()), k.uniform1i(F.sampLoc, 0), k.disable(r.WEBGL.DEPTH_TEST), k.disableVertexAttribArray(0), k.disableVertexAttribArray(1), k.disableVertexAttribArray(2), k.disableVertexAttribArray(3), k.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), k.enableVertexAttribArray(F.vertLoc), k.enableVertexAttribArray(F.textureLoc), k.enableVertexAttribArray(F.colorLoc), k.vertexAttribPointer(F.vertLoc, 3, r.WEBGL.FLOAT, !1, 36, 0), k.vertexAttribPointer(F.colorLoc, 4, r.WEBGL.FLOAT, !1, 36, 12), k.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, null), k.enable(r.WEBGL.BLEND), k.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var X = {};
              (0, t.registerType)("ShapeSpriteShader", [F, X, null]);
              function Y() {
              }
              Y.vertLoc = 0, Y.textureLoc = 0, Y.initialized = !1, Y._prog = null, Y.init = function(B) {
                var D = B.gl;
                const k = `        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;

        void main(void) {
            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        }
    `, G = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;
                Y._frag = D.createShader(r.WEBGL.FRAGMENT_SHADER), D.shaderSource(Y._frag, k), D.compileShader(Y._frag), D.getShaderParameter(Y._frag, r.WEBGL.COMPILE_STATUS), Y._vert = D.createShader(r.WEBGL.VERTEX_SHADER), D.shaderSource(Y._vert, G), D.compileShader(Y._vert), D.getShaderParameter(Y._vert, r.WEBGL.COMPILE_STATUS), Y._prog = D.createProgram(), D.attachShader(Y._prog, Y._vert), D.attachShader(Y._prog, Y._frag), D.linkProgram(Y._prog), D.getProgramParameter(Y._prog, r.WEBGL.LINK_STATUS), D.useProgram(Y._prog), Y.vertLoc = D.getAttribLocation(Y._prog, "aVertexPosition"), Y.textureLoc = D.getAttribLocation(Y._prog, "aTextureCoord"), Y.projMatLoc = D.getUniformLocation(Y._prog, "uPMatrix"), Y.mvMatLoc = D.getUniformLocation(Y._prog, "uMVMatrix"), Y.sampLoc = D.getUniformLocation(Y._prog, "uSampler"), (0, _.set_tileUvMultiple)(1), (0, _.set_tileDemEnabled)(!0), D.enable(r.WEBGL.BLEND), D.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA), Y.initialized = !0;
              }, Y.use = function(B, D, k) {
                k == null && (k = o.Texture.getEmpty());
                var G = B.gl;
                if (G != null) {
                  Y.initialized || Y.init(B), G.useProgram(Y._prog);
                  var j = n.Matrix3d.multiplyMatrix(B.get_world(), B.get_view());
                  G.uniformMatrix4fv(Y.mvMatLoc, !1, j.floatArray()), G.uniformMatrix4fv(Y.projMatLoc, !1, B.get_projection().floatArray()), G.uniform1i(Y.sampLoc, 0), B.space ? G.disable(r.WEBGL.DEPTH_TEST) : G.enable(r.WEBGL.DEPTH_TEST), G.disableVertexAttribArray(0), G.disableVertexAttribArray(1), G.disableVertexAttribArray(2), G.disableVertexAttribArray(3), G.bindBuffer(r.WEBGL.ARRAY_BUFFER, D), G.enableVertexAttribArray(Y.vertLoc), G.enableVertexAttribArray(Y.textureLoc), G.vertexAttribPointer(Y.vertLoc, 3, r.WEBGL.FLOAT, !1, 20, 0), G.vertexAttribPointer(Y.textureLoc, 2, r.WEBGL.FLOAT, !1, 20, 12), G.activeTexture(r.WEBGL.TEXTURE0), G.bindTexture(r.WEBGL.TEXTURE_2D, k), G.enable(r.WEBGL.BLEND), G.blendFunc(r.WEBGL.SRC_ALPHA, r.WEBGL.ONE_MINUS_SRC_ALPHA);
                }
              };
              var M = {};
              (0, t.registerType)("TextShader", [Y, M, null]);
            }
          ),
          /***/
          "./esm/graphics/sprite2d.js": (
            /*!**********************************!*\
              !*** ./esm/graphics/sprite2d.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Sprite2d: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./shaders.js */
                "./esm/graphics/shaders.js"
              ), r = i(
                /*! ./webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              );
              function o() {
                this.vertCount = 0;
              }
              var c = {
                draw: function(l, g, a, b, V, y) {
                  this.vertexBuffer == null ? this.create(g) : this.update(g), b == null ? (_.ShapeSpriteShader.use(l, this.vertexBuffer), l.gl.drawArrays(V ? r.WEBGL.TRIANGLE_STRIP : r.WEBGL.TRIANGLES, 0, g.length)) : (_.SpriteShader.use(l, this.vertexBuffer, b != null ? b.texture2d : null), l.gl.drawArrays(V ? r.WEBGL.TRIANGLE_STRIP : r.WEBGL.TRIANGLES, 0, g.length));
                },
                create: function(l) {
                  this.vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var g = new Float32Array(l.length * 9), a = g, b = 0, V = n.ss.enumerate(l); V.moveNext(); ) {
                    var y = V.current;
                    a[b++] = y.position.x, a[b++] = y.position.y, a[b++] = y.position.z, a[b++] = y.color.r / 255, a[b++] = y.color.g / 255, a[b++] = y.color.b / 255, a[b++] = y.color.a / 255, a[b++] = y.tu, a[b++] = y.tv;
                  }
                  e.tilePrepDevice.bufferData(r.WEBGL.ARRAY_BUFFER, g, r.WEBGL.DYNAMIC_DRAW);
                },
                update: function(l) {
                  if (this.vertCount < l.length) {
                    e.tilePrepDevice.deleteBuffer(this.vertexBuffer), this.create(l);
                    return;
                  }
                  e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                  for (var g = new Float32Array(l.length * 9), a = g, b = 0, V = n.ss.enumerate(l); V.moveNext(); ) {
                    var y = V.current;
                    a[b++] = y.position.x, a[b++] = y.position.y, a[b++] = y.position.z, a[b++] = y.color.r / 255, a[b++] = y.color.g / 255, a[b++] = y.color.b / 255, a[b++] = y.color.a / 255, a[b++] = y.tu, a[b++] = y.tv;
                  }
                  e.tilePrepDevice.bufferSubData(r.WEBGL.ARRAY_BUFFER, 0, g);
                }
              };
              (0, t.registerType)("Sprite2d", [o, c, null]);
            }
          ),
          /***/
          "./esm/graphics/tessellator.js": (
            /*!*************************************!*\
              !*** ./esm/graphics/tessellator.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Tessellator: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              );
              function e() {
              }
              e.tesselateSimplePoly = function(r) {
                var o = [], c = new e();
                return c.process(r, o), o;
              };
              var _ = {
                _isLeftOfHalfSpace: function(r, o, c) {
                  r.normalize(), o.normalize();
                  var l = n.Vector3d.cross(r, o), g = n.Vector3d.dot(l, c);
                  return g > 0;
                },
                _insideTriangle: function(r, o, c, l) {
                  return !(!this._isLeftOfHalfSpace(r, o, l) || !this._isLeftOfHalfSpace(o, c, l) || !this._isLeftOfHalfSpace(c, r, l));
                },
                _canClipEar: function(r, o, c, l, g, a) {
                  var b, V = r[a[o]].copy(), y = r[a[c]].copy(), C = r[a[l]].copy(), E, v = n.Vector3d.subtractVectors(y, V);
                  v.normalize();
                  var m = n.Vector3d.subtractVectors(y, C);
                  m.normalize();
                  var L = n.Vector3d.cross(v, m), A = y.copy();
                  if (A.normalize(), n.Vector3d.dot(L, A) > 0)
                    return !1;
                  for (b = 0; b < g; b++)
                    if (!(b === o || b === c || b === l) && (E = r[a[b]].copy(), this._insideTriangle(V, y, C, E)))
                      return !1;
                  return !0;
                },
                process: function(r, o) {
                  var c = r.length;
                  if (r.length < 3)
                    return !1;
                  for (var l = new Array(r.length), g = 0; g < c; g++)
                    l[g] = g;
                  for (var a = c, b = 2 * a, V = 0, y = a - 1; a > 2; ) {
                    if (0 >= b--)
                      return !1;
                    var C = y;
                    a <= C && (C = 0), y = C + 1, a <= y && (y = 0);
                    var E = y + 1;
                    if (a <= E && (E = 0), this._canClipEar(r, C, y, E, a, l)) {
                      var v, m;
                      for (o.push(l[C]), o.push(l[y]), o.push(l[E]), V++, v = y, m = y + 1; m < a; v++, m++)
                        l[v] = l[m];
                      a--, b = 2 * a;
                    }
                  }
                  return !0;
                }
              };
              (0, t.registerType)("Tessellator", [e, _, null]);
            }
          ),
          /***/
          "./esm/graphics/texture.js": (
            /*!*********************************!*\
              !*** ./esm/graphics/texture.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Texture: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), r = i(
                /*! ./webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              );
              function o() {
                this.imageElement = null, this.texture2d = null, this._downloading = !1, this._ready = !1, this._errored = !1, this.URL = "";
              }
              o.empty = null, o.getEmpty = function() {
                return o.empty == null && (o.empty = e.tilePrepDevice.createTexture(), e.tilePrepDevice.bindTexture(r.WEBGL.TEXTURE_2D, o.empty), e.tilePrepDevice.texImage2D(r.WEBGL.TEXTURE_2D, 0, r.WEBGL.RGBA, 1, 1, 0, r.WEBGL.RGBA, r.WEBGL.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 0])), e.tilePrepDevice.bindTexture(r.WEBGL.TEXTURE_2D, null)), o.empty;
              }, o.fromUrl = function(l) {
                var g = new o();
                return g.load(l), g;
              }, o.isPowerOfTwo = function(l) {
                return !(l & l - 1);
              }, o.fitPowerOfTwo = function(l) {
                l--;
                for (var g = 1; g < 32; g <<= 1)
                  l = l | l >> g;
                return l + 1;
              };
              var c = {
                cleanUp: function() {
                  this.imageElement = null, e.tilePrepDevice.deleteTexture(this.texture2d);
                },
                dispose: function() {
                  this.cleanUp();
                },
                load: function(l) {
                  var g = this;
                  if (this.URL = l, !(typeof document > "u") && !this._downloading) {
                    this._downloading = !0, this.imageElement = document.createElement("img");
                    var a = this.imageElement;
                    this.imageElement.addEventListener("load", function(b) {
                      g._ready = !0, g._downloading = !1, g._errored = !1, g.makeTexture();
                    }, !1), this.imageElement.addEventListener("error", function(b) {
                      if (!g.imageElement.hasAttribute("proxyattempt")) {
                        g.imageElement.setAttribute("proxyattempt", !0);
                        var V = _.URLHelpers.singleton.activateProxy(g.URL);
                        if (V != null) {
                          g.imageElement.src = V;
                          return;
                        }
                      }
                      g._downloading = !1, g._ready = !1, g._errored = !0;
                    }, !1), a.crossOrigin = "anonymous", this.imageElement.src = this.URL;
                  }
                },
                makeTexture: function() {
                  if (e.tilePrepDevice != null)
                    try {
                      this.texture2d = e.tilePrepDevice.createTexture(), e.tilePrepDevice.bindTexture(r.WEBGL.TEXTURE_2D, this.texture2d);
                      var l = this.imageElement;
                      if ((!o.isPowerOfTwo(this.imageElement.height) | !o.isPowerOfTwo(this.imageElement.width)) === 1) {
                        var g = document.createElement("canvas");
                        g.height = o.fitPowerOfTwo(l.height), g.width = o.fitPowerOfTwo(l.width);
                        var a = g.getContext("2d");
                        a.drawImage(l, 0, 0, g.width, g.height), l = g;
                      }
                      e.tilePrepDevice.texParameteri(r.WEBGL.TEXTURE_2D, r.WEBGL.TEXTURE_WRAP_S, r.WEBGL.CLAMP_TO_EDGE), e.tilePrepDevice.texParameteri(r.WEBGL.TEXTURE_2D, r.WEBGL.TEXTURE_WRAP_T, r.WEBGL.CLAMP_TO_EDGE), e.tilePrepDevice.texImage2D(r.WEBGL.TEXTURE_2D, 0, r.WEBGL.RGBA, r.WEBGL.RGBA, r.WEBGL.UNSIGNED_BYTE, l), e.tilePrepDevice.texParameteri(r.WEBGL.TEXTURE_2D, r.WEBGL.TEXTURE_MIN_FILTER, r.WEBGL.LINEAR_MIPMAP_NEAREST), e.tilePrepDevice.generateMipmap(r.WEBGL.TEXTURE_2D), e.tilePrepDevice.bindTexture(r.WEBGL.TEXTURE_2D, null);
                    } catch {
                      this._errored = !0;
                    }
                }
              };
              (0, t.registerType)("Texture", [o, c, null, n.ss.IDisposable]);
            }
          ),
          /***/
          "./esm/graphics/webgl_constants.js": (
            /*!*****************************************!*\
              !*** ./esm/graphics/webgl_constants.js ***!
              \*****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                WEBGL: () => (
                  /* binding */
                  t
                )
                /* harmony export */
              });
              const t = {
                ACTIVE_ATTRIBUTE_MAX_LENGTH: 35722,
                ACTIVE_ATTRIBUTES: 35721,
                ACTIVE_TEXTURE: 34016,
                ACTIVE_UNIFORM_MAX_LENGTH: 35719,
                ACTIVE_UNIFORMS: 35718,
                ALIASED_LINE_WIDTH_RANGE: 33902,
                ALIASED_POINT_SIZE_RANGE: 33901,
                ALPHA: 6406,
                ALPHA_BITS: 3413,
                ALWAYS: 519,
                ARRAY_BUFFER: 34962,
                ARRAY_BUFFER_BINDING: 34964,
                ATTACHED_SHADERS: 35717,
                BACK: 1029,
                BLEND: 3042,
                BLEND_COLOR: 32773,
                BLEND_DST_ALPHA: 32970,
                BLEND_DST_RGB: 32968,
                BLEND_EQUATION: 32777,
                BLEND_EQUATION_ALPHA: 34877,
                BLEND_EQUATION_RGB: 32777,
                BLEND_SRC_ALPHA: 32971,
                BLEND_SRC_RGB: 32969,
                BLUE_BITS: 3412,
                BOOL: 35670,
                BOOL_VEC2: 35671,
                BOOL_VEC3: 35672,
                BOOL_VEC4: 35673,
                BUFFER_SIZE: 34660,
                BUFFER_USAGE: 34661,
                BYTE: 5120,
                CCW: 2305,
                CLAMP_TO_EDGE: 33071,
                COLOR_ATTACHMENT0: 36064,
                COLOR_BUFFER_BIT: 16384,
                COLOR_CLEAR_VALUE: 3106,
                COLOR_WRITEMASK: 3107,
                COMPILE_STATUS: 35713,
                COMPRESSED_TEXTURE_FORMATS: 34467,
                CONSTANT_ALPHA: 32771,
                CONSTANT_COLOR: 32769,
                CULL_FACE: 2884,
                CULL_FACE_MODE: 2885,
                CURRENT_PROGRAM: 35725,
                CURRENT_VERTEX_ATTRIB: 34342,
                CW: 2304,
                DECR: 7683,
                DECR_WRAP: 34056,
                DELETE_STATUS: 35712,
                DEPTH_ATTACHMENT: 36096,
                DEPTH_BITS: 3414,
                DEPTH_BUFFER_BIT: 256,
                DEPTH_CLEAR_VALUE: 2931,
                DEPTH_COMPONENT: 6402,
                DEPTH_COMPONENT16: 33189,
                DEPTH_FUNC: 2932,
                DEPTH_RANGE: 2928,
                DEPTH_STENCIL: 34041,
                DEPTH_STENCIL_ATTACHMENT: 33306,
                DEPTH_TEST: 2929,
                DEPTH_WRITEMASK: 2930,
                DITHER: 3024,
                DONT_CARE: 4352,
                DST_ALPHA: 772,
                DST_COLOR: 774,
                DYNAMIC_DRAW: 35048,
                ELEMENT_ARRAY_BUFFER: 34963,
                ELEMENT_ARRAY_BUFFER_BINDING: 34965,
                EQUAL: 514,
                EXTENSIONS: 7939,
                FASTEST: 4353,
                FLOAT: 5126,
                FLOAT_MAT2: 35674,
                FLOAT_MAT3: 35675,
                FLOAT_MAT4: 35676,
                FLOAT_VEC2: 35664,
                FLOAT_VEC3: 35665,
                FLOAT_VEC4: 35666,
                FRAGMENT_SHADER: 35632,
                FRAMEBUFFER: 36160,
                FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 36049,
                FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 36048,
                FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 36051,
                FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 36050,
                FRAMEBUFFER_BINDING: 36006,
                FRAMEBUFFER_COMPLETE: 36053,
                FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 36054,
                FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 36057,
                FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 36055,
                FRAMEBUFFER_UNSUPPORTED: 36061,
                FRONT: 1028,
                FRONT_AND_BACK: 1032,
                FRONT_FACE: 2886,
                FUNC_ADD: 32774,
                FUNC_REVERSE_SUBTRACT: 32779,
                FUNC_SUBTRACT: 32778,
                GENERATE_MIPMAP_HINT: 33170,
                GEQUAL: 518,
                GREATER: 516,
                GREEN_BITS: 3411,
                HIGH_FLOAT: 36338,
                HIGH_INT: 36341,
                IMPLEMENTATION_COLOR_READ_FORMAT: 35739,
                IMPLEMENTATION_COLOR_READ_TYPE: 35738,
                INCR: 7682,
                INCR_WRAP: 34055,
                INFO_LOG_LENGTH: 35716,
                INT: 5124,
                INT_VEC2: 35667,
                INT_VEC3: 35668,
                INT_VEC4: 35669,
                INVALID_ENUM: 1280,
                INVALID_FRAMEBUFFER_OPERATION: 1286,
                INVALID_OPERATION: 1282,
                INVALID_VALUE: 1281,
                INVERT: 5386,
                KEEP: 7680,
                LEQUAL: 515,
                LESS: 513,
                LINE_LOOP: 2,
                LINE_STRIP: 3,
                LINE_WIDTH: 2849,
                LINEAR: 9729,
                LINEAR_MIPMAP_LINEAR: 9987,
                LINEAR_MIPMAP_NEAREST: 9985,
                LINES: 1,
                LINK_STATUS: 35714,
                LOW_FLOAT: 36336,
                LOW_INT: 36339,
                LUMINANCE: 6409,
                LUMINANCE_ALPHA: 6410,
                MAX_COMBINED_TEXTURE_IMAGE_UNITS: 35661,
                MAX_CUBE_MAP_TEXTURE_SIZE: 34076,
                MAX_FRAGMENT_UNIFORM_VECTORS: 36349,
                MAX_RENDERBUFFER_SIZE: 34024,
                MAX_TEXTURE_IMAGE_UNITS: 34930,
                MAX_TEXTURE_SIZE: 3379,
                MAX_VARYING_VECTORS: 36348,
                MAX_VERTEX_ATTRIBS: 34921,
                MAX_VERTEX_TEXTURE_IMAGE_UNITS: 35660,
                MAX_VERTEX_UNIFORM_VECTORS: 36347,
                MAX_VIEWPORT_DIMS: 3386,
                MEDIUM_FLOAT: 36337,
                MEDIUM_INT: 36340,
                MIRRORED_REPEAT: 33648,
                NEAREST: 9728,
                NEAREST_MIPMAP_LINEAR: 9986,
                NEAREST_MIPMAP_NEAREST: 9984,
                NEVER: 512,
                NICEST: 4354,
                NO_ERROR: 0,
                NONE: 0,
                NOTEQUAL: 517,
                NUM_COMPRESSED_TEXTURE_FORMATS: 34466,
                ONE: 1,
                ONE_MINUS_CONSTANT_ALPHA: 32772,
                ONE_MINUS_CONSTANT_COLOR: 32770,
                ONE_MINUS_DST_ALPHA: 773,
                ONE_MINUS_DST_COLOR: 775,
                ONE_MINUS_SRC_ALPHA: 771,
                ONE_MINUS_SRC_COLOR: 769,
                OUT_OF_MEMORY: 1285,
                PACK_ALIGNMENT: 3333,
                POINTS: 0,
                POLYGON_OFFSET_FACTOR: 32824,
                POLYGON_OFFSET_FILL: 32823,
                POLYGON_OFFSET_UNITS: 10752,
                RED_BITS: 3410,
                RENDERBUFFER: 36161,
                RENDERBUFFER_ALPHA_SIZE: 36179,
                RENDERBUFFER_BINDING: 36007,
                RENDERBUFFER_BLUE_SIZE: 36178,
                RENDERBUFFER_DEPTH_SIZE: 36180,
                RENDERBUFFER_GREEN_SIZE: 36177,
                RENDERBUFFER_HEIGHT: 36163,
                RENDERBUFFER_INTERNAL_FORMAT: 36164,
                RENDERBUFFER_RED_SIZE: 36176,
                RENDERBUFFER_STENCIL_SIZE: 36181,
                RENDERBUFFER_WIDTH: 36162,
                RENDERER: 7937,
                REPEAT: 10497,
                REPLACE: 7681,
                RGB: 6407,
                RGB8: 32849,
                RGB5_A1: 32855,
                RGB565: 36194,
                RGBA: 6408,
                RGBA8: 32856,
                RGBA16I: 36232,
                RED_INTEGER: 36244,
                RED: 6403,
                R32F: 33326,
                R16I: 33331,
                RGBA4: 32854,
                SAMPLE_ALPHA_TO_COVERAGE: 32926,
                SAMPLE_BUFFERS: 32936,
                SAMPLE_COVERAGE: 32928,
                SAMPLE_COVERAGE_INVERT: 32939,
                SAMPLE_COVERAGE_VALUE: 32938,
                SAMPLER_2D: 35678,
                SAMPLER_CUBE: 35680,
                SAMPLES: 32937,
                SCISSOR_BOX: 3088,
                SCISSOR_TEST: 3089,
                SHADER_COMPILER: 36346,
                SHADER_SOURCE_LENGTH: 35720,
                SHADER_TYPE: 35663,
                SHADING_LANGUAGE_VERSION: 35724,
                SHORT: 5122,
                SRC_ALPHA: 770,
                SRC_ALPHA_SATURATE: 776,
                SRC_COLOR: 768,
                STATIC_DRAW: 35044,
                STENCIL_ATTACHMENT: 36128,
                STENCIL_BACK_FAIL: 34817,
                STENCIL_BACK_FUNC: 34816,
                STENCIL_BACK_PASS_DEPTH_FAIL: 34818,
                STENCIL_BACK_PASS_DEPTH_PASS: 34819,
                STENCIL_BACK_REF: 36003,
                STENCIL_BACK_VALUE_MASK: 36004,
                STENCIL_BACK_WRITEMASK: 36005,
                STENCIL_BITS: 3415,
                STENCIL_BUFFER_BIT: 1024,
                STENCIL_CLEAR_VALUE: 2961,
                STENCIL_FAIL: 2964,
                STENCIL_FUNC: 2962,
                STENCIL_INDEX: 6401,
                STENCIL_INDEX8: 36168,
                STENCIL_PASS_DEPTH_FAIL: 2965,
                STENCIL_PASS_DEPTH_PASS: 2966,
                STENCIL_REF: 2967,
                STENCIL_TEST: 2960,
                STENCIL_VALUE_MASK: 2963,
                STENCIL_WRITEMASK: 2968,
                STREAM_DRAW: 35040,
                SUBPIXEL_BITS: 3408,
                TEXTURE: 5890,
                TEXTURE_2D: 3553,
                TEXTURE_BINDING_2D: 32873,
                TEXTURE_BINDING_CUBE_MAP: 34068,
                TEXTURE_CUBE_MAP: 34067,
                TEXTURE_CUBE_MAP_NEGATIVE_X: 34070,
                TEXTURE_CUBE_MAP_NEGATIVE_Y: 34072,
                TEXTURE_CUBE_MAP_NEGATIVE_Z: 34074,
                TEXTURE_CUBE_MAP_POSITIVE_X: 34069,
                TEXTURE_CUBE_MAP_POSITIVE_Y: 34071,
                TEXTURE_CUBE_MAP_POSITIVE_Z: 34073,
                UNPACK_FLIP_Y_WEBGL: 37440,
                TEXTURE_MAG_FILTER: 10240,
                TEXTURE_MIN_FILTER: 10241,
                TEXTURE_WRAP_S: 10242,
                TEXTURE_WRAP_T: 10243,
                TEXTURE0: 33984,
                TEXTURE1: 33985,
                TEXTURE10: 33994,
                TEXTURE11: 33995,
                TEXTURE12: 33996,
                TEXTURE13: 33997,
                TEXTURE14: 33998,
                TEXTURE15: 33999,
                TEXTURE16: 34e3,
                TEXTURE17: 34001,
                TEXTURE18: 34002,
                TEXTURE19: 34003,
                TEXTURE2: 33986,
                TEXTURE20: 34004,
                TEXTURE21: 34005,
                TEXTURE22: 34006,
                TEXTURE23: 34007,
                TEXTURE24: 34008,
                TEXTURE25: 34009,
                TEXTURE26: 34010,
                TEXTURE27: 34011,
                TEXTURE28: 34012,
                TEXTURE29: 34013,
                TEXTURE3: 33987,
                TEXTURE30: 34014,
                TEXTURE31: 34015,
                TEXTURE4: 33988,
                TEXTURE5: 33989,
                TEXTURE6: 33990,
                TEXTURE7: 33991,
                TEXTURE8: 33992,
                TEXTURE9: 33993,
                TRIANGLE_FAN: 6,
                TRIANGLE_STRIP: 5,
                TRIANGLES: 4,
                UNPACK_ALIGNMENT: 3317,
                UNSIGNED_BYTE: 5121,
                UNSIGNED_INT: 5125,
                UNSIGNED_SHORT: 5123,
                UNSIGNED_SHORT_4_4_4_4: 32819,
                UNSIGNED_SHORT_5_5_5_1: 32820,
                UNSIGNED_SHORT_5_6_5: 33635,
                VALIDATE_STATUS: 35715,
                VENDOR: 7936,
                VERSION: 7938,
                VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 34975,
                VERTEX_ATTRIB_ARRAY_ENABLED: 34338,
                VERTEX_ATTRIB_ARRAY_NORMALIZED: 34922,
                VERTEX_ATTRIB_ARRAY_POINTER: 34373,
                VERTEX_ATTRIB_ARRAY_SIZE: 34339,
                VERTEX_ATTRIB_ARRAY_STRIDE: 34340,
                VERTEX_ATTRIB_ARRAY_TYPE: 34341,
                VERTEX_SHADER: 35633,
                VIEWPORT: 2978,
                ZERO: 0
              };
            }
          ),
          /***/
          "./esm/grids.js": (
            /*!**********************!*\
              !*** ./esm/grids.js ***!
              \**********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Grids: () => (
                  /* binding */
                  w
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./astrocalc/date.js */
                "./esm/astrocalc/date.js"
              ), o = i(
                /*! ./astrocalc/coordinate_transformation.js */
                "./esm/astrocalc/coordinate_transformation.js"
              ), c = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), l = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), g = i(
                /*! ./graphics/gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), a = i(
                /*! ./graphics/texture.js */
                "./esm/graphics/texture.js"
              ), b = i(
                /*! ./graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), V = i(
                /*! ./color.js */
                "./esm/color.js"
              ), y = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), C = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), E = i(
                /*! ./utilities/binary_reader.js */
                "./esm/utilities/binary_reader.js"
              ), v = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), m = i(
                /*! ./sky_text.js */
                "./esm/sky_text.js"
              ), L = i(
                /*! ./planets.js */
                "./esm/planets.js"
              ), A = i(
                /*! ./space_time_controller.js */
                "./esm/space_time_controller.js"
              ), K = i(
                /*! ./star.js */
                "./esm/star.js"
              ), T = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              );
              function w() {
              }
              w._galaxyImageIndexBuffer = null, w._galaxyImageTriangleCount = 0, w._milkyWayImage = null, w._starSprites = null, w._starCount = 0, w._starsDownloading = !1, w._stars = null, w._hipparcosIndex = {}, w._limitingMagnitude = 16, w._galaxyTextures = null, w._galaxyVertexCounts = null, w._largeSet = !0, w._cosmosReady = !1, w._cosmos = null, w._downloadingGalaxy = !1, w._eclipticCount = 0, w._eclipticYear = 0, w._monthDays = [31, 28.2421, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], w._monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], w._eclipticTextYear = 0, w._createGalaxyImage = function(R) {
                w._milkyWayImage == null && (w._milkyWayImage = a.Texture.fromUrl(e.URLHelpers.singleton.engineAssetUrl("milkywaybar.jpg")));
                var O = 50, W, N, $ = 0, S = 64, I = -64, x = -64, P = 64;
                w._galaxyImageVertexBuffer = new g.PositionTextureVertexBuffer((O + 1) * (O + 1));
                var d = w._galaxyImageVertexBuffer.lock(), U, F, X = I - S, Y = P - x, M = 608e5, B = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()) / 180 * Math.PI, D, k = 1 / O, G = 1 / O;
                for (F = 0; F <= O; F++)
                  for (F !== O ? W = I - G * X * F : W = S, U = 0; U <= O; U++)
                    U !== O ? N = x + k * Y * U : N = P, $ = F * (O + 1) + U, D = _.Vector3d.create(N * M, 0, (W - 28) * M), D.rotateY(1.1833333333333333 * Math.PI), D.rotateZ(-0.3492875 * Math.PI), D.rotateY(-1.0714417127777778 * Math.PI), D.rotateX(B), d[$] = _.PositionTexture.createPosRaw(D, 1 - U * k, F * G);
                w._galaxyImageVertexBuffer.unlock(), w._galaxyImageTriangleCount = O * O * 2;
                var j = new Uint16Array(O * O * 6), ee = j;
                for (F = 0; F < O; F++)
                  for (U = 0; U < O; U++)
                    $ = F * O * 6 + 6 * U, ee[$] = F * (O + 1) + U, ee[$ + 2] = (F + 1) * (O + 1) + U, ee[$ + 1] = F * (O + 1) + (U + 1), ee[$ + 3] = F * (O + 1) + (U + 1), ee[$ + 5] = (F + 1) * (O + 1) + U, ee[$ + 4] = (F + 1) * (O + 1) + (U + 1);
                w._galaxyImageIndexBuffer = C.tilePrepDevice.createBuffer(), C.tilePrepDevice.bindBuffer(c.WEBGL.ELEMENT_ARRAY_BUFFER, w._galaxyImageIndexBuffer), C.tilePrepDevice.bufferData(c.WEBGL.ELEMENT_ARRAY_BUFFER, j, c.WEBGL.STATIC_DRAW);
              }, w.drawGalaxyImage = function(R, O) {
                w._galaxyImageIndexBuffer == null && w._createGalaxyImage(R), R.viewCamera.zoom, b.ImageShader.use(R, w._galaxyImageVertexBuffer.vertexBuffer, w._galaxyImageIndexBuffer, w._milkyWayImage.texture2d, O, !0), R.gl.drawElements(c.WEBGL.TRIANGLES, w._galaxyImageTriangleCount * 3, c.WEBGL.UNSIGNED_SHORT, 0);
              }, w.drawStars3D = function(R, O) {
                var W = R.viewCamera.zoom, N = Math.max(Math.min(255, (Math.log(W) - 15.5) * 40.8), 0), $ = Math.min(255, Math.max(0, t.ss.truncate(N)));
                $ > 254 || ($ = (255 - $) * O, w._starSprites == null && w.initStarVertexBuffer(R), w._starSprites != null && w._starSprites.draw(R, $ / 255, !1));
              }, w.initStarVertexBuffer = function(R) {
                if (!w._starsDownloading && !y.freestandingMode && (w.getStarFile(e.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=hipparcos")), w._starsDownloading = !0), w._starSprites == null && w._starCount > 0) {
                  var O = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()) / 180 * Math.PI, W = w._stars.length;
                  w._starCount = W, w._starSprites = new l.PointList(R), w._starSprites.depthBuffered = !1, w._starSprites.showFarSide = !0;
                  for (var N = t.ss.enumerate(w._stars); N.moveNext(); ) {
                    var $ = N.current, S = v.Coordinates.raDecTo3dAu($.RA, $.dec, $.distance);
                    S.rotateX(O), $.position = S;
                    var I = 12e5 / Math.pow(1.6, $.absoluteMagnitude);
                    w._starSprites.addPoint(S, $.col, new l.Dates(0, 1), I * 100);
                  }
                }
              }, w.initializeStarDB = function(R) {
                if (w._stars == null && w._stars == null) {
                  w._stars = [];
                  for (var O = R.split(`\r
`), W, N = t.ss.enumerate(O); N.moveNext(); ) {
                    var $ = N.current, S = $;
                    W = new K.Star(S), W.magnitude < w._limitingMagnitude && W.par > 1e-3 && (w._stars.push(W), w._hipparcosIndex[W.id] = W);
                  }
                  w._starCount = w._stars.length;
                }
              }, w.getStarFile = function(R) {
                w._webFileStar = new T.WebFile(R), w._webFileStar.onStateChange = w.starFileStateChange, w._webFileStar.send();
              }, w.starFileStateChange = function() {
                w._webFileStar.get_state() === 2 ? alert(w._webFileStar.get_message()) : w._webFileStar.get_state() === 1 && w.initializeStarDB(w._webFileStar.getText());
              }, w.getGalaxyFile = function(R) {
                w._webFileGalaxy = new T.WebFile(R), w._webFileGalaxy.responseType = "blob", w._webFileGalaxy.onStateChange = w.galaxyFileStateChange, w._webFileGalaxy.send();
              }, w.galaxyFileStateChange = function() {
                if (w._webFileGalaxy.get_state() === 2)
                  alert(w._webFileGalaxy.get_message());
                else if (w._webFileGalaxy.get_state() === 1) {
                  var R = w._webFileGalaxy.getBlob(), O = new FileReader();
                  O.onloadend = function(W) {
                    var N = new E.BinaryReader(new Uint8Array(O.result));
                    w.initializeCosmos(N);
                  }, O.readAsArrayBuffer(R);
                }
              }, w.drawCosmos3D = function(R, O) {
                R.gl;
                var W = R.viewCamera.zoom, N = (Math.log(Math.max(1, W)) / Math.log(4) - 15.5) * 90, $ = Math.min(255, Math.max(0, t.ss.truncate(N)));
                if (!($ < 3)) {
                  if (w.initCosmosVertexBuffer(), w._galaxyTextures == null && w._largeSet) {
                    w._galaxyTextures = new Array(256);
                    for (var S = 0; S < 256; S++) {
                      for (var I = S.toString(); I.length < 4; )
                        I = "0" + I;
                      var x = t.ss.format(e.URLHelpers.singleton.engineAssetUrl("galimg/gal_{0}.jpg"), I);
                      w._galaxyTextures[S] = a.Texture.fromUrl(x);
                    }
                  }
                  if (w._cosmosReady)
                    for (var P = 256, S = 0; S < P; S++)
                      w._cosmosSprites[S].drawTextured(R, w._galaxyTextures[S].texture2d, $ * O / 255);
                }
              }, w.initCosmosVertexBuffer = function() {
                w._cosmosSprites == null && w._downloadCosmosFile();
              }, w._createCosmosVertexBuffer = function(R) {
                C.tilePrepDevice;
                var O = 256;
                if (w._cosmosSprites != null)
                  for (var W = 0; W < O; W++)
                    w._cosmosSprites[W] != null && (w._cosmosSprites[W] = null);
                w._cosmosSprites = null;
                var N = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()) / 180 * Math.PI;
                w._cosmosSprites = new Array(O);
                for (var $ = new Array(O), S = 0; S < O; S++)
                  w._galaxyVertexCounts[S], w._cosmosSprites[S] = new l.PointList(R), w._cosmosSprites[S].depthBuffered = !1, w._cosmosSprites[S].showFarSide = !0, $[S] = 0;
                for (var I = t.ss.enumerate(w._cosmos); I.moveNext(); ) {
                  var x = I.current, P = x.eTypeBucket;
                  $[P];
                  var d = v.Coordinates.raDecTo3dAu(x.RA, x.dec, x.distance * 206264.806 * 1e6 / 0.73);
                  d.rotateX(N), x.position = d, w._cosmosSprites[P].addPoint(d, V.Colors.get_white(), new l.Dates(0, 1), 1e9 * x.size * 100), $[P]++;
                }
                w._cosmosReady = !0;
              }, w.initializeCosmos = function(R) {
                if (w._cosmos == null) {
                  if (w._galaxyVertexCounts = new Array(w._largeSet ? 256 : 20), w._cosmos == null) {
                    w._cosmos = [];
                    var O;
                    try {
                      for (var W = 0; R.get_position() < R.get_length(); )
                        O = new K.Galaxy(R), w._cosmos.push(O), w._galaxyVertexCounts[O.eTypeBucket]++, W++;
                    } catch {
                    }
                    R.close();
                  }
                  w._createCosmosVertexBuffer(C.globalRenderContext);
                }
              }, w._downloadCosmosFile = function() {
                return !w._downloadingGalaxy && !y.freestandingMode && (w.getGalaxyFile(e.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=cosmosnewbin")), w._downloadingGalaxy = !0), !1;
              }, w.drawEquitorialGrid = function(R, O, W) {
                if (w._equLineList == null) {
                  w._equLineList = new l.SimpleLineList(), w._equLineList.set_depthBuffered(!1);
                  for (var N = 0; N < 24; N++)
                    for (var $ = -80; $ < 80; $ += 2)
                      w._equLineList.addLine(v.Coordinates.raDecTo3dAu(N, $, 1), v.Coordinates.raDecTo3dAu(N, $ + 2, 1));
                  for (var $ = -80; $ <= 80; $ += 10)
                    for (var N = 0; N < 23.8; N += 0.2)
                      w._equLineList.addLine(v.Coordinates.raDecTo3dAu(N, $, 1), v.Coordinates.raDecTo3dAu(N + 0.2, $, 1));
                  for (var S = 0, I = 0; I < 24; I += 0.25) {
                    var $ = 0.5;
                    switch (S % 4) {
                      case 0:
                        S++;
                        continue;
                      case 3:
                      case 1:
                        $ = 0.25;
                        break;
                    }
                    S++, w._equLineList.addLine(v.Coordinates.raDecTo3dAu(I, $, 1), v.Coordinates.raDecTo3dAu(I, -$, 1));
                  }
                  S = 0;
                  for (var I = 0; I < 24; I += 3) {
                    S = 0;
                    for (var $ = -80; $ <= 80; $ += 1) {
                      var x = 0.016666666666666666;
                      switch (S % 10) {
                        case 0:
                          S++;
                          continue;
                        case 5:
                          x = 0.03333333333333333;
                          break;
                      }
                      S++, w._equLineList.addLine(v.Coordinates.raDecTo3dAu(I + x, $, 1), v.Coordinates.raDecTo3dAu(I - x, $, 1));
                    }
                  }
                }
                return w._equLineList.drawLines(R, O, W), !0;
              }, w.drawEquitorialGridText = function(R, O, W) {
                return w._makeEquitorialGridText(), w._equTextBatch.draw(R, O, W), !0;
              }, w._makeEquitorialGridText = function() {
                if (w._equTextBatch == null) {
                  w._equTextBatch = new m.Text3dBatch(30);
                  for (var R = 0; R < 24; R++) {
                    var O = R.toString() + " hr";
                    R < 10 && (O = "  " + R.toString() + " hr"), w._equTextBatch.add(new m.Text3d(v.Coordinates.raDecTo3dAu(R + 5e-3, 0.4, 1), v.Coordinates.raDecTo3dAu(R + 5e-3, 0.5, 1), O, 45, 18e-5));
                  }
                  for (var R = 0; R < 24; R += 3)
                    for (var W = -80; W <= 80; W += 10)
                      if (W) {
                        var O = W.toString();
                        W > 0 ? (O = "  +" + W.toString(), w._equTextBatch.add(new m.Text3d(v.Coordinates.raDecTo3dAu(R, W - 0.4, 1), v.Coordinates.raDecTo3dAu(R, W - 0.3, 1), O, 45, 18e-5))) : (O = "  - " + O.substr(1), w._equTextBatch.add(new m.Text3d(v.Coordinates.raDecTo3dAu(R, W + 0.4, 1), v.Coordinates.raDecTo3dAu(R, W + 0.5, 1), O, 45, 18e-5)));
                      }
                }
              }, w.drawEcliptic = function(R, O, W) {
                var N = A.SpaceTimeController.get_now().getUTCFullYear();
                if (w._eclipticOverviewLineList == null || N !== w._eclipticYear) {
                  w._eclipticOverviewLineList != null && (w._eclipticOverviewLineList.clear(), w._eclipticOverviewLineList = null), w._eclipticYear = N;
                  var $ = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()), S = _.Matrix3d._rotationX(-$ / 360 * (Math.PI * 2)), I = 365.25;
                  r.DT.isLeap(N, !0) ? (w._monthDays[1] = 29, I = 366) : (w._monthDays[1] = 28, I = 365), 2 * t.ss.truncate(I), w._eclipticCount = t.ss.truncate(I);
                  var x = A.SpaceTimeController.utcToJulian(new Date(N, 0, 1, 12, 0, 0)), P = 0;
                  w._eclipticOverviewLineList = new l.SimpleLineList(), w._eclipticOverviewLineList.set_depthBuffered(!1);
                  for (var d = 0; d < 12; d++) {
                    for (var U = t.ss.truncate(w._monthDays[d]), F = 0; F < U; F++) {
                      var X = L.Planets.getPlanetLocationJD("Sun", x), Y = o.CT.eq2Ec(X.RA, X.dec, $);
                      P = Y.x;
                      var M = 5e-3;
                      F || (M = 0.01);
                      var B = P;
                      w._eclipticOverviewLineList.addLine(_.Vector3d._transformCoordinate(_.Vector3d.create(Math.cos(B * Math.PI * 2 / 360), M, Math.sin(B * Math.PI * 2 / 360)), S), _.Vector3d._transformCoordinate(_.Vector3d.create(Math.cos(B * Math.PI * 2 / 360), -M, Math.sin(B * Math.PI * 2 / 360)), S)), x += 1;
                    }
                    P += w._monthDays[d];
                  }
                }
                return w._eclipticOverviewLineList.drawLines(R, O, W), !0;
              }, w.drawEclipticText = function(R, O, W) {
                return w._makeEclipticText(), w._eclipOvTextBatch.draw(R, O, W), !0;
              }, w._makeEclipticText = function() {
                var R = A.SpaceTimeController.get_now().getUTCFullYear();
                if (w._eclipOvTextBatch == null) {
                  w._eclipOvTextBatch = new m.Text3dBatch(80), w._eclipticTextYear = R;
                  var O = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()), W = _.Matrix3d._rotationX(-O / 360 * (Math.PI * 2)), N = 365.25;
                  r.DT.isLeap(R, !0) ? (w._monthDays[1] = 29, N = 366) : (w._monthDays[1] = 28, N = 365), 2 * t.ss.truncate(N), w._eclipticCount = t.ss.truncate(N);
                  for (var $ = A.SpaceTimeController.utcToJulian(new Date(R, 0, 1, 12, 0, 0)), S = 0, I = 0; I < 12; I++) {
                    for (var x = t.ss.truncate(w._monthDays[I]), P = 0; P < x; P++) {
                      var d = L.Planets.getPlanetLocationJD("Sun", $), U = o.CT.eq2Ec(d.RA, d.dec, O);
                      S = U.x;
                      var F = S;
                      if (P === Math.floor(x / 2)) {
                        var X = _.Vector3d._transformCoordinate(_.Vector3d.create(Math.cos(F * Math.PI * 2 / 360), 0.025, Math.sin(F * Math.PI * 2 / 360)), W), Y = _.Vector3d._transformCoordinate(_.Vector3d.create(Math.cos(F * Math.PI * 2 / 360), 0.045, Math.sin(F * Math.PI * 2 / 360)), W);
                        Y.subtract(X), Y.normalize(), w._eclipOvTextBatch.add(new m.Text3d(X, Y, w._monthNames[I], 80, 159375e-9));
                      }
                      $ += 1;
                    }
                    S += w._monthDays[I];
                  }
                }
              }, w.drawPrecessionChart = function(R, O, W) {
                return w._makePrecessionChart(), w._precTextBatch.draw(R, O, W), w._precLineList.drawLines(R, O, W), !0;
              }, w._makePrecessionChart = function() {
                var R = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()), O = _.Matrix3d._rotationX(R / 360 * (Math.PI * 2));
                if (V.Colors.get_white(), w._precLineList == null) {
                  w._precLineList = new l.SimpleLineList(), w._precLineList.set_depthBuffered(!1);
                  for (var W = 0; W < 360; W++) {
                    var N = 90 - R;
                    w._precLineList.addLine(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, N, 1), O), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu((W + 1) / 15, N, 1), O));
                  }
                  for (var W = -12e3; W < 13e3; W += 2e3) {
                    var N = 90 - R, $ = -((W - 2e3) / 25772 * 24) - 6;
                    w._precLineList.addLine(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu($, N - 0.5, 1), O), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu($, N + 0.5, 1), O));
                  }
                }
                if (w._precTextBatch == null) {
                  w._precTextBatch = new m.Text3dBatch(50);
                  for (var W = -12e3; W < 13e3; W += 2e3) {
                    var N = 90 - R + 3, $ = -((W - 2e3) / 25772 * 24) - 6, S = W.toString();
                    W ? W < 0 ? S = "  " + Math.abs(W).toString() + " BCE" : S = Math.abs(W).toString() + " CE" : (N = 90 - R + 2, S = "1 CE"), S.length === 9 && (S = "   " + S), w._precTextBatch.add(new m.Text3d(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu($, N, 1), O), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu($ + 0.01, N, 1), O), S, 75, 15e-5));
                  }
                }
              }, w.drawAltAzGrid = function(R, O, W) {
                var N = new v.Coordinates(0, 0), $ = v.Coordinates.horizonToEquitorial(N, A.SpaceTimeController.get_location(), A.SpaceTimeController.get_now()), S = -(($.get_RA() + 6) / 24 * (Math.PI * 2)), I = -($.get_dec() / 360 * (Math.PI * 2));
                v.Coordinates.formatDMS($.get_RA());
                var x = _.Matrix3d._rotationY(-S);
                if (x._multiply(_.Matrix3d._rotationX(I)), x.invert(), w._altAzLineList == null) {
                  w._altAzLineList = new l.SimpleLineList(), w._altAzLineList.set_depthBuffered(!1);
                  for (var P = 0; P < 360; P += 10)
                    for (var d = -80; d < 80; d += 2)
                      w._altAzLineList.addLine(v.Coordinates.raDecTo3dAu(P / 15, d, 1), v.Coordinates.raDecTo3dAu(P / 15, d + 2, 1));
                  for (var d = -80; d <= 80; d += 10)
                    for (var P = 0; P < 360; P += 5)
                      w._altAzLineList.addLine(v.Coordinates.raDecTo3dAu(P / 15, d, 1), v.Coordinates.raDecTo3dAu((P + 5) / 15, d, 1));
                  for (var U = 0, P = 0; P < 360; P += 1) {
                    var d = 0.25;
                    switch (U % 10) {
                      case 0:
                        U++;
                        continue;
                      case 5:
                        d = 0.5;
                        break;
                    }
                    U++, w._altAzLineList.addLine(v.Coordinates.raDecTo3dAu(P / 15, d, 1), v.Coordinates.raDecTo3dAu(P / 15, -d, 1));
                  }
                  U = 0;
                  for (var P = 0; P < 360; P += 90) {
                    U = 0;
                    for (var d = -80; d <= 80; d += 1) {
                      var F = 0.25;
                      switch (U % 10) {
                        case 0:
                          U++;
                          continue;
                        case 5:
                          F = 0.5;
                          break;
                      }
                      U++, w._altAzLineList.addLine(v.Coordinates.raDecTo3dAu((P + F) / 15, d, 1), v.Coordinates.raDecTo3dAu((P - F) / 15, d, 1));
                    }
                  }
                }
                var X = R.get_world().clone(), Y = R.get_worldBase().clone();
                return R.set_worldBase(_.Matrix3d.multiplyMatrix(x, R.get_world())), R.set_world(R.get_worldBase().clone()), R.makeFrustum(), w._altAzLineList.viewTransform = _.Matrix3d.invertMatrix(x), w._altAzLineList.drawLines(R, O, W), R.set_worldBase(Y), R.set_world(X), R.makeFrustum(), !0;
              }, w.drawAltAzGridText = function(R, O, W) {
                var N = new v.Coordinates(0, 0), $ = v.Coordinates.horizonToEquitorial(N, A.SpaceTimeController.get_location(), A.SpaceTimeController.get_now()), S = -(($.get_RA() - 6) / 24 * (Math.PI * 2)), I = -($.get_dec() / 360 * (Math.PI * 2));
                v.Coordinates.formatDMS($.get_RA());
                var x = _.Matrix3d._rotationY(-S - Math.PI);
                x._multiply(_.Matrix3d._rotationX(I)), x.invert(), w._makeAltAzGridText();
                var P = R.get_world().clone(), d = R.get_worldBase().clone();
                return R.set_worldBase(_.Matrix3d.multiplyMatrix(x, R.get_world())), R.set_world(R.get_worldBase().clone()), R.makeFrustum(), w._altAzTextBatch.viewTransform = _.Matrix3d.invertMatrix(x), w._altAzTextBatch.draw(R, O, W), R.set_worldBase(d), R.set_world(P), R.makeFrustum(), !0;
              }, w._makeAltAzGridText = function() {
                if (V.Colors.get_white(), w._altAzTextBatch == null) {
                  w._altAzTextBatch = new m.Text3dBatch(30);
                  for (var R = 0; R < 360; R += 10) {
                    var O = "       " + R.toString();
                    R < 10 ? O = "   " + R.toString() : R < 100 && (O = "     " + R.toString());
                    var W = 360 - R;
                    w._altAzTextBatch.add(new m.Text3d(v.Coordinates.raDecTo3dAu(W / 15 - 6, 0.4, 1), v.Coordinates.raDecTo3dAu(W / 15 - 6, 0.5, 1), O, 75, 18e-5));
                  }
                  for (var R = 0; R < 360; R += 90)
                    for (var N = -80; N <= 80; N += 10)
                      if (N) {
                        var O = N.toString();
                        N > 0 ? (O = "  +" + N.toString(), w._altAzTextBatch.add(new m.Text3d(v.Coordinates.raDecTo3dAu(R / 15, N - 0.4, 1), v.Coordinates.raDecTo3dAu(R / 15, N - 0.3, 1), O, 75, 18e-5))) : (O = "  - " + O.substr(1), w._altAzTextBatch.add(new m.Text3d(v.Coordinates.raDecTo3dAu(R / 15, N + 0.4, 1), v.Coordinates.raDecTo3dAu(R / 15, N + 0.5, 1), O, 75, 18e-5)));
                      }
                }
              }, w.drawEclipticGrid = function(R, O, W) {
                if (w._eclipticLineList == null) {
                  w._eclipticLineList = new l.SimpleLineList(), w._eclipticLineList.set_depthBuffered(!1);
                  for (var N = v.Coordinates.meanObliquityOfEcliptic(2451545), $ = _.Matrix3d._rotationX(-N / 360 * (Math.PI * 2)), S = 0; S < 360; S += 10)
                    for (var I = -80; I < 80; I += 2)
                      w._eclipticLineList.addLine(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(S / 15, I, 1), $), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(S / 15, I + 2, 1), $));
                  for (var I = -80; I <= 80; I += 10)
                    for (var S = 0; S < 360; S += 5)
                      w._eclipticLineList.addLine(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(S / 15, I, 1), $), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu((S + 5) / 15, I, 1), $));
                  for (var x = 0, S = 0; S < 360; S += 1) {
                    var I = 0.25;
                    switch (x % 10) {
                      case 0:
                        x++;
                        continue;
                      case 5:
                        I = 0.5;
                        break;
                    }
                    x++, w._eclipticLineList.addLine(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(S / 15, I, 1), $), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(S / 15, -I, 1), $));
                  }
                  x = 0;
                  for (var S = 0; S < 360; S += 90) {
                    x = 0;
                    for (var I = -80; I <= 80; I += 1) {
                      var P = 0.25;
                      switch (x % 10) {
                        case 0:
                          x++;
                          continue;
                        case 5:
                          P = 0.5;
                          break;
                      }
                      x++, w._eclipticLineList.addLine(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu((S + P) / 15, I, 1), $), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu((S - P) / 15, I, 1), $));
                    }
                  }
                }
                return w._eclipticLineList.drawLines(R, O, W), !0;
              }, w.drawEclipticGridText = function(R, O, W) {
                return w._makeEclipticGridText(), w._eclipticTextBatch.draw(R, O, W), !0;
              }, w._makeEclipticGridText = function() {
                V.Colors.get_white();
                var R = v.Coordinates.meanObliquityOfEcliptic(A.SpaceTimeController.get_jNow()), O = _.Matrix3d._rotationX(-R / 360 * (Math.PI * 2));
                if (w._eclipticTextBatch == null) {
                  w._eclipticTextBatch = new m.Text3dBatch(30);
                  for (var W = 0; W < 360; W += 10) {
                    var N = "       " + W.toString();
                    W < 10 ? N = "   " + W.toString() : W < 100 && (N = "     " + W.toString()), w._eclipticTextBatch.add(new m.Text3d(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, 0.4, 1), O), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, 0.5, 1), O), N, 75, 18e-5));
                  }
                  for (var W = 0; W < 360; W += 90)
                    for (var $ = -80; $ <= 80; $ += 10)
                      if ($) {
                        var N = $.toString();
                        $ > 0 ? (N = "  +" + $.toString(), w._eclipticTextBatch.add(new m.Text3d(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, $ - 0.4, 1), O), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, $ - 0.3, 1), O), N, 75, 18e-5))) : (N = "  - " + N.substr(1), w._eclipticTextBatch.add(new m.Text3d(_.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, $ + 0.4, 1), O), _.Vector3d._transformCoordinate(v.Coordinates.raDecTo3dAu(W / 15, $ + 0.5, 1), O), N, 75, 18e-5)));
                      }
                }
              }, w.drawGalacticGrid = function(R, O, W) {
                if (w._galLineList == null) {
                  w._galLineList = new l.SimpleLineList(), w._galLineList.set_depthBuffered(!1);
                  for (var N = 0; N < 360; N += 10)
                    for (var $ = -80; $ < 80; $ += 2)
                      w._galLineList.addLine(v.Coordinates.galacticTo3dDouble(N, $), v.Coordinates.galacticTo3dDouble(N, $ + 2));
                  for (var $ = -80; $ <= 80; $ += 10)
                    for (var N = 0; N < 360; N += 5)
                      w._galLineList.addLine(v.Coordinates.galacticTo3dDouble(N, $), v.Coordinates.galacticTo3dDouble(N + 5, $));
                  for (var S = 0, N = 0; N < 360; N += 1) {
                    var $ = 0.25;
                    switch (S % 10) {
                      case 0:
                        S++;
                        continue;
                      case 5:
                        $ = 0.5;
                        break;
                    }
                    S++, w._galLineList.addLine(v.Coordinates.galacticTo3dDouble(N, $), v.Coordinates.galacticTo3dDouble(N, -$));
                  }
                  S = 0;
                  for (var N = 0; N < 360; N += 90) {
                    S = 0;
                    for (var $ = -80; $ <= 80; $ += 1) {
                      var I = 0.25;
                      switch (S % 10) {
                        case 0:
                          S++;
                          continue;
                        case 5:
                          I = 0.5;
                          break;
                      }
                      S++, w._galLineList.addLine(v.Coordinates.galacticTo3dDouble(N + I, $), v.Coordinates.galacticTo3dDouble(N - I, $));
                    }
                  }
                }
                return w._galLineList.drawLines(R, O, W), !0;
              }, w.drawGalacticGridText = function(R, O, W) {
                return w._makeGalacticGridText(), w._galTextBatch.draw(R, O, W), !0;
              }, w._makeGalacticGridText = function() {
                if (w._galTextBatch == null) {
                  w._galTextBatch = new m.Text3dBatch(30);
                  for (var R = 0; R < 360; R += 10) {
                    var O = "       " + R.toString();
                    R < 10 ? O = "   " + R.toString() : R < 100 && (O = "     " + R.toString()), w._galTextBatch.add(new m.Text3d(v.Coordinates.galacticTo3dDouble(R, 0.4), v.Coordinates.galacticTo3dDouble(R, 0.5), O, 75, 18e-5));
                  }
                  for (var R = 0; R < 360; R += 90)
                    for (var W = -80; W <= 80; W += 10)
                      if (W) {
                        var O = W.toString();
                        W > 0 ? (O = "  +" + W.toString(), w._galTextBatch.add(new m.Text3d(v.Coordinates.galacticTo3dDouble(R, W - 0.4), v.Coordinates.galacticTo3dDouble(R, W - 0.3), O, 75, 18e-5))) : (O = "  - " + O.substr(1), w._galTextBatch.add(new m.Text3d(v.Coordinates.galacticTo3dDouble(R, W + 0.4), v.Coordinates.galacticTo3dDouble(R, W + 0.5), O, 75, 18e-5)));
                      }
                }
              }, w.drawPlanetGrid = function(R, O, W) {
                if (w._planetLineList == null) {
                  w._planetLineList = new l.SimpleLineList(), w._planetLineList.set_depthBuffered(!0);
                  for (var N = 0; N < 360; N += 10)
                    for (var $ = -80; $ < 80; $ += 2)
                      w._planetLineList.addLine(v.Coordinates.geoTo3dDouble($, N), v.Coordinates.geoTo3dDouble($ + 2, N));
                  for (var $ = -80; $ <= 80; $ += 10)
                    for (var S = 0; S < 360; S += 5)
                      w._planetLineList.addLine(v.Coordinates.geoTo3dDouble($, S), v.Coordinates.geoTo3dDouble($, S + 5));
                  for (var I = 0, N = 0; N < 360; N += 1) {
                    var $ = 0.25;
                    switch (I % 10) {
                      case 0:
                        I++;
                        continue;
                      case 5:
                        $ = 0.5;
                        break;
                    }
                    I++, w._planetLineList.addLine(v.Coordinates.geoTo3dDouble($, N), v.Coordinates.geoTo3dDouble(-$, N));
                  }
                  I = 0;
                  for (var N = 0; N < 360; N += 90) {
                    I = 0;
                    for (var x = -80; x <= 80; x += 1) {
                      var P = 0.25;
                      switch (I % 10) {
                        case 0:
                          I++;
                          continue;
                        case 5:
                          P = 0.5;
                          break;
                      }
                      I++, w._planetLineList.addLine(v.Coordinates.geoTo3dDouble(x, N + P), v.Coordinates.geoTo3dDouble(x, N - P));
                    }
                  }
                }
                return w._planetLineList.aaFix = !1, w._planetLineList.set_depthBuffered(!0), w._planetLineList.sky = !1, w._planetLineList.drawLines(R, O, W), !0;
              }, w.drawPlanetGridText = function(R, O, W) {
                return w._makePlanetGridText(), w._planetTextBatch.draw(R, O, W), !0;
              }, w._makePlanetGridText = function() {
                if (w._planetTextBatch == null) {
                  w._planetTextBatch = new m.Text3dBatch(80);
                  for (var R = -180; R < 180; R += 10) {
                    var O = "       " + R.toString();
                    R < 10 ? O = "   " + R.toString() : R < 100 && (O = "     " + R.toString()), w._planetTextBatch.add(new m.Text3d(v.Coordinates.geoTo3dDouble(0.4, R), v.Coordinates.geoTo3dDouble(0.5, R), O, -80, 6e-5));
                  }
                  for (var R = 0; R < 360; R += 90)
                    for (var W = -80; W <= 80; W += 10)
                      if (W) {
                        var O = W.toString();
                        W > 0 ? (O = "  +" + W.toString(), w._planetTextBatch.add(new m.Text3d(v.Coordinates.geoTo3dDouble(W - 0.4, R), v.Coordinates.geoTo3dDouble(W - 0.3, R), O, -80, 6e-5))) : (O = "  - " + O.substring(1), w._planetTextBatch.add(new m.Text3d(v.Coordinates.geoTo3dDouble(W + 0.4, R), v.Coordinates.geoTo3dDouble(W + 0.5, R), O, -80, 6e-5)));
                      }
                }
              };
              var f = {};
              (0, n.registerType)("Grids", [w, f, null]);
            }
          ),
          /***/
          "./esm/healpix_tables.js": (
            /*!*******************************!*\
              !*** ./esm/healpix_tables.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                HealpixTables: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              );
              function n() {
              }
              n.ctab = [0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262, 263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283, 1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286, 1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520, 521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526, 527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546, 1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805, 1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816, 2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565, 2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584, 3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335, 3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314, 2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063, 2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082, 3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341, 3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855], n.utab = [0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845], n.jrll = [2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4], n.jpll = [1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7], n.xoffset = [-1, -1, 0, 1, 1, 1, 0, -1], n.yoffset = [0, 1, 1, 1, 0, -1, -1, -1];
              var e = {};
              (0, t.registerType)("HealpixTables", [n, e, null]);
            }
          ),
          /***/
          "./esm/healpix_tile.js": (
            /*!*****************************!*\
              !*** ./esm/healpix_tile.js ***!
              \*****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                HealpixTile: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                Xyf: () => (
                  /* binding */
                  V
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./util.js */
                "./esm/util.js"
              ), o = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), c = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), l = i(
                /*! ./fxyf.js */
                "./esm/fxyf.js"
              ), g = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              ), a = i(
                /*! ./ui_tools.js */
                "./esm/ui_tools.js"
              ), b = i(
                /*! ./tile.js */
                "./esm/tile.js"
              );
              function V() {
                this.ix = 0, this.iy = 0, this.face = 0;
              }
              V.create = function(v, m, L) {
                var A = new V();
                return A.ix = v, A.iy = m, A.face = L, A;
              };
              var y = {};
              (0, n.registerType)("Xyf", [V, y, null]);
              function C(v, m, L, A, K) {
                if (this.ipix = 0, this.indexBuffer = new Array(4), this._vertexList$1 = null, this._nside$1 = 0, this._tileIndex$1 = 0, this._face$1 = 0, this._faceX$1 = 0, this._faceY$1 = 0, this._step$1 = 0, this._subDivided$1 = !1, this._catalogRows$1 = [], b.Tile.call(this), this.level = v, this.tileX = m, this.tileY = L, this.dataset = A, (0, e.set_tileDemEnabled)(!1), v ? this._nside$1 = Math.pow(2, v + 1) : this._nside$1 = 4, K == null)
                  this._face$1 = m * 4 + L, this.ipix = this._face$1;
                else {
                  this.parent = K;
                  var T = K;
                  this._face$1 = T._face$1, this._tileIndex$1 = T._tileIndex$1 * 4 + L * 2 + m, this.ipix = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1, this._faceX$1 = T._faceX$1 * 2 + m, this._faceY$1 = T._faceY$1 * 2 + L;
                }
                this.isCatalogTile = t.ss.keyExists(A.get_hipsProperties().get_properties(), "dataproduct_type") && A.get_hipsProperties().get_properties().dataproduct_type.toLowerCase() === "catalog", this._computeBoundingSphere$1();
              }
              C._galacticMatrix$1 = _.Matrix3d.create(-0.0548755604024359, -0.483835015526738, -0.873437090247923, 0, -0.867666148981161, 0.455983776232537, -0.198076373464674, 0, 0.494109427943568, 0.746982244476371, -0.444829629919504, 0, 0, 0, 0, 1);
              var E = {
                get_URL: function() {
                  return this._url$1 == null ? (this._url$1 = this._getUrl$1(this.dataset, this.level, this.tileX, this.tileY), this._url$1) : this._url$1;
                },
                _computeBoundingSphere$1: function() {
                  this._setStep$1(), this.createGeometry(null);
                  for (var v = new Array(this._vertexList$1.length), m = 0; m < this._vertexList$1.length; m++)
                    v[m] = this._vertexList$1[m].position;
                  this._calcSphere$1(v), this._setCorners$1();
                },
                createGeometry: function(v) {
                  if (this._vertexList$1 != null)
                    return !0;
                  if (this._vertexList$1 = [], this._populateVertexList$1(this._vertexList$1, this._step$1), t.ss.keyExists(this.dataset.get_hipsProperties().get_properties(), "hips_frame") && this.dataset.get_hipsProperties().get_properties().hips_frame === "galactic")
                    for (var m = 0; m < this._vertexList$1.length; m++) {
                      var L = this._vertexList$1[m];
                      C._galacticMatrix$1.multiplyVector(L.position);
                    }
                  this.triangleCount = this._step$1 * this._step$1 / 2;
                  var A = new Uint16Array(3 * this.triangleCount), K = A;
                  if (!this._subDivided$1)
                    try {
                      this._vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                      for (var T = new Float32Array(this._vertexList$1.length * 5), w = T, f = 0, R = t.ss.enumerate(this._vertexList$1); R.moveNext(); ) {
                        var L = R.current;
                        f = this.addVertex(w, f, L);
                      }
                      e.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, T, o.WEBGL.STATIC_DRAW), f = 0;
                      var O = this._vertexList$1.length / (4 * this._step$1);
                      this._setIndexBufferForQuadrant$1(K, 0, 1), this._step$1 > 1 && (this._setIndexBufferForQuadrant$1(K, 0, 0), this._setIndexBufferForQuadrant$1(K, 1, 1), this._setIndexBufferForQuadrant$1(K, 1, 0));
                    } catch {
                    }
                  return !0;
                },
                _setIndexBufferForQuadrant$1: function(v, m, L) {
                  for (var A = 0, K = m * this._step$1 / 2; K < this._step$1 / 2 * (m + 1); K++)
                    for (var T = L * this._step$1 / 2; T < this._step$1 / 2 * (L + 1); T++)
                      v[A++] = K * (this._step$1 + 1) + T, v[A++] = 1 + K * (this._step$1 + 1) + T, v[A++] = this._step$1 + 1 + K * (this._step$1 + 1) + T, v[A++] = 1 + K * (this._step$1 + 1) + T, v[A++] = this._step$1 + 1 + K * (this._step$1 + 1) + T, v[A++] = this._step$1 + 2 + K * (this._step$1 + 1) + T;
                  this._processIndexBuffer$1(v, m * 2 + L);
                },
                _getUrl$1: function(v, m, L, A) {
                  var K = this._getHipsFileExtension$1(), T = -1;
                  m ? T = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1 : T = this._face$1, new t.ss.StringBuilder();
                  var w = Math.floor(T / 1e4) * 1e4;
                  return t.ss.format(v.get_url(), m.toString(), w.toString(), T.toString() + K);
                },
                _getHipsFileExtension$1: function() {
                  return this.dataset.get_extension().toLowerCase().indexOf("png") > -1 ? ".png" : this.dataset.get_extension().toLowerCase().indexOf("jpeg") > -1 || this.dataset.get_extension().toLowerCase().indexOf("jpg") > -1 ? ".jpg" : this.dataset.get_extension().toLowerCase().indexOf("tsv") > -1 ? ".tsv" : this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 ? ".fits" : ".jpg";
                },
                isTileBigEnough: function(v) {
                  if (this.dataset.get_dataSetType() === 1) {
                    var m = 180 / (Math.pow(2, this.level) * 4);
                    return v.get_fovScale() < m;
                  } else {
                    var m = 3600 / (Math.pow(2, this.level) * 4);
                    return v.get_fovScale() < m;
                  }
                },
                _boundaries$1: function(v, m, L) {
                  var A = L * Math.pow(2, this.level), K = new Array(4), T = V.create(v + this._faceX$1 * L, m + this._faceY$1 * L, this._face$1), w = 0.5 / A, f = (T.ix + 0.5) / A, R = (T.iy + 0.5) / A;
                  return K[0] = l.Fxyf.create(f + w, R + w, T.face).toVec3(), K[1] = l.Fxyf.create(f - w, R + w, T.face).toVec3(), K[2] = l.Fxyf.create(f - w, R - w, T.face).toVec3(), K[3] = l.Fxyf.create(f + w, R - w, T.face).toVec3(), K;
                },
                _setCorners$1: function() {
                  var v = V.create(this.tileX, this.tileY, this._face$1), m = 0.5 / this._nside$1, L = (v.ix + 0.5) / this._nside$1, A = (v.iy + 0.5) / this._nside$1;
                  this.topLeft = l.Fxyf.create(L + m, A + m, v.face).toVec3(), this.bottomLeft = l.Fxyf.create(L - m, A + m, v.face).toVec3(), this.bottomRight = l.Fxyf.create(L - m, A - m, v.face).toVec3(), this.topRight = l.Fxyf.create(L + m, A - m, v.face).toVec3();
                },
                draw3D: function(v, m) {
                  if (this.isCatalogTile)
                    return this.drawCatalogTile(v, m), !0;
                  this.renderedGeneration = b.Tile.currentRenderGeneration, b.Tile.tilesTouched++, this.inViewFrustum = !0;
                  var L = !1;
                  if (!this.readyToRender) {
                    if (!this.errored)
                      return (0, e.tileCacheAddTileToQueue)(this), !1;
                    if (this.errored && this.level < 3)
                      L = !0;
                    else
                      return !1;
                  }
                  var A = this.triangleCount;
                  b.Tile.trianglesRendered += A;
                  for (var K = !1, T = !1, w = 0, f = 0; f < 2; f++)
                    for (var R = 0; R < 2; R++)
                      this.level < this.dataset.get_levels() ? (this.children[w] == null && (this.children[w] = (0, e.tileCacheGetTile)(this.level + 1, R, f, this.dataset, this)), this.children[w].isTileInFrustum(v.get_frustum()) ? (this.inViewFrustum = !0, this.children[w].isTileBigEnough(v) || L ? (this.renderChildPart[w].set_targetState(!this.children[w].draw3D(v, m)), this.renderChildPart[w].get_targetState() && (T = !0)) : this.renderChildPart[w].set_targetState(!0)) : this.renderChildPart[w].set_targetState(this.renderChildPart[w].set_state(!1))) : this.renderChildPart[w].set_state(!0), this.renderChildPart[w].get_state() && (K = !0), w++;
                  if ((T || K) && (this.renderedAtOrBelowGeneration = b.Tile.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !K)
                    return !0;
                  if (!this.createGeometry(v))
                    return !1;
                  if (L)
                    return !0;
                  b.Tile.tilesInView++;
                  for (var O = 0; O < 4; O++)
                    this.renderChildPart[O].get_targetState() && this.renderPart(v, O, m / 100, !1);
                  return !0;
                },
                drawCatalogTile: function(v, m) {
                  this.renderedGeneration = b.Tile.currentRenderGeneration, b.Tile.tilesTouched++, this.inViewFrustum = !0;
                  var L = !1;
                  if (!this.readyToRender) {
                    if (!this.errored) {
                      (0, e.tileCacheAddTileToQueue)(this);
                      return;
                    }
                    if (this.errored && this.level < 3)
                      L = !0;
                    else
                      return;
                  }
                  for (var A = !1, K = 0, T = 0; T < 2; T++)
                    for (var w = 0; w < 2; w++)
                      this.level < this.dataset.get_levels() && (this.children[K] == null && (this.children[K] = (0, e.tileCacheGetTile)(this.level + 1, w, T, this.dataset, this)), this.children[K].isTileInFrustum(v.get_frustum()) ? (this.inViewFrustum = !0, A = !0, this.children[K].isTileBigEnough(v) || L ? this.children[K].drawCatalogTile(v, m) : this.children[K].removeCatalogTile()) : this.children[K].removeCatalogTile()), K++;
                  !this.level && !A && !L ? this.removeCatalogTile() : A && (b.Tile.tilesInView++, this._addCatalogTile$1());
                },
                removeCatalogTile: function() {
                  this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().removeTileRows(this.get_key(), this._catalogRows$1);
                },
                _addCatalogTile$1: function() {
                  this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().addTileRows(this.get_key(), this._catalogRows$1);
                },
                _extractCatalogTileRows$1: function() {
                  for (var v = !1, m = t.ss.enumerate(this._catalogData$1.getText().split(`
`)); m.moveNext(); ) {
                    var L = m.current;
                    if (!t.ss.startsWith(L, "#") && !v) {
                      v = !0;
                      continue;
                    }
                    if (!t.ss.startsWith(L, "#")) {
                      var A = a.UiTools.splitString(L, this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().get__table().delimiter);
                      this._catalogRows$1.push(A);
                    }
                  }
                },
                getDataInView: function(v, m, L) {
                  if (!this.readyToRender) {
                    if (this.errored) {
                      if (this.level >= 3)
                        return !0;
                    } else if (this.requestImage(), m)
                      return !1;
                  }
                  for (var A = !0, K = !1, T = 0, w = 0; w < 2; w++)
                    for (var f = 0; f < 2; f++)
                      this.level < this.dataset.get_levels() && (this.children[T] == null && (this.children[T] = (0, e.tileCacheGetTile)(this.level + 1, f, w, this.dataset, this)), this.children[T].isTileInFrustum(v.get_frustum()) && (K = !0, A = A && this.children[T].getDataInView(v, m, L))), T++;
                  return K && L.addTileRows(this.get_key(), this._catalogRows$1), A && !this.downloading;
                },
                _setStep$1: function() {
                  if (this.isCatalogTile)
                    this._step$1 = 2;
                  else
                    switch (this.level) {
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                        this._step$1 = 16;
                        break;
                      case 5:
                        this._step$1 = 8;
                        break;
                      case 6:
                        this._step$1 = 4;
                        break;
                      default:
                        this._step$1 = 2;
                        break;
                    }
                },
                requestImage: function() {
                  this.isCatalogTile ? !this.downloading && !this.readyToRender && (this.downloading = !0, this._catalogData$1 = new g.WebFile(this.get_URL()), this._catalogData$1.onStateChange = t.ss.bind("_loadCatalogData$1", this), this._catalogData$1.send()) : b.Tile.prototype.requestImage.call(this);
                },
                _loadCatalogData$1: function() {
                  this._catalogData$1.get_state() === 2 ? (this.requestPending = !1, this.downloading = !1, this.errored = !0, (0, e.tileCacheRemoveFromQueue)(this.get_key(), !0)) : this._catalogData$1.get_state() === 1 && (this._extractCatalogTileRows$1(), this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, (0, e.tileCacheRemoveFromQueue)(this.get_key(), !0));
                },
                getIndexBuffer: function(v, m) {
                  return this.indexBuffer[v];
                },
                _calcSphere$1: function(v) {
                  var m = _.ConvexHull.findEnclosingSphere(v);
                  this.sphereCenter = m.center, this.sphereRadius = m.radius;
                },
                isPointInTile: function(v, m) {
                  if (!this.level || this.level === 1 && (m >= 0 && m <= 90 && !this.tileX && this.tileY === 1 || m > 90 && m <= 180 && this.tileX === 1 && this.tileY === 1 || m < 0 && m >= -90 && !this.tileX && !this.tileY || m < -90 && m >= -180 && this.tileX === 1 && !this.tileY))
                    return !0;
                  var L = c.Coordinates.geoTo3dDouble(v, m), A = this._isLeftOfHalfSpace$1(this.topLeft, this.topRight, L), K = this._isLeftOfHalfSpace$1(this.topRight, this.bottomRight, L), T = this._isLeftOfHalfSpace$1(this.bottomRight, this.bottomLeft, L), w = this._isLeftOfHalfSpace$1(this.bottomLeft, this.topLeft, L);
                  return !!(A && K && T && w);
                },
                _isLeftOfHalfSpace$1: function(v, m, L) {
                  v.normalize(), m.normalize();
                  var A = _.Vector3d.cross(v, m), K = _.Vector3d.dot(A, L);
                  return K > 0;
                },
                getSurfacePointAltitude: function(v, m, L) {
                  if (this.level < b.Tile.lastDeepestLevel)
                    for (var A = t.ss.enumerate(this.children); A.moveNext(); ) {
                      var K = A.current;
                      if (K != null && K.isPointInTile(v, m)) {
                        var T = K.getSurfacePointAltitude(v, m, L);
                        if (T)
                          return T;
                        break;
                      }
                    }
                  return this._getAltitudeFromLatLng$1(v, m, L);
                },
                _getAltitudeFromLatLng$1: function(v, m, L) {
                  var A = c.Coordinates.geoTo3dDouble(v, m), K = r.DistanceCalc.getUVFromInnerPoint(this.topLeft, this.topRight, this.bottomLeft, this.bottomRight, A), T = Math.max(0, Math.min(16, K.x * 16)), w = Math.max(0, Math.min(16, K.y * 16)), f = Math.max(0, Math.min(15, t.ss.truncate(K.x * 16))), R = Math.max(0, Math.min(15, t.ss.truncate(K.y * 16))), O = T - f, W = w - R;
                  if (this.demArray != null) {
                    var N = this.demArray[f + 17 * R], $ = this.demArray[f + 1 + 17 * R], S = this.demArray[f + 17 * (R + 1)], I = this.demArray[f + 1 + 17 * (R + 1)], x = N * (1 - O) + O * $, P = S * (1 - O) + O * I, d = x * (1 - W) + W * P;
                    return d / (L ? 1 : this.get__demScaleFactor());
                  }
                  return this.demAverage / (L ? 1 : this.get__demScaleFactor());
                },
                _processIndexBuffer$1: function(v, m) {
                  this.indexBuffer[m] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, this.indexBuffer[m]), e.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, v, o.WEBGL.STATIC_DRAW);
                },
                cleanUp: function(v) {
                  b.Tile.prototype.cleanUp.call(this, v), this._returnBuffers$1(), this._subDivided$1 = !1;
                },
                _returnBuffers$1: function() {
                  this._vertexList$1 != null && (this._vertexList$1 = null);
                },
                // Vertices distributed in a grid pattern like the example below
                // Example for pattern with step set to 4
                //            24
                //          19  23
                //       14   18  22
                //      9   13  17  21
                //    4   8   12  16  20
                //      3   7   11  15
                //        2   6   10
                //          1   5
                //            0
                _populateVertexList$1: function(v, m) {
                  for (var L = 0; L < m; L += 2)
                    for (var A = 0; A < m; A += 2) {
                      var K = this._boundaries$1(A, L, m);
                      v[L * (m + 1) + A] = _.PositionTexture.createPos(K[2], 1 / m * L, 1 / m * A), v[L * (m + 1) + A + 1] = _.PositionTexture.createPos(K[3], 1 / m * L, 1 / m + 1 / m * A), v[(L + 1) * (m + 1) + A] = _.PositionTexture.createPos(K[1], 1 / m + 1 / m * L, 1 / m * A), v[(L + 1) * (m + 1) + A + 1] = _.PositionTexture.createPos(K[0], 1 / m + 1 / m * L, 1 / m + 1 / m * A), A + 2 >= m && m > 1 && (A = m - 1, K = this._boundaries$1(A, L, m), v[L * (m + 1) + m] = _.PositionTexture.createPos(K[3], 1 / m * L, 1 / m + 1 / m * A), v[(L + 1) * (m + 1) + m] = _.PositionTexture.createPos(K[0], 1 / m + 1 / m * L, 1 / m + 1 / m * A));
                    }
                  m > 1 && this._vertexOfLastRow$1(v, m);
                },
                _vertexOfLastRow$1: function(v, m) {
                  for (var L = m - 1, A = 0; A < m; A += 2) {
                    var K = this._boundaries$1(A, L, m);
                    v[(L + 1) * (m + 1) + A] = _.PositionTexture.createPos(K[1], 1 / m + 1 / m * L, 1 / m * A), v[(L + 1) * (m + 1) + A + 1] = _.PositionTexture.createPos(K[0], 1 / m + 1 / m * L, 1 / m + 1 / m * A), A + 2 >= m && (A = m - 1, K = this._boundaries$1(A, L, m), v[(L + 1) * (m + 1) + m] = _.PositionTexture.createPos(K[0], 1 / m + 1 / m * L, 1 / m + 1 / m * A));
                  }
                }
              };
              (0, n.registerType)("HealpixTile", [C, E, b.Tile]);
            }
          ),
          /***/
          "./esm/healpix_utils.js": (
            /*!******************************!*\
              !*** ./esm/healpix_utils.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                HealpixUtils: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./fast_math.js */
                "./esm/fast_math.js"
              );
              function e() {
              }
              e.check = function(r, o) {
                if (!r)
                  throw new Error(o);
              }, e.isqrt = function(r) {
                var o = Math.sqrt(r + 0.5);
                return r < 262144 || (o * o > r ? --o : (o + 1) * (o + 1) <= r && ++o), o;
              }, e.cosdist_zphi = function(r, o, c, l) {
                return r * c + n.FastMath.cos(o - l) * Math.sqrt((1 - r * r) * (1 - c * c));
              }, e.fmodulo = function(r, o) {
                if (r >= 0)
                  return r < o ? r : r % o;
                var c = r % o + o;
                return c === o ? 0 : c;
              };
              var _ = {};
              (0, t.registerType)("HealpixUtils", [e, _, null]);
            }
          ),
          /***/
          "./esm/hips_properties.js": (
            /*!********************************!*\
              !*** ./esm/hips_properties.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                HipsProperties: () => (
                  /* binding */
                  g
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              ), r = i(
                /*! ./util.js */
                "./esm/util.js"
              ), o = i(
                /*! ./layers/spreadsheet_layer.js */
                "./esm/layers/spreadsheet_layer.js"
              ), c = i(
                /*! ./layers/vo_table.js */
                "./esm/layers/vo_table.js"
              ), l = i(
                /*! ./layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              );
              function g(b) {
                this._properties = {}, this._catalogColumnInfo = null, this._catalogSpreadSheetLayer = new o.CatalogSpreadSheetLayer(), this._downloadComplete = !1, this.dataset = b, this._datasetName = b.get_name(), this._url = b.get_url(), this._url.toLowerCase().indexOf("norder") > -1 && (this._url = this._url.substring(0, this._url.toLowerCase().indexOf("norder"))), this._url += "properties", this._download();
              }
              var a = {
                get_properties: function() {
                  return this._properties;
                },
                get_catalogSpreadSheetLayer: function() {
                  return this._catalogSpreadSheetLayer;
                },
                set_catalogSpreadSheetLayer: function(b) {
                  return this._catalogSpreadSheetLayer = b, b;
                },
                get_catalogColumnInfo: function() {
                  return this._catalogColumnInfo;
                },
                set_catalogColumnInfo: function(b) {
                  return this._catalogColumnInfo = b, b;
                },
                get_downloadComplete: function() {
                  return this._downloadComplete;
                },
                _download: function() {
                  this._webFile = new _.WebFile(this._url), this._webFile.onStateChange = t.ss.bind("_onPropertiesDownloadComplete", this), this._webFile.send();
                },
                _onPropertiesDownloadComplete: function() {
                  if (this._webFile.get_state() === 1)
                    if (this._parseProperties(this._webFile.getText()), t.ss.keyExists(this.get_properties(), "dataproduct_type") && this.get_properties().dataproduct_type.toLowerCase() === "catalog")
                      this._catalogColumnInfo = c.VoTable.loadFromUrl(t.ss.replaceString(this._url, "/properties", "/metadata.xml"), t.ss.bind("_onCatalogMetadataDownloadComplete", this));
                    else {
                      if (t.ss.keyExists(this.get_properties(), "hips_data_range")) {
                        var b = this.get_properties().hips_data_range;
                        this.dataset.get_fitsProperties().minVal = parseFloat(b.split(" ")[0]), this.dataset.get_fitsProperties().maxVal = parseFloat(b.split(" ")[1]), this.dataset.get_fitsProperties().lowerCut = this.dataset.get_fitsProperties().minVal, this.dataset.get_fitsProperties().upperCut = this.dataset.get_fitsProperties().maxVal;
                      }
                      if (t.ss.keyExists(this.get_properties(), "hips_pixel_cut")) {
                        var V = this.get_properties().hips_pixel_cut;
                        this.dataset.get_fitsProperties().lowerCut = parseFloat(V.split(" ")[0]), this.dataset.get_fitsProperties().upperCut = parseFloat(V.split(" ")[1]), t.ss.keyExists(this.get_properties(), "hips_data_range") || (this.dataset.get_fitsProperties().minVal = this.dataset.get_fitsProperties().lowerCut, this.dataset.get_fitsProperties().maxVal = this.dataset.get_fitsProperties().upperCut);
                      }
                      this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
                    }
                },
                _onCatalogMetadataDownloadComplete: function() {
                  this._catalogSpreadSheetLayer.useHeadersFromVoTable(this._catalogColumnInfo), this._catalogSpreadSheetLayer.set_name(this._datasetName), this._catalogSpreadSheetLayer.id = r.Guid.createFrom(this._datasetName), l.LayerManager.addSpreadsheetLayer(this.get_catalogSpreadSheetLayer(), "Sky"), this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
                },
                setDownloadCompleteListener: function(b) {
                  this._onDownloadComplete = b;
                },
                _parseProperties: function(b) {
                  for (var V = b.split(`
`), y = t.ss.enumerate(V); y.moveNext(); ) {
                    var C = y.current;
                    if (!t.ss.whitespace(C) && !t.ss.startsWith(C, "#")) {
                      var E = C.split("=");
                      if (E.length === 2) {
                        var v = t.ss.trim(E[0]), m = t.ss.trim(E[1]);
                        !t.ss.whitespace(v) && !t.ss.whitespace(m) && (this.get_properties()[v] = m);
                      }
                    }
                  }
                }
              };
              (0, n.registerType)("HipsProperties", [g, a, null]), (0, e.set_makeNewHipsProperties)(function(b) {
                return new g(b);
              });
            }
          ),
          /***/
          "./esm/hploc.js": (
            /*!**********************!*\
              !*** ./esm/hploc.js ***!
              \**********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Hploc: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), e = i(
                /*! ./fast_math.js */
                "./esm/fast_math.js"
              );
              function _() {
                this.z = 0, this.phi = 0, this.sth = 0, this.have_sth = !1;
              }
              _.create = function(o) {
                var c = new _(), l = 1 / o.length();
                return c.z = o.z * l, c.phi = e.FastMath.atan2(o.y, o.x), Math.abs(c.z) > 0.99 && (c.sth = Math.sqrt(o.x * o.x + o.y * o.y) * l, c.have_sth = !0), c;
              };
              var r = {
                toVec3: function() {
                  var o;
                  this.have_sth ? o = this.sth : o = Math.sqrt((1 - this.z) * (1 + this.z));
                  var c = o * e.FastMath.cos(this.phi), l = o * e.FastMath.sin(this.phi);
                  return n.Vector3d.create(c, this.z, l);
                }
              };
              (0, t.registerType)("Hploc", [_, r, null]);
            }
          ),
          /***/
          "./esm/imageset.js": (
            /*!*************************!*\
              !*** ./esm/imageset.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                BandPass: () => (
                  /* binding */
                  K
                ),
                /* harmony export */
                ImageSetType: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                Imageset: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                ProjectionType: () => (
                  /* binding */
                  L
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), o = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), c = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), l = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), g = i(
                /*! ./fits_properties.js */
                "./esm/fits_properties.js"
              ), a = i(
                /*! ./layers/fits_image.js */
                "./esm/layers/fits_image.js"
              ), b = i(
                /*! ./equirectangular_tile.js */
                "./esm/equirectangular_tile.js"
              ), V = i(
                /*! ./healpix_tile.js */
                "./esm/healpix_tile.js"
              ), y = i(
                /*! ./mercator_tile.js */
                "./esm/mercator_tile.js"
              ), C = i(
                /*! ./plot_tile.js */
                "./esm/plot_tile.js"
              ), E = i(
                /*! ./tangent_tile.js */
                "./esm/tangent_tile.js"
              ), v = i(
                /*! ./sky_image_tile.js */
                "./esm/sky_image_tile.js"
              ), m = i(
                /*! ./toast_tile.js */
                "./esm/toast_tile.js"
              ), L = {
                mercator: 0,
                equirectangular: 1,
                tangent: 2,
                tan: 2,
                toast: 3,
                spherical: 4,
                skyImage: 5,
                plotted: 6,
                healpix: 7
              };
              (0, n.registerType)("ProjectionType", L), (0, n.registerEnum)("ProjectionType", L);
              var A = {
                earth: 0,
                planet: 1,
                sky: 2,
                panorama: 3,
                solarSystem: 4,
                sandbox: 5
              };
              (0, n.registerType)("ImageSetType", A), (0, n.registerEnum)("ImageSetType", A);
              var K = {
                gamma: 0,
                xRay: 1,
                ultraviolet: 2,
                visible: 3,
                hydrogenAlpha: 4,
                IR: 4,
                microwave: 5,
                radio: 6,
                visibleNight: 6
              };
              (0, n.registerType)("BandPass", K), (0, n.registerEnum)("BandPass", K);
              function T() {
                this._projection = 0, this._imageSetID = 0, this._baseTileDegrees = 0, this._widthFactor = 1, this.demUrl = "", this._levels = 0, this._mercator = !1, this._bottomsUp = !1, this._baseLevel = 1, this._quadTreeTileMap = "0123", this._centerX = 0, this._centerY = 0, this._rotation = 0, this._meanRadius = 0, this._dataSetType = 0, this._bandPass = 3, this._altUrl = "", this._singleImage = !1, this._fitsProperties = new g.FitsProperties(), this._matrixComputed = !1, this._name = "", this._sparse = !1, this._thumbnailUrl = "", this._generic = !1, this._defaultSet = !1, this._elevationModel = !1, this._offsetX = 0, this._offsetY = 0;
              }
              T.getNewTile = function(f, R, O, W, N) {
                switch (f.get_projection()) {
                  case L.mercator:
                    var $ = y.MercatorTile.create(R, O, W, f, N);
                    return $;
                  case L.equirectangular:
                    return b.EquirectangularTile.create(R, O, W, f, N);
                  case L.toast:
                  default:
                    return m.ToastTile.create(R, O, W, f, N);
                  case L.skyImage:
                    return new v.SkyImageTile(R, O, W, f, N);
                  case L.plotted:
                    return C.PlotTile.create(R, O, W, f, N);
                  case L.healpix:
                    return f.get_hipsProperties() == null && f.set_hipsProperties((0, e.makeNewHipsProperties)(f)), f.get_hipsProperties().get_downloadComplete() ? new V.HealpixTile(R, O, W, f, N) : null;
                  case L.tangent:
                    var $ = new E.TangentTile(R, O, W, f, N);
                    return $;
                }
              }, T.fromXMLNode = function(f) {
                try {
                  var R = 2, O = 2;
                  f.attributes.getNamedItem("DataSetType") != null && (R = n.Enums.parse("ImageSetType", f.attributes.getNamedItem("DataSetType").nodeValue));
                  var W = 3;
                  W = n.Enums.parse("BandPass", f.attributes.getNamedItem("BandPass").nodeValue);
                  var N = 1;
                  if (f.attributes.getNamedItem("WidthFactor") != null && (N = parseInt(f.attributes.getNamedItem("WidthFactor").nodeValue)), f.attributes.getNamedItem("Generic") == null || !t.ss.boolean(f.attributes.getNamedItem("Generic").nodeValue)) {
                    O = n.Enums.parse("ProjectionType", f.attributes.getNamedItem("Projection").nodeValue);
                    var $ = f.attributes.getNamedItem("FileType").nodeValue;
                    t.ss.startsWith($, ".") || ($ = "." + $);
                    var S = "", I = r.Util.selectSingleNode(f, "ThumbnailUrl");
                    if (I != null)
                      if (t.ss.emptyString(I.text)) {
                        var x = I;
                        S = x.textContent;
                      } else
                        S = I.text;
                    var P = !1, d = !1;
                    f.attributes.getNamedItem("StockSet") != null && (P = t.ss.boolean(f.attributes.getNamedItem("StockSet").nodeValue)), f.attributes.getNamedItem("ElevationModel") != null && (d = t.ss.boolean(f.attributes.getNamedItem("ElevationModel").nodeValue));
                    var U = "";
                    f.attributes.getNamedItem("DemUrl") != null && (U = f.attributes.getNamedItem("DemUrl").nodeValue);
                    var F = "";
                    f.attributes.getNamedItem("AltUrl") != null && (F = f.attributes.getNamedItem("AltUrl").nodeValue);
                    var X = 0;
                    f.attributes.getNamedItem("OffsetX") != null && (X = parseFloat(f.attributes.getNamedItem("OffsetX").nodeValue));
                    var Y = 0;
                    f.attributes.getNamedItem("OffsetY") != null && (Y = parseFloat(f.attributes.getNamedItem("OffsetY").nodeValue));
                    var M = "", B = r.Util.selectSingleNode(f, "Credits");
                    B != null && (M = r.Util.getInnerText(B));
                    var D = "";
                    B = r.Util.selectSingleNode(f, "CreditsUrl"), B != null && (D = r.Util.getInnerText(B));
                    var k = 0;
                    f.attributes.getNamedItem("MeanRadius") != null && (k = parseFloat(f.attributes.getNamedItem("MeanRadius").nodeValue));
                    var G = null;
                    f.attributes.getNamedItem("ReferenceFrame") != null && (G = f.attributes.getNamedItem("ReferenceFrame").nodeValue);
                    var j = "";
                    f.attributes.getNamedItem("Name") != null && (j = f.attributes.getNamedItem("Name").nodeValue);
                    var ee = "";
                    f.attributes.getNamedItem("Url") != null && (ee = f.attributes.getNamedItem("Url").nodeValue);
                    var Z = 0;
                    f.attributes.getNamedItem("BaseTileLevel") != null && (Z = parseInt(f.attributes.getNamedItem("BaseTileLevel").nodeValue));
                    var z = 0;
                    f.attributes.getNamedItem("TileLevels") != null && (z = parseInt(f.attributes.getNamedItem("TileLevels").nodeValue));
                    var te = 0;
                    f.attributes.getNamedItem("BaseDegreesPerTile") != null && (te = parseFloat(f.attributes.getNamedItem("BaseDegreesPerTile").nodeValue));
                    var re = !1;
                    f.attributes.getNamedItem("BottomsUp") != null && (re = t.ss.boolean(f.attributes.getNamedItem("BottomsUp").nodeValue));
                    var le = "";
                    f.attributes.getNamedItem("QuadTreeMap") != null && (le = f.attributes.getNamedItem("QuadTreeMap").nodeValue);
                    var ae = 0;
                    f.attributes.getNamedItem("CenterX") != null && (ae = parseFloat(f.attributes.getNamedItem("CenterX").nodeValue));
                    var oe = 0;
                    f.attributes.getNamedItem("CenterY") != null && (oe = parseFloat(f.attributes.getNamedItem("CenterY").nodeValue));
                    var de = 0;
                    f.attributes.getNamedItem("Rotation") != null && (de = parseFloat(f.attributes.getNamedItem("Rotation").nodeValue));
                    var ve = !1;
                    return f.attributes.getNamedItem("Sparse") != null && (ve = t.ss.boolean(f.attributes.getNamedItem("Sparse").nodeValue)), T.create(j, ee, R, W, O, Math.abs(r.Util.getHashCode(ee)), Z, z, 256, te, $, re, le, ae, oe, de, ve, S, P, d, N, X, Y, M, D, U, F, k, G);
                  } else
                    return T.createGeneric(R, W);
                } catch {
                  return null;
                }
              }, T.saveToXml = function(f, R, O) {
                f._writeStartElement("ImageSet"), f._writeAttributeString("Generic", R.get_generic().toString()), f._writeAttributeString("DataSetType", n.Enums.toXml("ImageSetType", R.get_dataSetType())), f._writeAttributeString("BandPass", n.Enums.toXml("BandPass", R.get_bandPass())), R.get_generic() || (f._writeAttributeString("Name", R.get_name()), t.ss.emptyString(O) ? f._writeAttributeString("Url", R.get_url()) : f._writeAttributeString("Url", O), f._writeAttributeString("DemUrl", R.get_demUrl()), f._writeAttributeString("BaseTileLevel", R.get_baseLevel().toString()), f._writeAttributeString("TileLevels", R.get_levels().toString()), f._writeAttributeString("BaseDegreesPerTile", R.get_baseTileDegrees().toString()), f._writeAttributeString("FileType", R.get_extension()), f._writeAttributeString("BottomsUp", R.get_bottomsUp().toString()), f._writeAttributeString("Projection", n.Enums.toXml("ProjectionType", R.get_projection())), f._writeAttributeString("QuadTreeMap", R.get_quadTreeTileMap()), f._writeAttributeString("CenterX", R.get_centerX().toString()), f._writeAttributeString("CenterY", R.get_centerY().toString()), f._writeAttributeString("OffsetX", R.get_offsetX().toString()), f._writeAttributeString("OffsetY", R.get_offsetY().toString()), f._writeAttributeString("Rotation", R.get_rotation().toString()), f._writeAttributeString("Sparse", R.get_sparse().toString()), f._writeAttributeString("ElevationModel", R.get_elevationModel().toString()), f._writeAttributeString("StockSet", R.get_defaultSet().toString()), f._writeAttributeString("WidthFactor", R.get_widthFactor().toString()), f._writeAttributeString("MeanRadius", R.get_meanRadius().toString()), f._writeAttributeString("ReferenceFrame", R.get_referenceFrame()), t.ss.emptyString(O) ? f._writeElementString("ThumbnailUrl", R.get_thumbnailUrl()) : f._writeElementString("ThumbnailUrl", R.get_url())), f._writeEndElement();
              }, T.createGeneric = function(f, R) {
                var O = new T();
                return O._generic = !0, O._name = "Generic", O._sparse = !1, O._dataSetType = f, O._bandPass = R, O._quadTreeTileMap = "", O.url = "", O._levels = 0, O._baseTileDegrees = 0, O._imageSetID = 0, O._extension = "", O._projection = 1, O._bottomsUp = !1, O._baseLevel = 0, O._mercator = !O._projection, O._centerX = 0, O._centerY = 0, O._rotation = 0, O._thumbnailUrl = "", O._matrix = _.Matrix3d.get_identity(), O._matrix._multiply(_.Matrix3d._rotationX(O.get_rotation() / 180 * Math.PI)), O._matrix._multiply(_.Matrix3d._rotationZ(O.get_centerY() / 180 * Math.PI)), O._matrix._multiply(_.Matrix3d._rotationY((360 - O.get_centerX() + 180) / 180 * Math.PI)), O;
              }, T.create = function(f, R, O, W, N, $, S, I, x, P, d, U, F, X, Y, M, B, D, k, G, j, ee, Z, z, te, re, le, ae, oe) {
                var de = new T();
                return de.setInitialParameters(f, R, O, W, N, $, S, I, P, d, U, F, X, Y, M, B, D, k, G, j, ee, Z, z, te, re, le, ae, oe), de;
              };
              var w = {
                get_wcsImage: function() {
                  return this._wcsImage;
                },
                set_wcsImage: function(f) {
                  return this._wcsImage = f, f;
                },
                get_projection: function() {
                  return this._projection;
                },
                set_projection: function(f) {
                  return this._projection = f, f;
                },
                get_referenceFrame: function() {
                  return this._referenceFrame;
                },
                set_referenceFrame: function(f) {
                  return this._referenceFrame = f, f;
                },
                get_imageSetID: function() {
                  return this._imageSetID;
                },
                set_imageSetID: function(f) {
                  return this._imageSetID = f, f;
                },
                get_baseTileDegrees: function() {
                  return this._baseTileDegrees;
                },
                set_baseTileDegrees: function(f) {
                  return this._baseTileDegrees = f, f;
                },
                get_widthFactor: function() {
                  return this._widthFactor;
                },
                set_widthFactor: function(f) {
                  return this._widthFactor = f, f;
                },
                getHashCode: function() {
                  return r.Util.getHashCode(this.get_url());
                },
                get_url: function() {
                  return this.url;
                },
                set_url: function(f) {
                  return this.url = f, f;
                },
                get_demUrl: function() {
                  return t.ss.emptyString(this.demUrl) && !this._projection && !e.freestandingMode ? c.URLHelpers.singleton.coreStaticUrl("wwtweb/BingDemTile.aspx?Q={0},{1},{2}") : this.demUrl;
                },
                set_demUrl: function(f) {
                  return this.demUrl = f, f;
                },
                get_extension: function() {
                  return this._extension;
                },
                set_extension: function(f) {
                  return this._extension = f, f;
                },
                get_levels: function() {
                  return this._levels;
                },
                set_levels: function(f) {
                  return this._levels = f, f;
                },
                get_bottomsUp: function() {
                  return this._bottomsUp;
                },
                set_bottomsUp: function(f) {
                  return this._bottomsUp = f, f;
                },
                get_mercator: function() {
                  return this._mercator;
                },
                set_mercator: function(f) {
                  return this._mercator = f, f;
                },
                get_baseLevel: function() {
                  return this._baseLevel;
                },
                set_baseLevel: function(f) {
                  return this._baseLevel = f, f;
                },
                get_quadTreeTileMap: function() {
                  return this._quadTreeTileMap;
                },
                set_quadTreeTileMap: function(f) {
                  return this._quadTreeTileMap = f, f;
                },
                get_centerX: function() {
                  return this._centerX;
                },
                set_centerX: function(f) {
                  return this._centerX !== f && (this._centerX = f, this._computeMatrix()), f;
                },
                get_centerY: function() {
                  return this._centerY;
                },
                set_centerY: function(f) {
                  return this._centerY !== f && (this._centerY = f, this._computeMatrix()), f;
                },
                get_rotation: function() {
                  return this._rotation;
                },
                set_rotation: function(f) {
                  return this._rotation !== f && (this._rotation = f, this._computeMatrix()), f;
                },
                get_meanRadius: function() {
                  return this._meanRadius;
                },
                set_meanRadius: function(f) {
                  return this._meanRadius = f, f;
                },
                get_bandPass: function() {
                  return this._bandPass;
                },
                set_bandPass: function(f) {
                  return this._bandPass = f, f;
                },
                get_dataSetType: function() {
                  return this._dataSetType;
                },
                set_dataSetType: function(f) {
                  return this._dataSetType = f, f;
                },
                get_altUrl: function() {
                  return this._altUrl;
                },
                set_altUrl: function(f) {
                  return this._altUrl = f, f;
                },
                get_singleImage: function() {
                  return this._singleImage;
                },
                set_singleImage: function(f) {
                  return this._singleImage = f, f;
                },
                get_hipsProperties: function() {
                  return this._hipsProperties;
                },
                set_hipsProperties: function(f) {
                  return this._hipsProperties = f, f;
                },
                get_fitsProperties: function() {
                  return this._fitsProperties;
                },
                set_fitsProperties: function(f) {
                  return this._fitsProperties = f, f;
                },
                toString: function() {
                  return this.get_defaultSet() ? this._name + " *" : this._name;
                },
                get_stockImageSet: function() {
                  return this._generic || !this._defaultSet ? this : T.createGeneric(this.get_dataSetType(), this.get_bandPass());
                },
                equals: function(f) {
                  if (f == null || !t.ss.canCast(f, T))
                    return !1;
                  var R = f;
                  return r.Util.getHashCode(R.get_url()) === r.Util.getHashCode(this.get_url()) && R.get_dataSetType() === this.get_dataSetType() && R.get_bandPass() === this.get_bandPass() && R.get_generic() === this.get_generic();
                },
                get_matrix: function() {
                  return this._matrixComputed || this._computeMatrix(), this._matrix;
                },
                set_matrix: function(f) {
                  return this._matrix = f, f;
                },
                _computeMatrix: function() {
                  this._matrixComputed = !0, this._matrix = _.Matrix3d.get_identity(), this._matrix._multiply(_.Matrix3d._rotationX(this.get_rotation() / 180 * Math.PI)), this._matrix._multiply(_.Matrix3d._rotationZ(this.get_centerY() / 180 * Math.PI)), this._matrix._multiply(_.Matrix3d._rotationY((360 - this.get_centerX()) / 180 * Math.PI));
                },
                get_name: function() {
                  return this._name;
                },
                set_name: function(f) {
                  return this._name = f, f;
                },
                get_sparse: function() {
                  return this._sparse;
                },
                set_sparse: function(f) {
                  return this._sparse = f, f;
                },
                get_thumbnailUrl: function() {
                  return this._thumbnailUrl;
                },
                set_thumbnailUrl: function(f) {
                  return this._thumbnailUrl = f, f;
                },
                get_generic: function() {
                  return this._generic;
                },
                set_generic: function(f) {
                  return this._generic = f, f;
                },
                get_elevationModel: function() {
                  return this._elevationModel;
                },
                set_elevationModel: function(f) {
                  return this._elevationModel = f, f;
                },
                get_defaultSet: function() {
                  return this._defaultSet;
                },
                set_defaultSet: function(f) {
                  return this._defaultSet = f, f;
                },
                get_offsetX: function() {
                  return this._offsetX;
                },
                set_offsetX: function(f) {
                  return this._offsetX = f, f;
                },
                get_offsetY: function() {
                  return this._offsetY;
                },
                set_offsetY: function(f) {
                  return this._offsetY = f, f;
                },
                get_creditsText: function() {
                  return this._creditsText;
                },
                set_creditsText: function(f) {
                  return this._creditsText = f, f;
                },
                get_creditsUrl: function() {
                  return this._creditsUrl;
                },
                set_creditsUrl: function(f) {
                  return this._creditsUrl = f, f;
                },
                get_isMandelbrot: function() {
                  return !1;
                },
                // Calculate either the X or Y coordinate of the estimated image center.
                //
                // This estimate has some important limitations. First, because images
                // might contain transparent regions, the "center" of the image that a
                // user will perceive might have nothing to do with the center of the
                // image bitmap. For instance, imagine that the bitmap is 100x100 but
                // that everything is transparent except for 10x10 pixels in the
                // top-left corner. We don't know anything about the "barycenter" of the
                // image here, so we can't account for that.
                //
                // Second, for untiled SkyImage imagesets, to properly compute the
                // bitmap center we need its dimensions, which simply aren't available
                // here. All we can do is guess a "reasonable" image size.
                //
                // For these reasons, this method should be avoided when possible. The
                // preferred way to "know" the location of an image's center is to wrap
                // the image in a Place object, which can just specify the exact
                // coordinates and zoom level too.
                //
                // Even disregarding the above, it's non-trivial to locate the image
                // center because of the OffsetX/Y parameters and potential rotation of
                // the image's coordinate system relative to the sky.
                _calcViewCenterCoordinate: function(f) {
                  var R = l.Coordinates.degreesToRadians(this._rotation), O = Math.cos(R), W = Math.sin(R), N = 0, $ = 0;
                  if (this.get_levels() > 0)
                    N = -this._offsetX, $ = this._offsetY;
                  else {
                    var S = 800, I = 800;
                    N = (this._offsetX - S / 2) * this._baseTileDegrees, $ = (I / 2 - this._offsetY) * this._baseTileDegrees;
                  }
                  return this._bottomsUp && (N = -N), f ? this._centerX + N * O + $ * W : this._centerY - N * W + $ * O;
                },
                get_viewCenterX: function() {
                  return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterX() : this._calcViewCenterCoordinate(!0);
                },
                get_viewCenterY: function() {
                  return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterY() : this._calcViewCenterCoordinate(!1);
                },
                setInitialParameters: function(f, R, O, W, N, $, S, I, x, P, d, U, F, X, Y, M, B, D, k, G, j, ee, Z, z, te, re, le, ae) {
                  this.set_referenceFrame(ae), this.set_meanRadius(le), this._altUrl = re, this.demUrl = te, this._creditsText = Z, this._creditsUrl = z, this._offsetY = ee, this._offsetX = j, this._widthFactor = G, this._elevationModel = k, this._defaultSet = D, this._name = f, this._sparse = M, this._dataSetType = O, this._bandPass = W, this._quadTreeTileMap = U, this.url = R, this._levels = I, this._baseTileDegrees = x, this._imageSetID = $, this._extension = P, this._projection = N, this._bottomsUp = d, this._baseLevel = S, this._mercator = !N, this._centerX = F, this._centerY = X, this._rotation = Y, this._thumbnailUrl = B, this._computeMatrix();
                },
                // Ideally, imagesets will be associated with Places that specify
                // exactly how the view should be set up when "going to" them, but
                // sometimes (especially research datasets) we're interested in deriving
                // a reasonable zoom setting without that extra information. The returned value
                // isn't going to be perfect but it should hopefully be OK.
                _guessZoomSetting: function(f) {
                  var O = f, W = t.ss.safeCast(this._wcsImage, a.FitsImage);
                  return this.get_projection() === L.skyImage ? W != null && (O = this.get_baseTileDegrees() * W.get_sizeY() * 6 * 1.7) : W != null ? O = W.get_scaleY() * W.get_sizeY() * 6 * 1.7 : O = this.get_baseTileDegrees() * 6 * 1.7, O > f && (O = f), O;
                },
                // URL parameters
                //{0} ImageSetID
                //{1} level
                //{2} x tile id
                //{3} y tile id
                //{4} quadtree address (VE style)
                //{5} quadtree address (Google maps style)
                //{6} top left corner RA
                //{7} top left corner Dec
                //{8} bottom right corner RA
                //{9} bottom right corner dec
                //{10} bottom left corner RA
                //{11} bottom left corner dec
                //{12} top right corner RA
                //{13} top right corner dec
                get_thumbnail: function() {
                  return this._thumbnail;
                },
                set_thumbnail: function(f) {
                  return this._thumbnail = f, f;
                },
                get_bounds: function() {
                  return this._bounds;
                },
                set_bounds: function(f) {
                  return this._bounds = f, f;
                },
                get_isImage: function() {
                  return !0;
                },
                get_isTour: function() {
                  return !1;
                },
                get_isFolder: function() {
                  return !1;
                },
                get_isCloudCommunityItem: function() {
                  return !1;
                },
                get_readOnly: function() {
                  return !1;
                },
                get_children: function() {
                  return [];
                }
              };
              (0, n.registerType)("Imageset", [T, w, null, o.IThumbnail]);
            }
          ),
          /***/
          "./esm/interfaces.js": (
            /*!***************************!*\
              !*** ./esm/interfaces.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                IFolder: () => (
                  /* binding */
                  n
                ),
                /* harmony export */
                IPlace: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                ISettings: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                IThumbnail: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                IUIServicesCallbacks: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                IUiController: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                IUndoStep: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                IViewMover: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              );
              function n() {
              }
              (0, t.registerType)("IFolder", [n]);
              function e() {
              }
              (0, t.registerType)("IThumbnail", [e]);
              function _() {
              }
              (0, t.registerType)("IPlace", [_]);
              function r() {
              }
              (0, t.registerType)("IUiController", [r]);
              function o() {
              }
              (0, t.registerType)("IViewMover", [o]);
              function c() {
              }
              (0, t.registerType)("IUIServicesCallbacks", [c]);
              function l() {
              }
              (0, t.registerType)("ISettings", [l]);
              function g() {
              }
              (0, t.registerType)("IUndoStep", [g]);
            }
          ),
          /***/
          "./esm/kepler_vertex.js": (
            /*!******************************!*\
              !*** ./esm/kepler_vertex.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                KeplerVertex: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), e = i(
                /*! ./color.js */
                "./esm/color.js"
              );
              function _() {
                this.ABC = new n.Vector3d(), this.abc1 = new n.Vector3d(), this.pointSize = 0, this.w = 0, this.e = 0, this.n = 0, this.t = 0, this.a = 0, this.z = 0, this.orbitPos = 0, this.orbits = 0;
              }
              _._sine = 0, _._cose = 1, _._degrad = Math.PI / 180;
              var r = {
                fill: function(o) {
                  var c = Math.cos(o.omega * _._degrad), l = Math.sin(o.omega * _._degrad), g = Math.cos(o.i * _._degrad), a = Math.sin(o.i * _._degrad), b = l * _._cose, V = l * _._sine, y = -l * g, C = c * g * _._cose - a * _._sine, E = c * g * _._sine + a * _._cose;
                  this.ABC.x = Math.atan2(c, y), this.ABC.y = Math.atan2(b, C), this.ABC.z = Math.atan2(V, E), this.abc1.x = Math.sqrt(c * c + y * y), this.abc1.y = Math.sqrt(b * b + C * C), this.abc1.z = Math.sqrt(V * V + E * E), this.pointSize = 0.1, o.a < 2.5 ? this.color = e.Colors.get_white() : o.a < 2.83 ? this.color = e.Colors.get_red() : o.a < 2.96 ? this.color = e.Colors.get_green() : o.a < 3.3 ? this.color = e.Colors.get_magenta() : o.a < 5 ? this.color = e.Colors.get_cyan() : o.a < 10 ? (this.color = e.Colors.get_yellow(), this.pointSize = 0.9) : (this.color = e.Colors.get_white(), this.pointSize = 8), this.w = o.w, this.e = o.e, o.n ? this.n = o.n : this.n = 0.9856076686 / (o.a * Math.sqrt(o.a)), this.t = o.t - _.baseDate, this.a = o.a, this.z = 0, this.orbitPos = 0, this.orbits = 0;
                }
              };
              (0, t.registerType)("KeplerVertex", [_, r, null]);
            }
          ),
          /***/
          "./esm/layers/color_map_container.js": (
            /*!*******************************************!*\
              !*** ./esm/layers/color_map_container.js ***!
              \*******************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ColorMapContainer: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../color.js */
                "./esm/color.js"
              ), _ = i(
                /*! ../graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              );
              function r() {
                this.colors = [];
              }
              r.colorTextures = {}, r.fromArgbList = function(c) {
                for (var l = new r(), g = t.ss.enumerate(c); g.moveNext(); ) {
                  var a = g.current;
                  l.colors.push(e.Color.fromArgb(a[0], a[1], a[2], a[3]));
                }
                return l;
              }, r.fromStringList = function(c) {
                for (var l = new r(), g = t.ss.enumerate(c); g.moveNext(); ) {
                  var a = g.current;
                  l.colors.push(e.Color.load(a));
                }
                return l;
              }, r.fromNamedColormap = function(c) {
                if (c == null)
                  return null;
                switch (c.toLowerCase()) {
                  case "viridis":
                    return r.viridis;
                  case "plasma":
                    return r.plasma;
                  case "inferno":
                    return r.inferno;
                  case "magma":
                    return r.magma;
                  case "cividis":
                    return r.cividis;
                  case "greys":
                    return r.greys;
                  case "gray":
                    return r.gray;
                  case "purples":
                    return r.purples;
                  case "blues":
                    return r.blues;
                  case "greens":
                    return r.greens;
                  case "oranges":
                    return r.oranges;
                  case "reds":
                    return r.reds;
                  case "rdylbu":
                    return r.rdYlBu;
                }
                return null;
              }, r._getTextureFromName = function(c, l) {
                var g = r.colorTextures[l];
                if (g == null) {
                  var a = r.fromNamedColormap(l);
                  a != null && (g = r._initColorTexture(c, a), r.colorTextures[l.toLowerCase()] = g);
                }
                return g;
              }, r.bindColorMapTexture = function(c, l) {
                var g = r._getTextureFromName(c, l);
                g == null && (g = r._getTextureFromName(c, "gray")), c.activeTexture(_.WEBGL.TEXTURE1), c.bindTexture(_.WEBGL.TEXTURE_2D, g);
              }, r._initColorTexture = function(c, l) {
                var g = c.createTexture();
                c.activeTexture(_.WEBGL.TEXTURE1), c.bindTexture(_.WEBGL.TEXTURE_2D, g), c.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_WRAP_S, _.WEBGL.CLAMP_TO_EDGE), c.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_WRAP_T, _.WEBGL.CLAMP_TO_EDGE);
                var a = r._extractColorArray(l.colors);
                return c.texImage2D(_.WEBGL.TEXTURE_2D, 0, _.WEBGL.RGB8, a.length / 3, 1, 0, _.WEBGL.RGB, _.WEBGL.UNSIGNED_BYTE, a), c.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_MIN_FILTER, _.WEBGL.NEAREST), c.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_MAG_FILTER, _.WEBGL.NEAREST), g;
              }, r._extractColorArray = function(c) {
                for (var l = 0, g = new Uint8Array(c.length * 3), a = t.ss.enumerate(c); a.moveNext(); ) {
                  var b = a.current;
                  g[l++] = b.r, g[l++] = b.g, g[l++] = b.b;
                }
                return g;
              };
              var o = {
                // Given a floating-point value in the range 0 to 1, find the color that is
                // the closest to it.
                findClosestColor: function(c) {
                  var l;
                  return c <= 0 ? this.colors[0] : c >= 1 ? this.colors[this.colors.length - 1] : (l = t.ss.truncate(c * this.colors.length), this.colors[l]);
                }
              };
              (0, n.registerType)("ColorMapContainer", [r, o, null]), r.viridis = r.fromStringList([
                "#440154",
                "#440256",
                "#450457",
                "#450559",
                "#46075a",
                "#46085c",
                "#460a5d",
                "#460b5e",
                "#470d60",
                "#470e61",
                "#471063",
                "#471164",
                "#471365",
                "#481467",
                "#481668",
                "#481769",
                "#48186a",
                "#481a6c",
                "#481b6d",
                "#481c6e",
                "#481d6f",
                "#481f70",
                "#482071",
                "#482173",
                "#482374",
                "#482475",
                "#482576",
                "#482677",
                "#482878",
                "#482979",
                "#472a7a",
                "#472c7a",
                "#472d7b",
                "#472e7c",
                "#472f7d",
                "#46307e",
                "#46327e",
                "#46337f",
                "#463480",
                "#453581",
                "#453781",
                "#453882",
                "#443983",
                "#443a83",
                "#443b84",
                "#433d84",
                "#433e85",
                "#423f85",
                "#424086",
                "#424186",
                "#414287",
                "#414487",
                "#404588",
                "#404688",
                "#3f4788",
                "#3f4889",
                "#3e4989",
                "#3e4a89",
                "#3e4c8a",
                "#3d4d8a",
                "#3d4e8a",
                "#3c4f8a",
                "#3c508b",
                "#3b518b",
                "#3b528b",
                "#3a538b",
                "#3a548c",
                "#39558c",
                "#39568c",
                "#38588c",
                "#38598c",
                "#375a8c",
                "#375b8d",
                "#365c8d",
                "#365d8d",
                "#355e8d",
                "#355f8d",
                "#34608d",
                "#34618d",
                "#33628d",
                "#33638d",
                "#32648e",
                "#32658e",
                "#31668e",
                "#31678e",
                "#31688e",
                "#30698e",
                "#306a8e",
                "#2f6b8e",
                "#2f6c8e",
                "#2e6d8e",
                "#2e6e8e",
                "#2e6f8e",
                "#2d708e",
                "#2d718e",
                "#2c718e",
                "#2c728e",
                "#2c738e",
                "#2b748e",
                "#2b758e",
                "#2a768e",
                "#2a778e",
                "#2a788e",
                "#29798e",
                "#297a8e",
                "#297b8e",
                "#287c8e",
                "#287d8e",
                "#277e8e",
                "#277f8e",
                "#27808e",
                "#26818e",
                "#26828e",
                "#26828e",
                "#25838e",
                "#25848e",
                "#25858e",
                "#24868e",
                "#24878e",
                "#23888e",
                "#23898e",
                "#238a8d",
                "#228b8d",
                "#228c8d",
                "#228d8d",
                "#218e8d",
                "#218f8d",
                "#21908d",
                "#21918c",
                "#20928c",
                "#20928c",
                "#20938c",
                "#1f948c",
                "#1f958b",
                "#1f968b",
                "#1f978b",
                "#1f988b",
                "#1f998a",
                "#1f9a8a",
                "#1e9b8a",
                "#1e9c89",
                "#1e9d89",
                "#1f9e89",
                "#1f9f88",
                "#1fa088",
                "#1fa188",
                "#1fa187",
                "#1fa287",
                "#20a386",
                "#20a486",
                "#21a585",
                "#21a685",
                "#22a785",
                "#22a884",
                "#23a983",
                "#24aa83",
                "#25ab82",
                "#25ac82",
                "#26ad81",
                "#27ad81",
                "#28ae80",
                "#29af7f",
                "#2ab07f",
                "#2cb17e",
                "#2db27d",
                "#2eb37c",
                "#2fb47c",
                "#31b57b",
                "#32b67a",
                "#34b679",
                "#35b779",
                "#37b878",
                "#38b977",
                "#3aba76",
                "#3bbb75",
                "#3dbc74",
                "#3fbc73",
                "#40bd72",
                "#42be71",
                "#44bf70",
                "#46c06f",
                "#48c16e",
                "#4ac16d",
                "#4cc26c",
                "#4ec36b",
                "#50c46a",
                "#52c569",
                "#54c568",
                "#56c667",
                "#58c765",
                "#5ac864",
                "#5cc863",
                "#5ec962",
                "#60ca60",
                "#63cb5f",
                "#65cb5e",
                "#67cc5c",
                "#69cd5b",
                "#6ccd5a",
                "#6ece58",
                "#70cf57",
                "#73d056",
                "#75d054",
                "#77d153",
                "#7ad151",
                "#7cd250",
                "#7fd34e",
                "#81d34d",
                "#84d44b",
                "#86d549",
                "#89d548",
                "#8bd646",
                "#8ed645",
                "#90d743",
                "#93d741",
                "#95d840",
                "#98d83e",
                "#9bd93c",
                "#9dd93b",
                "#a0da39",
                "#a2da37",
                "#a5db36",
                "#a8db34",
                "#aadc32",
                "#addc30",
                "#b0dd2f",
                "#b2dd2d",
                "#b5de2b",
                "#b8de29",
                "#bade28",
                "#bddf26",
                "#c0df25",
                "#c2df23",
                "#c5e021",
                "#c8e020",
                "#cae11f",
                "#cde11d",
                "#d0e11c",
                "#d2e21b",
                "#d5e21a",
                "#d8e219",
                "#dae319",
                "#dde318",
                "#dfe318",
                "#e2e418",
                "#e5e419",
                "#e7e419",
                "#eae51a",
                "#ece51b",
                "#efe51c",
                "#f1e51d",
                "#f4e61e",
                "#f6e620",
                "#f8e621",
                "#fbe723",
                "#fde725"
              ]), r.plasma = r.fromStringList([
                "#0d0887",
                "#100788",
                "#130789",
                "#16078a",
                "#19068c",
                "#1b068d",
                "#1d068e",
                "#20068f",
                "#220690",
                "#240691",
                "#260591",
                "#280592",
                "#2a0593",
                "#2c0594",
                "#2e0595",
                "#2f0596",
                "#310597",
                "#330597",
                "#350498",
                "#370499",
                "#38049a",
                "#3a049a",
                "#3c049b",
                "#3e049c",
                "#3f049c",
                "#41049d",
                "#43039e",
                "#44039e",
                "#46039f",
                "#48039f",
                "#4903a0",
                "#4b03a1",
                "#4c02a1",
                "#4e02a2",
                "#5002a2",
                "#5102a3",
                "#5302a3",
                "#5502a4",
                "#5601a4",
                "#5801a4",
                "#5901a5",
                "#5b01a5",
                "#5c01a6",
                "#5e01a6",
                "#6001a6",
                "#6100a7",
                "#6300a7",
                "#6400a7",
                "#6600a7",
                "#6700a8",
                "#6900a8",
                "#6a00a8",
                "#6c00a8",
                "#6e00a8",
                "#6f00a8",
                "#7100a8",
                "#7201a8",
                "#7401a8",
                "#7501a8",
                "#7701a8",
                "#7801a8",
                "#7a02a8",
                "#7b02a8",
                "#7d03a8",
                "#7e03a8",
                "#8004a8",
                "#8104a7",
                "#8305a7",
                "#8405a7",
                "#8606a6",
                "#8707a6",
                "#8808a6",
                "#8a09a5",
                "#8b0aa5",
                "#8d0ba5",
                "#8e0ca4",
                "#8f0da4",
                "#910ea3",
                "#920fa3",
                "#9410a2",
                "#9511a1",
                "#9613a1",
                "#9814a0",
                "#99159f",
                "#9a169f",
                "#9c179e",
                "#9d189d",
                "#9e199d",
                "#a01a9c",
                "#a11b9b",
                "#a21d9a",
                "#a31e9a",
                "#a51f99",
                "#a62098",
                "#a72197",
                "#a82296",
                "#aa2395",
                "#ab2494",
                "#ac2694",
                "#ad2793",
                "#ae2892",
                "#b02991",
                "#b12a90",
                "#b22b8f",
                "#b32c8e",
                "#b42e8d",
                "#b52f8c",
                "#b6308b",
                "#b7318a",
                "#b83289",
                "#ba3388",
                "#bb3488",
                "#bc3587",
                "#bd3786",
                "#be3885",
                "#bf3984",
                "#c03a83",
                "#c13b82",
                "#c23c81",
                "#c33d80",
                "#c43e7f",
                "#c5407e",
                "#c6417d",
                "#c7427c",
                "#c8437b",
                "#c9447a",
                "#ca457a",
                "#cb4679",
                "#cc4778",
                "#cc4977",
                "#cd4a76",
                "#ce4b75",
                "#cf4c74",
                "#d04d73",
                "#d14e72",
                "#d24f71",
                "#d35171",
                "#d45270",
                "#d5536f",
                "#d5546e",
                "#d6556d",
                "#d7566c",
                "#d8576b",
                "#d9586a",
                "#da5a6a",
                "#da5b69",
                "#db5c68",
                "#dc5d67",
                "#dd5e66",
                "#de5f65",
                "#de6164",
                "#df6263",
                "#e06363",
                "#e16462",
                "#e26561",
                "#e26660",
                "#e3685f",
                "#e4695e",
                "#e56a5d",
                "#e56b5d",
                "#e66c5c",
                "#e76e5b",
                "#e76f5a",
                "#e87059",
                "#e97158",
                "#e97257",
                "#ea7457",
                "#eb7556",
                "#eb7655",
                "#ec7754",
                "#ed7953",
                "#ed7a52",
                "#ee7b51",
                "#ef7c51",
                "#ef7e50",
                "#f07f4f",
                "#f0804e",
                "#f1814d",
                "#f1834c",
                "#f2844b",
                "#f3854b",
                "#f3874a",
                "#f48849",
                "#f48948",
                "#f58b47",
                "#f58c46",
                "#f68d45",
                "#f68f44",
                "#f79044",
                "#f79143",
                "#f79342",
                "#f89441",
                "#f89540",
                "#f9973f",
                "#f9983e",
                "#f99a3e",
                "#fa9b3d",
                "#fa9c3c",
                "#fa9e3b",
                "#fb9f3a",
                "#fba139",
                "#fba238",
                "#fca338",
                "#fca537",
                "#fca636",
                "#fca835",
                "#fca934",
                "#fdab33",
                "#fdac33",
                "#fdae32",
                "#fdaf31",
                "#fdb130",
                "#fdb22f",
                "#fdb42f",
                "#fdb52e",
                "#feb72d",
                "#feb82c",
                "#feba2c",
                "#febb2b",
                "#febd2a",
                "#febe2a",
                "#fec029",
                "#fdc229",
                "#fdc328",
                "#fdc527",
                "#fdc627",
                "#fdc827",
                "#fdca26",
                "#fdcb26",
                "#fccd25",
                "#fcce25",
                "#fcd025",
                "#fcd225",
                "#fbd324",
                "#fbd524",
                "#fbd724",
                "#fad824",
                "#fada24",
                "#f9dc24",
                "#f9dd25",
                "#f8df25",
                "#f8e125",
                "#f7e225",
                "#f7e425",
                "#f6e626",
                "#f6e826",
                "#f5e926",
                "#f5eb27",
                "#f4ed27",
                "#f3ee27",
                "#f3f027",
                "#f2f227",
                "#f1f426",
                "#f1f525",
                "#f0f724",
                "#f0f921"
              ]), r.inferno = r.fromStringList([
                "#000004",
                "#010005",
                "#010106",
                "#010108",
                "#02010a",
                "#02020c",
                "#02020e",
                "#030210",
                "#040312",
                "#040314",
                "#050417",
                "#060419",
                "#07051b",
                "#08051d",
                "#09061f",
                "#0a0722",
                "#0b0724",
                "#0c0826",
                "#0d0829",
                "#0e092b",
                "#10092d",
                "#110a30",
                "#120a32",
                "#140b34",
                "#150b37",
                "#160b39",
                "#180c3c",
                "#190c3e",
                "#1b0c41",
                "#1c0c43",
                "#1e0c45",
                "#1f0c48",
                "#210c4a",
                "#230c4c",
                "#240c4f",
                "#260c51",
                "#280b53",
                "#290b55",
                "#2b0b57",
                "#2d0b59",
                "#2f0a5b",
                "#310a5c",
                "#320a5e",
                "#340a5f",
                "#360961",
                "#380962",
                "#390963",
                "#3b0964",
                "#3d0965",
                "#3e0966",
                "#400a67",
                "#420a68",
                "#440a68",
                "#450a69",
                "#470b6a",
                "#490b6a",
                "#4a0c6b",
                "#4c0c6b",
                "#4d0d6c",
                "#4f0d6c",
                "#510e6c",
                "#520e6d",
                "#540f6d",
                "#550f6d",
                "#57106e",
                "#59106e",
                "#5a116e",
                "#5c126e",
                "#5d126e",
                "#5f136e",
                "#61136e",
                "#62146e",
                "#64156e",
                "#65156e",
                "#67166e",
                "#69166e",
                "#6a176e",
                "#6c186e",
                "#6d186e",
                "#6f196e",
                "#71196e",
                "#721a6e",
                "#741a6e",
                "#751b6e",
                "#771c6d",
                "#781c6d",
                "#7a1d6d",
                "#7c1d6d",
                "#7d1e6d",
                "#7f1e6c",
                "#801f6c",
                "#82206c",
                "#84206b",
                "#85216b",
                "#87216b",
                "#88226a",
                "#8a226a",
                "#8c2369",
                "#8d2369",
                "#8f2469",
                "#902568",
                "#922568",
                "#932667",
                "#952667",
                "#972766",
                "#982766",
                "#9a2865",
                "#9b2964",
                "#9d2964",
                "#9f2a63",
                "#a02a63",
                "#a22b62",
                "#a32c61",
                "#a52c60",
                "#a62d60",
                "#a82e5f",
                "#a92e5e",
                "#ab2f5e",
                "#ad305d",
                "#ae305c",
                "#b0315b",
                "#b1325a",
                "#b3325a",
                "#b43359",
                "#b63458",
                "#b73557",
                "#b93556",
                "#ba3655",
                "#bc3754",
                "#bd3853",
                "#bf3952",
                "#c03a51",
                "#c13a50",
                "#c33b4f",
                "#c43c4e",
                "#c63d4d",
                "#c73e4c",
                "#c83f4b",
                "#ca404a",
                "#cb4149",
                "#cc4248",
                "#ce4347",
                "#cf4446",
                "#d04545",
                "#d24644",
                "#d34743",
                "#d44842",
                "#d54a41",
                "#d74b3f",
                "#d84c3e",
                "#d94d3d",
                "#da4e3c",
                "#db503b",
                "#dd513a",
                "#de5238",
                "#df5337",
                "#e05536",
                "#e15635",
                "#e25734",
                "#e35933",
                "#e45a31",
                "#e55c30",
                "#e65d2f",
                "#e75e2e",
                "#e8602d",
                "#e9612b",
                "#ea632a",
                "#eb6429",
                "#eb6628",
                "#ec6726",
                "#ed6925",
                "#ee6a24",
                "#ef6c23",
                "#ef6e21",
                "#f06f20",
                "#f1711f",
                "#f1731d",
                "#f2741c",
                "#f3761b",
                "#f37819",
                "#f47918",
                "#f57b17",
                "#f57d15",
                "#f67e14",
                "#f68013",
                "#f78212",
                "#f78410",
                "#f8850f",
                "#f8870e",
                "#f8890c",
                "#f98b0b",
                "#f98c0a",
                "#f98e09",
                "#fa9008",
                "#fa9207",
                "#fa9407",
                "#fb9606",
                "#fb9706",
                "#fb9906",
                "#fb9b06",
                "#fb9d07",
                "#fc9f07",
                "#fca108",
                "#fca309",
                "#fca50a",
                "#fca60c",
                "#fca80d",
                "#fcaa0f",
                "#fcac11",
                "#fcae12",
                "#fcb014",
                "#fcb216",
                "#fcb418",
                "#fbb61a",
                "#fbb81d",
                "#fbba1f",
                "#fbbc21",
                "#fbbe23",
                "#fac026",
                "#fac228",
                "#fac42a",
                "#fac62d",
                "#f9c72f",
                "#f9c932",
                "#f9cb35",
                "#f8cd37",
                "#f8cf3a",
                "#f7d13d",
                "#f7d340",
                "#f6d543",
                "#f6d746",
                "#f5d949",
                "#f5db4c",
                "#f4dd4f",
                "#f4df53",
                "#f4e156",
                "#f3e35a",
                "#f3e55d",
                "#f2e661",
                "#f2e865",
                "#f2ea69",
                "#f1ec6d",
                "#f1ed71",
                "#f1ef75",
                "#f1f179",
                "#f2f27d",
                "#f2f482",
                "#f3f586",
                "#f3f68a",
                "#f4f88e",
                "#f5f992",
                "#f6fa96",
                "#f8fb9a",
                "#f9fc9d",
                "#fafda1",
                "#fcffa4"
              ]), r.magma = r.fromStringList([
                "#000004",
                "#010005",
                "#010106",
                "#010108",
                "#020109",
                "#02020b",
                "#02020d",
                "#03030f",
                "#030312",
                "#040414",
                "#050416",
                "#060518",
                "#06051a",
                "#07061c",
                "#08071e",
                "#090720",
                "#0a0822",
                "#0b0924",
                "#0c0926",
                "#0d0a29",
                "#0e0b2b",
                "#100b2d",
                "#110c2f",
                "#120d31",
                "#130d34",
                "#140e36",
                "#150e38",
                "#160f3b",
                "#180f3d",
                "#19103f",
                "#1a1042",
                "#1c1044",
                "#1d1147",
                "#1e1149",
                "#20114b",
                "#21114e",
                "#221150",
                "#241253",
                "#251255",
                "#271258",
                "#29115a",
                "#2a115c",
                "#2c115f",
                "#2d1161",
                "#2f1163",
                "#311165",
                "#331067",
                "#341069",
                "#36106b",
                "#38106c",
                "#390f6e",
                "#3b0f70",
                "#3d0f71",
                "#3f0f72",
                "#400f74",
                "#420f75",
                "#440f76",
                "#451077",
                "#471078",
                "#491078",
                "#4a1079",
                "#4c117a",
                "#4e117b",
                "#4f127b",
                "#51127c",
                "#52137c",
                "#54137d",
                "#56147d",
                "#57157e",
                "#59157e",
                "#5a167e",
                "#5c167f",
                "#5d177f",
                "#5f187f",
                "#601880",
                "#621980",
                "#641a80",
                "#651a80",
                "#671b80",
                "#681c81",
                "#6a1c81",
                "#6b1d81",
                "#6d1d81",
                "#6e1e81",
                "#701f81",
                "#721f81",
                "#732081",
                "#752181",
                "#762181",
                "#782281",
                "#792282",
                "#7b2382",
                "#7c2382",
                "#7e2482",
                "#802582",
                "#812581",
                "#832681",
                "#842681",
                "#862781",
                "#882781",
                "#892881",
                "#8b2981",
                "#8c2981",
                "#8e2a81",
                "#902a81",
                "#912b81",
                "#932b80",
                "#942c80",
                "#962c80",
                "#982d80",
                "#992d80",
                "#9b2e7f",
                "#9c2e7f",
                "#9e2f7f",
                "#a02f7f",
                "#a1307e",
                "#a3307e",
                "#a5317e",
                "#a6317d",
                "#a8327d",
                "#aa337d",
                "#ab337c",
                "#ad347c",
                "#ae347b",
                "#b0357b",
                "#b2357b",
                "#b3367a",
                "#b5367a",
                "#b73779",
                "#b83779",
                "#ba3878",
                "#bc3978",
                "#bd3977",
                "#bf3a77",
                "#c03a76",
                "#c23b75",
                "#c43c75",
                "#c53c74",
                "#c73d73",
                "#c83e73",
                "#ca3e72",
                "#cc3f71",
                "#cd4071",
                "#cf4070",
                "#d0416f",
                "#d2426f",
                "#d3436e",
                "#d5446d",
                "#d6456c",
                "#d8456c",
                "#d9466b",
                "#db476a",
                "#dc4869",
                "#de4968",
                "#df4a68",
                "#e04c67",
                "#e24d66",
                "#e34e65",
                "#e44f64",
                "#e55064",
                "#e75263",
                "#e85362",
                "#e95462",
                "#ea5661",
                "#eb5760",
                "#ec5860",
                "#ed5a5f",
                "#ee5b5e",
                "#ef5d5e",
                "#f05f5e",
                "#f1605d",
                "#f2625d",
                "#f2645c",
                "#f3655c",
                "#f4675c",
                "#f4695c",
                "#f56b5c",
                "#f66c5c",
                "#f66e5c",
                "#f7705c",
                "#f7725c",
                "#f8745c",
                "#f8765c",
                "#f9785d",
                "#f9795d",
                "#f97b5d",
                "#fa7d5e",
                "#fa7f5e",
                "#fa815f",
                "#fb835f",
                "#fb8560",
                "#fb8761",
                "#fc8961",
                "#fc8a62",
                "#fc8c63",
                "#fc8e64",
                "#fc9065",
                "#fd9266",
                "#fd9467",
                "#fd9668",
                "#fd9869",
                "#fd9a6a",
                "#fd9b6b",
                "#fe9d6c",
                "#fe9f6d",
                "#fea16e",
                "#fea36f",
                "#fea571",
                "#fea772",
                "#fea973",
                "#feaa74",
                "#feac76",
                "#feae77",
                "#feb078",
                "#feb27a",
                "#feb47b",
                "#feb67c",
                "#feb77e",
                "#feb97f",
                "#febb81",
                "#febd82",
                "#febf84",
                "#fec185",
                "#fec287",
                "#fec488",
                "#fec68a",
                "#fec88c",
                "#feca8d",
                "#fecc8f",
                "#fecd90",
                "#fecf92",
                "#fed194",
                "#fed395",
                "#fed597",
                "#fed799",
                "#fed89a",
                "#fdda9c",
                "#fddc9e",
                "#fddea0",
                "#fde0a1",
                "#fde2a3",
                "#fde3a5",
                "#fde5a7",
                "#fde7a9",
                "#fde9aa",
                "#fdebac",
                "#fcecae",
                "#fceeb0",
                "#fcf0b2",
                "#fcf2b4",
                "#fcf4b6",
                "#fcf6b8",
                "#fcf7b9",
                "#fcf9bb",
                "#fcfbbd",
                "#fcfdbf"
              ]), r.cividis = r.fromStringList([
                "#00224e",
                "#00234f",
                "#002451",
                "#002553",
                "#002554",
                "#002656",
                "#002758",
                "#002859",
                "#00285b",
                "#00295d",
                "#002a5f",
                "#002a61",
                "#002b62",
                "#002c64",
                "#002c66",
                "#002d68",
                "#002e6a",
                "#002e6c",
                "#002f6d",
                "#00306f",
                "#003070",
                "#003170",
                "#003171",
                "#013271",
                "#053371",
                "#083370",
                "#0c3470",
                "#0f3570",
                "#123570",
                "#143670",
                "#163770",
                "#18376f",
                "#1a386f",
                "#1c396f",
                "#1e3a6f",
                "#203a6f",
                "#213b6e",
                "#233c6e",
                "#243c6e",
                "#263d6e",
                "#273e6e",
                "#293f6e",
                "#2a3f6d",
                "#2b406d",
                "#2d416d",
                "#2e416d",
                "#2f426d",
                "#31436d",
                "#32436d",
                "#33446d",
                "#34456c",
                "#35456c",
                "#36466c",
                "#38476c",
                "#39486c",
                "#3a486c",
                "#3b496c",
                "#3c4a6c",
                "#3d4a6c",
                "#3e4b6c",
                "#3f4c6c",
                "#404c6c",
                "#414d6c",
                "#424e6c",
                "#434e6c",
                "#444f6c",
                "#45506c",
                "#46516c",
                "#47516c",
                "#48526c",
                "#49536c",
                "#4a536c",
                "#4b546c",
                "#4c556c",
                "#4d556c",
                "#4e566c",
                "#4f576c",
                "#50576c",
                "#51586d",
                "#52596d",
                "#535a6d",
                "#545a6d",
                "#555b6d",
                "#555c6d",
                "#565c6d",
                "#575d6d",
                "#585e6d",
                "#595e6e",
                "#5a5f6e",
                "#5b606e",
                "#5c616e",
                "#5d616e",
                "#5e626e",
                "#5e636f",
                "#5f636f",
                "#60646f",
                "#61656f",
                "#62656f",
                "#636670",
                "#646770",
                "#656870",
                "#656870",
                "#666970",
                "#676a71",
                "#686a71",
                "#696b71",
                "#6a6c71",
                "#6b6d72",
                "#6c6d72",
                "#6c6e72",
                "#6d6f72",
                "#6e6f73",
                "#6f7073",
                "#707173",
                "#717274",
                "#727274",
                "#727374",
                "#737475",
                "#747475",
                "#757575",
                "#767676",
                "#777776",
                "#777777",
                "#787877",
                "#797977",
                "#7a7a78",
                "#7b7a78",
                "#7c7b78",
                "#7d7c78",
                "#7e7c78",
                "#7e7d78",
                "#7f7e78",
                "#807f78",
                "#817f78",
                "#828079",
                "#838179",
                "#848279",
                "#858279",
                "#868379",
                "#878478",
                "#888578",
                "#898578",
                "#8a8678",
                "#8b8778",
                "#8c8878",
                "#8d8878",
                "#8e8978",
                "#8f8a78",
                "#908b78",
                "#918b78",
                "#928c78",
                "#928d78",
                "#938e78",
                "#948e77",
                "#958f77",
                "#969077",
                "#979177",
                "#989277",
                "#999277",
                "#9a9376",
                "#9b9476",
                "#9c9576",
                "#9d9576",
                "#9e9676",
                "#9f9775",
                "#a09875",
                "#a19975",
                "#a29975",
                "#a39a74",
                "#a49b74",
                "#a59c74",
                "#a69c74",
                "#a79d73",
                "#a89e73",
                "#a99f73",
                "#aaa073",
                "#aba072",
                "#aca172",
                "#ada272",
                "#aea371",
                "#afa471",
                "#b0a571",
                "#b1a570",
                "#b3a670",
                "#b4a76f",
                "#b5a86f",
                "#b6a96f",
                "#b7a96e",
                "#b8aa6e",
                "#b9ab6d",
                "#baac6d",
                "#bbad6d",
                "#bcae6c",
                "#bdae6c",
                "#beaf6b",
                "#bfb06b",
                "#c0b16a",
                "#c1b26a",
                "#c2b369",
                "#c3b369",
                "#c4b468",
                "#c5b568",
                "#c6b667",
                "#c7b767",
                "#c8b866",
                "#c9b965",
                "#cbb965",
                "#ccba64",
                "#cdbb63",
                "#cebc63",
                "#cfbd62",
                "#d0be62",
                "#d1bf61",
                "#d2c060",
                "#d3c05f",
                "#d4c15f",
                "#d5c25e",
                "#d6c35d",
                "#d7c45c",
                "#d9c55c",
                "#dac65b",
                "#dbc75a",
                "#dcc859",
                "#ddc858",
                "#dec958",
                "#dfca57",
                "#e0cb56",
                "#e1cc55",
                "#e2cd54",
                "#e4ce53",
                "#e5cf52",
                "#e6d051",
                "#e7d150",
                "#e8d24f",
                "#e9d34e",
                "#ead34c",
                "#ebd44b",
                "#edd54a",
                "#eed649",
                "#efd748",
                "#f0d846",
                "#f1d945",
                "#f2da44",
                "#f3db42",
                "#f5dc41",
                "#f6dd3f",
                "#f7de3e",
                "#f8df3c",
                "#f9e03a",
                "#fbe138",
                "#fce236",
                "#fde334",
                "#fee434",
                "#fee535",
                "#fee636",
                "#fee838"
              ]), r.greys = r.fromStringList([
                "#ffffff",
                "#ffffff",
                "#fefefe",
                "#fefefe",
                "#fdfdfd",
                "#fdfdfd",
                "#fcfcfc",
                "#fcfcfc",
                "#fbfbfb",
                "#fbfbfb",
                "#fafafa",
                "#fafafa",
                "#f9f9f9",
                "#f9f9f9",
                "#f8f8f8",
                "#f8f8f8",
                "#f7f7f7",
                "#f7f7f7",
                "#f7f7f7",
                "#f6f6f6",
                "#f6f6f6",
                "#f5f5f5",
                "#f5f5f5",
                "#f4f4f4",
                "#f4f4f4",
                "#f3f3f3",
                "#f3f3f3",
                "#f2f2f2",
                "#f2f2f2",
                "#f1f1f1",
                "#f1f1f1",
                "#f0f0f0",
                "#f0f0f0",
                "#efefef",
                "#eeeeee",
                "#eeeeee",
                "#ededed",
                "#ececec",
                "#ececec",
                "#ebebeb",
                "#eaeaea",
                "#e9e9e9",
                "#e9e9e9",
                "#e8e8e8",
                "#e7e7e7",
                "#e7e7e7",
                "#e6e6e6",
                "#e5e5e5",
                "#e4e4e4",
                "#e4e4e4",
                "#e3e3e3",
                "#e2e2e2",
                "#e1e1e1",
                "#e1e1e1",
                "#e0e0e0",
                "#dfdfdf",
                "#dfdfdf",
                "#dedede",
                "#dddddd",
                "#dcdcdc",
                "#dcdcdc",
                "#dbdbdb",
                "#dadada",
                "#dadada",
                "#d9d9d9",
                "#d8d8d8",
                "#d7d7d7",
                "#d6d6d6",
                "#d5d5d5",
                "#d4d4d4",
                "#d4d4d4",
                "#d3d3d3",
                "#d2d2d2",
                "#d1d1d1",
                "#d0d0d0",
                "#cfcfcf",
                "#cecece",
                "#cdcdcd",
                "#cccccc",
                "#cccccc",
                "#cbcbcb",
                "#cacaca",
                "#c9c9c9",
                "#c8c8c8",
                "#c7c7c7",
                "#c6c6c6",
                "#c5c5c5",
                "#c5c5c5",
                "#c4c4c4",
                "#c3c3c3",
                "#c2c2c2",
                "#c1c1c1",
                "#c0c0c0",
                "#bfbfbf",
                "#bebebe",
                "#bebebe",
                "#bdbdbd",
                "#bbbbbb",
                "#bababa",
                "#b9b9b9",
                "#b8b8b8",
                "#b6b6b6",
                "#b5b5b5",
                "#b4b4b4",
                "#b3b3b3",
                "#b2b2b2",
                "#b0b0b0",
                "#afafaf",
                "#aeaeae",
                "#adadad",
                "#ababab",
                "#aaaaaa",
                "#a9a9a9",
                "#a8a8a8",
                "#a7a7a7",
                "#a5a5a5",
                "#a4a4a4",
                "#a3a3a3",
                "#a2a2a2",
                "#a0a0a0",
                "#9f9f9f",
                "#9e9e9e",
                "#9d9d9d",
                "#9c9c9c",
                "#9a9a9a",
                "#999999",
                "#989898",
                "#979797",
                "#959595",
                "#949494",
                "#939393",
                "#929292",
                "#919191",
                "#909090",
                "#8f8f8f",
                "#8e8e8e",
                "#8d8d8d",
                "#8c8c8c",
                "#8a8a8a",
                "#898989",
                "#888888",
                "#878787",
                "#868686",
                "#858585",
                "#848484",
                "#838383",
                "#828282",
                "#818181",
                "#7f7f7f",
                "#7e7e7e",
                "#7d7d7d",
                "#7c7c7c",
                "#7b7b7b",
                "#7a7a7a",
                "#797979",
                "#787878",
                "#777777",
                "#767676",
                "#757575",
                "#737373",
                "#727272",
                "#717171",
                "#707070",
                "#6f6f6f",
                "#6e6e6e",
                "#6d6d6d",
                "#6c6c6c",
                "#6b6b6b",
                "#6a6a6a",
                "#696969",
                "#686868",
                "#676767",
                "#666666",
                "#656565",
                "#646464",
                "#636363",
                "#626262",
                "#616161",
                "#606060",
                "#5f5f5f",
                "#5e5e5e",
                "#5d5d5d",
                "#5c5c5c",
                "#5b5b5b",
                "#5a5a5a",
                "#585858",
                "#575757",
                "#565656",
                "#555555",
                "#545454",
                "#535353",
                "#525252",
                "#515151",
                "#505050",
                "#4e4e4e",
                "#4d4d4d",
                "#4b4b4b",
                "#4a4a4a",
                "#484848",
                "#474747",
                "#464646",
                "#444444",
                "#434343",
                "#414141",
                "#404040",
                "#3f3f3f",
                "#3d3d3d",
                "#3c3c3c",
                "#3a3a3a",
                "#393939",
                "#383838",
                "#363636",
                "#353535",
                "#333333",
                "#323232",
                "#303030",
                "#2f2f2f",
                "#2e2e2e",
                "#2c2c2c",
                "#2b2b2b",
                "#292929",
                "#282828",
                "#272727",
                "#252525",
                "#242424",
                "#232323",
                "#222222",
                "#212121",
                "#1f1f1f",
                "#1e1e1e",
                "#1d1d1d",
                "#1c1c1c",
                "#1b1b1b",
                "#1a1a1a",
                "#181818",
                "#171717",
                "#161616",
                "#151515",
                "#141414",
                "#131313",
                "#111111",
                "#101010",
                "#0f0f0f",
                "#0e0e0e",
                "#0d0d0d",
                "#0c0c0c",
                "#0a0a0a",
                "#090909",
                "#080808",
                "#070707",
                "#060606",
                "#050505",
                "#030303",
                "#020202",
                "#010101",
                "#000000"
              ]), r.gray = r.fromStringList([
                "#000000",
                "#010101",
                "#020202",
                "#030303",
                "#040404",
                "#050505",
                "#060606",
                "#070707",
                "#080808",
                "#090909",
                "#0a0a0a",
                "#0b0b0b",
                "#0c0c0c",
                "#0d0d0d",
                "#0e0e0e",
                "#0f0f0f",
                "#101010",
                "#111111",
                "#121212",
                "#131313",
                "#141414",
                "#151515",
                "#161616",
                "#171717",
                "#181818",
                "#191919",
                "#1a1a1a",
                "#1b1b1b",
                "#1c1c1c",
                "#1d1d1d",
                "#1e1e1e",
                "#1f1f1f",
                "#202020",
                "#212121",
                "#222222",
                "#232323",
                "#242424",
                "#252525",
                "#262626",
                "#272727",
                "#282828",
                "#292929",
                "#2a2a2a",
                "#2b2b2b",
                "#2c2c2c",
                "#2d2d2d",
                "#2e2e2e",
                "#2f2f2f",
                "#303030",
                "#313131",
                "#323232",
                "#333333",
                "#343434",
                "#353535",
                "#363636",
                "#373737",
                "#383838",
                "#393939",
                "#3a3a3a",
                "#3b3b3b",
                "#3c3c3c",
                "#3d3d3d",
                "#3e3e3e",
                "#3f3f3f",
                "#404040",
                "#414141",
                "#424242",
                "#434343",
                "#444444",
                "#454545",
                "#464646",
                "#474747",
                "#484848",
                "#494949",
                "#4a4a4a",
                "#4b4b4b",
                "#4c4c4c",
                "#4d4d4d",
                "#4e4e4e",
                "#4f4f4f",
                "#505050",
                "#515151",
                "#525252",
                "#535353",
                "#545454",
                "#555555",
                "#565656",
                "#575757",
                "#585858",
                "#595959",
                "#5a5a5a",
                "#5b5b5b",
                "#5c5c5c",
                "#5d5d5d",
                "#5e5e5e",
                "#5f5f5f",
                "#606060",
                "#616161",
                "#626262",
                "#636363",
                "#646464",
                "#656565",
                "#666666",
                "#676767",
                "#686868",
                "#696969",
                "#6a6a6a",
                "#6b6b6b",
                "#6c6c6c",
                "#6d6d6d",
                "#6e6e6e",
                "#6f6f6f",
                "#707070",
                "#717171",
                "#727272",
                "#737373",
                "#747474",
                "#757575",
                "#767676",
                "#777777",
                "#787878",
                "#797979",
                "#7a7a7a",
                "#7b7b7b",
                "#7c7c7c",
                "#7d7d7d",
                "#7e7e7e",
                "#7f7f7f",
                "#808080",
                "#818181",
                "#828282",
                "#838383",
                "#848484",
                "#858585",
                "#868686",
                "#878787",
                "#888888",
                "#898989",
                "#8a8a8a",
                "#8b8b8b",
                "#8c8c8c",
                "#8d8d8d",
                "#8e8e8e",
                "#8f8f8f",
                "#909090",
                "#919191",
                "#929292",
                "#939393",
                "#949494",
                "#959595",
                "#969696",
                "#979797",
                "#989898",
                "#999999",
                "#9a9a9a",
                "#9b9b9b",
                "#9c9c9c",
                "#9d9d9d",
                "#9e9e9e",
                "#9f9f9f",
                "#a0a0a0",
                "#a1a1a1",
                "#a2a2a2",
                "#a3a3a3",
                "#a4a4a4",
                "#a5a5a5",
                "#a6a6a6",
                "#a7a7a7",
                "#a8a8a8",
                "#a9a9a9",
                "#aaaaaa",
                "#ababab",
                "#acacac",
                "#adadad",
                "#aeaeae",
                "#afafaf",
                "#b0b0b0",
                "#b1b1b1",
                "#b2b2b2",
                "#b3b3b3",
                "#b4b4b4",
                "#b5b5b5",
                "#b6b6b6",
                "#b7b7b7",
                "#b8b8b8",
                "#b9b9b9",
                "#bababa",
                "#bbbbbb",
                "#bcbcbc",
                "#bdbdbd",
                "#bebebe",
                "#bfbfbf",
                "#c0c0c0",
                "#c1c1c1",
                "#c2c2c2",
                "#c3c3c3",
                "#c4c4c4",
                "#c5c5c5",
                "#c6c6c6",
                "#c7c7c7",
                "#c8c8c8",
                "#c9c9c9",
                "#cacaca",
                "#cbcbcb",
                "#cccccc",
                "#cdcdcd",
                "#cecece",
                "#cfcfcf",
                "#d0d0d0",
                "#d1d1d1",
                "#d2d2d2",
                "#d3d3d3",
                "#d4d4d4",
                "#d5d5d5",
                "#d6d6d6",
                "#d7d7d7",
                "#d8d8d8",
                "#d9d9d9",
                "#dadada",
                "#dbdbdb",
                "#dcdcdc",
                "#dddddd",
                "#dedede",
                "#dfdfdf",
                "#e0e0e0",
                "#e1e1e1",
                "#e2e2e2",
                "#e3e3e3",
                "#e4e4e4",
                "#e5e5e5",
                "#e6e6e6",
                "#e7e7e7",
                "#e8e8e8",
                "#e9e9e9",
                "#eaeaea",
                "#ebebeb",
                "#ececec",
                "#ededed",
                "#eeeeee",
                "#efefef",
                "#f0f0f0",
                "#f1f1f1",
                "#f2f2f2",
                "#f3f3f3",
                "#f4f4f4",
                "#f5f5f5",
                "#f6f6f6",
                "#f7f7f7",
                "#f8f8f8",
                "#f9f9f9",
                "#fafafa",
                "#fbfbfb",
                "#fcfcfc",
                "#fdfdfd",
                "#fefefe",
                "#ffffff"
              ]), r.purples = r.fromStringList([
                "#fcfbfd",
                "#fcfbfd",
                "#fbfafc",
                "#fbfafc",
                "#faf9fc",
                "#faf9fc",
                "#faf8fb",
                "#f9f8fb",
                "#f9f7fb",
                "#f8f7fb",
                "#f8f7fa",
                "#f8f6fa",
                "#f7f6fa",
                "#f7f5fa",
                "#f6f5f9",
                "#f6f4f9",
                "#f5f4f9",
                "#f5f4f9",
                "#f5f3f8",
                "#f4f3f8",
                "#f4f2f8",
                "#f3f2f8",
                "#f3f1f7",
                "#f3f1f7",
                "#f2f0f7",
                "#f2f0f7",
                "#f1f0f6",
                "#f1eff6",
                "#f1eff6",
                "#f0eef6",
                "#f0eef5",
                "#efedf5",
                "#efedf5",
                "#eeecf5",
                "#eeecf4",
                "#edebf4",
                "#ecebf4",
                "#eceaf3",
                "#ebe9f3",
                "#eae9f3",
                "#eae8f2",
                "#e9e8f2",
                "#e8e7f2",
                "#e8e6f2",
                "#e7e6f1",
                "#e6e5f1",
                "#e6e5f1",
                "#e5e4f0",
                "#e4e3f0",
                "#e4e3f0",
                "#e3e2ef",
                "#e2e2ef",
                "#e2e1ef",
                "#e1e0ee",
                "#e0e0ee",
                "#e0dfee",
                "#dfdfed",
                "#dedeed",
                "#dedded",
                "#ddddec",
                "#dcdcec",
                "#dcdcec",
                "#dbdbec",
                "#dadaeb",
                "#dadaeb",
                "#d9d9ea",
                "#d8d8ea",
                "#d7d7e9",
                "#d6d6e9",
                "#d5d5e9",
                "#d4d4e8",
                "#d3d3e8",
                "#d2d2e7",
                "#d1d2e7",
                "#d0d1e6",
                "#cfd0e6",
                "#cecfe5",
                "#cecee5",
                "#cdcde4",
                "#cccce4",
                "#cbcbe3",
                "#cacae3",
                "#c9c9e2",
                "#c8c8e2",
                "#c7c8e1",
                "#c6c7e1",
                "#c5c6e1",
                "#c4c5e0",
                "#c3c4e0",
                "#c2c3df",
                "#c1c2df",
                "#c0c1de",
                "#bfc0de",
                "#bebfdd",
                "#bebedd",
                "#bdbedc",
                "#bcbddc",
                "#bbbbdb",
                "#babadb",
                "#b9b9da",
                "#b8b8d9",
                "#b7b7d9",
                "#b6b6d8",
                "#b5b5d7",
                "#b4b4d7",
                "#b3b3d6",
                "#b2b2d5",
                "#b1b1d5",
                "#b0afd4",
                "#afaed4",
                "#aeadd3",
                "#aeacd2",
                "#adabd2",
                "#acaad1",
                "#aba9d0",
                "#aaa8d0",
                "#a9a7cf",
                "#a8a6cf",
                "#a7a4ce",
                "#a6a3cd",
                "#a5a2cd",
                "#a4a1cc",
                "#a3a0cb",
                "#a29fcb",
                "#a19eca",
                "#a09dca",
                "#9f9cc9",
                "#9e9bc8",
                "#9e9ac8",
                "#9d99c7",
                "#9c98c7",
                "#9b97c6",
                "#9a96c6",
                "#9995c6",
                "#9894c5",
                "#9793c5",
                "#9692c4",
                "#9591c4",
                "#9490c3",
                "#9390c3",
                "#928fc3",
                "#918ec2",
                "#908dc2",
                "#8f8cc1",
                "#8e8bc1",
                "#8e8ac0",
                "#8d89c0",
                "#8c88bf",
                "#8b87bf",
                "#8a86bf",
                "#8986be",
                "#8885be",
                "#8784bd",
                "#8683bd",
                "#8582bc",
                "#8481bc",
                "#8380bb",
                "#827fbb",
                "#817ebb",
                "#807dba",
                "#807cba",
                "#7f7bb9",
                "#7e79b8",
                "#7d78b7",
                "#7d77b7",
                "#7c75b6",
                "#7b74b5",
                "#7b72b4",
                "#7a71b4",
                "#7970b3",
                "#796eb2",
                "#786db2",
                "#776cb1",
                "#776ab0",
                "#7669af",
                "#7567af",
                "#7566ae",
                "#7465ad",
                "#7363ad",
                "#7262ac",
                "#7261ab",
                "#715faa",
                "#705eaa",
                "#705ca9",
                "#6f5ba8",
                "#6e5aa8",
                "#6e58a7",
                "#6d57a6",
                "#6c55a5",
                "#6c54a5",
                "#6b53a4",
                "#6a51a3",
                "#6950a3",
                "#694fa2",
                "#684da1",
                "#674ca1",
                "#674ba0",
                "#66499f",
                "#65489f",
                "#65479e",
                "#64459e",
                "#63449d",
                "#63439c",
                "#62429c",
                "#61409b",
                "#613f9a",
                "#603e9a",
                "#5f3c99",
                "#5e3b98",
                "#5e3a98",
                "#5d3897",
                "#5c3797",
                "#5c3696",
                "#5b3495",
                "#5a3395",
                "#5a3294",
                "#593093",
                "#582f93",
                "#582e92",
                "#572c92",
                "#562b91",
                "#552a90",
                "#552890",
                "#54278f",
                "#53268f",
                "#53258e",
                "#52238d",
                "#51228d",
                "#51218c",
                "#50208c",
                "#4f1f8b",
                "#4f1d8b",
                "#4e1c8a",
                "#4d1b89",
                "#4d1a89",
                "#4c1888",
                "#4c1788",
                "#4b1687",
                "#4a1587",
                "#4a1486",
                "#491285",
                "#481185",
                "#481084",
                "#470f84",
                "#460d83",
                "#460c83",
                "#450b82",
                "#440a82",
                "#440981",
                "#430780",
                "#420680",
                "#42057f",
                "#41047f",
                "#40027e",
                "#40017e",
                "#3f007d"
              ]), r.blues = r.fromStringList([
                "#f7fbff",
                "#f6faff",
                "#f5fafe",
                "#f5f9fe",
                "#f4f9fe",
                "#f3f8fe",
                "#f2f8fd",
                "#f2f7fd",
                "#f1f7fd",
                "#f0f6fd",
                "#eff6fc",
                "#eef5fc",
                "#eef5fc",
                "#edf4fc",
                "#ecf4fb",
                "#ebf3fb",
                "#eaf3fb",
                "#eaf2fb",
                "#e9f2fa",
                "#e8f1fa",
                "#e7f1fa",
                "#e7f0fa",
                "#e6f0f9",
                "#e5eff9",
                "#e4eff9",
                "#e3eef9",
                "#e3eef8",
                "#e2edf8",
                "#e1edf8",
                "#e0ecf8",
                "#dfecf7",
                "#dfebf7",
                "#deebf7",
                "#ddeaf7",
                "#dceaf6",
                "#dce9f6",
                "#dbe9f6",
                "#dae8f6",
                "#d9e8f5",
                "#d9e7f5",
                "#d8e7f5",
                "#d7e6f5",
                "#d6e6f4",
                "#d6e5f4",
                "#d5e5f4",
                "#d4e4f4",
                "#d3e4f3",
                "#d3e3f3",
                "#d2e3f3",
                "#d1e2f3",
                "#d0e2f2",
                "#d0e1f2",
                "#cfe1f2",
                "#cee0f2",
                "#cde0f1",
                "#cddff1",
                "#ccdff1",
                "#cbdef1",
                "#cadef0",
                "#caddf0",
                "#c9ddf0",
                "#c8dcf0",
                "#c7dcef",
                "#c7dbef",
                "#c6dbef",
                "#c4daee",
                "#c3daee",
                "#c2d9ee",
                "#c1d9ed",
                "#bfd8ed",
                "#bed8ec",
                "#bdd7ec",
                "#bcd7eb",
                "#bad6eb",
                "#b9d6ea",
                "#b8d5ea",
                "#b7d4ea",
                "#b5d4e9",
                "#b4d3e9",
                "#b3d3e8",
                "#b2d2e8",
                "#b0d2e7",
                "#afd1e7",
                "#aed1e7",
                "#add0e6",
                "#abd0e6",
                "#aacfe5",
                "#a9cfe5",
                "#a8cee4",
                "#a6cee4",
                "#a5cde3",
                "#a4cce3",
                "#a3cce3",
                "#a1cbe2",
                "#a0cbe2",
                "#9fcae1",
                "#9dcae1",
                "#9cc9e1",
                "#9ac8e0",
                "#99c7e0",
                "#97c6df",
                "#95c5df",
                "#94c4df",
                "#92c4de",
                "#91c3de",
                "#8fc2de",
                "#8dc1dd",
                "#8cc0dd",
                "#8abfdd",
                "#89bedc",
                "#87bddc",
                "#85bcdc",
                "#84bcdb",
                "#82bbdb",
                "#81badb",
                "#7fb9da",
                "#7db8da",
                "#7cb7da",
                "#7ab6d9",
                "#79b5d9",
                "#77b5d9",
                "#75b4d8",
                "#74b3d8",
                "#72b2d8",
                "#71b1d7",
                "#6fb0d7",
                "#6dafd7",
                "#6caed6",
                "#6aaed6",
                "#69add5",
                "#68acd5",
                "#66abd4",
                "#65aad4",
                "#64a9d3",
                "#63a8d3",
                "#61a7d2",
                "#60a7d2",
                "#5fa6d1",
                "#5da5d1",
                "#5ca4d0",
                "#5ba3d0",
                "#5aa2cf",
                "#58a1cf",
                "#57a0ce",
                "#56a0ce",
                "#549fcd",
                "#539ecd",
                "#529dcc",
                "#519ccc",
                "#4f9bcb",
                "#4e9acb",
                "#4d99ca",
                "#4b98ca",
                "#4a98c9",
                "#4997c9",
                "#4896c8",
                "#4695c8",
                "#4594c7",
                "#4493c7",
                "#4292c6",
                "#4191c6",
                "#4090c5",
                "#3f8fc5",
                "#3e8ec4",
                "#3d8dc4",
                "#3c8cc3",
                "#3b8bc2",
                "#3a8ac2",
                "#3989c1",
                "#3888c1",
                "#3787c0",
                "#3686c0",
                "#3585bf",
                "#3484bf",
                "#3383be",
                "#3282be",
                "#3181bd",
                "#3080bd",
                "#2f7fbc",
                "#2e7ebc",
                "#2d7dbb",
                "#2c7cba",
                "#2b7bba",
                "#2a7ab9",
                "#2979b9",
                "#2777b8",
                "#2676b8",
                "#2575b7",
                "#2474b7",
                "#2373b6",
                "#2272b6",
                "#2171b5",
                "#2070b4",
                "#206fb4",
                "#1f6eb3",
                "#1e6db2",
                "#1d6cb1",
                "#1c6bb0",
                "#1c6ab0",
                "#1b69af",
                "#1a68ae",
                "#1967ad",
                "#1966ad",
                "#1865ac",
                "#1764ab",
                "#1663aa",
                "#1562a9",
                "#1561a9",
                "#1460a8",
                "#135fa7",
                "#125ea6",
                "#125da6",
                "#115ca5",
                "#105ba4",
                "#0f5aa3",
                "#0e59a2",
                "#0e58a2",
                "#0d57a1",
                "#0c56a0",
                "#0b559f",
                "#0a549e",
                "#0a539e",
                "#09529d",
                "#08519c",
                "#08509b",
                "#084f99",
                "#084e98",
                "#084d96",
                "#084c95",
                "#084b93",
                "#084a91",
                "#084990",
                "#08488e",
                "#08478d",
                "#08468b",
                "#08458a",
                "#084488",
                "#084387",
                "#084285",
                "#084184",
                "#084082",
                "#083e81",
                "#083d7f",
                "#083c7d",
                "#083b7c",
                "#083a7a",
                "#083979",
                "#083877",
                "#083776",
                "#083674",
                "#083573",
                "#083471",
                "#083370",
                "#08326e",
                "#08316d",
                "#08306b"
              ]), r.greens = r.fromStringList([
                "#f7fcf5",
                "#f6fcf4",
                "#f6fcf4",
                "#f5fbf3",
                "#f5fbf2",
                "#f4fbf2",
                "#f4fbf1",
                "#f3faf0",
                "#f2faf0",
                "#f2faef",
                "#f1faee",
                "#f1faee",
                "#f0f9ed",
                "#f0f9ec",
                "#eff9ec",
                "#eff9eb",
                "#eef8ea",
                "#edf8ea",
                "#edf8e9",
                "#ecf8e8",
                "#ecf8e8",
                "#ebf7e7",
                "#ebf7e7",
                "#eaf7e6",
                "#e9f7e5",
                "#e9f7e5",
                "#e8f6e4",
                "#e8f6e3",
                "#e7f6e3",
                "#e7f6e2",
                "#e6f5e1",
                "#e5f5e1",
                "#e5f5e0",
                "#e4f5df",
                "#e3f4de",
                "#e2f4dd",
                "#e1f3dc",
                "#e0f3db",
                "#dff3da",
                "#def2d9",
                "#ddf2d8",
                "#dcf2d7",
                "#dbf1d6",
                "#dbf1d5",
                "#daf0d4",
                "#d9f0d3",
                "#d8f0d2",
                "#d7efd1",
                "#d6efd0",
                "#d5efcf",
                "#d4eece",
                "#d3eecd",
                "#d2edcc",
                "#d1edcb",
                "#d0edca",
                "#cfecc9",
                "#ceecc8",
                "#cdecc7",
                "#ccebc6",
                "#cbebc5",
                "#cbeac4",
                "#caeac3",
                "#c9eac2",
                "#c8e9c1",
                "#c7e9c0",
                "#c6e8bf",
                "#c4e8bd",
                "#c3e7bc",
                "#c2e7bb",
                "#c1e6ba",
                "#c0e6b9",
                "#bee5b8",
                "#bde5b6",
                "#bce4b5",
                "#bbe4b4",
                "#bae3b3",
                "#b8e3b2",
                "#b7e2b1",
                "#b6e2af",
                "#b5e1ae",
                "#b4e1ad",
                "#b2e0ac",
                "#b1e0ab",
                "#b0dfaa",
                "#afdfa8",
                "#aedea7",
                "#acdea6",
                "#abdda5",
                "#aadda4",
                "#a9dca3",
                "#a8dca2",
                "#a7dba0",
                "#a5db9f",
                "#a4da9e",
                "#a3da9d",
                "#a2d99c",
                "#a0d99b",
                "#9fd899",
                "#9ed798",
                "#9cd797",
                "#9bd696",
                "#99d595",
                "#98d594",
                "#97d492",
                "#95d391",
                "#94d390",
                "#92d28f",
                "#91d28e",
                "#90d18d",
                "#8ed08b",
                "#8dd08a",
                "#8bcf89",
                "#8ace88",
                "#88ce87",
                "#87cd86",
                "#86cc85",
                "#84cc83",
                "#83cb82",
                "#81ca81",
                "#80ca80",
                "#7fc97f",
                "#7dc87e",
                "#7cc87c",
                "#7ac77b",
                "#79c67a",
                "#78c679",
                "#76c578",
                "#75c477",
                "#73c476",
                "#72c375",
                "#70c274",
                "#6ec173",
                "#6dc072",
                "#6bc072",
                "#6abf71",
                "#68be70",
                "#66bd6f",
                "#65bd6f",
                "#63bc6e",
                "#62bb6d",
                "#60ba6c",
                "#5eb96b",
                "#5db96b",
                "#5bb86a",
                "#5ab769",
                "#58b668",
                "#56b567",
                "#55b567",
                "#53b466",
                "#52b365",
                "#50b264",
                "#4eb264",
                "#4db163",
                "#4bb062",
                "#4aaf61",
                "#48ae60",
                "#46ae60",
                "#45ad5f",
                "#43ac5e",
                "#42ab5d",
                "#40aa5d",
                "#3fa95c",
                "#3fa85b",
                "#3ea75a",
                "#3da65a",
                "#3ca559",
                "#3ba458",
                "#3aa357",
                "#39a257",
                "#38a156",
                "#37a055",
                "#369f54",
                "#359e53",
                "#349d53",
                "#339c52",
                "#329b51",
                "#319a50",
                "#309950",
                "#2f984f",
                "#2f974e",
                "#2e964d",
                "#2d954d",
                "#2c944c",
                "#2b934b",
                "#2a924a",
                "#29914a",
                "#289049",
                "#278f48",
                "#268e47",
                "#258d47",
                "#248c46",
                "#238b45",
                "#228a44",
                "#218944",
                "#208843",
                "#1f8742",
                "#1e8741",
                "#1d8640",
                "#1c8540",
                "#1a843f",
                "#19833e",
                "#18823d",
                "#17813d",
                "#16803c",
                "#157f3b",
                "#147e3a",
                "#137d39",
                "#127c39",
                "#117b38",
                "#107a37",
                "#0e7936",
                "#0d7836",
                "#0c7735",
                "#0b7734",
                "#0a7633",
                "#097532",
                "#087432",
                "#077331",
                "#067230",
                "#05712f",
                "#03702e",
                "#026f2e",
                "#016e2d",
                "#006d2c",
                "#006c2c",
                "#006b2b",
                "#00692a",
                "#00682a",
                "#006729",
                "#006529",
                "#006428",
                "#006328",
                "#006227",
                "#006027",
                "#005f26",
                "#005e26",
                "#005c25",
                "#005b25",
                "#005a24",
                "#005924",
                "#005723",
                "#005622",
                "#005522",
                "#005321",
                "#005221",
                "#005120",
                "#005020",
                "#004e1f",
                "#004d1f",
                "#004c1e",
                "#004a1e",
                "#00491d",
                "#00481d",
                "#00471c",
                "#00451c",
                "#00441b"
              ]), r.oranges = r.fromStringList([
                "#fff5eb",
                "#fff5ea",
                "#fff4e9",
                "#fff4e8",
                "#fff3e7",
                "#fff3e6",
                "#fff2e6",
                "#fff2e5",
                "#fff1e4",
                "#fff1e3",
                "#fff0e2",
                "#fff0e1",
                "#ffefe0",
                "#ffefdf",
                "#ffeede",
                "#ffeedd",
                "#feeddc",
                "#feeddc",
                "#feeddb",
                "#feecda",
                "#feecd9",
                "#feebd8",
                "#feebd7",
                "#feead6",
                "#feead5",
                "#fee9d4",
                "#fee9d3",
                "#fee8d2",
                "#fee8d2",
                "#fee7d1",
                "#fee7d0",
                "#fee6cf",
                "#fee6ce",
                "#fee5cc",
                "#fee5cb",
                "#fee4ca",
                "#fee3c8",
                "#fee2c7",
                "#fee2c6",
                "#fee1c4",
                "#fee0c3",
                "#fee0c1",
                "#fedfc0",
                "#fedebf",
                "#fedebd",
                "#feddbc",
                "#fedcbb",
                "#fedcb9",
                "#fddbb8",
                "#fddab6",
                "#fdd9b5",
                "#fdd9b4",
                "#fdd8b2",
                "#fdd7b1",
                "#fdd7af",
                "#fdd6ae",
                "#fdd5ad",
                "#fdd5ab",
                "#fdd4aa",
                "#fdd3a9",
                "#fdd3a7",
                "#fdd2a6",
                "#fdd1a4",
                "#fdd1a3",
                "#fdd0a2",
                "#fdcfa0",
                "#fdce9e",
                "#fdcd9c",
                "#fdcb9b",
                "#fdca99",
                "#fdc997",
                "#fdc895",
                "#fdc794",
                "#fdc692",
                "#fdc590",
                "#fdc48f",
                "#fdc38d",
                "#fdc28b",
                "#fdc189",
                "#fdc088",
                "#fdbf86",
                "#fdbe84",
                "#fdbd83",
                "#fdbb81",
                "#fdba7f",
                "#fdb97d",
                "#fdb87c",
                "#fdb77a",
                "#fdb678",
                "#fdb576",
                "#fdb475",
                "#fdb373",
                "#fdb271",
                "#fdb170",
                "#fdb06e",
                "#fdaf6c",
                "#fdae6a",
                "#fdad69",
                "#fdac67",
                "#fdab66",
                "#fda965",
                "#fda863",
                "#fda762",
                "#fda660",
                "#fda55f",
                "#fda45d",
                "#fda35c",
                "#fda25a",
                "#fda159",
                "#fda057",
                "#fd9f56",
                "#fd9e54",
                "#fd9d53",
                "#fd9c51",
                "#fd9b50",
                "#fd9a4e",
                "#fd994d",
                "#fd984b",
                "#fd974a",
                "#fd9649",
                "#fd9547",
                "#fd9446",
                "#fd9344",
                "#fd9243",
                "#fd9141",
                "#fd9040",
                "#fd8f3e",
                "#fd8e3d",
                "#fd8c3b",
                "#fc8b3a",
                "#fc8a39",
                "#fc8937",
                "#fb8836",
                "#fb8735",
                "#fb8634",
                "#fa8532",
                "#fa8331",
                "#f98230",
                "#f9812e",
                "#f9802d",
                "#f87f2c",
                "#f87e2b",
                "#f87d29",
                "#f77b28",
                "#f77a27",
                "#f67925",
                "#f67824",
                "#f67723",
                "#f57622",
                "#f57520",
                "#f5741f",
                "#f4721e",
                "#f4711c",
                "#f3701b",
                "#f36f1a",
                "#f36e19",
                "#f26d17",
                "#f26c16",
                "#f26b15",
                "#f16913",
                "#f16813",
                "#f06712",
                "#ef6612",
                "#ee6511",
                "#ee6410",
                "#ed6310",
                "#ec620f",
                "#eb610f",
                "#eb600e",
                "#ea5f0e",
                "#e95e0d",
                "#e85d0c",
                "#e75c0c",
                "#e75b0b",
                "#e65a0b",
                "#e5590a",
                "#e4580a",
                "#e45709",
                "#e35608",
                "#e25508",
                "#e15407",
                "#e15307",
                "#e05206",
                "#df5106",
                "#de5005",
                "#de4e05",
                "#dd4d04",
                "#dc4c03",
                "#db4b03",
                "#db4a02",
                "#da4902",
                "#d94801",
                "#d84801",
                "#d64701",
                "#d54601",
                "#d34601",
                "#d14501",
                "#d04501",
                "#ce4401",
                "#cd4401",
                "#cb4302",
                "#c94202",
                "#c84202",
                "#c64102",
                "#c54102",
                "#c34002",
                "#c14002",
                "#c03f02",
                "#be3f02",
                "#bd3e02",
                "#bb3d02",
                "#b93d02",
                "#b83c02",
                "#b63c02",
                "#b53b02",
                "#b33b02",
                "#b13a03",
                "#b03903",
                "#ae3903",
                "#ad3803",
                "#ab3803",
                "#a93703",
                "#a83703",
                "#a63603",
                "#a53603",
                "#a43503",
                "#a23503",
                "#a13403",
                "#a03403",
                "#9f3303",
                "#9e3303",
                "#9c3203",
                "#9b3203",
                "#9a3103",
                "#993103",
                "#973003",
                "#963003",
                "#952f03",
                "#942f03",
                "#932f03",
                "#912e04",
                "#902e04",
                "#8f2d04",
                "#8e2d04",
                "#8c2c04",
                "#8b2c04",
                "#8a2b04",
                "#892b04",
                "#882a04",
                "#862a04",
                "#852904",
                "#842904",
                "#832804",
                "#812804",
                "#802704",
                "#7f2704"
              ]), r.reds = r.fromStringList([
                "#fff5f0",
                "#fff4ef",
                "#fff4ee",
                "#fff3ed",
                "#fff2ec",
                "#fff2eb",
                "#fff1ea",
                "#fff0e9",
                "#fff0e8",
                "#ffefe8",
                "#ffeee7",
                "#ffeee6",
                "#ffede5",
                "#ffece4",
                "#ffece3",
                "#ffebe2",
                "#feeae1",
                "#feeae0",
                "#fee9df",
                "#fee8de",
                "#fee8dd",
                "#fee7dc",
                "#fee7db",
                "#fee6da",
                "#fee5d9",
                "#fee5d8",
                "#fee4d8",
                "#fee3d7",
                "#fee3d6",
                "#fee2d5",
                "#fee1d4",
                "#fee1d3",
                "#fee0d2",
                "#fedfd0",
                "#fedecf",
                "#fedccd",
                "#fedbcc",
                "#fedaca",
                "#fed9c9",
                "#fed8c7",
                "#fdd7c6",
                "#fdd5c4",
                "#fdd4c2",
                "#fdd3c1",
                "#fdd2bf",
                "#fdd1be",
                "#fdd0bc",
                "#fdcebb",
                "#fdcdb9",
                "#fdccb8",
                "#fdcbb6",
                "#fdcab5",
                "#fdc9b3",
                "#fdc7b2",
                "#fdc6b0",
                "#fdc5ae",
                "#fcc4ad",
                "#fcc3ab",
                "#fcc2aa",
                "#fcc1a8",
                "#fcbfa7",
                "#fcbea5",
                "#fcbda4",
                "#fcbca2",
                "#fcbba1",
                "#fcb99f",
                "#fcb89e",
                "#fcb79c",
                "#fcb69b",
                "#fcb499",
                "#fcb398",
                "#fcb296",
                "#fcb095",
                "#fcaf93",
                "#fcae92",
                "#fcad90",
                "#fcab8f",
                "#fcaa8d",
                "#fca98c",
                "#fca78b",
                "#fca689",
                "#fca588",
                "#fca486",
                "#fca285",
                "#fca183",
                "#fca082",
                "#fc9e80",
                "#fc9d7f",
                "#fc9c7d",
                "#fc9b7c",
                "#fc997a",
                "#fc9879",
                "#fc9777",
                "#fc9576",
                "#fc9474",
                "#fc9373",
                "#fc9272",
                "#fc9070",
                "#fc8f6f",
                "#fc8e6e",
                "#fc8d6d",
                "#fc8b6b",
                "#fc8a6a",
                "#fc8969",
                "#fc8767",
                "#fc8666",
                "#fc8565",
                "#fc8464",
                "#fc8262",
                "#fc8161",
                "#fc8060",
                "#fc7f5f",
                "#fb7d5d",
                "#fb7c5c",
                "#fb7b5b",
                "#fb7a5a",
                "#fb7858",
                "#fb7757",
                "#fb7656",
                "#fb7555",
                "#fb7353",
                "#fb7252",
                "#fb7151",
                "#fb7050",
                "#fb6e4e",
                "#fb6d4d",
                "#fb6c4c",
                "#fb6b4b",
                "#fb694a",
                "#fa6849",
                "#fa6648",
                "#fa6547",
                "#f96346",
                "#f96245",
                "#f96044",
                "#f85f43",
                "#f85d42",
                "#f75c41",
                "#f75b40",
                "#f7593f",
                "#f6583e",
                "#f6563d",
                "#f6553c",
                "#f5533b",
                "#f5523a",
                "#f4503a",
                "#f44f39",
                "#f44d38",
                "#f34c37",
                "#f34a36",
                "#f34935",
                "#f24734",
                "#f24633",
                "#f14432",
                "#f14331",
                "#f14130",
                "#f0402f",
                "#f03f2e",
                "#f03d2d",
                "#ef3c2c",
                "#ee3a2c",
                "#ed392b",
                "#ec382b",
                "#eb372a",
                "#ea362a",
                "#e93529",
                "#e83429",
                "#e63328",
                "#e53228",
                "#e43027",
                "#e32f27",
                "#e22e27",
                "#e12d26",
                "#e02c26",
                "#de2b25",
                "#dd2a25",
                "#dc2924",
                "#db2824",
                "#da2723",
                "#d92523",
                "#d82422",
                "#d72322",
                "#d52221",
                "#d42121",
                "#d32020",
                "#d21f20",
                "#d11e1f",
                "#d01d1f",
                "#cf1c1f",
                "#ce1a1e",
                "#cc191e",
                "#cb181d",
                "#ca181d",
                "#c9181d",
                "#c8171c",
                "#c7171c",
                "#c5171c",
                "#c4161c",
                "#c3161b",
                "#c2161b",
                "#c1161b",
                "#bf151b",
                "#be151a",
                "#bd151a",
                "#bc141a",
                "#bb141a",
                "#b91419",
                "#b81419",
                "#b71319",
                "#b61319",
                "#b51318",
                "#b31218",
                "#b21218",
                "#b11218",
                "#b01217",
                "#af1117",
                "#ad1117",
                "#ac1117",
                "#ab1016",
                "#aa1016",
                "#a91016",
                "#a81016",
                "#a60f15",
                "#a50f15",
                "#a30f15",
                "#a10e15",
                "#9f0e14",
                "#9d0d14",
                "#9c0d14",
                "#9a0c14",
                "#980c13",
                "#960b13",
                "#940b13",
                "#920a13",
                "#900a12",
                "#8e0912",
                "#8c0912",
                "#8a0812",
                "#880811",
                "#860811",
                "#840711",
                "#820711",
                "#800610",
                "#7e0610",
                "#7c0510",
                "#7a0510",
                "#79040f",
                "#77040f",
                "#75030f",
                "#73030f",
                "#71020e",
                "#6f020e",
                "#6d010e",
                "#6b010e",
                "#69000d",
                "#67000d"
              ]), r.rdYlBu = r.fromStringList([
                "#a50026",
                "#a70226",
                "#a90426",
                "#ab0626",
                "#ad0826",
                "#af0926",
                "#b10b26",
                "#b30d26",
                "#b50f26",
                "#b71126",
                "#b91326",
                "#bb1526",
                "#bd1726",
                "#be1827",
                "#c01a27",
                "#c21c27",
                "#c41e27",
                "#c62027",
                "#c82227",
                "#ca2427",
                "#cc2627",
                "#ce2827",
                "#d02927",
                "#d22b27",
                "#d42d27",
                "#d62f27",
                "#d83128",
                "#d93429",
                "#da362a",
                "#db382b",
                "#dc3b2c",
                "#dd3d2d",
                "#de402e",
                "#e0422f",
                "#e14430",
                "#e24731",
                "#e34933",
                "#e44c34",
                "#e54e35",
                "#e65036",
                "#e75337",
                "#e95538",
                "#ea5739",
                "#eb5a3a",
                "#ec5c3b",
                "#ed5f3c",
                "#ee613e",
                "#ef633f",
                "#f16640",
                "#f26841",
                "#f36b42",
                "#f46d43",
                "#f47044",
                "#f57245",
                "#f57547",
                "#f57748",
                "#f67a49",
                "#f67c4a",
                "#f67f4b",
                "#f7814c",
                "#f7844e",
                "#f8864f",
                "#f88950",
                "#f88c51",
                "#f98e52",
                "#f99153",
                "#f99355",
                "#fa9656",
                "#fa9857",
                "#fa9b58",
                "#fb9d59",
                "#fba05b",
                "#fba35c",
                "#fca55d",
                "#fca85e",
                "#fcaa5f",
                "#fdad60",
                "#fdaf62",
                "#fdb164",
                "#fdb366",
                "#fdb567",
                "#fdb769",
                "#fdb96b",
                "#fdbb6d",
                "#fdbd6f",
                "#fdbf71",
                "#fdc173",
                "#fdc374",
                "#fdc576",
                "#fdc778",
                "#fec87a",
                "#feca7c",
                "#fecc7e",
                "#fece7f",
                "#fed081",
                "#fed283",
                "#fed485",
                "#fed687",
                "#fed889",
                "#feda8a",
                "#fedc8c",
                "#fede8e",
                "#fee090",
                "#fee192",
                "#fee294",
                "#fee496",
                "#fee597",
                "#fee699",
                "#fee79b",
                "#fee99d",
                "#feea9f",
                "#feeba1",
                "#feeca2",
                "#feeda4",
                "#feefa6",
                "#fff0a8",
                "#fff1aa",
                "#fff2ac",
                "#fff3ad",
                "#fff5af",
                "#fff6b1",
                "#fff7b3",
                "#fff8b5",
                "#fffab7",
                "#fffbb9",
                "#fffcba",
                "#fffdbc",
                "#fffebe",
                "#feffc0",
                "#fdfec2",
                "#fcfec5",
                "#fbfdc7",
                "#fafdc9",
                "#f8fccb",
                "#f7fcce",
                "#f6fbd0",
                "#f5fbd2",
                "#f3fbd4",
                "#f2fad6",
                "#f1fad9",
                "#f0f9db",
                "#eff9dd",
                "#edf8df",
                "#ecf8e2",
                "#ebf7e4",
                "#eaf7e6",
                "#e9f6e8",
                "#e7f6eb",
                "#e6f5ed",
                "#e5f5ef",
                "#e4f4f1",
                "#e2f4f4",
                "#e1f3f6",
                "#e0f3f8",
                "#def2f7",
                "#dcf1f7",
                "#daf0f6",
                "#d8eff6",
                "#d6eef5",
                "#d4edf4",
                "#d1ecf4",
                "#cfebf3",
                "#cdeaf3",
                "#cbe9f2",
                "#c9e8f2",
                "#c7e7f1",
                "#c5e6f0",
                "#c3e5f0",
                "#c1e4ef",
                "#bfe3ef",
                "#bde2ee",
                "#bbe1ed",
                "#b9e0ed",
                "#b6dfec",
                "#b4deec",
                "#b2ddeb",
                "#b0dcea",
                "#aedbea",
                "#acdae9",
                "#aad8e9",
                "#a8d6e8",
                "#a6d5e7",
                "#a3d3e6",
                "#a1d1e5",
                "#9fd0e4",
                "#9dcee3",
                "#9bcce2",
                "#99cae1",
                "#97c9e0",
                "#94c7df",
                "#92c5de",
                "#90c3dd",
                "#8ec2dc",
                "#8cc0db",
                "#8abeda",
                "#87bdd9",
                "#85bbd9",
                "#83b9d8",
                "#81b7d7",
                "#7fb6d6",
                "#7db4d5",
                "#7ab2d4",
                "#78b0d3",
                "#76afd2",
                "#74add1",
                "#72abd0",
                "#70a9cf",
                "#6ea6ce",
                "#6da4cc",
                "#6ba2cb",
                "#69a0ca",
                "#679ec9",
                "#659bc8",
                "#6399c7",
                "#6297c6",
                "#6095c4",
                "#5e93c3",
                "#5c90c2",
                "#5a8ec1",
                "#588cc0",
                "#578abf",
                "#5588be",
                "#5385bd",
                "#5183bb",
                "#4f81ba",
                "#4d7fb9",
                "#4b7db8",
                "#4a7ab7",
                "#4878b6",
                "#4676b5",
                "#4574b3",
                "#4471b2",
                "#436fb1",
                "#426cb0",
                "#416aaf",
                "#4167ad",
                "#4065ac",
                "#3f62ab",
                "#3e60aa",
                "#3e5ea8",
                "#3d5ba7",
                "#3c59a6",
                "#3b56a5",
                "#3a54a4",
                "#3a51a2",
                "#394fa1",
                "#384ca0",
                "#374a9f",
                "#36479e",
                "#36459c",
                "#35429b",
                "#34409a",
                "#333d99",
                "#333b97",
                "#323896",
                "#313695"
              ]);
            }
          ),
          /***/
          "./esm/layers/fits_image.js": (
            /*!**********************************!*\
              !*** ./esm/layers/fits_image.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FitsImage: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../web_file.js */
                "./esm/web_file.js"
              ), _ = i(
                /*! ../coordinates.js */
                "./esm/coordinates.js"
              ), r = i(
                /*! ./wcs_image.js */
                "./esm/layers/wcs_image.js"
              );
              function o(l, g, a, b) {
                this.errored = !1, this.numAxis = 0, this.histogramMaxCount = 0, this.sourceBlob = null, this.header = {}, this.position = 0, this.bufferSize = 1, this._parseSuccessful$1 = !1, r.WcsImage.call(this), this.dataset = l, this.fitsProperties = l.get_fitsProperties(), this._callBack$1 = b, this.filename = g, a != null ? this._readFromBlob$1(a) : this.getFile(g);
              }
              o.naN = NaN;
              var c = {
                getFile: function(l) {
                  this._webFile$1 = new e.WebFile(l), this._webFile$1.responseType = "blob", this._webFile$1.onStateChange = t.ss.bind("fileStateChange", this), this._webFile$1.send();
                },
                fileStateChange: function() {
                  if (this._webFile$1.get_state() === 2)
                    this.errored = !0, this._callBack$1 != null && this._callBack$1(this);
                  else if (this._webFile$1.get_state() === 1) {
                    var l = this._webFile$1.getBlob();
                    this._readFromBlob$1(l);
                  }
                },
                _readFromBlob$1: function(l) {
                  var g = this;
                  this.sourceBlob = l;
                  var a = new FileReader();
                  a.onloadend = function(b) {
                    g.readFromBin(new DataView(a.result)), g.errored = !g._parseSuccessful$1, g._callBack$1 != null && g._callBack$1(g);
                  }, a.readAsArrayBuffer(l);
                },
                _readByteString$1: function(l, g) {
                  for (var a = "", b = 0; b < g; b++)
                    a += String.fromCharCode(l.getUint8(this.position)), this.position++;
                  return a;
                },
                _validateFitsSimple$1: function(l) {
                  var g = this._readByteString$1(l, 8), a = t.ss.trimEnd(g);
                  return this.position -= 8, a.toUpperCase() === "SIMPLE";
                },
                readFromBin: function(l) {
                  if (!this._validateFitsSimple$1(l)) {
                    console.log("The requested file is not a valid FITS file.");
                    return;
                  }
                  for (var g = !1; !g; )
                    for (var a = 0; a < 36; a++) {
                      var b = this._readByteString$1(l, 80);
                      if (!g) {
                        var V = t.ss.trimEnd(b.substring(0, 8)), y = b.substring(10).split("/");
                        if (V.toUpperCase() === "END") {
                          for (g = !0, a++, b = this._readByteString$1(l, 80); t.ss.whitespace(b); )
                            a++, b = this._readByteString$1(l, 80);
                          V = t.ss.trimEnd(b.substring(0, 8)), V.toUpperCase() === "XTENSION" ? g = !1 : this.position -= 80;
                        } else
                          this._addKeyword$1(V, y);
                      }
                    }
                  if (!g) {
                    console.log("Unable to parse requested FITS file.");
                    return;
                  }
                  this.numAxis = parseInt(this.header.NAXIS), t.ss.keyExists(this.header, "BLANK") && (this.fitsProperties.blankValue = parseFloat(this.header.BLANK), this.fitsProperties.containsBlanks = !0), t.ss.keyExists(this.header, "BZERO") && (this.fitsProperties.bZero = parseFloat(this.header.BZERO)), t.ss.keyExists(this.header, "BSCALE") && (this.fitsProperties.bScale = parseFloat(this.header.BSCALE)), this.axisSize = new Array(this.numAxis);
                  for (var C = 0; C < this.numAxis; C++)
                    this.axisSize[C] = parseInt(this.header[t.ss.format("NAXIS{0}", C + 1)]), this.bufferSize *= this.axisSize[C];
                  var E = parseInt(this.header.BITPIX);
                  this.readDataUnit(l, E), this.numAxis > 1 && (this.sizeX = this.axisSize[0], this.sizeY = this.axisSize[1], this.histogram = this.computeHistogram(256), this.histogramMaxCount = this.histogram[256]), this.computeWcs(), this._parseSuccessful$1 = !0;
                },
                _addKeyword$1: function(l, g) {
                  if (l !== "CONTINUE" && l !== "COMMENT" && l !== "HISTORY" && !t.ss.emptyString(l))
                    try {
                      t.ss.keyExists(this.header, l) ? this.header[l] = t.ss.trim(g[0]) : this.header[l.toUpperCase()] = t.ss.trim(g[0]);
                    } catch {
                    }
                },
                readDataUnit: function(l, g) {
                  switch (this.dataUnit = new Float32Array(this.bufferSize), g) {
                    case -64:
                      this.readDataUnitFloat64(l);
                      break;
                    case -32:
                      this.readDataUnitFloat32(l);
                      break;
                    case 8:
                      this.readDataUnitUint8(l);
                      break;
                    case 16:
                      this.readDataUnitInt16(l);
                      break;
                    case 32:
                      this.readDataUnitInt32(l);
                      break;
                    case 64:
                      console.log("64 bit integer FITS are not yet supported");
                      break;
                  }
                },
                readDataUnitFloat64: function(l) {
                  for (var g = 0; this.position < l.byteLength; ) {
                    this.dataUnit[g] = l.getFloat64(this.position, !1);
                    var a = this.dataUnit[g] * this.fitsProperties.bScale + this.fitsProperties.bZero;
                    this.fitsProperties.minVal > a && (this.fitsProperties.minVal = a), this.fitsProperties.maxVal < a && (this.fitsProperties.maxVal = a), g++, this.position += 8;
                  }
                  this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
                },
                readDataUnitFloat32: function(l) {
                  for (var g = 0; this.position < l.byteLength; ) {
                    this.dataUnit[g] = l.getFloat32(this.position, !1);
                    var a = this.dataUnit[g] * this.fitsProperties.bScale + this.fitsProperties.bZero;
                    this.fitsProperties.minVal > a && (this.fitsProperties.minVal = a), this.fitsProperties.maxVal < a && (this.fitsProperties.maxVal = a), g++, this.position += 4;
                  }
                  this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
                },
                readDataUnitUint8: function(l) {
                  for (var g = 0; this.position < l.byteLength; )
                    this.dataUnit[g] = l.getUint8(this.position), this.fitsProperties.minVal > this.dataUnit[g] && (this.fitsProperties.minVal = this.dataUnit[g]), this.fitsProperties.maxVal < this.dataUnit[g] && (this.fitsProperties.maxVal = this.dataUnit[g]), g++, this.position += 1;
                  this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
                },
                readDataUnitInt16: function(l) {
                  for (var g = 0; this.position < l.byteLength; )
                    this.dataUnit[g] = l.getInt16(this.position, !1), this.fitsProperties.minVal > this.dataUnit[g] && (this.fitsProperties.minVal = this.dataUnit[g]), this.fitsProperties.maxVal < this.dataUnit[g] && (this.fitsProperties.maxVal = this.dataUnit[g]), g++, this.position += 2;
                  this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
                },
                readDataUnitInt32: function(l) {
                  for (var g = 0; this.position < l.byteLength; )
                    this.dataUnit[g] = l.getInt32(this.position, !1), this.fitsProperties.minVal > this.dataUnit[g] && (this.fitsProperties.minVal = this.dataUnit[g]), this.fitsProperties.maxVal < this.dataUnit[g] && (this.fitsProperties.maxVal = this.dataUnit[g]), g++, this.position += 4;
                  this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
                },
                computeWcs: function() {
                  t.ss.keyExists(this.header, "CROTA2") && (this.rotation = parseFloat(t.ss.trim(this.header.CROTA2)), this.hasRotation = !0), t.ss.keyExists(this.header, "CDELT1") && (this.scaleX = parseFloat(t.ss.trim(this.header.CDELT1)), t.ss.keyExists(this.header, "CDELT2") && (this.scaleY = parseFloat(t.ss.trim(this.header.CDELT2)), this.hasScale = !0)), t.ss.keyExists(this.header, "CRPIX1") && (this.referenceX = parseFloat(t.ss.trim(this.header.CRPIX1)) - 0.5, t.ss.keyExists(this.header, "CRPIX2") && (this.referenceY = parseFloat(t.ss.trim(this.header.CRPIX2)) - 0.5, this.hasPixel = !0));
                  var l = !1, g = !1;
                  if (t.ss.keyExists(this.header, "CTYPE1") && (this.header.CTYPE1.indexOf("GLON-") > -1 && (l = !0, g = !0), this.header.CTYPE2.indexOf("GLAT-") > -1 && (l = !0, g = !0), this.header.CTYPE1.indexOf("-TAN") > -1 && (g = !0), this.header.CTYPE1.indexOf("-SIN") > -1 && (g = !0)), !g)
                    throw new Error("Only TAN projected images are supported: ");
                  if (this.hasSize = !0, t.ss.keyExists(this.header, "CRVAL1") && (this.centerX = parseFloat(t.ss.trim(this.header.CRVAL1)), t.ss.keyExists(this.header, "CRVAL2") && (this.centerY = parseFloat(t.ss.trim(this.header.CRVAL2)), this.hasLocation = !0)), l) {
                    var a = _.Coordinates.galactictoJ2000(this.centerX, this.centerY);
                    this.centerX = a[0], this.centerY = a[1];
                  }
                  t.ss.keyExists(this.header, "CD1_1") && t.ss.keyExists(this.header, "CD1_2") && t.ss.keyExists(this.header, "CD2_1") && t.ss.keyExists(this.header, "CD2_2") && (this.cd1_1 = parseFloat(t.ss.trim(this.header.CD1_1)), this.cd1_2 = parseFloat(t.ss.trim(this.header.CD1_2)), this.cd2_1 = parseFloat(t.ss.trim(this.header.CD2_1)), this.cd2_2 = parseFloat(t.ss.trim(this.header.CD2_2)), this.hasRotation || this.calculateRotationFromCD(), this.hasScale || this.calculateScaleFromCD(), this.hasScale = !0, this.hasRotation = !0), this.set_validWcs(this.hasScale && this.hasRotation && this.hasPixel && this.hasLocation);
                },
                // Modify the FitsProperties object to apply any settings stored in this
                // FITS image's header keywords. This mechanism gives us a way to set up
                // the rendering of a tiled FITS image through keywords set on its
                // level-0 tile file.
                //
                // I'm not aware of any standard, or even standard-ish, headers to
                // define these settings, so we'll roll our own here.
                applyDisplaySettings: function() {
                  t.ss.keyExists(this.header, "DATAMIN") && (this.fitsProperties.lowerCut = parseFloat(t.ss.trim(this.header.DATAMIN)), this.fitsProperties.minVal = this.fitsProperties.lowerCut), t.ss.keyExists(this.header, "DATAMAX") && (this.fitsProperties.upperCut = parseFloat(t.ss.trim(this.header.DATAMAX)), this.fitsProperties.maxVal = this.fitsProperties.upperCut), t.ss.keyExists(this.header, "PXCUTMIN") && (this.fitsProperties.lowerCut = parseFloat(t.ss.trim(this.header.PXCUTMIN))), t.ss.keyExists(this.header, "PXCUTMAX") && (this.fitsProperties.upperCut = parseFloat(t.ss.trim(this.header.PXCUTMAX)));
                },
                computeHistogram: function(l) {
                  for (var g = new Array(l + 1), a = 0; a < l + 1; a++)
                    g[a] = 0;
                  this.populateHistogram(g);
                  for (var b = 1, V = t.ss.enumerate(g); V.moveNext(); ) {
                    var y = V.current;
                    y > b && (b = y);
                  }
                  return g[l] = b, g;
                },
                populateHistogram: function(l) {
                  for (var g = l.length, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / g, b = 0; b < this.dataUnit.length; b++)
                    this.dataUnit[b] !== o.naN && l[Math.min(g - 1, t.ss.truncate((this.fitsProperties.bZero + this.fitsProperties.bScale * this.dataUnit[b] - this.fitsProperties.minVal) / a))]++;
                },
                drawHistogram: function(l) {
                  l.clearRect(0, 0, 255, 150), l.beginPath(), l.strokeStyle = "rgba(255,255,255,255)";
                  for (var g = Math.log(this.histogramMaxCount), a = 0; a < this.histogram.length; a++) {
                    var b = Math.log(this.histogram[a]) / g;
                    b < 0 && (b = 0), l.moveTo(a, 150), l.lineTo(a, 150 - b * 150), l.stroke();
                  }
                }
              };
              (0, n.registerType)("FitsImage", [o, c, r.WcsImage]);
            }
          ),
          /***/
          "./esm/layers/fits_image_js.js": (
            /*!*************************************!*\
              !*** ./esm/layers/fits_image_js.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                DataTypes: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                FitsImageJs: () => (
                  /* binding */
                  K
                ),
                /* harmony export */
                HistogramEqualization: () => (
                  /* binding */
                  L
                ),
                /* harmony export */
                ScaleLinear: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                ScaleLog: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                ScaleMap: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                ScalePow: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                ScaleSqrt: () => (
                  /* binding */
                  v
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../utilities/binary_reader.js */
                "./esm/utilities/binary_reader.js"
              ), _ = i(
                /*! ../utilities/bitmap.js */
                "./esm/utilities/bitmap.js"
              ), r = i(
                /*! ./color_map_container.js */
                "./esm/layers/color_map_container.js"
              ), o = i(
                /*! ./fits_image.js */
                "./esm/layers/fits_image.js"
              ), c = {
                byteT: 0,
                int16T: 1,
                int32T: 2,
                floatT: 3,
                doubleT: 4,
                none: 5
              };
              (0, n.registerType)("DataTypes", c), (0, n.registerEnum)("DataTypes", c);
              function l() {
              }
              var g = {};
              (0, n.registerType)("ScaleMap", [l, g, null]);
              function a(w, f) {
                this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, l.call(this), this._min$1 = w, this._max$1 = f, this._factor$1 = f - w;
              }
              var b = {
                map: function(w) {
                  return Math.min(255, Math.max(0, t.ss.truncate((w - this._min$1) / this._factor$1 * 255)));
                }
              };
              (0, n.registerType)("ScaleLinear", [a, b, l]);
              function V(w, f) {
                this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, l.call(this), this._min$1 = w, this._max$1 = f, this._factor$1 = f - w, this._logFactor$1 = 255 / Math.log(255);
              }
              var y = {
                map: function(w) {
                  return Math.min(255, Math.max(0, t.ss.truncate(Math.log((w - this._min$1) / this._factor$1 * 255) * this._logFactor$1)));
                }
              };
              (0, n.registerType)("ScaleLog", [V, y, l]);
              function C(w, f) {
                this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._powFactor$1 = 0, l.call(this), this._min$1 = w, this._max$1 = f, this._factor$1 = f - w, this._powFactor$1 = 255 / Math.pow(255, 2);
              }
              var E = {
                map: function(w) {
                  return Math.min(255, Math.max(0, t.ss.truncate(Math.pow((w - this._min$1) / this._factor$1 * 255, 2) * this._powFactor$1)));
                }
              };
              (0, n.registerType)("ScalePow", [C, E, l]);
              function v(w, f) {
                this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._sqrtFactor$1 = 0, l.call(this), this._min$1 = w, this._max$1 = f, this._factor$1 = f - w, this._sqrtFactor$1 = 255 / Math.sqrt(255);
              }
              var m = {
                map: function(w) {
                  return Math.min(255, Math.max(0, t.ss.truncate(Math.sqrt((w - this._min$1) / this._factor$1 * 255) * this._sqrtFactor$1)));
                }
              };
              (0, n.registerType)("ScaleSqrt", [v, m, l]);
              function L(w, f, R) {
                this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._maxHistogramValue$1 = 1, l.call(this), this._min$1 = f, this._max$1 = R, this._factor$1 = R - f, this._histogram$1 = w.computeHistogram(1e4), this._maxHistogramValue$1 = this._histogram$1[1e4], this._lookup$1 = new Array(1e4);
                for (var O = t.ss.truncate(w.get_sizeX() * w.get_sizeY()), W = 0, N = 0; N < 1e4; N++)
                  W += this._histogram$1[N], this._lookup$1[N] = Math.min(255, W * 255 / O) + 0.5;
              }
              var A = {
                map: function(w) {
                  return this._lookup$1[Math.min(1e4 - 1, Math.max(0, t.ss.truncate((w - this._min$1) / this._factor$1 * (1e4 - 1))))];
                }
              };
              (0, n.registerType)("HistogramEqualization", [L, A, l]);
              function K(w, f, R, O) {
                this.dataType = c.none, this._color$2 = !1, this.isTiledFits = !1, o.FitsImage.call(this, w, f, R, O);
              }
              K.createTiledFits = function(w, f, R) {
                var O = new K(w, f, null, R);
                return O.isTiledFits = !0, O;
              };
              var T = {
                readFromBin: function(w) {
                  o.FitsImage.prototype.readFromBin.call(this, w), this.numAxis === 3 && this.axisSize[2] === 3 && (this._color$2 = !0);
                },
                readDataUnit: function(w, f) {
                  var R = new e.BinaryReader(new Uint8Array(w.buffer));
                  switch (R.position = this.position, f) {
                    case -64:
                      this.dataType = c.doubleT, this._readDataUnitFloat64$2(R);
                      break;
                    case -32:
                      this.dataType = c.floatT, this._readDataUnitFloat32$2(R);
                      break;
                    case 8:
                      this.dataType = c.byteT, this._readDataUnitUint8$2(R);
                      break;
                    case 16:
                      this.dataType = c.int16T, this._readDataUnitInt16$2(R);
                      break;
                    case 32:
                      this.dataType = c.int32T, this._readDataUnitInt32$2(R);
                      break;
                  }
                  this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
                },
                _readDataUnitUint8$2: function(w) {
                  var f = new Array(this.bufferSize);
                  this._dataBuffer$2 = f;
                  for (var R = 0; R < this.bufferSize; R++)
                    f[R] = w.readByte(), this.fitsProperties.minVal > f[R] && (this.fitsProperties.minVal = f[R]), this.fitsProperties.maxVal < f[R] && (this.fitsProperties.maxVal = f[R]);
                },
                _readDataUnitInt16$2: function(w) {
                  var f = new Array(this.bufferSize);
                  this._dataBuffer$2 = f;
                  for (var R = 0; R < this.bufferSize; R++)
                    f[R] = w.readSByte() * 256 + w.readByte(), this.fitsProperties.minVal > f[R] && (this.fitsProperties.minVal = f[R]), this.fitsProperties.maxVal < f[R] && (this.fitsProperties.maxVal = f[R]);
                },
                _readDataUnitInt32$2: function(w) {
                  var f = new Array(this.bufferSize);
                  this._dataBuffer$2 = f;
                  for (var R = 0; R < this.bufferSize; R++)
                    f[R] = (w.readSByte() << 24) + (w.readSByte() << 16) + (w.readSByte() << 8) + w.readByte(), this.fitsProperties.minVal > f[R] && (this.fitsProperties.minVal = f[R]), this.fitsProperties.maxVal < f[R] && (this.fitsProperties.maxVal = f[R]);
                },
                _readDataUnitFloat32$2: function(w) {
                  var f = new Array(this.bufferSize);
                  this._dataBuffer$2 = f;
                  for (var R = new Uint8Array(4), O = 0; O < this.bufferSize; O++)
                    R[3] = w.readByte(), R[2] = w.readByte(), R[1] = w.readByte(), R[0] = w.readByte(), f[O] = new Float32Array(R.buffer, 0, 1)[0], this.fitsProperties.minVal > f[O] && (this.fitsProperties.minVal = f[O]), this.fitsProperties.maxVal < f[O] && (this.fitsProperties.maxVal = f[O]);
                },
                _readDataUnitFloat64$2: function(w) {
                  var f = new Array(this.bufferSize), R = new Uint8Array(8);
                  this._dataBuffer$2 = f;
                  for (var O = 0; O < this.bufferSize; O++)
                    R[7] = w.readByte(), R[6] = w.readByte(), R[5] = w.readByte(), R[4] = w.readByte(), R[3] = w.readByte(), R[2] = w.readByte(), R[1] = w.readByte(), R[0] = w.readByte(), f[O] = new Float64Array(R.buffer, 0, 1)[0], this.fitsProperties.minVal > f[O] && (this.fitsProperties.minVal = f[O]), this.fitsProperties.maxVal < f[O] && (this.fitsProperties.maxVal = f[O]);
                },
                getBitmap: function() {
                  return !this.fitsProperties.upperCut && !this.fitsProperties.lowerCut && (this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal), this.getScaledBitmap(this.fitsProperties.lowerCut, this.fitsProperties.upperCut, this.fitsProperties.scaleType, 0, this.fitsProperties.colorMapName);
                },
                getScaledBitmap: function(w, f, R, O, W) {
                  var N;
                  this.fitsProperties.scaleType = R, this.fitsProperties.lowerCut = w, this.fitsProperties.upperCut = f, this.fitsProperties.colorMapName = W;
                  var $ = r.ColorMapContainer.fromNamedColormap(W);
                  switch (R) {
                    case 0:
                    default:
                      N = new a(w, f);
                      break;
                    case 1:
                      N = new V(w, f);
                      break;
                    case 2:
                      N = new C(w, f);
                      break;
                    case 3:
                      N = new v(w, f);
                      break;
                    case 4:
                      N = new L(this, w, f);
                      break;
                  }
                  try {
                    switch (this.dataType) {
                      case c.byteT:
                        return this._getBitmapByte$2(w, f, N, 0, $);
                      case c.int16T:
                        return this.getBitmapShort(w, f, N, 0, $);
                      case c.int32T:
                        return this._getBitmapInt$2(w, f, N, 0, $);
                      case c.floatT:
                        return this._getBitmapFloat$2(w, f, N, 0, $);
                      case c.doubleT:
                        return this._getBitmapDouble$2(w, f, N, 0, $);
                      case c.none:
                      default:
                        return _.Bitmap.create(100, 100);
                    }
                  } catch {
                    return _.Bitmap.create(10, 10);
                  }
                },
                _setPixelWithColorMap$2: function(w, f, R, O, W) {
                  if (W == null) {
                    w.setPixel(f, R, O, O, O, this.fitsProperties.transparentBlack && !O ? 0 : 255);
                    return;
                  }
                  var N = O / 255;
                  if (Number.isNaN(N)) {
                    w.setPixel(f, R, 0, 0, 0, 0);
                    return;
                  }
                  var $ = W.findClosestColor(N);
                  w.setPixel(f, R, t.ss.truncate($.r), t.ss.truncate($.g), t.ss.truncate($.b), this.fitsProperties.transparentBlack && !O ? 0 : 255);
                },
                _getBitmapByte$2: function(w, f, R, O, W) {
                  for (var N = this._dataBuffer$2, $ = this.axisSize[0], S = this.axisSize[0] * this.axisSize[1] * O, I = _.Bitmap.create(this.axisSize[0], this.axisSize[1]), x = 0; x < this.axisSize[1]; x++)
                    for (var P = this.axisSize[1] - 1 - x, d = 0; d < this.axisSize[0]; d++)
                      if (this._color$2) {
                        var U = N[d + P * $], F = N[d + P * $ + S], X = N[d + P * $ + S * 2];
                        if (this.fitsProperties.containsBlanks && U === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var Y = R.map(U), M = R.map(F), B = R.map(X);
                          I.setPixel(d, x, Y, M, B, 255);
                        }
                      } else {
                        var D = N[d + P * $ + S];
                        if (this.fitsProperties.containsBlanks && D === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var k = R.map(D);
                          this._setPixelWithColorMap$2(I, d, x, k, W);
                        }
                      }
                  return I;
                },
                _getBitmapDouble$2: function(w, f, R, O, W) {
                  for (var N = this._dataBuffer$2, $ = this.axisSize[0], S = this.axisSize[0] * this.axisSize[1] * O, I = _.Bitmap.create(this.axisSize[0], this.axisSize[1]), x = 0; x < this.axisSize[1]; x++)
                    for (var P = this.axisSize[1] - 1 - x, d = 0; d < this.axisSize[0]; d++)
                      if (this._color$2) {
                        var U = N[d + P * $], F = N[d + P * $ + S], X = N[d + P * $ + S * 2];
                        if (this.fitsProperties.containsBlanks && U === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var Y = R.map(U), M = R.map(F), B = R.map(X);
                          I.setPixel(d, x, Y, M, B, 255);
                        }
                      } else {
                        var D = N[d + P * $ + S];
                        if (this.fitsProperties.containsBlanks && D === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var k = R.map(D);
                          this._setPixelWithColorMap$2(I, d, x, k, W);
                        }
                      }
                  return I;
                },
                _getBitmapFloat$2: function(w, f, R, O, W) {
                  for (var N = this._dataBuffer$2, $ = this.axisSize[0], S = this.axisSize[0] * this.axisSize[1] * O, I = _.Bitmap.create(this.axisSize[0], this.axisSize[1]), x = 0; x < this.axisSize[1]; x++)
                    for (var P = this.axisSize[1] - 1 - x, d = 0; d < this.axisSize[0]; d++)
                      if (this._color$2) {
                        var U = N[d + P * $], F = N[d + P * $ + S], X = N[d + P * $ + S * 2];
                        if (this.fitsProperties.containsBlanks && U === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var Y = R.map(U), M = R.map(F), B = R.map(X);
                          I.setPixel(d, x, Y, M, B, 255);
                        }
                      } else {
                        var D = N[d + P * $ + S];
                        if (this.fitsProperties.containsBlanks && D === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var k = R.map(D);
                          this._setPixelWithColorMap$2(I, d, x, k, W);
                        }
                      }
                  return I;
                },
                _getBitmapInt$2: function(w, f, R, O, W) {
                  for (var N = this._dataBuffer$2, $ = this.axisSize[0], S = this.axisSize[0] * this.axisSize[1] * O, I = _.Bitmap.create(this.axisSize[0], this.axisSize[1]), x = 0; x < this.axisSize[1]; x++)
                    for (var P = this.axisSize[1] - 1 - x, d = 0; d < this.axisSize[0]; d++)
                      if (this._color$2) {
                        var U = N[d + P * $], F = N[d + P * $ + S], X = N[d + P * $ + S * 2];
                        if (this.fitsProperties.containsBlanks && U === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var Y = R.map(U), M = R.map(F), B = R.map(X);
                          I.setPixel(d, x, Y, M, B, 255);
                        }
                      } else {
                        var D = N[d + P * $ + S];
                        if (this.fitsProperties.containsBlanks && D === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var k = R.map(D);
                          this._setPixelWithColorMap$2(I, d, x, k, W);
                        }
                      }
                  return I;
                },
                getBitmapShort: function(w, f, R, O, W) {
                  for (var N = this._dataBuffer$2, $ = this.axisSize[0], S = this.axisSize[0] * this.axisSize[1] * O, I = _.Bitmap.create(this.axisSize[0], this.axisSize[1]), x = 0; x < this.axisSize[1]; x++)
                    for (var P = this.axisSize[1] - 1 - x, d = 0; d < this.axisSize[0]; d++)
                      if (this._color$2) {
                        var U = N[d + P * $], F = N[d + P * $ + S], X = N[d + P * $ + S * 2];
                        if (this.fitsProperties.containsBlanks && U === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var Y = R.map(U), M = R.map(F), B = R.map(X);
                          I.setPixel(d, x, Y, M, B, 255);
                        }
                      } else {
                        var D = N[d + P * $ + S];
                        if (this.fitsProperties.containsBlanks && D === this.fitsProperties.blankValue)
                          I.setPixel(d, x, 0, 0, 0, 0);
                        else {
                          var k = R.map(D);
                          this._setPixelWithColorMap$2(I, d, x, k, W);
                        }
                      }
                  return I;
                },
                computeWcs: function() {
                  this.isTiledFits || o.FitsImage.prototype.computeWcs.call(this);
                },
                populateHistogram: function(w) {
                  switch (this.dataType) {
                    case c.byteT:
                      this._populateHistogramByte$2(w);
                      break;
                    case c.int16T:
                      this._populateHistogramInt16$2(w);
                      break;
                    case c.int32T:
                      this._populateHistogramInt32$2(w);
                      break;
                    case c.floatT:
                      this._populateHistogramFloat$2(w);
                      break;
                    case c.doubleT:
                      this._populateHistogramDouble$2(w);
                      break;
                  }
                },
                _populateHistogramDouble$2: function(w) {
                  for (var f = w.length, R = this._dataBuffer$2, O = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / f, W = t.ss.enumerate(R); W.moveNext(); ) {
                    var N = W.current;
                    Number.isNaN(N) || w[Math.min(f - 1, t.ss.truncate((N - this.fitsProperties.minVal) / O))]++;
                  }
                },
                _populateHistogramFloat$2: function(w) {
                  for (var f = w.length, R = this._dataBuffer$2, O = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / f, W = t.ss.enumerate(R); W.moveNext(); ) {
                    var N = W.current;
                    N !== o.FitsImage.naN && w[Math.min(f - 1, t.ss.truncate((N - this.fitsProperties.minVal) / O))]++;
                  }
                },
                _populateHistogramInt32$2: function(w) {
                  for (var f = w.length, R = this._dataBuffer$2, O = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / f, W = t.ss.enumerate(R); W.moveNext(); ) {
                    var N = W.current;
                    w[Math.min(f - 1, t.ss.truncate((N - this.fitsProperties.minVal) / O))]++;
                  }
                },
                _populateHistogramInt16$2: function(w) {
                  for (var f = w.length, R = this._dataBuffer$2, O = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / f, W = t.ss.enumerate(R); W.moveNext(); ) {
                    var N = W.current;
                    w[Math.min(f - 1, t.ss.truncate((N - this.fitsProperties.minVal) / O))]++;
                  }
                },
                _populateHistogramByte$2: function(w) {
                  for (var f = w.length, R = this._dataBuffer$2, O = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / f, W = t.ss.enumerate(R); W.moveNext(); ) {
                    var N = W.current;
                    w[Math.min(f - 1, t.ss.truncate((N - this.fitsProperties.minVal) / O))]++;
                  }
                }
              };
              (0, n.registerType)("FitsImageJs", [K, T, o.FitsImage]);
            }
          ),
          /***/
          "./esm/layers/fits_image_tile.js": (
            /*!***************************************!*\
              !*** ./esm/layers/fits_image_tile.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FitsImageTile: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./fits_image.js */
                "./esm/layers/fits_image.js"
              );
              function e(r, o, c) {
                n.FitsImage.call(this, r, o, null, c);
              }
              var _ = {
                readDataUnitFloat64: function(r) {
                  for (var o = 0; this.position < r.byteLength; )
                    this.dataUnit[o] = r.getFloat64(this.position, !1), o++, this.position += 8;
                },
                readDataUnitFloat32: function(r) {
                  for (var o = 0; this.position < r.byteLength; )
                    this.dataUnit[o] = r.getFloat32(this.position, !1), o++, this.position += 4;
                },
                readDataUnitUint8: function(r) {
                  for (var o = 0; this.position < r.byteLength; )
                    this.dataUnit[o] = r.getUint8(this.position), o++, this.position += 1;
                },
                readDataUnitInt16: function(r) {
                  for (var o = 0; this.position < r.byteLength; )
                    this.dataUnit[o] = r.getInt16(this.position, !1), o++, this.position += 2;
                },
                readDataUnitInt32: function(r) {
                  for (var o = 0; this.position < r.byteLength; )
                    this.dataUnit[o] = r.getInt32(this.position, !1), o++, this.position += 4;
                },
                computeWcs: function() {
                }
              };
              (0, t.registerType)("FitsImageTile", [e, _, n.FitsImage]);
            }
          ),
          /***/
          "./esm/layers/from_xml.js": (
            /*!********************************!*\
              !*** ./esm/layers/from_xml.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                layerFromXml: () => (
                  /* binding */
                  a
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), e = i(
                /*! ./great_circle_route_layer.js */
                "./esm/layers/great_circle_route_layer.js"
              ), _ = i(
                /*! ./grid_layer.js */
                "./esm/layers/grid_layer.js"
              ), r = i(
                /*! ./imageset_layer.js */
                "./esm/layers/imageset_layer.js"
              ), o = i(
                /*! ./object3d.js */
                "./esm/layers/object3d.js"
              ), c = i(
                /*! ./orbit_layer.js */
                "./esm/layers/orbit_layer.js"
              ), l = i(
                /*! ./spreadsheet_layer.js */
                "./esm/layers/spreadsheet_layer.js"
              ), g = i(
                /*! ./vo_table_layer.js */
                "./esm/layers/vo_table_layer.js"
              );
              function a(b, V) {
                var y = b.attributes.getNamedItem("Type").nodeValue, C = t.ss.replaceString(y, "TerraViewer.", "");
                if (C == null)
                  return null;
                var E = null;
                switch (C) {
                  case "SpreadSheetLayer":
                    E = new l.SpreadSheetLayer();
                    break;
                  case "GreatCirlceRouteLayer":
                    E = new e.GreatCirlceRouteLayer();
                    break;
                  case "GridLayer":
                    E = new _.GridLayer();
                    break;
                  case "ImageSetLayer":
                    E = new r.ImageSetLayer();
                    break;
                  case "Object3dLayer":
                    E = new o.Object3dLayer();
                    break;
                  case "OrbitLayer":
                    E = new c.OrbitLayer();
                    break;
                  case "VoTableLayer":
                    E = new g.VoTableLayer();
                    break;
                  default:
                    return null;
                }
                return E.initFromXml(b), E;
              }
              n.Layer.fromXml = a;
            }
          ),
          /***/
          "./esm/layers/great_circle_route_layer.js": (
            /*!************************************************!*\
              !*** ./esm/layers/great_circle_route_layer.js ***!
              \************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                GreatCirlceRouteLayer: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), e = i(
                /*! ../graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), _ = i(
                /*! ../coordinates.js */
                "./esm/coordinates.js"
              ), r = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              );
              function o() {
                this._triangleList$1 = null, this._latStart$1 = 0, this._lngStart$1 = 0, this._latEnd$1 = 0, this._lngEnd$1 = 0, this._width$1 = 4, this._percentComplete$1 = 100, r.Layer.call(this);
              }
              var c = {
                // Even if we fix the typo in this class's name in an API break, we need to
                // maintain it here to maintain compatibility with existing data files and
                // older WWT clients.
                getTypeName: function() {
                  return "TerraViewer.GreatCirlceRouteLayer";
                },
                cleanUp: function() {
                  this._triangleList$1 != null && this._triangleList$1.clear(), this._triangleList$1 = null, r.Layer.prototype.cleanUp.call(this);
                },
                draw: function(l, g, a) {
                  return this._triangleList$1 == null && this._initializeRoute$1(l), this._triangleList$1.jNow = this._percentComplete$1 / 100, this._triangleList$1.draw(l, g * this.get_opacity(), 2), !0;
                },
                _initializeRoute$1: function(l) {
                  this._triangleList$1 = new e.TriangleList(), this._triangleList$1.decay = 1e3, this._triangleList$1.sky = this.get_astronomical(), this._triangleList$1.timeSeries = !0, this._triangleList$1.depthBuffered = !1, this._triangleList$1.autoTime = !1;
                  var g = 500, a = _.Coordinates.geoTo3dDouble(this._latStart$1, this._lngStart$1), b = _.Coordinates.geoTo3dDouble(this._latEnd$1, this._lngEnd$1), V = n.Vector3d.subtractVectors(b, a);
                  V.normalize();
                  var y = a;
                  y.normalize();
                  var C = n.Vector3d.cross(y, V), E = n.Vector3d.cross(V, y);
                  C.normalize(), E.normalize(), C.multiply(1e-3 * this._width$1), E.multiply(1e-3 * this._width$1);
                  for (var v = new n.Vector3d(), m = new n.Vector3d(), L = !0, A = 0; A <= g; A++) {
                    var K = n.Vector3d.lerp(a, b, A / g);
                    K.normalize();
                    var T = K, w = K;
                    T.add(C), w.add(E), L ? L = !1 : this._triangleList$1.addQuad(m, v, w, T, this.get_color(), new e.Dates(A / g, 2)), v = T, m = w;
                  }
                },
                getParams: function() {
                  return [this._percentComplete$1];
                },
                getParamNames: function() {
                  return ["Percentage"];
                },
                setParams: function(l) {
                  l.length > 0 && (this._percentComplete$1 = l[0]);
                },
                get_latStart: function() {
                  return this._latStart$1;
                },
                set_latStart: function(l) {
                  return this._latStart$1 !== l && (this._latStart$1 = l, this.version++), l;
                },
                get_lngStart: function() {
                  return this._lngStart$1;
                },
                set_lngStart: function(l) {
                  return this._lngStart$1 !== l && (this._lngStart$1 = l, this.version++), l;
                },
                get_latEnd: function() {
                  return this._latEnd$1;
                },
                set_latEnd: function(l) {
                  return this._latEnd$1 !== l && (this._latEnd$1 = l, this.version++), l;
                },
                get_lngEnd: function() {
                  return this._lngEnd$1;
                },
                set_lngEnd: function(l) {
                  return this._lngEnd$1 !== l && (this._lngEnd$1 = l, this.version++), l;
                },
                get_width: function() {
                  return this._width$1;
                },
                set_width: function(l) {
                  return this._width$1 !== l && (this._width$1 = l, this.version++), l;
                },
                get_percentComplete: function() {
                  return this._percentComplete$1;
                },
                set_percentComplete: function(l) {
                  return this._percentComplete$1 !== l && (this._percentComplete$1 = l, this.version++), l;
                },
                writeLayerProperties: function(l) {
                  l._writeAttributeString("LatStart", this.get_latStart().toString()), l._writeAttributeString("LngStart", this.get_lngStart().toString()), l._writeAttributeString("LatEnd", this.get_latEnd().toString()), l._writeAttributeString("LngEnd", this.get_lngEnd().toString()), l._writeAttributeString("Width", this.get_width().toString()), l._writeAttributeString("PercentComplete", this.get_percentComplete().toString());
                },
                initializeFromXml: function(l) {
                  this._latStart$1 = parseFloat(l.attributes.getNamedItem("LatStart").nodeValue), this._lngStart$1 = parseFloat(l.attributes.getNamedItem("LngStart").nodeValue), this._latEnd$1 = parseFloat(l.attributes.getNamedItem("LatEnd").nodeValue), this._lngEnd$1 = parseFloat(l.attributes.getNamedItem("LngEnd").nodeValue), this._width$1 = parseFloat(l.attributes.getNamedItem("Width").nodeValue), this._percentComplete$1 = parseFloat(l.attributes.getNamedItem("PercentComplete").nodeValue);
                }
              };
              (0, t.registerType)("GreatCirlceRouteLayer", [o, c, r.Layer]);
            }
          ),
          /***/
          "./esm/layers/grid_layer.js": (
            /*!**********************************!*\
              !*** ./esm/layers/grid_layer.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                GridLayer: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../grids.js */
                "./esm/grids.js"
              ), e = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              );
              function _() {
                e.Layer.call(this);
              }
              var r = {
                draw: function(o, c, l) {
                  return n.Grids.drawPlanetGrid(o, c * this.get_opacity(), this.get_color()), n.Grids.drawPlanetGridText(o, c * this.get_opacity(), this.get_color()), !0;
                }
              };
              (0, t.registerType)("GridLayer", [_, r, e.Layer]);
            }
          ),
          /***/
          "./esm/layers/imageset_layer.js": (
            /*!**************************************!*\
              !*** ./esm/layers/imageset_layer.js ***!
              \**************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ImageSetLayer: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ../utilities/histogram.js */
                "./esm/utilities/histogram.js"
              ), o = i(
                /*! ./color_map_container.js */
                "./esm/layers/color_map_container.js"
              ), c = i(
                /*! ./fits_image.js */
                "./esm/layers/fits_image.js"
              ), l = i(
                /*! ./fits_image_js.js */
                "./esm/layers/fits_image_js.js"
              ), g = i(
                /*! ../imageset.js */
                "./esm/imageset.js"
              ), a = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              );
              function b() {
                this._imageSet$1 = null, this._extension$1 = ".txt", this._overrideDefaultLayer$1 = !1, this._loaded$1 = !1, a.Layer.call(this);
              }
              b.create = function(y) {
                var C = new b();
                return C._imageSet$1 = y, C;
              };
              var V = {
                get_imageSet: function() {
                  return this._imageSet$1;
                },
                set_imageSet: function(y) {
                  return this._imageSet$1 = y, y;
                },
                get_overrideDefaultLayer: function() {
                  return this._overrideDefaultLayer$1;
                },
                set_overrideDefaultLayer: function(y) {
                  return this._overrideDefaultLayer$1 = y, y;
                },
                getFitsImage: function() {
                  return t.ss.safeCast(this._imageSet$1.get_wcsImage(), c.FitsImage);
                },
                // Test whether our underlying imagery is FITS based.
                //
                // This can come in two flavors: a single FITS image, or tiled FITS.
                // Note that even though the FileType/Extension field can currently
                // specify multiple file formats, the rendering code requires that the
                // extension is exactly ".fits" for FITS rendering to kick in.
                _isFitsImageset$1: function() {
                  var y = this._imageSet$1.get_extension() === ".fits";
                  return t.ss.canCast(this._imageSet$1.get_wcsImage(), c.FitsImage) || this._imageSet$1.get_wcsImage() == null && y;
                },
                initializeFromXml: function(y) {
                  var C = e.Util.selectSingleNode(y, "ImageSet");
                  this._imageSet$1 = g.Imageset.fromXMLNode(C), y.attributes.getNamedItem("Extension") != null && (this._extension$1 = y.attributes.getNamedItem("Extension").nodeValue), y.attributes.getNamedItem("ScaleType") != null && (this.get_imageSet().get_fitsProperties().scaleType = n.Enums.parse("ScaleTypes", y.attributes.getNamedItem("ScaleType").nodeValue)), y.attributes.getNamedItem("MinValue") != null && (this.get_imageSet().get_fitsProperties().minVal = parseFloat(y.attributes.getNamedItem("MinValue").nodeValue), this.get_imageSet().get_fitsProperties().lowerCut = y.attributes.getNamedItem("LowerCut") != null ? parseFloat(y.attributes.getNamedItem("LowerCut").nodeValue) : this.get_imageSet().get_fitsProperties().minVal), y.attributes.getNamedItem("MaxValue") != null && (this.get_imageSet().get_fitsProperties().maxVal = parseFloat(y.attributes.getNamedItem("MaxValue").nodeValue), this.get_imageSet().get_fitsProperties().upperCut = y.attributes.getNamedItem("UpperCut") != null ? parseFloat(y.attributes.getNamedItem("UpperCut").nodeValue) : this.get_imageSet().get_fitsProperties().maxVal), y.attributes.getNamedItem("ColorMapperName") != null && (this.get_imageSet().get_fitsProperties().colorMapName = y.attributes.getNamedItem("ColorMapperName").nodeValue), y.attributes.getNamedItem("OverrideDefault") != null && (this._overrideDefaultLayer$1 = t.ss.boolean(y.attributes.getNamedItem("OverrideDefault").nodeValue));
                },
                draw: function(y, C, E) {
                  return this._loaded$1 ? (y.set_worldBase(y.get_world()), y.set_viewBase(y.get_view()), y.makeFrustum(), y.drawImageSet(this._imageSet$1, this.get_opacity() * C * 100), !0) : !1;
                },
                writeLayerProperties: function(y) {
                  this._imageSet$1.get_wcsImage() != null && (this._isFitsImageset$1() ? this._extension$1 = ".fit" : this._extension$1 = ".png", y._writeAttributeString("Extension", this._extension$1)), this._isFitsImageset$1() && (y._writeAttributeString("ScaleType", n.Enums.toXml("ScaleTypes", this._imageSet$1.get_fitsProperties().scaleType)), y._writeAttributeString("MinValue", this._imageSet$1.get_fitsProperties().minVal.toString()), y._writeAttributeString("MaxValue", this._imageSet$1.get_fitsProperties().maxVal.toString()), y._writeAttributeString("LowerCut", this._imageSet$1.get_fitsProperties().lowerCut.toString()), y._writeAttributeString("UpperCut", this._imageSet$1.get_fitsProperties().upperCut.toString()), this._imageSet$1.get_fitsProperties().colorMapName != null && y._writeAttributeString("ColorMapperName", this._imageSet$1.get_fitsProperties().colorMapName)), y._writeAttributeString("OverrideDefault", this._overrideDefaultLayer$1.toString()), g.Imageset.saveToXml(y, this._imageSet$1, ""), a.Layer.prototype.writeLayerProperties.call(this, y);
                },
                getTypeName: function() {
                  return "TerraViewer.ImageSetLayer";
                },
                cleanUp: function() {
                  a.Layer.prototype.cleanUp.call(this);
                },
                addFilesToCabinet: function(y) {
                  if (t.ss.canCast(this._imageSet$1.get_wcsImage(), c.FitsImage)) {
                    this._imageSet$1.get_wcsImage().get_filename();
                    var C = y.tempDirectory + t.ss.format("{0}\\{1}{2}", y.get_packageID(), this.id.toString(), this._extension$1);
                    y.addFile(C, this._imageSet$1.get_wcsImage().sourceBlob);
                  }
                },
                getParamNames: function() {
                  return a.Layer.prototype.getParamNames.call(this);
                },
                getParams: function() {
                  return a.Layer.prototype.getParams.call(this);
                },
                setParams: function(y) {
                  a.Layer.prototype.setParams.call(this, y);
                },
                setImageScale: function(y, C, E) {
                  console.warn("SetImageScale is considered deprecated. Use setImageScaleRaw or setImageScalePhysical instead."), this.setImageScaleRaw(y, C, E);
                },
                setImageScaleRaw: function(y, C, E) {
                  this.get_imageSet().get_fitsProperties().lowerCut = C, this.get_imageSet().get_fitsProperties().upperCut = E, this.get_imageSet().get_fitsProperties().scaleType = y, t.ss.canCast(this._imageSet$1.get_wcsImage(), l.FitsImageJs) && r.Histogram.updateScale(this, y, C, E);
                },
                setImageScalePhysical: function(y, C, E) {
                  var v = C, m = E;
                  this._isFitsImageset$1() && (v = (v - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale, m = (m - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale), this.setImageScaleRaw(y, v, m);
                },
                setImageZ: function(y) {
                  this._isFitsImageset$1() && r.Histogram.updateImage(this, y);
                },
                get_colorMapperName: function() {
                  return this.get_imageSet().get_fitsProperties().colorMapName;
                },
                set_colorMapperName: function(y) {
                  if (o.ColorMapContainer.fromNamedColormap(y) == null)
                    throw new Error("Invalid colormap name");
                  return this.version++, this._isFitsImageset$1() && (_.useGlVersion2 ? this._imageSet$1.get_fitsProperties().colorMapName = y : r.Histogram.updateColorMapper(this, y)), y;
                },
                get_colorMapper: function() {
                  return this.get_imageSet().get_fitsProperties().colorMapName == null ? null : o.ColorMapContainer.fromNamedColormap(this.get_imageSet().get_fitsProperties().colorMapName);
                },
                loadData: function(y, C) {
                  if (t.ss.startsWith(this._extension$1.toLowerCase(), ".fit")) {
                    var E = y.getFileBlob(t.ss.replaceString(C, ".txt", this._extension$1)), v;
                    _.useGlVersion2 ? v = new c.FitsImage(this._imageSet$1, "image.fit", E, t.ss.bind("doneLoading", this)) : v = new l.FitsImageJs(this._imageSet$1, "image.fit", E, t.ss.bind("doneLoading", this)), this._imageSet$1.set_wcsImage(v);
                  } else
                    this._loaded$1 = !0;
                },
                doneLoading: function(y) {
                  this._loaded$1 = !0;
                }
              };
              (0, n.registerType)("ImageSetLayer", [b, V, a.Layer]);
            }
          ),
          /***/
          "./esm/layers/iss_layer.js": (
            /*!*********************************!*\
              !*** ./esm/layers/iss_layer.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ISSLayer: () => (
                  /* binding */
                  g
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../util.js */
                "./esm/util.js"
              ), _ = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), o = i(
                /*! ../color.js */
                "./esm/color.js"
              ), c = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), l = i(
                /*! ./object3d.js */
                "./esm/layers/object3d.js"
              );
              function g() {
                l.Object3dLayer.call(this), this.id = g.issGuid;
              }
              g.issGuid = e.Guid.fromString("00000001-0002-0003-0405-060708090a0b"), g._loading$2 = !1, g._issmodel$2 = null, g._doc$2 = null, g.loadBackground = function() {
                if (!(g._loading$2 || r.freestandingMode)) {
                  g._loading$2 = !0;
                  var b = c.URLHelpers.singleton.coreStaticUrl("data/iss.wtt");
                  g._doc$2 = (0, r.tourDocumentFromUrlRaw)(b, function() {
                    g.createSpaceStation();
                  });
                }
              }, g.createSpaceStation = function() {
                g._doc$2.set_id("28016047-97a9-4b33-a226-cd820262a151");
                var b = "0c10ae54-b6da-4282-bfda-f34562d403bc.3ds", V = new l.Object3d(g._doc$2, b, !0, !1, !0, o.Colors.get_white());
                V != null && (V.issLayer = !0, g._issmodel$2 = V);
              };
              var a = {
                draw: function(b, V, y) {
                  if (this.object3d == null && g._issmodel$2 == null && !g._loading$2) {
                    var C = _.Matrix3d.multiplyMatrix(b.get_world(), b.get_view()), E = C.transform(_.Vector3d.get_empty()), v = Math.sqrt(C.get_m11() * C.get_m11() + C.get_m22() * C.get_m22() + C.get_m33() * C.get_m33()), m = E.length(), L = v, A = t.ss.truncate(b.height), K = b.get_projection().get_m11(), T = b.get_projection().get_m34(), w = b.get_projection().get_m44(), f = Math.abs(T) * m + w, R = K / f * A, O = L * R;
                    O > 0.5 && g.loadBackground();
                  }
                  return this.object3d = g._issmodel$2, l.Object3dLayer.prototype.draw.call(this, b, V, y);
                },
                getPrimaryUI: function() {
                  return null;
                },
                addFilesToCabinet: function(b) {
                },
                loadData: function(b, V) {
                },
                cleanUp: function() {
                }
              };
              (0, n.registerType)("ISSLayer", [g, a, l.Object3dLayer]);
            }
          ),
          /***/
          "./esm/layers/layer.js": (
            /*!*****************************!*\
              !*** ./esm/layers/layer.js ***!
              \*****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                AltUnits: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                DomainValue: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                FadeType: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                Layer: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                LayerCollection: () => (
                  /* binding */
                  E
                )
                /* harmony export */
              });
              var t = i(
                /*! pako */
                "../node_modules/pako/index.js"
              ), n = /* @__PURE__ */ i.n(t), e = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), _ = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), r = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), o = i(
                /*! ../color.js */
                "./esm/color.js"
              ), c = i(
                /*! ../interfaces.js */
                "./esm/interfaces.js"
              ), l = i(
                /*! ../util.js */
                "./esm/util.js"
              ), g = {
                meters: 1,
                feet: 2,
                inches: 3,
                miles: 4,
                kilometers: 5,
                astronomicalUnits: 6,
                lightYears: 7,
                parsecs: 8,
                megaParsecs: 9,
                custom: 10
              };
              (0, _.registerType)("AltUnits", g), (0, _.registerEnum)("AltUnits", g);
              var a = {
                fadeIn: 1,
                fadeOut: 2,
                both: 3,
                none: 4
              };
              (0, _.registerType)("FadeType", a), (0, _.registerEnum)("FadeType", a);
              function b(m, L) {
                this.markerIndex = 4, this.customMarker = null, this.text = m, this.markerIndex = L;
              }
              var V = {};
              (0, _.registerType)("DomainValue", [b, V, null]);
              function y() {
                this.id = l.Guid.newGuid(), this.loadedFromTour = !1, this.tourDocument = null, this.opacity = 1, this.opened = !1, this._startTime = e.ss.date("01/01/1900"), this._endTime = e.ss.date("01/01/2100"), this._fadeSpan = 0, this._fadeType = 4, this.version = 0, this.color = o.Colors.get_white(), this.enabled = !0, this.astronomical = !1;
              }
              var C = {
                getPrimaryUI: function() {
                  return null;
                },
                getFileStreamUrl: function(m) {
                  return this.tourDocument != null ? this.tourDocument.getFileStream(m) : null;
                },
                get_opacity: function() {
                  return this.opacity;
                },
                set_opacity: function(m) {
                  return this.opacity !== m && (this.version++, this.opacity = m), m;
                },
                get_opened: function() {
                  return this.opened;
                },
                set_opened: function(m) {
                  return this.opened !== m && (this.version++, this.opened = m), m;
                },
                get_startTime: function() {
                  return this._startTime;
                },
                set_startTime: function(m) {
                  return e.ss.compareDates(this._startTime, m) || (this.version++, this._startTime = m), m;
                },
                get_endTime: function() {
                  return this._endTime;
                },
                set_endTime: function(m) {
                  return e.ss.compareDates(this._endTime, m) || (this.version++, this._endTime = m), m;
                },
                get_fadeSpan: function() {
                  return this._fadeSpan;
                },
                set_fadeSpan: function(m) {
                  return this.version++, this._fadeSpan = m, m;
                },
                get_fadeType: function() {
                  return this._fadeType;
                },
                set_fadeType: function(m) {
                  return this._fadeType !== m && (this.set_version(this.get_version() + 1) - 1, this._fadeType = m), m;
                },
                get_version: function() {
                  return this.version;
                },
                set_version: function(m) {
                  return this.version = m, m;
                },
                findClosest: function(m, L, A, K) {
                  return A;
                },
                hoverCheckScreenSpace: function(m) {
                  return !1;
                },
                clickCheckScreenSpace: function(m) {
                  return !1;
                },
                draw: function(m, L, A) {
                  return !0;
                },
                preDraw: function(m, L) {
                  return !0;
                },
                updateData: function(m, L, A, K) {
                  return !0;
                },
                // "updateData" used to be named this. We add this function as a
                // compatibility shim just in case there's some JavaScript out there
                // still using the old name.
                upadteData: function(m, L, A, K) {
                  return this.updateData(m, L, A, K);
                },
                canCopyToClipboard: function() {
                  return !1;
                },
                copyToClipboard: function() {
                },
                getParams: function() {
                  var m = new Array(5);
                  return m[0] = this.color.r / 255, m[1] = this.color.g / 255, m[2] = this.color.b / 255, m[3] = this.color.a / 255, m[4] = this.opacity, m;
                },
                setParams: function(m) {
                  m.length === 5 && (this.opacity = m[4], this.color = o.Color.fromArgb(m[3] * 255, m[0] * 255, m[1] * 255, m[2] * 255));
                },
                getParamNames: function() {
                  return ["Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
                },
                getEditUI: function() {
                  return e.ss.safeCast(this, c.IUiController);
                },
                cleanUp: function() {
                },
                get_name: function() {
                  return this._name;
                },
                set_name: function(m) {
                  return this._name !== m && (this.version++, this._name = m), m;
                },
                toString: function() {
                  return this._name;
                },
                get_referenceFrame: function() {
                  return this.referenceFrame;
                },
                set_referenceFrame: function(m) {
                  return this.referenceFrame = m, m;
                },
                getProps: function() {
                  return "";
                },
                get_color: function() {
                  return this.color;
                },
                set_color: function(m) {
                  return this.color !== m && (this.color = m, this.version++), m;
                },
                colorChanged: function() {
                },
                get_colorValue: function() {
                  return this.get_color().toString();
                },
                set_colorValue: function(m) {
                  return this.set_color(o.Color.fromName(m)), m;
                },
                // These named accessor functions were added so that we can support
                // `enabled` as a "setting" in our TypeScript framework, without breaking
                // anything that might rely on `this.enabled` being a genuine bool.
                get_enabled: function() {
                  return this.enabled;
                },
                set_enabled: function(m) {
                  return this.enabled = m, m;
                },
                get_astronomical: function() {
                  return this.astronomical;
                },
                set_astronomical: function(m) {
                  return this.astronomical !== m && (this.version++, this.astronomical = m), m;
                },
                getTypeName: function() {
                  return "TerraViewer.Layer";
                },
                saveToXml: function(m) {
                  m._writeStartElement("Layer"), m._writeAttributeString("Id", this.id.toString()), m._writeAttributeString("Type", this.getTypeName()), m._writeAttributeString("Name", this.get_name()), m._writeAttributeString("ReferenceFrame", this.referenceFrame), m._writeAttributeString("Color", this.color.save()), m._writeAttributeString("Opacity", this.opacity.toString()), m._writeAttributeString("StartTime", r.Util.xmlDate(this.get_startTime())), m._writeAttributeString("EndTime", r.Util.xmlDate(this.get_endTime())), m._writeAttributeString("FadeSpan", this.get_fadeSpan().toString()), m._writeAttributeString("FadeType", this.get_fadeType().toString()), this.writeLayerProperties(m), m._writeEndElement();
                },
                writeLayerProperties: function(m) {
                },
                initializeFromXml: function(m) {
                },
                initFromXml: function(m) {
                  if (this.id = l.Guid.fromString(m.attributes.getNamedItem("Id").nodeValue), this.set_name(m.attributes.getNamedItem("Name").nodeValue), this.referenceFrame = m.attributes.getNamedItem("ReferenceFrame").nodeValue, this.color = o.Color.load(m.attributes.getNamedItem("Color").nodeValue), this.opacity = parseFloat(m.attributes.getNamedItem("Opacity").nodeValue), m.attributes.getNamedItem("StartTime") != null && this.set_startTime(new Date(m.attributes.getNamedItem("StartTime").nodeValue)), m.attributes.getNamedItem("EndTime") != null && this.set_endTime(new Date(m.attributes.getNamedItem("EndTime").nodeValue)), m.attributes.getNamedItem("FadeSpan") != null && this.set_fadeSpan(r.Util.parseTimeSpan(m.attributes.getNamedItem("FadeSpan").nodeValue)), m.attributes.getNamedItem("FadeType") != null)
                    switch (m.attributes.getNamedItem("FadeType").nodeValue) {
                      case "In":
                        this.set_fadeType(1);
                        break;
                      case "Out":
                        this.set_fadeType(2);
                        break;
                      case "Both":
                        this.set_fadeType(3);
                        break;
                      case "None":
                        this.set_fadeType(4);
                        break;
                    }
                  this.initializeFromXml(m);
                },
                loadData: function(m, L) {
                },
                addFilesToCabinet: function(m) {
                },
                // This method decompresses a blob into a string, and if the string cannot be decompressed
                // due to an invalid header, we assume the blob is not compressed and return the string
                // as-is.
                getStringFromGzipBlob: function(m, L) {
                  var A = new FileReader();
                  A.onloadend = function(K) {
                    var T = "";
                    try {
                      T = n().inflate(K.target.result, { to: "string" });
                    } catch (f) {
                      var w = f.toString();
                      if (w === "incorrect header check" || w === "unknown compression method")
                        T = String.fromCharCode.apply(null, new Uint8Array(K.target.result));
                      else
                        throw f;
                    }
                    L(T);
                  }, A.readAsArrayBuffer(m);
                }
              };
              (0, _.registerType)("Layer", [y, C, null]);
              function E() {
                y.call(this);
              }
              var v = {
                draw: function(m, L, A) {
                  return y.prototype.draw.call(this, m, L, !1);
                }
              };
              (0, _.registerType)("LayerCollection", [E, v, y]);
            }
          ),
          /***/
          "./esm/layers/layer_manager.js": (
            /*!*************************************!*\
              !*** ./esm/layers/layer_manager.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FrameTarget: () => (
                  /* binding */
                  k
                ),
                /* harmony export */
                GroundOverlayLayer: () => (
                  /* binding */
                  B
                ),
                /* harmony export */
                LayerManager: () => (
                  /* binding */
                  d
                ),
                /* harmony export */
                LayerMap: () => (
                  /* binding */
                  F
                ),
                /* harmony export */
                ReferenceFrames: () => (
                  /* binding */
                  P
                ),
                /* harmony export */
                SkyOverlays: () => (
                  /* binding */
                  Y
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), o = i(
                /*! ../astrocalc/elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), c = i(
                /*! ../utilities/histogram.js */
                "./esm/utilities/histogram.js"
              ), l = i(
                /*! ../utilities/simple_input.js */
                "./esm/utilities/simple_input.js"
              ), g = i(
                /*! ../utilities/color_picker.js */
                "./esm/utilities/color_picker.js"
              ), a = i(
                /*! ../utilities/context_menu_strip.js */
                "./esm/utilities/context_menu_strip.js"
              ), b = i(
                /*! ../color.js */
                "./esm/color.js"
              ), V = i(
                /*! ./fits_image.js */
                "./esm/layers/fits_image.js"
              ), y = i(
                /*! ../imageset.js */
                "./esm/imageset.js"
              ), C = i(
                /*! ../planets.js */
                "./esm/planets.js"
              ), E = i(
                /*! ../settings.js */
                "./esm/settings.js"
              ), v = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), m = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), L = i(
                /*! ../util.js */
                "./esm/util.js"
              ), A = i(
                /*! ../web_file.js */
                "./esm/web_file.js"
              ), K = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), T = i(
                /*! ./reference_frame.js */
                "./esm/layers/reference_frame.js"
              ), w = i(
                /*! ./great_circle_route_layer.js */
                "./esm/layers/great_circle_route_layer.js"
              ), f = i(
                /*! ./grid_layer.js */
                "./esm/layers/grid_layer.js"
              ), R = i(
                /*! ./imageset_layer.js */
                "./esm/layers/imageset_layer.js"
              ), O = i(
                /*! ./iss_layer.js */
                "./esm/layers/iss_layer.js"
              ), W = i(
                /*! ./orbit.js */
                "./esm/layers/orbit.js"
              ), N = i(
                /*! ./orbit_layer.js */
                "./esm/layers/orbit_layer.js"
              ), $ = i(
                /*! ./spreadsheet_layer.js */
                "./esm/layers/spreadsheet_layer.js"
              ), S = i(
                /*! ./vo_table_layer.js */
                "./esm/layers/vo_table_layer.js"
              ), I = i(
                /*! ../tours/tour_stop.js */
                "./esm/tours/tour_stop.js"
              ), x = i(
                /*! ../tours/tour_player.js */
                "./esm/tours/tour_player.js"
              ), P = {
                sky: 0,
                ecliptic: 1,
                galactic: 2,
                sun: 3,
                mercury: 4,
                venus: 5,
                earth: 6,
                mars: 7,
                jupiter: 8,
                saturn: 9,
                uranus: 10,
                neptune: 11,
                pluto: 12,
                moon: 13,
                io: 14,
                europa: 15,
                ganymede: 16,
                callisto: 17,
                custom: 18,
                identity: 19,
                sandbox: 20
              };
              (0, n.registerType)("ReferenceFrames", P), (0, n.registerEnum)("ReferenceFrames", P);
              function d() {
              }
              d._version = 0, d._tourLayers = !1, d._layerMaps = {}, d._layerMapsTours = {}, d._allMaps = {}, d._allMapsTours = {}, d._currentMap = "Earth", d._layerList = {}, d._layerListTours = {}, d._moonfile = "", d._selectedLayer = null, d._lastMenuClick = new r.Vector2d(), d.get_version = function() {
                return d._version;
              }, d.set_version = function(j) {
                return d._version = j, j;
              }, d.get_frameWizardDialog = function() {
                return d._frameWizardDialog;
              }, d.get_dataVizWizardDialog = function() {
                return d._dataVizWizardDialog;
              }, d.get_referenceFramePropsDialog = function() {
                return d._referenceFramePropsDialog;
              }, d.get_greatCircleDlg = function() {
                return d._greatCircleDialog;
              }, d.get_tourLayers = function() {
                return d._tourLayers;
              }, d.set_tourLayers = function(j) {
                return d._tourLayers !== j && !j ? (d._clearLayers(), d._tourLayers = j, d.loadTree()) : d._tourLayers !== j && j && (d._tourLayers = j, d.initLayers()), j;
              }, d.loadTree = function() {
                e.globalScriptInterface != null && e.globalScriptInterface.refreshLayerManagerNow();
              }, d.get_layerMaps = function() {
                return d.get_tourLayers() ? d._layerMapsTours : d._layerMaps;
              }, d.set_layerMaps = function(j) {
                return d.get_tourLayers() ? d._layerMapsTours = j : d._layerMaps = j, j;
              }, d.get_allMaps = function() {
                return d.get_tourLayers() ? d._allMapsTours : d._allMaps;
              }, (0, e.set_layerManagerGetAllMaps)(d.get_allMaps), d.set_allMaps = function(j) {
                return d.get_tourLayers() ? d._allMapsTours = j : d._allMaps = j, j;
              }, d.get_currentMap = function() {
                return d._currentMap;
              }, d.set_currentMap = function(j) {
                return d._currentMap = j, j;
              }, d.get_layerList = function() {
                return d.get_tourLayers() ? d._layerListTours : d._layerList;
              }, d.set_layerList = function(j) {
                return d.get_tourLayers() ? d._layerListTours = j : d._layerList = j, j;
              }, d.oneTimeInitialization = function() {
                d._webFileMoons == null && d.getMoonFile(m.URLHelpers.singleton.engineAssetUrl("moons.txt")), $.PushPin.triggerLoadSprite();
              }, d.initLayers = function() {
                d._clearLayers();
                var j = null, ee = !d.get_tourLayers() && !e.freestandingMode;
                if (ee) {
                  j = new F("ISS", 18), j.frame.epoch = v.SpaceTimeController._twoLineDateToJulian("10184.51609218"), j.frame.semiMajorAxis = 672882941e-2, j.frame.referenceFrameType = 1, j.frame.inclination = 51.6442, j.frame.longitudeOfAscendingNode = 147.0262, j.frame.eccentricity = 9909e-7, j.frame.meanAnomolyAtEpoch = 325.5563, j.frame.meanDailyMotion = 5659.821558, j.frame.argumentOfPeriapsis = 286.4623, j.frame.scale = 1, j.frame.semiMajorAxisUnits = 1, j.frame.meanRadius = 130, j.frame.oblateness = 0, j.frame.showOrbitPath = !0;
                  var Z = new Array(0), z = m.URLHelpers.singleton.coreDynamicUrl("wwtweb/isstle.aspx"), te;
                  te = new A.WebFile(z), te.onStateChange = function() {
                    if (te.get_state() === 1) {
                      var re = te.getText();
                      Z = re.split(`
`), Z.length > 1 && j.frame.fromTLE(Z[0], Z[1], 3986004418e5);
                    }
                  }, te.send(), j.enabled = !0;
                }
                d.get_layerMaps().Sun = new F("Sun", 3), d.get_layerMaps().Sun.addChild(new F("Mercury", 4)), d.get_layerMaps().Sun.addChild(new F("Venus", 5)), d.get_layerMaps().Sun.addChild(new F("Earth", 6)), d.get_layerMaps().Sun.childMaps.Earth.addChild(new F("Moon", 13)), ee && d.get_layerMaps().Sun.childMaps.Earth.addChild(j), d.get_layerMaps().Sun.addChild(new F("Mars", 7)), d.get_layerMaps().Sun.addChild(new F("Jupiter", 8)), d.get_layerMaps().Sun.childMaps.Jupiter.addChild(new F("Io", 14)), d.get_layerMaps().Sun.childMaps.Jupiter.addChild(new F("Europa", 15)), d.get_layerMaps().Sun.childMaps.Jupiter.addChild(new F("Ganymede", 16)), d.get_layerMaps().Sun.childMaps.Jupiter.addChild(new F("Callisto", 17)), d.get_layerMaps().Sun.addChild(new F("Saturn", 9)), d.get_layerMaps().Sun.addChild(new F("Uranus", 10)), d.get_layerMaps().Sun.addChild(new F("Neptune", 11)), d.get_layerMaps().Sun.addChild(new F("Pluto", 12)), d._addMoons(d._moonfile), d.get_layerMaps().Sky = new F("Sky", 0), d.get_layerMaps().Sun.open = !0, d._allMaps = {}, d._addAllMaps(d.get_layerMaps(), null), ee && d._addIss(), d._version++, d.loadTree();
              }, d._addIss = function() {
                var j = new O.ISSLayer();
                j.set_name(L.Language.getLocalizedText(1314, "ISS Model  (Toshiyuki Takahei)")), j.enabled = E.Settings.get_active().get_showISSModel(), d.get_layerList()[j.id] = j, j.set_referenceFrame("ISS"), d.get_allMaps().ISS.layers.push(j), d.get_allMaps().ISS.open = !0;
              }, d._addAllMaps = function(j, ee) {
                for (var Z = t.ss.enumerate(t.ss.keys(j)); Z.moveNext(); ) {
                  var z = Z.current, te = j[z];
                  te.frame.parent = ee, d.get_allMaps()[te.get_name()] = te, d._addAllMaps(te.childMaps, te.get_name());
                }
              }, d._clearLayers = function() {
                for (var j = t.ss.enumerate(t.ss.keys(d.get_layerList())); j.moveNext(); ) {
                  var ee = j.current, Z = d.get_layerList()[ee];
                  Z.cleanUp();
                }
                t.ss.clearKeys(d.get_layerList()), t.ss.clearKeys(d.get_layerMaps());
              }, d.getMoonFile = function(j) {
                d._webFileMoons = new A.WebFile(j), d._webFileMoons.onStateChange = d.moonFileStateChange, d._webFileMoons.send();
              }, d.moonFileStateChange = function() {
                d._webFileMoons.get_state() === 2 ? alert(d._webFileMoons.get_message()) : d._webFileMoons.get_state() === 1 && (d._moonfile = d._webFileMoons.getText(), d.initLayers());
              }, d._addMoons = function(j) {
                for (var ee = j.split(`\r
`), Z = !0, z = t.ss.enumerate(ee); z.moveNext(); ) {
                  var te = z.current;
                  if (Z) {
                    Z = !1;
                    continue;
                  }
                  var re = te.split("	");
                  if (re.length > 16) {
                    var le = re[0], ae = new F(re[2], 18);
                    ae.frame._systemGenerated = !0, ae.frame.epoch = parseFloat(re[1]), ae.frame.semiMajorAxis = parseFloat(re[3]) * 1e3, ae.frame.referenceFrameType = 1, ae.frame.inclination = parseFloat(re[7]), ae.frame.longitudeOfAscendingNode = parseFloat(re[8]), ae.frame.eccentricity = parseFloat(re[4]), ae.frame.meanAnomolyAtEpoch = parseFloat(re[6]), ae.frame.meanDailyMotion = parseFloat(re[9]), ae.frame.argumentOfPeriapsis = parseFloat(re[5]), ae.frame.scale = 1, ae.frame.semiMajorAxisUnits = 1, ae.frame.meanRadius = parseFloat(re[16]) * 1e3, ae.frame.rotationalPeriod = parseFloat(re[17]), ae.frame.showAsPoint = !1, ae.frame.showOrbitPath = !0, ae.frame.set_representativeColor(b.Color.fromArgb(255, 175, 216, 230)), ae.frame.oblateness = 0, d.get_layerMaps().Sun.childMaps[le].addChild(ae);
                  }
                }
              }, d.addVoTableLayer = function(j, ee) {
                return d.addVoTableLayerWithPlotType(j, ee, 2);
              }, d.addVoTableLayerWithPlotType = function(j, ee, Z) {
                var z = S.VoTableLayer.create(j, Z);
                return z.set_name(ee), z.set_astronomical(!0), z.set_referenceFrame("Sky"), d.get_layerList()[z.id] = z, d.get_allMaps().Sky.layers.push(z), d.get_allMaps().Sky.open = !0, z.enabled = !0, d._version++, d.loadTree(), z;
              }, d.addImageSetLayer = function(j, ee) {
                var Z = R.ImageSetLayer.create(j);
                return d.addFitsImageSetLayer(Z, ee);
              }, d.addImageSetLayerCallback = function(j, ee, Z) {
                var z = R.ImageSetLayer.create(j), te = j.get_extension() === ".fits" && z.getFitsImage() == null && j.get_projection() !== y.ProjectionType.healpix;
                return te && (j.get_fitsProperties().onMainImageLoaded = function(re) {
                  re.applyDisplaySettings(), Z != null && Z(z);
                }), d.addFitsImageSetLayer(z, ee), Z != null && (!te || j.get_fitsProperties().mainImageLoadedEventHasFired) && Z(z), z;
              }, d.addFitsImageSetLayer = function(j, ee) {
                return j.doneLoading(null), j.set_name(ee), j.set_astronomical(!0), j.set_referenceFrame("Sky"), d.get_layerList()[j.id] = j, d.get_allMaps().Sky.layers.push(j), d.get_allMaps().Sky.open = !0, j.enabled = !0, d._version++, d.loadTree(), j;
              }, d.getNextFitsName = function() {
                return d._getNextName("Fits Image");
              }, d.getNextImageSetName = function() {
                return d._getNextName("Image Set");
              }, d._getNextName = function(j) {
                for (var ee = 0, Z = t.ss.enumerate(t.ss.keys(d.get_allMaps())); Z.moveNext(); )
                  for (var z = Z.current, te = t.ss.enumerate(d.get_allMaps()[z].layers); te.moveNext(); ) {
                    var re = te.current;
                    if (t.ss.startsWith(re.get_name(), j + " ")) {
                      var le = t.ss.replaceString(re.get_name(), j + " ", "");
                      try {
                        var ae = parseInt(le);
                        ae > ee && (ee = ae);
                      } catch {
                      }
                    }
                  }
                return t.ss.format("{0} {1}", j, ee + 1);
              }, d._closeAllTourLoadedLayers = function() {
                for (var j = [], ee = t.ss.enumerate(t.ss.keys(d.get_layerList())); ee.moveNext(); ) {
                  var Z = ee.current, z = d.get_layerList()[Z];
                  z.loadedFromTour && j.push(z.id);
                }
                for (var te = t.ss.enumerate(j); te.moveNext(); ) {
                  var re = te.current;
                  d.deleteLayerByID(re, !0, !1);
                }
                for (var le = [], ae = t.ss.enumerate(t.ss.keys(d.get_allMaps())); ae.moveNext(); ) {
                  var Z = ae.current, oe = d.get_allMaps()[Z];
                  oe.loadedFromTour && !oe.layers.length && le.push(oe.get_name());
                }
                for (var de = t.ss.enumerate(le); de.moveNext(); ) {
                  var ve = de.current;
                  d.purgeLayerMapDeep(d.get_allMaps()[ve], !0);
                }
                d.set_version(d.get_version() + 1) - 1, d.loadTree();
              }, d.purgeLayerMapDeep = function(j, ee) {
                for (var Z = t.ss.enumerate(j.layers); Z.moveNext(); ) {
                  var z = Z.current;
                  d.deleteLayerByID(z.id, !1, !1);
                }
                j.layers.length = 0;
                for (var te = t.ss.enumerate(t.ss.keys(j.childMaps)); te.moveNext(); ) {
                  var re = te.current, le = j.childMaps[re];
                  d.purgeLayerMapDeep(le, !1);
                }
                t.ss.clearKeys(j.childMaps), ee && (t.ss.emptyString(j.frame.parent) ? t.ss.keyExists(d.get_layerMaps(), j.get_name()) && delete d.get_layerMaps()[j.get_name()] : t.ss.keyExists(d.get_allMaps(), j.frame.parent) && delete d.get_allMaps()[j.frame.parent].childMaps[j.get_name()]), delete d.get_allMaps()[j.get_name()], d._version++;
              }, d._cleanAllTourLoadedLayers = function() {
                for (var j = t.ss.enumerate(t.ss.keys(d.get_layerList())); j.moveNext(); ) {
                  var ee = j.current, Z = d.get_layerList()[ee];
                  Z.loadedFromTour && (Z.loadedFromTour = !1);
                }
              }, d.mergeToursLayers = function() {
                d._tourLayers = !1;
                for (var j = !1, ee = !1, Z = t.ss.enumerate(t.ss.keys(d._allMapsTours)); Z.moveNext(); ) {
                  var z = Z.current, te = d._allMapsTours[z];
                  if (!t.ss.keyExists(d._allMaps, te.get_name())) {
                    var re = new F(te.get_name(), 18);
                    re.frame = te.frame, re.loadedFromTour = !0, d.get_allMaps()[re.get_name()] = re;
                  }
                }
                d.connectAllChildren();
                for (var le = t.ss.enumerate(t.ss.keys(d._layerListTours)); le.moveNext(); ) {
                  var z = le.current, ae = d._layerListTours[z];
                  t.ss.keyExists(d.get_layerList(), ae.id) && (ee || (j = !0, ee = !0), j && d.deleteLayerByID(ae.id, !0, !1)), t.ss.keyExists(d.get_layerList(), ae.id) ? ae.cleanUp() : t.ss.keyExists(d.get_allMaps(), ae.get_referenceFrame()) && (d.get_layerList()[ae.id] = ae, d.get_allMaps()[ae.get_referenceFrame()].layers.push(ae));
                }
                t.ss.clearKeys(d._layerListTours), t.ss.clearKeys(d._allMapsTours), t.ss.clearKeys(d._layerMapsTours), d.loadTree();
              }, d.connectAllChildren = function() {
                for (var j = t.ss.enumerate(t.ss.keys(d.get_allMaps())); j.moveNext(); ) {
                  var ee = j.current, Z = d.get_allMaps()[ee];
                  t.ss.emptyString(Z.frame.parent) && !t.ss.keyExists(d.get_layerMaps(), Z.frame.name) ? d.get_layerMaps()[Z.get_name()] = Z : !t.ss.emptyString(Z.frame.parent) && t.ss.keyExists(d.get_allMaps(), Z.frame.parent) && (t.ss.keyExists(d.get_allMaps()[Z.frame.parent].childMaps, Z.frame.name) || (d.get_allMaps()[Z.frame.parent].childMaps[Z.frame.name] = Z, Z.parent = d.get_allMaps()[Z.frame.parent]));
                }
              }, d.deleteLayerByID = function(j, ee, Z) {
                if (t.ss.keyExists(d.get_layerList(), j)) {
                  var z = d.get_layerList()[j];
                  return z.cleanUp(), ee && t.ss.remove(d.get_allMaps()[z.get_referenceFrame()].layers, z), delete d.get_layerList()[j], d._version++, Z && d.loadTree(), !0;
                } else
                  return !1;
              }, d._getFrameTarget = function(j, ee) {
                var Z = new k(), z = r.Vector3d.get_empty();
                if (Z.target = r.Vector3d.get_empty(), Z.matrix = r.Matrix3d.get_identity(), !t.ss.keyExists(d.get_allMaps(), ee))
                  return Z;
                var te = [], re = d.get_allMaps()[ee];
                for (te.push(re); re.frame.reference === 18; )
                  re = re.parent, te.splice(0, 0, re);
                for (var le = j.get_world().clone(), ae = j.get_worldBaseNonRotating(), oe = j.get_worldBase(), de = j.get_nominalRadius(), ve = t.ss.enumerate(te); ve.moveNext(); ) {
                  var ce = ve.current;
                  ce.frame.reference !== 18 && ce.frame.reference !== 20 ? C.Planets.setupPlanetMatrix(j, n.Enums.parse("SolarSystemObjects", ce.frame.name), r.Vector3d.get_empty(), !1) : (ce.computeFrame(j), ce.frame.useRotatingParentFrame() ? j.set_world(r.Matrix3d.multiplyMatrix(ce.frame.worldMatrix, j.get_world())) : j.set_world(r.Matrix3d.multiplyMatrix(ce.frame.worldMatrix, j.get_worldBaseNonRotating())), ce.frame.referenceFrameType === 3 && j.set_worldBaseNonRotating(j.get_world().clone()), j.set_nominalRadius(ce.frame.meanRadius));
                }
                z = j.get_world().transform(z);
                var he = j.get_world().transform(r.Vector3d.create(0, 0, 1)), ye = r.Vector3d.subtractVectors(j.get_world().transform(r.Vector3d.create(0, 1, 0)), z);
                return ye.normalize(), Z.matrix = r.Matrix3d.lookAtLH(new r.Vector3d(), r.Vector3d.subtractVectors(he, z), ye), j.set_nominalRadius(de), j.set_world(le), j.set_worldBaseNonRotating(ae), j.set_worldBase(oe), Z.target = z, Z;
              }, d._prepTourLayers = function() {
                if (x.TourPlayer.get_playing()) {
                  var j = e.globalWWTControl.uiController;
                  if (j != null) {
                    var ee = j.get_tour();
                    if (ee.get_currentTourStop() != null && (j.updateTweenPosition(-1), !ee.get_currentTourStop().get_keyFramed())) {
                      ee.get_currentTourStop()._updateLayerOpacity();
                      for (var Z = t.ss.enumerate(t.ss.keys(ee.get_currentTourStop().layers)); Z.moveNext(); ) {
                        var z = Z.current, te = ee.get_currentTourStop().layers[z];
                        t.ss.keyExists(d.get_layerList(), te.id) && (d.get_layerList()[te.id].set_opacity(te.frameOpacity), d.get_layerList()[te.id].setParams(te.frameParams));
                      }
                    }
                  }
                }
              }, d._draw = function(j, ee, Z, z, te, re) {
                if (t.ss.keyExists(d.get_allMaps(), z)) {
                  var le = d.get_allMaps()[z];
                  if (!(!le.enabled || !t.ss.keyCount(le.childMaps) && !le.layers.length && !(le.frame.showAsPoint || le.frame.showOrbitPath))) {
                    if (x.TourPlayer.get_playing()) {
                      var ae = e.globalWWTControl.uiController;
                      if (ae != null) {
                        var oe = ae.get_tour();
                        if (oe.get_currentTourStop() != null) {
                          ae.updateTweenPosition(-1), oe.get_currentTourStop()._updateLayerOpacity();
                          for (var de = t.ss.enumerate(t.ss.keys(oe.get_currentTourStop().layers)); de.moveNext(); ) {
                            var ve = de.current, ce = oe.get_currentTourStop().layers[ve];
                            t.ss.keyExists(d.get_layerList(), ce.id) && (d.get_layerList()[ce.id].set_opacity(ce.frameOpacity), d.get_layerList()[ce.id].setParams(ce.frameParams));
                          }
                        }
                      }
                    }
                    var he = j.get_world(), ye = j.get_worldBaseNonRotating(), fe = j.get_nominalRadius();
                    (le.frame.reference === 18 | le.frame.reference === 18) === 1 && (le.computeFrame(j), le.frame.referenceFrameType !== 1 && le.frame.referenceFrameType !== 2 ? j.set_world(r.Matrix3d.multiplyMatrix(le.frame.worldMatrix, j.get_world())) : j.set_world(r.Matrix3d.multiplyMatrix(le.frame.worldMatrix, j.get_worldBaseNonRotating())), j.set_nominalRadius(le.frame.meanRadius)), le.frame.showAsPoint;
                    for (var Ce = 0; Ce < 2; Ce++)
                      for (var Ae = t.ss.enumerate(d.get_allMaps()[z].layers); Ae.moveNext(); ) {
                        var Te = Ae.current;
                        if (!Ce && t.ss.canCast(Te, R.ImageSetLayer) || Ce === 1 && !t.ss.canCast(Te, R.ImageSetLayer)) {
                          var Re = !1;
                          if (Ce || (Re = !Z && Te.get_overrideDefaultLayer()), Te.enabled && !Re) {
                            var De = v.SpaceTimeController.utcToJulian(Te.get_startTime()), Oe = v.SpaceTimeController.utcToJulian(Te.get_endTime()), Ne = v.SpaceTimeController.utcToJulian(Te.get_startTime()) - (Te.get_fadeType() === 1 || Te.get_fadeType() === 3 ? Te.get_fadeSpan() / 864e6 : 0), Fe = v.SpaceTimeController.utcToJulian(Te.get_endTime()) + (Te.get_fadeType() === 2 || Te.get_fadeType() === 3 ? Te.get_fadeSpan() / 864e6 : 0);
                            if (v.SpaceTimeController.get_jNow() > Ne && v.SpaceTimeController.get_jNow() < Fe) {
                              var $e = 1;
                              if (v.SpaceTimeController.get_jNow() < De && ($e = (v.SpaceTimeController.get_jNow() - Ne) / (Te.get_fadeSpan() / 864e6)), v.SpaceTimeController.get_jNow() > Oe && ($e = (Fe - v.SpaceTimeController.get_jNow()) / (Te.get_fadeSpan() / 864e6)), Te.set_astronomical(Z), t.ss.canCast(Te, $.SpreadSheetLayer)) {
                                var ze = t.ss.safeCast(Te, $.SpreadSheetLayer);
                                ze.draw(j, ee * $e, re);
                              } else
                                Te.draw(j, ee * $e, re);
                            }
                          }
                        }
                      }
                    if (te)
                      for (var se = t.ss.enumerate(t.ss.keys(d.get_allMaps()[z].childMaps)); se.moveNext(); ) {
                        var ve = se.current, be = d.get_allMaps()[z].childMaps[ve];
                        if (t.ss.canCast(be, F)) {
                          if (be.enabled && be.frame.showOrbitPath && E.Settings.get_active().get_solarSystemOrbits() && E.Settings.get_active().get_solarSystemMinorOrbits())
                            if (be.frame.referenceFrameType === 1) {
                              be.frame.get_orbit() == null && be.frame.set_orbit(new W.Orbit(be.frame.get_elements(), 360, be.frame.get_representativeColor(), 1, be.parent.frame.meanRadius));
                              var Pe = j.get_world();
                              j.set_world(r.Matrix3d.multiplyMatrix(le.frame.worldMatrix, j.get_worldBaseNonRotating())), be.frame.get_orbit().draw3D(j, 0.5, r.Vector3d.create(0, 0, 0)), j.set_world(Pe);
                            } else
                              be.frame.referenceFrameType;
                          (be.frame.reference === 18 || be.frame.reference === 19) && d._draw(j, ee, Z, be.get_name(), te, re);
                        }
                      }
                    j.set_nominalRadius(fe), j.set_world(he), j.set_worldBaseNonRotating(ye);
                  }
                }
              }, d._getVisibleLayerList = function(j) {
                for (var ee = {}, Z = t.ss.enumerate(t.ss.keys(d.get_layerList())); Z.moveNext(); ) {
                  var z = Z.current, te = d.get_layerList()[z];
                  if (te.enabled) {
                    var re = new I.LayerInfo();
                    re.startOpacity = re.endOpacity = te.get_opacity(), re.id = te.id, re.startParams = te.getParams(), t.ss.keyExists(j, re.id) ? (re.endOpacity = j[re.id].endOpacity, re.endParams = j[re.id].endParams) : re.endParams = te.getParams(), ee[te.id] = re;
                  }
                }
                return ee;
              }, d.setVisibleLayerList = function(j) {
                for (var ee = t.ss.enumerate(t.ss.keys(d.get_layerList())); ee.moveNext(); ) {
                  var Z = ee.current, z = d.get_layerList()[Z];
                  z.enabled = t.ss.keyExists(j, z.id);
                  try {
                    z.enabled && (z.set_opacity(j[z.id].frameOpacity), z.setParams(j[z.id].frameParams));
                  } catch {
                  }
                }
              }, (0, e.set_setManagerVisibleLayerList)(d.setVisibleLayerList), d._preDraw = function(j, ee, Z, z, te) {
                if (t.ss.keyExists(d.get_allMaps(), z)) {
                  var re = d.get_allMaps()[z];
                  if (!(!t.ss.keyCount(re.childMaps) && !re.layers.length)) {
                    if (x.TourPlayer.get_playing()) {
                      var le = t.ss.safeCast(e.globalWWTControl.uiController, x.TourPlayer);
                      if (le != null) {
                        var ae = le.get_tour();
                        if (ae.get_currentTourStop() != null) {
                          le.updateTweenPosition(-1), ae.get_currentTourStop()._updateLayerOpacity();
                          for (var oe = t.ss.enumerate(t.ss.keys(ae.get_currentTourStop().layers)); oe.moveNext(); ) {
                            var de = oe.current, ve = ae.get_currentTourStop().layers[de];
                            t.ss.keyExists(d.get_layerList(), ve.id) && (d.get_layerList()[ve.id].set_opacity(ve.frameOpacity), d.get_layerList()[ve.id].setParams(ve.frameParams));
                          }
                        }
                      }
                    }
                    var ce = j.get_world(), he = j.get_worldBaseNonRotating(), ye = j.get_nominalRadius();
                    re.frame.reference === 18 && (re.computeFrame(j), re.frame.referenceFrameType !== 1 ? j.set_world(r.Matrix3d.multiplyMatrix(re.frame.worldMatrix, j.get_world())) : j.set_world(r.Matrix3d.multiplyMatrix(re.frame.worldMatrix, j.get_worldBaseNonRotating())), j.set_nominalRadius(re.frame.meanRadius));
                    for (var fe = 0; fe < 2; fe++)
                      for (var Ce = t.ss.enumerate(d.get_allMaps()[z].layers); Ce.moveNext(); ) {
                        var Ae = Ce.current;
                        if ((!fe && t.ss.canCast(Ae, R.ImageSetLayer) || fe === 1 && !t.ss.canCast(Ae, R.ImageSetLayer)) && Ae.enabled) {
                          var Te = v.SpaceTimeController.utcToJulian(Ae.get_startTime()), Re = v.SpaceTimeController.utcToJulian(Ae.get_endTime()), De = v.SpaceTimeController.utcToJulian(Ae.get_startTime()) - (Ae.get_fadeType() === 1 || Ae.get_fadeType() === 3 ? Ae.get_fadeSpan() / 864e6 : 0), Oe = v.SpaceTimeController.utcToJulian(Ae.get_endTime()) + (Ae.get_fadeType() === 2 || Ae.get_fadeType() === 3 ? Ae.get_fadeSpan() / 864e6 : 0);
                          if (v.SpaceTimeController.get_jNow() > De && v.SpaceTimeController.get_jNow() < Oe) {
                            var Ne = 1;
                            v.SpaceTimeController.get_jNow() < Te && (Ne = (v.SpaceTimeController.get_jNow() - De) / (Ae.get_fadeSpan() / 864e6)), v.SpaceTimeController.get_jNow() > Re && (Ne = (Oe - v.SpaceTimeController.get_jNow()) / (Ae.get_fadeSpan() / 864e6)), re.frame.reference || Ae.set_astronomical(!0), Ae.preDraw(j, ee * Ne);
                          }
                        }
                      }
                    if (te)
                      for (var Fe = t.ss.enumerate(t.ss.keys(d.get_allMaps()[z].childMaps)); Fe.moveNext(); ) {
                        var de = Fe.current, $e = d.get_allMaps()[z].childMaps[de];
                        ($e.frame.reference === 18 || $e.frame.reference === 19) && d._preDraw(j, ee, Z, $e.get_name(), te);
                      }
                    j.set_nominalRadius(ye), j.set_world(ce), j.set_worldBaseNonRotating(he);
                  }
                }
              }, d.add = function(j, ee) {
                t.ss.keyExists(d.get_layerList(), j.id) || t.ss.keyExists(d.get_allMaps(), j.get_referenceFrame()) && (d.get_layerList()[j.id] = j, d.get_allMaps()[j.get_referenceFrame()].layers.push(j), d._version++, ee && d.loadTree());
              }, d.layerSelectionChanged = function(j) {
                if (d._selectedLayer = j, d._selectedLayer != null)
                  if (t.ss.canCast(d._selectedLayer, F)) {
                    var ee = t.ss.safeCast(d._selectedLayer, F);
                    ee != null && d.set_currentMap(ee.get_name());
                  } else {
                    var Z = t.ss.safeCast(d._selectedLayer, R.ImageSetLayer);
                    if (Z != null && t.ss.canCast(Z.get_imageSet().get_wcsImage(), V.FitsImage))
                      return;
                  }
                e.globalScriptInterface.setTimeSlider("left", ""), e.globalScriptInterface.setTimeSlider("right", ""), e.globalScriptInterface.setTimeSlider("title", L.Language.getLocalizedText(667, "Time Scrubber"));
              }, d.setTimeSliderValue = function(j) {
                var ee = t.ss.safeCast(d._selectedLayer, R.ImageSetLayer);
                ee != null && t.ss.canCast(ee.get_imageSet().get_wcsImage(), V.FitsImage);
              }, d.showLayerMenu = function(j, ee, Z) {
                if (d._lastMenuClick = r.Vector2d.create(ee, Z), d._selectedLayer = j, t.ss.canCast(j, F) ? d.set_currentMap(j.get_name()) : t.ss.canCast(j, K.Layer) && d.set_currentMap(j.get_referenceFrame()), t.ss.canCast(j, K.Layer) && !t.ss.canCast(j, Y)) {
                  var z = j;
                  d._contextMenu = new a.ContextMenuStrip();
                  var te = a.ToolStripMenuItem.create(L.Language.getLocalizedText(225, "Rename")), re = a.ToolStripMenuItem.create(L.Language.getLocalizedText(981, "Expand")), le = a.ToolStripMenuItem.create(L.Language.getLocalizedText(982, "Collapse")), ae = a.ToolStripMenuItem.create(L.Language.getLocalizedText(428, "Copy")), oe = a.ToolStripMenuItem.create(L.Language.getLocalizedText(167, "Delete")), de = a.ToolStripMenuItem.create(L.Language.getLocalizedText(960, "Save...")), ve = a.ToolStripMenuItem.create(L.Language.getLocalizedText(983, "Publish to Community...")), ce = a.ToolStripMenuItem.create(L.Language.getLocalizedText(458, "Color/Opacity")), he = a.ToolStripMenuItem.create(L.Language.getLocalizedText(305, "Opacity")), ye = a.ToolStripMenuItem.create(L.Language.getLocalizedText(20, "Properties")), fe = a.ToolStripMenuItem.create(L.Language.getLocalizedText(1291, "Scale/Histogram")), Ce = a.ToolStripMenuItem.create(L.Language.getLocalizedText(683, "Lifetime")), Ae = new a.ToolStripSeparator(), Te = a.ToolStripMenuItem.create(L.Language.getLocalizedText(684, "Move to Top")), Re = a.ToolStripMenuItem.create(L.Language.getLocalizedText(685, "Move Up")), De = a.ToolStripMenuItem.create(L.Language.getLocalizedText(686, "Move Down")), Oe = a.ToolStripMenuItem.create(L.Language.getLocalizedText(687, "Move to Bottom")), Ne = a.ToolStripMenuItem.create(L.Language.getLocalizedText(957, "VO Table Viewer")), Fe = new a.ToolStripSeparator(), $e = a.ToolStripMenuItem.create(L.Language.getLocalizedText(1294, "Background Image Set"));
                  if (Te.click = d._top_Click, Re.click = d._up_Click, De.click = d._down_Click, Oe.click = d._bottom_Click, de.click = d._saveMenu_Click, ve.click = d._publishMenu_Click, re.click = d._expand_Click, le.click = d._collapse_Click, ae.click = d._copyMenu_Click, ce.click = d._colorMenu_Click, oe.click = d._deleteMenu_Click, te.click = d._renameMenu_Click, ye.click = d._propertiesMenu_Click, fe.click = d.scaleMenu_click, $e.click = d._defaultImageset_Click, he.click = d._opacityMenu_Click, Ce.click = d._lifeTimeMenu_Click, Ne.click = d._showViewer_Click, d._contextMenu.items.push(te), !z.get_opened() && z.getPrimaryUI() != null && z.getPrimaryUI().get_hasTreeViewNodes() && d._contextMenu.items.push(re), z.get_opened() && d._contextMenu.items.push(le), z.canCopyToClipboard(), d._contextMenu.items.push(oe), d._contextMenu.items.push(Fe), d._contextMenu.items.push(ce), t.ss.canCast(j, R.ImageSetLayer)) {
                    d._contextMenu.items.push($e);
                    var ze = t.ss.safeCast(j, R.ImageSetLayer);
                    $e.checked = ze.get_overrideDefaultLayer();
                  }
                  if ((t.ss.canCast(j, $.SpreadSheetLayer) || t.ss.canCast(j, w.GreatCirlceRouteLayer)) && d._contextMenu.items.push(ye), t.ss.canCast(j, S.VoTableLayer) && d._contextMenu.items.push(Ne), t.ss.canCast(j, R.ImageSetLayer)) {
                    var ze = t.ss.safeCast(j, R.ImageSetLayer);
                    d._contextMenu.items.push(fe);
                  }
                  d.get_allMaps()[z.get_referenceFrame()].layers.length > 1 && (d._contextMenu.items.push(Ae), d._contextMenu.items.push(Te), d._contextMenu.items.push(Re), d._contextMenu.items.push(De), d._contextMenu.items.push(Oe)), d._contextMenu._show(r.Vector2d.create(ee, Z));
                } else if (t.ss.canCast(j, F)) {
                  var se = t.ss.safeCast(j, F), be = se.frame.reference.toString() === "Sandbox", Pe = se.frame.name === "Dome", Ve = se.frame.name === "Sky";
                  if (Pe)
                    return;
                  d._contextMenu = new a.ContextMenuStrip();
                  var me = a.ToolStripMenuItem.create(L.Language.getLocalizedText(1298, "Track this frame")), Me = a.ToolStripMenuItem.create(L.Language.getLocalizedText(1299, "Fly Here")), ie = a.ToolStripMenuItem.create("Show Orbit"), xe = a.ToolStripMenuItem.create(L.Language.getLocalizedText(674, "New Reference Frame")), We = a.ToolStripMenuItem.create(L.Language.getLocalizedText(675, "New Layer Group")), J = a.ToolStripMenuItem.create(L.Language.getLocalizedText(166, "Add")), we = a.ToolStripMenuItem.create("Add Light");
                  a.ToolStripMenuItem.create(L.Language.getLocalizedText(956, "Add OData/table feed as Layer")), a.ToolStripMenuItem.create(L.Language.getLocalizedText(987, "New WMS Layer"));
                  var Ee = a.ToolStripMenuItem.create(L.Language.getLocalizedText(1300, "New Lat/Lng Grid")), ne = a.ToolStripMenuItem.create(L.Language.getLocalizedText(988, "New Great Circle"));
                  a.ToolStripMenuItem.create(L.Language.getLocalizedText(989, "Import Orbital Elements"));
                  var _e = a.ToolStripMenuItem.create(L.Language.getLocalizedText(1301, "Add Minor Planet")), Se = a.ToolStripMenuItem.create(L.Language.getLocalizedText(167, "Delete")), ke = a.ToolStripMenuItem.create(L.Language.getLocalizedText(425, "Paste"));
                  a.ToolStripMenuItem.create(L.Language.getLocalizedText(1290, "Add to Timeline")), a.ToolStripMenuItem.create(L.Language.getLocalizedText(1280, "Add Keyframe"));
                  var Ue = a.ToolStripMenuItem.create(L.Language.getLocalizedText(20, "Properties")), de = a.ToolStripMenuItem.create(L.Language.getLocalizedText(990, "Save Layers"));
                  a.ToolStripMenuItem.create(L.Language.getLocalizedText(991, "Publish Layers to Community"));
                  var Ae = new a.ToolStripSeparator(), je = new a.ToolStripSeparator(), Fe = new a.ToolStripSeparator(), He = a.ToolStripMenuItem.create("As Reference Frame"), ct = a.ToolStripMenuItem.create("As Orbital Line");
                  if (me.click = d._trackFrame_Click, Me.click = d._goTo_Click, He.click = d._addMpc_Click, ct.click = d._asOrbitalLines_Click, _e.dropDownItems.push(He), _e.dropDownItems.push(ct), J.click = d._addMenu_Click, We.click = d._newLayerGroupMenu_Click, ke.click = d._pasteLayer_Click, xe.click = d._newMenu_Click, Se.click = d._deleteFrameMenu_Click, Ue.click = d._framePropertiesMenu_Click, ne.click = d._addGreatCircle_Click, Ee.click = d._addGirdLayer_Click, a.ToolStripMenuItem.create("Extract Orbit Layer"), se.frame.reference !== 19) {
                    if ((e.globalWWTControl.get_solarSystemMode() | e.globalWWTControl.sandboxMode) === 1) {
                      var Je = !1;
                      if (se.frame.reference !== 18 && !e.globalWWTControl.sandboxMode)
                        try {
                          var Xe = se.frame.reference.toString();
                          if (Xe !== "Sandbox") {
                            var Ze = n.Enums.parse("SolarSystemObjects", Xe), tt = Ze, et = Math.pow(2, tt);
                            ie.checked = !!(E.Settings.get_active().get_planetOrbitsFilter() & et), ie.click = d._showOrbitPlanet_Click, ie.tag = et.toString();
                          }
                        } catch {
                        }
                      else
                        !be && !Ve && (d._contextMenu.items.push(me), Je = !0), ie.checked = se.frame.showOrbitPath, ie.click = d._showOrbit_Click;
                      Je && d._contextMenu.items.push(Fe), !Ve && !be && (d._contextMenu.items.push(ie), d._contextMenu.items.push(je)), se.frame.reference.toString() === "Sandbox" && d._contextMenu.items.push(we);
                    }
                    Ve || d._contextMenu.items.push(xe);
                  }
                  Ve || (d._contextMenu.items.push(ne), d._contextMenu.items.push(Ee)), (se.frame.reference !== 19 && se.frame.name === "Sun" || se.frame.reference === 19 && se.parent != null && se.parent.frame.name === "Sun") && d._contextMenu.items.push(_e), se.frame.reference === 18 && se.frame.referenceFrameType === 1 && se.parent != null && se.parent.frame.name, d._contextMenu.items.push(ke), se.frame.reference === 19 && d._contextMenu.items.push(Se), se.frame.reference === 18 && (d._contextMenu.items.push(Se), d._contextMenu.items.push(Ue)), d._contextMenu.items.push(Ae), d._contextMenu._show(r.Vector2d.create(ee, Z));
                }
              }, d._publishMenu_Click = function(j, ee) {
              }, d._addGirdLayer_Click = function(j, ee) {
                var Z = new f.GridLayer();
                Z.enabled = !0, Z.set_name("Lat-Lng Grid"), d.get_layerList()[Z.id] = Z, Z.set_referenceFrame(d._currentMap), d.get_allMaps()[d._currentMap].layers.push(Z), d.get_allMaps()[d._currentMap].open = !0, d._version++, d.loadTree();
              }, d._trackFrame_Click = function(j, ee) {
                var Z = d._selectedLayer;
                _.globalRenderContext.set_solarSystemTrack(20), _.globalRenderContext.set_trackingFrame(Z.get_name()), _.globalRenderContext.viewCamera.zoom = _.globalRenderContext.targetCamera.zoom = 1e-9;
              }, d._goTo_Click = function(j, ee) {
              }, d._saveMenu_Click = function(j, ee) {
              }, d._expand_Click = function(j, ee) {
              }, d._collapse_Click = function(j, ee) {
              }, d._copyMenu_Click = function(j, ee) {
                if (d._selectedLayer != null && t.ss.canCast(d._selectedLayer, K.Layer)) {
                  var Z = d._selectedLayer;
                  Z.copyToClipboard();
                }
              }, d._newLayerGroupMenu_Click = function(j, ee) {
              }, d._importTLEFile = function(j) {
              }, d._makeLayerGroupNow = function(j) {
                var ee = d._selectedLayer;
                d._makeLayerGroup(j, ee);
              }, d._makeLayerGroup = function(j, ee) {
                var Z = new T.ReferenceFrame();
                Z.name = j, Z.reference = 19;
                var z = new F(Z.name, 19);
                z.frame = Z, z.frame._systemGenerated = !1, ee.addChild(z), z.frame.parent = ee.get_name(), d.get_allMaps()[Z.name] = z, d._version++;
              }, d._lifeTimeMenu_Click = function(j, ee) {
              }, d._deleteFrameMenu_Click = function(j, ee) {
              }, d._framePropertiesMenu_Click = function(j, ee) {
                var Z = d._selectedLayer;
                d.get_referenceFramePropsDialog().show(Z.frame, ee);
              }, d._newMenu_Click = function(j, ee) {
                var Z = new T.ReferenceFrame();
                d.get_frameWizardDialog().show(Z, ee);
              }, d.referenceFrameWizardFinished = function(j) {
                var ee = d._selectedLayer, Z = new F(j.name, 18);
                t.ss.keyExists(d.get_allMaps(), j.name) || (Z.frame = j, ee.addChild(Z), Z.frame.parent = ee.get_name(), d.get_allMaps()[j.name] = Z, d._version++, d.loadTree());
              }, d.pasteFromTle = function(j, ee) {
                for (var Z = "", z = "", te = 0; te < j.length; te++)
                  j[te] = t.ss.trim(j[te]), j[te].length === 69 && T.ReferenceFrame.isTLECheckSumGood(j[te]) && (!Z.length && j[te].substring(0, 1) === "1" && (Z = j[te]), !z.length && j[te].substring(0, 1) === "2" && (z = j[te]));
                return Z.length === 69 && z.length === 69 ? (ee.fromTLE(Z, z, 3986004418e5), !0) : !1;
              }, d._opacityMenu_Click = function(j, ee) {
              }, d._defaultImageset_Click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, R.ImageSetLayer);
                Z.set_overrideDefaultLayer(!Z.get_overrideDefaultLayer());
              }, d._propertiesMenu_Click = function(j, ee) {
                if (t.ss.canCast(d._selectedLayer, $.SpreadSheetLayer)) {
                  var Z = d._selectedLayer;
                  d.get_dataVizWizardDialog().show(Z, ee);
                }
                t.ss.canCast(d._selectedLayer, w.GreatCirlceRouteLayer) && d.get_greatCircleDlg().show(d._selectedLayer, new t.ss.EventArgs());
              }, d._renameMenu_Click = function(j, ee) {
                var Z = d._selectedLayer, z = new l.SimpleInput(L.Language.getLocalizedText(225, "Rename"), L.Language.getLocalizedText(228, "New Name"), Z.get_name(), 32);
                z.show(d._lastMenuClick, function() {
                  t.ss.emptyString(z.text) || (Z.set_name(z.text), d._version++, d.loadTree());
                });
              }, d._colorMenu_Click = function(j, ee) {
                var Z = d._selectedLayer, z = new g.ColorPicker();
                Z.get_color() != null && (z.color = Z.get_color()), z.callBack = function() {
                  Z.set_color(z.color);
                }, z.show(ee);
              }, d._addMenu_Click = function(j, ee) {
              }, d._deleteMenu_Click = function(j, ee) {
                d._deleteSelectedLayer();
              }, d._deleteSelectedLayer = function() {
                if (d._selectedLayer != null && t.ss.canCast(d._selectedLayer, K.Layer)) {
                  var j = d._selectedLayer;
                  delete d.get_layerList()[j.id], t.ss.remove(d.get_allMaps()[d.get_currentMap()].layers, j), j.cleanUp(), j.set_version(j.get_version() + 1) - 1, d.loadTree(), d._version++;
                }
              }, d.scaleMenu_click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, R.ImageSetLayer);
                if (Z != null) {
                  var z = new c.Histogram();
                  z.image = Z.getFitsImage(), z.layer = Z, z.show(r.Vector2d.create(200, 200));
                }
              }, d._showViewer_Click = function(j, ee) {
                if (t.ss.canCast(d._selectedLayer, S.VoTableLayer)) {
                  var Z = t.ss.safeCast(d._selectedLayer, S.VoTableLayer);
                  e.globalScriptInterface.displayVoTableLayer(Z);
                }
              }, d._bottom_Click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, K.Layer);
                Z != null && (t.ss.remove(d.get_allMaps()[Z.get_referenceFrame()].layers, Z), d.get_allMaps()[Z.get_referenceFrame()].layers.push(Z)), d._version++, d.loadTree();
              }, d._down_Click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, K.Layer);
                if (Z != null) {
                  var z = d.get_allMaps()[Z.get_referenceFrame()].layers.lastIndexOf(Z);
                  z < d.get_allMaps()[Z.get_referenceFrame()].layers.length - 1 && (t.ss.remove(d.get_allMaps()[Z.get_referenceFrame()].layers, Z), d.get_allMaps()[Z.get_referenceFrame()].layers.splice(z + 1, 0, Z));
                }
                d._version++, d.loadTree();
              }, d._up_Click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, K.Layer);
                if (Z != null) {
                  var z = d.get_allMaps()[Z.get_referenceFrame()].layers.lastIndexOf(Z);
                  z > 0 && (t.ss.remove(d.get_allMaps()[Z.get_referenceFrame()].layers, Z), d.get_allMaps()[Z.get_referenceFrame()].layers.splice(z - 1, 0, Z));
                }
                d._version++, d.loadTree();
              }, d._top_Click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, K.Layer);
                Z != null && (t.ss.remove(d.get_allMaps()[Z.get_referenceFrame()].layers, Z), d.get_allMaps()[Z.get_referenceFrame()].layers.splice(0, 0, Z)), d._version++, d.loadTree();
              }, d._pasteLayer_Click = function(j, ee) {
                d.get_dataVizWizardDialog().show(d.get_currentMap(), ee);
              }, d.createSpreadsheetLayer = function(j, ee, Z) {
                var z = new $.SpreadSheetLayer();
                return z.loadFromString(Z, !1, !1, !1, !0), z.set_name(ee), d.addSpreadsheetLayer(z, j), z;
              }, d.addSpreadsheetLayer = function(j, ee) {
                j.enabled = !0, j.set_referenceFrame(ee), d.add(j, !0);
              }, d._showOrbitPlanet_Click = function(j, ee) {
                try {
                  var Z = parseInt(j.tag.toString());
                  E.Settings.get_globalSettings().get_planetOrbitsFilter() & Z ? E.Settings.get_globalSettings().set_planetOrbitsFilter(E.Settings.get_globalSettings().get_planetOrbitsFilter() & ~Z) : E.Settings.get_globalSettings().set_planetOrbitsFilter(E.Settings.get_globalSettings().get_planetOrbitsFilter() | Z);
                } catch {
                }
              }, d._showOrbit_Click = function(j, ee) {
                var Z = t.ss.safeCast(d._selectedLayer, F);
                Z.frame.showOrbitPath = !Z.frame.showOrbitPath;
              }, d._addGreatCircle_Click = function(j, ee) {
                d._addGreatCircleLayer();
              }, d._addMpc_Click = function(j, ee) {
                var Z = d._selectedLayer, z = new l.SimpleInput(L.Language.getLocalizedText(1302, "Minor planet name or designation"), L.Language.getLocalizedText(238, "Name"), "", 32), te = !1;
                do
                  if (z.showDialog() === 1)
                    if (t.ss.keyExists(Z.childMaps, z.text))
                      te = !0;
                    else
                      try {
                        d._getMpc(z.text, Z), te = !1;
                      } catch {
                        te = !0;
                      }
                  else
                    te = !1;
                while (te);
              }, d._asOrbitalLines_Click = function(j, ee) {
                var Z = d._selectedLayer, z = new l.SimpleInput(L.Language.getLocalizedText(1302, "Minor planet name or designation"), L.Language.getLocalizedText(238, "Name"), "", 32);
                z.show(L.Cursor.get_position(), function() {
                  t.ss.keyExists(Z.childMaps, z.text) || d._getMpcAsTLE(z.text, Z);
                });
              }, d._getMpcAsTLE = function(j, ee) {
                var Z = new A.WebFile("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + j);
                Z.onStateChange = function() {
                  if (Z.get_state() === 1) {
                    var z = Z.getText(), te = z.indexOf("show-orbit-button"), re = z.indexOf("/form", te), le = z.substring(te, re), ae = j, oe = new T.ReferenceFrame();
                    oe.oblateness = 0, oe.showOrbitPath = !0, oe.showAsPoint = !0, oe.epoch = v.SpaceTimeController.utcToJulian(t.ss.date(d._getValueByID(le, "epoch").substring(0, 10))), oe.semiMajorAxis = parseFloat(d._getValueByID(le, "a")) * 149598e3 * 1e3, oe.referenceFrameType = 1, oe.inclination = parseFloat(d._getValueByID(le, "incl")), oe.longitudeOfAscendingNode = parseFloat(d._getValueByID(le, "node")), oe.eccentricity = parseFloat(d._getValueByID(le, "e")), oe.meanAnomolyAtEpoch = parseFloat(d._getValueByID(le, "m")), oe.meanDailyMotion = o.ELL.meanMotionFromSemiMajorAxis(parseFloat(d._getValueByID(le, "a"))), oe.argumentOfPeriapsis = parseFloat(d._getValueByID(le, "peri")), oe.scale = 1, oe.semiMajorAxisUnits = 1, oe.meanRadius = 10, oe.oblateness = 0;
                    var de = ae + `
` + oe.toTLE();
                    d._loadOrbitsFile(j, de, ee.get_name()), d.loadTree();
                  }
                }, Z.send();
              }, d._getMpc = function(j, ee) {
                var Z = new A.WebFile("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + j);
                Z.onStateChange = function() {
                  var z = Z.getText(), te = z.indexOf("show-orbit-button"), re = z.indexOf("/form", te), le = z.substring(te, re), ae = j, oe = new F(t.ss.trim(ae), 18);
                  oe.frame.oblateness = 0, oe.frame.showOrbitPath = !0, oe.frame.showAsPoint = !0, oe.frame.epoch = v.SpaceTimeController.utcToJulian(t.ss.date(d._getValueByID(le, "epoch").substring(0, 10))), oe.frame.semiMajorAxis = parseFloat(d._getValueByID(le, "a")) * 149598e3 * 1e3, oe.frame.referenceFrameType = 1, oe.frame.inclination = parseFloat(d._getValueByID(le, "incl")), oe.frame.longitudeOfAscendingNode = parseFloat(d._getValueByID(le, "node")), oe.frame.eccentricity = parseFloat(d._getValueByID(le, "e")), oe.frame.meanAnomolyAtEpoch = parseFloat(d._getValueByID(le, "m")), oe.frame.meanDailyMotion = o.ELL.meanMotionFromSemiMajorAxis(parseFloat(d._getValueByID(le, "a"))), oe.frame.argumentOfPeriapsis = parseFloat(d._getValueByID(le, "peri")), oe.frame.scale = 1, oe.frame.semiMajorAxisUnits = 1, oe.frame.meanRadius = 10, oe.frame.oblateness = 0, t.ss.keyExists(d.get_allMaps()[ee.get_name()].childMaps, t.ss.trim(ae)) || d.get_allMaps()[ee.get_name()].addChild(oe), d.get_allMaps()[oe.get_name()] = oe, oe.frame.parent = ee.get_name(), d._makeLayerGroup("Minor Planet", oe), d.loadTree();
                };
              }, d._getValueByID = function(j, ee) {
                var Z = j.indexOf('id="' + ee + '"');
                Z = j.indexOf("value=", Z) + 7;
                var z = j.indexOf('"', Z);
                return j.substr(Z, z - Z);
              }, d._addGreatCircleLayer = function() {
                var j = new w.GreatCirlceRouteLayer(), ee = _.globalRenderContext.viewCamera;
                j.set_latStart(ee.lat), j.set_latEnd(ee.lat - 5), j.set_lngStart(ee.lng), j.set_lngEnd(ee.lng + 5), j.set_width(4), j.enabled = !0, j.set_name(L.Language.getLocalizedText(1144, "Great Circle Route")), d.get_layerList()[j.id] = j, j.set_referenceFrame(d._currentMap), d.get_allMaps()[d._currentMap].layers.push(j), d.get_allMaps()[d._currentMap].open = !0, d._version++, d.loadTree(), d.get_greatCircleDlg().show(j, new t.ss.EventArgs());
              }, d._loadOrbitsFile = function(j, ee, Z) {
                var z = new N.OrbitLayer();
                return z.loadString(ee), z.enabled = !0, z.set_name(j), d.get_layerList()[z.id] = z, z.set_referenceFrame(Z), d.get_allMaps()[Z].layers.push(z), d.get_allMaps()[Z].open = !0, d._version++, d.loadTree(), z;
              };
              var U = {};
              (0, n.registerType)("LayerManager", [d, U, null]);
              function F(j, ee) {
                this.childMaps = {}, this.parent = null, this.layers = [], this.open = !1, this.enabled = !0, this.loadedFromTour = !1, this.frame = new T.ReferenceFrame(), this.set_name(j), this.frame.reference = ee;
                var Z = 6371e3;
                switch (ee) {
                  case 0:
                    break;
                  case 1:
                    break;
                  case 2:
                    break;
                  case 3:
                    Z = 696e6;
                    break;
                  case 4:
                    Z = 2439700;
                    break;
                  case 5:
                    Z = 6051800;
                    break;
                  case 6:
                    Z = 6371e3;
                    break;
                  case 7:
                    Z = 339e4;
                    break;
                  case 8:
                    Z = 69911e3;
                    break;
                  case 9:
                    Z = 58232e3;
                    break;
                  case 10:
                    Z = 25362e3;
                    break;
                  case 11:
                    Z = 24622e3;
                    break;
                  case 12:
                    Z = 1161e3;
                    break;
                  case 13:
                    Z = 1737100;
                    break;
                  case 14:
                    Z = 1821500;
                    break;
                  case 15:
                    Z = 1561e3;
                    break;
                  case 16:
                    Z = 2631200;
                    break;
                  case 17:
                    Z = 2410300;
                    break;
                }
                this.frame.meanRadius = Z;
              }
              var X = {
                addChild: function(j) {
                  j.parent = this, this.childMaps[j.get_name()] = j;
                },
                get_name: function() {
                  return this.frame.name;
                },
                set_name: function(j) {
                  return this.frame.name = j, j;
                },
                computeFrame: function(j) {
                  this.frame.reference === 18 && this.frame.computeFrame(j);
                },
                toString: function() {
                  return this.get_name();
                }
              };
              (0, n.registerType)("LayerMap", [F, X, null]);
              function Y() {
              }
              var M = {};
              (0, n.registerType)("SkyOverlays", [Y, M, null]);
              function B() {
              }
              var D = {};
              (0, n.registerType)("GroundOverlayLayer", [B, D, null]);
              function k() {
              }
              var G = {};
              (0, n.registerType)("FrameTarget", [k, G, null]);
            }
          ),
          /***/
          "./esm/layers/layer_ui.js": (
            /*!********************************!*\
              !*** ./esm/layers/layer_ui.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                LayerUI: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                LayerUIMenuItem: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                LayerUITreeNode: () => (
                  /* binding */
                  l
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../color.js */
                "./esm/color.js"
              );
              function _() {
              }
              _._type = null;
              var r = {
                get_hasTreeViewNodes: function() {
                  return !1;
                },
                getTreeNodes: function() {
                  return null;
                },
                getNodeContextMenu: function(a) {
                  return null;
                },
                setUICallbacks: function(a) {
                }
              };
              (0, n.registerType)("LayerUI", [_, r, null]);
              function o() {
                this._tag = null, this._isChecked = !1, this._isEnabled = !0, this._subMenus = null;
              }
              var c = {
                get_name: function() {
                  return this._name;
                },
                set_name: function(a) {
                  return this._name = a, a;
                },
                get_tag: function() {
                  return this._tag;
                },
                set_tag: function(a) {
                  return this._tag = a, a;
                },
                get_checked: function() {
                  return this._isChecked;
                },
                set_checked: function(a) {
                  return this._isChecked = a, a;
                },
                get_enabled: function() {
                  return this._isEnabled;
                },
                set_enabled: function(a) {
                  return this._isEnabled = a, a;
                },
                add_menuItemSelected: function(a) {
                  this.__menuItemSelected = t.ss.bindAdd(this.__menuItemSelected, a);
                },
                remove_menuItemSelected: function(a) {
                  this.__menuItemSelected = t.ss.bindSub(this.__menuItemSelected, a);
                },
                fireMenuItemSelected: function() {
                  this.__menuItemSelected != null && this.__menuItemSelected(this);
                },
                get_subMenus: function() {
                  return this._subMenus == null && (this._subMenus = []), this._subMenus;
                }
              };
              (0, n.registerType)("LayerUIMenuItem", [o, c, null]);
              function l() {
                this._parent = null, this._level = 0, this._open = !1, this._isChecked = !1, this._bold = !1, this._color = e.Colors.get_white(), this._nodes = null;
              }
              var g = {
                add_nodeChecked: function(a) {
                  this.__nodeChecked = t.ss.bindAdd(this.__nodeChecked, a);
                },
                remove_nodeChecked: function(a) {
                  this.__nodeChecked = t.ss.bindSub(this.__nodeChecked, a);
                },
                fireNodeChecked: function(a) {
                  this.__nodeChecked != null && this.__nodeChecked(this, a);
                },
                add_nodeUpdated: function(a) {
                  this.__nodeUpdated = t.ss.bindAdd(this.__nodeUpdated, a);
                },
                remove_nodeUpdated: function(a) {
                  this.__nodeUpdated = t.ss.bindSub(this.__nodeUpdated, a);
                },
                fireNodeUpdated: function() {
                  this.__nodeUpdated != null && this.__nodeUpdated(this);
                },
                add_nodeSelected: function(a) {
                  this.__nodeSelected = t.ss.bindAdd(this.__nodeSelected, a);
                },
                remove_nodeSelected: function(a) {
                  this.__nodeSelected = t.ss.bindSub(this.__nodeSelected, a);
                },
                fireNodeSelected: function() {
                  this.__nodeSelected != null && this.__nodeSelected(this);
                },
                add_nodeActivated: function(a) {
                  this.__nodeActivated = t.ss.bindAdd(this.__nodeActivated, a);
                },
                remove_nodeActivated: function(a) {
                  this.__nodeActivated = t.ss.bindSub(this.__nodeActivated, a);
                },
                fireNodeActivated: function() {
                  this.__nodeActivated != null && this.__nodeActivated(this);
                },
                get_name: function() {
                  return this._name;
                },
                set_name: function(a) {
                  return this._name !== a && (this._name = a, this.fireNodeUpdated()), a;
                },
                get_parent: function() {
                  return this._parent;
                },
                set_parent: function(a) {
                  return this._parent = a, a;
                },
                get_level: function() {
                  return this._level;
                },
                set_level: function(a) {
                  return this._level = a, a;
                },
                get_tag: function() {
                  return this._tag;
                },
                set_tag: function(a) {
                  return this._tag = a, a;
                },
                get_referenceTag: function() {
                  return this._referenceTag;
                },
                set_referenceTag: function(a) {
                  return this._referenceTag = a, a;
                },
                get_opened: function() {
                  return this._open;
                },
                set_opened: function(a) {
                  return this._open !== a && (this._open = a, this.fireNodeUpdated()), a;
                },
                get_checked: function() {
                  return this._isChecked;
                },
                set_checked: function(a) {
                  return this._isChecked !== a && (this._isChecked = a, this.fireNodeUpdated()), a;
                },
                get_bold: function() {
                  return this._bold;
                },
                set_bold: function(a) {
                  return this._bold !== a && (this._bold = a, this.fireNodeUpdated()), a;
                },
                get_color: function() {
                  return this._color;
                },
                set_color: function(a) {
                  return this._color !== a && (this._color = a, this.fireNodeUpdated()), a;
                },
                add: function(a) {
                  var b = new l();
                  return b.set_name(a), b.set_parent(this), b.set_level(this.get_level() + 1), this.get_nodes().push(b), b;
                },
                get_nodes: function() {
                  return this._nodes == null && (this._nodes = []), this._nodes;
                }
              };
              (0, n.registerType)("LayerUITreeNode", [l, g, null]);
            }
          ),
          /***/
          "./esm/layers/manager_dialogs.js": (
            /*!***************************************!*\
              !*** ./esm/layers/manager_dialogs.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                DataVizWizard: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                FrameWizard: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                GreatCircleDialog: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                ReferenceFrameProps: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../utilities/dialog.js */
                "./esm/utilities/dialog.js"
              ), e = i(
                /*! ./layer_manager.js */
                "./esm/layers/layer_manager.js"
              );
              function _() {
                n.Dialog.call(this);
              }
              var r = {
                OK: function(V) {
                  e.LayerManager.referenceFrameWizardFinished(V);
                }
              };
              (0, t.registerType)("FrameWizard", [_, r, n.Dialog]);
              function o() {
                n.Dialog.call(this);
              }
              var c = {
                OK: function(V) {
                  e.LayerManager.loadTree();
                }
              };
              (0, t.registerType)("ReferenceFrameProps", [o, c, n.Dialog]);
              function l() {
                n.Dialog.call(this);
              }
              var g = {
                OK: function(V) {
                }
              };
              (0, t.registerType)("GreatCircleDialog", [l, g, n.Dialog]);
              function a() {
                n.Dialog.call(this);
              }
              var b = {
                OK: function() {
                }
              };
              (0, t.registerType)("DataVizWizard", [a, b, n.Dialog]), e.LayerManager._frameWizardDialog = new _(), e.LayerManager._dataVizWizardDialog = new a(), e.LayerManager._referenceFramePropsDialog = new o(), e.LayerManager._greatCircleDialog = new l();
            }
          ),
          /***/
          "./esm/layers/object3d.js": (
            /*!********************************!*\
              !*** ./esm/layers/object3d.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Group: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                Material: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                Mesh: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                Object3d: () => (
                  /* binding */
                  N
                ),
                /* harmony export */
                Object3dLayer: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                Object3dLayerUI: () => (
                  /* binding */
                  x
                ),
                /* harmony export */
                ObjectNode: () => (
                  /* binding */
                  S
                ),
                /* harmony export */
                VertexPosition: () => (
                  /* binding */
                  O
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../color.js */
                "./esm/color.js"
              ), _ = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), o = i(
                /*! ../graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), c = i(
                /*! ../graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), l = i(
                /*! ../graphics/gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), g = i(
                /*! ../graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), a = i(
                /*! ../utilities/binary_reader.js */
                "./esm/utilities/binary_reader.js"
              ), b = i(
                /*! ../baseplanets.js */
                "./esm/baseplanets.js"
              ), V = i(
                /*! ../interfaces.js */
                "./esm/interfaces.js"
              ), y = i(
                /*! ../settings.js */
                "./esm/settings.js"
              ), C = i(
                /*! ../util.js */
                "./esm/util.js"
              ), E = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), v = i(
                /*! ./layer_ui.js */
                "./esm/layers/layer_ui.js"
              );
              function m() {
                this.specularSharpness = 0, this.opacity = 0, this.isDefault = !1;
              }
              var L = {};
              (0, n.registerType)("Material", [m, L, null]);
              function A() {
                this._primaryUI$1 = null, this._heading$1 = 0, this._flipV$1 = !0, this._flipHandedness$1 = !1, this._smooth$1 = !0, this._twoSidedGeometry$1 = !1, this._pitch$1 = 0, this._roll$1 = 0, this._scale$1 = _.Vector3d.create(1, 1, 1), this._translate$1 = _.Vector3d.create(0, 0, 0), this._lightID$1 = 0, this._dirty$1 = !1, this.objType = !1, this._xHandle$1 = new _.Vector2d(), this._yHandle$1 = new _.Vector2d(), this._zHandle$1 = new _.Vector2d(), this._hprHandles$1 = new Array(6), this._uiScale$1 = 1, this._showEditUi$1 = !1, this._dragMode$1 = 0, this._pntDown$1 = new _.Vector2d(), this._valueOnDown$1 = 0, this._valueOnDown2$1 = 0, this._hitDist$1 = 20, this._lockPreferedAxis$1 = !1, this._preferY$1 = !1, E.Layer.call(this);
              }
              A._translateUI$1 = null, A._translateUILines$1 = null, A._scaleUI$1 = null, A._rotateUi$1 = null, A._initTranslateUI$1 = function() {
                A._translateUILines$1 = new c.LineList(), A._translateUILines$1.timeSeries = !1, A._translateUILines$1.set_depthBuffered(!1), A._translateUILines$1.showFarSide = !0, A._translateUI$1 = new c.TriangleList(), A._translateUI$1.depthBuffered = !1, A._translateUI$1.timeSeries = !1, A._translateUI$1.writeZbuffer = !1;
                for (var d = Math.PI * 2, U = d / 45, F = 0.05, X = 0; X < d; X += U) {
                  var Y = _.Vector3d.create(1 - F * 4, 0, 0), M = _.Vector3d.create(1 - F * 4, Math.cos(X) * F, Math.sin(X) * F), B = _.Vector3d.create(1 - F * 4, Math.cos(X + U) * F, Math.sin(X + U) * F);
                  A._translateUI$1.addTriangle(Y, M, B, e.Colors.get_red(), c.Dates.empty());
                }
                for (var X = 0; X < d; X += U) {
                  var Y = _.Vector3d.create(1, 0, 0), B = _.Vector3d.create(1 - F * 4, Math.cos(X) * F, Math.sin(X) * F), M = _.Vector3d.create(1 - F * 4, Math.cos(X + U) * F, Math.sin(X + U) * F);
                  A._translateUI$1.addTriangle(Y, M, B, e.Color.fromArgb(255, 255, Math.max(0, Math.sin(X) * 128), Math.max(0, Math.sin(X) * 128)), c.Dates.empty());
                }
                A._translateUILines$1.addLine(_.Vector3d.create(0, 0, 0), _.Vector3d.create(1, 0, 0), e.Colors.get_red(), c.Dates.empty());
                for (var X = 0; X < d; X += U) {
                  var Y = _.Vector3d.create(0, 1 - F * 4, 0), B = _.Vector3d.create(Math.cos(X) * F, 1 - F * 4, Math.sin(X) * F), M = _.Vector3d.create(Math.cos(X + U) * F, 1 - F * 4, Math.sin(X + U) * F);
                  A._translateUI$1.addTriangle(Y, M, B, e.Colors.get_green(), c.Dates.empty());
                }
                for (var X = 0; X < d; X += U) {
                  var Y = _.Vector3d.create(0, 1, 0), M = _.Vector3d.create(Math.cos(X) * F, 1 - F * 4, Math.sin(X) * F), B = _.Vector3d.create(Math.cos(X + U) * F, 1 - F * 4, Math.sin(X + U) * F);
                  A._translateUI$1.addTriangle(Y, M, B, e.Color.fromArgb(255, Math.max(0, Math.sin(X) * 128), 255, Math.max(0, Math.sin(X) * 128)), c.Dates.empty());
                }
                A._translateUILines$1.addLine(_.Vector3d.create(0, 0, 0), _.Vector3d.create(0, 1, 0), e.Colors.get_green(), c.Dates.empty());
                for (var X = 0; X < d; X += U) {
                  var Y = _.Vector3d.create(0, 0, 1 - F * 4), M = _.Vector3d.create(Math.cos(X) * F, Math.sin(X) * F, 1 - F * 4), B = _.Vector3d.create(Math.cos(X + U) * F, Math.sin(X + U) * F, 1 - F * 4);
                  A._translateUI$1.addTriangle(Y, M, B, e.Colors.get_blue(), c.Dates.empty());
                }
                for (var X = 0; X < d; X += U) {
                  var Y = _.Vector3d.create(0, 0, 1), B = _.Vector3d.create(Math.cos(X) * F, Math.sin(X) * F, 1 - F * 4), M = _.Vector3d.create(Math.cos(X + U) * F, Math.sin(X + U) * F, 1 - F * 4);
                  A._translateUI$1.addTriangle(Y, M, B, e.Color.fromArgb(255, Math.max(0, Math.sin(X) * 128), Math.max(0, Math.sin(X) * 128), 255), c.Dates.empty());
                }
                A._translateUILines$1.addLine(_.Vector3d.create(0, 0, 0), _.Vector3d.create(0, 0, 1), e.Colors.get_blue(), c.Dates.empty()), A._initRotateUI$1(), A._initScaleUI$1();
              }, A._initScaleUI$1 = function() {
                A._scaleUI$1 = new c.TriangleList(), A._scaleUI$1.depthBuffered = !1, A._scaleUI$1.timeSeries = !1, A._scaleUI$1.writeZbuffer = !1;
                var d = 0.05;
                A._makeCube$1(A._scaleUI$1, _.Vector3d.create(1 - d * 2, 0, 0), d * 2, e.Colors.get_red()), A._makeCube$1(A._scaleUI$1, _.Vector3d.create(0, 1 - d * 2, 0), d * 2, e.Colors.get_green()), A._makeCube$1(A._scaleUI$1, _.Vector3d.create(0, 0, 1 - d * 2), d * 2, e.Colors.get_blue());
              }, A._makeCube$1 = function(d, U, F, X) {
                var Y = e.Color.fromArgb(255, t.ss.truncate(X.r * 0.6), X.g, t.ss.truncate(X.b * 0.6)), M = e.Color.fromArgb(255, t.ss.truncate(X.r * 0.8), t.ss.truncate(X.g * 0.8), t.ss.truncate(X.b * 0.8));
                d.addQuad(_.Vector3d.create(U.x + F, U.y + F, U.z + F), _.Vector3d.create(U.x + F, U.y + F, U.z - F), _.Vector3d.create(U.x - F, U.y + F, U.z + F), _.Vector3d.create(U.x - F, U.y + F, U.z - F), X, c.Dates.empty()), d.addQuad(_.Vector3d.create(U.x + F, U.y - F, U.z + F), _.Vector3d.create(U.x - F, U.y - F, U.z + F), _.Vector3d.create(U.x + F, U.y - F, U.z - F), _.Vector3d.create(U.x - F, U.y - F, U.z - F), X, c.Dates.empty()), d.addQuad(_.Vector3d.create(U.x - F, U.y + F, U.z + F), _.Vector3d.create(U.x - F, U.y + F, U.z - F), _.Vector3d.create(U.x - F, U.y - F, U.z + F), _.Vector3d.create(U.x - F, U.y - F, U.z - F), Y, c.Dates.empty()), d.addQuad(_.Vector3d.create(U.x + F, U.y + F, U.z + F), _.Vector3d.create(U.x + F, U.y - F, U.z + F), _.Vector3d.create(U.x + F, U.y + F, U.z - F), _.Vector3d.create(U.x + F, U.y - F, U.z - F), Y, c.Dates.empty()), d.addQuad(_.Vector3d.create(U.x + F, U.y + F, U.z + F), _.Vector3d.create(U.x - F, U.y + F, U.z + F), _.Vector3d.create(U.x + F, U.y - F, U.z + F), _.Vector3d.create(U.x - F, U.y - F, U.z + F), M, c.Dates.empty()), d.addQuad(_.Vector3d.create(U.x + F, U.y + F, U.z - F), _.Vector3d.create(U.x + F, U.y - F, U.z - F), _.Vector3d.create(U.x - F, U.y + F, U.z - F), _.Vector3d.create(U.x - F, U.y - F, U.z - F), M, c.Dates.empty());
              }, A._initRotateUI$1 = function() {
                A._rotateUi$1 = new c.TriangleList(), A._rotateUi$1.depthBuffered = !1, A._rotateUi$1.timeSeries = !1, A._rotateUi$1.writeZbuffer = !1;
                for (var d = Math.PI * 2, U = d / 40, F = 0.05, X = 0, Y = 0; Y < d; Y += U) {
                  var M = !(X % 10), B = !((X + 1) % 10), D = _.Vector3d.create(F * (M ? 0 : B ? 1.5 : 1), Math.cos(Y), Math.sin(Y)), k = _.Vector3d.create(-F * (M ? 0 : B ? 1.5 : 1), Math.cos(Y), Math.sin(Y)), G = _.Vector3d.create(F * (M ? 1.5 : B ? 0 : 1), Math.cos(Y + U), Math.sin(Y + U)), j = _.Vector3d.create(-F * (M ? 1.5 : B ? 0 : 1), Math.cos(Y + U), Math.sin(Y + U));
                  A._rotateUi$1.addQuad(D, G, k, j, e.Color._fromArgbColor(192, e.Colors.get_red()), c.Dates.empty()), X++;
                }
                X = 0;
                for (var Y = 0; Y < d; Y += U) {
                  var M = !(X % 10), B = !((X + 1) % 10), D = _.Vector3d.create(Math.cos(Y), Math.sin(Y), F * (M ? 0 : B ? 1.5 : 1)), k = _.Vector3d.create(Math.cos(Y), Math.sin(Y), -F * (M ? 0 : B ? 1.5 : 1)), G = _.Vector3d.create(Math.cos(Y + U), Math.sin(Y + U), F * (M ? 1.5 : B ? 0 : 1)), j = _.Vector3d.create(Math.cos(Y + U), Math.sin(Y + U), -F * (M ? 1.5 : B ? 0 : 1));
                  A._rotateUi$1.addQuad(D, G, k, j, e.Color._fromArgbColor(192, e.Colors.get_blue()), c.Dates.empty()), X++;
                }
                X = 0;
                for (var Y = 0; Y < d; Y += U) {
                  var M = !(X % 10), B = !((X + 1) % 10), D = _.Vector3d.create(Math.cos(Y), F * (M ? 0 : B ? 1.5 : 1), Math.sin(Y)), k = _.Vector3d.create(Math.cos(Y), -F * (M ? 0 : B ? 1.5 : 1), Math.sin(Y)), G = _.Vector3d.create(Math.cos(Y + U), F * (M ? 1.5 : B ? 0 : 1), Math.sin(Y + U)), j = _.Vector3d.create(Math.cos(Y + U), -F * (M ? 1.5 : B ? 0 : 1), Math.sin(Y + U));
                  A._rotateUi$1.addQuad(D, k, G, j, e.Color._fromArgbColor(192, e.Colors.get_green()), c.Dates.empty()), X++;
                }
                X = 0;
                for (var Y = 0; Y < d; Y += U) {
                  var M = !(X % 10), B = !((X + 1) % 10), D = _.Vector3d.create(-F * (M ? 0 : B ? 1.5 : 1), Math.cos(Y), Math.sin(Y)), k = _.Vector3d.create(F * (M ? 0 : B ? 1.5 : 1), Math.cos(Y), Math.sin(Y)), G = _.Vector3d.create(-F * (M ? 1.5 : B ? 0 : 1), Math.cos(Y + U), Math.sin(Y + U)), j = _.Vector3d.create(F * (M ? 1.5 : B ? 0 : 1), Math.cos(Y + U), Math.sin(Y + U));
                  A._rotateUi$1.addQuad(D, G, k, j, e.Colors.get_red(), c.Dates.empty()), X++;
                }
                X = 0;
                for (var Y = 0; Y < d; Y += U) {
                  var M = !(X % 10), B = !((X + 1) % 10), D = _.Vector3d.create(Math.cos(Y), Math.sin(Y), -F * (M ? 0 : B ? 1.5 : 1)), k = _.Vector3d.create(Math.cos(Y), Math.sin(Y), F * (M ? 0 : B ? 1.5 : 1)), G = _.Vector3d.create(Math.cos(Y + U), Math.sin(Y + U), -F * (M ? 1.5 : B ? 0 : 1)), j = _.Vector3d.create(Math.cos(Y + U), Math.sin(Y + U), F * (M ? 1.5 : B ? 0 : 1));
                  A._rotateUi$1.addQuad(D, G, k, j, e.Colors.get_blue(), c.Dates.empty()), X++;
                }
                X = 0;
                for (var Y = 0; Y < d; Y += U) {
                  var M = !(X % 10), B = !((X + 1) % 10), D = _.Vector3d.create(Math.cos(Y), -F * (M ? 0 : B ? 1.5 : 1), Math.sin(Y)), k = _.Vector3d.create(Math.cos(Y), F * (M ? 0 : B ? 1.5 : 1), Math.sin(Y)), G = _.Vector3d.create(Math.cos(Y + U), -F * (M ? 1.5 : B ? 0 : 1), Math.sin(Y + U)), j = _.Vector3d.create(Math.cos(Y + U), F * (M ? 1.5 : B ? 0 : 1), Math.sin(Y + U));
                  A._rotateUi$1.addQuad(D, k, G, j, e.Colors.get_green(), c.Dates.empty()), X++;
                }
              };
              var K = {
                getPrimaryUI: function() {
                  return this._primaryUI$1 == null && (this._primaryUI$1 = new x(this)), this._primaryUI$1;
                },
                get_flipV: function() {
                  return this._flipV$1;
                },
                set_flipV: function(d) {
                  return this._flipV$1 !== d && (this._flipV$1 = d, this.object3d != null && (this.object3d.flipV = this._flipV$1, this.object3d._reload()), this.version++), d;
                },
                get_flipHandedness: function() {
                  return this._flipHandedness$1;
                },
                set_flipHandedness: function(d) {
                  return this._flipHandedness$1 !== d && (this._flipHandedness$1 = d, this.object3d != null && (this.object3d.flipHandedness = this._flipHandedness$1, this.object3d._reload()), this.version++), d;
                },
                get_smooth: function() {
                  return this._smooth$1;
                },
                set_smooth: function(d) {
                  return this._smooth$1 !== d && (this._smooth$1 = d, this.object3d != null && (this.object3d.smooth = this._smooth$1, this.object3d._reload()), this.version++), d;
                },
                get_twoSidedGeometry: function() {
                  return this._twoSidedGeometry$1;
                },
                set_twoSidedGeometry: function(d) {
                  return this._twoSidedGeometry$1 !== d && (this._twoSidedGeometry$1 = d, this.version++), d;
                },
                get_heading: function() {
                  return this._heading$1;
                },
                set_heading: function(d) {
                  return this._heading$1 !== d && (this.version++, this._heading$1 = d), d;
                },
                get_pitch: function() {
                  return this._pitch$1;
                },
                set_pitch: function(d) {
                  return this._pitch$1 !== d && (this.version++, this._pitch$1 = d), d;
                },
                get_roll: function() {
                  return this._roll$1;
                },
                set_roll: function(d) {
                  return this._roll$1 !== d && (this.version++, this._roll$1 = d), d;
                },
                get_scale: function() {
                  return this._scale$1;
                },
                set_scale: function(d) {
                  return this._scale$1 !== d && (this.version++, this._scale$1 = d), d;
                },
                get_translate: function() {
                  return this._translate$1;
                },
                set_translate: function(d) {
                  return this._translate$1 !== d && (this.version++, this._translate$1 = d), d;
                },
                get_lightID: function() {
                  return this._lightID$1;
                },
                set_lightID: function(d) {
                  return this._lightID$1 = d, d;
                },
                cleanUp: function() {
                  this._dirty$1 = !0;
                },
                colorChanged: function() {
                  this.object3d != null && (this.object3d.color = this.get_color());
                },
                writeLayerProperties: function(d) {
                  d._writeAttributeString("FlipV", this.get_flipV().toString()), d._writeAttributeString("FlipHandedness", this.get_flipHandedness().toString()), d._writeAttributeString("Smooth", this.get_smooth().toString()), d._writeAttributeString("TwoSidedGeometry", this.get_twoSidedGeometry().toString()), d._writeAttributeString("Heading", this.get_heading().toString()), d._writeAttributeString("Pitch", this.get_pitch().toString()), d._writeAttributeString("Roll", this.get_roll().toString()), d._writeAttributeString("Scale", this.get_scale().toString()), d._writeAttributeString("Translate", this.get_translate().toString()), d._writeAttributeString("LightID", this.get_lightID().toString()), d._writeAttributeString("Obj", this.objType.toString());
                },
                getParams: function() {
                  var d = new Array(14);
                  return d[0] = this._heading$1, d[1] = this._pitch$1, d[2] = this._roll$1, d[3] = this._scale$1.x, d[4] = this._scale$1.y, d[5] = this._scale$1.z, d[6] = this._translate$1.x, d[7] = this._translate$1.y, d[8] = this._translate$1.z, d[9] = this.get_color().r / 255, d[10] = this.get_color().g / 255, d[11] = this.get_color().b / 255, d[12] = this.get_color().a / 255, d[13] = this.get_opacity(), d;
                },
                getParamNames: function() {
                  return ["Heading", "Pitch", "Roll", "Scale.X", "Scale.Y", "Scale.Z", "Translate.X", "Translate.Y", "Translate.Z", "Colors.Red", "Colors.Green", "Colors.Blue", "Colors.Alpha", "Opacity"];
                },
                setParams: function(d) {
                  if (d.length === 14) {
                    this._heading$1 = d[0], this._pitch$1 = d[1], this._roll$1 = d[2], this._scale$1.x = d[3], this._scale$1.y = d[4], this._scale$1.z = d[5], this._translate$1.x = d[6], this._translate$1.y = d[7], this._translate$1.z = d[8], this.set_opacity(d[13]);
                    var U = e.Color.fromArgb(t.ss.truncate(d[12] * 255), t.ss.truncate(d[9] * 255), t.ss.truncate(d[10] * 255), t.ss.truncate(d[11] * 255));
                    this.set_color(U);
                  }
                },
                add_propertiesChanged: function(d) {
                  this.__propertiesChanged$1 = t.ss.bindAdd(this.__propertiesChanged$1, d);
                },
                remove_propertiesChanged: function(d) {
                  this.__propertiesChanged$1 = t.ss.bindSub(this.__propertiesChanged$1, d);
                },
                fireChanged: function() {
                  this.__propertiesChanged$1 != null && this.__propertiesChanged$1(this, new t.ss.EventArgs());
                },
                getEditUI: function() {
                  return t.ss.safeCast(this, V.IUiController);
                },
                initializeFromXml: function(d) {
                  this.set_flipV(t.ss.boolean(d.attributes.getNamedItem("FlipV").nodeValue)), d.attributes.getNamedItem("FlipHandedness") != null ? this.set_flipHandedness(t.ss.boolean(d.attributes.getNamedItem("FlipHandedness").nodeValue)) : this.set_flipHandedness(!1), d.attributes.getNamedItem("Smooth") != null ? this.set_smooth(t.ss.boolean(d.attributes.getNamedItem("Smooth").nodeValue)) : this.set_smooth(!0), d.attributes.getNamedItem("TwoSidedGeometry") != null ? this.set_twoSidedGeometry(t.ss.boolean(d.attributes.getNamedItem("TwoSidedGeometry").nodeValue)) : this.set_twoSidedGeometry(!1), d.attributes.getNamedItem("Obj") != null ? this.objType = t.ss.boolean(d.attributes.getNamedItem("Obj").nodeValue) : this.objType = !1, this.set_heading(parseFloat(d.attributes.getNamedItem("Heading").nodeValue)), this.set_pitch(parseFloat(d.attributes.getNamedItem("Pitch").nodeValue)), this.set_roll(parseFloat(d.attributes.getNamedItem("Roll").nodeValue)), this.set_scale(_.Vector3d.parse(d.attributes.getNamedItem("Scale").nodeValue)), this.set_translate(_.Vector3d.parse(d.attributes.getNamedItem("Translate").nodeValue)), d.attributes.getNamedItem("LightID") != null && this.set_lightID(parseInt(d.attributes.getNamedItem("LightID").nodeValue));
                },
                draw: function(d, U, F) {
                  var X = d.get_world(), Y = _.Matrix3d.multiplyMatrix(_.Matrix3d.multiplyMatrix(_.Matrix3d._rotationZ(-this._roll$1 / 180 * Math.PI), _.Matrix3d._rotationX(-this._pitch$1 / 180 * Math.PI)), _.Matrix3d._rotationY(this._heading$1 / 180 * Math.PI));
                  return d.set_world(_.Matrix3d.multiplyMatrix(_.Matrix3d.multiplyMatrix(_.Matrix3d.multiplyMatrix(Y, _.Matrix3d._scaling(this._scale$1.x, this._scale$1.y, this._scale$1.z)), _.Matrix3d.translation(this._translate$1)), X)), d.set_twoSidedLighting(this.get_twoSidedGeometry()), b.BasePlanets.drawPointPlanet(d, new _.Vector3d(), 1, e.Colors.get_red(), !1), this._lightID$1 > 0 || this.object3d != null && (this.object3d.color = this.get_color(), this.object3d.render(d, U * this.get_opacity())), d.set_twoSidedLighting(!1), d.set_world(X), !0;
                },
                addFilesToCabinet: function(d) {
                },
                loadData: function(d, U) {
                  t.ss.endsWith(U.toLowerCase(), ".obj") && (this.objType = !0), this._lightID$1 || (this.objType ? this.object3d = new N(d, t.ss.replaceString(U, ".txt", ".obj"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()) : this.object3d = new N(d, t.ss.replaceString(U, ".txt", ".3ds"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()));
                },
                pointToView: function(d) {
                  var U = r.globalRenderContext.height, F = r.globalRenderContext.width, X = r.globalRenderContext.width / r.globalRenderContext.height * 1116, Y = d.x / F * X - (X - 1920) / 2, M = d.y / U * 1116;
                  return _.Vector2d.create(Y, M);
                },
                render: function(d) {
                  this._showEditUi$1 = !0;
                },
                preRender: function(d) {
                  this._showEditUi$1 = !0;
                },
                mouseDown: function(d, U) {
                  var F = this.pointToView(_.Vector2d.create(U.offsetX, U.offsetY));
                  this._pntDown$1 = F;
                  var X = F;
                  if (U.shiftKey) {
                    if (_.Vector2d.subtract(X, this._xHandle$1).get_length() < this._hitDist$1)
                      return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.x, !0;
                    if (_.Vector2d.subtract(X, this._yHandle$1).get_length() < this._hitDist$1)
                      return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.y, !0;
                    if (_.Vector2d.subtract(X, this._zHandle$1).get_length() < this._hitDist$1)
                      return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.z, !0;
                  } else {
                    if (_.Vector2d.subtract(X, this._xHandle$1).get_length() < this._hitDist$1)
                      return this._dragMode$1 = 1, this._valueOnDown$1 = this._translate$1.x, !0;
                    if (_.Vector2d.subtract(X, this._yHandle$1).get_length() < this._hitDist$1)
                      return this._dragMode$1 = 2, this._valueOnDown$1 = this._translate$1.y, !0;
                    if (_.Vector2d.subtract(X, this._zHandle$1).get_length() < this._hitDist$1)
                      return this._dragMode$1 = 3, this._valueOnDown$1 = this._translate$1.z, !0;
                  }
                  for (var Y = 0; Y < this._hprHandles$1.length; Y++)
                    if (_.Vector2d.subtract(X, this._hprHandles$1[Y]).get_length() < this._hitDist$1)
                      switch (Y) {
                        case 0:
                          return this._dragMode$1 = 4, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                        case 1:
                          return this._dragMode$1 = 7, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                        case 2:
                          return this._dragMode$1 = 5, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                        case 3:
                          return this._dragMode$1 = 8, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                        case 4:
                          return this._dragMode$1 = 6, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                        case 5:
                          return this._dragMode$1 = 9, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                      }
                  return !1;
                },
                mouseUp: function(d, U) {
                  return this._dragMode$1 ? (this._dragMode$1 = 0, this._lockPreferedAxis$1 = !1, !0) : !1;
                },
                mouseMove: function(d, U) {
                  var F = this.pointToView(_.Vector2d.create(U.offsetX, U.offsetY));
                  if (this._dragMode$1) {
                    var X = 0, Y = F.x - this._pntDown$1.x, M = -(F.y - this._pntDown$1.y);
                    switch (this._lockPreferedAxis$1 ? this._preferY$1 ? (X = M, this._preferY$1 = !0, C.Cursor.set_current(C.Cursors.get_sizeNS())) : (X = Y, this._preferY$1 = !1, C.Cursor.set_current(C.Cursors.get_sizeWE())) : (Math.abs(Y) > Math.abs(M) ? (X = Y, this._preferY$1 = !1) : (X = M, this._preferY$1 = !0), X > 5 && (this._lockPreferedAxis$1 = !0)), this._dragMode$1) {
                      case 0:
                        break;
                      case 1:
                        this._translate$1.x = this._valueOnDown$1 + 12 * this._uiScale$1 * (X / r.globalRenderContext.width);
                        break;
                      case 2:
                        this._translate$1.y = this._valueOnDown$1 + 12 * this._uiScale$1 * (X / r.globalRenderContext.width);
                        break;
                      case 3:
                        this._translate$1.z = this._valueOnDown$1 + 12 * this._uiScale$1 * (X / r.globalRenderContext.width);
                        break;
                      case 4:
                        this._heading$1 = this._valueOnDown$1 - Y / 4, this._pitch$1 = this._valueOnDown2$1 + M / 4;
                        break;
                      case 5:
                        this._pitch$1 = this._valueOnDown$1 + M / 4, this._roll$1 = this._valueOnDown2$1 - Y / 4;
                        break;
                      case 6:
                        this._roll$1 = this._valueOnDown$1 + M / 4, this._heading$1 = this._valueOnDown2$1 - Y / 4;
                        break;
                      case 7:
                        this._heading$1 = this._valueOnDown$1 - Y / 4, this._pitch$1 = this._valueOnDown2$1 - M / 4;
                        break;
                      case 8:
                        this._pitch$1 = this._valueOnDown$1 + M / 4, this._roll$1 = this._valueOnDown2$1 + Y / 4;
                        break;
                      case 9:
                        this._roll$1 = this._valueOnDown$1 - M / 4, this._heading$1 = this._valueOnDown2$1 - Y / 4;
                        break;
                      case 10:
                        this._scale$1.x = this._scale$1.y = this._scale$1.z = this._valueOnDown$1 * Math.pow(2, X / 100);
                        break;
                    }
                    return this.fireChanged(), !0;
                  } else {
                    var B = F;
                    if (_.Vector2d.subtract(B, this._xHandle$1).get_length() < this._hitDist$1 || _.Vector2d.subtract(B, this._yHandle$1).get_length() < this._hitDist$1 || _.Vector2d.subtract(B, this._zHandle$1).get_length() < this._hitDist$1)
                      return C.Cursor.set_current(C.Cursors.get_sizeAll()), !0;
                    for (var D = 0; D < this._hprHandles$1.length; D++)
                      if (_.Vector2d.subtract(B, this._hprHandles$1[D]).get_length() < this._hitDist$1)
                        return C.Cursor.set_current(C.Cursors.get_sizeAll()), !0;
                  }
                  return !1;
                },
                mouseClick: function(d, U) {
                  return !1;
                },
                click: function(d, U) {
                  return !1;
                },
                mouseDoubleClick: function(d, U) {
                  return !1;
                },
                keyDown: function(d, U) {
                  return !1;
                },
                keyUp: function(d, U) {
                  return !1;
                },
                hover: function(d) {
                  return !1;
                }
              };
              (0, n.registerType)("Object3dLayer", [A, K, E.Layer, V.IUiController]);
              function T() {
                this.startIndex = 0, this.indexCount = 0, this.materialIndex = 0;
              }
              var w = {};
              (0, n.registerType)("Group", [T, w, null]);
              function f() {
                this.boundingSphere = new _.SphereHull();
              }
              f.create = function(d, U) {
                var F = new f();
                F.vertices = d, F.indices = U;
                for (var X = new Array(d.length), Y = 0; Y < d.length; ++Y)
                  X[Y] = d[Y].get_position();
                return F.boundingSphere = _.ConvexHull.findEnclosingSphereFast(X), F;
              }, f.createTangent = function(d, U) {
                var F = new f();
                F.tangentVertices = d, F.indices = U;
                for (var X = new Array(F.tangentVertices.length), Y = 0; Y < F.tangentVertices.length; ++Y)
                  X[Y] = F.tangentVertices[Y].get_position();
                return F.boundingSphere = _.ConvexHull.findEnclosingSphereFast(X), F;
              };
              var R = {
                dispose: function() {
                  this.vertexBuffer != null && (this.vertexBuffer.dispose(), this.vertexBuffer = null), this.tangentVertexBuffer != null && (this.tangentVertexBuffer.dispose(), this.tangentVertexBuffer = null), this.indexBuffer != null && (this.indexBuffer.dispose(), this.indexBuffer = null);
                },
                setObjects: function(d) {
                  this._objects = d;
                },
                // Convert the vertex data to a GPU vertex buffer
                commitToDevice: function() {
                  this.vertices != null ? this.vertexBuffer = l.PositionNormalTexturedVertexBuffer.create(this.vertices) : this.tangentVertices != null && (this.tangentVertexBuffer = l.PositionNormalTexturedTangentVertexBuffer.create(this.tangentVertices)), this.indexBuffer = new l.IndexBuffer(new Uint32Array(this.indices));
                },
                beginDrawing: function(d) {
                  this.vertexBuffer != null ? d._setVertexBuffer(this.vertexBuffer) : this.tangentVertexBuffer != null && d._setVertexBuffer(this.tangentVertexBuffer), this.indexBuffer != null && d._setIndexBuffer(this.indexBuffer);
                },
                drawSubset: function(d, U) {
                  this.indexBuffer == null || this._objects == null || this.drawHierarchy(this._objects, U, d, 0);
                },
                drawHierarchy: function(d, U, F, X) {
                  if (!(X > 1212))
                    for (var Y = t.ss.enumerate(d); Y.moveNext(); ) {
                      var M = Y.current;
                      if (M.drawGroup != null && M.enabled)
                        for (var B = t.ss.enumerate(M.drawGroup); B.moveNext(); ) {
                          var D = B.current;
                          D.materialIndex === U && F.gl.drawElements(o.WEBGL.TRIANGLES, D.indexCount, o.WEBGL.UNSIGNED_INT, D.startIndex * 4);
                        }
                      this.drawHierarchy(M.children, U, F, X + 1);
                    }
                },
                get_objects: function() {
                  return this._objects;
                },
                set_objects: function(d) {
                  return this._objects = d, d;
                }
              };
              (0, n.registerType)("Mesh", [f, R, null, t.ss.IDisposable]);
              function O() {
                this.index = 0;
              }
              var W = {};
              (0, n.registerType)("VertexPosition", [O, W, null]);
              function N(d, U, F, X, Y, M) {
                this.flipHandedness = !1, this.flipV = !0, this.smooth = !0, this._mesh = null, this._meshMaterials = [], this._meshTextures = [], this._meshSpecularTextures = [], this._meshNormalMaps = [], this.meshFilenames = [], this.color = e.Colors.get_white(), this._textureCache = {}, this._matFiles = new Array(0), this._matFileIndex = 0, this.objects = [], this._matLib = {}, this._textureLib = {}, this._tourDocument = null, this.issLayer = !1, this._readyToRender = !1, this.useCurrentAmbient = !1, this._dirty = !0, this.color = M, this.smooth = Y, this.flipV = F, this.flipHandedness = X, this.filename = U, t.ss.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(d, this.filename) : this._loadMeshFrom3ds(d, this.filename, 1);
              }
              N._compareVector3 = function(d, U) {
                return d.x < U.x ? -1 : d.x > U.x ? 1 : d.y < U.y ? -1 : d.y > U.y ? 1 : d.z < U.z ? -1 : d.z > U.z ? 1 : 0;
              }, N._compareVector = function(d, U) {
                return d.x < U.x ? -1 : d.x > U.x ? 1 : d.y < U.y ? -1 : d.y > U.y ? 1 : 0;
              }, N._getMaterialID = function(d, U) {
                for (var F = 0, X = t.ss.enumerate(U); X.moveNext(); ) {
                  var Y = X.current;
                  if (Y === d)
                    return F;
                  F++;
                }
                return -1;
              }, N._disposeTextureList = function(d) {
                if (d != null) {
                  for (var U = 0; U < d.length; ++U)
                    d[U] != null && (d[U].dispose(), d[U] = null);
                  d.length = 0;
                }
              };
              var $ = {
                _reload: function() {
                  this.issLayer || (this.dispose(), t.ss.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(this._tourDocument, this.filename) : this._loadMeshFrom3ds(this._tourDocument, this.filename, 1));
                },
                // Calculate per-vertex normals by averaging face normals. Normals of adjacent faces with an
                // angle of greater than crease angle are not included in the average. CalculateVertexNormalsMerged
                // is slower than the other normal generation method, CalculateVertexNormals, but it produces better
                // results. Vertices with identical positions (bot possibly different texture coordinates) are treated
                // as the same vertex for purposes of normal calculation. This allows smooth normals across texture
                // wrap seams.
                //
                // This method returns an array of vertex normals, one for each index in the index list
                _calculateVertexNormalsMerged: function(d, U, F) {
                  if (!d.length)
                    return null;
                  d.length;
                  for (var X = Math.floor(U.length / 3), Y = [], M = 0; M < d.length; ++M) {
                    var B = new O();
                    B.position = d[M].get_position(), B.index = M, Y.push(B);
                  }
                  Y.sort(function(Oe, Ne) {
                    return N._compareVector3(Oe.position, Ne.position);
                  });
                  for (var D = new Array(Y.length), k = 0, M = 0; M < Y.length; M++)
                    (!M || N._compareVector3(Y[M].position, Y[M - 1].position)) && ++k, D[Y[M].index] = k - 1;
                  for (var G = new Array(k), j = 0; j < k; j++)
                    G[j] = 0;
                  for (var ee = t.ss.enumerate(U); ee.moveNext(); ) {
                    var M = ee.current, Z = D[M];
                    G[Z]++;
                  }
                  for (var z = new Array(k), j = 0; j < k; ++j) {
                    var te = G[j];
                    if (te > 0) {
                      z[j] = new Array(te);
                      for (var re = 0; re < te; re++)
                        z[j][re] = 0;
                    }
                  }
                  for (var j = 0; j < U.length; ++j) {
                    var le = Math.floor(j / 3), Z = D[U[j]];
                    z[Z][--G[Z]] = le;
                  }
                  for (var ae = new Array(X), j = 0; j < X; ++j) {
                    var oe = U[j * 3 + 0], de = U[j * 3 + 1], ve = U[j * 3 + 2], ce = _.Vector3d.subtractVectors(d[de].get_position(), d[oe].get_position()), he = _.Vector3d.subtractVectors(d[ve].get_position(), d[de].get_position());
                    ae[j] = _.Vector3d.cross(ce, he), ae[j].normalize();
                  }
                  for (var ye = X * 3, fe = new Array(ye), Ce = Math.min(0.9999, Math.cos(F)), j = 0; j < ye; ++j) {
                    for (var M = U[j], Z = D[M], Ae = ae[Math.floor(j / 3)], Te = new _.Vector3d(), Re = t.ss.enumerate(z[Z]); Re.moveNext(); ) {
                      var le = Re.current, De = ae[le];
                      _.Vector3d.dot(Ae, De) > Ce && Te.add(De);
                    }
                    fe[j] = Te, fe[j].normalize();
                  }
                  return fe;
                },
                // Calculate tangent vectors at each vertex. The 'face tangent' is a direction in the plane of the
                // triangle and parallel to the direction of increasing tex coord u, i.e. the partial derivative
                // with respect to u of the triangle's plane equation expressed in terms of the texture coordinate
                // (u, v). Partial derivatives of the triangles containing a vertex are averaged to compute the
                // vertex tangent. Faces are not included in the when the angle formed with the test face is
                // greater than the crease angle, or when the texture texture coordinates are not continuous.
                //
                // This method returns an array of vertex normals, one for each index in the index list
                _calculateVertexTangents: function(d, U, F) {
                  if (!d.length)
                    return null;
                  d.length;
                  for (var X = Math.floor(U.length / 3), Y = [], M = 0; M < d.length; ++M) {
                    var B = new O();
                    B.position = d[M].get_position(), B.index = M, Y.push(B);
                  }
                  Y.sort(function(me, Me) {
                    return N._compareVector3(me.position, Me.position);
                  });
                  for (var D = new Array(Y.length), k = 0, M = 0; M < Y.length; M++)
                    (!M || N._compareVector3(Y[M].position, Y[M - 1].position)) && ++k, D[Y[M].index] = k - 1;
                  for (var G = new Array(k), j = 0; j < k; j++)
                    G[j] = 0;
                  for (var ee = t.ss.enumerate(U); ee.moveNext(); ) {
                    var M = ee.current, Z = D[M];
                    G[Z]++;
                  }
                  for (var z = new Array(k), j = 0; j < k; ++j) {
                    var te = G[j];
                    if (te > 0) {
                      z[j] = new Array(te);
                      for (var re = 0; re < te; re++)
                        z[j][re] = 0;
                    }
                  }
                  for (var j = 0; j < U.length; ++j) {
                    var le = Math.floor(j / 3), Z = D[U[j]];
                    z[Z][--G[Z]] = le;
                  }
                  for (var ae = new Array(X), j = 0; j < X; ++j) {
                    var oe = d[U[j * 3 + 0]], de = d[U[j * 3 + 1]], ve = d[U[j * 3 + 2]], ce = _.Vector3d.subtractVectors(de.get_position(), oe.get_position()), he = _.Vector3d.subtractVectors(ve.get_position(), oe.get_position()), ye = de.tu - oe.tu, fe = de.tv - oe.tv, Ce = ve.tu - oe.tu, Ae = ve.tv - oe.tv, Te = ye * Ae - fe * Ce;
                    if (Math.abs(Te) < 1e-6)
                      ce.lengthSq() > 0 ? (ae[j] = ce, ae[j].normalize()) : ae[j] = _.Vector3d.create(1, 0, 0);
                    else {
                      var Re = 1 / Te, De = Ae * Re, Oe = -fe * Re;
                      ae[j] = _.Vector3d.addVectors(_.Vector3d.multiplyScalar(ce, De), _.Vector3d.multiplyScalar(he, Oe)), ae[j].normalize();
                    }
                  }
                  for (var Ne = X * 3, Fe = new Array(Ne), $e = Math.min(0.9999, Math.cos(F)), j = 0; j < Ne; ++j) {
                    for (var M = U[j], Z = D[M], ze = ae[Math.floor(j / 3)], se = new _.Vector3d(), be = t.ss.enumerate(z[Z]); be.moveNext(); ) {
                      var le = be.current, Pe = ae[le];
                      _.Vector3d.dot(ze, Pe) > $e && se.add(Pe);
                    }
                    var Ve = d[M].get_normal();
                    Fe[j] = _.Vector3d.subtractVectors(se, _.Vector3d.multiplyScalar(Ve, _.Vector3d.dot(Ve, se))), Fe[j].normalize();
                  }
                  return Fe;
                },
                // Calculate per-vertex normals by averaging face normals. Normals of adjacent faces with an
                // angle of greater than crease angle are not included in the average.
                //
                // This method returns an array of vertex normals, one for each index in the index list
                _calculateVertexNormals: function(d, U, F) {
                  for (var X = d.length, Y = Math.floor(U.length / 3), M = new Array(X), B = t.ss.enumerate(U); B.moveNext(); ) {
                    var D = B.current;
                    M[D]++;
                  }
                  for (var k = new Array(X), G = 0; G < X; ++G) {
                    var j = M[G];
                    j > 0 && (k[G] = new Array(j));
                  }
                  for (var G = 0; G < U.length; ++G) {
                    var ee = Math.floor(G / 3), D = U[G];
                    k[D][--M[D]] = ee;
                  }
                  for (var Z = new Array(Y), G = 0; G < Y; ++G) {
                    var z = U[G * 3 + 0], te = U[G * 3 + 1], re = U[G * 3 + 2], le = _.Vector3d.subtractVectors(d[te].get_position(), d[z].get_position()), ae = _.Vector3d.subtractVectors(d[re].get_position(), d[te].get_position());
                    Z[G] = _.Vector3d.cross(le, ae), Z[G].normalize();
                  }
                  for (var oe = Y * 3, de = new Array(oe), ve = Math.min(0.9999, Math.cos(F)), G = 0; G < oe; ++G) {
                    for (var D = U[G], ce = Z[Math.floor(G / 3)], he = new _.Vector3d(), ye = t.ss.enumerate(k[D]); ye.moveNext(); ) {
                      var ee = ye.current, fe = Z[ee];
                      _.Vector3d.dot(ce, fe) > ve && he.add(fe);
                    }
                    de[G] = he, de[G].normalize();
                  }
                  return de;
                },
                // Add textures to ensure that we have as many textures as [...]
                _addMaterial: function(d) {
                  for (this._meshMaterials.push(d); this._meshTextures.length < this._meshMaterials.length; )
                    this._meshTextures.push(null);
                  for (; this._meshSpecularTextures.length < this._meshMaterials.length; )
                    this._meshSpecularTextures.push(null);
                  for (; this._meshNormalMaps.length < this._meshMaterials.length; )
                    this._meshNormalMaps.push(null);
                },
                // Load a color chunk from a 3ds file`
                // Colors may be stored in a 3ds file either as 3 floats or 3 bytes
                _loadColorChunk: function(d) {
                  var U = d.readUInt16(), F = d.readUInt32(), X = e.Colors.get_black();
                  if ((U === 16 || U === 19) && F === 18) {
                    var Y = Math.max(0, Math.min(1, d.readSingle())), M = Math.max(0, Math.min(1, d.readSingle())), B = Math.max(0, Math.min(1, d.readSingle()));
                    X = e.Color.fromArgb(255, t.ss.truncate(255 * Y), t.ss.truncate(255 * M), t.ss.truncate(255 * B));
                  } else
                    (U === 17 || U === 18) && F === 9 ? X = e.Color.fromArgb(255, d.readByte(), d.readByte(), d.readByte()) : d.readBytes(F - 6);
                  return X;
                },
                // Load a percentage chunk from a 3ds file
                // A percentage may be stored as either a float or a 16-bit integer
                _loadPercentageChunk: function(d) {
                  var U = d.readUInt16(), F = d.readUInt32(), X = 0;
                  return U === 48 && F === 8 ? X = d.readUInt16() : U === 49 && F === 10 ? X = d.readSingle() : d.readBytes(F - 6), X;
                },
                _loadMeshFromObj: function(d, U) {
                  var F = this;
                  this.filename = U, this._tourDocument = d;
                  var X = d.getFileBlob(U), Y = new FileReader();
                  Y.onloadend = function(M) {
                    F._matFiles = F._readObjMaterialsFromBin(t.ss.safeCast(Y.result, String)), F._matFileIndex = 0, F._loadMatLib(t.ss.safeCast(Y.result, String));
                  }, Y.readAsText(X);
                },
                _readObjMaterialsFromBin: function(d) {
                  for (var U = [], F = d.split(`
`), X = t.ss.enumerate(F); X.moveNext(); ) {
                    var Y = X.current, M = t.ss.replaceString(Y, "  ", " "), B = t.ss.trim(M).split(" ");
                    if (B.length > 0)
                      switch (B[0]) {
                        case "mtllib":
                          var D = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), k = D + B[1];
                          U.push(k);
                          break;
                      }
                  }
                  return U;
                },
                _readObjFromBin: function(d) {
                  var U = !1, F = [], X = new S();
                  X.name = "Default";
                  var Y = [], M = [], B = [], D = [];
                  M.push(new _.Vector3d()), B.push(new _.Vector3d()), D.push(new _.Vector2d());
                  var k = [], G = -1, j = new m(), ee = new T(), Z = 0;
                  j = new m(), j.diffuse = this.color, j.ambient = this.color, j.specular = e.Colors.get_white(), j.specularSharpness = 30, j.opacity = 1, j.isDefault = !0, ee.startIndex = 0, ee.indexCount = 0, ee.materialIndex = 0;
                  for (var z = d.split(`
`), te = t.ss.enumerate(z); te.moveNext(); ) {
                    var re = te.current, le = t.ss.replaceString(re, "  ", " "), ae = t.ss.trim(le).split(" ");
                    if (ae.length > 0)
                      switch (ae[0]) {
                        case "mtllib":
                          break;
                        case "usemtl":
                          var oe = ae[1];
                          if (t.ss.keyExists(this._matLib, oe) && (G === -1 && Z > 0 && (this._addMaterial(j), G++), G > -1 && (ee.indexCount = Z - ee.startIndex, X.drawGroup.push(ee)), G++, t.ss.keyExists(this._matLib, oe))) {
                            if (j = this._matLib[oe], t.ss.keyExists(this._textureLib, oe))
                              try {
                                if (!t.ss.keyExists(this._textureCache, this._textureLib[oe])) {
                                  var de = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), ve = this._tourDocument.getCachedTexture2d(de + this._textureLib[oe]);
                                  ve != null && (this.meshFilenames.push(this._textureLib[oe]), this._textureCache[this._textureLib[oe]] = ve);
                                }
                                this._meshTextures.push(this._textureCache[this._textureLib[oe]]);
                              } catch {
                              }
                            this._addMaterial(j), ee = new T(), ee.startIndex = Z, ee.indexCount = 0, ee.materialIndex = G;
                          }
                          break;
                        case "v":
                          this.flipHandedness ? M.push(_.Vector3d.create(-parseFloat(ae[1]), parseFloat(ae[2]), parseFloat(ae[3]))) : M.push(_.Vector3d.create(parseFloat(ae[1]), parseFloat(ae[2]), parseFloat(ae[3])));
                          break;
                        case "vn":
                          this.flipHandedness ? B.push(_.Vector3d.create(-parseFloat(ae[1]), parseFloat(ae[2]), parseFloat(ae[3]))) : B.push(_.Vector3d.create(parseFloat(ae[1]), parseFloat(ae[2]), parseFloat(ae[3])));
                          break;
                        case "vt":
                          D.push(_.Vector2d.create(parseFloat(ae[1]), this.flipV ? 1 - parseFloat(ae[2]) : parseFloat(ae[2])));
                          break;
                        case "g":
                        case "o":
                          U && (G > -1 && (ee.indexCount = Z - ee.startIndex, X.drawGroup.push(ee), ee = new T(), ee.startIndex = Z, ee.indexCount = 0, ee.materialIndex = G), X = new S()), U = !0, ae.length > 1 ? X.name = ae[1] : X.name = "Unnamed", F.push(X);
                          break;
                        case "f":
                          var ce = this._getIndexies(ae[1]), he = this._getIndexies(ae[2]), ye = this._getIndexies(ae[3]);
                          if (Y.push(_.PositionNormalTextured.createUV(M[ce[0]], B[ce[2]], D[ce[1]])), Y.push(_.PositionNormalTextured.createUV(M[he[0]], B[he[2]], D[he[1]])), Y.push(_.PositionNormalTextured.createUV(M[ye[0]], B[ye[2]], D[ye[1]])), this.flipHandedness ? (k.push(Z), k.push(Z + 2), k.push(Z + 1)) : (k.push(Z), k.push(Z + 1), k.push(Z + 2)), Z += 3, ae.length > 4)
                            for (var fe = 4; fe < ae.length; )
                              this.flipHandedness ? (ce = this._getIndexies(ae[1]), ye = this._getIndexies(ae[fe]), he = this._getIndexies(ae[fe - 1])) : (ce = this._getIndexies(ae[1]), he = this._getIndexies(ae[fe - 1]), ye = this._getIndexies(ae[fe])), Y.push(_.PositionNormalTextured.createUV(M[ce[0]], B[ce[2]], D[ce[1]])), Y.push(_.PositionNormalTextured.createUV(M[he[0]], B[he[2]], D[he[1]])), Y.push(_.PositionNormalTextured.createUV(M[ye[0]], B[ye[2]], D[ye[1]])), k.push(Z), k.push(Z + 1), k.push(Z + 2), Z += 3, fe++;
                          break;
                      }
                  }
                  if (U || F.push(X), G === -1 && Z > 0 && (this._addMaterial(j), G++), G > -1 && (ee.indexCount = Z - ee.startIndex, X.drawGroup.push(ee)), B.length < 2) {
                    for (var Ce = Math.PI / 180, Ae = this.smooth ? 170 * Ce : 45 * Ce, Te = this._calculateVertexNormalsMerged(Y, k, Ae), Re = [], De = k.length, Oe = 0; Oe < De; ++Oe) {
                      var Ne = Y[k[Oe]];
                      Ne.set_normal(Te[Oe]), Re.push(Ne);
                    }
                    Y = Re;
                  }
                  this._mesh = f.create(Y, k);
                  var Fe = new S();
                  Fe.name = "Root", Fe.parent = null, Fe.level = -1, Fe.drawGroup = null, Fe.children = F, this.objects = [], this.objects.push(Fe), this._mesh.setObjects(this.objects), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
                },
                _loadMatLib: function(d) {
                  var U = this;
                  if (this._matFileIndex < this._matFiles.length) {
                    var F = this._matFiles[this._matFileIndex++], X = this._tourDocument.getFileBlob(F), Y = new FileReader();
                    Y.onloadend = function(M) {
                      U._readMatLibFromBin(t.ss.safeCast(Y.result, String)), U._loadMatLib(d);
                    }, Y.readAsText(X);
                  } else
                    this._readObjFromBin(d);
                },
                _readMatLibFromBin: function(d) {
                  try {
                    var U = new m(), F = "";
                    this._matLib = {}, this._textureLib = {};
                    for (var X = d.split(`
`), Y = t.ss.enumerate(X); Y.moveNext(); ) {
                      var M = Y.current, B = M, D = t.ss.trim(B).split(" ");
                      if (D.length > 0)
                        switch (D[0]) {
                          case "newmtl":
                            t.ss.emptyString(F) || (this._matLib[F] = U), U = new m(), U.diffuse = e.Colors.get_white(), U.ambient = e.Colors.get_white(), U.specular = e.Colors.get_black(), U.specularSharpness = 30, U.opacity = 1, F = D[1];
                            break;
                          case "Ka":
                            U.ambient = e.Color.fromArgb(255, Math.min(parseFloat(D[1]) * 255, 255), Math.min(parseFloat(D[2]) * 255, 255), Math.min(parseFloat(D[3]) * 255, 255));
                            break;
                          case "map_Kd":
                            U.diffuse = e.Colors.get_white();
                            for (var k = D[1], G = 2; G < D.length; G++)
                              k += " " + D[G];
                            var j = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                            k = t.ss.replaceString(k, "/", "\\"), k.indexOf("\\") !== -1 && (k = k.substring(k.lastIndexOf("\\") + 1)), this._textureLib[F] = k;
                            break;
                          case "Kd":
                            U.diffuse = e.Color.fromArgb(255, Math.min(parseFloat(D[1]) * 255, 255), Math.min(parseFloat(D[2]) * 255, 255), Math.min(parseFloat(D[3]) * 255, 255));
                            break;
                          case "Ks":
                            U.specular = e.Color.fromArgb(255, Math.min(parseFloat(D[1]) * 255, 255), Math.min(parseFloat(D[2]) * 255, 255), Math.min(parseFloat(D[3]) * 255, 255));
                            break;
                          case "d":
                            U.opacity = parseFloat(D[1]);
                            break;
                          case "Tr":
                            U.opacity = 1 - parseFloat(D[1]);
                            break;
                          case "illum":
                            var ee = parseInt(D[1]);
                            break;
                          case "sharpness":
                            U.specularSharpness = parseFloat(D[1]);
                            break;
                          case "Ns":
                            U.specularSharpness = 1 + 2 * parseFloat(D[1]), U.specularSharpness = Math.max(10, U.specularSharpness);
                            break;
                        }
                    }
                    t.ss.emptyString(F) || (this._matLib[F] = U);
                  } catch {
                  }
                },
                _getIndexies: function(d) {
                  var U = t.ss.trim(d).split("/"), F = new Array(3);
                  return t.ss.emptyString(d) || (U.length > 0 && (F[0] = parseInt(U[0])), U.length > 1 && (t.ss.emptyString(U[1]) ? F[1] = 0 : F[1] = parseInt(U[1])), U.length > 2 && (F[2] = parseInt(U[2]))), F;
                },
                _loadMeshFrom3ds: function(d, U, F) {
                  var X = this;
                  this._tourDocument = d;
                  var Y = d.getFileBlob(U), M = new FileReader();
                  M.onloadend = function(B) {
                    X._read3dsFromBin(new a.BinaryReader(new Uint8Array(M.result)), F);
                  }, M.readAsArrayBuffer(Y);
                },
                _read3dsFromBin: function(d, U) {
                  for (var F, X, Y, M = "", B = "", D = 0, k = 0, G = [], j = [], ee = [], Z = -1, z = new m(), te = 0, re = 0, le = !1, ae = !1, oe = 0, de = 0, ve = 0, ce = [], he = null, ye = [], fe = [], Ce = {}, Ae = d.get_length() - 1, Te = 0, Re = 0; d.get_position() < Ae && !le; )
                    switch (X = d.readUInt16(), Y = d.readUInt32(), X) {
                      case 19789:
                        break;
                      case 15677:
                        break;
                      case 16384:
                        M = "";
                        var De;
                        do
                          De = d.readByte(), De > 0 && (M += String.fromCharCode(De));
                        while (De);
                        he = new S(), he.name = M, ce.push(he), t.ss.keyExists(Ce, he.name) || (Ce[he.name] = he);
                        break;
                      case 16640:
                        Te = G.length, Re = Math.floor(j.length / 3);
                        break;
                      case 16656:
                        for (k = d.readUInt16(), F = 0; F < k; F++) {
                          var Oe = d.readSingle() - oe, Ne = d.readSingle() - de, Fe = d.readSingle() - ve, $e = _.PositionNormalTextured._create(Oe * U, Fe * U, Ne * U, 0, 0, 0, 0, 0);
                          G.push($e);
                        }
                        break;
                      case 16672:
                        var Pe = d.readUInt16();
                        for (D += Pe, F = 0; F < Pe; F++) {
                          var ze = d.readUInt16() + Te, se = d.readUInt16() + Te, be = d.readUInt16() + Te;
                          j.push(be), j.push(se), j.push(ze), d.readUInt16();
                        }
                        break;
                      case 16688:
                        B = "", F = 0;
                        var Se;
                        do
                          Se = d.readByte(), Se > 0 && (B += String.fromCharCode(Se)), F++;
                        while (Se);
                        var Pe = d.readUInt16(), Ve = new Array(Pe);
                        for (te = N._getMaterialID(B, ee), F = 0; F < Pe; F++)
                          Ve[F] = d.readUInt16() + Re;
                        he.applyLists.push(Ve), he.applyListsIndex.push(te);
                        break;
                      case 16704:
                        for (re = d.readUInt16(), F = 0; F < re; F++) {
                          var $e = G[Te + F], me = _.Vector2d.create(d.readSingle(), this.flipV ? 1 - d.readSingle() : d.readSingle());
                          G[Te + F] = _.PositionNormalTextured.createUV($e.get_position(), new _.Vector3d(), me);
                        }
                        break;
                      case 16736:
                        var Me = new Array(12);
                        for (F = 0; F < 12; F++)
                          Me[F] = d.readSingle();
                        t.ss.keyExists(Ce, M) && (Ce[M].localMat = _.Matrix3d.create(Me[0], Me[1], Me[2], 0, Me[3], Me[4], Me[5], 0, Me[6], Me[7], Me[8], 0, Me[9], Me[10], Me[11], 1), Ce[M].localMat.invert());
                        break;
                      case 45055:
                        break;
                      case 40960:
                        var ie = "";
                        F = 0;
                        var we;
                        do
                          we = d.readByte(), we > 0 && (ie += String.fromCharCode(we)), F++;
                        while (we);
                        ee.push(ie), Z > -1 && this._addMaterial(z), Z++, z = new m(), z.diffuse = e.Colors.get_white(), z.ambient = e.Colors.get_white(), z.specular = e.Colors.get_black(), z.specularSharpness = 30, z.opacity = 1;
                        break;
                      case 40976:
                        z.ambient = this._loadColorChunk(d);
                        break;
                      case 40992:
                        z.diffuse = this._loadColorChunk(d);
                        break;
                      case 41008:
                        z.specular = this._loadColorChunk(d);
                        break;
                      case 41024:
                        z.specularSharpness = 1 + 2 * this._loadPercentageChunk(d), z.specularSharpness = Math.max(10, z.specularSharpness);
                        break;
                      case 41472:
                        break;
                      case 41728:
                        var J = "";
                        F = 0;
                        var we;
                        do
                          we = d.readByte(), we > 0 && (J += String.fromCharCode(we)), F++;
                        while (we);
                        var Ee = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                        try {
                          var xe = this._tourDocument.getCachedTexture2d(Ee + J);
                          xe != null ? (this._meshTextures.push(xe), this.meshFilenames.push(J), z.diffuse = e.Colors.get_white()) : this._meshTextures.push(null);
                        } catch {
                          this._meshTextures.push(null);
                        }
                        break;
                      case 41520:
                        this._loadPercentageChunk(d), d.readUInt16(), d.readUInt32();
                        var J = "";
                        F = 0;
                        var we;
                        do
                          we = d.readByte(), we > 0 && (J += String.fromCharCode(we)), F++;
                        while (we);
                        var Ee = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                        try {
                          var xe = this._tourDocument.getCachedTexture2d(Ee + J);
                          xe != null ? (this._meshNormalMaps.push(xe), this.meshFilenames.push(J), ae = !0) : this._meshNormalMaps.push(null);
                        } catch {
                          this._meshNormalMaps.push(null);
                        }
                        break;
                      case 41476:
                        var We = this._loadPercentageChunk(d);
                        d.readUInt16(), d.readUInt32();
                        var J = "";
                        F = 0;
                        var we;
                        do
                          we = d.readByte(), we > 0 && (J += String.fromCharCode(we)), F++;
                        while (we);
                        var Ee = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                        try {
                          var xe = this._tourDocument.getCachedTexture2d(Ee + J);
                          if (xe != null) {
                            this._meshSpecularTextures.push(xe), this.meshFilenames.push(J);
                            var ne = t.ss.truncate(255.99 * We / 100);
                            z.specular = e.Color.fromArgb(255, ne, ne, ne);
                          } else
                            this._meshSpecularTextures.push(null);
                        } catch {
                          this._meshSpecularTextures.push(null);
                        }
                        break;
                      case 45056:
                        break;
                      case 45058:
                        break;
                      case 45072:
                        M = "", F = 0;
                        var Se;
                        do
                          Se = d.readByte(), Se > 0 && (M += String.fromCharCode(Se)), F++;
                        while (Se);
                        d.readUInt16(), d.readUInt16();
                        var _e = d.readUInt16();
                        _e === 65535 && (_e = -1), t.ss.startsWith(M, "$") || fe.push(M), ye.push(_e), t.ss.keyExists(Ce, M) && (Ce[M].level = _e);
                        break;
                      case 45073:
                        M = "", F = 0;
                        var Se;
                        do
                          Se = d.readByte(), Se > 0 && (M += String.fromCharCode(Se)), F++;
                        while (Se);
                        fe.push("$$$" + M);
                        break;
                      case 45075:
                        var ke = new Array(3);
                        for (F = 0; F < 3; F++)
                          ke[F] = d.readSingle();
                        t.ss.keyExists(Ce, M) && (Ce[M].pivotPoint = _.Vector3d.create(-ke[0], -ke[1], -ke[2]));
                        break;
                      case 45088:
                        var Ue = new Array(8);
                        for (F = 0; F < 8; F++)
                          Ue[F] = d.readSingle();
                        break;
                      default:
                        d.seekRelative(Y - 6);
                        break;
                    }
                  d.close(), Z > -1 && this._addMaterial(z);
                  for (var je = Math.PI / 180, He = this.smooth ? 70 * je : 45 * je, ct = this._calculateVertexNormalsMerged(G, j, He), Je = [], Xe = D * 3, Ze = 0; Ze < Xe; ++Ze) {
                    var tt = G[j[Ze]];
                    tt.set_normal(ct[Ze]), Je.push(tt);
                  }
                  for (var et = [], _t = t.ss.enumerate(ce); _t.moveNext(); ) {
                    var at = _t.current, Ye = [];
                    for (F = 0; F < at.applyLists.length; F++) {
                      for (var it = at.applyListsIndex[F], Qe = et.length, ht = t.ss.enumerate(at.applyLists[F]); ht.moveNext(); ) {
                        var qe = ht.current;
                        et.push(qe * 3), et.push(qe * 3 + 1), et.push(qe * 3 + 2);
                      }
                      var st = new T();
                      st.startIndex = Qe, st.indexCount = at.applyLists[F].length * 3, st.materialIndex = it, Ye.push(st);
                    }
                    at.drawGroup = Ye;
                  }
                  var ut = new t.ss.Stack(), Lt = [], vt = new S();
                  vt.name = "Root", vt.parent = null, vt.level = -1, vt.drawGroup = null;
                  var H = -1;
                  for (ut.push(vt), Lt.push(vt), F = 0; F < ye.length; F++) {
                    var _e = ye[F];
                    if (_e <= H) {
                      for (; _e <= ut.peek().level && ut.count > 1; )
                        ut.pop();
                      H = _e;
                    }
                    if (t.ss.startsWith(fe[F], "$$$")) {
                      var Q = new S();
                      Q.name = t.ss.replaceString(fe[F], "$$$", ""), Q.parent = ut.peek(), Q.parent.children.push(Q), Q.level = H = _e, Q.drawGroup = null, ut.push(Q);
                    } else
                      Ce[fe[F]].level = H = _e, Ce[fe[F]].parent = ut.peek(), Ce[fe[F]].parent.children.push(Ce[fe[F]]), ut.push(Ce[fe[F]]);
                  }
                  if (!ye.length)
                    for (var q = t.ss.enumerate(ce); q.moveNext(); ) {
                      var at = q.current;
                      vt.children.push(at), at.parent = vt;
                    }
                  if (ae) {
                    for (var ue = [], pe = 0; pe < Xe; ++pe)
                      ue.push(pe);
                    for (var ge = this._calculateVertexTangents(Je, ue, He), Le = new Array(Je.length), Ze = 0, Ie = t.ss.enumerate(Je); Ie.moveNext(); ) {
                      var tt = Ie.current, Ge = new _.PositionNormalTexturedTangent(tt.get_position(), tt.get_normal(), _.Vector2d.create(tt.tu, tt.tv), ge[Ze]);
                      Le[Ze] = Ge, ++Ze;
                    }
                    this._mesh = f.createTangent(Le, et);
                  } else
                    this._mesh = f.create(Je, et);
                  this.objects = Lt, this._mesh.setObjects(Lt), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
                },
                _offsetObjects: function(d, U, F, X) {
                  for (var Y = t.ss.enumerate(U); Y.moveNext(); ) {
                    var M = Y.current, B = M.localMat;
                    this._offsetObjects(d, M.children, B, _.Vector3d.addVectors(M.pivotPoint, X));
                    for (var D = t.ss.enumerate(M.drawGroup); D.moveNext(); )
                      for (var k = D.current, G = k.startIndex + k.indexCount, j = k.startIndex; j < G; j++) {
                        var ee = d[j];
                        ee.set_position(_.Vector3d.addVectors(ee.get_position(), _.Vector3d.addVectors(M.pivotPoint, X))), d[j] = ee;
                      }
                  }
                },
                // Set up lighting state to account for:
                //   - Light reflected from a nearby planet
                //   - Shadows cast by nearby planets
                setupLighting: function(d) {
                  var U = _.Vector3d.create(d.get_world().get_offsetX(), d.get_world().get_offsetY(), d.get_world().get_offsetZ()), F = _.Vector3d.subtractVectors(U, d.get_reflectedLightPosition()), X = _.Vector3d.subtractVectors(d.get_sunPosition(), d.get_reflectedLightPosition()), Y = X.length() <= 0 ? 1 : _.Vector3d.dot(F, X) / (F.length() * X.length()), M = Math.max(0, Y);
                  M = Math.sqrt(M);
                  var B = 0, D = 1;
                  if (d.get_occludingPlanetRadius() > 0) {
                    var k = _.Vector3d.subtractVectors(U, d.get_occludingPlanetPosition()).length() - d.get_occludingPlanetRadius();
                    B = Math.max(0, Math.min(1, 1 - k / d.get_occludingPlanetRadius() * 300)), M *= 1 - B;
                    var G = _.Vector3d.subtractVectors(d.get_occludingPlanetPosition(), d.get_sunPosition()), j = _.Vector3d.subtractVectors(d.get_occludingPlanetPosition(), U), ee = _.Vector3d.create(-j.x, -j.y, -j.z);
                    ee.normalize(), d.set_hemisphereLightUp(ee);
                    var Z = _.Vector3d.subtractVectors(d.get_sunPosition(), U), z = G.length(), te = -_.Vector3d.dot(Z, G) / (z * z);
                    if (te > 1) {
                      var re = _.Vector3d.addVectors(d.get_sunPosition(), _.Vector3d.multiplyScalar(G, te)), le = _.Vector3d.subtractVectors(re, U).length();
                      _.Vector3d.subtractVectors(re, d.get_sunPosition()).length();
                      var ae = 4645784e-9, oe = d.get_occludingPlanetRadius() + (te - 1) * (d.get_occludingPlanetRadius() + ae), de = d.get_occludingPlanetRadius() + (te - 1) * (d.get_occludingPlanetRadius() - ae);
                      if (le < oe) {
                        var ve = 0;
                        if (de < 0) {
                          var ce = Math.pow(1 / (1 - de), 2);
                          de = 0, ve = 1 - ce;
                        }
                        var he = Math.max(0, de);
                        D = Math.max(ve, (le - he) / (oe - he));
                        var ye = t.ss.truncate(255.99 * D);
                        d.set_sunlightColor(e.Color.fromArgb(255, ye, ye, ye)), B *= D;
                      }
                    }
                  }
                  d.set_reflectedLightColor(e.Color.fromArgb(255, t.ss.truncate(d.get_reflectedLightColor().r * M), t.ss.truncate(d.get_reflectedLightColor().g * M), t.ss.truncate(d.get_reflectedLightColor().b * M))), d.set_hemisphereLightColor(e.Color.fromArgb(255, t.ss.truncate(d.get_hemisphereLightColor().r * B), t.ss.truncate(d.get_hemisphereLightColor().g * B), t.ss.truncate(d.get_hemisphereLightColor().b * B)));
                },
                render: function(d, U) {
                  if (this._readyToRender) {
                    this._dirty && !this.issLayer && this._reload();
                    var F = d.get_world(), X = this._mesh.boundingSphere.center, Y = 1;
                    this._mesh.boundingSphere.radius > 0 && (Y = 1 / this._mesh.boundingSphere.radius), d.set_world(_.Matrix3d.multiplyMatrix(_.Matrix3d.multiplyMatrix(_.Matrix3d.translation(_.Vector3d.create(-X.x, -X.y, -X.z)), _.Matrix3d._scaling(Y, Y, Y)), F));
                    var M = _.Matrix3d.multiplyMatrix(d.get_world(), d.get_view()), B = M.transform(_.Vector3d.get_empty()), D = Math.sqrt(M.get_m11() * M.get_m11() + M.get_m22() * M.get_m22() + M.get_m33() * M.get_m33()) / Y, k = B.length(), G = D, j = t.ss.truncate(d.height), ee = d.get_projection().get_m11(), Z = d.get_projection().get_m34(), z = d.get_projection().get_m44(), te = Math.abs(Z) * k + z, re = ee / te * j, le = G * re;
                    if (!(le < 0.5)) {
                      var ae = d.get_sunlightColor(), oe = d.get_reflectedLightColor(), de = d.get_hemisphereLightColor();
                      if (y.Settings.get_current().get_solarSystemLighting() ? (this.setupLighting(d), this.useCurrentAmbient || d.set_ambientLightColor(e.Color.fromArgb(255, 11, 11, 11))) : (d.set_sunlightColor(e.Colors.get_black()), d.set_reflectedLightColor(e.Colors.get_black()), d.set_hemisphereLightColor(e.Colors.get_black()), d.set_ambientLightColor(e.Colors.get_white())), this._mesh != null) {
                        g.ModelShader.minLightingBrightness = 0.1;
                        var ve = this._meshMaterials.length;
                        if (this._mesh.beginDrawing(d), ve > 0)
                          for (var ce = 0; ce < this._meshMaterials.length; ce++) {
                            if (this._meshMaterials[ce].isDefault) {
                              var he = this._meshMaterials[ce];
                              he.diffuse = this.color, he.ambient = this.color, this._meshMaterials[ce] = he;
                            }
                            d.setMaterial(this._meshMaterials[ce], this._meshTextures[ce], this._meshSpecularTextures[ce], this._meshNormalMaps[ce], U), this._mesh.vertexBuffer != null ? g.ModelShader.use(d, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ce] != null ? this._meshTextures[ce].texture2d : null, U, !1, 32) : g.ModelShader.use(d, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ce] != null ? this._meshTextures[ce].texture2d : null, U, !1, 44), d.preDraw(), this._mesh.drawSubset(d, ce);
                          }
                        else {
                          d.preDraw();
                          for (var ce = 0; ce < this._meshTextures.length; ce++)
                            this._meshTextures[ce] != null && (d.set_mainTexture(this._meshTextures[ce]), this._mesh.vertexBuffer != null ? g.ModelShader.use(d, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ce] != null ? this._meshTextures[ce].texture2d : null, U, !1, 32) : g.ModelShader.use(d, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ce] != null ? this._meshTextures[ce].texture2d : null, U, !1, 44)), d.preDraw(), this._mesh.drawSubset(d, ce);
                        }
                        d.set_world(F), d.set_sunlightColor(ae), d.set_reflectedLightColor(oe), d.set_hemisphereLightColor(de), d.set_ambientLightColor(e.Colors.get_black());
                      }
                    }
                  }
                },
                dispose: function() {
                  this._mesh != null && (this._mesh.dispose(), this._mesh = null);
                  for (var d = t.ss.enumerate(t.ss.keys(this._textureCache)); d.moveNext(); ) {
                    var U = d.current, F = this._textureCache[U];
                    F != null && F.dispose();
                  }
                  t.ss.clearKeys(this._textureCache), N._disposeTextureList(this._meshTextures), N._disposeTextureList(this._meshSpecularTextures), N._disposeTextureList(this._meshNormalMaps), this._meshMaterials.length = 0, this._dirty = !0;
                }
              };
              (0, n.registerType)("Object3d", [N, $, null]);
              function S() {
                this.level = -1, this.children = [], this.enabled = !0, this.drawGroup = [], this.applyLists = [], this.applyListsIndex = [];
              }
              var I = {};
              (0, n.registerType)("ObjectNode", [S, I, null]);
              function x(d) {
                this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, v.LayerUI.call(this), this._layer$1 = d;
              }
              var P = {
                setUICallbacks: function(d) {
                  this._callbacks$1 = d;
                },
                get_hasTreeViewNodes: function() {
                  return !0;
                },
                getTreeNodes: function() {
                  var d = [];
                  return this._layer$1.object3d.objects.length > 0 && this._layer$1.object3d.objects[0].children != null && this._loadTree$1(d, this._layer$1.object3d.objects[0].children), d;
                },
                _loadTree$1: function(d, U) {
                  for (var F = t.ss.enumerate(U); F.moveNext(); ) {
                    var X = F.current, Y = new v.LayerUITreeNode();
                    Y.set_name(X.name), Y.set_tag(X), Y.set_checked(X.enabled), Y.add_nodeSelected(t.ss.bind("_node_NodeSelected$1", this)), Y.add_nodeChecked(t.ss.bind("_node_NodeChecked$1", this)), d.push(Y), this._loadTree$1(Y.get_nodes(), X.children);
                  }
                },
                _node_NodeChecked$1: function(d, U) {
                  var F = d.get_tag();
                  F != null && (F.enabled = U);
                },
                _node_NodeSelected$1: function(d) {
                  if (this._callbacks$1 != null) {
                    var U = d.get_tag(), F = {};
                    F.Name = U.name, F["Pivot.X"] = U.pivotPoint.x.toString(), F["Pivot.Y"] = U.pivotPoint.y.toString(), F["Pivot.Z"] = U.pivotPoint.z.toString(), this._callbacks$1.showRowData(F);
                  }
                },
                getNodeContextMenu: function(d) {
                  return v.LayerUI.prototype.getNodeContextMenu.call(this, d);
                }
              };
              (0, n.registerType)("Object3dLayerUI", [x, P, v.LayerUI]);
            }
          ),
          /***/
          "./esm/layers/orbit.js": (
            /*!*****************************!*\
              !*** ./esm/layers/orbit.js ***!
              \*****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                EllipseRenderer: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                Orbit: () => (
                  /* binding */
                  a
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), r = i(
                /*! ../graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), o = i(
                /*! ../graphics/gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), c = i(
                /*! ../color.js */
                "./esm/color.js"
              ), l = i(
                /*! ../coordinates.js */
                "./esm/coordinates.js"
              ), g = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              );
              function a(C, E, v, m, L) {
                this._elements = null, this._orbitColor = c.Colors.get_white(), this._scale = 0, this._segmentCount = 0, this._elements = C, this._segmentCount = E, this._orbitColor = v, this._scale = L;
              }
              a._orbitalToWwt = e.Matrix3d.create(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1), a._initBegun = !1;
              var b = {
                cleanUp: function() {
                },
                // Get the radius of a sphere (centered at a focus of the ellipse) that is
                // large enough to contain the orbit. The value returned has units of the orbit scale.
                get_boundingRadius: function() {
                  return this._elements != null ? this._elements.a * (1 + this._elements.e) / this._scale : 0;
                },
                draw3D: function(C, E, v) {
                  var m = e.Matrix3d.multiplyMatrix(e.Matrix3d._rotationZ(l.Coordinates.degreesToRadians(this._elements.w)), e.Matrix3d.multiplyMatrix(e.Matrix3d._rotationX(l.Coordinates.degreesToRadians(this._elements.i)), e.Matrix3d._rotationZ(l.Coordinates.degreesToRadians(this._elements.omega))));
                  m = e.Matrix3d.multiplyMatrix(m, a._orbitalToWwt);
                  var L = e.Matrix3d.multiplyMatrix(e.Matrix3d.multiplyMatrix(m, e.Matrix3d.translation(v)), C.get_world()), A = this._elements.n * (g.SpaceTimeController.get_jNow() - this._elements.t), K = 1;
                  A < 0 && (K = -1), A = Math.abs(A) / 360, A = (A - t.ss.truncate(A)) * 360 * K;
                  var T = c.Color._fromArgbColor(t.ss.truncate(E * 255), this._orbitColor);
                  A = l.Coordinates.degreesToRadians(A);
                  for (var w = A, f = 0; f < 5; f++)
                    w += (A - w + this._elements.e * Math.sin(w)) / (1 - this._elements.e * Math.cos(w));
                  V.drawEllipse(C, this._elements.a / this._scale, this._elements.e, w, T, L);
                }
              };
              (0, n.registerType)("Orbit", [a, b, null]);
              function V() {
              }
              V.drawEllipseWithPosition = function(C, E, v, m, L, A, K) {
                V._ellipseShader == null && (V._ellipseShader = new r.EllipseShader()), V._ellipseVertexBuffer == null && (V._ellipseVertexBuffer = V.createEllipseVertexBuffer(500));
                var T = C.get_world();
                C.set_world(A), C.gl.bindBuffer(_.WEBGL.ARRAY_BUFFER, V._ellipseVertexBuffer.vertexBuffer), C.gl.bindBuffer(_.WEBGL.ELEMENT_ARRAY_BUFFER, null), r.EllipseShader.use(C, E, v, m, L, 1, T, K), C.gl.drawArrays(_.WEBGL.LINE_STRIP, 0, V._ellipseVertexBuffer.count), C.set_world(T);
              }, V.drawEllipse = function(C, E, v, m, L, A) {
                V._ellipseShader == null && (V._ellipseShader = new r.EllipseShader()), V._ellipseWithoutStartPointVertexBuffer == null && (V._ellipseWithoutStartPointVertexBuffer = V.createEllipseVertexBufferWithoutStartPoint(360));
                var K = C.get_world();
                C.set_world(A), C.gl.bindBuffer(_.WEBGL.ARRAY_BUFFER, V._ellipseWithoutStartPointVertexBuffer.vertexBuffer), C.gl.bindBuffer(_.WEBGL.ELEMENT_ARRAY_BUFFER, null), r.EllipseShader.use(C, E, v, m, L, 1, K, e.Vector3d.create(0, 0, 0)), C.gl.drawArrays(_.WEBGL.LINE_STRIP, 0, V._ellipseWithoutStartPointVertexBuffer.count - 1), C.set_world(K);
              }, V.createEllipseVertexBuffer = function(C) {
                for (var E = new o.PositionVertexBuffer(C), v = E.lock(), m = 0, L = 0; L < C / 2; ++L)
                  v[m++] = e.Vector3d.create(2 * L / C * 0.05, 0, 0);
                for (var L = 0; L < C / 2; ++L)
                  v[m++] = e.Vector3d.create(2 * L / C * 0.95 + 0.05, 0, 0);
                return E.unlock(), E;
              }, V.createEllipseVertexBufferWithoutStartPoint = function(C) {
                var E = new o.PositionVertexBuffer(C), v = E.lock();
                v[0] = e.Vector3d.create(1e-6, 0, 0);
                for (var m = 1; m < C; ++m)
                  v[m] = e.Vector3d.create(2 * m / C, 0, 0);
                return E.unlock(), E;
              };
              var y = {};
              (0, n.registerType)("EllipseRenderer", [V, y, null]);
            }
          ),
          /***/
          "./esm/layers/orbit_layer.js": (
            /*!***********************************!*\
              !*** ./esm/layers/orbit_layer.js ***!
              \***********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                OrbitLayer: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                OrbitLayerUI: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../color.js */
                "./esm/color.js"
              ), r = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), o = i(
                /*! ./layer_ui.js */
                "./esm/layers/layer_ui.js"
              ), c = i(
                /*! ./orbit.js */
                "./esm/layers/orbit.js"
              ), l = i(
                /*! ./reference_frame.js */
                "./esm/layers/reference_frame.js"
              );
              function g() {
                this._frames$1 = [], this._primaryUI$1 = null, this._pointOpacity$1 = 1, this._pointColor$1 = _.Colors.get_yellow(), this._filename$1 = "", this._dataFile$1 = "", r.Layer.call(this);
              }
              var a = {
                get_frames: function() {
                  return this._frames$1;
                },
                set_frames: function(y) {
                  return this._frames$1 = y, y;
                },
                getPrimaryUI: function() {
                  return this._primaryUI$1 == null && (this._primaryUI$1 = new b(this)), this._primaryUI$1;
                },
                cleanUp: function() {
                  for (var y = t.ss.enumerate(this._frames$1); y.moveNext(); ) {
                    var C = y.current;
                    C.get_orbit() != null && (C.get_orbit().cleanUp(), C.set_orbit(null));
                  }
                },
                writeLayerProperties: function(y) {
                  y._writeAttributeString("PointOpacity", this.get_pointOpacity().toString()), y._writeAttributeString("PointColor", this._pointColor$1.save());
                },
                get_pointOpacity: function() {
                  return this._pointOpacity$1;
                },
                set_pointOpacity: function(y) {
                  return this._pointOpacity$1 !== y && (this.version++, this._pointOpacity$1 = y), y;
                },
                get_pointColor: function() {
                  return this._pointColor$1;
                },
                set_pointColor: function(y) {
                  return this._pointColor$1 !== y && (this.version++, this._pointColor$1 = y), y;
                },
                getParams: function() {
                  var y = new Array(6);
                  return y[0] = this._pointOpacity$1, y[1] = this.get_color().r / 255, y[2] = this.get_color().g / 255, y[3] = this.get_color().b / 255, y[4] = this.get_color().a / 255, y[5] = this.get_opacity(), y;
                },
                getParamNames: function() {
                  return ["PointOpacity", "Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
                },
                setParams: function(y) {
                  if (y.length === 6) {
                    this._pointOpacity$1 = y[0], this.set_opacity(y[5]);
                    var C = _.Color.fromArgb(t.ss.truncate(y[4] * 255), t.ss.truncate(y[1] * 255), t.ss.truncate(y[2] * 255), t.ss.truncate(y[3] * 255));
                    this.set_color(C);
                  }
                },
                initializeFromXml: function(y) {
                  this.set_pointOpacity(parseFloat(y.attributes.getNamedItem("PointOpacity").nodeValue)), this.set_pointColor(_.Color.load(y.attributes.getNamedItem("PointColor").nodeValue));
                },
                draw: function(y, C, E) {
                  var v = y.get_world();
                  y.set_world(y.get_worldBaseNonRotating());
                  for (var m = t.ss.enumerate(this._frames$1); m.moveNext(); ) {
                    var L = m.current;
                    L.showOrbitPath && (L.get_orbit() == null && L.set_orbit(new c.Orbit(L.get_elements(), 360, this.get_color(), 1, y.get_nominalRadius())), L.get_orbit().draw3D(y, C * this.get_opacity(), new e.Vector3d()));
                  }
                  return y.set_world(v), !0;
                },
                addFilesToCabinet: function(y) {
                  this._filename$1 = y.tempDirectory + t.ss.format("{0}\\{1}.txt", y.get_packageID(), this.id.toString()), this._filename$1.substring(0, this._filename$1.lastIndexOf("\\"));
                  var C = new Blob([this._dataFile$1]);
                  y.addFile(this._filename$1, C), r.Layer.prototype.addFilesToCabinet.call(this, y);
                },
                loadData: function(y, C) {
                  var E = this, v = y.getFileBlob(C), m = new FileReader();
                  m.onloadend = function(L) {
                    E._dataFile$1 = t.ss.safeCast(m.result, String), E.loadString(E._dataFile$1);
                  }, m.readAsText(v);
                },
                loadString: function(y) {
                  var C = y.split(`
`);
                  this._frames$1.length = 0;
                  for (var E = 0; E < C.length; E += 2) {
                    var v = E, m = E + 1;
                    if (C[E].length > 0) {
                      var L = new l.ReferenceFrame();
                      if (C[E].substring(0, 1) !== "1")
                        v++, m++, L.name = t.ss.trim(C[E]), E++;
                      else if (C[E].substring(0, 1) === "1")
                        L.name = C[E].substring(2, 5);
                      else {
                        E -= 2;
                        continue;
                      }
                      L.reference = 18, L.oblateness = 0, L.showOrbitPath = !0, L.showAsPoint = !0, L.referenceFrameType = 1, L.scale = 1, L.semiMajorAxisUnits = 1, L.meanRadius = 10, L.oblateness = 0, L.fromTLE(C[v], C[m], 3986004418e5), this._frames$1.push(L);
                    } else
                      E -= 1;
                  }
                }
              };
              (0, n.registerType)("OrbitLayer", [g, a, r.Layer]);
              function b(y) {
                this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, o.LayerUI.call(this), this._layer$1 = y;
              }
              var V = {
                setUICallbacks: function(y) {
                  this._callbacks$1 = y;
                },
                get_hasTreeViewNodes: function() {
                  return !0;
                },
                getTreeNodes: function() {
                  for (var y = [], C = t.ss.enumerate(this._layer$1.get_frames()); C.moveNext(); ) {
                    var E = C.current, v = new o.LayerUITreeNode();
                    v.set_name(E.name), v.set_tag(E), v.set_checked(E.showOrbitPath), v.add_nodeSelected(t.ss.bind("_node_NodeSelected$1", this)), v.add_nodeChecked(t.ss.bind("_node_NodeChecked$1", this)), y.push(v);
                  }
                  return y;
                },
                _node_NodeChecked$1: function(y, C) {
                  var E = y.get_tag();
                  E != null && (E.showOrbitPath = C);
                },
                _node_NodeSelected$1: function(y) {
                  if (this._callbacks$1 != null) {
                    var C = y.get_tag(), E = {};
                    E.Name = C.name, E["SemiMajor Axis"] = C.semiMajorAxis.toString(), E["SMA Units"] = C.semiMajorAxisUnits.toString(), E.Inclination = C.inclination.toString(), E.Eccentricity = C.eccentricity.toString(), E["Long of Asc. Node"] = C.longitudeOfAscendingNode.toString(), E["Argument Of Periapsis"] = C.argumentOfPeriapsis.toString(), E.Epoch = C.epoch.toString(), E["Mean Daily Motion"] = C.meanDailyMotion.toString(), E["Mean Anomoly at Epoch"] = C.meanAnomolyAtEpoch.toString(), this._callbacks$1.showRowData(E);
                  }
                },
                getNodeContextMenu: function(y) {
                  return o.LayerUI.prototype.getNodeContextMenu.call(this, y);
                }
              };
              (0, n.registerType)("OrbitLayerUI", [b, V, o.LayerUI]);
            }
          ),
          /***/
          "./esm/layers/reference_frame.js": (
            /*!***************************************!*\
              !*** ./esm/layers/reference_frame.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ReferenceFrame: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                ReferenceFrameTypes: () => (
                  /* binding */
                  c
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../astrocalc/elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), _ = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ../color.js */
                "./esm/color.js"
              ), o = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), c = {
                fixedSherical: 0,
                orbital: 1,
                trajectory: 2,
                synodic: 3
              };
              (0, n.registerType)("ReferenceFrameTypes", c), (0, n.registerEnum)("ReferenceFrameTypes", c);
              function l() {
                this._systemGenerated = !1, this.meanAnomoly = 0, this.orbitalYears = 0, this.observingLocation = !1, this.reference = 18, this.parentsRoationalBase = !1, this.referenceFrameType = 0, this.meanRadius = 6371e3, this.oblateness = 33528e-7, this.heading = 0, this.pitch = 0, this.roll = 0, this.scale = 1, this.tilt = 0, this.translation = new _.Vector3d(), this.lat = 0, this.lng = 0, this.altitude = 0, this.rotationalPeriod = 0, this.zeroRotationDate = 0, this.representativeColor = r.Colors.get_white(), this.showAsPoint = !1, this.showOrbitPath = !1, this.stationKeeping = !0, this.semiMajorAxis = 0, this.semiMajorAxisUnits = 1, this.eccentricity = 0, this.inclination = 0, this.argumentOfPeriapsis = 0, this.longitudeOfAscendingNode = 0, this.meanAnomolyAtEpoch = 0, this.meanDailyMotion = 0, this.epoch = 0, this._orbit = null, this._elements = new e.EOE(), this.worldMatrix = new _.Matrix3d(), this.worldMatrix = _.Matrix3d.get_identity();
              }
              l.isTLECheckSumGood = function(a) {
                if (a.length !== 69)
                  return !1;
                for (var b = 0, V = 0; V < 68; V++)
                  switch (a.substr(V, 1)) {
                    case "1":
                      b += 1;
                      break;
                    case "2":
                      b += 2;
                      break;
                    case "3":
                      b += 3;
                      break;
                    case "4":
                      b += 4;
                      break;
                    case "5":
                      b += 5;
                      break;
                    case "6":
                      b += 6;
                      break;
                    case "7":
                      b += 7;
                      break;
                    case "8":
                      b += 8;
                      break;
                    case "9":
                      b += 9;
                      break;
                    case "-":
                      b += 1;
                      break;
                  }
                return (b % 10).toString() === a.charAt(68).toString();
              }, l.toTLEExponential = function(a, b) {
                var V = a.toExponential(b);
                return V.length < b + 6 && (V = V.substring(0, b + 4) + "0" + V.substr(b + 4, 1)), V;
              }, l.tleNumberString = function(a, b, V) {
                var y = a.toFixed(V), C = y.indexOf(".");
                C === -1 && (C = y.length, y += ".0");
                var E = y.length - C - 1, v = "00000000";
                return y = v.substr(0, b - C) + y + v.substr(0, V - E), y;
              }, l.computeTLECheckSum = function(a) {
                if (a.length !== 68)
                  return "0";
                for (var b = 0, V = 0; V < 68; V++)
                  switch (a[V]) {
                    case "1":
                      b += 1;
                      break;
                    case "2":
                      b += 2;
                      break;
                    case "3":
                      b += 3;
                      break;
                    case "4":
                      b += 4;
                      break;
                    case "5":
                      b += 5;
                      break;
                    case "6":
                      b += 6;
                      break;
                    case "7":
                      b += 7;
                      break;
                    case "8":
                      b += 8;
                      break;
                    case "9":
                      b += 9;
                      break;
                    case "-":
                      b += 1;
                      break;
                  }
                return b % 10;
              };
              var g = {
                get_representativeColor: function() {
                  return this.representativeColor;
                },
                set_representativeColor: function(a) {
                  return a !== this.representativeColor && (this.representativeColor = a, this._orbit = null), a;
                },
                get_orbit: function() {
                  return this._orbit;
                },
                set_orbit: function(a) {
                  return this._orbit = a, a;
                },
                getIndentifier: function() {
                  return this.name;
                },
                importTrajectory: function(a) {
                },
                saveToXml: function(a) {
                  a._writeStartElement("ReferenceFrame"), a._writeAttributeString("Name", this.name), a._writeAttributeString("Parent", this.parent), a._writeAttributeString("ReferenceFrameType", n.Enums.toXml("ReferenceFrameTypes", this.referenceFrameType)), a._writeAttributeString("Reference", n.Enums.toXml("ReferenceFrames", this.reference)), a._writeAttributeString("ParentsRoationalBase", this.parentsRoationalBase.toString()), a._writeAttributeString("MeanRadius", this.meanRadius.toString()), a._writeAttributeString("Oblateness", this.oblateness.toString()), a._writeAttributeString("Heading", this.heading.toString()), a._writeAttributeString("Pitch", this.pitch.toString()), a._writeAttributeString("Roll", this.roll.toString()), a._writeAttributeString("Scale", this.scale.toString()), a._writeAttributeString("Tilt", this.tilt.toString()), a._writeAttributeString("Translation", this.translation.toString()), this.referenceFrameType || (a._writeAttributeString("Lat", this.lat.toString()), a._writeAttributeString("Lng", this.lng.toString()), a._writeAttributeString("Altitude", this.altitude.toString())), a._writeAttributeString("RotationalPeriod", this.rotationalPeriod.toString()), a._writeAttributeString("ZeroRotationDate", this.zeroRotationDate.toString()), a._writeAttributeString("RepresentativeColor", this.get_representativeColor().save()), a._writeAttributeString("ShowAsPoint", this.showAsPoint.toString()), a._writeAttributeString("ShowOrbitPath", this.showOrbitPath.toString()), a._writeAttributeString("StationKeeping", this.stationKeeping.toString()), this.referenceFrameType === 1 && (a._writeAttributeString("SemiMajorAxis", this.semiMajorAxis.toString()), a._writeAttributeString("SemiMajorAxisScale", n.Enums.toXml("AltUnits", this.semiMajorAxisUnits)), a._writeAttributeString("Eccentricity", this.eccentricity.toString()), a._writeAttributeString("Inclination", this.inclination.toString()), a._writeAttributeString("ArgumentOfPeriapsis", this.argumentOfPeriapsis.toString()), a._writeAttributeString("LongitudeOfAscendingNode", this.longitudeOfAscendingNode.toString()), a._writeAttributeString("MeanAnomolyAtEpoch", this.meanAnomolyAtEpoch.toString()), a._writeAttributeString("MeanDailyMotion", this.meanDailyMotion.toString()), a._writeAttributeString("Epoch", this.epoch.toString())), a._writeEndElement();
                },
                initializeFromXml: function(a) {
                  this.name = a.attributes.getNamedItem("Name").nodeValue, this.parent = a.attributes.getNamedItem("Parent").nodeValue, this.referenceFrameType = n.Enums.parse("ReferenceFrameTypes", a.attributes.getNamedItem("ReferenceFrameType").nodeValue), this.reference = n.Enums.parse("ReferenceFrames", a.attributes.getNamedItem("Reference").nodeValue), this.parentsRoationalBase = t.ss.boolean(a.attributes.getNamedItem("ParentsRoationalBase").nodeValue), this.meanRadius = parseFloat(a.attributes.getNamedItem("MeanRadius").nodeValue), this.oblateness = parseFloat(a.attributes.getNamedItem("Oblateness").nodeValue), this.heading = parseFloat(a.attributes.getNamedItem("Heading").nodeValue), this.pitch = parseFloat(a.attributes.getNamedItem("Pitch").nodeValue), this.roll = parseFloat(a.attributes.getNamedItem("Roll").nodeValue), this.scale = parseFloat(a.attributes.getNamedItem("Scale").nodeValue), this.tilt = parseFloat(a.attributes.getNamedItem("Tilt").nodeValue), this.translation = _.Vector3d.parse(a.attributes.getNamedItem("Translation").nodeValue), this.referenceFrameType || (this.lat = parseFloat(a.attributes.getNamedItem("Lat").nodeValue), this.lng = parseFloat(a.attributes.getNamedItem("Lng").nodeValue), this.altitude = parseFloat(a.attributes.getNamedItem("Altitude").nodeValue)), this.rotationalPeriod = parseFloat(a.attributes.getNamedItem("RotationalPeriod").nodeValue), this.zeroRotationDate = parseFloat(a.attributes.getNamedItem("ZeroRotationDate").nodeValue), this.set_representativeColor(r.Color.load(a.attributes.getNamedItem("RepresentativeColor").nodeValue)), this.showAsPoint = t.ss.boolean(a.attributes.getNamedItem("ShowAsPoint").nodeValue), a.attributes.getNamedItem("StationKeeping") != null && (this.stationKeeping = t.ss.boolean(a.attributes.getNamedItem("StationKeeping").nodeValue)), this.referenceFrameType === 1 && (this.showOrbitPath = t.ss.boolean(a.attributes.getNamedItem("ShowOrbitPath").nodeValue), this.semiMajorAxis = parseFloat(a.attributes.getNamedItem("SemiMajorAxis").nodeValue), this.semiMajorAxisUnits = n.Enums.parse("AltUnits", a.attributes.getNamedItem("SemiMajorAxisScale").nodeValue), this.eccentricity = parseFloat(a.attributes.getNamedItem("Eccentricity").nodeValue), this.inclination = parseFloat(a.attributes.getNamedItem("Inclination").nodeValue), this.argumentOfPeriapsis = parseFloat(a.attributes.getNamedItem("ArgumentOfPeriapsis").nodeValue), this.longitudeOfAscendingNode = parseFloat(a.attributes.getNamedItem("LongitudeOfAscendingNode").nodeValue), this.meanAnomolyAtEpoch = parseFloat(a.attributes.getNamedItem("MeanAnomolyAtEpoch").nodeValue), this.meanDailyMotion = parseFloat(a.attributes.getNamedItem("MeanDailyMotion").nodeValue), this.epoch = parseFloat(a.attributes.getNamedItem("Epoch").nodeValue));
                },
                fromTLE: function(a, b, V) {
                  this.epoch = o.SpaceTimeController._twoLineDateToJulian(a.substr(18, 14)), this.eccentricity = parseFloat("0." + b.substr(26, 7)), this.inclination = parseFloat(b.substr(8, 8)), this.longitudeOfAscendingNode = parseFloat(b.substr(17, 8)), this.argumentOfPeriapsis = parseFloat(b.substr(34, 8));
                  var y = parseFloat(b.substr(52, 11));
                  this.meanAnomolyAtEpoch = parseFloat(b.substr(43, 8)), this.meanDailyMotion = y * 360;
                  var C = 86400 / y / (Math.PI * 2);
                  this.semiMajorAxis = Math.pow(C * C * V, 1 / 3), this.semiMajorAxisUnits = 1;
                },
                toTLE: function() {
                  var a = new t.ss.StringBuilder();
                  a.append("1 99999U 00111AAA "), a.append(o.SpaceTimeController.julianToTwoLineDate(this.epoch)), a.append(" "), a.append(this.semiMajorAxis.toExponential(4)), a.append(" 00000-0 "), a.append(l.toTLEExponential(this.meanDailyMotion, 5)), a.append("  001"), a.append(l.computeTLECheckSum(a.toString())), a.appendLine("");
                  var b = new t.ss.StringBuilder();
                  return b.append("2 99999 "), b.append(l.tleNumberString(this.inclination, 3, 4) + " "), b.append(l.tleNumberString(this.longitudeOfAscendingNode, 3, 4) + " "), b.append((l.tleNumberString(this.eccentricity, 1, 7) + " ").substring(2)), b.append(l.tleNumberString(this.argumentOfPeriapsis, 3, 4) + " "), b.append(l.tleNumberString(this.meanAnomolyAtEpoch, 3, 4) + " "), b.append(l.toTLEExponential(this.meanDailyMotion / 207732, 5)), b.append("00001"), b.append(l.computeTLECheckSum(b.toString())), b.appendLine(""), a.toString() + b.toString();
                },
                get_elements: function() {
                  return this._elements.a = this.semiMajorAxis, this._elements.e = this.eccentricity, this._elements.i = this.inclination, this._elements.w = this.argumentOfPeriapsis, this._elements.omega = this.longitudeOfAscendingNode, this._elements.jdEquinox = this.epoch, this.meanDailyMotion ? this._elements.n = this.meanDailyMotion : this._elements.n = e.ELL.meanMotionFromSemiMajorAxis(this._elements.a), this._elements.t = this.epoch - this.meanAnomolyAtEpoch / this._elements.n, this._elements;
                },
                set_elements: function(a) {
                  return this._elements = a, a;
                },
                computeFrame: function(a) {
                  switch (this.referenceFrameType) {
                    case 1:
                      this._computeOrbital(a);
                      break;
                    case 0:
                      this._computeFixedSherical(a);
                      break;
                    case 2:
                      this._computeFrameTrajectory(a);
                      break;
                  }
                },
                useRotatingParentFrame: function() {
                  switch (this.referenceFrameType) {
                    case 1:
                    case 2:
                    case 3:
                      return !1;
                    default:
                      return !0;
                  }
                },
                _computeFixedRectangular: function(a) {
                },
                _computeFixedSherical: function(a) {
                  this.observingLocation && (this.lat = o.SpaceTimeController.get_location().get_lat(), this.lng = o.SpaceTimeController.get_location().get_lng(), this.altitude = o.SpaceTimeController.get_altitude()), this.worldMatrix = _.Matrix3d.get_identity(), this.worldMatrix.translate(this.translation);
                  var b = 1 / a.get_nominalRadius() * this.scale * this.meanRadius;
                  if (this.worldMatrix.scale(_.Vector3d.create(b, b, b)), this.worldMatrix._multiply(_.Matrix3d.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.worldMatrix._multiply(_.Matrix3d._rotationZ(-90 / 180 * Math.PI)), this.rotationalPeriod) {
                    var V = (o.SpaceTimeController.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
                    this.worldMatrix._multiply(_.Matrix3d._rotationX(-V));
                  }
                  this.worldMatrix.translate(_.Vector3d.create(1 + this.altitude / a.get_nominalRadius(), 0, 0)), this.worldMatrix._multiply(_.Matrix3d._rotationZ(this.lat / 180 * Math.PI)), this.worldMatrix._multiply(_.Matrix3d._rotationY(-(this.lng + 180) / 180 * Math.PI));
                },
                _computeFrameTrajectory: function(a) {
                },
                _computeOrbital: function(a) {
                  var b = this.get_elements(), V = e.ELL.calculateRectangularJD(o.SpaceTimeController.get_jNow(), b);
                  this.meanAnomoly = b.meanAnnomolyOut;
                  var y = e.ELL.calculateRectangular(b, this.meanAnomoly + 1e-3), C = _.Vector3d.subtractVectors(V, y), E = V.copy();
                  E.normalize(), C.normalize(), V.length();
                  var v = 1;
                  switch (this.semiMajorAxisUnits) {
                    case 1:
                      v = 1;
                      break;
                    case 2:
                      v = 1 / 3.2808399;
                      break;
                    case 3:
                      v = 1 / 3.2808399 / 12;
                      break;
                    case 4:
                      v = 1609.344;
                      break;
                    case 5:
                      v = 1e3;
                      break;
                    case 6:
                      v = 149598e3 * 1e3;
                      break;
                    case 7:
                      v = 63239.6717 * 149598e3 * 1e3;
                      break;
                    case 8:
                      v = 206264.806 * 149598e3 * 1e3;
                      break;
                    case 9:
                      v = 206264.806 * 149598e3 * 1e3 * 1e6;
                      break;
                    case 10:
                      v = 1;
                      break;
                  }
                  v *= 1 / a.get_nominalRadius();
                  var m = _.Matrix3d.lookAtLH(_.Vector3d.create(0, 0, 0), C, E);
                  m.invert(), this.worldMatrix = _.Matrix3d.get_identity(), this.worldMatrix.translate(this.translation);
                  var L = 1 / a.get_nominalRadius() * this.scale * this.meanRadius;
                  if (this.worldMatrix.scale(_.Vector3d.create(L, L, L)), this.worldMatrix._multiply(_.Matrix3d.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.rotationalPeriod) {
                    var A = (o.SpaceTimeController.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
                    this.worldMatrix._multiply(_.Matrix3d._rotationX(-A));
                  }
                  V = _.Vector3d.scale(V, v), this.worldMatrix.translate(V), this.stationKeeping && (this.worldMatrix = _.Matrix3d.multiplyMatrix(m, this.worldMatrix));
                }
              };
              (0, n.registerType)("ReferenceFrame", [l, g, null]);
            }
          ),
          /***/
          "./esm/layers/spreadsheet_layer.js": (
            /*!*****************************************!*\
              !*** ./esm/layers/spreadsheet_layer.js ***!
              \*****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                CatalogSpreadSheetLayer: () => (
                  /* binding */
                  N
                ),
                /* harmony export */
                KmlCoordinate: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                KmlLineList: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                PushPin: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                SpreadSheetLayer: () => (
                  /* binding */
                  O
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), o = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), c = i(
                /*! ../graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), l = i(
                /*! ../graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), g = i(
                /*! ../graphics/texture.js */
                "./esm/graphics/texture.js"
              ), a = i(
                /*! ../graphics/tessellator.js */
                "./esm/graphics/tessellator.js"
              ), b = i(
                /*! ../color.js */
                "./esm/color.js"
              ), V = i(
                /*! ../coordinates.js */
                "./esm/coordinates.js"
              ), y = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), C = i(
                /*! ../ui_tools.js */
                "./esm/ui_tools.js"
              ), E = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), v = i(
                /*! ./color_map_container.js */
                "./esm/layers/color_map_container.js"
              ), m = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), L = i(
                /*! ./table.js */
                "./esm/layers/table.js"
              );
              function A() {
                this.lat = 0, this.lng = 0, this.alt = 0;
              }
              var K = {};
              (0, n.registerType)("KmlCoordinate", [A, K, null]);
              function T() {
                this.extrude = !1, this.astronomical = !1, this.meanRadius = 6371e3, this.pointList = [];
              }
              var w = {
                parseWkt: function(S, I, x, P) {
                  for (var d = C.UiTools.split(S, "(,)"), U = t.ss.enumerate(d); U.moveNext(); ) {
                    var F = U.current, X = t.ss.trim(F).split(" ");
                    if (X.length > 1) {
                      var Y = new A();
                      Y.lng = parseFloat(X[0]), this.astronomical && (Y.lng -= 180), Y.lat = parseFloat(X[1]), X.length > 2 && !x ? Y.alt = parseFloat(X[2]) : Y.alt = x, Y.date = P, this.pointList.push(Y);
                    }
                  }
                },
                getCenterPoint: function() {
                  var S = new A();
                  S.lat = 0, S.lng = 0, S.alt = 0;
                  for (var I = t.ss.enumerate(this.pointList); I.moveNext(); ) {
                    var x = I.current;
                    S.lat += x.lat, S.lng += x.lng, S.alt += x.alt;
                  }
                  return S.lat /= this.pointList.length, S.lng /= this.pointList.length, S.alt /= this.pointList.length, S;
                }
              };
              (0, n.registerType)("KmlLineList", [T, w, null]);
              function f() {
              }
              f._pinTextureCache = {}, f._pins = null, f.triggerLoadSprite = function() {
                f._pins == null && (f._pins = g.Texture.fromUrl(E.URLHelpers.singleton.engineAssetUrl("pins.png")));
              }, f.getPushPinTexture = function(S) {
                var I = null;
                if (t.ss.keyExists(f._pinTextureCache, S))
                  return f._pinTextureCache[S];
                try {
                  I = o.tilePrepDevice.createTexture(), o.tilePrepDevice.bindTexture(c.WEBGL.TEXTURE_2D, I);
                  var x = Math.floor(S / 16), P = S % 16, d = document.createElement("canvas");
                  d.height = 32, d.width = 32;
                  var U = d.getContext("2d");
                  U.drawImage(f._pins.imageElement, P * 32, x * 32, 32, 32, 0, 0, 32, 32);
                  var F = d;
                  o.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_WRAP_S, c.WEBGL.CLAMP_TO_EDGE), o.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_WRAP_T, c.WEBGL.CLAMP_TO_EDGE), o.tilePrepDevice.texImage2D(c.WEBGL.TEXTURE_2D, 0, c.WEBGL.RGBA, c.WEBGL.RGBA, c.WEBGL.UNSIGNED_BYTE, F), o.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_MIN_FILTER, c.WEBGL.LINEAR_MIPMAP_NEAREST), o.tilePrepDevice.generateMipmap(c.WEBGL.TEXTURE_2D), o.tilePrepDevice.bindTexture(c.WEBGL.TEXTURE_2D, null), f._pinTextureCache[S] = I;
                } catch {
                }
                return I;
              };
              var R = {};
              (0, n.registerType)("PushPin", [f, R, null]);
              function O() {
                this._dataDirty$1 = !1, this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1, this._table_backcompat$1 = null, this._barChartBitmask$1 = 0, this._barScaleFactor$1 = 20, this._meanRadius$1 = 6371e3, this._table$1 = new L.Table(), this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this.colorMap = 3, this.colorMapperName = "Greys", this._dynamicColorColumnName$1 = "2efc32e3-b9d9-47ff-8036-8cc344c585bd", this.dynamicColor = !1, this.normalizeColorMap = !1, this.normalizeColorMapMin = 0, this.normalizeColorMapMax = 1, this._markerColumn$1 = -1, this.colorMapColumn = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this._normalizeSizeColumnName$1 = "dfe78b4c-f972-4796-b04f-68c5efd4ecb0", this.normalizeSize = !1, this.normalizeSizeClip = !1, this.normalizeSizeMin = 0, this.normalizeSizeMax = 1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, m.Layer.call(this);
              }
              O._circleTexture$1 = null, O._getDatafromFeed$1 = function(S) {
                return "";
              }, O._executeQuery$1 = function(S) {
                return "";
              }, O.parseDate = function(S) {
                var I = t.ss.now();
                try {
                  I = new Date(S);
                } catch {
                  try {
                    return O.execlToDateTime(parseFloat(S));
                  } catch {
                  }
                }
                return I;
              }, O.execlToDateTime = function(S) {
                S > 59 && (S -= 1), S > 73e4 && (S = 73e4);
                var I = new Date(1899, 12, 31);
                return new Date(I.getDate() + t.ss.truncate(S * 24 * 60 * 60 * 1e3));
              }, O.get__circleTexture$1 = function() {
                if (O._circleTexture$1 == null) {
                  var S = E.URLHelpers.singleton.engineAssetUrl("circle.png");
                  O._circleTexture$1 = g.Texture.fromUrl(S);
                }
                return O._circleTexture$1;
              };
              var W = {
                getTypeName: function() {
                  return "TerraViewer.SpreadSheetLayer";
                },
                get_header: function() {
                  return this._table$1.header;
                },
                canCopyToClipboard: function() {
                  return !0;
                },
                copyToClipboard: function() {
                },
                dynamicUpdate: function() {
                  var S = O._getDatafromFeed$1(this.get_dataSourceUrl());
                  return S != null ? (this.updateData(S, !1, !0, !0), this.guessHeaderAssignments(), !0) : !1;
                },
                updateData: function(S, I, x, P) {
                  return this.loadFromString(t.ss.safeCast(S, String), !0, I, x, P), this.computeDateDomainRange(-1, -1), this._dataDirty$1 = !0, this.dirty = !0, !0;
                },
                loadData: function(S, I) {
                  var x = this;
                  this._table$1 = new L.Table();
                  var P = S.getFileBlob(I);
                  this.getStringFromGzipBlob(P, function(d) {
                    x._table$1.loadFromString(d, !1, !0, !0), x._table$1.header.indexOf(x._normalizeSizeColumnName$1) > -1 && x._table$1.removeColumn(x._normalizeSizeColumnName$1), x.computeDateDomainRange(-1, -1), x.get_dynamicData() && x.get_autoUpdate() && x.dynamicUpdate(), x._dataDirty$1 = !0, x.dirty = !0;
                  });
                },
                addFilesToCabinet: function(S) {
                  this._fileName$1 = S.tempDirectory + t.ss.format("{0}\\{1}.txt", S.get_packageID(), this.id.toString()), this._fileName$1.substring(0, this._fileName$1.lastIndexOf("\\"));
                  var I = "";
                  this._table_backcompat$1 == null ? I = this._table$1.save() : I = this._table_backcompat$1.save();
                  var x = new Blob([I]);
                  S.addFile(this._fileName$1, x), m.Layer.prototype.addFilesToCabinet.call(this, S);
                },
                _prepareBackCompatTable$1: function() {
                  if ((this.sizeColumn === -1 || !this.get_normalizeSize()) && (this.colorMapColumn === -1 || !this.get_dynamicColor())) {
                    this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1;
                    return;
                  }
                  if (this._table_backcompat$1 = this._table$1.clone(), this.sizeColumn > -1 && this.get_normalizeSize()) {
                    for (var S = [], I = t.ss.enumerate(this._table_backcompat$1.rows); I.moveNext(); ) {
                      var x = I.current;
                      S.push(this.normalizePointSize(parseFloat(x[this.sizeColumn])).toString());
                    }
                    this._table_backcompat$1.addColumn(this._normalizeSizeColumnName$1, S), this._lastNormalizeSizeColumnIndex$1 = this._table_backcompat$1.header.length - 1;
                  } else
                    this._lastNormalizeSizeColumnIndex$1 = -1;
                  if (this.colorMapColumn > -1 && this.get_dynamicColor()) {
                    for (var P = [], d = t.ss.enumerate(this._table_backcompat$1.rows); d.moveNext(); ) {
                      var x = d.current;
                      P.push(this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(x[this.get_colorMapColumn()]))).toSimpleHex());
                    }
                    this._table_backcompat$1.addColumn(this._dynamicColorColumnName$1, P), this._lastDynamicColorColumnIndex$1 = this._table_backcompat$1.header.length - 1;
                  } else
                    this._lastDynamicColorColumnIndex$1 = -1;
                },
                guessHeaderAssignments: function() {
                  for (var S = 0, I = t.ss.enumerate(this._table$1.header); I.moveNext(); ) {
                    var x = I.current;
                    this._guessHeaderAssignment$1(x, S++);
                  }
                  this._table$1.header.length > 0 && (this.nameColumn = 0);
                },
                guessHeaderAssignmentsFromVoTable: function(S) {
                  var I = S.getDecColumn();
                  I != null && (this.latColumn = I.index, this.astronomical = !0);
                  var x = S.getRAColumn();
                  x != null && (this.lngColumn = x.index, this.astronomical = !0, this.pointScaleType = 4);
                  var P = S.getMagColumn();
                  P != null && (this.sizeColumn = P.index);
                  for (var d = 0, U = t.ss.enumerate(S.column); U.moveNext(); ) {
                    var F = U.current;
                    this._guessHeaderAssignment$1(F.name, d++);
                  }
                  this._table$1.header.length > 0 && (this.nameColumn = 0);
                },
                _guessHeaderAssignment$1: function(S, I) {
                  S = S.toLowerCase(), S.indexOf("lat") > -1 && this.latColumn === -1 && (this.latColumn = I), (S.indexOf("lon") > -1 || S.indexOf("lng") > -1) && this.lngColumn === -1 && (this.lngColumn = I), S.indexOf("dec") > -1 && this.latColumn === -1 && (this.latColumn = I, this.astronomical = !0), (S.indexOf("ra") > -1 || S.indexOf("ascen") > -1) && this.lngColumn === -1 && (this.lngColumn = I, this.astronomical = !0, this.pointScaleType = 4), (S.indexOf("mag") > -1 || S.indexOf("size") > -1) && this.sizeColumn === -1 && (this.sizeColumn = I), (S.indexOf("date") > -1 || S.indexOf("time") > -1 || S.indexOf("dt") > -1 || S.indexOf("tm") > -1) && (S.indexOf("end") > -1 && this.endDateColumn === -1 ? this.endDateColumn = I : this.startDateColumn === -1 && (this.startDateColumn = I)), (S.indexOf("altitude") > -1 || S.indexOf("alt") > -1) && this.altColumn === -1 && (this.altColumn = I, this.set_altType(1), this.set_altUnit(1)), S.indexOf("depth") > -1 && this.altColumn === -1 && (this.altColumn = I, this.set_altType(0), this.set_altUnit(5)), t.ss.startsWith(S, "x") && this.get_xAxisColumn() === -1 && this.set_xAxisColumn(I), t.ss.startsWith(S, "y") && this.get_yAxisColumn() === -1 && this.set_yAxisColumn(I), t.ss.startsWith(S, "z") && this.get_zAxisColumn() === -1 && this.set_zAxisColumn(I), S.indexOf("color") > -1 && this.get_colorMapColumn() === -1 && this.set_colorMapColumn(I), (S.indexOf("geometry") > -1 || S.indexOf("geography") > -1) && this.geometryColumn === -1 && (this.geometryColumn = I);
                },
                computeDateDomainRange: function(S, I) {
                  S === -1 && (S = this.startDateColumn), I === -1 && (I = this.endDateColumn), I === -1 && (I = S), this.set_beginRange(/* @__PURE__ */ new Date("12/31/2100")), this.set_endRange(/* @__PURE__ */ new Date("12/31/1890"));
                  for (var x = t.ss.enumerate(this._table$1.rows); x.moveNext(); ) {
                    var P = x.current;
                    try {
                      if (S > -1) {
                        var d = !0, U = /* @__PURE__ */ new Date("12/31/2100");
                        try {
                          U = new Date(P[S]), U < this.get_beginRange() && this.set_beginRange(U);
                        } catch {
                        }
                        try {
                          var F = /* @__PURE__ */ new Date("12/31/1890");
                          I > -1 && (F = new Date(P[I]), d && F > this.get_endRange() && this.set_endRange(F));
                        } catch {
                        }
                      }
                    } catch {
                    }
                  }
                },
                checkState: function() {
                },
                getMaxValue: function(S) {
                  var I = 0;
                  this._table$1.lock();
                  for (var x = t.ss.enumerate(this._table$1.rows); x.moveNext(); ) {
                    var P = x.current;
                    try {
                      if (S > -1) {
                        var d = !0;
                        try {
                          var U = parseFloat(P[S]);
                          d && U > I && (I = U);
                        } catch {
                        }
                      }
                    } catch {
                    }
                  }
                  return this._table$1.unlock(), I;
                },
                getDomainValues: function(S) {
                  var I = [];
                  this._table$1.lock();
                  for (var x = t.ss.enumerate(this._table$1.rows); x.moveNext(); ) {
                    var P = x.current;
                    try {
                      S > -1 && (I.indexOf(P[S]) >= 0 || I.push(P[S]));
                    } catch {
                    }
                  }
                  return I.sort(), this._table$1.unlock(), I;
                },
                get_barChartBitmask: function() {
                  return this._barChartBitmask$1;
                },
                set_barChartBitmask: function(S) {
                  return this._barChartBitmask$1 = S, S;
                },
                _isPointInFrustum$1: function(S, I) {
                  for (var x = new _.Vector4d(S.x, S.y, S.z, 1), P = 0; P < 6; P++)
                    if (I[P].dot(x) < 0)
                      return !1;
                  return !0;
                },
                getTableDataInView: function() {
                  for (var S = "", I = !0, x = t.ss.enumerate(this.get_header()); x.moveNext(); ) {
                    var P = x.current;
                    I ? I = !1 : S += "	", S += P;
                  }
                  S += `\r
`;
                  for (var d = t.ss.enumerate(this.get__table().rows); d.moveNext(); ) {
                    var U = d.current, F = parseFloat(U[this.get_lngColumn()]), X = parseFloat(U[this.get_latColumn()]), Y = V.Coordinates.geoTo3dDouble(X, F);
                    if (this._isPointInFrustum$1(Y, o.globalRenderContext.get_frustum())) {
                      I = !0;
                      for (var M = t.ss.enumerate(U); M.moveNext(); ) {
                        var P = M.current;
                        I ? I = !1 : S += "	", S += P;
                      }
                      S += `\r
`;
                    }
                  }
                  return S;
                },
                prepVertexBuffer: function(S, I) {
                  this._table$1.lock(), this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList != null && this.triangleList.clear(), this.pointList != null && this.pointList.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.lineList == null && (this.lineList = new l.LineList()), this.pointList == null && (this.pointList = new l.PointList(S)), this.lineList.timeSeries = this.timeSeries, this.lineList2d == null && (this.lineList2d = new l.LineList(), this.lineList2d.set_depthBuffered(!1)), this.lineList.timeSeries = this.timeSeries, this.triangleList == null && (this.triangleList = new l.TriangleList()), this.triangleList2d == null && (this.triangleList2d = new l.TriangleList(), this.triangleList2d.depthBuffered = !1), this.positions.length = 0;
                  var x = 0, P = this.get_color(), d = V.Coordinates.meanObliquityOfEcliptic(y.SpaceTimeController.get_jNow()) / 180 * Math.PI, U = (0, r.layerManagerGetAllMaps)()[this.get_referenceFrame()].frame.meanRadius;
                  U && (this._meanRadius$1 = U);
                  for (var F = new _.Vector3d(), X = 2e-4, Y = b.Colors.get_white(), M = 0, B = 0, D = t.ss.enumerate(this._table$1.rows); D.moveNext(); ) {
                    var k = D.current;
                    try {
                      if (this.geometryColumn > -1 || !this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1 || this.get_coordinatesType() === 1 && this.get_xAxisColumn() > -1 && this.get_yAxisColumn() > -1) {
                        var G = 0, j = 0, ee = 0, Z = 1, z = 0, te = 0, re = this.getScaleFactor(this.get_altUnit(), 1);
                        if (this.altColumn === -1 || this.get_altType() === 3 || this.bufferIsFlat)
                          Z = 1, (this.astronomical & !this.bufferIsFlat) === 1 && (Z = 63239.6717 * 100);
                        else {
                          this.get_altType() || (re = -re), Z = 0;
                          try {
                            Z = parseFloat(k[this.altColumn]);
                          } catch {
                          }
                          this.astronomical ? (re = re / (1e3 * 149598e3), te = Z * re / 206264.806, z = re * Z, Z = re * Z) : this.get_altType() === 2 ? (z = re * Z, Z = re * Z / this._meanRadius$1) : (z = re * Z, Z = 1 + re * Z / this._meanRadius$1);
                        }
                        if (!this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1) {
                          G = parseFloat(k[this.lngColumn]), j = parseFloat(k[this.latColumn]), this.astronomical ? (this.get_raUnits() || (G *= 15), this.bufferIsFlat) : G += 180;
                          var le = V.Coordinates.geoTo3dRad(j, G, Z);
                          this.astronomical && !this.bufferIsFlat && le.rotateX(d), F = le, this.positions.push(F);
                        } else if (this.get_coordinatesType() === 1) {
                          var ae = this.getScaleFactor(this.get_cartesianScale(), this.get_cartesianCustomScale());
                          this.astronomical ? ae /= 1e3 * 149598e3 : ae /= this._meanRadius$1, this.get_zAxisColumn() > -1 && (ee = parseFloat(k[this.get_zAxisColumn()])), G = parseFloat(k[this.get_xAxisColumn()]), j = parseFloat(k[this.get_yAxisColumn()]), this.get_xAxisReverse() && (G = -G), this.get_yAxisReverse() && (j = -j), this.get_zAxisReverse() && (ee = -ee), F = _.Vector3d.create(G * ae, ee * ae, j * ae), this.positions.push(F);
                        }
                        switch (this.get_colorMap()) {
                          case 0:
                            Y = P;
                            break;
                          case 3:
                            this.get_colorMapColumn() > -1 ? this.get_dynamicColor() ? Y = this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(k[this.get_colorMapColumn()]))) : Y = this._parseColor$1(k[this.get_colorMapColumn()], P) : Y = P;
                            break;
                          default:
                            break;
                        }
                        if (Y == null && (Y = b.Colors.get_transparent()), this.sizeColumn > -1)
                          switch (this.pointScaleType) {
                            case 0:
                              X = parseFloat(k[this.sizeColumn]), X = this.normalizePointSize(X);
                              break;
                            case 2:
                              X = parseFloat(k[this.sizeColumn]), X = Math.log(X);
                              break;
                            case 1:
                              try {
                                X = parseFloat(k[this.sizeColumn]), X = this.normalizePointSize(X), X = Math.pow(2, X);
                              } catch {
                                X = 0;
                              }
                              break;
                            case 4:
                              var oe = 0;
                              try {
                                oe = parseFloat(k[this.sizeColumn]), this.bufferIsFlat ? X = 40 / Math.pow(1.6, oe) : (oe = oe - 5 * (e.Util.logN(te, 10) - 1), X = 12e7 / Math.pow(1.6, oe));
                              } catch {
                                X = 0;
                              }
                              break;
                            case 3:
                              X = 1;
                              break;
                            default:
                              break;
                          }
                        else
                          X = 0.2;
                        if (this.get_plotType() === 1 && (X = 1), this.astronomical & !this.bufferIsFlat, this.startDateColumn > -1) {
                          var de = new Date(k[this.startDateColumn]);
                          M = y.SpaceTimeController.utcToJulian(de) - y.SpaceTimeController.utcToJulian(this.baseDate), this.endDateColumn > -1 ? (de = new Date(k[this.endDateColumn]), B = y.SpaceTimeController.utcToJulian(de) - y.SpaceTimeController.utcToJulian(this.baseDate)) : B = M;
                        }
                        this.pointList.addPoint(F, Y, new l.Dates(M, B), X), this.geometryColumn > -1 && this._parseGeometry$1(k[this.geometryColumn], Y, Y, z, new l.Dates(M, B)), x++;
                      }
                    } catch {
                    }
                    this.lines = !1;
                  }
                  return this._table$1.unlock(), this._dataDirty$1 = !1, this.dirty = !1, !1;
                },
                _parseGeometry$1: function(S, I, x, P, d) {
                  S = t.ss.trim(S).toLowerCase();
                  var U = S.indexOf("(");
                  if (!(U < 0) && t.ss.endsWith(S, ")")) {
                    var F = t.ss.trim(S.substring(0, U)), X = S.substr(U), Y = F.split(" "), M = null, B = null;
                    if (Y.length > 0)
                      for (var D = t.ss.enumerate(Y); D.moveNext(); ) {
                        var k = D.current;
                        t.ss.emptyString(M) ? M = k : t.ss.emptyString(B) && (B = k);
                      }
                    switch (M) {
                      case "multipolygon":
                      case "polygon":
                        this._parsePolygon$1(X, B, I, x, P, d);
                        break;
                      case "multilinestring":
                        this._parseLineString$1(X, B, I, P, !1, d);
                        break;
                      case "linestring":
                        this._parseLineString$1(X, B, I, P, !0, d);
                        break;
                      case "geometrycollection":
                        X = X.substring(1, X.length - 2);
                        for (var G = C.UiTools.splitString(X, ","), j = t.ss.enumerate(G); j.moveNext(); ) {
                          var ee = j.current;
                          this._parseGeometry$1(ee, I, x, P, d);
                        }
                        break;
                    }
                  }
                },
                _parsePolygon$1: function(S, I, x, P, d, U) {
                  if (!(!t.ss.startsWith(S, "(") && t.ss.endsWith(S, ")"))) {
                    S = S.substring(1, S.length - 2);
                    for (var F = C.UiTools.splitString(S, ","), X = t.ss.enumerate(F); X.moveNext(); ) {
                      var Y = X.current, M = new T();
                      M.astronomical = this.astronomical, M.meanRadius = this._meanRadius$1, M.parseWkt(Y, I, d, U), d ? this._addPolygon$1(!1, M, 1, P, x, !0, !0, U) : this._addPolygonFlat$1(!1, M, 1, P, x, !0, !0, U);
                    }
                  }
                },
                _parseLineString$1: function(S, I, x, P, d, U) {
                  if (!(!t.ss.startsWith(S, "(") && t.ss.endsWith(S, ")"))) {
                    d || (S = S.substring(1, S.length - 2));
                    for (var F = C.UiTools.splitString(S, ","), X = t.ss.enumerate(F); X.moveNext(); ) {
                      var Y = X.current, M = new T();
                      M.astronomical = this.astronomical, M.meanRadius = this._meanRadius$1, M.parseWkt(Y, I, P, U), this._addPolygon$1(!1, M, 1, b.Colors.get_white(), x, !1, !1, U);
                    }
                  }
                },
                _splitShapes$1: function(S) {
                  for (var I = [], x = 0; x < S.length; )
                    S.substr(x, 1);
                  return I;
                },
                _addPolygon$1: function(S, I, x, P, d, U, F, X) {
                  for (var Y = [], M = [], B = 0; B < I.pointList.length; B++)
                    Y.push(V.Coordinates.geoTo3dRad(I.pointList[B].lat, I.pointList[B].lng, 1 + I.pointList[B].alt / this._meanRadius$1)), M.push(V.Coordinates.geoTo3dRad(I.pointList[B].lat, I.pointList[B].lng, 1));
                  for (var B = 0; B < I.pointList.length - 1; B++)
                    S || (U && this.triangleList.addQuad(Y[B], Y[B + 1], M[B], M[B + 1], P, X), x > 0 && (U ? this.lineList.addLine(Y[B], Y[B + 1], d, X) : this.lineList2d.addLine(Y[B], Y[B + 1], d, X), U && (this.lineList.addLine(M[B], M[B + 1], d, X), this.lineList.addLine(Y[B], M[B], d, X), this.lineList.addLine(Y[B + 1], M[B + 1], d, X))));
                  if (F)
                    for (var D = a.Tessellator.tesselateSimplePoly(Y), B = 0; B < D.length; B += 3)
                      this.triangleList.addTriangle(Y[D[B]], Y[D[B + 1]], Y[D[B + 2]], P, X);
                },
                _addPolygonFlat$1: function(S, I, x, P, d, U, F, X) {
                  for (var Y = [], M = 0; M < I.pointList.length; M++)
                    Y.push(V.Coordinates.geoTo3dRad(I.pointList[M].lat, I.pointList[M].lng, 1 + I.pointList[M].alt / this._meanRadius$1));
                  for (var M = 0; M < I.pointList.length - 1; M++)
                    S || x > 0 && this.lineList2d.addLine(Y[M], Y[M + 1], d, X);
                  if (F)
                    for (var B = a.Tessellator.tesselateSimplePoly(Y), M = 0; M < B.length; M += 3)
                      this.triangleList2d.addSubdividedTriangles(Y[B[M]], Y[B[M + 1]], Y[B[M + 2]], P, X, 2);
                },
                _parseColor$1: function(S, I) {
                  return b.Color.load(S);
                },
                getScaleFactor: function(S, I) {
                  var x = 1;
                  switch (S) {
                    case 1:
                      x = 1;
                      break;
                    case 2:
                      x = 1 * 0.3048;
                      break;
                    case 3:
                      x = 1 / 12 * 0.3048;
                      break;
                    case 4:
                      x = 5280 * 0.3048;
                      break;
                    case 5:
                      x = 1e3;
                      break;
                    case 6:
                      x = 1e3 * 149598e3;
                      break;
                    case 7:
                      x = 1e3 * 149598e3 * 63239.6717;
                      break;
                    case 8:
                      x = 1e3 * 149598e3 * 206264.806;
                      break;
                    case 9:
                      x = 1e3 * 149598e3 * 206264.806 * 1e6;
                      break;
                    case 10:
                      x = I;
                      break;
                  }
                  return x;
                },
                get__table: function() {
                  return this._table$1;
                },
                set__table: function(S) {
                  return this._table$1 = S, S;
                },
                useHeadersFromVoTable: function(S) {
                  for (var I = t.ss.enumerate(S.column); I.moveNext(); ) {
                    var x = I.current;
                    this.get_header().push(x.name);
                  }
                  this.guessHeaderAssignmentsFromVoTable(S), S.getRAColumn() != null && S.getRAColumn().unit.toLowerCase() === "deg" && this.set_raUnits(1);
                },
                loadFromString: function(S, I, x, P, d) {
                  if (I || (this._table$1 = new L.Table()), this._table$1.lock(), this._table$1.loadFromString(S, I, P, d), !I && (this.guessHeaderAssignments(), this.astronomical && this.lngColumn > -1)) {
                    var U = this.getMaxValue(this.lngColumn);
                    U > 24 && this.set_raUnits(1);
                  }
                  x && this.purgeByTime(), this._table$1.unlock();
                },
                purgeByTime: function() {
                  if (!(this.startDateColumn < 0)) {
                    var S = this.startDateColumn;
                    this.endDateColumn > -1 && (S = this.endDateColumn);
                    var I = y.SpaceTimeController.get_now(), x = t.ss.truncate(this.decay) * 24 * 60 * 60 * 1e3;
                    I = new Date(I.getDate() - x);
                    for (var P = this._table$1.rows.length, d = 0; d < P; d++)
                      try {
                        var U = this._table$1.rows[d], F = new Date(U[S]);
                        F < I && (this._table$1.rows.splice(d, 1), P--, d--);
                      } catch {
                      }
                  }
                },
                cleanUp: function() {
                  this.cleanUpBase(), this._table$1.lock(), m.Layer.prototype.cleanUp.call(this), this._table$1.unlock(), this.dirty = !0;
                },
                writeLayerProperties: function(S) {
                  S._writeAttributeString("TimeSeries", this.get_timeSeries().toString()), S._writeAttributeString("BeginRange", e.Util.xmlDate(this.get_beginRange())), S._writeAttributeString("EndRange", e.Util.xmlDate(this.get_endRange())), S._writeAttributeString("Decay", this.get_decay().toString()), S._writeAttributeString("CoordinatesType", n.Enums.toXml("CoordinatesTypes", this.get_coordinatesType())), S._writeAttributeString("LatColumn", this.get_latColumn().toString()), S._writeAttributeString("LngColumn", this.get_lngColumn().toString()), S._writeAttributeString("GeometryColumn", this.get_geometryColumn().toString()), S._writeAttributeString("AltType", n.Enums.toXml("AltTypes", this.get_altType())), S._writeAttributeString("MarkerMix", n.Enums.toXml("MarkerMixes", this.get_markerMix())), S._writeAttributeString("ColorMap", n.Enums.toXml("ColorMaps", this.get_colorMap())), S._writeAttributeString("MarkerColumn", this.get_markerColumn().toString()), S._writeAttributeString("PlotType", n.Enums.toXml("PlotTypes", this.get_plotType())), S._writeAttributeString("MarkerIndex", this.get_markerIndex().toString()), S._writeAttributeString("MarkerScale", n.Enums.toXml("MarkerScales", this.get_markerScale())), S._writeAttributeString("AltUnit", n.Enums.toXml("AltUnits", this.get_altUnit())), S._writeAttributeString("AltColumn", this.get_altColumn().toString()), S._writeAttributeString("StartDateColumn", this.get_startDateColumn().toString()), S._writeAttributeString("EndDateColumn", this.get_endDateColumn().toString()), this._prepareBackCompatTable$1(), this._lastNormalizeSizeColumnIndex$1 > -1 ? (S._writeAttributeString("SizeColumn", this._lastNormalizeSizeColumnIndex$1), S._writeAttributeString("NormalizeSizeColumn", this.sizeColumn.toString())) : S._writeAttributeString("SizeColumn", this.get_sizeColumn().toString()), S._writeAttributeString("NormalizeSize", this.get_normalizeSize().toString()), S._writeAttributeString("NormalizeSizeClip", this.get_normalizeSizeClip().toString()), S._writeAttributeString("NormalizeSizeMin", this.get_normalizeSizeMin().toString()), S._writeAttributeString("NormalizeSizeMax", this.get_normalizeSizeMax().toString()), this._lastDynamicColorColumnIndex$1 > -1 ? (S._writeAttributeString("ColorMapColumn", this._lastDynamicColorColumnIndex$1), S._writeAttributeString("DynamicColorColumn", this.get_colorMapColumn().toString())) : S._writeAttributeString("ColorMapColumn", this.get_colorMapColumn().toString()), S._writeAttributeString("DynamicColor", this.get_dynamicColor().toString()), S._writeAttributeString("ColorMapperName", this.get_colorMapperName()), S._writeAttributeString("NormalizeColorMap", this.get_normalizeColorMap().toString()), S._writeAttributeString("NormalizeColorMapMin", this.get_normalizeColorMapMin().toString()), S._writeAttributeString("NormalizeColorMapMax", this.get_normalizeColorMapMax().toString()), S._writeAttributeString("HyperlinkFormat", this.get_hyperlinkFormat()), S._writeAttributeString("HyperlinkColumn", this.get_hyperlinkColumn().toString()), S._writeAttributeString("ScaleFactor", this.get_scaleFactor().toString()), S._writeAttributeString("PointScaleType", n.Enums.toXml("PointScaleTypes", this.get_pointScaleType())), S._writeAttributeString("ShowFarSide", this.get_showFarSide().toString()), S._writeAttributeString("RaUnits", n.Enums.toXml("RAUnits", this.get_raUnits())), S._writeAttributeString("HoverTextColumn", this.get_nameColumn().toString()), S._writeAttributeString("XAxisColumn", this.get_xAxisColumn().toString()), S._writeAttributeString("XAxisReverse", this.get_xAxisReverse().toString()), S._writeAttributeString("YAxisColumn", this.get_yAxisColumn().toString()), S._writeAttributeString("YAxisReverse", this.get_yAxisReverse().toString()), S._writeAttributeString("ZAxisColumn", this.get_zAxisColumn().toString()), S._writeAttributeString("ZAxisReverse", this.get_zAxisReverse().toString()), S._writeAttributeString("CartesianScale", n.Enums.toXml("AltUnits", this.get_cartesianScale())), S._writeAttributeString("CartesianCustomScale", this.get_cartesianCustomScale().toString()), S._writeAttributeString("DynamicData", this.get_dynamicData().toString()), S._writeAttributeString("AutoUpdate", this.get_autoUpdate().toString()), S._writeAttributeString("DataSourceUrl", this.get_dataSourceUrl());
                },
                get_dynamicData: function() {
                  return this._dynamicData$1;
                },
                set_dynamicData: function(S) {
                  return this._dynamicData$1 = S, S;
                },
                get_autoUpdate: function() {
                  return this._autoUpdate$1;
                },
                set_autoUpdate: function(S) {
                  return this._autoUpdate$1 = S, S;
                },
                get_dataSourceUrl: function() {
                  return this._dataSourceUrl$1;
                },
                set_dataSourceUrl: function(S) {
                  return this._dataSourceUrl$1 = S, S;
                },
                get_timeSeries: function() {
                  return this.timeSeries;
                },
                set_timeSeries: function(S) {
                  return this.timeSeries !== S && (this.version++, this.timeSeries = S), S;
                },
                get_beginRange: function() {
                  return this._beginRange$1;
                },
                set_beginRange: function(S) {
                  return t.ss.compareDates(this._beginRange$1, S) || (this.version++, this._beginRange$1 = S), S;
                },
                get_endRange: function() {
                  return this._endRange$1;
                },
                set_endRange: function(S) {
                  return t.ss.compareDates(this._endRange$1, S) || (this.version++, this._endRange$1 = S), S;
                },
                initializeFromXml: function(S) {
                  this.set_timeSeries(t.ss.boolean(S.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(S.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(S.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(S.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(n.Enums.parse("CoordinatesTypes", S.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(S.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(S.attributes.getNamedItem("LngColumn").nodeValue)), S.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(S.attributes.getNamedItem("GeometryColumn").nodeValue)), this.set_altType(n.Enums.parse("AltTypes", S.attributes.getNamedItem("AltType").nodeValue)), this.set_markerMix(0), this.set_colorMap(n.Enums.parse("ColorMaps", S.attributes.getNamedItem("ColorMap").nodeValue)), this.set_markerColumn(parseInt(S.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(S.attributes.getNamedItem("ColorMapColumn").nodeValue)), this.set_plotType(n.Enums.parse("PlotTypes", S.attributes.getNamedItem("PlotType").nodeValue)), this.set_markerIndex(parseInt(S.attributes.getNamedItem("MarkerIndex").nodeValue)), this.set_markerScale(n.Enums.parse("MarkerScales", S.attributes.getNamedItem("MarkerScale").nodeValue)), this.set_altUnit(n.Enums.parse("AltUnits", S.attributes.getNamedItem("AltUnit").nodeValue)), this.set_altColumn(parseInt(S.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(S.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(S.attributes.getNamedItem("EndDateColumn").nodeValue)), S.attributes.getNamedItem("NormalizeSizeColumn") != null ? this.set_sizeColumn(parseInt(S.attributes.getNamedItem("NormalizeSizeColumn").nodeValue)) : this.set_sizeColumn(parseInt(S.attributes.getNamedItem("SizeColumn").nodeValue)), S.attributes.getNamedItem("NormalizeSize") != null && (this.set_normalizeSize(t.ss.boolean(S.attributes.getNamedItem("NormalizeSize").nodeValue)), this.set_normalizeSizeClip(t.ss.boolean(S.attributes.getNamedItem("NormalizeSizeClip").nodeValue)), this.set_normalizeSizeMin(parseFloat(S.attributes.getNamedItem("NormalizeSizeMin").nodeValue)), this.set_normalizeSizeMax(parseFloat(S.attributes.getNamedItem("NormalizeSizeMax").nodeValue))), S.attributes.getNamedItem("DynamicColorColumn") != null ? this.set_colorMapColumn(parseInt(S.attributes.getNamedItem("DynamicColorColumn").nodeValue)) : this.set_colorMapColumn(parseInt(S.attributes.getNamedItem("ColorMapColumn").nodeValue)), S.attributes.getNamedItem("DynamicColor") != null && (this.set_dynamicColor(t.ss.boolean(S.attributes.getNamedItem("DynamicColor").nodeValue)), this.set_colorMapperName(S.attributes.getNamedItem("ColorMapperName").nodeValue), this.set_normalizeColorMap(t.ss.boolean(S.attributes.getNamedItem("NormalizeColorMap").nodeValue)), this.set_normalizeColorMapMin(parseFloat(S.attributes.getNamedItem("NormalizeColorMapMin").nodeValue)), this.set_normalizeColorMapMax(parseFloat(S.attributes.getNamedItem("NormalizeColorMapMax").nodeValue))), this.set_hyperlinkFormat(S.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(S.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(S.attributes.getNamedItem("ScaleFactor").nodeValue)), this.set_pointScaleType(n.Enums.parse("PointScaleTypes", S.attributes.getNamedItem("PointScaleType").nodeValue)), S.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(t.ss.boolean(S.attributes.getNamedItem("ShowFarSide").nodeValue)), S.attributes.getNamedItem("RaUnits") != null && this.set_raUnits(n.Enums.parse("RAUnits", S.attributes.getNamedItem("RaUnits").nodeValue)), S.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(S.attributes.getNamedItem("HoverTextColumn").nodeValue)), S.attributes.getNamedItem("XAxisColumn") != null && (this.set_xAxisColumn(parseInt(S.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(t.ss.boolean(S.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(S.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(t.ss.boolean(S.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(S.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(t.ss.boolean(S.attributes.getNamedItem("ZAxisReverse").nodeValue)), this.set_cartesianScale(n.Enums.parse("AltUnits", S.attributes.getNamedItem("CartesianScale").nodeValue)), this.set_cartesianCustomScale(parseFloat(S.attributes.getNamedItem("CartesianCustomScale").nodeValue))), S.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(t.ss.boolean(S.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(t.ss.boolean(S.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(S.attributes.getNamedItem("DataSourceUrl").nodeValue));
                },
                get_decay: function() {
                  return this.decay;
                },
                set_decay: function(S) {
                  return this.decay !== S && (this.version++, this.decay = S), S;
                },
                get_coordinatesType: function() {
                  return this._coordinatesType$1;
                },
                set_coordinatesType: function(S) {
                  return this._coordinatesType$1 !== S && (this.version++, this._coordinatesType$1 = S), S;
                },
                get_latColumn: function() {
                  return this.latColumn;
                },
                set_latColumn: function(S) {
                  return this.latColumn !== S && (this.version++, this.latColumn = S), S;
                },
                get_lngColumn: function() {
                  return this.lngColumn;
                },
                set_lngColumn: function(S) {
                  return this.lngColumn !== S && (this.version++, this.lngColumn = S), S;
                },
                get_geometryColumn: function() {
                  return this.geometryColumn;
                },
                set_geometryColumn: function(S) {
                  return this.geometryColumn !== S && (this.version++, this.geometryColumn = S), S;
                },
                get_xAxisColumn: function() {
                  return this._xAxisColumn$1;
                },
                set_xAxisColumn: function(S) {
                  return this._xAxisColumn$1 !== S && (this.version++, this._xAxisColumn$1 = S), S;
                },
                get_yAxisColumn: function() {
                  return this._yAxisColumn$1;
                },
                set_yAxisColumn: function(S) {
                  return this._yAxisColumn$1 !== S && (this.version++, this._yAxisColumn$1 = S), S;
                },
                get_zAxisColumn: function() {
                  return this._zAxisColumn$1;
                },
                set_zAxisColumn: function(S) {
                  return this._zAxisColumn$1 !== S && (this.version++, this._zAxisColumn$1 = S), S;
                },
                get_xAxisReverse: function() {
                  return this._xAxisReverse$1;
                },
                set_xAxisReverse: function(S) {
                  return this._xAxisReverse$1 !== S && (this.version++, this._xAxisReverse$1 = S), S;
                },
                get_yAxisReverse: function() {
                  return this._yAxisReverse$1;
                },
                set_yAxisReverse: function(S) {
                  return this._yAxisReverse$1 !== S && (this.version++, this._yAxisReverse$1 = S), S;
                },
                get_zAxisReverse: function() {
                  return this._zAxisReverse$1;
                },
                set_zAxisReverse: function(S) {
                  return this._zAxisReverse$1 !== S && (this.version++, this._zAxisReverse$1 = S), S;
                },
                get_altType: function() {
                  return this._altType$1;
                },
                set_altType: function(S) {
                  return this._altType$1 !== S && (this.version++, this._altType$1 = S), S;
                },
                get_markerMix: function() {
                  return this._markerMix$1;
                },
                set_markerMix: function(S) {
                  return this._markerMix$1 !== S && (this.version++, this._markerMix$1 = S), S;
                },
                get_raUnits: function() {
                  return this._raUnits$1;
                },
                set_raUnits: function(S) {
                  return this._raUnits$1 !== S && (this.version++, this._raUnits$1 = S), S;
                },
                get_colorMap: function() {
                  return this.colorMap;
                },
                set_colorMap: function(S) {
                  return this.colorMap !== S && (this.version++, this.colorMap = S), S;
                },
                get_colorMapperName: function() {
                  return this.colorMapperName;
                },
                set_colorMapperName: function(S) {
                  if (v.ColorMapContainer.fromNamedColormap(S) == null)
                    throw new Error("Invalid colormap name");
                  return this.version++, this.colorMapperName = S, S;
                },
                get_colorMapper: function() {
                  return v.ColorMapContainer.fromNamedColormap(this.colorMapperName);
                },
                get_dynamicColor: function() {
                  return this.dynamicColor;
                },
                set_dynamicColor: function(S) {
                  return this.version++, this.dynamicColor = S, S;
                },
                get_normalizeColorMap: function() {
                  return this.normalizeColorMap;
                },
                set_normalizeColorMap: function(S) {
                  return this.version++, this.normalizeColorMap = S, S;
                },
                get_normalizeColorMapMin: function() {
                  return this.normalizeColorMapMin;
                },
                set_normalizeColorMapMin: function(S) {
                  return this.version++, this.normalizeColorMapMin = S, S;
                },
                get_normalizeColorMapMax: function() {
                  return this.normalizeColorMapMax;
                },
                set_normalizeColorMapMax: function(S) {
                  return this.version++, this.normalizeColorMapMax = S, S;
                },
                normalizeColorMapValue: function(S) {
                  if (!this.get_normalizeColorMap())
                    return S;
                  var I = (S - this.get_normalizeColorMapMin()) / (this.get_normalizeColorMapMax() - this.get_normalizeColorMapMin());
                  return I < 0 ? I = 0 : I > 1 && (I = 1), I;
                },
                get_markerColumn: function() {
                  return this._markerColumn$1;
                },
                set_markerColumn: function(S) {
                  return this._markerColumn$1 !== S && (this.version++, this._markerColumn$1 = S), S;
                },
                get_colorMapColumn: function() {
                  return this.colorMapColumn;
                },
                set_colorMapColumn: function(S) {
                  return this.colorMapColumn !== S && (this.version++, this.colorMapColumn = S), S;
                },
                get_plotType: function() {
                  return this._plotType$1;
                },
                set_plotType: function(S) {
                  return this._plotType$1 !== S && (this.version++, this._plotType$1 = S), S;
                },
                get_markerIndex: function() {
                  return this._markerIndex$1;
                },
                set_markerIndex: function(S) {
                  return this._markerIndex$1 !== S && (this.version++, this._markerIndex$1 = S), S;
                },
                get_showFarSide: function() {
                  return this._showFarSide$1;
                },
                set_showFarSide: function(S) {
                  return this._showFarSide$1 !== S && (this.version++, this._showFarSide$1 = S), S;
                },
                get_markerScale: function() {
                  return this._markerScale$1;
                },
                set_markerScale: function(S) {
                  return this._markerScale$1 !== S && (this.version++, this._markerScale$1 = S), S;
                },
                get_altUnit: function() {
                  return this._altUnit$1;
                },
                set_altUnit: function(S) {
                  return this._altUnit$1 !== S && (this.version++, this._altUnit$1 = S), S;
                },
                get_cartesianScale: function() {
                  return this._cartesianScale$1;
                },
                set_cartesianScale: function(S) {
                  return this._cartesianScale$1 !== S && (this.version++, this._cartesianScale$1 = S), S;
                },
                get_cartesianCustomScale: function() {
                  return this._cartesianCustomScale$1;
                },
                set_cartesianCustomScale: function(S) {
                  return this._cartesianCustomScale$1 !== S && (this.version++, this._cartesianCustomScale$1 = S), S;
                },
                get_altColumn: function() {
                  return this.altColumn;
                },
                set_altColumn: function(S) {
                  return this.altColumn !== S && (this.version++, this.altColumn = S), S;
                },
                get_startDateColumn: function() {
                  return this.startDateColumn;
                },
                set_startDateColumn: function(S) {
                  return this.startDateColumn !== S && (this.version++, this.startDateColumn = S), S;
                },
                get_endDateColumn: function() {
                  return this.endDateColumn;
                },
                set_endDateColumn: function(S) {
                  return this.endDateColumn !== S && (this.version++, this.endDateColumn = S), S;
                },
                get_sizeColumn: function() {
                  return this.sizeColumn;
                },
                set_sizeColumn: function(S) {
                  return this.sizeColumn !== S && (this.version++, this.sizeColumn = S), S;
                },
                get_normalizeSize: function() {
                  return this.normalizeSize;
                },
                set_normalizeSize: function(S) {
                  return this.normalizeSize !== S && (this.version++, this.normalizeSize = S), S;
                },
                get_normalizeSizeClip: function() {
                  return this.normalizeSizeClip;
                },
                set_normalizeSizeClip: function(S) {
                  return this.normalizeSizeClip !== S && (this.version++, this.normalizeSizeClip = S), S;
                },
                get_normalizeSizeMin: function() {
                  return this.normalizeSizeMin;
                },
                set_normalizeSizeMin: function(S) {
                  return this.normalizeSizeMin !== S && (this.version++, this.normalizeSizeMin = S), S;
                },
                get_normalizeSizeMax: function() {
                  return this.normalizeSizeMax;
                },
                set_normalizeSizeMax: function(S) {
                  return this.normalizeSizeMax !== S && (this.version++, this.normalizeSizeMax = S), S;
                },
                normalizePointSize: function(S) {
                  if (!this.get_normalizeSize())
                    return S;
                  var I = (S - this.get_normalizeSizeMin()) / (this.get_normalizeSizeMax() - this.get_normalizeSizeMin());
                  return this.get_normalizeSizeClip() && (I < 0 ? I = 0 : I > 1 && (I = 1)), I;
                },
                get_nameColumn: function() {
                  return this.nameColumn;
                },
                set_nameColumn: function(S) {
                  return this.nameColumn !== S && (this.version++, this.nameColumn = S), S;
                },
                get_hyperlinkFormat: function() {
                  return this._hyperlinkFormat$1;
                },
                set_hyperlinkFormat: function(S) {
                  return this._hyperlinkFormat$1 !== S && (this.version++, this._hyperlinkFormat$1 = S), S;
                },
                get_hyperlinkColumn: function() {
                  return this._hyperlinkColumn$1;
                },
                set_hyperlinkColumn: function(S) {
                  return this._hyperlinkColumn$1 !== S && (this.version++, this._hyperlinkColumn$1 = S), S;
                },
                get_scaleFactor: function() {
                  return this.scaleFactor;
                },
                set_scaleFactor: function(S) {
                  return this.scaleFactor !== S && (this.version++, this.scaleFactor = S), S;
                },
                get_pointScaleType: function() {
                  return this.pointScaleType;
                },
                set_pointScaleType: function(S) {
                  return this.pointScaleType !== S && (this.version++, this.pointScaleType = S), S;
                },
                draw: function(S, I, x) {
                  var P = S;
                  this.version !== this.lastVersion && this.cleanUp(), this.lastVersion = this.version, this.bufferIsFlat !== x && (this.cleanUp(), this.bufferIsFlat = x), this.dirty && this.prepVertexBuffer(P, I);
                  var d = y.SpaceTimeController.get_jNow() - y.SpaceTimeController.utcToJulian(this.baseDate), U = this.scaleFactor * 3;
                  if (x && this.astronomical && this._markerScale$1 === 1 && (U = this.scaleFactor / (S.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = d, this.triangleList2d.draw(S, I * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = d, this.triangleList.draw(S, I * this.get_opacity(), 1)), this.pointList != null)
                    switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = d, this.pointList.scale = this._markerScale$1 === 1 ? U : -U, this._plotType$1) {
                      case 0:
                        this.pointList.draw(S, I * this.get_opacity(), !1);
                        break;
                      case 2:
                        this.pointList.drawTextured(S, O.get__circleTexture$1().texture2d, I * this.get_opacity());
                        break;
                      case 1:
                        this.pointList.drawTextured(S, f.getPushPinTexture(19), I * this.get_opacity());
                        break;
                      case 3:
                        this.pointList.drawTextured(S, f.getPushPinTexture(35), I * this.get_opacity());
                        break;
                      case 5:
                      case 4:
                        this.pointList.drawTextured(S, f.getPushPinTexture(this._markerIndex$1), I * this.get_opacity());
                        break;
                    }
                  return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = d, this.lineList.drawLines(S, I * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = d, this.lineList2d.drawLines(S, I * this.get_opacity())), !0;
                },
                cleanUpBase: function() {
                  this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
                }
              };
              (0, n.registerType)("SpreadSheetLayer", [O, W, m.Layer]);
              function N() {
                this._addedTiles$2 = {}, O.call(this);
              }
              var $ = {
                addTileRows: function(S, I) {
                  if (!t.ss.keyExists(this._addedTiles$2, S)) {
                    for (var x = t.ss.enumerate(I); x.moveNext(); ) {
                      var P = x.current;
                      this.get__table().rows.push(P);
                    }
                    this.dirty = !0, this._addedTiles$2[S] = !0;
                  }
                },
                removeTileRows: function(S, I) {
                  if (t.ss.keyExists(this._addedTiles$2, S)) {
                    for (var x = t.ss.enumerate(I); x.moveNext(); ) {
                      var P = x.current;
                      t.ss.remove(this.get__table().rows, P);
                    }
                    this.dirty = !0, delete this._addedTiles$2[S];
                  }
                },
                cleanUp: function() {
                  O.prototype.cleanUp.call(this), t.ss.clearKeys(this._addedTiles$2), this.get__table().rows.length = 0;
                }
              };
              (0, n.registerType)("CatalogSpreadSheetLayer", [N, $, O]);
            }
          ),
          /***/
          "./esm/layers/table.js": (
            /*!*****************************!*\
              !*** ./esm/layers/table.js ***!
              \*****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Table: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../util.js */
                "./esm/util.js"
              ), _ = i(
                /*! ../ui_tools.js */
                "./esm/ui_tools.js"
              );
              function r() {
                this.guid = new e.Guid(), this.header = [], this.rows = [], this.delimiter = "	", this.locked = !1;
              }
              var o = {
                lock: function() {
                  this.locked = !0;
                },
                unlock: function() {
                  this.locked = !1;
                },
                save: function() {
                  for (var c = "", l = !0, g = t.ss.enumerate(this.header); g.moveNext(); ) {
                    var a = g.current;
                    l ? l = !1 : c += "	", c += a;
                  }
                  c += `\r
`;
                  for (var b = t.ss.enumerate(this.rows); b.moveNext(); ) {
                    var V = b.current;
                    l = !0;
                    for (var y = t.ss.enumerate(V); y.moveNext(); ) {
                      var a = y.current;
                      l ? l = !1 : c += "	", c += a;
                    }
                    c += `\r
`;
                  }
                  return c;
                },
                loadFromString: function(c, l, g, a) {
                  var b = 0, V = c.split(`\r
`);
                  if (!l || a)
                    if (V.length > 0) {
                      var y = V[0];
                      b++, y.indexOf("	") === -1 && y.indexOf(",") > -1 && (this.delimiter = ","), l || (this.rows.length = 0), this.header = _.UiTools.splitString(y, this.delimiter);
                    } else
                      this.header = [];
                  var C = [];
                  for (g || (C = this.rows); b < V.length; ) {
                    var E = V[b], v = _.UiTools.splitString(E, this.delimiter);
                    if (v.length < 1)
                      break;
                    C.push(v), b++;
                  }
                  g && (this.rows = C);
                },
                clone: function() {
                  for (var c = new r(), l = 0; l < this.header.length; l++)
                    c.header.push(this.header[l]);
                  for (var g = 0; g < this.rows.length; g++) {
                    c.rows.push([]);
                    for (var l = 0; l < this.rows[g].length; l++)
                      c.rows[g].push(this.rows[g][l]);
                  }
                  return c;
                },
                addColumn: function(c, l) {
                  this.header.push(c);
                  for (var g = 0; g < l.length; g++)
                    this.rows[g].push(l[g]);
                },
                removeColumn: function(c) {
                  var l = this.header.indexOf(c);
                  if (l > -1) {
                    this.header.splice(l, 1);
                    for (var g = 0; g < this.rows.length; g++)
                      this.rows[g].splice(l, 1);
                  }
                }
              };
              (0, n.registerType)("Table", [r, o, null]);
            }
          ),
          /***/
          "./esm/layers/time_series_layer.js": (
            /*!*****************************************!*\
              !*** ./esm/layers/time_series_layer.js ***!
              \*****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                AltTypes: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                ColorMaps: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                CoordinatesTypes: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                MarkerMixes: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                MarkerScales: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                PlotTypes: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                RAUnits: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                TimeSeriesLayer: () => (
                  /* binding */
                  V
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), _ = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), r = {
                spherical: 0,
                rectangular: 1,
                orbital: 2
              };
              (0, n.registerType)("CoordinatesTypes", r), (0, n.registerEnum)("CoordinatesTypes", r);
              var o = {
                depth: 0,
                altitude: 1,
                distance: 2,
                seaLevel: 3,
                terrain: 4
              };
              (0, n.registerType)("AltTypes", o), (0, n.registerEnum)("AltTypes", o);
              var c = {
                same_For_All: 0
              };
              (0, n.registerType)("MarkerMixes", c), (0, n.registerEnum)("MarkerMixes", c);
              var l = {
                same_For_All: 0,
                group_by_Values: 2,
                per_Column_Literal: 3
              };
              (0, n.registerType)("ColorMaps", l), (0, n.registerEnum)("ColorMaps", l);
              var g = {
                gaussian: 0,
                point: 1,
                circle: 2,
                square: 3,
                pushPin: 4,
                custom: 5
              };
              (0, n.registerType)("PlotTypes", g), (0, n.registerEnum)("PlotTypes", g);
              var a = {
                screen: 0,
                world: 1
              };
              (0, n.registerType)("MarkerScales", a), (0, n.registerEnum)("MarkerScales", a);
              var b = {
                hours: 0,
                degrees: 1
              };
              (0, n.registerType)("RAUnits", b), (0, n.registerEnum)("RAUnits", b);
              function V() {
                this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, _.Layer.call(this);
              }
              V._circleTexture$1 = null, V.get__circleTexture$1 = function() {
                return V._circleTexture$1;
              };
              var y = {
                get_dynamicData: function() {
                  return this._dynamicData$1;
                },
                set_dynamicData: function(C) {
                  return this._dynamicData$1 = C, C;
                },
                get_autoUpdate: function() {
                  return this._autoUpdate$1;
                },
                set_autoUpdate: function(C) {
                  return this._autoUpdate$1 = C, C;
                },
                get_dataSourceUrl: function() {
                  return this._dataSourceUrl$1;
                },
                set_dataSourceUrl: function(C) {
                  return this._dataSourceUrl$1 = C, C;
                },
                get_timeSeries: function() {
                  return this.timeSeries;
                },
                set_timeSeries: function(C) {
                  return this.timeSeries !== C && (this.version++, this.timeSeries = C), C;
                },
                get_header: function() {
                  return null;
                },
                get_beginRange: function() {
                  return this._beginRange$1;
                },
                set_beginRange: function(C) {
                  return t.ss.compareDates(this._beginRange$1, C) || (this.version++, this._beginRange$1 = C), C;
                },
                get_endRange: function() {
                  return this._endRange$1;
                },
                set_endRange: function(C) {
                  return t.ss.compareDates(this._endRange$1, C) || (this.version++, this._endRange$1 = C), C;
                },
                initializeFromXml: function(C) {
                  switch (this.set_timeSeries(t.ss.boolean(C.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(C.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(C.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(C.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(n.Enums.parse("CoordinatesTypes", C.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(C.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(C.attributes.getNamedItem("LngColumn").nodeValue)), C.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(C.attributes.getNamedItem("GeometryColumn").nodeValue)), C.attributes.getNamedItem("AltType").nodeValue) {
                    case "Depth":
                      this.set_altType(0);
                      break;
                    case "Altitude":
                      this.set_altType(1);
                      break;
                    case "Distance":
                      this.set_altType(2);
                      break;
                    case "SeaLevel":
                      this.set_altType(3);
                      break;
                    case "Terrain":
                      this.set_altType(4);
                      break;
                  }
                  switch (this.set_markerMix(0), C.attributes.getNamedItem("ColorMap").nodeValue) {
                    case "Same_For_All":
                      this.set__colorMap(0);
                      break;
                    case "Group_by_Values":
                      this.set__colorMap(2);
                      break;
                    case "Per_Column_Literal":
                      this.set__colorMap(3);
                      break;
                  }
                  switch (this.set_markerColumn(parseInt(C.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(C.attributes.getNamedItem("ColorMapColumn").nodeValue)), C.attributes.getNamedItem("PlotType").nodeValue) {
                    case "Gaussian":
                      this.set_plotType(0);
                      break;
                    case "Point":
                      this.set_plotType(1);
                      break;
                    case "Circle":
                      this.set_plotType(2);
                      break;
                    case "PushPin":
                      this.set_plotType(4);
                      break;
                  }
                  switch (this.set_markerIndex(parseInt(C.attributes.getNamedItem("MarkerIndex").nodeValue)), C.attributes.getNamedItem("MarkerScale").nodeValue) {
                    case "Screen":
                      this.set_markerScale(0);
                      break;
                    case "World":
                      this.set_markerScale(1);
                      break;
                  }
                  switch (C.attributes.getNamedItem("AltUnit").nodeValue) {
                    case "Meters":
                      this.set_altUnit(1);
                      break;
                    case "Feet":
                      this.set_altUnit(2);
                      break;
                    case "Inches":
                      this.set_altUnit(3);
                      break;
                    case "Miles":
                      this.set_altUnit(4);
                      break;
                    case "Kilometers":
                      this.set_altUnit(5);
                      break;
                    case "AstronomicalUnits":
                      this.set_altUnit(6);
                      break;
                    case "LightYears":
                      this.set_altUnit(7);
                      break;
                    case "Parsecs":
                      this.set_altUnit(8);
                      break;
                    case "MegaParsecs":
                      this.set_altUnit(9);
                      break;
                    case "Custom":
                      this.set_altUnit(10);
                      break;
                  }
                  switch (this.set_altColumn(parseInt(C.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(C.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(C.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(C.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(C.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(C.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(C.attributes.getNamedItem("ScaleFactor").nodeValue)), C.attributes.getNamedItem("PointScaleType").nodeValue) {
                    case "Linear":
                      this.set_pointScaleType(0);
                      break;
                    case "Power":
                      this.set_pointScaleType(1);
                      break;
                    case "Log":
                      this.set_pointScaleType(2);
                      break;
                    case "Constant":
                      this.set_pointScaleType(3);
                      break;
                    case "StellarMagnitude":
                      this.set_pointScaleType(4);
                      break;
                  }
                  if (C.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(t.ss.boolean(C.attributes.getNamedItem("ShowFarSide").nodeValue)), C.attributes.getNamedItem("RaUnits") != null)
                    switch (C.attributes.getNamedItem("RaUnits").nodeValue) {
                      case "Hours":
                        this.set_raUnits(0);
                        break;
                      case "Degrees":
                        this.set_raUnits(1);
                        break;
                    }
                  if (C.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(C.attributes.getNamedItem("HoverTextColumn").nodeValue)), C.attributes.getNamedItem("XAxisColumn") != null) {
                    switch (this.set_xAxisColumn(parseInt(C.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(t.ss.boolean(C.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(C.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(t.ss.boolean(C.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(C.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(t.ss.boolean(C.attributes.getNamedItem("ZAxisReverse").nodeValue)), C.attributes.getNamedItem("CartesianScale").nodeValue) {
                      case "Meters":
                        this.set_cartesianScale(1);
                        break;
                      case "Feet":
                        this.set_cartesianScale(2);
                        break;
                      case "Inches":
                        this.set_cartesianScale(3);
                        break;
                      case "Miles":
                        this.set_cartesianScale(4);
                        break;
                      case "Kilometers":
                        this.set_cartesianScale(5);
                        break;
                      case "AstronomicalUnits":
                        this.set_cartesianScale(6);
                        break;
                      case "LightYears":
                        this.set_cartesianScale(7);
                        break;
                      case "Parsecs":
                        this.set_cartesianScale(8);
                        break;
                      case "MegaParsecs":
                        this.set_cartesianScale(9);
                        break;
                      case "Custom":
                        this.set_cartesianScale(10);
                        break;
                    }
                    this.set_cartesianCustomScale(parseFloat(C.attributes.getNamedItem("CartesianCustomScale").nodeValue));
                  }
                  C.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(t.ss.boolean(C.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(t.ss.boolean(C.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(C.attributes.getNamedItem("DataSourceUrl").nodeValue));
                },
                computeDateDomainRange: function(C, E) {
                },
                getDomainValues: function(C) {
                  return [];
                },
                get_decay: function() {
                  return this.decay;
                },
                set_decay: function(C) {
                  return this.decay !== C && (this.version++, this.decay = C), C;
                },
                get_coordinatesType: function() {
                  return this._coordinatesType$1;
                },
                set_coordinatesType: function(C) {
                  return this._coordinatesType$1 !== C && (this.version++, this._coordinatesType$1 = C), C;
                },
                get_latColumn: function() {
                  return this.latColumn;
                },
                set_latColumn: function(C) {
                  return this.latColumn !== C && (this.version++, this.latColumn = C), C;
                },
                get_lngColumn: function() {
                  return this.lngColumn;
                },
                set_lngColumn: function(C) {
                  return this.lngColumn !== C && (this.version++, this.lngColumn = C), C;
                },
                get_geometryColumn: function() {
                  return this.geometryColumn;
                },
                set_geometryColumn: function(C) {
                  return this.geometryColumn !== C && (this.version++, this.geometryColumn = C), C;
                },
                get_xAxisColumn: function() {
                  return this._xAxisColumn$1;
                },
                set_xAxisColumn: function(C) {
                  return this._xAxisColumn$1 !== C && (this.version++, this._xAxisColumn$1 = C), C;
                },
                get_yAxisColumn: function() {
                  return this._yAxisColumn$1;
                },
                set_yAxisColumn: function(C) {
                  return this._yAxisColumn$1 !== C && (this.version++, this._yAxisColumn$1 = C), C;
                },
                get_zAxisColumn: function() {
                  return this._zAxisColumn$1;
                },
                set_zAxisColumn: function(C) {
                  return this._zAxisColumn$1 !== C && (this.version++, this._zAxisColumn$1 = C), C;
                },
                get_xAxisReverse: function() {
                  return this._xAxisReverse$1;
                },
                set_xAxisReverse: function(C) {
                  return this._xAxisReverse$1 !== C && (this.version++, this._xAxisReverse$1 = C), C;
                },
                get_yAxisReverse: function() {
                  return this._yAxisReverse$1;
                },
                set_yAxisReverse: function(C) {
                  return this._yAxisReverse$1 !== C && (this.version++, this._yAxisReverse$1 = C), C;
                },
                get_zAxisReverse: function() {
                  return this._zAxisReverse$1;
                },
                set_zAxisReverse: function(C) {
                  return this._zAxisReverse$1 !== C && (this.version++, this._zAxisReverse$1 = C), C;
                },
                get_altType: function() {
                  return this._altType$1;
                },
                set_altType: function(C) {
                  return this._altType$1 !== C && (this.version++, this._altType$1 = C), C;
                },
                get_markerMix: function() {
                  return this._markerMix$1;
                },
                set_markerMix: function(C) {
                  return this._markerMix$1 !== C && (this.version++, this._markerMix$1 = C), C;
                },
                get_raUnits: function() {
                  return this._raUnits$1;
                },
                set_raUnits: function(C) {
                  return this._raUnits$1 !== C && (this.version++, this._raUnits$1 = C), C;
                },
                get__colorMap: function() {
                  return this._colorMap$1;
                },
                set__colorMap: function(C) {
                  return this._colorMap$1 !== C && (this.version++, this._colorMap$1 = C), C;
                },
                get_markerColumn: function() {
                  return this._markerColumn$1;
                },
                set_markerColumn: function(C) {
                  return this._markerColumn$1 !== C && (this.version++, this._markerColumn$1 = C), C;
                },
                get_colorMapColumn: function() {
                  return this._colorMapColumn$1;
                },
                set_colorMapColumn: function(C) {
                  return this._colorMapColumn$1 !== C && (this.version++, this._colorMapColumn$1 = C), C;
                },
                get_plotType: function() {
                  return this._plotType$1;
                },
                set_plotType: function(C) {
                  return this._plotType$1 !== C && (this.version++, this._plotType$1 = C), C;
                },
                get_markerIndex: function() {
                  return this._markerIndex$1;
                },
                set_markerIndex: function(C) {
                  return this._markerIndex$1 !== C && (this.version++, this._markerIndex$1 = C), C;
                },
                get_showFarSide: function() {
                  return this._showFarSide$1;
                },
                set_showFarSide: function(C) {
                  return this._showFarSide$1 !== C && (this.version++, this._showFarSide$1 = C), C;
                },
                get_markerScale: function() {
                  return this._markerScale$1;
                },
                set_markerScale: function(C) {
                  return this._markerScale$1 !== C && (this.version++, this._markerScale$1 = C), C;
                },
                get_altUnit: function() {
                  return this._altUnit$1;
                },
                set_altUnit: function(C) {
                  return this._altUnit$1 !== C && (this.version++, this._altUnit$1 = C), C;
                },
                get_cartesianScale: function() {
                  return this._cartesianScale$1;
                },
                set_cartesianScale: function(C) {
                  return this._cartesianScale$1 !== C && (this.version++, this._cartesianScale$1 = C), C;
                },
                get_cartesianCustomScale: function() {
                  return this._cartesianCustomScale$1;
                },
                set_cartesianCustomScale: function(C) {
                  return this._cartesianCustomScale$1 !== C && (this.version++, this._cartesianCustomScale$1 = C), C;
                },
                get_altColumn: function() {
                  return this.altColumn;
                },
                set_altColumn: function(C) {
                  return this.altColumn !== C && (this.version++, this.altColumn = C), C;
                },
                get_startDateColumn: function() {
                  return this.startDateColumn;
                },
                set_startDateColumn: function(C) {
                  return this.startDateColumn !== C && (this.version++, this.startDateColumn = C), C;
                },
                get_endDateColumn: function() {
                  return this.endDateColumn;
                },
                set_endDateColumn: function(C) {
                  return this.endDateColumn !== C && (this.version++, this.endDateColumn = C), C;
                },
                get_sizeColumn: function() {
                  return this.sizeColumn;
                },
                set_sizeColumn: function(C) {
                  return this.sizeColumn !== C && (this.version++, this.sizeColumn = C), C;
                },
                get_nameColumn: function() {
                  return this.nameColumn;
                },
                set_nameColumn: function(C) {
                  return this.nameColumn !== C && (this.version++, this.nameColumn = C), C;
                },
                get_hyperlinkFormat: function() {
                  return this._hyperlinkFormat$1;
                },
                set_hyperlinkFormat: function(C) {
                  return this._hyperlinkFormat$1 !== C && (this.version++, this._hyperlinkFormat$1 = C), C;
                },
                get_hyperlinkColumn: function() {
                  return this._hyperlinkColumn$1;
                },
                set_hyperlinkColumn: function(C) {
                  return this._hyperlinkColumn$1 !== C && (this.version++, this._hyperlinkColumn$1 = C), C;
                },
                get_scaleFactor: function() {
                  return this.scaleFactor;
                },
                set_scaleFactor: function(C) {
                  return this.scaleFactor !== C && (this.version++, this.scaleFactor = C), C;
                },
                get_pointScaleType: function() {
                  return this.pointScaleType;
                },
                set_pointScaleType: function(C) {
                  return this.pointScaleType !== C && (this.version++, this.pointScaleType = C), C;
                },
                prepVertexBuffer: function(C, E) {
                  return !0;
                },
                draw: function(C, E, v) {
                  var m = C;
                  this.version !== this.lastVersion && this.cleanUp(), this.bufferIsFlat !== v && (this.cleanUp(), this.bufferIsFlat = v), this.dirty && this.prepVertexBuffer(m, E);
                  var L = e.SpaceTimeController.get_jNow() - e.SpaceTimeController.utcToJulian(this.baseDate), A = this.scaleFactor;
                  return v && this.astronomical && this._markerScale$1 === 1 && (A = this.scaleFactor / (C.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = L, this.triangleList2d.draw(C, E * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = L, this.triangleList.draw(C, E * this.get_opacity(), 1)), this.pointList != null && (this.pointList.depthBuffered = !1, this.pointList.decay = this.decay, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = L, this.pointList.scale = this._markerScale$1 === 1 ? A : -A, this.pointList.draw(C, E * this.get_opacity(), !1)), this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = L, this.lineList.drawLines(C, E * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = L, this.lineList2d.drawLines(C, E * this.get_opacity())), !0;
                },
                initFromXml: function(C) {
                  _.Layer.prototype.initFromXml.call(this, C);
                },
                cleanUp: function() {
                  this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
                },
                dynamicUpdate: function() {
                  return !1;
                }
              };
              (0, n.registerType)("TimeSeriesLayer", [V, y, _.Layer]);
            }
          ),
          /***/
          "./esm/layers/vo_table.js": (
            /*!********************************!*\
              !*** ./esm/layers/vo_table.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Primitives: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                VoColumn: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                VoRow: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                VoTable: () => (
                  /* binding */
                  c
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), r = i(
                /*! ../web_file.js */
                "./esm/web_file.js"
              ), o = {
                voBoolean: 1,
                voBit: 2,
                voUnsignedByte: 3,
                voShort: 4,
                voInt: 5,
                voLong: 6,
                voChar: 7,
                voUnicodeChar: 8,
                voFloat: 9,
                voDouble: 10,
                voFloatComplex: 11,
                voDoubleComplex: 12,
                voUndefined: 13
              };
              (0, n.registerType)("Primitives", o), (0, n.registerEnum)("Primitives", o);
              function c() {
                this.columns = {}, this.column = [], this.rows = [], this.loadFilename = "", this.sampId = "", this.selectedRow = null, this.error = !1, this.errorText = "";
              }
              c.loadFromUrl = function(y, C) {
                var E = new c();
                return E._onComplete = C, E._webFile = new r.WebFile(_.URLHelpers.singleton.rewrite(y, 1)), E._webFile.onStateChange = t.ss.bind("_loadData", E), E._webFile.send(), E;
              }, c.loadFromString = function(y) {
                var C = new DOMParser(), E = C.parseFromString(y, "text/xml"), v = new c();
                return v.loadFromXML(E), v;
              };
              var l = {
                _loadData: function() {
                  this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && (this.loadFromXML(this._webFile.getXml()), this._onComplete != null && this._onComplete());
                },
                loadFromXML: function(y) {
                  var C = e.Util.selectSingleNode(y, "VOTABLE");
                  if (C != null) {
                    var E = 0;
                    try {
                      var v = e.Util.selectSingleNode(e.Util.selectSingleNode(C, "RESOURCE"), "TABLE");
                      if (v != null)
                        for (var m = t.ss.enumerate(v.childNodes); m.moveNext(); ) {
                          var L = m.current;
                          if (L.nodeName === "FIELD") {
                            var A = new b(L, E++);
                            this.columns[A.name] = A, this.column.push(A);
                          }
                        }
                    } catch {
                      this.error = !0, this.errorText = e.Util.selectSingleNode(C, "DESCRIPTION").text;
                    }
                    try {
                      var K = e.Util.selectSingleNode(e.Util.selectSingleNode(e.Util.selectSingleNode(e.Util.selectSingleNode(C, "RESOURCE"), "TABLE"), "DATA"), "TABLEDATA");
                      if (K != null)
                        for (var T = t.ss.enumerate(K.childNodes); T.moveNext(); ) {
                          var L = T.current;
                          if (L.nodeName === "TR") {
                            var w = new g(this);
                            w.columnData = new Array(t.ss.keyCount(this.columns)), E = 0;
                            for (var f = t.ss.enumerate(L.childNodes); f.moveNext(); ) {
                              var R = f.current;
                              R.nodeName === "TD" && (w.columnData[E++] = t.ss.trim(e.Util.getInnerText(R)));
                            }
                            this.rows.push(w);
                          }
                        }
                    } catch {
                    }
                  }
                },
                save: function(y) {
                  return !0;
                },
                getColumnByUcd: function(y) {
                  for (var C = t.ss.enumerate(t.ss.keys(this.columns)); C.moveNext(); ) {
                    var E = C.current, v = this.columns[E];
                    if (t.ss.replaceString(v.ucd, "_", ".").toLocaleLowerCase().indexOf(y.toLocaleLowerCase()) > -1)
                      return v;
                  }
                  return null;
                },
                getRAColumn: function() {
                  for (var y = t.ss.enumerate(t.ss.keys(this.columns)); y.moveNext(); ) {
                    var C = y.current, E = this.columns[C];
                    if (E.ucd.toLocaleLowerCase().indexOf("pos.eq.ra") > -1 || E.ucd.toLocaleLowerCase().indexOf("pos_eq_ra") > -1)
                      return E;
                  }
                  for (var v = t.ss.enumerate(t.ss.keys(this.columns)); v.moveNext(); ) {
                    var C = v.current, E = this.columns[C];
                    if (E.name.toLocaleLowerCase().indexOf("ra") > -1)
                      return E;
                  }
                  return null;
                },
                getDecColumn: function() {
                  for (var y = t.ss.enumerate(t.ss.keys(this.columns)); y.moveNext(); ) {
                    var C = y.current, E = this.columns[C];
                    if (E.ucd.toLowerCase().indexOf("pos.eq.dec") > -1 || E.ucd.toLowerCase().indexOf("pos_eq_dec") > -1)
                      return E;
                  }
                  for (var v = t.ss.enumerate(t.ss.keys(this.columns)); v.moveNext(); ) {
                    var C = v.current, E = this.columns[C];
                    if (E.name.toLowerCase().indexOf("dec") > -1)
                      return E;
                  }
                  return null;
                },
                getMagColumn: function() {
                  for (var y = t.ss.enumerate(t.ss.keys(this.columns)); y.moveNext(); ) {
                    var C = y.current, E = this.columns[C];
                    if (E.ucd.toLowerCase().indexOf("phot.mag") > -1 || E.ucd.toLowerCase().indexOf("phot_mag") > -1)
                      return E;
                  }
                  return null;
                },
                getDistanceColumn: function() {
                  for (var y = t.ss.enumerate(t.ss.keys(this.columns)); y.moveNext(); ) {
                    var C = y.current, E = this.columns[C];
                    if (E.ucd.toLowerCase().indexOf("pos.distance") > -1 || E.ucd.toLowerCase().indexOf("pos_distance") > -1)
                      return E;
                  }
                  return null;
                },
                toString: function() {
                  for (var y = new t.ss.StringBuilder(), C = !0, E = t.ss.enumerate(t.ss.keys(this.columns)); E.moveNext(); ) {
                    var v = E.current, m = this.columns[v];
                    C ? C = !1 : y.append("	"), y.append(m.name);
                  }
                  y.appendLine("");
                  for (var L = t.ss.enumerate(this.rows); L.moveNext(); ) {
                    var A = L.current;
                    C = !0;
                    for (var K = t.ss.enumerate(A.columnData); K.moveNext(); ) {
                      var m = K.current;
                      C ? C = !1 : y.append("	"), y.append(m.toString());
                    }
                    y.appendLine("");
                  }
                  return y.toString();
                }
              };
              (0, n.registerType)("VoTable", [c, l, null]);
              function g(y) {
                this.selected = !1, this.owner = y;
              }
              var a = {
                getColumnData: function(y) {
                  return this.owner.columns[y] != null ? this.columnData[this.owner.columns[y].index] : null;
                },
                get_item: function(y) {
                  return y < 0 || y >= this.columnData.length ? null : this.columnData[y];
                }
              };
              (0, n.registerType)("VoRow", [g, a, null]);
              function b(y, C) {
                if (this.id = "", this.type = 0, this.precision = 0, this.dimentions = 0, this.sizes = null, this.ucd = "", this.unit = "", this.name = "", this.index = 0, this.index = C, y.attributes.getNamedItem("datatype") != null && (this.type = b.getType(y.attributes.getNamedItem("datatype").nodeValue)), y.attributes.getNamedItem("ucd") != null && (this.ucd = y.attributes.getNamedItem("ucd").nodeValue), y.attributes.getNamedItem("precision") != null)
                  try {
                    this.precision = parseInt(y.attributes.getNamedItem("precision").nodeValue);
                  } catch {
                  }
                if (y.attributes.getNamedItem("ID") != null && (this.id = y.attributes.getNamedItem("ID").nodeValue), y.attributes.getNamedItem("name") != null ? this.name = y.attributes.getNamedItem("name").nodeValue : this.name = this.id, y.attributes.getNamedItem("unit") != null && (this.unit = y.attributes.getNamedItem("unit").nodeValue), y.attributes.getNamedItem("arraysize") != null) {
                  var E = y.attributes.getNamedItem("arraysize").nodeValue.split("x");
                  this.dimentions = E.length, this.sizes = new Array(E.length);
                  for (var v = 0, m = t.ss.enumerate(E); m.moveNext(); ) {
                    var L = m.current;
                    if (!(L.indexOf("*") > -1))
                      this.sizes[v++] = parseInt(L);
                    else {
                      var A = 9999, K = t.ss.replaceString(L, "*", "");
                      K.length > 0 && (A = parseInt(K)), this.sizes[v++] = A;
                    }
                  }
                }
              }
              b.getType = function(y) {
                var C = 13;
                switch (y) {
                  case "boolean":
                    C = 1;
                    break;
                  case "bit":
                    C = 2;
                    break;
                  case "unsignedByte":
                    C = 3;
                    break;
                  case "short":
                    C = 4;
                    break;
                  case "int":
                    C = 5;
                    break;
                  case "long":
                    C = 6;
                    break;
                  case "char":
                    C = 7;
                    break;
                  case "unicodeChar":
                    C = 8;
                    break;
                  case "float":
                    C = 9;
                    break;
                  case "double":
                    C = 10;
                    break;
                  case "floatComplex":
                    C = 11;
                    break;
                  case "doubleComplex":
                    C = 12;
                    break;
                  default:
                    C = 13;
                    break;
                }
                return C;
              };
              var V = {
                toString: function() {
                  return this.name;
                }
              };
              (0, n.registerType)("VoColumn", [b, V, null]);
            }
          ),
          /***/
          "./esm/layers/vo_table_layer.js": (
            /*!**************************************!*\
              !*** ./esm/layers/vo_table_layer.js ***!
              \**************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                VoTableLayer: () => (
                  /* binding */
                  C
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), r = i(
                /*! ../graphics/texture.js */
                "./esm/graphics/texture.js"
              ), o = i(
                /*! ../color.js */
                "./esm/color.js"
              ), c = i(
                /*! ../coordinates.js */
                "./esm/coordinates.js"
              ), l = i(
                /*! ../place.js */
                "./esm/place.js"
              ), g = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), a = i(
                /*! ../url_helpers.js */
                "./esm/url_helpers.js"
              ), b = i(
                /*! ./layer.js */
                "./esm/layers/layer.js"
              ), V = i(
                /*! ./vo_table.js */
                "./esm/layers/vo_table.js"
              ), y = i(
                /*! ./spreadsheet_layer.js */
                "./esm/layers/spreadsheet_layer.js"
              );
              function C() {
                this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 0, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this._filename$1 = "", b.Layer.call(this), this._table$1 = null, this._filename$1 = "", this.set_plotType(2);
              }
              C._circleTexture$1 = null, C.get__circleTexture$1 = function() {
                if (C._circleTexture$1 == null) {
                  var v = a.URLHelpers.singleton.engineAssetUrl("circle.png");
                  C._circleTexture$1 = r.Texture.fromUrl(v);
                }
                return C._circleTexture$1;
              }, C.create = function(v, m) {
                var L = new C();
                return L._table$1 = v, L._filename$1 = v.loadFilename, L.set_lngColumn(v.getRAColumn().index), L.set_latColumn(v.getDecColumn().index), L.sizeColumn = v.getColumnByUcd("phot.mag").index, L.set_plotType(m), L;
              };
              var E = {
                get_dynamicData: function() {
                  return this._dynamicData$1;
                },
                set_dynamicData: function(v) {
                  return this._dynamicData$1 = v, v;
                },
                get_autoUpdate: function() {
                  return this._autoUpdate$1;
                },
                set_autoUpdate: function(v) {
                  return this._autoUpdate$1 = v, v;
                },
                get_dataSourceUrl: function() {
                  return this._dataSourceUrl$1;
                },
                set_dataSourceUrl: function(v) {
                  return this._dataSourceUrl$1 = v, v;
                },
                get_timeSeries: function() {
                  return this.timeSeries;
                },
                set_timeSeries: function(v) {
                  return this.timeSeries !== v && (this.version++, this.timeSeries = v), v;
                },
                get_beginRange: function() {
                  return this._beginRange$1;
                },
                set_beginRange: function(v) {
                  return t.ss.compareDates(this._beginRange$1, v) || (this.version++, this._beginRange$1 = v), v;
                },
                get_endRange: function() {
                  return this._endRange$1;
                },
                set_endRange: function(v) {
                  return t.ss.compareDates(this._endRange$1, v) || (this.version++, this._endRange$1 = v), v;
                },
                initializeFromXml: function(v) {
                  switch (this.set_timeSeries(t.ss.boolean(v.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(v.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(v.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(v.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(n.Enums.parse("CoordinatesTypes", v.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(v.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(v.attributes.getNamedItem("LngColumn").nodeValue)), v.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(v.attributes.getNamedItem("GeometryColumn").nodeValue)), v.attributes.getNamedItem("AltType").nodeValue) {
                    case "Depth":
                      this.set_altType(0);
                      break;
                    case "Altitude":
                      this.set_altType(1);
                      break;
                    case "Distance":
                      this.set_altType(2);
                      break;
                    case "SeaLevel":
                      this.set_altType(3);
                      break;
                    case "Terrain":
                      this.set_altType(4);
                      break;
                  }
                  switch (this.set_markerMix(0), v.attributes.getNamedItem("ColorMap").nodeValue) {
                    case "Same_For_All":
                      this.set__colorMap(0);
                      break;
                    case "Group_by_Values":
                      this.set__colorMap(2);
                      break;
                    case "Per_Column_Literal":
                      this.set__colorMap(3);
                      break;
                  }
                  switch (this.set_markerColumn(parseInt(v.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(v.attributes.getNamedItem("ColorMapColumn").nodeValue)), v.attributes.getNamedItem("PlotType").nodeValue) {
                    case "Gaussian":
                      this.set_plotType(0);
                      break;
                    case "Point":
                      this.set_plotType(1);
                      break;
                    case "Circle":
                      this.set_plotType(2);
                      break;
                    case "PushPin":
                      this.set_plotType(4);
                      break;
                  }
                  switch (this.set_markerIndex(parseInt(v.attributes.getNamedItem("MarkerIndex").nodeValue)), v.attributes.getNamedItem("MarkerScale").nodeValue) {
                    case "Screen":
                      this.set_markerScale(0);
                      break;
                    case "World":
                      this.set_markerScale(1);
                      break;
                  }
                  switch (v.attributes.getNamedItem("AltUnit").nodeValue) {
                    case "Meters":
                      this.set_altUnit(1);
                      break;
                    case "Feet":
                      this.set_altUnit(2);
                      break;
                    case "Inches":
                      this.set_altUnit(3);
                      break;
                    case "Miles":
                      this.set_altUnit(4);
                      break;
                    case "Kilometers":
                      this.set_altUnit(5);
                      break;
                    case "AstronomicalUnits":
                      this.set_altUnit(6);
                      break;
                    case "LightYears":
                      this.set_altUnit(7);
                      break;
                    case "Parsecs":
                      this.set_altUnit(8);
                      break;
                    case "MegaParsecs":
                      this.set_altUnit(9);
                      break;
                    case "Custom":
                      this.set_altUnit(10);
                      break;
                  }
                  switch (this.set_altColumn(parseInt(v.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(v.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(v.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(v.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(v.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(v.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(v.attributes.getNamedItem("ScaleFactor").nodeValue)), v.attributes.getNamedItem("PointScaleType").nodeValue) {
                    case "Linear":
                      this.set_pointScaleType(0);
                      break;
                    case "Power":
                      this.set_pointScaleType(1);
                      break;
                    case "Log":
                      this.set_pointScaleType(2);
                      break;
                    case "Constant":
                      this.set_pointScaleType(3);
                      break;
                    case "StellarMagnitude":
                      this.set_pointScaleType(4);
                      break;
                  }
                  if (v.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(t.ss.boolean(v.attributes.getNamedItem("ShowFarSide").nodeValue)), v.attributes.getNamedItem("RaUnits") != null)
                    switch (v.attributes.getNamedItem("RaUnits").nodeValue) {
                      case "Hours":
                        this.set_raUnits(0);
                        break;
                      case "Degrees":
                        this.set_raUnits(1);
                        break;
                    }
                  if (v.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(v.attributes.getNamedItem("HoverTextColumn").nodeValue)), v.attributes.getNamedItem("XAxisColumn") != null) {
                    switch (this.set_xAxisColumn(parseInt(v.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(t.ss.boolean(v.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(v.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(t.ss.boolean(v.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(v.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(t.ss.boolean(v.attributes.getNamedItem("ZAxisReverse").nodeValue)), v.attributes.getNamedItem("CartesianScale").nodeValue) {
                      case "Meters":
                        this.set_cartesianScale(1);
                        break;
                      case "Feet":
                        this.set_cartesianScale(2);
                        break;
                      case "Inches":
                        this.set_cartesianScale(3);
                        break;
                      case "Miles":
                        this.set_cartesianScale(4);
                        break;
                      case "Kilometers":
                        this.set_cartesianScale(5);
                        break;
                      case "AstronomicalUnits":
                        this.set_cartesianScale(6);
                        break;
                      case "LightYears":
                        this.set_cartesianScale(7);
                        break;
                      case "Parsecs":
                        this.set_cartesianScale(8);
                        break;
                      case "MegaParsecs":
                        this.set_cartesianScale(9);
                        break;
                      case "Custom":
                        this.set_cartesianScale(10);
                        break;
                    }
                    this.set_cartesianCustomScale(parseFloat(v.attributes.getNamedItem("CartesianCustomScale").nodeValue));
                  }
                  v.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(t.ss.boolean(v.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(t.ss.boolean(v.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(v.attributes.getNamedItem("DataSourceUrl").nodeValue));
                },
                get_decay: function() {
                  return this.decay;
                },
                set_decay: function(v) {
                  return this.decay !== v && (this.version++, this.decay = v), v;
                },
                get_coordinatesType: function() {
                  return this._coordinatesType$1;
                },
                set_coordinatesType: function(v) {
                  return this._coordinatesType$1 !== v && (this.version++, this._coordinatesType$1 = v), v;
                },
                get_latColumn: function() {
                  return this.latColumn;
                },
                set_latColumn: function(v) {
                  return this.latColumn !== v && (this.version++, this.latColumn = v), v;
                },
                get_lngColumn: function() {
                  return this.lngColumn;
                },
                set_lngColumn: function(v) {
                  return this.lngColumn !== v && (this.version++, this.lngColumn = v), v;
                },
                get_geometryColumn: function() {
                  return this.geometryColumn;
                },
                set_geometryColumn: function(v) {
                  return this.geometryColumn !== v && (this.version++, this.geometryColumn = v), v;
                },
                get_xAxisColumn: function() {
                  return this._xAxisColumn$1;
                },
                set_xAxisColumn: function(v) {
                  return this._xAxisColumn$1 !== v && (this.version++, this._xAxisColumn$1 = v), v;
                },
                get_yAxisColumn: function() {
                  return this._yAxisColumn$1;
                },
                set_yAxisColumn: function(v) {
                  return this._yAxisColumn$1 !== v && (this.version++, this._yAxisColumn$1 = v), v;
                },
                get_zAxisColumn: function() {
                  return this._zAxisColumn$1;
                },
                set_zAxisColumn: function(v) {
                  return this._zAxisColumn$1 !== v && (this.version++, this._zAxisColumn$1 = v), v;
                },
                get_xAxisReverse: function() {
                  return this._xAxisReverse$1;
                },
                set_xAxisReverse: function(v) {
                  return this._xAxisReverse$1 !== v && (this.version++, this._xAxisReverse$1 = v), v;
                },
                get_yAxisReverse: function() {
                  return this._yAxisReverse$1;
                },
                set_yAxisReverse: function(v) {
                  return this._yAxisReverse$1 !== v && (this.version++, this._yAxisReverse$1 = v), v;
                },
                get_zAxisReverse: function() {
                  return this._zAxisReverse$1;
                },
                set_zAxisReverse: function(v) {
                  return this._zAxisReverse$1 !== v && (this.version++, this._zAxisReverse$1 = v), v;
                },
                get_altType: function() {
                  return this._altType$1;
                },
                set_altType: function(v) {
                  return this._altType$1 !== v && (this.version++, this._altType$1 = v), v;
                },
                get_markerMix: function() {
                  return this._markerMix$1;
                },
                set_markerMix: function(v) {
                  return this._markerMix$1 !== v && (this.version++, this._markerMix$1 = v), v;
                },
                get_raUnits: function() {
                  return this._raUnits$1;
                },
                set_raUnits: function(v) {
                  return this._raUnits$1 !== v && (this.version++, this._raUnits$1 = v), v;
                },
                get__colorMap: function() {
                  return this._colorMap$1;
                },
                set__colorMap: function(v) {
                  return this._colorMap$1 !== v && (this.version++, this._colorMap$1 = v), v;
                },
                get_markerColumn: function() {
                  return this._markerColumn$1;
                },
                set_markerColumn: function(v) {
                  return this._markerColumn$1 !== v && (this.version++, this._markerColumn$1 = v), v;
                },
                get_colorMapColumn: function() {
                  return this._colorMapColumn$1;
                },
                set_colorMapColumn: function(v) {
                  return this._colorMapColumn$1 !== v && (this.version++, this._colorMapColumn$1 = v), v;
                },
                get_plotType: function() {
                  return this._plotType$1;
                },
                set_plotType: function(v) {
                  return this._plotType$1 !== v && (this.version++, this._plotType$1 = v), v;
                },
                get_markerIndex: function() {
                  return this._markerIndex$1;
                },
                set_markerIndex: function(v) {
                  return this._markerIndex$1 !== v && (this.version++, this._markerIndex$1 = v), v;
                },
                get_showFarSide: function() {
                  return this._showFarSide$1;
                },
                set_showFarSide: function(v) {
                  return this._showFarSide$1 !== v && (this.version++, this._showFarSide$1 = v), v;
                },
                get_markerScale: function() {
                  return this._markerScale$1;
                },
                set_markerScale: function(v) {
                  return this._markerScale$1 !== v && (this.version++, this._markerScale$1 = v), v;
                },
                get_altUnit: function() {
                  return this._altUnit$1;
                },
                set_altUnit: function(v) {
                  return this._altUnit$1 !== v && (this.version++, this._altUnit$1 = v), v;
                },
                get_cartesianScale: function() {
                  return this._cartesianScale$1;
                },
                set_cartesianScale: function(v) {
                  return this._cartesianScale$1 !== v && (this.version++, this._cartesianScale$1 = v), v;
                },
                get_cartesianCustomScale: function() {
                  return this._cartesianCustomScale$1;
                },
                set_cartesianCustomScale: function(v) {
                  return this._cartesianCustomScale$1 !== v && (this.version++, this._cartesianCustomScale$1 = v), v;
                },
                get_altColumn: function() {
                  return this.altColumn;
                },
                set_altColumn: function(v) {
                  return this.altColumn !== v && (this.version++, this.altColumn = v), v;
                },
                get_startDateColumn: function() {
                  return this.startDateColumn;
                },
                set_startDateColumn: function(v) {
                  return this.startDateColumn !== v && (this.version++, this.startDateColumn = v), v;
                },
                get_endDateColumn: function() {
                  return this.endDateColumn;
                },
                set_endDateColumn: function(v) {
                  return this.endDateColumn !== v && (this.version++, this.endDateColumn = v), v;
                },
                get_sizeColumn: function() {
                  return this.sizeColumn;
                },
                set_sizeColumn: function(v) {
                  return this.sizeColumn !== v && (this.version++, this.sizeColumn = v), v;
                },
                get_nameColumn: function() {
                  return this.nameColumn;
                },
                set_nameColumn: function(v) {
                  return this.nameColumn !== v && (this.version++, this.nameColumn = v), v;
                },
                get_hyperlinkFormat: function() {
                  return this._hyperlinkFormat$1;
                },
                set_hyperlinkFormat: function(v) {
                  return this._hyperlinkFormat$1 !== v && (this.version++, this._hyperlinkFormat$1 = v), v;
                },
                get_hyperlinkColumn: function() {
                  return this._hyperlinkColumn$1;
                },
                set_hyperlinkColumn: function(v) {
                  return this._hyperlinkColumn$1 !== v && (this.version++, this._hyperlinkColumn$1 = v), v;
                },
                get_scaleFactor: function() {
                  return this.scaleFactor;
                },
                set_scaleFactor: function(v) {
                  return this.scaleFactor !== v && (this.version++, this.scaleFactor = v), v;
                },
                get_pointScaleType: function() {
                  return this.pointScaleType;
                },
                set_pointScaleType: function(v) {
                  return this.pointScaleType !== v && (this.version++, this.pointScaleType = v), v;
                },
                draw: function(v, m, L) {
                  this.bufferIsFlat !== L && (this.cleanUp(), this.bufferIsFlat = L), this.dirty && (this.prepVertexBuffer(v, m), this.dirty = !1);
                  var A = g.SpaceTimeController.get_jNow() - g.SpaceTimeController.utcToJulian(this.baseDate), K = this.scaleFactor;
                  if (L && this.astronomical && this._markerScale$1 === 1 && (K = this.scaleFactor / (v.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = A, this.triangleList2d.draw(v, m * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = A, this.triangleList.draw(v, m * this.get_opacity(), 1)), this.pointList != null)
                    switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = A, this.pointList.scale = this._markerScale$1 === 1 ? K : -K, this._plotType$1) {
                      case 0:
                        this.pointList.draw(v, m * this.get_opacity(), !1);
                        break;
                      case 2:
                        this.pointList.drawTextured(v, C.get__circleTexture$1().texture2d, m * this.get_opacity());
                        break;
                      case 1:
                        this.pointList.drawTextured(v, y.PushPin.getPushPinTexture(19), m * this.get_opacity());
                        break;
                      case 3:
                        this.pointList.drawTextured(v, y.PushPin.getPushPinTexture(35), m * this.get_opacity());
                        break;
                      case 5:
                      case 4:
                        this.pointList.drawTextured(v, y.PushPin.getPushPinTexture(this._markerIndex$1), m * this.get_opacity());
                        break;
                    }
                  return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = A, this.lineList.drawLines(v, m * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = A, this.lineList2d.drawLines(v, m * this.get_opacity())), !0;
                },
                initFromXml: function(v) {
                  b.Layer.prototype.initFromXml.call(this, v);
                },
                cleanUp: function() {
                  this.dirty = !0, this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
                },
                dynamicUpdate: function() {
                  return !1;
                },
                addFilesToCabinet: function(v) {
                  var m = this._filename$1, L = v.tempDirectory + t.ss.format("{0}\\{1}.txt", v.get_packageID(), this.id.toString());
                  m.substring(0, m.lastIndexOf("\\") + 1), L.substring(0, L.lastIndexOf("\\") + 1);
                },
                loadData: function(v, m) {
                  var L = this, A = v.getFileBlob(m), K = new FileReader();
                  K.onloadend = function(T) {
                    var w = t.ss.safeCast(K.result, String);
                    L._table$1 = V.VoTable.loadFromString(w), L.set_lngColumn(L._table$1.getRAColumn().index), L.set_latColumn(L._table$1.getDecColumn().index);
                  }, K.readAsText(A);
                },
                canCopyToClipboard: function() {
                  return !0;
                },
                copyToClipboard: function() {
                },
                findClosest: function(v, m, L, A) {
                  var K = c.Coordinates.geoTo3dDouble(v.get_lat(), v.get_lng()), T;
                  if (L != null) {
                    var w = c.Coordinates.raDecTo3dAu(L.get_RA(), -L.get_dec(), -1);
                    T = e.Vector3d.subtractVectors(K, w), m = T.length();
                  }
                  for (var f = -1, R = 0, O = t.ss.enumerate(this.positions); O.moveNext(); ) {
                    var W = O.current;
                    T = e.Vector3d.subtractVectors(K, W), T.length() < m && (m = T.length(), f = R), R++;
                  }
                  if (f === -1)
                    return L;
                  var N = c.Coordinates.cartesianToSpherical2(this.positions[f]), $ = this._table$1.rows[f].columnData[this.nameColumn].toString();
                  (this.nameColumn === this.startDateColumn || this.nameColumn === this.endDateColumn) && ($ = y.SpreadSheetLayer.parseDate($).toString()), t.ss.emptyString($) && ($ = t.ss.format("RA={0}, Dec={1}", c.Coordinates.formatHMS(N.get_RA()), c.Coordinates.formatDMS(N.get_dec())));
                  for (var S = l.Place.create($, N.get_lat(), N.get_RA(), 268435456, "", 2, -1), I = {}, x = 0; x < t.ss.keyCount(this._table$1.columns); x++) {
                    var P = this._table$1.rows[f].get_item(x).toString();
                    (x === this.startDateColumn || x === this.endDateColumn) && (P = y.SpreadSheetLayer.parseDate(P).toString()), !t.ss.keyExists(I, this._table$1.column[x].name) && !t.ss.emptyString(this._table$1.column[x].name) ? I[this._table$1.column[x].name] = P : I["Column" + x.toString()] = P;
                  }
                  return S.set_tag(I), S;
                },
                prepVertexBuffer: function(v, m) {
                  var L = this._table$1.getColumnByUcd("meta.id");
                  L == null && (L = this._table$1.column[0]);
                  var A = this.isSiapResultSet();
                  this.pointList == null && (this.pointList = new _.PointList(v)), this.lineList2d == null && (this.lineList2d = new _.LineList()), this.lineList2d.clear();
                  var K = this._table$1.getColumnByUcd("phys.area;obs.field");
                  K == null && t.ss.keyExists(this._table$1.columns, "regionSTCS") && (K = this._table$1.columns.regionSTCS), this.get_plotType() ? this.set_markerScale(0) : this.set_markerScale(1);
                  var T = [], w = new _.TimeSeriesPointVertex();
                  this.positions.length = 0;
                  var f = 0, R = o.Color.fromArgb(t.ss.truncate(m * this.get_color().a), this.get_color().r, this.get_color().g, this.get_color().b);
                  this.pointScaleType = 4;
                  for (var O = t.ss.enumerate(this._table$1.rows); O.moveNext(); ) {
                    var W = O.current;
                    try {
                      if (this.lngColumn > -1 && this.latColumn > -1) {
                        var N = parseFloat(W.get_item(this.get_lngColumn()).toString()), $ = parseFloat(W.get_item(this.get_latColumn()).toString()), S = c.Coordinates.geoTo3dDouble($, N);
                        if (w.position = S, this.positions.push(w.position), w.set_color(R), this.sizeColumn > -1)
                          try {
                            if (!this.get_markerScale())
                              w.pointSize = 20;
                            else
                              switch (this.pointScaleType) {
                                case 0:
                                  w.pointSize = parseFloat(W.get_item(this.sizeColumn).toString());
                                  break;
                                case 2:
                                  w.pointSize = Math.log(parseFloat(W.get_item(this.sizeColumn).toString()));
                                  break;
                                case 1:
                                  w.pointSize = Math.pow(2, parseFloat(W.get_item(this.sizeColumn).toString()));
                                  break;
                                case 4:
                                  var I = parseFloat(W.get_item(this.sizeColumn).toString());
                                  w.pointSize = 40 / Math.pow(1.6, I) * 10;
                                  break;
                                case 3:
                                  w.pointSize = 1;
                                  break;
                                default:
                                  break;
                              }
                          } catch {
                            w.pointSize = 0.01;
                          }
                        else
                          this.get_markerScale() ? w.pointSize = Math.pow(2, 1) * 100 : w.pointSize = 20;
                        if (this.startDateColumn > -1) {
                          var x = t.ss.date(W.get_item(this.startDateColumn).toString());
                          w.tu = g.SpaceTimeController.utcToJulian(x), w.tv = 0;
                        }
                        T.push(w), this.pointList.addPoint(w.position, w.color, new _.Dates(w.tu, w.tv), w.pointSize), f++;
                      }
                      A && K != null && this._addSiapStcRow$1(K.name, W, W === this._table$1.selectedRow);
                    } catch {
                    }
                    this.lines = !1;
                  }
                  return A && K != null && this._addSiapStcRow$1(K.name, this._table$1.selectedRow, !0), !0;
                },
                _addSiapStcRow$1: function(v, m, L) {
                  var A = t.ss.replaceString(m.getColumnData(v).toString(), "  ", " "), K = o.Color.fromArgb(120, 255, 255, 255);
                  if (L && (K = o.Colors.get_yellow()), t.ss.startsWith(A, "Polygon J2000")) {
                    for (var T = A.split(" "), w = T.length, f = 0; f < w; )
                      if (T[f] === "Polygon") {
                        f += 2;
                        for (var R = new e.Vector3d(), O = new e.Vector3d(), W = !0, N = f; N < w; N += 2) {
                          if (T[N] === "Polygon") {
                            W = !0;
                            break;
                          } else {
                            var $ = c.Coordinates.parseRA(T[N], !0) * 15 + 180, S = c.Coordinates.parseDec(T[N + 1]), I = c.Coordinates.geoTo3dDouble(S, $);
                            W ? (O = I, W = !1) : this.lineList2d.addLine(R, I, K, new _.Dates(0, 0)), R = I;
                          }
                          f += 2;
                        }
                        w > 4 && this.lineList2d.addLine(O, R, K, new _.Dates(0, 0));
                      }
                  }
                },
                isSiapResultSet: function() {
                  return this._table$1.getColumnByUcd("vox:image.title") != null && this._table$1.getColumnByUcd("VOX:Image.AccessReference") != null;
                },
                get_header: function() {
                  for (var v = new Array(t.ss.keyCount(this._table$1.columns)), m = 0, L = t.ss.enumerate(this._table$1.column); L.moveNext(); ) {
                    var A = L.current;
                    v[m++] = A.name;
                  }
                  return v;
                },
                get_table: function() {
                  return this._table$1;
                },
                set_table: function(v) {
                  return this._table$1 = v, v;
                }
              };
              (0, n.registerType)("VoTableLayer", [C, E, b.Layer]);
            }
          ),
          /***/
          "./esm/layers/wcs_image.js": (
            /*!*********************************!*\
              !*** ./esm/layers/wcs_image.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                WcsImage: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              );
              function n() {
                this.copyright = "", this.creditsUrl = "", this._validWcs = !1, this.keywords = [], this.description = "", this.scaleX = 0, this.scaleY = 0, this.centerX = 0, this.centerY = 0, this.rotation = 0, this.referenceX = 0, this.referenceY = 0, this.sizeX = 0, this.sizeY = 0, this.cd1_1 = 0, this.cd1_2 = 0, this.cd2_1 = 0, this.cd2_2 = 0, this.hasRotation = !1, this.hasSize = !1, this.hasScale = !1, this.hasLocation = !1, this.hasPixel = !1, this.filename = "", this._colorCombine = !1;
              }
              var e = {
                get_copyright: function() {
                  return this.copyright;
                },
                set_copyright: function(_) {
                  return this.copyright = _, _;
                },
                get_creditsUrl: function() {
                  return this.creditsUrl;
                },
                set_creditsUrl: function(_) {
                  return this.creditsUrl = _, _;
                },
                get_validWcs: function() {
                  return this._validWcs;
                },
                set_validWcs: function(_) {
                  return this._validWcs = _, _;
                },
                get_keywords: function() {
                  return this.keywords.length || this.keywords.push("Image File"), this.keywords;
                },
                set_keywords: function(_) {
                  return this.keywords = _, _;
                },
                get_description: function() {
                  return this.description;
                },
                set_description: function(_) {
                  return this.description = _, _;
                },
                get_scaleX: function() {
                  return this.scaleX;
                },
                set_scaleX: function(_) {
                  return this.scaleX = _, _;
                },
                get_scaleY: function() {
                  return this.scaleY;
                },
                set_scaleY: function(_) {
                  return this.scaleY = _, _;
                },
                get_centerX: function() {
                  return this.centerX;
                },
                set_centerX: function(_) {
                  return this.centerX = _, _;
                },
                get_viewCenterX: function() {
                  return this.centerX + (this.get_sizeX() / 2 - this.get_referenceX()) * this.get_scaleX();
                },
                get_centerY: function() {
                  return this.centerY;
                },
                set_centerY: function(_) {
                  return this.centerY = _, _;
                },
                get_viewCenterY: function() {
                  return this.centerY + (this.get_sizeY() / 2 - this.get_referenceY()) * this.get_scaleY();
                },
                get_rotation: function() {
                  return this.rotation;
                },
                set_rotation: function(_) {
                  return this.rotation = _, _;
                },
                get_referenceX: function() {
                  return this.referenceX;
                },
                set_referenceX: function(_) {
                  return this.referenceX = _, _;
                },
                get_referenceY: function() {
                  return this.referenceY;
                },
                set_referenceY: function(_) {
                  return this.referenceY = _, _;
                },
                get_sizeX: function() {
                  return this.sizeX;
                },
                set_sizeX: function(_) {
                  return this.sizeX = _, _;
                },
                get_sizeY: function() {
                  return this.sizeY;
                },
                set_sizeY: function(_) {
                  return this.sizeY = _, _;
                },
                get_cd1_1: function() {
                  return this.cd1_1;
                },
                set_cd1_1: function(_) {
                  return this.cd1_1 = _, _;
                },
                get_cd1_2: function() {
                  return this.cd1_2;
                },
                set_cd1_2: function(_) {
                  return this.cd1_2 = _, _;
                },
                get_cd2_1: function() {
                  return this.cd2_1;
                },
                set_cd2_1: function(_) {
                  return this.cd2_1 = _, _;
                },
                get_cd2_2: function() {
                  return this.cd2_2;
                },
                set_cd2_2: function(_) {
                  return this.cd2_2 = _, _;
                },
                adjustScale: function(_, r) {
                  _ !== this.sizeX && (this.scaleX *= this.sizeX / _, this.referenceX /= this.sizeX / _, this.sizeX = _), r !== this.sizeY && (this.scaleY *= this.sizeY / r, this.referenceY /= this.sizeY / r, this.sizeY = r);
                },
                calculateScaleFromCD: function() {
                  this.scaleX = Math.sqrt(this.cd1_1 * this.cd1_1 + this.cd2_1 * this.cd2_1) * (this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1) < 0 ? -1 : 1, this.scaleY = Math.sqrt(this.cd1_2 * this.cd1_2 + this.cd2_2 * this.cd2_2);
                },
                calculateRotationFromCD: function() {
                  var _ = this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1 < 0 ? -1 : 1, r = Math.atan2(-_ * this.cd1_2, this.cd2_2);
                  this.rotation = r / Math.PI * 180;
                },
                get_filename: function() {
                  return this.filename;
                },
                set_filename: function(_) {
                  return this.filename = _, _;
                },
                get_colorCombine: function() {
                  return this._colorCombine;
                },
                set_colorCombine: function(_) {
                  return this._colorCombine = _, _;
                },
                getBitmap: function() {
                  return null;
                }
              };
              (0, t.registerType)("WcsImage", [n, e, null]);
            }
          ),
          /***/
          "./esm/mercator_tile.js": (
            /*!******************************!*\
              !*** ./esm/mercator_tile.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                MercatorTile: () => (
                  /* binding */
                  l
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), o = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), c = i(
                /*! ./tile.js */
                "./esm/tile.js"
              );
              function l() {
                this._tileDegrees$1 = 0, this._latMin$1 = 0, this._latMax$1 = 0, this._lngMin$1 = 0, this._lngMax$1 = 0, this._subDivisionLevel$1 = 32, c.Tile.call(this);
              }
              l.create = function(a, b, V, y, C) {
                var E = new l();
                return E.parent = C, E.level = a, E.tileX = b, E.tileY = V, E.dataset = y, E.computeBoundingSphere(), E;
              }, l.getCentrePointOffsetAsTileRatio = function(a, b, V) {
                var y = l.absoluteLonToMetersAtZoom(b, V), C = y / 256 - Math.floor(y / 256), E = l.absoluteLatToMetersAtZoom(a, V), v = E / 256 - Math.floor(E / 256);
                return _.Vector2d.create(C, v);
              }, l.relativeMetersToLatAtZoom = function(a, b) {
                var V = l.metersPerPixel2(b), y = a * V;
                return l._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - y / 6378137)));
              }, l.relativeMetersToLonAtZoom = function(a, b) {
                var V = l.metersPerPixel2(b), y = a * V;
                return l._radToDeg$1(y / 6378137);
              }, l.absoluteLatToMetersAtZoom = function(a, b) {
                var V = Math.sin(l._degToRad$1(a)), y = 6378137 / 2 * Math.log((1 + V) / (1 - V)), C = l.metersPerPixel2(b);
                return t.ss.truncate(Math.round(20037508 - y) / C);
              }, l.absoluteMetersToLatAtZoom = function(a, b) {
                var V = l.metersPerPixel2(b), y = 20037508 - a * V;
                return l._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - y / 6378137)));
              }, l.absoluteLonToMetersAtZoom = function(a, b) {
                var V = 6378137 * l._degToRad$1(a), y = l.metersPerPixel2(b);
                return t.ss.truncate((V + 20037508) / y);
              }, l.absoluteMetersToLonAtZoom = function(a, b) {
                var V = l.metersPerPixel2(b), y = a * V - 20037508;
                return l._radToDeg$1(y / 6378137);
              }, l.absoluteLonToMetersAtZoomTile = function(a, b, V) {
                var y = 6378137 * l._degToRad$1(a), C = l.metersPerPixel2(b);
                return t.ss.truncate((y + 20037508) / C);
              }, l.absoluteLatToMetersAtZoomTile = function(a, b, V) {
                var y = Math.sin(l._degToRad$1(a)), C = 6378137 / 2 * Math.log((1 + y) / (1 - y)), E = l.metersPerPixel2(b);
                return t.ss.truncate(Math.round(20037508 - C) / E);
              }, l.absoluteMetersToLonAtZoomByTileY = function(a, b, V) {
                var y = l.metersPerPixel2(b), C = a * y - 20037508;
                return l._radToDeg$1(C / 6378137);
              }, l._degToRad$1 = function(a) {
                return a * Math.PI / 180;
              }, l.metersPerPixel2 = function(a) {
                return 156543 / (1 << a);
              }, l._radToDeg$1 = function(a) {
                return a * 180 / Math.PI;
              };
              var g = {
                computeBoundingSphere: function() {
                  this._tileDegrees$1 = 360 / Math.pow(2, this.level), this._latMin$1 = l.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = l.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * this._tileDegrees$1 - 180, this._lngMax$1 = (this.tileX + 1) * this._tileDegrees$1 - 180;
                  var a = (this._latMin$1 + this._latMax$1) / 2, b = (this._lngMin$1 + this._lngMax$1) / 2;
                  this.sphereCenter = this.geoTo3d(a, b, !1), this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1), this.tileY || (this.topLeft = _.Vector3d.create(0, 1, 0), this.topRight = _.Vector3d.create(0, 1, 0)), this.tileY === Math.pow(2, this.level) - 1 && (this.bottomRight = _.Vector3d.create(0, -1, 0), this.bottomLeft = _.Vector3d.create(0, -1, 0));
                  var V = this.topLeft;
                  V.subtract(this.sphereCenter), this.sphereRadius = V.length(), V = this.bottomRight, V.subtract(this.sphereCenter);
                  var y = V.length();
                  this.sphereRadius < y && (this.sphereRadius = y), this._tileDegrees$1 = Math.abs(this._latMax$1 - this._latMin$1);
                },
                isPointInTile: function(a, b) {
                  return !(!this.demReady || this.demData == null || a < Math.min(this._latMin$1, this._latMax$1) || a > Math.max(this._latMax$1, this._latMin$1) || b < Math.min(this._lngMin$1, this._lngMax$1) || b > Math.max(this._lngMin$1, this._lngMax$1));
                },
                getSurfacePointAltitude: function(a, b, V) {
                  if (this.level < c.Tile.lastDeepestLevel)
                    for (var y = t.ss.enumerate(this.children); y.moveNext(); ) {
                      var C = y.current;
                      if (C != null && C.isPointInTile(a, b)) {
                        var E = C.getSurfacePointAltitude(a, b, V);
                        if (E)
                          return E;
                        break;
                      }
                    }
                  var v = this._getAltitudeAtLatLng$1(a, b, V ? 1 : this.get__demScaleFactor());
                  return v;
                },
                _getAltitudeAtLatLng$1: function(a, b, V) {
                  var y = Math.abs(this._latMax$1 - this._latMin$1), C = Math.abs(this._lngMax$1 - this._lngMin$1), E = (a - Math.min(this._latMax$1, this._latMin$1)) / y * 32, v = (b - Math.min(this._lngMax$1, this._lngMin$1)) / C * 32, m = Math.min(31, t.ss.truncate(E)), L = Math.min(31, t.ss.truncate(v)), A = v - L, K = E - m, T = this.demData[m * 33 + L], w = this.demData[m * 33 + (L + 1)], f = this.demData[(m + 1) * 33 + L], R = this.demData[(m + 1) * 33 + (L + 1)], O = T * (1 - A) + A * w, W = f * (1 - A) + A * R, N = O * (1 - K) + K * W;
                  return N / V;
                },
                createGeometry: function(a) {
                  if (c.Tile.prototype.createGeometry.call(this, a), this.geometryCreated)
                    return !0;
                  this.geometryCreated = !0, e.tileUvMultiple == 256 && (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (6 - this.level) * 2));
                  for (var b = 0; b < 4; b++)
                    this._renderTriangleLists[b] = [];
                  var V, y, C = 0, E = 360 / Math.pow(2, this.level);
                  this._latMin$1 = l.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = l.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * E - 180, this._lngMax$1 = (this.tileX + 1) * E - 180;
                  var v = l.absoluteMetersToLatAtZoom((this.tileY * 2 + 1) * 256, this.level + 1);
                  this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1);
                  var m = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
                  E = this._lngMax$1 - this._lngMin$1, E / this._subDivisionLevel$1;
                  var L, A, K = 1 / this._subDivisionLevel$1, T = this._latMax$1 - v;
                  for (A = 0; A < this._subDivisionLevel$1 / 2; A++)
                    for (A !== this._subDivisionLevel$1 / 2 ? V = this._latMax$1 - 2 * K * T * A : V = v, L = 0; L <= this._subDivisionLevel$1; L++)
                      L !== this._subDivisionLevel$1 ? y = this._lngMin$1 + K * E * L : y = this._lngMax$1, C = A * (this._subDivisionLevel$1 + 1) + L, m[C] = new _.PositionTexture(), m[C].position = this.geoTo3dWithAlt(V, y, !1, !0), m[C].tu = L * K * e.tileUvMultiple, m[C].tv = (l.absoluteLatToMetersAtZoom(V, this.level) - this.tileY * 256) / 256 * e.tileUvMultiple, this.demIndex++;
                  for (T = this._latMin$1 - v, A = this._subDivisionLevel$1 / 2; A <= this._subDivisionLevel$1; A++)
                    for (A !== this._subDivisionLevel$1 ? V = v + 2 * K * T * (A - this._subDivisionLevel$1 / 2) : V = this._latMin$1, L = 0; L <= this._subDivisionLevel$1; L++)
                      L !== this._subDivisionLevel$1 ? y = this._lngMin$1 + K * E * L : y = this._lngMax$1, C = A * (this._subDivisionLevel$1 + 1) + L, m[C] = new _.PositionTexture(), m[C].position = this.geoTo3dWithAlt(V, y, !1, !0), m[C].tu = L * K * e.tileUvMultiple, m[C].tv = (l.absoluteLatToMetersAtZoom(V, this.level) - this.tileY * 256) / 256 * e.tileUvMultiple, this.demIndex++;
                  if (!this.tileY)
                    for (A = this._subDivisionLevel$1, L = 0; L <= this._subDivisionLevel$1; L++)
                      C = A * (this._subDivisionLevel$1 + 1) + L, m[C].position = _.Vector3d.create(0, 1, 0);
                  if (this.tileY === Math.pow(2, this.level) - 1)
                    for (A = 0, L = 0; L <= this._subDivisionLevel$1; L++)
                      C = A * (this._subDivisionLevel$1 + 1) + L, m[C].position = _.Vector3d.create(0, -1, 0);
                  this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
                  var w = this._subDivisionLevel$1 / 2, f = 0;
                  if (a.gl == null)
                    for (var R = 0; R < 2; R++)
                      for (var O = 0; O < 2; O++) {
                        for (C = 0, A = w * R; A < w * (R + 1); A++)
                          for (L = w * O; L < w * (O + 1); L++) {
                            var W, N, $;
                            W = m[A * (this._subDivisionLevel$1 + 1) + L], N = m[(A + 1) * (this._subDivisionLevel$1 + 1) + L], $ = m[A * (this._subDivisionLevel$1 + 1) + (L + 1)];
                            var S = o.RenderTriangle.create(W, N, $, this.texture, this.level);
                            this._renderTriangleLists[f].push(S), W = m[A * (this._subDivisionLevel$1 + 1) + (L + 1)], N = m[(A + 1) * (this._subDivisionLevel$1 + 1) + L], $ = m[(A + 1) * (this._subDivisionLevel$1 + 1) + (L + 1)], S = o.RenderTriangle.create(W, N, $, this.texture, this.level), this._renderTriangleLists[f].push(S);
                          }
                        f++;
                      }
                  else {
                    this._vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                    var I = new Float32Array(m.length * 5), x = I;
                    C = 0;
                    for (var P = t.ss.enumerate(m); P.moveNext(); ) {
                      var d = P.current;
                      C = this.addVertex(x, C, d);
                    }
                    e.tilePrepDevice.bufferData(r.WEBGL.ARRAY_BUFFER, I, r.WEBGL.STATIC_DRAW);
                    for (var R = 0; R < 2; R++)
                      for (var O = 0; O < 2; O++) {
                        var U = new Uint16Array(this.triangleCount * 3), F = U;
                        for (C = 0, A = w * R; A < w * (R + 1); A++)
                          for (L = w * O; L < w * (O + 1); L++)
                            F[C++] = A * (this._subDivisionLevel$1 + 1) + L, F[C++] = (A + 1) * (this._subDivisionLevel$1 + 1) + L, F[C++] = A * (this._subDivisionLevel$1 + 1) + (L + 1), F[C++] = A * (this._subDivisionLevel$1 + 1) + (L + 1), F[C++] = (A + 1) * (this._subDivisionLevel$1 + 1) + L, F[C++] = (A + 1) * (this._subDivisionLevel$1 + 1) + (L + 1);
                        this._indexBuffers[f] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[f]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, U, r.WEBGL.STATIC_DRAW), f++;
                      }
                  }
                  return !0;
                },
                _getDemSample$1: function(a, b) {
                  return this.demData[(32 - b) * 33 + a];
                },
                createDemFromParent: function() {
                  var a = t.ss.safeCast(this.parent, l);
                  if (a == null || a.demData == null)
                    return !1;
                  var b = this.tileX % 2 === 1 ? 16 : 0, V = this.tileY % 2 === 1 ? 16 : 0;
                  this.demData = new Array(this.demSize);
                  for (var y = 0; y < 33; y += 2)
                    for (var C = !0, E = 0; E < 33; E++)
                      C ? this.demData[(32 - y) * 33 + E] = a._getDemSample$1(E / 2 + b, y / 2 + V) : this.demData[(32 - y) * 33 + E] = (a._getDemSample$1(E / 2 + b, y / 2 + V) + a._getDemSample$1(E / 2 + b + 1, y / 2 + V)) / 2, C = !C;
                  for (var y = 1; y < 33; y += 2)
                    for (var E = 0; E < 33; E++)
                      this.demData[(32 - y) * 33 + E] = (this._getDemSample$1(E, y - 1) + this._getDemSample$1(E, y + 1)) / 2;
                  for (var v = t.ss.enumerate(this.demData); v.moveNext(); ) {
                    var m = v.current;
                    this.demAverage += m;
                  }
                  return this.demAverage /= this.demData.length, this.demReady = !0, !0;
                }
              };
              (0, n.registerType)("MercatorTile", [l, g, c.Tile]);
            }
          ),
          /***/
          "./esm/minor_planets.js": (
            /*!******************************!*\
              !*** ./esm/minor_planets.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                MinorPlanets: () => (
                  /* binding */
                  m
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./astrocalc/elliptical.js */
                "./esm/astrocalc/elliptical.js"
              ), r = i(
                /*! ./graphics/texture.js */
                "./esm/graphics/texture.js"
              ), o = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), c = i(
                /*! ./graphics/gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), l = i(
                /*! ./graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), g = i(
                /*! ./blend_state.js */
                "./esm/blend_state.js"
              ), a = i(
                /*! ./color.js */
                "./esm/color.js"
              ), b = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), V = i(
                /*! ./kepler_vertex.js */
                "./esm/kepler_vertex.js"
              ), y = i(
                /*! ./space_time_controller.js */
                "./esm/space_time_controller.js"
              ), C = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), E = i(
                /*! ./utilities/binary_reader.js */
                "./esm/utilities/binary_reader.js"
              ), v = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              );
              function m() {
              }
              m.mpcList = [], m._initBegun = !1, m._mpcBlendStates = new Array(7), m.starTexture = null, m._mpcVertexBuffer = null, m._mpcCount = 0, m.getMpcFile = function(A) {
                m._webMpcFile = new v.WebFile(A), m._webMpcFile.responseType = "blob", m._webMpcFile.onStateChange = m.starFileStateChange, m._webMpcFile.send();
              }, m.starFileStateChange = function() {
                if (m._webMpcFile.get_state() === 2)
                  alert(m._webMpcFile.get_message());
                else if (m._webMpcFile.get_state() === 1) {
                  var A = m._webMpcFile.getBlob(), K = new FileReader();
                  K.onloadend = function(T) {
                    m._readFromBin(new E.BinaryReader(new Uint8Array(K.result))), m.initMPCVertexBuffer();
                  }, K.readAsArrayBuffer(A);
                }
              }, m._readFromBin = function(A) {
                m.mpcList = [];
                var K = A.get_length(), T;
                try {
                  for (; A.get_position() < K; )
                    T = _.EOE._create(A), m.mpcList.push(T);
                } catch {
                }
                A.close();
              }, m.drawMPC3D = function(A, K, T) {
                var w = A.viewCamera.zoom, f = (Math.log(Math.max(1, w)) / Math.log(4) - 15.5) * 90, R = Math.min(255, Math.max(0, t.ss.truncate(f)));
                if (!(R > 254)) {
                  if (m._mpcVertexBuffer == null) {
                    m.starTexture == null && (m.starTexture = r.Texture.fromUrl(C.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png")));
                    for (var O = 0; O < 7; O++)
                      m._mpcBlendStates[O] = g.BlendState.create(!1, 1e3);
                    m._initBegun || (m._startInit(), m._initBegun = !0);
                    return;
                  }
                  var W = e.Matrix3d.translation(e.Vector3d.negate(T)), N = e.Matrix3d.multiplyMatrix(A.get_world(), W), $ = e.Matrix3d.multiplyMatrix(N, A.get_view());
                  if (e.Vector3d._transformCoordinate(A.cameraPosition, e.Matrix3d.invertMatrix(A.get_world())), m._mpcVertexBuffer != null)
                    for (var O = 0; O < 7; O++)
                      m._mpcBlendStates[O].set_targetState(!0), m._mpcBlendStates[O].get_state() && (l.KeplerPointSpriteShader.use(A, $, m._mpcVertexBuffer[O].vertexBuffer, m.starTexture.texture2d, a.Colors.get_white(), K * m._mpcBlendStates[O].get_opacity(), !1, y.SpaceTimeController.get_jNow() - V.KeplerVertex.baseDate, 0, A.cameraPosition, 200, 0.1), A.gl.drawArrays(o.WEBGL.POINTS, 0, m._mpcVertexBuffer[O].count));
                }
              }, m._startInit = function() {
                b.freestandingMode || m.getMpcFile(C.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=mpcbin"));
              }, m.initMPCVertexBuffer = function() {
                try {
                  if (m._mpcVertexBuffer == null) {
                    var A = new Array(7);
                    m._mpcCount = m.mpcList.length;
                    for (var K = new Array(7), T = 0; T < 7; T++)
                      K[T] = [];
                    for (var w = t.ss.enumerate(m.mpcList); w.moveNext(); ) {
                      var f = w.current, R = 0;
                      f.a < 2.5 ? R = 0 : f.a < 2.83 ? R = 1 : f.a < 2.96 ? R = 2 : f.a < 3.3 ? R = 3 : f.a < 5 ? R = 4 : f.a < 10 ? R = 5 : R = 6;
                      var O = new V.KeplerVertex();
                      O.fill(f), K[R].push(O);
                    }
                    for (var T = 0; T < 7; T++)
                      A[T] = c.KeplerVertexBuffer.create(K[T]), A[T].unlock();
                    m._mpcVertexBuffer = A;
                  }
                } finally {
                }
              };
              var L = {};
              (0, n.registerType)("MinorPlanets", [m, L, null]);
            }
          ),
          /***/
          "./esm/place.js": (
            /*!**********************!*\
              !*** ./esm/place.js ***!
              \**********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Classification: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                Place: () => (
                  /* binding */
                  C
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), r = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), o = i(
                /*! ./camera_parameters.js */
                "./esm/camera_parameters.js"
              ), c = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), l = i(
                /*! ./ui_tools.js */
                "./esm/ui_tools.js"
              ), g = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), a = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), b = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), V = i(
                /*! ./planets.js */
                "./esm/planets.js"
              ), y = {
                star: 1,
                supernova: 2,
                blackHole: 4,
                neutronStar: 8,
                doubleStar: 16,
                multipleStars: 32,
                asterism: 64,
                constellation: 128,
                openCluster: 256,
                globularCluster: 512,
                nebulousCluster: 1024,
                nebula: 2048,
                emissionNebula: 4096,
                planetaryNebula: 8192,
                reflectionNebula: 16384,
                darkNebula: 32768,
                giantMolecularCloud: 65536,
                supernovaRemnant: 131072,
                interstellarDust: 262144,
                quasar: 524288,
                galaxy: 1048576,
                spiralGalaxy: 2097152,
                irregularGalaxy: 4194304,
                ellipticalGalaxy: 8388608,
                knot: 16777216,
                plateDefect: 33554432,
                clusterOfGalaxies: 67108864,
                otherNGC: 134217728,
                unidentified: 268435456,
                solarSystem: 536870912,
                unfiltered: 1073741823,
                stellar: 63,
                stellarGroupings: 2032,
                nebulae: 523264,
                galactic: 133693440,
                other: 436207616
              };
              (0, n.registerType)("Classification", y), (0, n.registerEnum)("Classification", y);
              function C() {
                this._camParams = o.CameraParameters.create(0, 0, -1, 0, 0, 100), this._location3d = e.Vector3d.create(0, 0, 0), this.htmlDescription = "", this._constellation = "", this._classification = 1048576, this._type = 2, this._magnitude = 0, this._distnace = 0, this.angularSize = 60, this.annotation = "", this._thumbNail = null, this._studyImageset = null, this._backgroundImageSet = null, this._searchDistance = 0, this._elevation = 50;
              }
              C.create = function(v, m, L, A, K, T, w) {
                var f = new C();
                return f.set_zoomLevel(w), f._constellation = K, f._name = v, T === 2 || T === 4 ? f._camParams.set_RA(L) : f.set_lng(L), f.set_lat(m), f.set_classification(A), f.set_type(T), f;
              }, C.createCameraParams = function(v, m, L, A, K, T) {
                var w = new C();
                return w._constellation = A, w._name = v, w.set_classification(L), w._camParams = m, w.set_type(K), w.set_target(T), w;
              }, C._fromXml = function(v) {
                var m = new C();
                if (m._name = v.attributes.getNamedItem("Name").nodeValue, v.attributes.getNamedItem("MSRComponentId") != null && v.attributes.getNamedItem("Permission") != null && v.attributes.getNamedItem("Url") != null)
                  return m.set_url(v.attributes.getNamedItem("Url").nodeValue), m.set_thumbnailUrl(v.attributes.getNamedItem("Thumbnail").nodeValue), m;
                v.attributes.getNamedItem("DataSetType") != null && (m._type = n.Enums.parse("ImageSetType", v.attributes.getNamedItem("DataSetType").nodeValue)), m.get_type() === 2 ? (m._camParams.set_RA(parseFloat(v.attributes.getNamedItem("RA").nodeValue)), m._camParams.set_dec(parseFloat(v.attributes.getNamedItem("Dec").nodeValue))) : (m.set_lat(parseFloat(v.attributes.getNamedItem("Lat").nodeValue)), m.set_lng(parseFloat(v.attributes.getNamedItem("Lng").nodeValue))), v.attributes.getNamedItem("Constellation") != null && (m._constellation = v.attributes.getNamedItem("Constellation").nodeValue), v.attributes.getNamedItem("Classification") != null && (m._classification = n.Enums.parse("Classification", v.attributes.getNamedItem("Classification").nodeValue)), v.attributes.getNamedItem("Magnitude") != null && (m._magnitude = parseFloat(v.attributes.getNamedItem("Magnitude").nodeValue)), v.attributes.getNamedItem("AngularSize") != null && (m.angularSize = parseFloat(v.attributes.getNamedItem("AngularSize").nodeValue)), v.attributes.getNamedItem("ZoomLevel") != null && m.set_zoomLevel(parseFloat(v.attributes.getNamedItem("ZoomLevel").nodeValue)), v.attributes.getNamedItem("Rotation") != null && (m._camParams.rotation = parseFloat(v.attributes.getNamedItem("Rotation").nodeValue)), v.attributes.getNamedItem("Annotation") != null && (m.annotation = v.attributes.getNamedItem("Annotation").nodeValue), v.attributes.getNamedItem("Angle") != null && (m._camParams.angle = parseFloat(v.attributes.getNamedItem("Angle").nodeValue)), v.attributes.getNamedItem("Opacity") != null ? m._camParams.opacity = parseFloat(v.attributes.getNamedItem("Opacity").nodeValue) : m._camParams.opacity = 100, m.set_target(65536), v.attributes.getNamedItem("Target") != null && m.set_target(n.Enums.parse("SolarSystemObjects", v.attributes.getNamedItem("Target").nodeValue)), v.attributes.getNamedItem("ViewTarget") != null && (m._camParams.viewTarget = e.Vector3d.parse(v.attributes.getNamedItem("ViewTarget").nodeValue)), v.attributes.getNamedItem("TargetReferenceFrame") != null && (m._camParams.targetReferenceFrame = v.attributes.getNamedItem("TargetReferenceFrame").nodeValue);
                var L = r.Util.selectSingleNode(v, "Description");
                L != null && (m.htmlDescription = r.Util.getInnerText(L));
                var A = r.Util.selectSingleNode(v, "BackgroundImageSet");
                if (A != null) {
                  var K = r.Util.selectSingleNode(A, "ImageSet");
                  m._backgroundImageSet = b.Imageset.fromXMLNode(K);
                }
                var T = r.Util.selectSingleNode(v, "ForegroundImageSet");
                if (T != null) {
                  var K = r.Util.selectSingleNode(T, "ImageSet");
                  m._studyImageset = b.Imageset.fromXMLNode(K);
                }
                return T = r.Util.selectSingleNode(v, "ImageSet"), T != null && (m._studyImageset = b.Imageset.fromXMLNode(T)), m;
              }, C._properCaps = function(v) {
                for (var m = v.split(" "), L = "", A = t.ss.enumerate(m); A.moveNext(); ) {
                  var K = A.current;
                  L = L + K.substr(0, 1).toUpperCase() + (K.length > 1 ? K.substr(1).toLowerCase() : "") + " ";
                }
                return t.ss.trim(L);
              };
              var E = {
                get_tag: function() {
                  return this._tag;
                },
                set_tag: function(v) {
                  return this._tag = v, v;
                },
                get_url: function() {
                  return this._url;
                },
                set_url: function(v) {
                  return this._url = v, v;
                },
                get_thumbnail: function() {
                  return this._thumbnail;
                },
                set_thumbnail: function(v) {
                  return this._thumbnail = v, v;
                },
                get_name: function() {
                  return this.get_names()[0];
                },
                get_names: function() {
                  return t.ss.emptyString(this._name) ? "".split(";") : this._name.split(";");
                },
                set_names: function(v) {
                  return this._name = l.UiTools.getNamesStringFromArray(v), v;
                },
                get_camParams: function() {
                  if (this.get_classification() === 536870912 && this._camParams.target !== 20) {
                    var v = V.Planets.getPlanetLocation(this.get_name());
                    this._camParams.set_RA(v.RA), this._camParams.set_dec(v.dec), this._distnace = v.distance;
                  }
                  return this._camParams;
                },
                set_camParams: function(v) {
                  return this._camParams = v, v;
                },
                updatePlanetLocation: function(v) {
                  this._camParams.viewTarget = V.Planets.getPlanet3dLocationJD(this.get_target(), v), this.get_target() !== 65536 && this.get_target() !== 20 && (this._camParams.viewTarget = V.Planets.getPlanetTargetPoint(this.get_target(), this.get_lat(), this.get_lng(), v));
                },
                get_location3d: function() {
                  return (this.get_classification() === 536870912 || !this._location3d.x && !this._location3d.y && !this._location3d.z) && (this._location3d = a.Coordinates.raDecTo3d(this.get_RA(), this.get_dec())), this._location3d;
                },
                get_lat: function() {
                  return this.get_camParams().lat;
                },
                set_lat: function(v) {
                  return this._camParams.lat = v, v;
                },
                get_lng: function() {
                  return this.get_camParams().lng;
                },
                set_lng: function(v) {
                  return this._camParams.lng = v, v;
                },
                get_opacity: function() {
                  return this.get_camParams().opacity;
                },
                set_opacity: function(v) {
                  return this._camParams.opacity = v, v;
                },
                get_constellation: function() {
                  return this._constellation;
                },
                set_constellation: function(v) {
                  return this._constellation = v, v;
                },
                get_classification: function() {
                  return this._classification;
                },
                set_classification: function(v) {
                  return this._classification = v, v;
                },
                get_type: function() {
                  return this._type;
                },
                set_type: function(v) {
                  return this._type = v, v;
                },
                get_magnitude: function() {
                  return this._magnitude;
                },
                set_magnitude: function(v) {
                  return this._magnitude = v, v;
                },
                get_distance: function() {
                  return this._distnace;
                },
                set_distance: function(v) {
                  return this._distnace = v, v;
                },
                get_zoomLevel: function() {
                  return this.get_camParams().zoom;
                },
                set_zoomLevel: function(v) {
                  return this._camParams.zoom = v, v;
                },
                get_annotation: function() {
                  return this.annotation;
                },
                set_annotation: function(v) {
                  return this.annotation = v, v;
                },
                get_studyImageset: function() {
                  return this._studyImageset;
                },
                set_studyImageset: function(v) {
                  return this._studyImageset = v, v;
                },
                get_backgroundImageset: function() {
                  return this._backgroundImageSet;
                },
                set_backgroundImageset: function(v) {
                  return v != null && this.set_type(v.get_dataSetType()), this._backgroundImageSet = v, v;
                },
                get_searchDistance: function() {
                  return this._searchDistance;
                },
                set_searchDistance: function(v) {
                  return this._searchDistance = v, v;
                },
                get_elevation: function() {
                  return this._elevation;
                },
                set_elevation: function(v) {
                  return this._elevation = v, v;
                },
                get_thumbnailUrl: function() {
                  if (t.ss.emptyString(this._thumbnailField)) {
                    if (this._studyImageset != null && !t.ss.emptyString(this._studyImageset.get_thumbnailUrl()))
                      return this._studyImageset.get_thumbnailUrl();
                    if (this._backgroundImageSet != null && !t.ss.emptyString(this._backgroundImageSet.get_thumbnailUrl()))
                      return this._backgroundImageSet.get_thumbnailUrl();
                    var v = this.get_name();
                    return v.indexOf(";") > -1 && (v = v.substr(0, v.indexOf(";"))), this.get_classification() === 1 || _.freestandingMode ? g.URLHelpers.singleton.engineAssetUrl("thumb_star.jpg") : g.URLHelpers.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=" + v.toLowerCase());
                  }
                  return this._thumbnailField;
                },
                set_thumbnailUrl: function(v) {
                  return this._thumbnailField = v, v;
                },
                get_RA: function() {
                  return this.get_camParams().get_RA();
                },
                set_RA: function(v) {
                  return this._camParams.set_RA(v), v;
                },
                get_dec: function() {
                  return this.get_camParams().get_dec();
                },
                set_dec: function(v) {
                  return this._camParams.set_dec(v), v;
                },
                toString: function() {
                  return this._name;
                },
                _saveToXml: function(v, m) {
                  v._writeStartElement(m), v._writeAttributeString("Name", this._name), v._writeAttributeString("DataSetType", n.Enums.toXml("ImageSetType", this._type)), this.get_type() === 2 ? (v._writeAttributeString("RA", this._camParams.get_RA().toString()), v._writeAttributeString("Dec", this._camParams.get_dec().toString())) : (v._writeAttributeString("Lat", this.get_lat().toString()), v._writeAttributeString("Lng", this.get_lng().toString())), v._writeAttributeString("Constellation", this._constellation), v._writeAttributeString("Classification", n.Enums.toXml("Classification", this._classification)), v._writeAttributeString("Magnitude", this._magnitude.toString()), v._writeAttributeString("Distance", this._distnace.toString()), v._writeAttributeString("AngularSize", this.angularSize.toString()), v._writeAttributeString("ZoomLevel", this.get_zoomLevel().toString()), v._writeAttributeString("Rotation", this._camParams.rotation.toString()), v._writeAttributeString("Angle", this._camParams.angle.toString()), v._writeAttributeString("Opacity", this._camParams.opacity.toString()), v._writeAttributeString("Target", n.Enums.toXml("SolarSystemObjects", this.get_target())), v._writeAttributeString("ViewTarget", this._camParams.viewTarget.toString()), v._writeAttributeString("TargetReferenceFrame", this._camParams.targetReferenceFrame), v._writeStartElement("Description"), v._writeCData(this.htmlDescription), v._writeEndElement(), this._backgroundImageSet != null && (v._writeStartElement("BackgroundImageSet"), b.Imageset.saveToXml(v, this._backgroundImageSet, ""), v._writeEndElement()), this._studyImageset != null && b.Imageset.saveToXml(v, this._studyImageset, ""), v._writeEndElement();
                },
                get_bounds: function() {
                  return this._bounds;
                },
                set_bounds: function(v) {
                  return this._bounds = v, v;
                },
                get_isImage: function() {
                  return this._studyImageset != null || this._backgroundImageSet != null;
                },
                get_isTour: function() {
                  return !1;
                },
                get_isFolder: function() {
                  return !1;
                },
                get_children: function() {
                  return [];
                },
                get_readOnly: function() {
                  return !0;
                },
                get_target: function() {
                  return this._camParams.target;
                },
                set_target: function(v) {
                  return this._camParams.target = v, v;
                },
                get_isCloudCommunityItem: function() {
                  return !1;
                }
              };
              (0, n.registerType)("Place", [C, E, null, c.IThumbnail, c.IPlace]), (0, _.set_createPlace)(C.create);
            }
          ),
          /***/
          "./esm/planets.js": (
            /*!************************!*\
              !*** ./esm/planets.js ***!
              \************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                BodyAngles: () => (
                  /* binding */
                  N
                ),
                /* harmony export */
                KeplerianElements: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                Planets: () => (
                  /* binding */
                  S
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./astrocalc/earth.js */
                "./esm/astrocalc/earth.js"
              ), r = i(
                /*! ./astrocalc/mercury.js */
                "./esm/astrocalc/mercury.js"
              ), o = i(
                /*! ./astrocalc/venus.js */
                "./esm/astrocalc/venus.js"
              ), c = i(
                /*! ./astrocalc/mars.js */
                "./esm/astrocalc/mars.js"
              ), l = i(
                /*! ./astrocalc/jupiter.js */
                "./esm/astrocalc/jupiter.js"
              ), g = i(
                /*! ./astrocalc/saturn.js */
                "./esm/astrocalc/saturn.js"
              ), a = i(
                /*! ./astrocalc/uranus.js */
                "./esm/astrocalc/uranus.js"
              ), b = i(
                /*! ./astrocalc/neptune.js */
                "./esm/astrocalc/neptune.js"
              ), V = i(
                /*! ./astrocalc/pluto.js */
                "./esm/astrocalc/pluto.js"
              ), y = i(
                /*! ./astrocalc/galilean_moons.js */
                "./esm/astrocalc/galilean_moons.js"
              ), C = i(
                /*! ./astrocalc/moon.js */
                "./esm/astrocalc/moon.js"
              ), E = i(
                /*! ./astrocalc.js */
                "./esm/astrocalc.js"
              ), v = i(
                /*! ./graphics/texture.js */
                "./esm/graphics/texture.js"
              ), m = i(
                /*! ./graphics/sprite2d.js */
                "./esm/graphics/sprite2d.js"
              ), L = i(
                /*! ./baseplanets.js */
                "./esm/baseplanets.js"
              ), A = i(
                /*! ./camera_parameters.js */
                "./esm/camera_parameters.js"
              ), K = i(
                /*! ./color.js */
                "./esm/color.js"
              ), T = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), w = i(
                /*! ./settings.js */
                "./esm/settings.js"
              ), f = i(
                /*! ./space_time_controller.js */
                "./esm/space_time_controller.js"
              ), R = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              );
              function O() {
                this.a = 0, this.e = 0, this.ea = 0;
              }
              var W = {};
              (0, n.registerType)("KeplerianElements", [O, W, null]);
              function N(x, P, d, U) {
                this.poleDec = 0, this.poleRa = 0, this.primeMeridian = 0, this.rotationRate = 0, this.poleDec = P, this.poleRa = x, this.primeMeridian = d, this.rotationRate = U;
              }
              var $ = {};
              (0, n.registerType)("BodyAngles", [N, $, null]);
              function S() {
              }
              S.RC = Math.PI / 180, S._jNow = 0, S._planetAngles = [
                new N(286.13, 63.87, 84.176, 14.1844),
                new N(281.0097, 61.4143, 329.548, 6.1385025),
                new N(272.76, 67.16, 160.2, -1.4813688),
                new N(317.68143, 52.8865, 176.63, 350.89198226),
                new N(268.056595, 64.495303, 284.95, 870.536),
                new N(40.589, 83.537, 38.9, 810.7939024),
                new N(257.311, -15.175, 203.81, 501.1600928),
                new N(299.36, 43.46, 253.18, 536.3128492),
                new N(132.993, -6.163, 302.695, 56.3625225),
                new N(269.9949, 66.5392, 38.3213, 13.17635815),
                new N(268.05, 64.5, 200.39, 203.4889538),
                new N(268.08, 64.51, 36.022, 101.3747235),
                new N(268.2, 64.57, 44.064, 50.3176081),
                new N(268.72, 64.83, 259.51, 21.5710715),
                new N(0, 0, 0, 0),
                new N(0, 0, 0, 0),
                new N(0, 0, 0, 0),
                new N(0, 0, 0, 0),
                new N(0, 0, 0, 0),
                new N(0, 90, 190.147, 360.9856235)
              ], S._lastPlanetCenterID = -2, S._orbitalSampleRate = 256, S._obliquity = 23.5 * S.RC, S._drawOrder = {}, S.earthMatrix = new e.Matrix3d(), S.earthMatrixInv = new e.Matrix3d(), S._lastUpdate = /* @__PURE__ */ new Date(), S._planetSprite = new m.Sprite2d(), S._planetPoints = null, S._planet3dLocations = null, S.loadPlanetTexture = function(x) {
                var P = new v.Texture();
                return P.load(x), P;
              }, S.getPlanet3dLocation = function(x) {
                try {
                  if (x < 21)
                    return S._planet3dLocations[x].copy();
                } catch {
                }
                return e.Vector3d.create(0, 0, 0);
              }, S.getPlanet3dSufaceAltitude = function(x) {
                try {
                  if (x < 21)
                    return S.getAdjustedPlanetRadius(x);
                } catch {
                }
                return 0;
              }, S.getPlanetTargetPoint = function(x, P, d, U) {
                var F;
                return U ? F = S.getPlanet3dLocationJD(x, U) : F = S.getPlanet3dLocation(x), F.add(T.Coordinates.raDecTo3dAu(d / 15 + 6, P, S.getPlanet3dSufaceAltitude(x))), F;
              }, S.getPlanet3dLocationJD = function(x, P) {
                try {
                  var d = new e.Vector3d(), U = E.AstroCalc.getPlanet(P, 0, 0, 0, -6378149), F = T.Coordinates.raDecTo3dAu(U.RA, U.dec, U.distance);
                  if (x === A.SolarSystemObjects.earth)
                    d = e.Vector3d.create(-F.x, -F.y, -F.z);
                  else {
                    var X = E.AstroCalc.getPlanet(P, x, 0, 0, -6378149);
                    d = T.Coordinates.raDecTo3dAu(X.RA, X.dec, X.distance), d.subtract(F);
                  }
                  if (d.rotateX(T.Coordinates.meanObliquityOfEcliptic(P) * S.RC), w.Settings.get_active().get_solarSystemScale() !== 1)
                    switch (x) {
                      case A.SolarSystemObjects.moon:
                        var Y = S.getPlanet3dLocationJD(A.SolarSystemObjects.earth, P);
                        d.subtract(Y), d.multiply(w.Settings.get_active().get_solarSystemScale() / 2), d.add(Y);
                        break;
                      case A.SolarSystemObjects.io:
                      case A.SolarSystemObjects.europa:
                      case A.SolarSystemObjects.ganymede:
                      case A.SolarSystemObjects.callisto:
                        var Y = S.getPlanet3dLocationJD(A.SolarSystemObjects.jupiter, P);
                        d.subtract(Y), d.multiply(w.Settings.get_active().get_solarSystemScale()), d.add(Y);
                        break;
                      default:
                        break;
                    }
                  return d;
                } catch {
                  return e.Vector3d.create(0, 0, 0);
                }
              }, S.getPlanetLocation = function(x) {
                var P = S.getPlanetIDFromName(x);
                return S._planetLocations != null ? S._planetLocations[P] : E.AstroCalc.getPlanet(f.SpaceTimeController.get_jNow(), P, f.SpaceTimeController.get_location().get_lat(), f.SpaceTimeController.get_location().get_lng(), f.SpaceTimeController.get_altitude());
              }, S.getPlanetLocationJD = function(x, P) {
                var d = S.getPlanetIDFromName(x);
                return E.AstroCalc.getPlanet(P, d, f.SpaceTimeController.get_location().get_lat(), f.SpaceTimeController.get_location().get_lng(), f.SpaceTimeController.get_altitude());
              }, S.getPlanetIDFromName = function(x) {
                switch (x) {
                  case "Sun":
                    return A.SolarSystemObjects.sun;
                  case "Mercury":
                    return A.SolarSystemObjects.mercury;
                  case "Venus":
                    return A.SolarSystemObjects.venus;
                  case "Mars":
                    return A.SolarSystemObjects.mars;
                  case "Jupiter":
                    return A.SolarSystemObjects.jupiter;
                  case "Saturn":
                    return A.SolarSystemObjects.saturn;
                  case "Uranus":
                    return A.SolarSystemObjects.uranus;
                  case "Neptune":
                    return A.SolarSystemObjects.neptune;
                  case "Pluto":
                    return A.SolarSystemObjects.pluto;
                  case "Moon":
                    return A.SolarSystemObjects.moon;
                  case "Io":
                    return A.SolarSystemObjects.io;
                  case "Europa":
                    return A.SolarSystemObjects.europa;
                  case "Ganymede":
                    return A.SolarSystemObjects.ganymede;
                  case "Callisto":
                    return A.SolarSystemObjects.callisto;
                  case "Earth":
                    return A.SolarSystemObjects.earth;
                  case "IoShadow":
                    return A.SolarSystemObjects.ioShadow;
                  case "EuropaShadow":
                    return A.SolarSystemObjects.europaShadow;
                  case "GanymedeShadow":
                    return A.SolarSystemObjects.ganymedeShadow;
                  case "CallistoShadow":
                    return A.SolarSystemObjects.callistoShadow;
                  case "SunEclipsed":
                    return A.SolarSystemObjects.sunEclipsed;
                  case "Custom":
                    return A.SolarSystemObjects.custom;
                  case "Undefined":
                    return A.SolarSystemObjects.undefined;
                  default:
                    return -1;
                }
              }, S.getNameFrom3dId = function(x) {
                switch (x) {
                  case A.SolarSystemObjects.sun:
                    return "Sun";
                  case A.SolarSystemObjects.mercury:
                    return "Mercury";
                  case A.SolarSystemObjects.venus:
                    return "Venus";
                  case A.SolarSystemObjects.mars:
                    return "Mars";
                  case A.SolarSystemObjects.jupiter:
                    return "Jupiter";
                  case A.SolarSystemObjects.saturn:
                    return "Saturn";
                  case A.SolarSystemObjects.uranus:
                    return "Uranus";
                  case A.SolarSystemObjects.neptune:
                    return "Neptune";
                  case A.SolarSystemObjects.pluto:
                    return "Pluto";
                  case A.SolarSystemObjects.moon:
                    return "Moon";
                  case A.SolarSystemObjects.io:
                    return "Io";
                  case A.SolarSystemObjects.europa:
                    return "Europa";
                  case A.SolarSystemObjects.ganymede:
                    return "Ganymede";
                  case A.SolarSystemObjects.callisto:
                    return "Callisto";
                  case A.SolarSystemObjects.earth:
                    return "Earth";
                  default:
                    return "";
                }
              }, S.updatePlanetLocations = function(x) {
                if (S._jNow = f.SpaceTimeController.get_jNow(), x && S.updateOrbits(0), S._planetDiameters == null && (S._planetDiameters = new Array(20), S._planetDiameters[0] = 9291568e-9, S._planetDiameters[1] = 325794793734425e-19, S._planetDiameters[2] = 808669220531394e-19, S._planetDiameters[3] = 453785605596396e-19, S._planetDiameters[4] = 954501e-9, S._planetDiameters[5] = 802173e-9, S._planetDiameters[6] = 339564e-9, S._planetDiameters[7] = 324825e-9, S._planetDiameters[8] = 152007379777805e-19, S._planetDiameters[9] = 232084653538149e-19, S._planetDiameters[10] = 243519298386342e-19, S._planetDiameters[11] = 208692629580609e-19, S._planetDiameters[12] = 351742670356556e-19, S._planetDiameters[13] = 322263666626559e-19, S._planetDiameters[14] = 243519298386342e-19, S._planetDiameters[15] = 208692629580609e-19, S._planetDiameters[16] = 351742670356556e-19, S._planetDiameters[17] = 322263666626559e-19, S._planetDiameters[18] = 0.018583136, S._planetDiameters[A.SolarSystemObjects.earth] = 855626412117809e-19), S.planetColors == null) {
                  var P = K.Color.fromArgb(255, 255, 255, 221), d = K.Color.fromArgb(255, 255, 68, 0);
                  S.planetColors = new Array(20), S.planetColors[0] = K.Colors.get_yellow(), S.planetColors[1] = K.Colors.get_white(), S.planetColors[2] = P, S.planetColors[3] = d, S.planetColors[4] = K.Color.fromArgb(255, 255, 165, 0), S.planetColors[5] = K.Color.fromArgb(255, 184, 134, 11), S.planetColors[6] = K.Color.fromArgb(255, 173, 216, 230), S.planetColors[7] = K.Colors.get_blue(), S.planetColors[8] = K.Colors.get_white(), S.planetColors[9] = K.Colors.get_white(), S.planetColors[10] = K.Colors.get_white(), S.planetColors[11] = K.Colors.get_white(), S.planetColors[12] = K.Colors.get_white(), S.planetColors[13] = K.Colors.get_white(), S.planetColors[14] = K.Colors.get_black(), S.planetColors[15] = K.Colors.get_black(), S.planetColors[16] = K.Colors.get_black(), S.planetColors[17] = K.Colors.get_black(), S.planetColors[18] = K.Colors.get_white(), S.planetColors[A.SolarSystemObjects.earth] = K.Color.fromArgb(255, 173, 216, 230);
                }
                if (S._planetTilts == null && (S._planetTilts = new Array(20), S._planetTilts[0] = 0, S._planetTilts[1] = 0.01, S._planetTilts[2] = 177.4, S._planetTilts[3] = 25.19, S._planetTilts[4] = 3.13, S._planetTilts[5] = 26.73, S._planetTilts[6] = 97.77, S._planetTilts[7] = 28.32, S._planetTilts[8] = 119.61, S._planetTilts[9] = 23.439, S._planetTilts[10] = 2.21, S._planetTilts[11] = 0, S._planetTilts[12] = -0.33, S._planetTilts[13] = 0, S._planetTilts[14] = 0, S._planetTilts[15] = 0, S._planetTilts[16] = 0, S._planetTilts[17] = 0, S._planetTilts[18] = 0, S._planetTilts[A.SolarSystemObjects.earth] = 23.5), S._planetTilts[A.SolarSystemObjects.earth] = S._obliquity / S.RC, S.planetRotationPeriod == null && (S.planetRotationPeriod = new Array(20), S.planetRotationPeriod[0] = 25.37995, S.planetRotationPeriod[1] = 58.6462, S.planetRotationPeriod[2] = -243.0187, S.planetRotationPeriod[3] = 1.02595675, S.planetRotationPeriod[4] = 0.41007, S.planetRotationPeriod[5] = 0.426, S.planetRotationPeriod[6] = -0.71833, S.planetRotationPeriod[7] = 0.67125, S.planetRotationPeriod[8] = -6.38718, S.planetRotationPeriod[9] = 27.3, S.planetRotationPeriod[10] = 1.769137786, S.planetRotationPeriod[11] = 3.551, S.planetRotationPeriod[12] = 7.155, S.planetRotationPeriod[13] = 16.69, S.planetRotationPeriod[14] = 0, S.planetRotationPeriod[15] = 0, S.planetRotationPeriod[16] = 0, S.planetRotationPeriod[17] = 0, S.planetRotationPeriod[18] = 0, S.planetRotationPeriod[A.SolarSystemObjects.earth] = 0.99726968), S._planetScales == null && (S._planetScales = new Array(20)), S._planet3dLocations == null && (S._planet3dLocations = new Array(20)), w.Settings.get_active().get_actualPlanetScale())
                  S._planetScales[0] = 0.5, S._planetScales[1] = 0.25, S._planetScales[2] = 0.25, S._planetScales[3] = 0.25, S._planetScales[4] = 0.25, S._planetScales[5] = 0.5, S._planetScales[6] = 0.25, S._planetScales[7] = 0.25, S._planetScales[8] = 0.25, S._planetScales[9] = 0.25, S._planetScales[10] = 0.25, S._planetScales[11] = 0.25, S._planetScales[12] = 0.25, S._planetScales[13] = 0.25, S._planetScales[14] = 0.25, S._planetScales[15] = 0.25, S._planetScales[16] = 0.25, S._planetScales[17] = 0.25, S._planetScales[18] = 0.5, S._planetScales[A.SolarSystemObjects.earth] = 0.25;
                else {
                  for (var U = 0; U < 20; U++)
                    U < 10 ? S._planetScales[U] = 0.25 : S._planetScales[U] = 0.1;
                  S._planetScales[A.SolarSystemObjects.sun] = 0.5, S._planetScales[A.SolarSystemObjects.saturn] = 0.5, S._planetScales[A.SolarSystemObjects.sunEclipsed] = 0.5;
                }
                S._planetDrawOrder = {}, S._planetLocations = new Array(20);
                var F = new e.Vector3d(), X = 0;
                {
                  var Y = E.AstroCalc.getPlanet(S._jNow, X, x ? 0 : f.SpaceTimeController.get_location().get_lat(), x ? 0 : f.SpaceTimeController.get_location().get_lng(), x ? -6378149 : f.SpaceTimeController.get_altitude());
                  F = T.Coordinates.raDecTo3dAu(Y.RA, Y.dec, Y.distance);
                }
                S._planet3dLocations[A.SolarSystemObjects.earth] = e.Vector3d.create(-F.x, -F.y, -F.z), S._planet3dLocations[A.SolarSystemObjects.earth].rotateX(S._obliquity);
                for (var U = 0; U < 18; U++) {
                  if (S._planetLocations[U] = E.AstroCalc.getPlanet(S._jNow, U, x ? 0 : f.SpaceTimeController.get_location().get_lat(), x ? 0 : f.SpaceTimeController.get_location().get_lng(), x ? -6378149 : f.SpaceTimeController.get_altitude()), S._planet3dLocations[U] = T.Coordinates.raDecTo3dAu(S._planetLocations[U].RA, S._planetLocations[U].dec, S._planetLocations[U].distance), S._planet3dLocations[U].subtract(F), S._planet3dLocations[U].rotateX(S._obliquity), w.Settings.get_active().get_actualPlanetScale() && (S._planetScales[U] = 2 * Math.atan(0.5 * (S._planetDiameters[U] / S._planetLocations[U].distance)) / Math.PI * 180), w.Settings.get_active().get_solarSystemScale() !== 1) {
                    var M = U;
                    switch (M) {
                      case A.SolarSystemObjects.moon:
                        var B = S._planet3dLocations[A.SolarSystemObjects.earth];
                        S._planet3dLocations[U].subtract(B), S._planet3dLocations[U].multiply(w.Settings.get_active().get_solarSystemScale() / 2), S._planet3dLocations[U].add(B);
                        break;
                      case A.SolarSystemObjects.io:
                      case A.SolarSystemObjects.europa:
                      case A.SolarSystemObjects.ganymede:
                      case A.SolarSystemObjects.callisto:
                        var B = S._planet3dLocations[A.SolarSystemObjects.jupiter];
                        S._planet3dLocations[U].subtract(B), S._planet3dLocations[U].multiply(w.Settings.get_active().get_solarSystemScale()), S._planet3dLocations[U].add(B);
                        break;
                    }
                  }
                  for (var D = -S._planetLocations[U].distance; t.ss.keyExists(S._planetDrawOrder, D); )
                    D += 1e-10;
                  S._planetDrawOrder[D] = U;
                }
                S._planetLocations[A.SolarSystemObjects.sunEclipsed] = S._planetLocations[A.SolarSystemObjects.sun], S._planetScales[A.SolarSystemObjects.sun] *= 2, S._planetScales[A.SolarSystemObjects.sunEclipsed] = S._planetScales[A.SolarSystemObjects.sun], S._planetScales[A.SolarSystemObjects.saturn] = S._planetScales[A.SolarSystemObjects.saturn] * 2, S._lastUpdate = f.SpaceTimeController.get_now();
              }, S.planetsReady = function() {
              }, S.updateOrbits = function(x) {
                try {
                  if (S._obliquity = T.Coordinates.meanObliquityOfEcliptic(f.SpaceTimeController.get_jNow()) * S.RC, x !== S._lastPlanetCenterID && (S._orbits = null), S._lastPlanetCenterID = x, S._orbits == null && (x < 0 ? S._eclipticTilt = e.Matrix3d.get_identity() : (S._eclipticTilt = e.Matrix3d.get_identity(), S._eclipticTilt = e.Matrix3d._rotationX(S._obliquity)), S.planetOrbitalYears == null && (S.planetOrbitalYears = new Array(20), S.planetOrbitalYears[0] = 1, S.planetOrbitalYears[1] = 0.241, S.planetOrbitalYears[2] = 0.615, S.planetOrbitalYears[3] = 1.881, S.planetOrbitalYears[4] = 11.87, S.planetOrbitalYears[5] = 29.45, S.planetOrbitalYears[6] = 84.07, S.planetOrbitalYears[7] = 164.9, S.planetOrbitalYears[8] = 248.1, S.planetOrbitalYears[9] = 0.07474332648870637, S.planetOrbitalYears[10] = 0.04569204216290212, S.planetOrbitalYears[11] = 0.009722603696098562, S.planetOrbitalYears[12] = 0.019588098453114305, S.planetOrbitalYears[13] = 0.04569204216290212, S.planetOrbitalYears[A.SolarSystemObjects.earth] = 1), !S.readOrbits())) {
                    S._orbits = new Array(20);
                    for (var P = 1; P < 20; P++)
                      if (S._orbits[P] = new Array(S._orbitalSampleRate), P < 9 || P === A.SolarSystemObjects.earth) {
                        for (var d = 0; d < S._orbitalSampleRate; d++) {
                          var U = x, F = S._jNow + S.planetOrbitalYears[P] * 365.25 / S._orbitalSampleRate * (d - S._orbitalSampleRate / 2), X = new e.Vector3d();
                          if (P === A.SolarSystemObjects.moone ? U = -1 : P > 9 && P < 14 && (U = 4), U > -1) {
                            var Y = E.AstroCalc.getPlanet(F, U, 0, 0, -6378149);
                            X = T.Coordinates.raDecTo3dAu(Y.RA, Y.dec, Y.distance);
                          }
                          if (P !== A.SolarSystemObjects.earth) {
                            var M = E.AstroCalc.getPlanet(F, P, 0, 0, -6378149);
                            S._orbits[P][d] = T.Coordinates.raDecTo3dAu(M.RA, M.dec, M.distance), S._orbits[P][d].subtract(X);
                          } else
                            S._orbits[P][d] = e.Vector3d.create(-X.x, -X.y, -X.z);
                          S._orbits[P][d].rotateX(S._obliquity);
                        }
                        S._orbits[P][S._orbitalSampleRate - 1] = S._orbits[P][0];
                      }
                    S.dumpOrbitsFile();
                  }
                } finally {
                }
              }, S.readOrbits = function() {
                return !1;
              }, S.dumpOrbitsFile = function() {
              }, S.drawPlanets = function(x, P) {
                S._planetTextures == null && S._loadPlanetTextures();
                var d = S._geocentricElongation(S._planetLocations[9].RA, S._planetLocations[9].dec, S._planetLocations[0].RA, S._planetLocations[0].dec);
                S._planetLocations[9].RA - S._planetLocations[0].RA, S._planetLocations[9].RA < S._planetLocations[0].RA, S._phaseAngle(d, S._planetLocations[9].distance, S._planetLocations[0].distance), S._positionAngle(S._planetLocations[9].RA, S._planetLocations[9].dec, S._planetLocations[0].RA, S._planetLocations[0].dec);
                var U = Math.abs(S._planetLocations[9].RA - S._planetLocations[0].RA) * 15 * Math.cos(T.Coordinates.degreesToRadians(S._planetLocations[0].dec)), F = Math.abs(S._planetLocations[9].dec - S._planetLocations[0].dec), X = Math.sqrt(U * U + F * F), Y = 0, M = S._planetScales[9] / 2 - X;
                Math.min(32, t.ss.truncate(X * 32)), M > S._planetScales[0] / 4 && (Y = Math.min(1, (M - S._planetScales[0] / 2) / 1e-3), S._drawPlanet(x, 18, Y));
                for (var B = t.ss.enumerate(t.ss.keys(S._planetDrawOrder)); B.moveNext(); ) {
                  var D = B.current, k = S._planetDrawOrder[D];
                  S._drawPlanet(x, k, 1);
                }
                return !0;
              }, S._loadPlanetTextures = function() {
                var x = R.URLHelpers.singleton.engineAssetUrl("");
                S._planetTextures = new Array(20), S._planetTextures[0] = v.Texture.fromUrl(x + "sun.png"), S._planetTextures[1] = v.Texture.fromUrl(x + "mercury.png"), S._planetTextures[2] = v.Texture.fromUrl(x + "venus.png"), S._planetTextures[3] = v.Texture.fromUrl(x + "mars.png"), S._planetTextures[4] = v.Texture.fromUrl(x + "jupiter.png"), S._planetTextures[5] = v.Texture.fromUrl(x + "saturn.png"), S._planetTextures[6] = v.Texture.fromUrl(x + "uranus.png"), S._planetTextures[7] = v.Texture.fromUrl(x + "neptune.png"), S._planetTextures[8] = v.Texture.fromUrl(x + "pluto.png"), S._planetTextures[9] = v.Texture.fromUrl(x + "moon.png"), S._planetTextures[10] = v.Texture.fromUrl(x + "io.png"), S._planetTextures[11] = v.Texture.fromUrl(x + "europa.png"), S._planetTextures[12] = v.Texture.fromUrl(x + "ganymede.png"), S._planetTextures[13] = v.Texture.fromUrl(x + "callisto.png"), S._planetTextures[14] = v.Texture.fromUrl(x + "moonshadow.png"), S._planetTextures[15] = v.Texture.fromUrl(x + "moonshadow.png"), S._planetTextures[16] = v.Texture.fromUrl(x + "moonshadow.png"), S._planetTextures[17] = v.Texture.fromUrl(x + "moonshadow.png"), S._planetTextures[18] = v.Texture.fromUrl(x + "sunCorona.png"), S._planetTextures[A.SolarSystemObjects.earth] = v.Texture.fromUrl(x + "earth.png");
              }, S.getPlanetOrientationAtEpoch = function(x) {
                var P = e.Matrix3d.get_identity(), d = 23.4392794;
                return x === A.SolarSystemObjects.earth ? P._multiply(e.Matrix3d._rotationX(d * S.RC)) : (P._multiply(e.Matrix3d._rotationX(-90 * S.RC)), P._multiply(e.Matrix3d._rotationZ((180 + S._planetAngles[x].primeMeridian) * S.RC)), P._multiply(e.Matrix3d._rotationX((90 - S._planetAngles[x].poleDec) * S.RC)), P._multiply(e.Matrix3d._rotationZ((S._planetAngles[x].poleRa - 90) * S.RC)), P._multiply(e.Matrix3d._rotationX(d * S.RC)), P._multiply(e.Matrix3d._rotationX(90 * S.RC))), P;
              }, S.setupPlanetMatrix = function(x, P, d, U) {
                var F = x.get_world().clone();
                if (S._setupMatrixForPlanetGeometry(x, P, d, U), P === A.SolarSystemObjects.sun) {
                  var X = S.getAdjustedPlanetRadius(P);
                  F.scale(e.Vector3d.create(X, X, X));
                  var Y = e.Vector3d.subtractVectors(S._planet3dLocations[P], d);
                  F._multiply(e.Matrix3d.translation(Y)), x.set_worldBaseNonRotating(F);
                }
              }, S._setupMatrixForPlanetGeometry = function(x, P, d, U) {
                var F = S.getAdjustedPlanetRadius(P), X = 0;
                P === A.SolarSystemObjects.earth ? X = Math.PI + T.Coordinates.mstFromUTC2(f.SpaceTimeController.get_now(), 0) / 180 * Math.PI : X = Math.PI + (S._jNow - 2451545) / S.planetRotationPeriod[P] * Math.PI * 2 % (Math.PI * 2), P === 9 && (X -= Math.PI / 2);
                var Y = x.get_world().clone(), M = x.get_world().clone(), B = e.Vector3d.subtractVectors(S._planet3dLocations[P], d), D = S.getPlanetOrientationAtEpoch(P);
                return Y.scale(e.Vector3d.create(F, F, F)), Y._multiply(e.Matrix3d._rotationY(-X)), Y._multiply(D), P === x.viewCamera.target && (S.earthMatrix = e.Matrix3d.get_identity(), S.earthMatrix._multiply(e.Matrix3d._rotationY(-X)), S.earthMatrix._multiply(D), S.earthMatrixInv = S.earthMatrix.clone(), S.earthMatrixInv.invert()), Y._multiply(e.Matrix3d.translation(B)), x.set_world(Y), x.set_worldBase(x.get_world().clone()), x.set_nominalRadius(S.getPlanetRadiusInMeters(P)), U && x.makeFrustum(), M.scale(e.Vector3d.create(F, F, F)), M._multiply(D), M._multiply(e.Matrix3d.translation(B)), x.set_worldBaseNonRotating(M), X;
              }, S.getPlanetPositionDirect = function(x, P) {
                var d = 0, U = 0, F = 0;
                switch (x) {
                  case 1:
                    d = r.CAAMercury.eclipticLongitude(P), U = r.CAAMercury.eclipticLatitude(P), F = r.CAAMercury.radiusVector(P);
                    break;
                  case 2:
                    d = o.CAAVenus.eclipticLongitude(P), U = o.CAAVenus.eclipticLatitude(P), F = o.CAAVenus.radiusVector(P);
                    break;
                  case A.SolarSystemObjects.earth:
                    d = _.CAAEarth.eclipticLongitude(P), U = _.CAAEarth.eclipticLatitude(P), F = _.CAAEarth.radiusVector(P);
                    break;
                  case 3:
                    d = c.CAAMars.eclipticLongitude(P), U = c.CAAMars.eclipticLatitude(P), F = c.CAAMars.radiusVector(P);
                    break;
                  case 4:
                    d = l.CAAJupiter.eclipticLongitude(P), U = l.CAAJupiter.eclipticLatitude(P), F = l.CAAJupiter.radiusVector(P);
                    break;
                  case 5:
                    d = g.CAASaturn.eclipticLongitude(P), U = g.CAASaturn.eclipticLatitude(P), F = g.CAASaturn.radiusVector(P);
                    break;
                  case 6:
                    d = a.CAAUranus.eclipticLongitude(P), U = a.CAAUranus.eclipticLatitude(P), F = a.CAAUranus.radiusVector(P);
                    break;
                  case 7:
                    d = b.CAANeptune.eclipticLongitude(P), U = b.CAANeptune.eclipticLatitude(P), F = b.CAANeptune.radiusVector(P);
                    break;
                  case 8:
                    d = V.CAAPluto.eclipticLongitude(P), U = V.CAAPluto.eclipticLatitude(P), F = V.CAAPluto.radiusVector(P);
                    break;
                  case 9:
                    d = C.CAAMoon.eclipticLongitude(P), U = C.CAAMoon.eclipticLatitude(P), F = C.CAAMoon.radiusVector(P) / 149598e3;
                    break;
                  case 10:
                    var X = y.GM.calculate(P), Y = X.satellite1.eclipticRectangularCoordinates;
                    return e.Vector3d.create(Y.x, Y.z, Y.y);
                  case 11:
                    var X = y.GM.calculate(P), Y = X.satellite2.eclipticRectangularCoordinates;
                    return e.Vector3d.create(Y.x, Y.z, Y.y);
                  case 12:
                    var X = y.GM.calculate(P), Y = X.satellite3.eclipticRectangularCoordinates;
                    return e.Vector3d.create(Y.x, Y.z, Y.y);
                  case 13:
                    var X = y.GM.calculate(P), Y = X.satellite4.eclipticRectangularCoordinates;
                    return e.Vector3d.create(Y.x, Y.z, Y.y);
                }
                d = T.Coordinates.degreesToRadians(d), U = T.Coordinates.degreesToRadians(U);
                var M = e.Vector3d.create(Math.cos(d) * Math.cos(U) * F, Math.sin(d) * Math.cos(U) * F, Math.sin(U) * F), B = (T.Coordinates.meanObliquityOfEcliptic(P) - T.Coordinates.meanObliquityOfEcliptic(2451545)) * S.RC;
                return M.rotateX(B), e.Vector3d.create(M.x, M.z, M.y);
              }, S._stateVectorToKeplerian = function(x, P, d) {
                var U = e.Vector3d.scale(x, 149598e3), F = e.Vector3d.scale(e.Vector3d.scale(P, 1 / 86400), 149598e3), X = U.length(), Y = F.length(), M = 1 / (2 / X - Y * Y / d), B = e.Vector3d.cross(U, F), D = e.Vector3d.subtractVectors(e.Vector3d.scale(e.Vector3d.cross(F, B), 1 / d), e.Vector3d.scale(U, 1 / X)), k = D.length();
                B.normalize(), D.normalize();
                var G = e.Vector3d.cross(B, D);
                U.normalize();
                var j = e.Vector3d.dot(D, U), ee = e.Vector3d.dot(G, U), Z = Math.atan2(Math.sqrt(1 - k * k) * ee, k + j), z = new O();
                return z.orientation = e.Matrix3d.create(D.x, D.y, D.z, 0, G.x, G.y, G.z, 0, B.x, B.y, B.z, 0, 0, 0, 0, 1), z.a = M, z.e = k, z.ea = Z, z;
              }, S.getAdjustedPlanetRadius = function(x) {
                x > S._planetDiameters.length - 1 && (x = A.SolarSystemObjects.earth);
                var P = S._planetDiameters[x], d = P / 2;
                return x ? d = d * (1 + 3 * (w.Settings.get_active().get_solarSystemScale() - 1)) : d = d * (1 + 0.3 * (w.Settings.get_active().get_solarSystemScale() - 1)), d;
              }, S.getPlanetRadiusInMeters = function(x) {
                x > S._planetDiameters.length - 1 && (x = A.SolarSystemObjects.earth);
                var P = S._planetDiameters[x];
                return P / 2 * 149598e3 * 1e3;
              }, S._drawPlanet = function(x, P, d) {
                var U = S._planetLocations[P];
                if (P < 14 && S._planetScales[P] < x.viewCamera.zoom / 6 / 400) {
                  if (P < 10 || P < 14 && S._planetScales[P] > x.viewCamera.zoom / 6 / 6400) {
                    var F = T.Coordinates.raDecTo3d(U.RA, U.dec);
                    L.BasePlanets.drawPointPlanet(x, F, 3, S.planetColors[P], !1);
                  }
                  return;
                }
                var X = null;
                if (P < 10 || P === 18)
                  X = S._planetTextures[P];
                else if (P < 14)
                  S._planetLocations[P].eclipsed ? X = S._planetTextures[15] : w.Settings.get_active().get_showMoonsAsPointSource() ? X = S._planetTextures[14] : X = S._planetTextures[P];
                else {
                  if (!S._planetLocations[P].shadow)
                    return;
                  X = S._planetTextures[15];
                }
                if (x.gl != null) {
                  if (S._planetPoints == null) {
                    S._planetPoints = new Array(4);
                    for (var Y = 0; Y < 4; Y++)
                      S._planetPoints[Y] = new e.PositionColoredTextured();
                  }
                  var M = S._planetScales[P] / 2, B = M / Math.cos(U.dec / 180 * Math.PI);
                  S._planetPoints[0].position = T.Coordinates.raDecTo3dAu(U.RA - B / 15, U.dec + M, 1), S._planetPoints[0].tu = 0, S._planetPoints[0].tv = 1, S._planetPoints[0].color = K.Colors.get_white(), S._planetPoints[1].position = T.Coordinates.raDecTo3dAu(U.RA - B / 15, U.dec - M, 1), S._planetPoints[1].tu = 0, S._planetPoints[1].tv = 0, S._planetPoints[1].color = K.Colors.get_white(), S._planetPoints[2].position = T.Coordinates.raDecTo3dAu(U.RA + B / 15, U.dec + M, 1), S._planetPoints[2].tu = 1, S._planetPoints[2].tv = 1, S._planetPoints[2].color = K.Colors.get_white(), S._planetPoints[3].position = T.Coordinates.raDecTo3dAu(U.RA + B / 15, U.dec - M, 1), S._planetPoints[3].tu = 1, S._planetPoints[3].tv = 0, S._planetPoints[3].color = K.Colors.get_white(), S._planetSprite.draw(x, S._planetPoints, 4, X, !0, 1);
                } else {
                  var D = T.Coordinates.raDecTo3d(U.RA, U.dec), k = S._planetScales[P] / (x.get_fovScale() / 3600) / 2, G = x.WVP.transform(D);
                  if (G.z < 0 || e.Vector3d.dot(x.get_viewPoint(), D) < 0.55)
                    return;
                  var j = x.device;
                  j.save(), j.globalAlpha = d, j.beginPath(), j.arc(G.x, G.y, k, 0, Math.PI * 2, !0), j.lineWidth = 0, j.closePath(), j.clip(), j.drawImage(X.imageElement, G.x - k, G.y - k, k * 2, k * 2), j.globalAlpha = 1, j.restore();
                }
              }, S._drawPlanetPhase = function(x, P, d, U, F) {
              }, S._geocentricElongation = function(x, P, d, U) {
                return x = T.Coordinates.degreesToRadians(x * 15), d = T.Coordinates.degreesToRadians(d * 15), P = T.Coordinates.degreesToRadians(P), U = T.Coordinates.degreesToRadians(U), T.Coordinates.radiansToDegrees(Math.acos(Math.sin(U) * Math.sin(P) + Math.cos(U) * Math.cos(P) * Math.cos(d - x)));
              }, S._phaseAngle = function(x, P, d) {
                return x = T.Coordinates.degreesToRadians(x), T.Coordinates.mapTo0To360Range(T.Coordinates.radiansToDegrees(Math.atan2(d * Math.sin(x), P - d * Math.cos(x))));
              }, S._positionAngle = function(x, P, d, U) {
                return x = T.Coordinates.hoursToRadians(x), d = T.Coordinates.hoursToRadians(d), P = T.Coordinates.degreesToRadians(P), U = T.Coordinates.degreesToRadians(U), T.Coordinates.mapTo0To360Range(T.Coordinates.radiansToDegrees(Math.atan2(Math.cos(P) * Math.sin(x - d), Math.sin(P) * Math.cos(U) - Math.cos(P) * Math.sin(U) * Math.cos(x - d))));
              };
              var I = {};
              (0, n.registerType)("Planets", [S, I, null]);
            }
          ),
          /***/
          "./esm/planets_3d.js": (
            /*!***************************!*\
              !*** ./esm/planets_3d.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Planets3d: () => (
                  /* binding */
                  T
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), r = i(
                /*! ./graphics/gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), o = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), c = i(
                /*! ./graphics/texture.js */
                "./esm/graphics/texture.js"
              ), l = i(
                /*! ./graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), g = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), a = i(
                /*! ./baseplanets.js */
                "./esm/baseplanets.js"
              ), b = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), V = i(
                /*! ./color.js */
                "./esm/color.js"
              ), y = i(
                /*! ./planets.js */
                "./esm/planets.js"
              ), C = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), E = i(
                /*! ./settings.js */
                "./esm/settings.js"
              ), v = i(
                /*! ./triangle.js */
                "./esm/triangle.js"
              ), m = i(
                /*! ./ui_tools.js */
                "./esm/ui_tools.js"
              ), L = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), A = i(
                /*! ./layers/orbit.js */
                "./esm/layers/orbit.js"
              ), K = i(
                /*! ./layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              );
              function T() {
              }
              T._ringsTriangleLists = new Array(2), T._ringImage = null, T._triangleCountRings = 194, T._ringsVertexBuffer = null, T.getImageSetNameNameFrom3dId = function(w) {
                switch (w) {
                  case 0:
                    return "Sun";
                  case 1:
                    return "Mercury";
                  case 2:
                    return "Venus";
                  case 3:
                    return "Visible Imagery";
                  case 4:
                    return "Jupiter";
                  case 5:
                    return "Saturn";
                  case 6:
                    return "Uranus";
                  case 7:
                    return "Neptune";
                  case 8:
                    return "Pluto";
                  case 9:
                    return "Moon";
                  case 10:
                    return "Io (Jupiter)";
                  case 11:
                    return "Europa (Jupiter)";
                  case 12:
                    return "Ganymede (Jupiter)";
                  case 13:
                    return "Callisto (Jupiter)";
                  case 19:
                    return "Bing Maps Aerial";
                  default:
                    return "";
                }
              }, T.initPlanetResources = function(w) {
              }, T.drawPlanets3D = function(w, f, R) {
                T.initPlanetResources(w);
                var O = m.UiTools.solarSystemToMeters(w.get_solarSystemCameraDistance());
                Math.min(1, Math.max(g.Util.log10(O) - 7.3, 0));
                var W = Math.min(1, Math.max(g.Util.log10(O) - 8.6, 0));
                if (E.Settings.get_active().get_solarSystemOrbits() && W > 0) {
                  for (var N = 1; N < 10; N++) {
                    var $ = N;
                    N === 9 && ($ = 19);
                    var S = Math.atan2(y.Planets._planet3dLocations[$].z, y.Planets._planet3dLocations[$].x);
                    T._drawSingleOrbit(w, y.Planets.planetColors[$], $, R, S, y.Planets._planet3dLocations[$], W);
                  }
                  var I = 9;
                  T._drawSingleOrbit(w, y.Planets.planetColors[I], I, R, 0, y.Planets._planet3dLocations[I], W);
                }
                t.ss.clearKeys(y.Planets._drawOrder);
                for (var x = w.cameraPosition.copy(), P = 0; P < 14; P++)
                  if (!(E.Settings.get_active().get_solarSystemLighting() && y.Planets._planetLocations[P].eclipsed)) {
                    var d = e.Vector3d.subtractVectors(x, e.Vector3d.subtractVectors(y.Planets._planet3dLocations[P], R));
                    t.ss.keyExists(y.Planets._drawOrder, d.length()) || (y.Planets._drawOrder[d.length()] = P);
                  }
                var U = e.Vector3d.subtractVectors(x, e.Vector3d.subtractVectors(y.Planets._planet3dLocations[19], R));
                t.ss.keyExists(y.Planets._drawOrder, U.length()) || (y.Planets._drawOrder[U.length()] = 19);
                for (var F = t.ss.enumerate(t.ss.keys(y.Planets._drawOrder)); F.moveNext(); ) {
                  var X = F.current, P = y.Planets._drawOrder[X];
                  T._drawPlanet3d(w, P, R);
                }
                return !0;
              }, T._drawSingleOrbit = function(w, f, R, O, W, N, $) {
                const S = 1327124400188e-1, I = 398600.44189, x = 4902.7779, P = 126686534;
                if (!($ < 0.01))
                  if (w.gl == null) {
                    var d = y.Planets._orbitalSampleRate, U = !1;
                    w.get_viewPoint();
                    var F = w.device;
                    F.save(), F.strokeStyle = f.toString(), F.lineWidth = 2, F.globalAlpha = 1;
                    for (var X = new e.Vector3d(), Y = new e.Vector3d(), M = new e.Vector3d(), B = !0, D = e.Matrix3d.translation(e.Vector3d.negate(O)), k = e.Matrix3d.multiplyMatrix(D, w.WVP), G = e.Matrix3d.multiplyMatrix(D, w.WV), j = 0; j < d; j++) {
                      var ee = y.Planets._orbits[R][j], Z = (Math.atan2(y.Planets._orbits[R][j].z, y.Planets._orbits[R][j].x) + Math.PI * 2 - W) % (Math.PI * 2), z = t.ss.truncate(Z / (Math.PI * 2) * 255), te = z / 255;
                      z < 2 && !U && (ee = N, te = 1), Y = G.transform(ee), X = k.transform(ee), Y.z > 0 && (B ? B = !1 : (F.beginPath(), F.globalAlpha = te * $, F.moveTo(M.x, M.y), F.lineTo(X.x, X.y), F.stroke())), M = X;
                    }
                    F.restore();
                  } else if (R !== 9) {
                    var d = y.Planets._orbitalSampleRate, U = !1;
                    w.get_viewPoint();
                    for (var X = new e.Vector3d(), Y = new e.Vector3d(), M = new e.Vector3d(), re = new V.Color(), B = !0, le = new o.OrbitLineList(), j = 0; j < d; j++) {
                      var ee = y.Planets._orbits[R][j].copy(), Z = (Math.atan2(ee.z, ee.x) + Math.PI * 2 - W) % (Math.PI * 2), z = t.ss.truncate(Z / (Math.PI * 2) * 255), te = z / 255, ae = V.Color.fromArgb(z, f.r, f.g, f.b);
                      z < 2 && !U && !B && (ee = e.Vector3d.subtractVectors(N, O), te = 1, z = 255, ae.a = 255, re.a = 255, le.addLine(M, ee.copy(), re._clone(), ae._clone()), re.a = 0, ae.a = 0, ee = y.Planets._orbits[R][j].copy(), U = !0), ee = e.Vector3d.subtractVectors(ee, O), B ? B = !1 : le.addLine(M, ee, re, ae), M = ee, re = ae._clone();
                    }
                    le.drawLines(w, 1, V.Colors.get_white()), le.clear();
                  } else {
                    var oe = 0;
                    switch (R) {
                      case 9:
                        oe = I + x;
                        break;
                      case 10:
                      case 11:
                      case 12:
                      case 13:
                        oe = P;
                        break;
                      default:
                        oe = S;
                        break;
                    }
                    var de = 1 / 1440 * 0.1, ve = y.Planets.getPlanetPositionDirect(R, y.Planets._jNow), ce = y.Planets.getPlanetPositionDirect(R, y.Planets._jNow - de), he = e.Vector3d.scale(e.Vector3d.subtractVectors(ve, ce), 1 / de), ye = y.Planets._stateVectorToKeplerian(ve, he, oe);
                    T._drawSingleOrbitElements(w, f, R, O, W, N, ye);
                  }
              }, T._drawSingleOrbitElements = function(w, f, R, O, W, N, $) {
                var S;
                switch (R) {
                  case 9:
                    E.Settings.get_active().get_solarSystemScale() > 1 ? S = E.Settings.get_active().get_solarSystemScale() / 2 : S = 1;
                    break;
                  case 10:
                  case 11:
                  case 12:
                  case 13:
                    S = E.Settings.get_active().get_solarSystemScale();
                    break;
                  default:
                    S = 1;
                    break;
                }
                var I = e.Vector3d.negate(O);
                R === 9 ? I.add(y.Planets._planet3dLocations[19]) : (R === 10 || R === 11 || R === 12 || R === 13) && I.add(y.Planets._planet3dLocations[4]);
                var x = e.Vector3d.subtractVectors(N, O), P = e.Matrix3d.multiplyMatrix(e.Matrix3d.multiplyMatrix($.orientation, e.Matrix3d.translation(I)), w.get_world());
                A.EllipseRenderer.drawEllipseWithPosition(w, $.a / 149598e3 * S, $.e, $.ea, f, P, x);
              }, T.isPlanetInFrustum = function(w, f) {
                var R = w.get_frustum();
                e.Vector3d.create(0, 0, 0);
                for (var O = new e.Vector4d(0, 0, 0, 1), W = 0; W < 6; W++)
                  if (R[W].dot(O) + f < 0)
                    return !1;
                return !0;
              }, T._drawPlanet3d = function(w, f, R) {
                f === 0 ? l.TileShader.minLightingBrightness = 1 : (l.TileShader.minLightingBrightness = 0.025, f === 19 ? l.TileShader.atmosphereColor = V.Color.fromArgb(255, 65, 157, 217) : l.TileShader.atmosphereColor = V.Color.fromArgb(0, 0, 0, 0));
                var O = w.get_world(), W = w.get_worldBase(), N = w.get_worldBaseNonRotating(), $ = y.Planets.getAdjustedPlanetRadius(f);
                y.Planets.setupPlanetMatrix(w, f, R, !0);
                var S = 1;
                if (f === 5 && (S = 3), T.isPlanetInFrustum(w, S)) {
                  w.get_world(), w.get_worldBase(), w.get_worldBaseNonRotating();
                  var I = y.Planets._planet3dLocations[0].copy(), x = y.Planets._planet3dLocations[f].copy();
                  I = O.transform(I), x = O.transform(x), w.set_world(O), w.set_worldBase(W), w.set_worldBaseNonRotating(N), y.Planets._setupMatrixForPlanetGeometry(w, f, R, !0);
                  var P = e.Vector3d.subtractVectors(I, x);
                  P.normalize(), w.set_sunPosition(P), l.TileShader.sunPosition = e.Vector3d.subtractVectors(y.Planets._planet3dLocations[0], x);
                  var d = e.Vector3d.subtractVectors(y.Planets._planet3dLocations[f], R);
                  d.subtract(w.cameraPosition);
                  var U = d.length(), F = 2 * Math.atan(0.5 * ($ / U)) / Math.PI * 180, X = 0;
                  if (F > 10.5 ? X = 0 : F > 3.9 ? X = 1 : F > 0.72 ? X = 2 : F > 0.05 ? X = 3 : X = 4, f === 19 && X < 2 && E.Settings.get_active().get_solarSystemScale() * 1e-5, X < 4) {
                    var Y = w.lighting;
                    f === 5 && w.gl == null && (w.lighting = !1, T.drawSaturnsRings(w, !1, U), w.lighting = Y), f || (w.lighting = !1), T._drawSphere(w, f), f === 5 && (w.gl == null ? (w.lighting = !1, T.drawSaturnsRings(w, !0, U)) : (w.lighting = !1, T._drawRings(w), w.lighting = Y)), w.lighting = Y;
                  } else if (!f)
                    a.BasePlanets.drawPointPlanet(w, new e.Vector3d(), 10 * y.Planets._planetDiameters[f], y.Planets.planetColors[f], !0);
                  else if (f < 9 || f === 19) {
                    var M = 800 * y.Planets._planetDiameters[f];
                    a.BasePlanets.drawPointPlanet(w, new e.Vector3d(), Math.max(0.05, Math.min(0.1, M)), y.Planets.planetColors[f], !0);
                  } else if (F > 2e-3) {
                    var M = 800 * y.Planets._planetDiameters[f];
                    a.BasePlanets.drawPointPlanet(w, new e.Vector3d(), Math.max(0.05, Math.min(0.1, M)), y.Planets.planetColors[f], !0);
                  }
                }
                K.LayerManager._draw(w, 1, !1, y.Planets.getNameFrom3dId(f), !0, !1), w.set_world(O), w.set_worldBase(W), w.set_worldBaseNonRotating(N);
              }, T.drawSaturnsRings = function(w, f, R) {
                if (T._ringsTriangleLists[0] == null) {
                  T._ringImage = document.createElement("img");
                  var O = T._ringImage;
                  O.crossOrigin = "anonymous", T._ringImage.src = L.URLHelpers.singleton.engineAssetUrl("saturnringsshadow.png"), T._ringsTriangleLists[0] = [], T._ringsTriangleLists[1] = [];
                  var W = 2.25, N = e.Vector3d.create(-W, 0, -W), $ = e.Vector3d.create(W, 0, -W), S = e.Vector3d.create(-W, 0, W), I = e.Vector3d.create(W, 0, W);
                  e.Vector3d.create(0, 0, 0), e.Vector3d.create(-W, 0, 0), e.Vector3d.create(0, 0, -W), e.Vector3d.create(0, 0, W), e.Vector3d.create(W, 0, 0);
                  var x = 6, P;
                  P = [];
                  var d = 1024, U = 1024;
                  P.push(e.PositionTexture.createPosSize(N, 0, 0, d, U)), P.push(e.PositionTexture.createPosSize($, 1, 0, d, U)), P.push(e.PositionTexture.createPosSize(S, 0, 1, d, U)), P.push(e.PositionTexture.createPosSize(I, 1, 1, d, U));
                  var F = [];
                  F.push(v.Triangle.create(0, 2, 1)), F.push(v.Triangle.create(2, 3, 1));
                  for (var X = 5; X-- > 1; ) {
                    for (var Y = [], M = t.ss.enumerate(F); M.moveNext(); ) {
                      var B = M.current;
                      B.subDivideNoNormalize(Y, P);
                    }
                    F = Y;
                  }
                  for (var D = 0.6 / (d / 256), k = t.ss.enumerate(F); k.moveNext(); ) {
                    var B = k.current, G = P[B.a], j = P[B.b], ee = P[B.c];
                    T._ringsTriangleLists[0].push(C.RenderTriangle.createWithMiter(G, j, ee, T._ringImage, x, D));
                  }
                }
                if (w.gl == null) {
                  w.cameraPosition;
                  var Z = new e.Vector3d(), z = e.Matrix3d.multiplyMatrix(e.Matrix3d._rotationY(Math.atan2(w.get_sunPosition().x, w.get_sunPosition().z)), w.get_worldBaseNonRotating()), te = e.Matrix3d.multiplyMatrix(z, w.get_view()), re = e.Matrix3d.multiplyMatrix(te, w.get_projection()), d = w.width, U = w.height;
                  re.scale(e.Vector3d.create(d / 2, -U / 2, 1)), re.translate(e.Vector3d.create(d / 2, U / 2, 0));
                  for (var le = 0, ae = 0; ae < 2; ae++) {
                    for (var oe = t.ss.enumerate(T._ringsTriangleLists[0]); oe.moveNext(); ) {
                      var B = oe.current;
                      Z = te.transform(B.a.position), le = Z.length();
                      var de = le > R;
                      f && (de = !de), de && (B.opacity = 1, B.draw(w.device, re));
                    }
                    C.RenderTriangle.cullInside = !C.RenderTriangle.cullInside;
                  }
                }
              }, T._drawRings = function(w) {
                T._initRings(), l.TileShader.use(w, T._ringsVertexBuffer.vertexBuffer, null, y.Planets._ringsTexture.texture2d, 1, !1, e.Vector3d.zero), w.gl.drawArrays(_.WEBGL.TRIANGLE_STRIP, 0, T._triangleCountRings);
              }, T._initRings = function() {
                if (T._ringsVertexBuffer == null) {
                  y.Planets._ringsTexture = c.Texture.fromUrl(L.URLHelpers.singleton.engineAssetUrl("saturnringsstrip.png"));
                  var w = 1.113, f = 2.25;
                  T._ringsVertexBuffer = new r.PositionTextureVertexBuffer(386), T._triangleCountRings = 386;
                  for (var R = T._ringsVertexBuffer.lock(), O = Math.PI * 2 / 192, W = 0, N = 0; N <= 192; N += 2) {
                    var $ = N * O, S = (N + 1) * O;
                    R[W] = new e.PositionTexture(), R[W].position = e.Vector3d.create(Math.cos($) * w, 0, Math.sin($) * w), R[W].tu = 1, R[W].tv = 0, W++, R[W] = new e.PositionTexture(), R[W].position = e.Vector3d.create(Math.cos($) * f, 0, Math.sin($) * f), R[W].tu = 0, R[W].tv = 0, W++, R[W] = new e.PositionTexture(), R[W].position = e.Vector3d.create(Math.cos(S) * w, 0, Math.sin(S) * w), R[W].tu = 1, R[W].tv = 1, W++, R[W] = new e.PositionTexture(), R[W].position = e.Vector3d.create(Math.cos(S) * f, 0, Math.sin(S) * f), R[W].tu = 0, R[W].tv = 1, W++;
                  }
                  T._ringsVertexBuffer.unlock();
                }
              }, T._drawSphere = function(w, f) {
                var R = T.getImageSetNameNameFrom3dId(f), O = b.globalWWTControl.getImagesetByName(R);
                if (O == null && (O = b.globalWWTControl.getImagesetByName("Bing Maps Aerial")), O != null) {
                  w.drawImageSet(O, 100);
                  return;
                }
              }, (0, n.registerType)("Planets3d", [T, {}, null]);
            }
          ),
          /***/
          "./esm/plot_tile.js": (
            /*!**************************!*\
              !*** ./esm/plot_tile.js ***!
              \**************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                PlotTile: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./baseplanets.js */
                "./esm/baseplanets.js"
              ), o = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), c = i(
                /*! ./star.js */
                "./esm/star.js"
              ), l = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), g = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              ), a = i(
                /*! ./tile.js */
                "./esm/tile.js"
              );
              function b() {
                this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._stars$1 = [], this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, a.Tile.call(this);
              }
              b.create = function(y, C, E, v, m) {
                var L = new b();
                return L.parent = m, L.level = y, L.tileX = C, L.tileY = E, L.dataset = v, L._topDown$1 = !v.get_bottomsUp(), L.tileX !== C && alert("bad"), v.get_meanRadius() ? L.set__demScaleFactor(v.get_meanRadius()) : v.get_dataSetType() ? L.set__demScaleFactor(3396010) : L.set__demScaleFactor(6371e3), L.computeBoundingSphere(), L;
              };
              var V = {
                computeBoundingSphere: function() {
                  this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
                },
                renderPart: function(y, C, E, v) {
                  if (y.gl == null) {
                    if (!C)
                      for (var m = t.ss.enumerate(this._stars$1); m.moveNext(); ) {
                        var L = m.current, A = 25 / Math.pow(1.6, L.magnitude);
                        r.BasePlanets.drawPointPlanet(y, L.position, A, L.col, !1);
                      }
                  }
                },
                requestImage: function() {
                  !this.downloading && !this.readyToRender && (this.downloading = !0, this._webFile$1 = new g.WebFile(l.URLHelpers.singleton.rewrite(this.get_URL(), 0)), this._webFile$1.onStateChange = t.ss.bind("fileStateChange", this), this._webFile$1.send());
                },
                fileStateChange: function() {
                  this._webFile$1.get_state() === 2 ? (this.downloading = !1, this.readyToRender = !1, this.errored = !0, this.requestPending = !1, (0, e.tileCacheRemoveFromQueue)(this.get_key(), !0)) : this._webFile$1.get_state() === 1 && (this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = this.texReady && (this.demReady || !this.demTile), this.requestPending = !1, (0, e.tileCacheRemoveFromQueue)(this.get_key(), !0), this._loadData$1(this._webFile$1.getText()));
                },
                _loadData$1: function(y) {
                  for (var C = t.ss.replaceString(y, `\r
`, `
`).split(`
`), E = !0, v = null, m = t.ss.enumerate(C); m.moveNext(); ) {
                    var L = m.current;
                    if (E) {
                      E = !1;
                      continue;
                    }
                    t.ss.trim(L).length > 5 && (v = new c.Star(L), v.position = o.Coordinates.raDecTo3dAu(v.RA, v.dec, 1), this._stars$1.push(v));
                  }
                },
                isPointInTile: function(y, C) {
                  if (!this.level)
                    return !0;
                  if (this.level === 1)
                    return C >= 0 && C <= 90 && !this.tileX && this.tileY === 1 || C > 90 && C <= 180 && this.tileX === 1 && this.tileY === 1 || C < 0 && C >= -90 && !this.tileX && !this.tileY || C < -90 && C >= -180 && this.tileX === 1 && !this.tileY;
                  if (!this.demReady || this.demData == null)
                    return !1;
                  var E = o.Coordinates.geoTo3dDouble(-y, C), v = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), E), m = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), E), L = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), E), A = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), E);
                  return !!(v && m && L && A);
                },
                _isLeftOfHalfSpace$1: function(y, C, E) {
                  y.normalize(), C.normalize();
                  var v = _.Vector3d.cross(y, C), m = _.Vector3d.dot(v, E);
                  return m < 0;
                },
                _initializeGrids$1: function() {
                  if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
                    this.parent == null && (this.parent = (0, e.tileCacheGetTile)(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
                    var y = this.parent, C = this.tileX % 2, E = this.tileY % 2;
                    this.level > 1 ? this.backslash = y.backslash : this.backslash = (C === 1 ^ E === 1) === 1, this.bounds[0 + 3 * 0] = y.bounds[C + 3 * E].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(y.bounds[C + 3 * E], y.bounds[C + 1 + 3 * E]), this.bounds[2 + 3 * 0] = y.bounds[C + 1 + 3 * E].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(y.bounds[C + 3 * E], y.bounds[C + 3 * (E + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(y.bounds[C + 3 * E], y.bounds[C + 1 + 3 * (E + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(y.bounds[C + 1 + 3 * E], y.bounds[C + 3 * (E + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(y.bounds[C + 1 + 3 * E], y.bounds[C + 1 + 3 * (E + 1)]), this.bounds[0 + 3 * 2] = y.bounds[C + 3 * (E + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(y.bounds[C + 3 * (E + 1)], y.bounds[C + 1 + 3 * (E + 1)]), this.bounds[2 + 3 * 2] = y.bounds[C + 1 + 3 * (E + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 0].tv = 0 * e.tileUvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 0].tv = 0 * e.tileUvMultiple, this.bounds[2 + 3 * 0].tu = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 0].tv = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 1].tu = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * e.tileUvMultiple, this.bounds[2 + 3 * 1].tu = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * e.tileUvMultiple, this.bounds[0 + 3 * 2].tu = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 2].tv = 1 * e.tileUvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 2].tv = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 2].tu = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 2].tv = 1 * e.tileUvMultiple;
                  } else
                    this.bounds[0 + 3 * 0] = _.PositionTexture.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = _.PositionTexture.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = _.PositionTexture.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = _.PositionTexture.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = _.PositionTexture.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = _.PositionTexture.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = _.PositionTexture.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = _.PositionTexture.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = _.PositionTexture.create(0, -1, 0, 1, 1);
                },
                _midpoint$1: function(y, C) {
                  var E = _.Vector3d.lerp(y.position, C.position, 0.5), v = _.Vector2d.lerp(_.Vector2d.create(y.tu, y.tv), _.Vector2d.create(C.tu, C.tv), 0.5);
                  return E.normalize(), _.PositionTexture.createPos(E, v.x, v.y);
                },
                createGeometry: function(y) {
                  return this.geometryCreated || (this.geometryCreated = !0, a.Tile.prototype.createGeometry.call(this, y)), !0;
                },
                cleanUp: function(y) {
                  a.Tile.prototype.cleanUp.call(this, y), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
                }
              };
              (0, n.registerType)("PlotTile", [b, V, a.Tile]);
            }
          ),
          /***/
          "./esm/pointing.js": (
            /*!*************************!*\
              !*** ./esm/pointing.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Pointing: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./healpix_utils.js */
                "./esm/healpix_utils.js"
              );
              function _() {
                this.theta = 0, this.phi = 0;
              }
              _.create = function(o, c) {
                var l = new _();
                return l.theta = o, l.phi = c, l;
              };
              var r = {
                normalizeTheta: function() {
                  this.theta = e.HealpixUtils.fmodulo(this.theta, 2 * Math.PI), this.theta > Math.PI && (this.phi += Math.PI, this.theta = 2 * Math.PI - this.theta);
                },
                normalize: function() {
                  this.normalizeTheta(), this.phi = e.HealpixUtils.fmodulo(this.phi, 2 * Math.PI);
                },
                toString: function() {
                  var o = new t.ss.StringBuilder();
                  return o.append("ptg("), o.append(this.theta), o.append(","), o.append(this.phi), o.append(")"), o.toString();
                }
              };
              (0, n.registerType)("Pointing", [_, r, null]);
            }
          ),
          /***/
          "./esm/render_context.js": (
            /*!*******************************!*\
              !*** ./esm/render_context.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                InViewReturnMessage: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                RenderContext: () => (
                  /* binding */
                  T
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), r = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), o = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), c = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), l = i(
                /*! ./graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), g = i(
                /*! ./camera_parameters.js */
                "./esm/camera_parameters.js"
              ), a = i(
                /*! ./color.js */
                "./esm/color.js"
              ), b = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), V = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), y = i(
                /*! ./planets.js */
                "./esm/planets.js"
              ), C = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), E = i(
                /*! ./settings.js */
                "./esm/settings.js"
              ), v = i(
                /*! ./space_time_controller.js */
                "./esm/space_time_controller.js"
              ), m = i(
                /*! ./layers/spreadsheet_layer.js */
                "./esm/layers/spreadsheet_layer.js"
              ), L = i(
                /*! ./layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              );
              function A() {
                this.aborted = !1;
              }
              var K = {};
              (0, n.registerType)("InViewReturnMessage", [A, K, null]);
              function T() {
                this.height = 0, this.width = 0, this.lighting = !1, this._viewPoint = new e.Vector3d(), this.space = !1, this._fovAngle = 0, this._fovScale = 0, this._nominalRadius = 6378137, this._mainTexture = null, this.viewMover = null, this.viewCamera = new g.CameraParameters(), this.targetCamera = new g.CameraParameters(), this.alt = 0, this.az = 0, this.targetAlt = 0, this.targetAz = 0, this._backgroundImageset = null, this._foregroundImageset = null, this._activeCatalogHipsImagesets = [], this._targetHeight = 1, this.targetAltitude = 0, this._galactic = !0, this._galacticMatrix = e.Matrix3d.create(-0.4838350155, -0.0548755604, -0.8734370902, 0, 0.7469822445, 0.4941094279, -0.44482963, 0, 0.4559837762, -0.867666149, -0.1980763734, 0, 0, 0, 0, 1), this._firstTimeInit = !1, this._useSolarSystemTilt = !0, this.customTrackingParams = new g.CameraParameters(), this._cameraOffset = new e.Vector3d(), this._fovLocal = Math.PI / 4, this.perspectiveFov = Math.PI / 4, this.nearPlane = 0, this._frustumDirty = !0, this._frustum = new Array(6), this._ambientLightColor = a.Colors.get_black(), this._hemiLightColor = a.Colors.get_black(), this._hemiLightUp = new e.Vector3d(), this._sunlightColor = a.Colors.get_white(), this._sunPosition = new e.Vector3d(), this._reflectedLightColor = a.Colors.get_black(), this._reflectedLightPosition = new e.Vector3d(), this._occludingPlanetRadius = 0, this._occludingPlanetPosition = new e.Vector3d(), this._lightingStateDirty = !0, this._twoSidedLighting = !1, this.cameraPosition = new e.Vector3d(), this._skyColor = "Blue";
                for (var f = 0; f < 6; f++)
                  this._frustum[f] = new e.PlaneD(0, 0, 0, 0);
              }
              T.back = 0, T.create = function(f) {
                var R = new T();
                return R.device = f, R.viewCamera.zoom = 700, R.viewCamera.target = 65536, R;
              }, T.getTilesYForLevel = function(f, R) {
                var O = 1;
                switch (f.get_projection()) {
                  case V.ProjectionType.mercator:
                    O = Math.pow(2, R);
                    break;
                  case V.ProjectionType.equirectangular:
                    O = Math.pow(2, R) * (180 / f.get_baseTileDegrees());
                    break;
                  case V.ProjectionType.tangent:
                    O = Math.pow(2, R);
                    break;
                  case V.ProjectionType.spherical:
                    O = 1;
                    break;
                  case V.ProjectionType.healpix:
                    O = 4 * Math.pow(2, R);
                    break;
                  default:
                    O = Math.pow(2, R);
                    break;
                }
                return O === Number.POSITIVE_INFINITY && (O = 1), O;
              }, T.getTilesXForLevel = function(f, R) {
                var O = 1;
                switch (f.get_projection()) {
                  case V.ProjectionType.plotted:
                  case V.ProjectionType.toast:
                    O = Math.pow(2, R);
                    break;
                  case V.ProjectionType.mercator:
                    O = Math.pow(2, R) * t.ss.truncate(f.get_baseTileDegrees() / 360);
                    break;
                  case V.ProjectionType.equirectangular:
                    O = Math.pow(2, R) * t.ss.truncate(360 / f.get_baseTileDegrees());
                    break;
                  case V.ProjectionType.tangent:
                    f.get_widthFactor() === 1 ? O = Math.pow(2, R) * 2 : O = Math.pow(2, R);
                    break;
                  case V.ProjectionType.skyImage:
                    O = 1;
                    break;
                  case V.ProjectionType.spherical:
                    O = 1;
                    break;
                  case V.ProjectionType.healpix:
                    O = Math.pow(2, R) * 3;
                    break;
                  default:
                    O = Math.pow(2, R) * 2;
                    break;
                }
                return O;
              };
              var w = {
                save: function() {
                  this.gl != null || this.device.save();
                },
                restore: function() {
                  this.gl != null || this.device.restore();
                },
                clear: function() {
                  this.gl != null ? (this.gl.viewport(0, 0, t.ss.truncate(this.width), t.ss.truncate(this.height)), this.gl.clear(c.WEBGL.COLOR_BUFFER_BIT | c.WEBGL.DEPTH_BUFFER_BIT)) : (this.device.save(), this.device.fillStyle = "black", this.device.fillRect(0, 0, this.width, this.height), this.device.restore());
                },
                get_viewPoint: function() {
                  return this._viewPoint;
                },
                get_RA: function() {
                  return ((180 - (this.viewCamera.lng - 180)) / 15 % 24 + 48) % 24;
                },
                rAtoViewLng: function(f) {
                  return 180 - f / 24 * 360 - 180;
                },
                get_dec: function() {
                  return this.viewCamera.lat;
                },
                get_fovAngle: function() {
                  return this._fovAngle;
                },
                get_fovScale: function() {
                  return this._fovScale;
                },
                set_fovScale: function(f) {
                  return this._fovScale = f, f;
                },
                get_view: function() {
                  return this._view;
                },
                set_view: function(f) {
                  return this._view = f, this._frustumDirty = !0, f;
                },
                get_viewBase: function() {
                  return this._viewBase;
                },
                set_viewBase: function(f) {
                  return this._viewBase = f, f;
                },
                get_projection: function() {
                  return this._projection;
                },
                set_projection: function(f) {
                  return this._projection = f, this._frustumDirty = !0, f;
                },
                get_world: function() {
                  return this._world;
                },
                set_world: function(f) {
                  return this._world = f, this._frustumDirty = !0, f;
                },
                _getScreenTexture: function() {
                  var f = null;
                  return f;
                },
                get_worldBase: function() {
                  return this._worldBase;
                },
                set_worldBase: function(f) {
                  return this._worldBase = f, f;
                },
                get_worldBaseNonRotating: function() {
                  return this._worldBaseNonRotating;
                },
                set_worldBaseNonRotating: function(f) {
                  return this._worldBaseNonRotating = f, f;
                },
                get_nominalRadius: function() {
                  return this._nominalRadius;
                },
                set_nominalRadius: function(f) {
                  return this._nominalRadius = f, f;
                },
                get_mainTexture: function() {
                  return this._mainTexture;
                },
                set_mainTexture: function(f) {
                  return f != null && (this._mainTexture = f, this.gl.bindTexture(c.WEBGL.TEXTURE_2D, this._mainTexture.texture2d)), f;
                },
                onTarget: function(f) {
                  return Math.abs(this.viewCamera.lat - this.targetCamera.lat) < 1e-12 && Math.abs(this.viewCamera.lng - this.targetCamera.lng) < 1e-12 && Math.abs(this.viewCamera.zoom - this.targetCamera.zoom) < 1e-12 && this.viewMover == null;
                },
                setTexture: function(f) {
                },
                get_backgroundImageset: function() {
                  return this._backgroundImageset;
                },
                set_backgroundImageset: function(f) {
                  var R = this._backgroundImageset != null && f != null && this._backgroundImageset.get_dataSetType() !== f.get_dataSetType();
                  return this._backgroundImageset = f, R && (_.globalWWTControl._freezeView(), _.globalWWTControl.clampZooms(this)), f;
                },
                get_foregroundImageset: function() {
                  return this._foregroundImageset;
                },
                set_foregroundImageset: function(f) {
                  return this._foregroundImageset = f, f;
                },
                get_catalogHipsImagesets: function() {
                  return this._activeCatalogHipsImagesets;
                },
                getCatalogHipsDataInView: function(f, R, O) {
                  var W = this, N = new m.CatalogSpreadSheetLayer(), $ = function() {
                    N.useHeadersFromVoTable(f.get_hipsProperties().get_catalogColumnInfo()), W._tryGetAllDataInView(f, R, N, O, 0);
                  };
                  f.get_hipsProperties() == null ? (f.set_hipsProperties((0, _.makeNewHipsProperties)(f)), f.get_hipsProperties().setDownloadCompleteListener($)) : f.get_hipsProperties() != null && f.get_hipsProperties().get_downloadComplete() ? $() : f.get_hipsProperties().setDownloadCompleteListener($);
                },
                _tryGetAllDataInView: function(f, R, O, W, N) {
                  for (var $ = this, S = T.getTilesXForLevel(f, f.get_baseLevel()), I = T.getTilesYForLevel(f, f.get_baseLevel()), x = !1, P = 0; P < S; P++)
                    for (var d = 0; d < I; d++) {
                      var U = (0, r.tileCacheGetTile)(f.get_baseLevel(), P, d, f, null);
                      if (U != null) {
                        var F = U.getDataInView(this, R, O);
                        x = x || !F;
                      } else
                        x = !0;
                    }
                  if (x) {
                    var X = O.get__table().rows.length;
                    if ((X > 1e4 || N > 100 * 60 * 5) && R) {
                      console.log("Too Many results - Aborting"), console.log(X);
                      var Y = new A();
                      Y.aborted = !0, Y.table = O.getTableDataInView(), W(Y), O.cleanUp();
                    } else
                      setTimeout(function() {
                        $._tryGetAllDataInView(f, R, O, W, N);
                      }, 10), N % 200 || (console.log("Waiting for more tiles to load"), console.log(X)), N++;
                  } else {
                    var X = O.get__table().rows.length;
                    console.log("Done!"), console.log(X);
                    var Y = new A();
                    Y.aborted = !1, Y.table = O.getTableDataInView(), W(Y), O.cleanUp();
                  }
                },
                addCatalogHips: function(f, R) {
                  this._activeCatalogHipsImagesets.indexOf(f) >= 0 || this._activeCatalogHipsImagesets.push(f), f.get_hipsProperties() == null ? (f.set_hipsProperties((0, _.makeNewHipsProperties)(f)), f.get_hipsProperties().setDownloadCompleteListener(R)) : f.get_hipsProperties() != null && f.get_hipsProperties().get_downloadComplete() && (L.LayerManager.addSpreadsheetLayer(f.get_hipsProperties().get_catalogSpreadSheetLayer(), "Sky"), R != null && R());
                },
                removeCatalogHips: function(f) {
                  t.ss.remove(this._activeCatalogHipsImagesets, f), f.get_hipsProperties() != null && L.LayerManager.deleteLayerByID(f.get_hipsProperties().get_catalogSpreadSheetLayer().id, !0, !0);
                },
                getCatalogHipsByName: function(f) {
                  for (var R = t.ss.enumerate(this._activeCatalogHipsImagesets); R.moveNext(); ) {
                    var O = R.current;
                    if (O.get_name() === f)
                      return O;
                  }
                  return null;
                },
                getAltitudeForLatLongForPlanet: function(f, R, O) {
                  var W = _.globalWWTControl.getImagesetByName(y.Planets.getNameFrom3dId(f));
                  if (W == null)
                    return 0;
                  for (var N = T.getTilesXForLevel(W, W.get_baseLevel()), $ = T.getTilesYForLevel(W, W.get_baseLevel()), S = 0; S < N; S++)
                    for (var I = 0; I < $; I++) {
                      var x = (0, r.tileCacheGetTile)(W.get_baseLevel(), S, I, W, null);
                      if (x != null && x.isPointInTile(R, O))
                        return x.getSurfacePointAltitude(R, O, !0);
                    }
                  return 0;
                },
                getEarthAltitude: function(f, R, O) {
                  if (_.globalWWTControl.get_solarSystemMode()) {
                    var W = b.Coordinates.geoTo3dDouble(f, R + 90), N = y.Planets.earthMatrixInv;
                    W = e.Vector3d._transformCoordinate(W, N), W.normalize();
                    var $ = b.Coordinates.cartesianToLatLng(W);
                    return this.getAltitudeForLatLongForPlanet(this.viewCamera.target, $.y, $.x);
                  } else
                    return this.get_backgroundImageset().get_dataSetType() != V.ImageSetType.earth ? O ? this.getMetersAltitudeForLatLong(f, R) : this.getScaledAltitudeForLatLong(f, R) : 0;
                },
                drawImageSet: function(f, R) {
                  for (var O = T.getTilesXForLevel(f, f.get_baseLevel()), W = T.getTilesYForLevel(f, f.get_baseLevel()), N = 0; N < O; N++)
                    for (var $ = 0; $ < W; $++) {
                      var S = (0, r.tileCacheGetTile)(f.get_baseLevel(), N, $, f, null);
                      S != null && S.draw3D(this, R);
                    }
                },
                _getTileAtLatLong: function(f, R) {
                  var O = this.get_backgroundImageset();
                  if (O == null)
                    return null;
                  for (var W = T.getTilesXForLevel(O, O.get_baseLevel()), N = T.getTilesYForLevel(O, O.get_baseLevel()), $ = 0; $ < W; $++)
                    for (var S = 0; S < N; S++) {
                      var I = (0, r.tileCacheGetTile)(O.get_baseLevel(), $, S, O, null);
                      if (I != null && I.isPointInTile(f, R))
                        return I;
                    }
                  return null;
                },
                getScaledAltitudeForLatLong: function(f, R) {
                  var O = this._getTileAtLatLong(f, R);
                  return O != null ? O.getSurfacePointAltitude(f, R, !1) : 0;
                },
                getMetersAltitudeForLatLong: function(f, R) {
                  var O = this._getTileAtLatLong(f, R);
                  return O != null ? O.getSurfacePointAltitude(f, R, !0) : 0;
                },
                _setupMatricesLand3d: function() {
                  this.lighting = !1, this.space = !1, C.RenderTriangle.cullInside = !1;
                  var f = e.Matrix3d._rotationY((this.viewCamera.lng - 90) / 180 * Math.PI);
                  f._multiply(e.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this.set_world(f), this.set_worldBase(f.clone()), this._viewPoint = b.Coordinates.geoTo3d(this.viewCamera.lat, this.viewCamera.lng);
                  var R = 0;
                  if (this._backgroundImageset.get_isMandelbrot() ? R = 4 * (this.viewCamera.zoom / 180) + 1e-41 : R = 4 * (this.viewCamera.zoom / 180) + 1e-6, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this.gl != null) {
                    this.targetAltitude = this.getScaledAltitudeForLatLong(this.viewCamera.lat, this.viewCamera.lng);
                    var O = 1 + this.targetAltitude;
                    this.targetAltitude *= this.get_nominalRadius(), this._targetHeight < O ? this._targetHeight = (this._targetHeight * 2 + O) / 3 : this._targetHeight = (this._targetHeight * 9 + O) / 10;
                  } else
                    this.targetAltitude = 0, this._targetHeight = 1;
                  var W = this.viewCamera.rotation;
                  this.cameraPosition = e.Vector3d.create(Math.sin(W) * Math.sin(this.viewCamera.angle) * R, Math.cos(W) * Math.sin(this.viewCamera.angle) * R, -this._targetHeight - Math.cos(this.viewCamera.angle) * R);
                  var N = e.Vector3d.create(0, 0, -this._targetHeight);
                  this.cameraPosition.length();
                  var $ = e.Vector3d.create(Math.sin(W) * Math.cos(this.viewCamera.angle), Math.cos(W) * Math.cos(this.viewCamera.angle), Math.sin(this.viewCamera.angle));
                  this.set_view(e.Matrix3d.lookAtLH(this.cameraPosition, N, $)), this.set_viewBase(this.get_view());
                  var S = Math.sqrt((R + 1) * (R + 1) - 1);
                  S = Math.max(0.5, S);
                  var I = R * 0.05;
                  I = R * 0.05, this.set_projection(e.Matrix3d.perspectiveFovLH(Math.PI / 4, this.width / this.height, I, S)), this._setMatrixes(), this.makeFrustum();
                },
                setupMatricesSpace3d: function(f, R) {
                  this.lighting = !1, this._firstTimeInit || (this._galacticMatrix = e.Matrix3d.get_identity(), this._galacticMatrix._multiply(e.Matrix3d._rotationY(-(270 - 17.7603329867975 * 15) / 180 * Math.PI)), this._galacticMatrix._multiply(e.Matrix3d._rotationX(28.9361739586894 / 180 * Math.PI)), this._galacticMatrix._multiply(e.Matrix3d._rotationZ((31.422052860102 - 90) / 180 * Math.PI)), this._firstTimeInit = !0), this.space = !0, C.RenderTriangle.cullInside = !0;
                  var O = e.Matrix3d.get_identity();
                  if (E.Settings.get_active().get_galacticMode()) {
                    O._multiply(this._galacticMatrix), O._multiply(e.Matrix3d._rotationY(this.az / 180 * Math.PI)), O._multiply(e.Matrix3d._rotationX(-this.alt / 180 * Math.PI));
                    var W = b.Coordinates.galactictoJ2000(this.az, this.alt);
                    this._viewPoint = b.Coordinates.raDecTo3dAu(W[0] / 15, W[1], 1), this.targetCamera.lng = this.rAtoViewLng(W[0] / 15), this.targetCamera.lat = W[1], this.viewCamera.lat = this.targetCamera.lat, this.viewCamera.lng = this.targetCamera.lng;
                  } else
                    O._multiply(e.Matrix3d._rotationY(-(this.viewCamera.lng - 90) / 180 * Math.PI)), O._multiply(e.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this._viewPoint = b.Coordinates.raDecTo3dAu(this.get_RA(), this.get_dec(), 1);
                  var N = this.viewCamera.rotation;
                  if (this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / R * 3600, E.Settings.get_active().get_localHorizonMode() && this._backgroundImageset.get_dataSetType() == V.ImageSetType.sky) {
                    var $ = new b.Coordinates(0, 0);
                    $.set_az(0), $.set_alt(0);
                    var S = b.Coordinates.horizonToEquitorial($, v.SpaceTimeController.get_location(), v.SpaceTimeController.get_now()), I = -((S.get_RA() - 6) / 24 * (Math.PI * 2)), x = -(S.get_dec() / 360 * (Math.PI * 2));
                    b.Coordinates.formatDMS(S.get_RA()), O = e.Matrix3d._rotationY(-I - Math.PI), O._multiply(e.Matrix3d._rotationX(x)), v.SpaceTimeController.get_location().get_lat() < 0 ? (O._multiply(e.Matrix3d._rotationY(this.az / 180 * Math.PI)), O._multiply(e.Matrix3d._rotationX(this.alt / 180 * Math.PI)), N += Math.PI) : (O._multiply(e.Matrix3d._rotationY(-this.az / 180 * Math.PI)), O._multiply(e.Matrix3d._rotationX(-this.alt / 180 * Math.PI)));
                    var P = b.Coordinates.horizonToEquitorial(b.Coordinates.fromLatLng(this.alt, this.az), v.SpaceTimeController.get_location(), v.SpaceTimeController.get_now());
                    this.viewCamera.lat = this.targetCamera.lat = P.get_dec(), this.viewCamera.lng = this.targetCamera.lng = this.rAtoViewLng(P.get_RA());
                  }
                  this.set_world(O), this.set_worldBase(O.clone());
                  var d = this.viewCamera.zoom;
                  this.cameraPosition = e.Vector3d.create(0, 0, 0), this.set_view(e.Matrix3d.lookAtLH(this.cameraPosition, e.Vector3d.create(0, 0, -1), e.Vector3d.create(Math.sin(N), Math.cos(N), 0))), this.set_viewBase(this.get_view().clone()), this.nearPlane = 0.1, this.set_projection(e.Matrix3d.perspectiveFovLH(d / 343.774, f / R, 0.1, -2)), this._setMatrixes(), this.makeFrustum();
                },
                get_solarSystemTrack: function() {
                  return this.viewCamera.target;
                },
                set_solarSystemTrack: function(f) {
                  return this.viewCamera.target = f, f;
                },
                get_solarSystemCameraDistance: function() {
                  return 4 * (this.viewCamera.zoom / 9) + 1e-6;
                },
                get_sandboxMode: function() {
                  return this._backgroundImageset == null ? !1 : this._backgroundImageset.get_dataSetType() === V.ImageSetType.sandbox;
                },
                get_trackingFrame: function() {
                  return this.viewCamera.targetReferenceFrame;
                },
                set_trackingFrame: function(f) {
                  return this.viewCamera.targetReferenceFrame = f, f;
                },
                get_fovLocal: function() {
                  return this._fovLocal;
                },
                set_fovLocal: function(f) {
                  return this._fovLocal = f, f;
                },
                setupMatricesOverlays: function() {
                  this.set_world(e.Matrix3d.get_identity()), e.Matrix3d.get_identity();
                  var f = e.Vector3d.create(0, 0, 0), R = e.Vector3d.create(0, 0, 1), O = e.Vector3d.create(0, 1, 0), W;
                  W = e.Matrix3d.lookAtLH(f, R, O), W._multiply(e.Matrix3d._scaling(1, -1, 1)), this.set_view(W);
                  var N = 1e4;
                  this.nearPlane = 0.1, this.set_projection(e.Matrix3d.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, N));
                },
                setupMatricesSolarSystem: function(f) {
                  this.lighting = E.Settings.get_active().get_solarSystemLighting(), this.space = !1, this.get_solarSystemTrack() !== 20 && this.get_solarSystemTrack() !== 65536 && (this.viewCamera.viewTarget = y.Planets.getPlanetTargetPoint(this.get_solarSystemTrack(), this.viewCamera.lat, this.viewCamera.lng, 0)), C.RenderTriangle.cullInside = !1;
                  var R = this.get_solarSystemCameraDistance(), O = e.Matrix3d.get_identity();
                  if (R -= 1e-6, this.get_solarSystemTrack() === 20 && !t.ss.emptyString(this.get_trackingFrame())) {
                    var W = L.LayerManager._getFrameTarget(this, this.get_trackingFrame());
                    this.viewCamera.viewTarget = W.target, O = W.matrix;
                  } else
                    t.ss.emptyString(this.get_trackingFrame()) || this.set_trackingFrame("");
                  this.viewCamera.viewTarget, this.viewCamera.zoom * 20;
                  var N = new e.Vector3d(), $ = e.Matrix3d.get_identity();
                  $._multiply(e.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI)), $._multiply(e.Matrix3d._rotationY(-this.viewCamera.lng / 180 * Math.PI));
                  var S = e.Matrix3d.get_identity(), I;
                  if (this._useSolarSystemTilt && !this.get_sandboxMode()) {
                    var x = this.viewCamera.angle;
                    if (R > 8e-4)
                      x = 0;
                    else if (R > 1e-5) {
                      var P = Math.min(1.903089987, o.Util.log10(R) + 5) / 1.903089987;
                      x = x * Math.max(0, 1 - P);
                    }
                    this.cameraPosition = e.Vector3d.create(Math.sin(-this.viewCamera.rotation) * Math.sin(x) * R, Math.cos(-this.viewCamera.rotation) * Math.sin(x) * R, Math.cos(x) * R), I = e.Vector3d.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-5);
                  } else
                    this.cameraPosition = e.Vector3d.create(0, 0, R), I = e.Vector3d.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-4);
                  this.cameraPosition = $.transform(this.cameraPosition), this._cameraOffset = this.cameraPosition.copy();
                  var d = O.clone();
                  d.invert(), this._cameraOffset = e.Vector3d._transformCoordinate(this._cameraOffset, d), I = $.transform(I), this.set_world(e.Matrix3d.get_identity()), this.set_worldBase(e.Matrix3d.get_identity()), this.set_worldBaseNonRotating(e.Matrix3d.get_identity()), this.set_view(e.Matrix3d.multiplyMatrix(e.Matrix3d.multiplyMatrix(O, e.Matrix3d.lookAtLH(this.cameraPosition, N, I)), S)), this.set_viewBase(this.get_view().clone());
                  var U = e.Vector3d.subtractVectors(N, this.cameraPosition);
                  U.normalize(), U = e.Vector3d._transformCoordinate(U, O), U.normalize(), this._viewPoint = U;
                  var F = y.Planets.getAdjustedPlanetRadius(this.get_solarSystemTrack());
                  R < F * 2 && !f ? (this.nearPlane = R * 0.03, this.nearPlane = Math.max(this.nearPlane, 1e-11), T.back = 1900) : f ? (T.back = 900056, T.back = R > 900056 ? R * 3 : 900056, this.nearPlane = 3e-5) : (T.back = R > 1900 ? R + 200 : 1900, E.Settings.get_active().get_solarSystemScale() < 13 ? this.nearPlane = Math.min(R * 0.03, 0.01) : this.nearPlane = 1e-3), this.set_projection(e.Matrix3d.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, T.back)), this.perspectiveFov = this._fovLocal, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this._setMatrixes(), this.makeFrustum();
                },
                _setMatrixes: function() {
                },
                get_frustum: function() {
                  return this._frustum;
                },
                get_ambientLightColor: function() {
                  return this._ambientLightColor;
                },
                set_ambientLightColor: function(f) {
                  return this._ambientLightColor = f, this._lightingStateDirty = !0, f;
                },
                get_hemisphereLightColor: function() {
                  return this._hemiLightColor;
                },
                set_hemisphereLightColor: function(f) {
                  return this._hemiLightColor = f, this._lightingStateDirty = !0, f;
                },
                get_hemisphereLightUp: function() {
                  return this._hemiLightUp;
                },
                set_hemisphereLightUp: function(f) {
                  return this._hemiLightUp = f, this._lightingStateDirty = !0, f;
                },
                get_sunlightColor: function() {
                  return this._sunlightColor;
                },
                set_sunlightColor: function(f) {
                  return this._sunlightColor = f, this._lightingStateDirty = !0, f;
                },
                get_sunPosition: function() {
                  return this._sunPosition;
                },
                set_sunPosition: function(f) {
                  return this._sunPosition = f, this._lightingStateDirty = !0, f;
                },
                get_reflectedLightColor: function() {
                  return this._reflectedLightColor;
                },
                set_reflectedLightColor: function(f) {
                  return this._reflectedLightColor !== f && (this._reflectedLightColor = f, this._lightingStateDirty = !0), f;
                },
                get_reflectedLightPosition: function() {
                  return this._reflectedLightPosition;
                },
                set_reflectedLightPosition: function(f) {
                  return this._reflectedLightPosition = f, this._lightingStateDirty = !0, f;
                },
                // Radius of a planet casting a shadow; zero when there's no shadow
                get_occludingPlanetRadius: function() {
                  return this._occludingPlanetRadius;
                },
                set_occludingPlanetRadius: function(f) {
                  return this._occludingPlanetRadius = f, f;
                },
                get_occludingPlanetPosition: function() {
                  return this._occludingPlanetPosition;
                },
                set_occludingPlanetPosition: function(f) {
                  return this._occludingPlanetPosition = f, f;
                },
                get_twoSidedLighting: function() {
                  return this._twoSidedLighting;
                },
                set_twoSidedLighting: function(f) {
                  return f !== this._twoSidedLighting && (this._twoSidedLighting = f, this._lightingStateDirty = !0), f;
                },
                makeFrustum: function() {
                  this.WV = e.Matrix3d.multiplyMatrix(this.get_world(), this.get_view());
                  var f = e.Matrix3d.multiplyMatrix(this.WV, this.get_projection());
                  this.WVP = f.clone();
                  var R = this.get_world().clone();
                  R.invert(), this._frustum[0].a = f.get_m14() + f.get_m11(), this._frustum[0].b = f.get_m24() + f.get_m21(), this._frustum[0].c = f.get_m34() + f.get_m31(), this._frustum[0].d = f.get_m44() + f.get_m41(), this._frustum[1].a = f.get_m14() - f.get_m11(), this._frustum[1].b = f.get_m24() - f.get_m21(), this._frustum[1].c = f.get_m34() - f.get_m31(), this._frustum[1].d = f.get_m44() - f.get_m41(), this._frustum[2].a = f.get_m14() - f.get_m12(), this._frustum[2].b = f.get_m24() - f.get_m22(), this._frustum[2].c = f.get_m34() - f.get_m32(), this._frustum[2].d = f.get_m44() - f.get_m42(), this._frustum[3].a = f.get_m14() + f.get_m12(), this._frustum[3].b = f.get_m24() + f.get_m22(), this._frustum[3].c = f.get_m34() + f.get_m32(), this._frustum[3].d = f.get_m44() + f.get_m42(), this._frustum[4].a = f.get_m13(), this._frustum[4].b = f.get_m23(), this._frustum[4].c = f.get_m33(), this._frustum[4].d = f.get_m43(), this._frustum[5].a = f.get_m14() - f.get_m13(), this._frustum[5].b = f.get_m24() - f.get_m23(), this._frustum[5].c = f.get_m34() - f.get_m33(), this._frustum[5].d = f.get_m44() - f.get_m43();
                  for (var O = 0; O < 6; O++)
                    this._frustum[O].normalize();
                  this._frustumDirty = !1, this.WVP.scale(e.Vector3d.create(this.width / 2, -this.height / 2, 1)), this.WVP.translate(e.Vector3d.create(this.width / 2, this.height / 2, 0)), this._setMatrixes();
                },
                _initGL: function() {
                  this.gl != null && (this.gl.getExtension("OES_element_index_uint"), (0, r.set_tileUvMultiple)(1), (0, r.set_tileDemEnabled)(!0), l.TileShader.init(this));
                },
                freezeView: function() {
                  this.targetAlt = this.alt, this.targetAz = this.az, this.targetCamera = this.viewCamera.copy();
                },
                _setVertexBuffer: function(f) {
                },
                _setIndexBuffer: function(f) {
                },
                // Set up a shader for the specified material properties and the
                // current lighting environment.
                setMaterial: function(f, R, O, W, N) {
                  this.set_mainTexture(R);
                },
                preDraw: function() {
                }
              };
              (0, n.registerType)("RenderContext", [T, w, null]);
            }
          ),
          /***/
          "./esm/render_globals.js": (
            /*!*******************************!*\
              !*** ./esm/render_globals.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                globalRenderContext: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                inc_tileCacheAccessID: () => (
                  /* binding */
                  v
                ),
                /* harmony export */
                set_globalRenderContext: () => (
                  /* binding */
                  w
                ),
                /* harmony export */
                set_tileCacheAddTileToQueue: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                set_tileCacheGetCachedTile: () => (
                  /* binding */
                  K
                ),
                /* harmony export */
                set_tileCacheGetTile: () => (
                  /* binding */
                  L
                ),
                /* harmony export */
                set_tileCacheRemoveFromQueue: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                set_tileDemEnabled: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                set_tilePrepDevice: () => (
                  /* binding */
                  n
                ),
                /* harmony export */
                set_tileUvMultiple: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                set_useGl: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                set_useGlVersion2: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                tileCacheAddTileToQueue: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                tileCacheGetCachedTile: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                tileCacheGetTile: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                tileCacheRemoveFromQueue: () => (
                  /* binding */
                  y
                ),
                /* harmony export */
                tileDemEnabled: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                tilePrepDevice: () => (
                  /* binding */
                  t
                ),
                /* harmony export */
                tileUvMultiple: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                useGl: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                useGlVersion2: () => (
                  /* binding */
                  g
                )
                /* harmony export */
              });
              var t = null;
              function n(f) {
                t = f;
              }
              var e = 256;
              function _(f) {
                e = f;
              }
              var r = !1;
              function o(f) {
                r = !!f;
              }
              var c = !1;
              function l(f) {
                c = !!f;
              }
              var g = !1;
              function a(f) {
                g = !!f;
              }
              var b = null;
              function V(f) {
                b = f;
              }
              var y = null;
              function C(f) {
                y = f;
              }
              var E = 0;
              function v() {
                return E++;
              }
              var m = null;
              function L(f) {
                m = f;
              }
              var A = null;
              function K(f) {
                A = f;
              }
              var T = null;
              function w(f) {
                T = f;
              }
            }
          ),
          /***/
          "./esm/render_triangle.js": (
            /*!********************************!*\
              !*** ./esm/render_triangle.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                RenderTriangle: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              );
              function e() {
                this.a = new n.PositionTexture(), this.b = new n.PositionTexture(), this.c = new n.PositionTexture(), this.normal = new n.Vector3d(), this.opacity = 1, this.expansionInPixels = 0.6, this.tileLevel = 0, this._ta = new n.Vector3d(), this._tb = new n.Vector3d(), this._tc = new n.Vector3d(), this._expandedS0 = new n.Vector2d(), this._expandedS1 = new n.Vector2d(), this._expandedS2 = new n.Vector2d(), this.lighting = 1;
              }
              e.width = 1024, e.height = 768, e._contractionInPixels = -0.5, e.trianglesRendered = 0, e.trianglesCulled = 0, e.renderingOn = !0, e._factor = 1, e.cullInside = !0, e._hw = 0, e._qw = 0, e._hh = 0, e._qh = 0, e.create = function(r, o, c, l, g) {
                var a = new e();
                return a.a = r.copy(), a.b = o.copy(), a.c = c.copy(), a._texture = l, a.tileLevel = g, a.makeNormal(), a;
              }, e.createWithMiter = function(r, o, c, l, g, a) {
                var b = new e();
                return b.expansionInPixels = a, b.a = r.copy(), b.b = o.copy(), b.c = c.copy(), b._texture = l, b.tileLevel = g, b.makeNormal(), b;
              }, e._getMiterPoint = function(r, o, c, l) {
                var g = n.Vector2d.subtract(o, r), a = n.Vector2d.subtract(c, r);
                g.normalize(), a.normalize();
                var b = n.Vector2d.create(g.x + a.x, g.y + a.y);
                b.normalize();
                var V = n.Vector2d.create(g.x - a.x, g.y - a.y), y = V.get_length() / 2, C = Math.min(2, l / y);
                return b.extend(C), n.Vector2d.create(r.x - b.x, r.y - b.y);
              }, e._miterPoint = function(r, o, c, l, g, a, b) {
                var V = c - r, y = l - o, C = g - r, E = a - o, v = Math.sqrt(V * V + y * y);
                v && (V /= v, y /= v), v = Math.sqrt(C * C + E * E), v && (C /= v, E /= v);
                var m = V + C, L = y + E;
                v = Math.sqrt(m * m + L * L), v && (m /= v, L /= v);
                var A = V - C, K = y - E;
                v = Math.sqrt(A * A + K * K);
                var T = v / 2, w = Math.min(2, b / T);
                return m *= w, L *= w, n.Vector2d.create(r - m, o - L);
              }, e._miterPointOut = function(r, o, c, l, g, a, b, V) {
                var y = l - o, C = g - c, E = a - o, v = b - c, m = Math.sqrt(y * y + C * C);
                m && (y /= m, C /= m), m = Math.sqrt(E * E + v * v), m && (E /= m, v /= m);
                var L = y + E, A = C + v;
                m = Math.sqrt(L * L + A * A), m && (L /= m, A /= m);
                var K = y - E, T = C - v;
                m = Math.sqrt(K * K + T * T);
                var w = m / 2, f = Math.min(2, V / w);
                L *= f, A *= f, r.x = o - L, r.y = c - A;
              };
              var _ = {
                makeNormal: function() {
                  var r = this.a.position.copy(), o = this.b.position.copy(), c = this.c.position.copy();
                  r.normalize(), o.normalize(), c.normalize();
                  var l = r.x + o.x + c.x, g = r.y + o.y + c.y, a = r.z + o.z + c.z;
                  this.normal = n.Vector3d.create(l / 3, g / 3, a / 3), this.normal.normalize();
                },
                _checkBackface: function() {
                  var r = n.Vector3d.subtractVectors(this._ta, this._tb), o = n.Vector3d.subtractVectors(this._ta, this._tc), c = n.Vector3d.cross(r, o);
                  return c.normalize(), c.z >= 0;
                },
                draw: function(r, o) {
                  if (r != null) {
                    if (o._transformTo(this.a.position, this._ta), o._transformTo(this.b.position, this._tb), o._transformTo(this.c.position, this._tc), this._checkBackface() === e.cullInside) {
                      e.trianglesCulled++;
                      return;
                    }
                    this._drawTriangle(r, this._texture, this._ta.x, this._ta.y, this._tb.x, this._tb.y, this._tc.x, this._tc.y, this.a.tu, this.a.tv, this.b.tu, this.b.tv, this.c.tu, this.c.tv);
                  }
                },
                _drawTriangle: function(r, o, c, l, g, a, b, V, y, C, E, v, m, L) {
                  if (!this.intersects(0, e.width, 0, e.height, c, l, g, a, b, V))
                    return !1;
                  e._miterPointOut(this._expandedS0, c, l, g, a, b, V, this.expansionInPixels), e._miterPointOut(this._expandedS1, g, a, c, l, b, V, this.expansionInPixels), e._miterPointOut(this._expandedS2, b, V, g, a, c, l, this.expansionInPixels), c = this._expandedS0.x, l = this._expandedS0.y, g = this._expandedS1.x, a = this._expandedS1.y, b = this._expandedS2.x, V = this._expandedS2.y, r.save(), e.renderingOn && (r.beginPath(), r.moveTo(c, l), r.lineTo(g, a), r.lineTo(b, V), r.closePath(), r.clip());
                  var A = y * (L - v) - E * L + m * v + (E - m) * C, K = -(C * (b - g) - v * b + L * g + (v - L) * c) / A, T = (v * V + C * (a - V) - L * a + (L - v) * l) / A, w = (y * (b - g) - E * b + m * g + (E - m) * c) / A, f = -(E * V + y * (a - V) - m * a + (m - E) * l) / A, R = (y * (L * g - v * b) + C * (E * b - m * g) + (m * v - E * L) * c) / A, O = (y * (L * a - v * V) + C * (E * V - m * a) + (m * v - E * L) * l) / A;
                  return r.transform(K, T, w, f, R, O), e.renderingOn && (r.globalAlpha = this.opacity, this.lighting < 1 && (r.globalAlpha = 1, r.fillStyle = "Black", r.fillRect(0, 0, e.width, e.height), r.globalAlpha = this.lighting * this.opacity), r.drawImage(o, 0, 0)), r.restore(), !0;
                },
                intersects: function(r, o, c, l, g, a, b, V, y, C) {
                  if (g > r && g < o && a > c && a < l || b > r && b < o && V > c && V < l || y > r && y < o && C > c && C < l)
                    return !0;
                  var E = e.height * 4;
                  return this.tileLevel < 4 && (Math.abs(g - b) > E || Math.abs(a - V) > E || Math.abs(y - b) > E || Math.abs(C - V) > E || Math.abs(g - y) > E || Math.abs(a - C) > E) ? !1 : this.lineRectangleIntersect(r, o, c, l, g, a, b, V) || this.lineRectangleIntersect(r, o, c, l, b, V, y, C) || this.lineRectangleIntersect(r, o, c, l, y, C, g, a);
                },
                lineRectangleIntersect: function(r, o, c, l, g, a, b, V) {
                  var y, C, E, v, m, L;
                  m = (V - a) / (b - g), L = a - m * g, m > 0 ? (y = m * r + L, C = m * o + L) : (y = m * o + L, C = m * r + L), a < V ? (E = a, v = V) : (E = V, v = a);
                  var A, K;
                  return A = y > E ? y : E, K = C < v ? C : v, A < K && !(K < c || A > l);
                }
              };
              (0, t.registerType)("RenderTriangle", [e, _, null]);
            }
          ),
          /***/
          "./esm/script_interface.js": (
            /*!*********************************!*\
              !*** ./esm/script_interface.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                AnnotationClickEventArgs: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                ArrivedEventArgs: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                CollectionLoadedEventArgs: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                ScriptInterface: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                SlideChangedEventArgs: () => (
                  /* binding */
                  y
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./util.js */
                "./esm/util.js"
              ), _ = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), o = i(
                /*! ./annotation.js */
                "./esm/annotation.js"
              ), c = i(
                /*! ./layers/fits_image.js */
                "./esm/layers/fits_image.js"
              ), l = i(
                /*! ./layers/fits_image_js.js */
                "./esm/layers/fits_image_js.js"
              ), g = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), a = i(
                /*! ./layers/imageset_layer.js */
                "./esm/layers/imageset_layer.js"
              ), b = i(
                /*! ./layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              ), V = i(
                /*! ./folder.js */
                "./esm/folder.js"
              );
              function y(f) {
                t.ss.EventArgs.call(this), this.set_caption(f);
              }
              var C = {
                get_caption: function() {
                  return this._caption$2;
                },
                set_caption: function(f) {
                  return this._caption$2 = f, f;
                }
              };
              (0, n.registerType)("SlideChangedEventArgs", [y, C, t.ss.EventArgs]);
              function E(f, R, O) {
                this._ra$2 = 0, this._dec$2 = 0, this._zoom$2 = 0, t.ss.EventArgs.call(this), this.set_RA(f * 15), this.set_dec(R), this.set_zoom(O / 6);
              }
              var v = {
                get_RA: function() {
                  return this._ra$2;
                },
                set_RA: function(f) {
                  return this._ra$2 = f, f;
                },
                get_dec: function() {
                  return this._dec$2;
                },
                set_dec: function(f) {
                  return this._dec$2 = f, f;
                },
                get_zoom: function() {
                  return this._zoom$2;
                },
                set_zoom: function(f) {
                  return this._zoom$2 = f, f;
                }
              };
              (0, n.registerType)("ArrivedEventArgs", [E, v, t.ss.EventArgs]);
              function m(f, R, O) {
                this._ra$2 = 0, this._dec$2 = 0, t.ss.EventArgs.call(this), this.set_RA(f * 15), this.set_dec(R), this.set_id(O);
              }
              var L = {
                get_RA: function() {
                  return this._ra$2;
                },
                set_RA: function(f) {
                  return this._ra$2 = f, f;
                },
                get_dec: function() {
                  return this._dec$2;
                },
                set_dec: function(f) {
                  return this._dec$2 = f, f;
                },
                get_id: function() {
                  return this._id$2;
                },
                set_id: function(f) {
                  return this._id$2 = f, f;
                }
              };
              (0, n.registerType)("AnnotationClickEventArgs", [m, L, t.ss.EventArgs]);
              function A(f) {
                t.ss.EventArgs.call(this), this._url$2 = f;
              }
              var K = {
                get_url: function() {
                  return this._url$2;
                },
                set_url: function(f) {
                  return this._url$2 = f, f;
                }
              };
              (0, n.registerType)("CollectionLoadedEventArgs", [A, K, t.ss.EventArgs]);
              function T() {
                this._missedReady = !1, this.hideTourFeedback = !1, this._smoothAnimation = !1, this._showCaptions = !0;
              }
              T._containsFitsLikeExtentsion = function(f) {
                var R = f.toLowerCase();
                return t.ss.endsWith(R, "fits") || t.ss.endsWith(R, "ftz") || t.ss.endsWith(R, "fit") || t.ss.endsWith(R, "fts");
              }, T._addImageSet = function(f, R, O, W) {
                t.ss.whitespace(f) && (f = b.LayerManager.getNextImageSetName());
                var N = b.LayerManager.addImageSetLayerCallback(W, f, O);
                if (R) {
                  var $ = W._guessZoomSetting(_.globalRenderContext.viewCamera.zoom);
                  r.globalWWTControl.gotoRADecZoom(W.get_viewCenterX() / 15, W.get_viewCenterY(), $, !1, null);
                }
                return N;
              }, T._addFitsLayer = function(f, R, O, W) {
                t.ss.whitespace(R) && (R = b.LayerManager.getNextFitsName());
                var N = new a.ImageSetLayer(), $ = new g.Imageset(), S = function(I) {
                  if (!I.errored) {
                    if (t.ss.truncate(I.get_sizeX()), t.ss.truncate(I.get_sizeY()), $.setInitialParameters(I.get_description(), I.get_filename(), 2, 3, 5, e.Util.getHashCode(I.get_filename()), 0, 0, I.get_scaleY(), ".fits", I.get_scaleX() > 0, "", I.get_centerX(), I.get_centerY(), I.get_rotation(), !1, "", !1, !1, 1, I.get_referenceX(), I.get_referenceY(), I.get_copyright(), I.get_creditsUrl(), "", "", 0, ""), $.set_wcsImage(I), N.set_imageSet($), b.LayerManager.addFitsImageSetLayer(N, R), O) {
                      var x = $._guessZoomSetting(_.globalRenderContext.viewCamera.zoom);
                      r.globalWWTControl.gotoRADecZoom(I.get_viewCenterX() / 15, I.get_viewCenterY(), x, !1, null);
                    }
                    W != null && W(N);
                  }
                };
                return t.ss.whitespace(R) && (R = b.LayerManager.getNextFitsName()), _.useGlVersion2 ? new c.FitsImage($, f, null, S) : new l.FitsImageJs($, f, null, S), N;
              };
              var w = {
                add_ready: function(f) {
                  this.__ready = t.ss.bindAdd(this.__ready, f);
                },
                remove_ready: function(f) {
                  this.__ready = t.ss.bindSub(this.__ready, f);
                },
                _fireReady: function() {
                  this.__ready != null ? this.__ready(this, new t.ss.EventArgs()) : this._missedReady = !0;
                },
                add_collectionLoaded: function(f) {
                  this.__collectionLoaded = t.ss.bindAdd(this.__collectionLoaded, f);
                },
                remove_collectionLoaded: function(f) {
                  this.__collectionLoaded = t.ss.bindSub(this.__collectionLoaded, f);
                },
                _fireCollectionLoaded: function(f) {
                  this.__collectionLoaded != null && this.__collectionLoaded(this, new A(f));
                },
                add_colorPickerDisplay: function(f) {
                  this.__colorPickerDisplay = t.ss.bindAdd(this.__colorPickerDisplay, f);
                },
                remove_colorPickerDisplay: function(f) {
                  this.__colorPickerDisplay = t.ss.bindSub(this.__colorPickerDisplay, f);
                },
                add_voTableDisplay: function(f) {
                  this.__voTableDisplay = t.ss.bindAdd(this.__voTableDisplay, f);
                },
                remove_voTableDisplay: function(f) {
                  this.__voTableDisplay = t.ss.bindSub(this.__voTableDisplay, f);
                },
                add_refreshLayerManager: function(f) {
                  this.__refreshLayerManager = t.ss.bindAdd(this.__refreshLayerManager, f);
                },
                remove_refreshLayerManager: function(f) {
                  this.__refreshLayerManager = t.ss.bindSub(this.__refreshLayerManager, f);
                },
                add_arrived: function(f) {
                  this.__arrived = t.ss.bindAdd(this.__arrived, f);
                },
                remove_arrived: function(f) {
                  this.__arrived = t.ss.bindSub(this.__arrived, f);
                },
                add_clicked: function(f) {
                  this.__clicked = t.ss.bindAdd(this.__clicked, f);
                },
                remove_clicked: function(f) {
                  this.__clicked = t.ss.bindSub(this.__clicked, f);
                },
                add_annotationClicked: function(f) {
                  this.__annotationClicked = t.ss.bindAdd(this.__annotationClicked, f);
                },
                remove_annotationClicked: function(f) {
                  this.__annotationClicked = t.ss.bindSub(this.__annotationClicked, f);
                },
                add_imageryLoaded: function(f) {
                  this.__imageryLoaded = t.ss.bindAdd(this.__imageryLoaded, f);
                },
                remove_imageryLoaded: function(f) {
                  this.__imageryLoaded = t.ss.bindSub(this.__imageryLoaded, f);
                },
                add_tourReady: function(f) {
                  this.__tourReady = t.ss.bindAdd(this.__tourReady, f);
                },
                remove_tourReady: function(f) {
                  this.__tourReady = t.ss.bindSub(this.__tourReady, f);
                },
                add_tourError: function(f) {
                  this.__tourError = t.ss.bindAdd(this.__tourError, f);
                },
                remove_tourError: function(f) {
                  this.__tourError = t.ss.bindSub(this.__tourError, f);
                },
                add_tourPaused: function(f) {
                  this.__tourPaused = t.ss.bindAdd(this.__tourPaused, f);
                },
                remove_tourPaused: function(f) {
                  this.__tourPaused = t.ss.bindSub(this.__tourPaused, f);
                },
                add_tourResumed: function(f) {
                  this.__tourResumed = t.ss.bindAdd(this.__tourResumed, f);
                },
                remove_tourResumed: function(f) {
                  this.__tourResumed = t.ss.bindSub(this.__tourResumed, f);
                },
                add_tourEnded: function(f) {
                  this.__tourEnded = t.ss.bindAdd(this.__tourEnded, f);
                },
                remove_tourEnded: function(f) {
                  this.__tourEnded = t.ss.bindSub(this.__tourEnded, f);
                },
                add_slideChanged: function(f) {
                  this.__slideChanged = t.ss.bindAdd(this.__slideChanged, f);
                },
                remove_slideChanged: function(f) {
                  this.__slideChanged = t.ss.bindSub(this.__slideChanged, f);
                },
                //UI will set this to a function that takes 2 string properties (prop,val)
                //("title", "left", or "right" for the labels, "pos" for the slider pos)
                //Pass a 0-1 float to set the slider position (stringify it if you need to for strong typing)
                add_timeScrubberHook: function(f) {
                  this.__timeScrubberHook = t.ss.bindAdd(this.__timeScrubberHook, f);
                },
                remove_timeScrubberHook: function(f) {
                  this.__timeScrubberHook = t.ss.bindSub(this.__timeScrubberHook, f);
                },
                setTimeScrubberPosition: function(f) {
                  b.LayerManager.setTimeSliderValue(f);
                },
                setTimeSlider: function(f, R) {
                  this.__timeScrubberHook(f, R);
                },
                showColorPicker: function(f, R) {
                  this.__colorPickerDisplay != null && this.__colorPickerDisplay(f, R);
                },
                displayVoTableLayer: function(f) {
                  this.__voTableDisplay != null && this.__voTableDisplay(f, new t.ss.EventArgs());
                },
                refreshLayerManagerNow: function() {
                  this.__refreshLayerManager != null && this.__refreshLayerManager(null, new t.ss.EventArgs());
                },
                _fireTourReady: function() {
                  this.__tourReady != null && this.__tourReady(this, new t.ss.EventArgs());
                },
                _fireTourError: function(f) {
                  this.__tourError != null && this.__tourError(f, new t.ss.EventArgs());
                },
                _fireTourPaused: function() {
                  this.__tourPaused != null && this.__tourPaused(this, new t.ss.EventArgs());
                },
                _fireTourResume: function() {
                  this.__tourResumed != null && this.__tourResumed(this, new t.ss.EventArgs());
                },
                _fireTourEnded: function() {
                  this.__tourEnded != null && this.__tourEnded(this, new t.ss.EventArgs());
                },
                _fireImageryLoaded: function() {
                  this.__imageryLoaded != null && this.__imageryLoaded(this, new t.ss.EventArgs());
                },
                _fireClick: function(f, R) {
                  this.__clicked != null && this.__clicked(this, new E(f, R, _.globalRenderContext.viewCamera.zoom));
                },
                _fireArrived: function(f, R, O) {
                  this.__arrived != null && this.__arrived(this, new E(f, R, O));
                },
                _fireAnnotationclicked: function(f, R, O) {
                  try {
                    this.__annotationClicked != null && this.__annotationClicked(this, new m(f, R, O));
                  } catch {
                  }
                },
                _fireSlideChanged: function(f) {
                  try {
                    this.__slideChanged != null && this.__slideChanged(this, new y(f));
                  } catch {
                  }
                },
                endInit: function() {
                  this._missedReady && this._fireReady();
                },
                gotoRaDecZoom: function(f, R, O, W, N) {
                  r.globalWWTControl != null && r.globalWWTControl.gotoRADecZoom(f / 15, R, O * 6, W, N);
                },
                setBackgroundImageByName: function(f) {
                  r.globalWWTControl != null && r.globalWWTControl.setBackgroundImageByName(f);
                },
                // Call this to add a VOTable to layers
                addVoTableLayer: function(f) {
                  return b.LayerManager.addVoTableLayer(f, "Vo Table");
                },
                getLayers: function() {
                  return b.LayerManager.get_layerList();
                },
                setForegroundImageByName: function(f) {
                  r.globalWWTControl != null && (r.globalWWTControl.setForegroundImageByName(f), _.globalRenderContext.viewCamera.opacity = 100);
                },
                setForegroundOpacity: function(f) {
                  r.globalWWTControl != null && (_.globalRenderContext.viewCamera.opacity = f);
                },
                addCatalogHipsByName: function(f) {
                  r.globalWWTControl != null && r.globalWWTControl.addCatalogHipsByName(f);
                },
                addCatalogHipsByNameWithCallback: function(f, R) {
                  r.globalWWTControl != null && r.globalWWTControl.addCatalogHipsByNameWithCallback(f, R);
                },
                removeCatalogHipsByName: function(f) {
                  r.globalWWTControl != null && r.globalWWTControl.removeCatalogHipsByName(f);
                },
                getCatalogHipsDataInView: function(f, R, O) {
                  r.globalWWTControl != null && r.globalWWTControl.getCatalogHipsDataInView(f, R, O);
                },
                setCutsForFits: function(f, R, O) {
                  r.globalWWTControl != null && r.globalWWTControl.setCutsForFits(f, R, O);
                },
                setColorMapForFits: function(f, R) {
                  r.globalWWTControl != null && r.globalWWTControl.setColorMapForFits(f, R);
                },
                setScaleTypeForFits: function(f, R) {
                  r.globalWWTControl != null && r.globalWWTControl.setScaleTypeForFits(f, R);
                },
                hideUI: function(f) {
                },
                loadTour: function(f) {
                  r.globalWWTControl != null && r.globalWWTControl.playTour(f);
                },
                loadFits: function(f) {
                  return this.loadFitsLayer(f, "", !0, null);
                },
                loadFitsLayer: function(f, R, O, W) {
                  return this.addImageSetLayer(f, "fits", R, O, W);
                },
                addImageSetLayer: function(f, R, O, W, N) {
                  if (R != null && R.toLowerCase() === "fits")
                    return T._addFitsLayer(f, O, W, N);
                  if (R != null && R.toLowerCase() === "preloaded") {
                    var $ = r.globalWWTControl.getImageSetByUrl(f);
                    if ($ != null)
                      return T._addImageSet(O, W, N, $);
                  } else {
                    var $ = r.globalWWTControl.getImageSetByUrl(f);
                    if ($ != null)
                      return T._addImageSet(O, W, N, $);
                    if (T._containsFitsLikeExtentsion(f))
                      return T._addFitsLayer(f, O, W, N);
                  }
                  return null;
                },
                setImageSetLayerOrder: function(f, R) {
                  var O = b.LayerManager.get_layerList()[f];
                  t.ss.canCast(O, a.ImageSetLayer) && R >= 0 && (t.ss.remove((0, r.layerManagerGetAllMaps)()[O.get_referenceFrame()].layers, O), (0, r.layerManagerGetAllMaps)()[O.get_referenceFrame()].layers.splice(R, 0, O));
                },
                isUsingWebGl2: function() {
                  return _.useGlVersion2;
                },
                get_hideTourFeedback: function() {
                  return this.hideTourFeedback;
                },
                set_hideTourFeedback: function(f) {
                  return this.hideTourFeedback = f, f;
                },
                playTour: function() {
                  r.globalWWTControl != null && r.globalWWTControl.playCurrentTour();
                },
                stopTour: function() {
                  r.globalWWTControl != null && r.globalWWTControl.stopCurrentTour();
                },
                loadImageCollection: function(f, R) {
                  var O = this;
                  this._imageUrl = f, (0, r.loadWtmlFile)(f, function() {
                    O._fireCollectionLoaded(f);
                  }, R);
                },
                _imageFileLoaded: function() {
                  this._fireCollectionLoaded(this._imageUrl);
                },
                zoom: function(f) {
                  r.globalWWTControl != null && r.globalWWTControl.zoom(f);
                },
                getRA: function() {
                  return r.globalWWTControl != null ? _.globalRenderContext.get_RA() : 0;
                },
                getDec: function() {
                  return r.globalWWTControl != null ? _.globalRenderContext.get_dec() : 0;
                },
                createFolder: function() {
                  var f = new V.Folder();
                  return f;
                },
                createPolygon: function(f) {
                  var R = new o.Poly();
                  return R.set_fill(f), R;
                },
                createPolyLine: function(f) {
                  return new o.PolyLine();
                },
                createCircle: function(f) {
                  var R = new o.Circle();
                  return R.set_fill(f), R;
                },
                addAnnotation: function(f) {
                  f != null && t.ss.canCast(f, o.Annotation) && r.globalWWTControl != null && r.globalWWTControl._addAnnotation(f);
                },
                removeAnnotation: function(f) {
                  f != null && r.globalWWTControl != null && r.globalWWTControl._removeAnnotation(f);
                },
                clearAnnotations: function() {
                  r.globalWWTControl != null && r.globalWWTControl._clearAnnotations();
                },
                get_smoothAnimation: function() {
                  return this._smoothAnimation;
                },
                set_smoothAnimation: function(f) {
                  return this._smoothAnimation = f, f;
                },
                get_showCaptions: function() {
                  return this._showCaptions;
                },
                set_showCaptions: function(f) {
                  return this._showCaptions = f, f;
                },
                loadVOTable: function(f, R) {
                },
                get_fov: function() {
                  return r.globalWWTControl != null ? _.globalRenderContext.viewCamera.zoom / 6 : 60;
                }
              };
              (0, n.registerType)("ScriptInterface", [T, w, null]);
            }
          ),
          /***/
          "./esm/settings.js": (
            /*!*************************!*\
              !*** ./esm/settings.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                SettingParameter: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                Settings: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                StockSkyOverlayTypes: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./color.js */
                "./esm/color.js"
              ), e = i(
                /*! ./constellation_filter.js */
                "./esm/constellation_filter.js"
              ), _ = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), r = {
                empty: 0,
                equatorialGrid: 1,
                equatorialGridText: 2,
                galacticGrid: 3,
                galacticGridText: 4,
                eclipticGrid: 5,
                eclipticGridText: 6,
                eclipticOverview: 7,
                eclipticOverviewText: 8,
                precessionChart: 9,
                altAzGrid: 10,
                altAzGridText: 11,
                constellationFigures: 12,
                constellationBoundaries: 13,
                constellationFocusedOnly: 14,
                constellationNames: 15,
                constellationPictures: 16,
                fadeToBlack: 17,
                fadeToLogo: 18,
                fadeToGradient: 19,
                screenBroadcast: 20,
                fadeRemoteOnly: 21,
                skyGrids: 22,
                constellations: 23,
                solarSystemStars: 24,
                solarSystemMilkyWay: 25,
                solarSystemCosmos: 26,
                solarSystemOrbits: 27,
                solarSystemPlanets: 28,
                solarSystemAsteroids: 29,
                solarSystemLighting: 30,
                solarSystemMinorOrbits: 31,
                showEarthCloudLayer: 32,
                showElevationModel: 33,
                showAtmosphere: 34,
                multiResSolarSystemBodies: 35,
                auroraBorialis: 36,
                earthCutAway: 37,
                showSolarSystem: 38,
                clouds8k: 39,
                filedOfView: 40,
                showISSModel: 41,
                solarSystemCMB: 42,
                mpcZone1: 43,
                mpcZone2: 44,
                mpcZone3: 45,
                mpcZone4: 46,
                mpcZone5: 47,
                mpcZone6: 48,
                mpcZone7: 49,
                orbitFilters: 50
              };
              (0, t.registerType)("StockSkyOverlayTypes", r), (0, t.registerEnum)("StockSkyOverlayTypes", r);
              function o(a, b, V, y) {
                this.targetState = !1, this.edgeTrigger = !1, this.opacity = 0, this.edgeTrigger = a, this.opacity = b, this.targetState = V, this.filter = y;
              }
              var c = {};
              (0, t.registerType)("SettingParameter", [o, c, null]);
              function l() {
                this.autoRepeatTour = !1, this._localHorizonMode = !1, this._galacticMode = !1, this._constellationBoundryColor = "blue", this._constellationSelectionColor = "yellow", this._constellationFigureColor = "red", this._showConstellationFigures = !0, this._showConstellationBoundries = !0, this._showConstellationSelection = !0, this._showCrosshairs = !0, this._crosshairsColor = "white", this._showEcliptic = !1, this._locationLat = 47.717, this._locationLng = -122.0858, this._locationAltitude = 100, this._showFiledOfView = !1, this._actualPlanetScale = !0, this._fovCamera = 0, this._fovEyepiece = 0, this._fovTelescope = 0, this._showClouds = !1, this._showGrid = !1, this._showHorizon = !0, this._showHorizonPanorama = !1, this._showMoonsAsPointSource = !0, this._showSolarSystem = !0, this._solarSystemStars = !0, this._solarSystemMilkyWay = !0, this._solarSystemCosmos = !0, this._solarSystemOrbits = !0, this._solarSystemOverlays = !0, this._solarSystemLighting = !0, this._solarSystemMultiRes = !0, this._solarSystemScale = 1, this._smoothPan = !0, this._showElevationModel = !0, this._showEquatorialGridText = !1, this._showGalacticGrid = !1, this._showGalacticGridText = !1, this._showEclipticGrid = !1, this._showEclipticGridText = !1, this._showEclipticOverviewText = !1, this._showAltAzGrid = !1, this._eclipticGridColor = n.Colors.get_green(), this._galacticGridColor = n.Colors.get_cyan(), this._altAzGridColor = n.Colors.get_magenta(), this._precessionChartColor = n.Colors.get_orange(), this._eclipticColor = n.Colors.get_blue(), this._equatorialGridColor = n.Colors.get_white(), this._showAltAzGridText = !1, this._showPrecessionChart = !1, this._showConstellationPictures = !1, this._showConstellationLabels = !1, this._constellationLabelsHeight = 80, this._solarSystemCMB = !0, this._solarSystemMinorPlanets = !1, this._solarSystemPlanets = !0, this._showEarthSky = !0, this._solarSystemMinorOrbits = !1, this._constellationsEnabled = "", this._constellationFiguresFilter = new e.ConstellationFilter(), this._constellationBoundariesFilter = new e.ConstellationFilter(), this._constellationNamesFilter = new e.ConstellationFilter(), this._constellationArtFilter = new e.ConstellationFilter(), this._showSkyOverlays = !0, this._showConstellations = !0, this._showSkyNode = !0, this._showSkyGrids = !0, this._showSkyOverlaysIn3d = !0, this._earthCutawayView = !1, this._showISSModel = !1, this._milkyWayModel = !1, this._minorPlanetsFilter = 255, this._planetOrbitsFilter = 2147483647, this._constellations = !0;
              }
              l._active = null, l.tourSettings = null, l.get_current = function() {
                return l._active == null && (l._active = new l()), l._active;
              }, l.get_globalSettings = function() {
                return l._active == null && (l._active = new l()), l._active;
              }, l.get_active = function() {
                return l._active == null && (l._active = new l()), l.tourSettings != null ? l.tourSettings : l._active;
              };
              var g = {
                get_constellationFigureColor: function() {
                  return this._constellationFigureColor;
                },
                set_constellationFigureColor: function(a) {
                  return this._constellationFigureColor = a, a;
                },
                get_constellationBoundryColor: function() {
                  return this._constellationBoundryColor;
                },
                set_constellationBoundryColor: function(a) {
                  return this._constellationBoundryColor = a, a;
                },
                get_constellationSelectionColor: function() {
                  return this._constellationSelectionColor;
                },
                set_constellationSelectionColor: function(a) {
                  return this._constellationSelectionColor = a, a;
                },
                get_showCrosshairs: function() {
                  return this._showCrosshairs;
                },
                set_showCrosshairs: function(a) {
                  return this._showCrosshairs = a, a;
                },
                get_smoothPan: function() {
                  return this._smoothPan;
                },
                set_smoothPan: function(a) {
                  return this._smoothPan = a, a;
                },
                get_crosshairsColor: function() {
                  return this._crosshairsColor;
                },
                set_crosshairsColor: function(a) {
                  return this._crosshairsColor = a, a;
                },
                get_actualPlanetScale: function() {
                  return this._actualPlanetScale;
                },
                set_actualPlanetScale: function(a) {
                  return this._actualPlanetScale = a, a;
                },
                get_fovCamera: function() {
                  return this._fovCamera;
                },
                get_fovEyepiece: function() {
                  return this._fovEyepiece;
                },
                get_fovTelescope: function() {
                  return this._fovTelescope;
                },
                get_locationAltitude: function() {
                  return this._locationAltitude;
                },
                set_locationAltitude: function(a) {
                  return this._locationAltitude = a, a;
                },
                get_locationLat: function() {
                  return this._locationLat;
                },
                set_locationLat: function(a) {
                  return this._locationLat = a, a;
                },
                get_locationLng: function() {
                  return this._locationLng;
                },
                set_locationLng: function(a) {
                  return this._locationLng = a, a;
                },
                get_showClouds: function() {
                  return this._showClouds;
                },
                get_showConstellationBoundries: function() {
                  return this._showConstellationBoundries;
                },
                set_showConstellationBoundries: function(a) {
                  return this._showConstellationBoundries = a, a;
                },
                get_showConstellationFigures: function() {
                  return this._showConstellationFigures;
                },
                set_showConstellationFigures: function(a) {
                  return this._showConstellationFigures = a, a;
                },
                get_showConstellationSelection: function() {
                  return this._showConstellationSelection;
                },
                set_showConstellationSelection: function(a) {
                  return this._showConstellationSelection = a, a;
                },
                get_showEcliptic: function() {
                  return this._showEcliptic;
                },
                set_showEcliptic: function(a) {
                  return this._showEcliptic = a, a;
                },
                get_showElevationModel: function() {
                  return this._showElevationModel;
                },
                set_showElevationModel: function(a) {
                  return this._showElevationModel = a, a;
                },
                get_showFieldOfView: function() {
                  return this._showFiledOfView;
                },
                get_showGrid: function() {
                  return this._showGrid;
                },
                set_showGrid: function(a) {
                  return this._showGrid = a, a;
                },
                get_showHorizon: function() {
                  return this._showHorizon;
                },
                set_showHorizon: function(a) {
                  return this._showHorizon = a, a;
                },
                get_showHorizonPanorama: function() {
                  return this._showHorizonPanorama;
                },
                get_showMoonsAsPointSource: function() {
                  return this._showMoonsAsPointSource;
                },
                get_showSolarSystem: function() {
                  return this._showSolarSystem;
                },
                set_showSolarSystem: function(a) {
                  return this._showSolarSystem = a, a;
                },
                get_localHorizonMode: function() {
                  return this._localHorizonMode;
                },
                set_localHorizonMode: function(a) {
                  return this._localHorizonMode = a, a;
                },
                get_galacticMode: function() {
                  return this._galacticMode;
                },
                set_galacticMode: function(a) {
                  return this._galacticMode = a, a;
                },
                get_solarSystemStars: function() {
                  return this._solarSystemStars;
                },
                set_solarSystemStars: function(a) {
                  return this._solarSystemStars = a, a;
                },
                get_solarSystemMilkyWay: function() {
                  return this._solarSystemMilkyWay;
                },
                set_solarSystemMilkyWay: function(a) {
                  return this._solarSystemMilkyWay = a, a;
                },
                get_solarSystemCosmos: function() {
                  return this._solarSystemCosmos;
                },
                set_solarSystemCosmos: function(a) {
                  return this._solarSystemCosmos = a, a;
                },
                get_solarSystemOrbits: function() {
                  return this._solarSystemOrbits;
                },
                set_solarSystemOrbits: function(a) {
                  return this._solarSystemOrbits = a, a;
                },
                get_solarSystemOverlays: function() {
                  return this._solarSystemOverlays;
                },
                set_solarSystemOverlays: function(a) {
                  return this._solarSystemOverlays = a, a;
                },
                get_solarSystemLighting: function() {
                  return this._solarSystemLighting;
                },
                set_solarSystemLighting: function(a) {
                  return this._solarSystemLighting = a, a;
                },
                get_solarSystemMultiRes: function() {
                  return !0;
                },
                set_solarSystemMultiRes: function(a) {
                  return this._solarSystemMultiRes = a, a;
                },
                get_solarSystemScale: function() {
                  return this._solarSystemScale;
                },
                set_solarSystemScale: function(a) {
                  return this._solarSystemScale = a, a;
                },
                get_showEquatorialGridText: function() {
                  return this._showEquatorialGridText;
                },
                set_showEquatorialGridText: function(a) {
                  return this._showEquatorialGridText = a, a;
                },
                get_showGalacticGrid: function() {
                  return this._showGalacticGrid;
                },
                set_showGalacticGrid: function(a) {
                  return this._showGalacticGrid = a, a;
                },
                get_showGalacticGridText: function() {
                  return this._showGalacticGridText;
                },
                set_showGalacticGridText: function(a) {
                  return this._showGalacticGridText = a, a;
                },
                get_showEclipticGrid: function() {
                  return this._showEclipticGrid;
                },
                set_showEclipticGrid: function(a) {
                  return this._showEclipticGrid = a, a;
                },
                get_showEclipticGridText: function() {
                  return this._showEclipticGridText;
                },
                set_showEclipticGridText: function(a) {
                  return this._showEclipticGridText = a, a;
                },
                get_showEclipticOverviewText: function() {
                  return this._showEclipticOverviewText;
                },
                set_showEclipticOverviewText: function(a) {
                  return this._showEclipticOverviewText = a, a;
                },
                get_showAltAzGrid: function() {
                  return this._showAltAzGrid;
                },
                set_showAltAzGrid: function(a) {
                  return this._showAltAzGrid = a, a;
                },
                get_eclipticGridColor: function() {
                  return this._eclipticGridColor;
                },
                set_eclipticGridColor: function(a) {
                  return this._eclipticGridColor = a, a;
                },
                get_galacticGridColor: function() {
                  return this._galacticGridColor;
                },
                set_galacticGridColor: function(a) {
                  return this._galacticGridColor = a, a;
                },
                get_altAzGridColor: function() {
                  return this._altAzGridColor;
                },
                set_altAzGridColor: function(a) {
                  return this._altAzGridColor = a, a;
                },
                get_precessionChartColor: function() {
                  return this._precessionChartColor;
                },
                set_precessionChartColor: function(a) {
                  return this._precessionChartColor = a, a;
                },
                get_eclipticColor: function() {
                  return this._eclipticColor;
                },
                set_eclipticColor: function(a) {
                  return this._eclipticColor = a, a;
                },
                get_equatorialGridColor: function() {
                  return this._equatorialGridColor;
                },
                set_equatorialGridColor: function(a) {
                  return this._equatorialGridColor = a, a;
                },
                get_showAltAzGridText: function() {
                  return this._showAltAzGridText;
                },
                set_showAltAzGridText: function(a) {
                  return this._showAltAzGridText = a, a;
                },
                get_showPrecessionChart: function() {
                  return this._showPrecessionChart;
                },
                set_showPrecessionChart: function(a) {
                  return this._showPrecessionChart = a, a;
                },
                get_showConstellationPictures: function() {
                  return this._showConstellationPictures;
                },
                set_showConstellationPictures: function(a) {
                  return this._showConstellationPictures = a, a;
                },
                get_showConstellationLabels: function() {
                  return this._showConstellationLabels;
                },
                set_showConstellationLabels: function(a) {
                  return this._showConstellationLabels = a, a;
                },
                get_constellationLabelsHeight: function() {
                  return this._constellationLabelsHeight;
                },
                set_constellationLabelsHeight: function(a) {
                  return this._constellationLabelsHeight = a, a;
                },
                get_solarSystemCMB: function() {
                  return this._solarSystemCMB;
                },
                set_solarSystemCMB: function(a) {
                  return this._solarSystemCMB = a, a;
                },
                get_solarSystemMinorPlanets: function() {
                  return this._solarSystemMinorPlanets;
                },
                set_solarSystemMinorPlanets: function(a) {
                  return this._solarSystemMinorPlanets = a, a;
                },
                get_solarSystemPlanets: function() {
                  return this._solarSystemPlanets;
                },
                set_solarSystemPlanets: function(a) {
                  return this._solarSystemPlanets = a, a;
                },
                get_showEarthSky: function() {
                  return this._showEarthSky;
                },
                set_showEarthSky: function(a) {
                  return this._showEarthSky = a, a;
                },
                get_solarSystemMinorOrbits: function() {
                  return this._solarSystemMinorOrbits;
                },
                set_solarSystemMinorOrbits: function(a) {
                  return this._solarSystemMinorOrbits = a, a;
                },
                get_constellationsEnabled: function() {
                  return this._constellationsEnabled;
                },
                set_constellationsEnabled: function(a) {
                  return this._constellationsEnabled = a, a;
                },
                get_constellationFiguresFilter: function() {
                  return this._constellationFiguresFilter;
                },
                set_constellationFiguresFilter: function(a) {
                  return this._constellationFiguresFilter = a, a;
                },
                get_constellationBoundariesFilter: function() {
                  return this._constellationBoundariesFilter;
                },
                set_constellationBoundariesFilter: function(a) {
                  return this._constellationBoundariesFilter = a, a;
                },
                get_constellationNamesFilter: function() {
                  return this._constellationNamesFilter;
                },
                set_constellationNamesFilter: function(a) {
                  return this._constellationNamesFilter = a, a;
                },
                get_constellationArtFilter: function() {
                  return this._constellationArtFilter;
                },
                set_constellationArtFilter: function(a) {
                  return this._constellationArtFilter = a, a;
                },
                get_showSkyOverlays: function() {
                  return this._showSkyOverlays;
                },
                set_showSkyOverlays: function(a) {
                  return this._showSkyOverlays = a, a;
                },
                get_showConstellations: function() {
                  return this._showConstellations;
                },
                set_showConstellations: function(a) {
                  return this._showConstellations = a, a;
                },
                get_showSkyNode: function() {
                  return this._showSkyNode;
                },
                set_showSkyNode: function(a) {
                  return this._showSkyNode = a, a;
                },
                get_showSkyGrids: function() {
                  return this._showSkyGrids;
                },
                set_showSkyGrids: function(a) {
                  return this._showSkyGrids = a, a;
                },
                get_showSkyOverlaysIn3d: function() {
                  return this._showSkyOverlaysIn3d;
                },
                set_showSkyOverlaysIn3d: function(a) {
                  return this._showSkyOverlaysIn3d = a, a;
                },
                get_earthCutawayView: function() {
                  return this._earthCutawayView;
                },
                set_earthCutawayView: function(a) {
                  return this._earthCutawayView = a, a;
                },
                get_showISSModel: function() {
                  return this._showISSModel;
                },
                set_showISSModel: function(a) {
                  return this._showISSModel = a, a;
                },
                get_milkyWayModel: function() {
                  return this._milkyWayModel;
                },
                set_milkyWayModel: function(a) {
                  return this._milkyWayModel = a, a;
                },
                get_minorPlanetsFilter: function() {
                  return this._minorPlanetsFilter;
                },
                set_minorPlanetsFilter: function(a) {
                  return this._minorPlanetsFilter = a, a;
                },
                get_planetOrbitsFilter: function() {
                  return this._planetOrbitsFilter;
                },
                set_planetOrbitsFilter: function(a) {
                  return this._planetOrbitsFilter = a, a;
                },
                get_constellations: function() {
                  return this._constellations;
                },
                set_constellations: function(a) {
                  return this._constellations = a, a;
                },
                getSetting: function(a) {
                  return a === 17 ? new o(!0, 0, !1, null) : new o(!1, 1, !1, null);
                }
              };
              (0, t.registerType)("Settings", [l, g, null, _.ISettings]);
            }
          ),
          /***/
          "./esm/sky_image_tile.js": (
            /*!*******************************!*\
              !*** ./esm/sky_image_tile.js ***!
              \*******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                SkyImageTile: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./layers/wcs_image.js */
                "./esm/layers/wcs_image.js"
              ), r = i(
                /*! ./tangent_tile.js */
                "./esm/tangent_tile.js"
              );
              function o(l, g, a, b, V) {
                this.pixelCenterX = 0, this.pixelCenterY = 0, this.scaleX = 0.01, this.scaleY = 0.01, this.height = 0, this.width = 0, r.TangentTile.call(this, l, g, a, b, V), this.pixelCenterX = b.get_offsetX(), this.pixelCenterY = b.get_offsetY(), this.scaleX = -(this.scaleY = b.get_baseTileDegrees()), b.get_bottomsUp() && (this.scaleX = -this.scaleX), this.sphereCenter = this.geoTo3dTan(0, 0), this.radius = 1.25, this.computeBoundingSphere();
              }
              var c = {
                getLatLngEdges: function() {
                  var l = new r.LatLngEdges(), g = t.ss.safeCast(this.dataset.get_wcsImage(), _.WcsImage);
                  return g != null && e.useGl ? e.useGlVersion2 ? (this.width = g.get_sizeX(), this.height = g.get_sizeY()) : (this.height = this.bmp.height, this.width = this.bmp.width, this.bmp.height !== g.get_sizeY() && (this.pixelCenterY += this.bmp.height - g.get_sizeY())) : this.texture != null ? (this.height = this.texture.naturalHeight, this.width = this.texture.naturalWidth) : (this.height = 256, this.width = 256), l.latMin = 0 + this.scaleY * (this.height - this.pixelCenterY), l.latMax = 0 - this.scaleY * this.pixelCenterY, l.lngMin = 0 + this.scaleX * this.pixelCenterX, l.lngMax = 0 - this.scaleX * (this.width - this.pixelCenterX), l;
                }
              };
              (0, n.registerType)("SkyImageTile", [o, c, r.TangentTile]);
            }
          ),
          /***/
          "./esm/sky_text.js": (
            /*!*************************!*\
              !*** ./esm/sky_text.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Alignment: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                GlyphCache: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                GlyphItem: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                Text3d: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                Text3dBatch: () => (
                  /* binding */
                  E
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), r = i(
                /*! ./color.js */
                "./esm/color.js"
              ), o = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), c = i(
                /*! ./graphics/gl_buffers.js */
                "./esm/graphics/gl_buffers.js"
              ), l = i(
                /*! ./graphics/texture.js */
                "./esm/graphics/texture.js"
              ), g = i(
                /*! ./graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), a = i(
                /*! ./tours/text_object.js */
                "./esm/tours/text_object.js"
              ), b = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), V = i(
                /*! ./util.js */
                "./esm/util.js"
              ), y = i(
                /*! ./web_file.js */
                "./esm/web_file.js"
              ), C = {
                center: 0,
                left: 1
              };
              (0, n.registerType)("Alignment", C), (0, n.registerEnum)("Alignment", C);
              function E(f) {
                this.height = 128, this.items = [], this._glyphVersion = -1, this.viewTransform = e.Matrix3d.get_identity(), this._textObject = new a.TextObject(), this._vertCount = 0, this.height = f * 3;
              }
              var v = {
                add: function(f) {
                  this.items.push(f);
                },
                draw: function(f, R, O) {
                  if (f.gl == null)
                    for (var W = e.Vector3d._transformCoordinate(f.get_viewPoint(), this.viewTransform), N = this.height / f.get_fovAngle() * f.height / 180, $ = t.ss.enumerate(this.items); $.moveNext(); ) {
                      var S = $.current, I = f.WVP.transform(S.center);
                      if (!(I.z < 0) && !(e.Vector3d.dot(W, S.center) < 0.55)) {
                        var x = f.WVP.transform(S.top), P = Math.atan2(I.x - x.x, I.y - x.y), d = f.device;
                        d.save(), d.translate(I.x, I.y), d.rotate(-P), d.globalAlpha = R, d.fillStyle = O.toString(), d.font = "normal normal " + Math.round(N * 1.2).toString() + "px Arial", d.textBaseline = "top";
                        var U = d.measureText(S.text);
                        d.fillText(S.text, -U.width / 2, -N / 2), d.restore();
                      }
                    }
                  else {
                    if ((this._glyphCache == null || this._glyphCache.get_version() > this._glyphVersion) && this.prepareBatch(), !this._glyphCache.ready)
                      return;
                    g.TextShader.use(f, this._vertexBuffer.vertexBuffer, this._glyphCache.get_texture().texture2d), f.gl.drawArrays(o.WEBGL.TRIANGLES, 0, this._vertexBuffer.count);
                  }
                },
                prepareBatch: function() {
                  if (this._glyphCache == null && (this._glyphCache = A.getCache(this.height)), !!this._glyphCache.ready) {
                    this._textObject.text = "", this._textObject.fontSize = this.height * 0.5;
                    for (var f = [], R = t.ss.enumerate(this.items); R.moveNext(); ) {
                      for (var O = R.current, W = O.text, N = 0, $ = this._textObject.fontSize / 128, S = 0.6666, I = 0, x = 0, P = 0; P < W.length; P++) {
                        var d = this._glyphCache.getGlyphItem(W.substr(P, 1));
                        d != null && (I += d.extents.x, x = Math.max(d.extents.y, x));
                      }
                      var U = e.Vector2d.create(I, x);
                      O.width = U.x * O.scale * S * $, O.height = U.y * O.scale * S * $;
                      for (var F = W.length, P = 0; P < F; P++) {
                        var d = this._glyphCache.getGlyphItem(W.substr(P, 1));
                        if (d != null) {
                          var X = V.Rectangle.create(N * O.scale * S, 0 * O.scale * S, d.extents.x * $ * O.scale * S, d.extents.y * $ * O.scale * S);
                          N += d.extents.x * $, O.addGlyphPoints(f, d.size, X, d.uvRect);
                        }
                      }
                    }
                    this._vertCount = f.length, this._vertexBuffer = new c.PositionTextureVertexBuffer(this._vertCount);
                    for (var Y = this._vertexBuffer.lock(), P = 0; P < this._vertCount; P++)
                      Y[P] = f[P];
                    this._vertexBuffer.unlock(), this._glyphVersion = this._glyphCache.get_version();
                  }
                },
                cleanUp: function() {
                  this._vertexBuffer != null && (this._vertexBuffer = null), this.items.length = 0;
                }
              };
              (0, n.registerType)("Text3dBatch", [E, v, null]);
              function m(f) {
                this.referenceCount = 0, this.glyph = f, this.uvRect = new V.Rectangle(), this.size = new e.Vector2d(), this.referenceCount = 1;
              }
              m.create = function(f, R, O, W) {
                var N = new m(f);
                return N.glyph = f, N.uvRect = R, N.size = O, N.extents = W, N.referenceCount = 1, N;
              }, m._fromXML = function(f) {
                var R = f.attributes.getNamedItem("Glyph").nodeValue, O = new m(R);
                return O.uvRect = V.Rectangle.create(parseFloat(f.attributes.getNamedItem("UVLeft").nodeValue), parseFloat(f.attributes.getNamedItem("UVTop").nodeValue), parseFloat(f.attributes.getNamedItem("UVWidth").nodeValue), parseFloat(f.attributes.getNamedItem("UVHeight").nodeValue)), O.size = e.Vector2d.create(parseFloat(f.attributes.getNamedItem("SizeWidth").nodeValue), parseFloat(f.attributes.getNamedItem("SizeHeight").nodeValue)), O.extents = e.Vector2d.create(parseFloat(f.attributes.getNamedItem("ExtentsWidth").nodeValue), parseFloat(f.attributes.getNamedItem("ExtentsHeight").nodeValue)), O;
              };
              var L = {
                addRef: function() {
                  this.referenceCount++;
                },
                release: function() {
                  this.referenceCount--;
                }
              };
              (0, n.registerType)("GlyphItem", [m, L, null]);
              function A(f) {
                this._cellHeight = 128, this._gridSize = 8, this.ready = !1, this._glyphItems = {}, this.textObject = new a.TextObject(), this._dirty = !0, this._textureDirty = !0, this._version = 0, this._cellHeight = f, this._texture = l.Texture.fromUrl(b.URLHelpers.singleton.engineAssetUrl("glyphs1.png")), this._webFile = new y.WebFile(b.URLHelpers.singleton.engineAssetUrl("glyphs1.xml")), this._webFile.onStateChange = t.ss.bind("_glyphXmlReady", this), this._webFile.send();
              }
              A._caches = {}, A._allGlyphs = "", A.getCache = function(f) {
                return t.ss.keyExists(A._caches, f) || (A._caches[f] = new A(f)), A._caches[f];
              }, A.cleanUpAll = function() {
                t.ss.clearKeys(A._caches);
              };
              var K = {
                get_height: function() {
                  return this._cellHeight;
                },
                _glyphXmlReady: function() {
                  this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadXmlGlyph(this._webFile.getXml());
                },
                _loadXmlGlyph: function(f) {
                  for (var R = _.Util.selectSingleNode(f, "GlyphItems"), O = t.ss.enumerate(R.childNodes); O.moveNext(); ) {
                    var W = O.current;
                    if (W.nodeName === "GlyphItem") {
                      var N = m._fromXML(W);
                      this._glyphItems[N.glyph] = N, A._allGlyphs = A._allGlyphs + N.glyph;
                    }
                  }
                  this.ready = !0;
                },
                get_texture: function() {
                  return this._texture;
                },
                _makeTexture: function() {
                  this._calcOrMake(!0);
                },
                getGlyphItem: function(f) {
                  return this._dirty && this._calculateGlyphDetails(), this._glyphItems[f];
                },
                _calculateGlyphDetails: function() {
                  this._calcOrMake(!1);
                },
                _calcOrMake: function(f) {
                },
                get_version: function() {
                  return this._version;
                },
                set_version: function(f) {
                  return this._version = f, f;
                },
                addGlyph: function(f) {
                  if (t.ss.keyExists(this._glyphItems, f))
                    this._glyphItems[f].addRef();
                  else {
                    var R = new m(f);
                    this._glyphItems[f] = R, this._dirty = !0, this._textureDirty = !0, this._version++, A._allGlyphs = A._allGlyphs + f;
                  }
                },
                cleanUp: function() {
                  this._dirty = !0, this._texture = null;
                },
                dispose: function() {
                  this.cleanUp();
                },
                get_dirty: function() {
                  return this._dirty;
                },
                set_dirty: function(f) {
                  return this._dirty = f, f;
                }
              };
              (0, n.registerType)("GlyphCache", [A, K, null, t.ss.IDisposable]);
              function T(f, R, O, W, N) {
                this.rotation = 0, this.tilt = 0, this.bank = 0, this._matInit = !1, this.color = r.Colors.get_white(), this.sky = !0, this.scale = 0, this.opacity = 1, this.text = "", this.width = 1, this.height = 1, this.alignment = 0, this.text = O, this.up = R, this.center = f, this.scale = N, this.top = e.Vector3d.addVectors(f, e.Vector3d.scale(R, N)), W < 0 && (this.sky = !1);
              }
              var w = {
                addGlyphPoints: function(f, R, O, W) {
                  for (var N = new Array(6), $ = 0; $ < 6; $++)
                    N[$] = new e.PositionTexture();
                  var S = e.Vector3d.cross(this.center, this.up), I = e.Vector3d.cross(this.up, this.center);
                  S.normalize(), I.normalize(), this.up.normalize();
                  var x = e.Vector3d.cross(this.center, I);
                  x.normalize(), this.alignment ? this.alignment === 1 && (S.multiply(-O.get_left() * 2), I.multiply(O.get_right() * 2)) : (S.multiply(this.width - O.get_left() * 2), I.multiply(this.width - (this.width * 2 - O.get_right() * 2)));
                  var P = x.copy(), d = e.Vector3d.subtractVectors(e.Vector3d.get_empty(), x);
                  P.multiply(this.height - O.get_top() * 2), d.multiply(this.height - (this.height * 2 - O.get_bottom() * 2));
                  var U = this.center.copy();
                  U.add(P), this.sky ? U.add(S) : U.subtract(S);
                  var F = this.center.copy();
                  F.add(P), this.sky ? F.add(I) : F.subtract(I);
                  var X = this.center.copy();
                  this.sky ? X.add(S) : X.subtract(S), X.add(d);
                  var Y = this.center.copy();
                  if (this.sky ? Y.add(I) : Y.subtract(I), Y.add(d), N[0].position = U.copy(), N[0].tu = W.get_left(), N[0].tv = W.get_top(), N[2].tu = W.get_left(), N[2].tv = W.get_bottom(), N[2].position = X.copy(), N[1].tu = W.get_right(), N[1].tv = W.get_top(), N[1].position = F.copy(), N[3].tu = W.get_right(), N[3].tv = W.get_bottom(), N[3].position = Y.copy(), N[5].tu = W.get_right(), N[5].tv = W.get_top(), N[5].position = F.copy(), N[4].tu = W.get_left(), N[4].tv = W.get_bottom(), N[4].position = X.copy(), this.rotation || this.tilt || this.bank) {
                    if (!this._matInit) {
                      var M = e.Matrix3d.lookAtLH(this.center, new e.Vector3d(), this.up), B = M.clone();
                      B.invert(), this._rtbMat = e.Matrix3d.multiplyMatrix(e.Matrix3d.multiplyMatrix(e.Matrix3d.multiplyMatrix(e.Matrix3d.multiplyMatrix(M, e.Matrix3d._rotationZ(-this.rotation / 180 * Math.PI)), e.Matrix3d._rotationX(-this.tilt / 180 * Math.PI)), e.Matrix3d._rotationY(-this.bank / 180 * Math.PI)), B), this._matInit = !0;
                    }
                    for (var $ = 0; $ < 6; $++)
                      N[$].position = e.Vector3d._transformCoordinate(N[$].position, this._rtbMat);
                  }
                  for (var D = t.ss.enumerate(N); D.moveNext(); ) {
                    var k = D.current;
                    f.push(k);
                  }
                }
              };
              (0, n.registerType)("Text3d", [T, w, null]);
            }
          ),
          /***/
          "./esm/space_time_controller.js": (
            /*!**************************************!*\
              !*** ./esm/space_time_controller.js ***!
              \**************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                SpaceTimeController: () => (
                  /* binding */
                  c
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./astrocalc/date.js */
                "./esm/astrocalc/date.js"
              ), _ = i(
                /*! ./astrocalc.js */
                "./esm/astrocalc.js"
              ), r = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), o = i(
                /*! ./settings.js */
                "./esm/settings.js"
              );
              function c() {
              }
              c.framesPerSecond = 30, c.frameDumping = !1, c.cancelFrameDump = !1, c.currentFrameNumber = 0, c.totalFrames = 0, c._offset = 0, c._syncToClock = !0, c._timeRate = 1, c._altitude = 0, c.updateClock = function() {
                if (c._syncToClock) {
                  var g = c.get_metaNow();
                  if (c._timeRate !== 1) {
                    var a = g.getTime() - c.last.getTime(), b = a * c._timeRate;
                    c._offset += b;
                  }
                  c.last = g;
                  try {
                    c._now = new Date(g.getTime() + c._offset);
                  } catch {
                    c._now = new Date(1, 12, 25, 23, 59, 59), c._offset = c._now - c.get_metaNow();
                  }
                  c._now.getFullYear() > 4e3 && (c._now = new Date(4e3, 12, 31, 23, 59, 59), c._offset = c._now - c.get_metaNow()), c._now.getFullYear() < 1 && (c._now = new Date(0, 12, 25, 23, 59, 59), c._offset = c._now - c.get_metaNow());
                }
              }, c.getTimeForFutureTime = function(g) {
                try {
                  if (c._syncToClock) {
                    var a = new Date(c.get_now().getTime() + g * 1e3 * c._timeRate);
                    return a;
                  } else
                    return c.get_now();
                } catch {
                  return c.get_now();
                }
              }, c.getJNowForFutureTime = function(g) {
                try {
                  if (c._syncToClock) {
                    var a = new Date(c.get_now().getTime() + n.ss.truncate(g * 1e3 * c._timeRate));
                    return c.utcToJulian(a);
                  } else
                    return c.utcToJulian(c.get_now());
                } catch {
                  return c.utcToJulian(c.get_now());
                }
              }, c.get_now = function() {
                return c._now;
              }, c.set_now = function(g) {
                return c._now = g, c._offset = c._now - c.get_metaNow(), c.last = c.get_metaNow(), g;
              }, c.get_metaNow = function() {
                return c._metaNow;
              }, c.set_metaNow = function(g) {
                return c.frameDumping || (c._metaNow = g), g;
              }, c.nextFrame = function() {
                c._metaNow.setMilliseconds(c._metaNow.getMilliseconds() + Math.round(1e3 / c.framesPerSecond)), c.currentFrameNumber += 1;
              }, c.get_doneDumping = function() {
                return !c.frameDumping || c.cancelFrameDump || c.currentFrameNumber >= c.totalFrames;
              }, c.syncTime = function() {
                c._offset = 0, c._now = n.ss.now(), c._syncToClock = !0;
              }, c.get_jNow = function() {
                return c.utcToJulian(c.get_now());
              }, c.get_syncToClock = function() {
                return c._syncToClock;
              }, c.set_syncToClock = function(g) {
                return c._syncToClock !== g && (c._syncToClock = g, g ? (c.last = n.ss.now(), c._offset = c._now - n.ss.now()) : c._now = new Date(n.ss.now().getTime() + c._offset)), g;
              }, c.get_timeRate = function() {
                return c._timeRate;
              }, c.set_timeRate = function(g) {
                return c._timeRate = g, g;
              }, c.get_altitude = function() {
                return c._altitude;
              }, c.set_altitude = function(g) {
                return c._altitude = g, g;
              }, c.get_location = function() {
                return c._location = r.Coordinates.fromLatLng(o.Settings.get_active().get_locationLat(), o.Settings.get_active().get_locationLng()), c._altitude = o.Settings.get_active().get_locationAltitude(), c._location;
              }, c.set_location = function(g) {
                return o.Settings.get_globalSettings().get_locationLat() !== g.get_lat() && o.Settings.get_globalSettings().set_locationLat(g.get_lat()), o.Settings.get_globalSettings().get_locationLng() !== g.get_lng() && o.Settings.get_globalSettings().set_locationLng(g.get_lng()), c._location = g, g;
              }, c.julianToUtc = function(g) {
                var a = new e.DT();
                a.setJD(g, !0);
                var b = (a.second() - n.ss.truncate(a.second())) * 1e3;
                return new Date(a.year(), a.month() - 1, a.day(), a.hour(), a.minute(), n.ss.truncate(a.second()), n.ss.truncate(b));
              }, c._twoLineDateToJulian = function(g) {
                var a = parseInt(g.substring(0, 1)) < 6, b = parseInt((a ? " 20" : "19") + g.substring(0, 2)), V = parseFloat(g.substring(2, 3)), y = parseFloat(g.substr(5)), C = new Date(b, 0, 1, 0, 0);
                return c.utcToJulian(C) + (V - 1 + y);
              }, c.julianToTwoLineDate = function(g) {
                return c.dateToTwoLineDate(c.julianToUtc(g));
              }, c.dateToTwoLineDate = function(g) {
                var a = new n.ss.StringBuilder();
                a.append(g.getFullYear() % 100);
                var b = new Date(g.getFullYear(), 0, 1, 0, 0), V = Math.floor((g - b) / (60 * 60 * 24 * 1e3)) + 2, y = V + g.getHours() / 24 + g.getMinutes() / 60 / 24 + g.getSeconds() / 60 / 60 / 24 + g.getMilliseconds() / 1e3 / 60 / 60 / 24, C = c.tleDayString(y);
                return a.append(C), a.toString();
              }, c.tleDayString = function(g) {
                var a = g.toString(), b = a.indexOf(".");
                b === -1 && (b = a.length, a += ".0");
                var V = a.length - b - 1, y = "00000000";
                return a = y.substr(0, 3 - b) + a + y.substr(0, 8 - V), a;
              }, c.utcToJulian = function(g) {
                var a = g.getUTCFullYear(), b = g.getUTCMonth() + 1, V = g.getUTCDate(), y = g.getUTCHours(), C = g.getUTCMinutes(), E = g.getUTCSeconds() + g.getUTCMilliseconds() / 1e3, v = V + y / 24 + C / 1440 + E / 86400;
                return _.AstroCalc.getJulianDay(a, b, v);
              }, c.dateToJD = function(g, a, b, V) {
                var y = g, C = a;
                C < 3 && (y = y - 1, C = C + 12);
                var E = 0, v = 0;
                return V && (E = n.ss.truncate(y / 100), v = 2 - E + n.ss.truncate(E / 4)), n.ss.truncate(365.25 * (y + 4716)) + n.ss.truncate(30.6001 * (C + 1)) + b + v - 1524.5;
              };
              var l = {};
              (0, t.registerType)("SpaceTimeController", [c, l, null]);
            }
          ),
          /***/
          "./esm/ss.js": (
            /*!*******************!*\
              !*** ./esm/ss.js ***!
              \*******************/
            /***/
            (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
              __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
                /* harmony export */
                ss: () => (
                  /* binding */
                  ss
                )
                /* harmony export */
              });
              /*! Script# Runtime
               * Designed and licensed for use and distribution with Script#-generated scripts.
               * Copyright (c) 2012, Nikhil Kothari, and the Script# Project.
               * More information at http://scriptsharp.com
               */
              function _ss() {
                function _nop() {
                }
                function isValue(s) {
                  return s != null;
                }
                function _value(s) {
                  for (var u = 2, i = s.length; u < i; u++)
                    if (isValue(s[u]))
                      return s[u];
                  return null;
                }
                function value(s, u) {
                  return isValue(s) ? s : isValue(u) ? u : _value(arguments);
                }
                function extend(s, u) {
                  for (var i in u)
                    s[i] = u[i];
                  return s;
                }
                function parseBoolean(s) {
                  return s.toLowerCase() == "true";
                }
                function parseRegExp(s) {
                  if (s[0] == "/") {
                    var u = s.lastIndexOf("/");
                    if (u > 1) {
                      var i = s.substring(1, u), t = s.substr(u + 1);
                      return new RegExp(i, t);
                    }
                  }
                  return null;
                }
                function parseNumber(s) {
                  return !s || !s.length ? 0 : s.indexOf(".") >= 0 || s.indexOf("e") >= 0 || endsWith(s, "f") || endsWith(s, "F") ? parseFloat(s) : parseInt(s, 10);
                }
                function parseDate(s) {
                  var u = Date.parse(s);
                  return isNaN(u) ? void 0 : new Date(u);
                }
                function truncate(s) {
                  return s >= 0 ? Math.floor(s) : Math.ceil(s);
                }
                function now() {
                  return /* @__PURE__ */ new Date();
                }
                function today() {
                  var s = /* @__PURE__ */ new Date();
                  return new Date(s.getFullYear(), s.getMonth(), s.getDate());
                }
                function compareDates(s, u) {
                  return s === u ? !0 : isValue(s) && isValue(u) ? s.getTime() == u.getTime() : !1;
                }
                function _popStackFrame(s) {
                  if (!(!isValue(s.stack) || !isValue(s.fileName) || !isValue(s.lineNumber))) {
                    for (var u = s.stack.split(`
`), i = u[0], t = s.fileName + ":" + s.lineNumber; isValue(i) && i.indexOf(t) === -1; )
                      u.shift(), i = u[0];
                    var n = u[1];
                    if (isValue(n)) {
                      var e = n.match(/@(.*):(\d+)$/);
                      isValue(e) && (u.shift(), s.stack = u.join(`
`), s.fileName = e[1], s.lineNumber = parseInt(e[2], 10));
                    }
                  }
                }
                function error(s, u, i) {
                  var t = new Error(s);
                  if (u)
                    for (var n in u)
                      t[n] = u[n];
                  return i && (t.innerException = i), _popStackFrame(t), t;
                }
                function fail(message) {
                  console.assert(!1, message), globalThis.navigator && eval("debugger;");
                }
                function toArray(s) {
                  return s ? typeof s == "string" ? JSON.parse("(" + s + ")") : Array.prototype.slice.call(s) : null;
                }
                function removeItem(s, u) {
                  var i = s.indexOf(u);
                  return i >= 0 ? (s.splice(i, 1), !0) : !1;
                }
                function clearKeys(s) {
                  for (var u in s)
                    delete s[u];
                }
                function keyExists(s, u) {
                  return s[u] !== void 0;
                }
                function keys(s) {
                  if (Object.keys)
                    return Object.keys(s);
                  var u = [];
                  for (var i in s)
                    u.push(i);
                  return u;
                }
                function keyCount(s) {
                  return keys(s).length;
                }
                function Enumerator(s, u) {
                  var i = -1, t = u ? u.length : s.length, n = u ? function() {
                    return { key: u[i], value: s[u[i]] };
                  } : function() {
                    return s[i];
                  };
                  this.current = null, this.moveNext = function() {
                    return i++, this.current = n(), i < t;
                  }, this.reset = function() {
                    i = -1, this.current = null;
                  };
                }
                var _nopEnumerator = {
                  current: null,
                  moveNext: function() {
                    return !1;
                  },
                  reset: _nop
                };
                function enumerate(s) {
                  return isValue(s) ? s.getEnumerator ? s.getEnumerator() : s.length !== void 0 ? new Enumerator(s) : new Enumerator(s, keys(s)) : _nopEnumerator;
                }
                function Stack() {
                  this.count = 0, this._items = [];
                }
                var Stack$ = {
                  clear: function() {
                    this._items.length = 0, this.count = 0;
                  },
                  contains: function(s) {
                    for (var u = this.count - 1; u >= 0; u--)
                      if (this._items[u] === s)
                        return !0;
                    return !1;
                  },
                  getEnumerator: function() {
                    return new Enumerator(this._items.reverse());
                  },
                  peek: function() {
                    return this._items[this.count - 1];
                  },
                  push: function(s) {
                    this._items.push(s), this.count++;
                  },
                  pop: function() {
                    if (this.count)
                      return this.count--, this._items.pop();
                  }
                };
                function Queue() {
                  this.count = 0, this._items = [], this._offset = 0;
                }
                function _cleanQueue(s) {
                  s._items = s._items.slice(s._offset), s._offset = 0;
                }
                var Queue$ = {
                  clear: function() {
                    this._items.length = 0, this._offset = 0, this.count = 0;
                  },
                  contains: function(s) {
                    for (var u = this._offset, i = this._items.length; u <= i; u++)
                      if (this._items[u] === s)
                        return !0;
                    return !1;
                  },
                  dequeue: function() {
                    if (this.count) {
                      var s = this._items[this._offset];
                      return ++this._offset * 2 >= this._items.length && _cleanQueue(this), this.count--, s;
                    }
                  },
                  enqueue: function(s) {
                    this._items.push(s), this.count++;
                  },
                  getEnumerator: function() {
                    return this._offset != 0 && _cleanQueue(this), new Enumerator(this._items);
                  },
                  peek: function() {
                    return this._items.length ? this._items[this._offset] : void 0;
                  }
                };
                function string(s, u) {
                  return typeof u == "number" ? u > 1 ? new Array(u + 1).join(s) : s : Array.prototype.join.call(arguments, "");
                }
                function emptyString(s) {
                  return !s || !s.length;
                }
                function whitespace(s) {
                  return emptyString(s) || !s.replace(/^\s*/, "").length;
                }
                function compareStrings(s, u, i) {
                  return s = s || "", u = u || "", i && (s = s.toUpperCase(), u = u.toUpperCase()), s === u ? 0 : s < u ? -1 : 1;
                }
                var _formatPlaceHolderRE = /(\{[^}^{]+\})/g, _formatters = {};
                function format(s) {
                  var u = neutralCulture, i = s, t = Array.prototype.slice.call(arguments, 1);
                  return s.constructor != String && (u = s, i = t[0], t = t.slice(1)), i.replace(
                    _formatPlaceHolderRE,
                    function(n, e) {
                      var _ = parseInt(e.substr(1), 10), r = t[_];
                      if (!isValue(r))
                        return "";
                      var o = _formatters[typeName(r)];
                      if (o) {
                        var c = "", l = e.indexOf(":");
                        if (l > 0 && (c = e.substring(l + 1, e.length - 1)), c && c != "i")
                          return o(r, c, u);
                      }
                      return u == neutralCulture ? r.toString() : r.toLocaleString();
                    }
                  );
                }
                function trim(s, u) {
                  if (u || !String.prototype.trim) {
                    u = u ? u.join("") : null;
                    var i = u ? new RegExp("^[" + u + "]+|[" + u + "]+$", "g") : /^\s+|\s+$/g;
                    return s.replace(i, "");
                  }
                  return s.trim();
                }
                function trimStart(s, u) {
                  var i = u ? new RegExp("^[" + u.join("") + "]+") : /^\s+/;
                  return s.replace(i, "");
                }
                function trimEnd(s, u) {
                  var i = u ? new RegExp("[" + u.join("") + "]+$") : /\s+$/;
                  return s.replace(i, "");
                }
                function startsWith(s, u) {
                  return emptyString(u) ? !0 : emptyString(s) || u.length > s.length ? !1 : s.substr(0, u.length) == u;
                }
                function endsWith(s, u) {
                  return emptyString(u) ? !0 : emptyString(s) || u.length > s.length ? !1 : s.substr(-u.length) == u;
                }
                function padLeft(s, u, i) {
                  return s.length < u ? string(i || " ", u - s.length) + s : s;
                }
                function padRight(s, u, i) {
                  return s.length < u ? s + string(i || " ", u - s.length) : s;
                }
                function removeString(s, u, i) {
                  return !i || u + i > s.length ? s.substr(0, u) : s.substr(0, u) + s.substr(u + i);
                }
                function insertString(s, u, i) {
                  return i ? u ? s.substr(0, u) + i + s.substr(u) : i + s : s;
                }
                function replaceString(s, u, i) {
                  return s.split(u).join(i || "");
                }
                function _bindList(s) {
                  var u = function() {
                    for (var i = arguments, t = null, n = 0, e = s.length; n < e; n++)
                      t = i.length ? s[n].apply(null, i) : s[n].call(null);
                    return t;
                  };
                  return u._fnList = s, u;
                }
                function bind(s, u) {
                  if (!u)
                    return s;
                  var i = null;
                  s = typeof s == "string" ? u[i = s] : s;
                  var t = i ? u.$$b || (u.$$b = {}) : null, n = t ? t[i] : null;
                  return n || (n = function() {
                    return s.apply(u, arguments);
                  }, t && (t[i] = n)), n;
                }
                function bindAdd(s, u) {
                  if (!s)
                    return u;
                  if (!u)
                    return s;
                  var i = [].concat(s._fnList || s, u);
                  return _bindList(i);
                }
                function bindSub(s, u) {
                  if (!s)
                    return null;
                  if (!u)
                    return s;
                  var i = s._fnList || [s], t = i.indexOf(u);
                  return t >= 0 ? i.length == 1 ? null : (i = t ? i.slice(0, t).concat(i.slice(t + 1)) : i.slice(1), _bindList(i)) : s;
                }
                function bindExport(s, u, i, t) {
                  i = i || "__" + (/* @__PURE__ */ new Date()).valueOf(), t = t || globalThis;
                  var n = {
                    name: i,
                    detach: function() {
                      t[i] = _nop;
                    },
                    dispose: function() {
                      try {
                        delete t[i];
                      } catch {
                        t[i] = void 0;
                      }
                    }
                  };
                  return t[i] = u ? s : function() {
                    return n.dispose(), s.apply(null, arguments);
                  }, n;
                }
                function EventArgs() {
                }
                EventArgs.Empty = new EventArgs();
                function CancelEventArgs() {
                  this.cancel = !1;
                }
                function IDisposable() {
                }
                function IEnumerable() {
                }
                function IEnumerator() {
                }
                function IObserver() {
                }
                function IApplication() {
                }
                function IContainer() {
                }
                function IObjectFactory() {
                }
                function IEventManager() {
                }
                function IInitializable() {
                }
                function StringBuilder(s) {
                  this._parts = isValue(s) && s !== "" ? [s] : [], this.isEmpty = this._parts.length == 0;
                }
                var StringBuilder$ = {
                  append: function(s) {
                    return isValue(s) && s !== "" && (this._parts.push(s), this.isEmpty = !1), this;
                  },
                  appendLine: function(s) {
                    return this.append(s), this.append(`\r
`), this.isEmpty = !1, this;
                  },
                  clear: function() {
                    this._parts = [], this.isEmpty = !0;
                  },
                  toString: function(s) {
                    return this._parts.join(s || "");
                  }
                }, _observerStack = [], _observerRegistration = {
                  dispose: function() {
                    _observerStack.pop();
                  }
                };
                function _captureObservers(s) {
                  var u = _observerStack, i = u.length;
                  if (i) {
                    s = s || [];
                    for (var t = 0; t < i; t++) {
                      var n = u[t];
                      s.indexOf(n) < 0 && s.push(n);
                    }
                    return s;
                  }
                  return null;
                }
                function _invalidateObservers(s) {
                  for (var u = 0, i = s.length; u < i; u++)
                    s[u].invalidateObserver();
                }
                function Observable(s) {
                  this._v = s, this._observers = null;
                }
                var Observable$ = {
                  getValue: function() {
                    return this._observers = _captureObservers(this._observers), this._v;
                  },
                  setValue: function(s) {
                    if (this._v !== s) {
                      this._v = s;
                      var u = this._observers;
                      u && (this._observers = null, _invalidateObservers(u));
                    }
                  }
                };
                Observable.registerObserver = function(s) {
                  return _observerStack.push(s), _observerRegistration;
                };
                function ObservableCollection(s) {
                  this._items = s || [], this._observers = null;
                }
                var ObservableCollection$ = {
                  get_item: function(s) {
                    return this._observers = _captureObservers(this._observers), this._items[s];
                  },
                  set_item: function(s, u) {
                    this._items[s] = u, this._updated();
                  },
                  get_length: function() {
                    return this._observers = _captureObservers(this._observers), this._items.length;
                  },
                  add: function(s) {
                    this._items.push(s), this._updated();
                  },
                  clear: function() {
                    this._items.clear(), this._updated();
                  },
                  contains: function(s) {
                    return this._items.indexOf(s) >= 0;
                  },
                  getEnumerator: function() {
                    return this._observers = _captureObservers(this._observers), this._items.getEnumerator();
                  },
                  indexOf: function(s) {
                    return this._items.indexOf(s);
                  },
                  insert: function(s, u) {
                    this._items.insert(s, u), this._updated();
                  },
                  remove: function(s) {
                    return this._items.remove(s) ? (this._updated(), !0) : !1;
                  },
                  removeAt: function(s) {
                    this._items.splice(s, 1), this._updated();
                  },
                  toArray: function() {
                    return this._items;
                  },
                  _updated: function() {
                    var s = this._observers;
                    s && (this._observers = null, _invalidateObservers(s));
                  }
                };
                function Task(s) {
                  this._continuations = s !== void 0 ? (this.status = "done", null) : (this.status = "pending", []), this.result = s, this.error = null;
                }
                var Task$ = {
                  get_completed: function() {
                    return this.status != "pending";
                  },
                  changeWith: function(s) {
                    var u = new Task();
                    return this.continueWith(function(i) {
                      var t = i.error, n;
                      if (!t)
                        try {
                          n = s(i);
                        } catch (e) {
                          t = e;
                        }
                      _updateTask(u, n, t);
                    }), u;
                  },
                  continueWith: function(s) {
                    if (this._continuations)
                      this._continuations.push(s);
                    else {
                      var u = this;
                      setTimeout(function() {
                        s(u);
                      }, 0);
                    }
                    return this;
                  },
                  done: function(s) {
                    return this.continueWith(function(u) {
                      u.status == "done" && s(u.result);
                    });
                  },
                  fail: function(s) {
                    return this.continueWith(function(u) {
                      u.status == "failed" && s(u.error);
                    });
                  },
                  then: function(s, u) {
                    return this.continueWith(function(i) {
                      i.status == "done" ? s(i.result) : u(i.error);
                    });
                  }
                };
                function _updateTask(s, u, i) {
                  if (s.status == "pending") {
                    i ? (s.error = i, s.status = "failed") : (s.result = u, s.status = "done");
                    var t = s._continuations;
                    s._continuations = null;
                    for (var n = 0, e = t.length; n < e; n++)
                      t[n](s);
                  }
                }
                function _joinTasks(s, u) {
                  s = toArray(s);
                  var i = s.length, t = 0;
                  i > 1 && typeof s[0] == "number" && (t = s[0], s = s.slice(1), i--), Array.isArray(s[0]) && (s = s[0], i = s.length);
                  var n = new Task(), e = 0;
                  function _(c) {
                    n.status == "pending" && (e++, u ? _updateTask(n, c) : e == i && _updateTask(n, !0));
                  }
                  function r() {
                    n.status == "pending" && (u ? _updateTask(n, null) : _updateTask(n, !1));
                  }
                  t != 0 && setTimeout(r, t);
                  for (var o = 0; o < i; o++)
                    s[o].continueWith(_);
                  return n;
                }
                Task.all = function() {
                  return _joinTasks(arguments, !1);
                }, Task.any = function() {
                  return _joinTasks(arguments, !0);
                }, Task.delay = function(s) {
                  var u = new Task();
                  return setTimeout(function() {
                    _updateTask(u, !0);
                  }, s), u;
                };
                function deferred(s) {
                  var u = new Task(s);
                  return {
                    task: u,
                    resolve: function(i) {
                      _updateTask(u, i);
                    },
                    reject: function(i) {
                      _updateTask(u, null, i || new Error());
                    }
                  };
                }
                var neutralCulture = {
                  name: "",
                  // numberFormat
                  nf: {
                    nan: "NaN",
                    // naNSymbol
                    neg: "-",
                    // negativeSign
                    pos: "+",
                    // positiveSign
                    negInf: "-Infinity",
                    // negativeInfinityText
                    posInf: "Infinity",
                    // positiveInfinityText
                    gw: [3],
                    // numberGroupSizes
                    dd: 2,
                    // numberDecimalDigits
                    ds: ".",
                    // numberDecimalSeparator
                    gs: ",",
                    // numberGroupSeparator
                    per: "%",
                    // percentSymbol
                    perGW: [3],
                    // percentGroupSizes
                    perDD: 2,
                    // percentDecimalDigits
                    perDS: ".",
                    // percentDecimalSeparator
                    perGS: ",",
                    // percentGroupSeparator
                    perPP: "{0} %",
                    // percentPositivePattern
                    perNP: "-{0} %",
                    // percentNegativePattern
                    cur: "$",
                    // currencySymbol
                    curGW: [3],
                    // currencyGroupSizes
                    curDD: 2,
                    // currencyDecimalDigits
                    curDS: ".",
                    // currencyDecimalSeparator
                    curGS: ",",
                    // currencyGroupSeparator
                    curNP: "(${0})",
                    // currencyNegativePattern
                    curPP: "${0}"
                    // currencyPositivePattern
                  },
                  // dateFormat
                  dtf: {
                    am: "AM",
                    // amDesignator
                    pm: "PM",
                    // pmDesignator
                    ds: "/",
                    // dateSeparator
                    ts: ":",
                    // timeSeparator
                    gmt: "ddd, dd MMM yyyy HH:mm:ss 'GMT'",
                    // gmtDateTimePattern
                    uni: "yyyy-MM-dd HH:mm:ssZ",
                    // universalDateTimePattern
                    sort: "yyyy-MM-ddTHH:mm:ss",
                    // sortableDateTimePattern
                    dt: "dddd, MMMM dd, yyyy h:mm:ss tt",
                    // dateTimePattern
                    ld: "dddd, MMMM dd, yyyy",
                    // longDatePattern
                    sd: "M/d/yyyy",
                    // shortDatePattern
                    lt: "h:mm:ss tt",
                    // longTimePattern
                    st: "h:mm tt",
                    // shortTimePattern
                    day0: 0,
                    // firstDayOfWeek
                    day: [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ],
                    // dayNames
                    sday: [
                      "Sun",
                      "Mon",
                      "Tue",
                      "Wed",
                      "Thu",
                      "Fri",
                      "Sat"
                    ],
                    // shortDayNames
                    mday: [
                      "Su",
                      "Mo",
                      "Tu",
                      "We",
                      "Th",
                      "Fr",
                      "Sa"
                    ],
                    // minimizedDayNames
                    mon: [
                      "January",
                      "February",
                      "March",
                      "April",
                      "May",
                      "June",
                      "July",
                      "August",
                      "September",
                      "October",
                      "November",
                      "December",
                      ""
                    ],
                    // monthNames
                    smon: [
                      "Jan",
                      "Feb",
                      "Mar",
                      "Apr",
                      "May",
                      "Jun",
                      "Jul",
                      "Aug",
                      "Sep",
                      "Oct",
                      "Nov",
                      "Dec",
                      ""
                    ]
                    // shortMonthNames
                  }
                }, currentCulture = { name: "en-us", dtf: neutralCulture.dtf, nf: neutralCulture.nf };
                function _commaFormatNumber(s, u, i, t) {
                  var n = null, e = s.indexOf(i);
                  e > 0 && (n = s.substr(e), s = s.substr(0, e));
                  var _ = s.startsWith("-");
                  _ && (s = s.substr(1));
                  var r = 0, o = u[r];
                  if (s.length < o)
                    return n ? s + n : s;
                  for (var c = s.length, l = "", g = !1; !g; ) {
                    var a = o, b = c - a;
                    if (b < 0 && (o += b, a += b, b = 0, g = !0), !a)
                      break;
                    var V = s.substr(b, a);
                    l.length ? l = V + t + l : l = V, c -= a, r < u.length - 1 && (r++, o = u[r]);
                  }
                  return _ && (l = "-" + l), n ? l + n : l;
                }
                _formatters.Number = function(s, u, i) {
                  var t = i.nf, n = "", e = -1;
                  u.length > 1 && (e = parseInt(u.substr(1)));
                  var _ = u.charAt(0);
                  switch (_) {
                    case "d":
                    case "D":
                      n = parseInt(Math.abs(s)).toString(), e != -1 && (n = padLeft(n, e, "0")), s < 0 && (n = "-" + n);
                      break;
                    case "x":
                    case "X":
                      n = parseInt(Math.abs(s)).toString(16), _ == "X" && (n = n.toUpperCase()), e != -1 && (n = padLeft(n, e, "0"));
                      break;
                    case "e":
                    case "E":
                      e == -1 ? n = s.toExponential() : n = s.toExponential(e), _ == "E" && (n = n.toUpperCase());
                      break;
                    case "f":
                    case "F":
                    case "n":
                    case "N":
                      if (e == -1 && (e = t.dd), n = s.toFixed(e).toString(), e && t.ds != ".") {
                        var r = n.indexOf(".");
                        n = n.substr(0, r) + t.ds + n.substr(r + 1);
                      }
                      (_ == "n" || _ == "N") && (n = _commaFormatNumber(n, t.gw, t.ds, t.gs));
                      break;
                    case "c":
                    case "C":
                      if (e == -1 && (e = t.curDD), n = Math.abs(s).toFixed(e).toString(), e && t.curDS != ".") {
                        var r = n.indexOf(".");
                        n = n.substr(0, r) + t.curDS + n.substr(r + 1);
                      }
                      n = _commaFormatNumber(n, t.curGW, t.curDS, t.curGS), s < 0 ? n = String.format(i, t.curNP, n) : n = String.format(i, t.curPP, n);
                      break;
                    case "p":
                    case "P":
                      if (e == -1 && (e = t.perDD), n = (Math.abs(s) * 100).toFixed(e).toString(), e && t.perDS != ".") {
                        var r = n.indexOf(".");
                        n = n.substr(0, r) + t.perDS + n.substr(r + 1);
                      }
                      n = _commaFormatNumber(n, t.perGW, t.perDS, t.perGS), s < 0 ? n = String.format(i, t.perNP, n) : n = String.format(i, t.perPP, n);
                      break;
                  }
                  return n;
                };
                var _dateFormatRE = /'.*?[^\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
                _formatters.Date = function(s, u, i) {
                  if (u == "iso")
                    return s.toISOString();
                  if (u.charAt(0) == "i") {
                    var t = "String";
                    switch (u) {
                      case "id":
                        t = "DateString";
                        break;
                      case "it":
                        t = "TimeString";
                        break;
                    }
                    return i == neutralCulture ? s["to" + t]() : s["toLocale" + t]();
                  }
                  var n = i.dtf;
                  if (u.length == 1)
                    switch (u) {
                      case "f":
                        u = n.ld + " " + n.st;
                        break;
                      case "F":
                        u = n.dt;
                        break;
                      case "d":
                        u = n.sd;
                        break;
                      case "D":
                        u = n.ld;
                        break;
                      case "t":
                        u = n.st;
                        break;
                      case "T":
                        u = n.lt;
                        break;
                      case "g":
                        u = n.sd + " " + n.st;
                        break;
                      case "G":
                        u = n.sd + " " + n.lt;
                        break;
                      case "R":
                      case "r":
                        n = neutralCulture.dtf, u = n.gmt;
                        break;
                      case "u":
                        u = n.uni;
                        break;
                      case "U":
                        u = n.dt, s = new Date(
                          s.getUTCFullYear(),
                          s.getUTCMonth(),
                          s.getUTCDate(),
                          s.getUTCHours(),
                          s.getUTCMinutes(),
                          s.getUTCSeconds(),
                          s.getUTCMilliseconds()
                        );
                        break;
                      case "s":
                        u = n.sort;
                        break;
                    }
                  u.charAt(0) == "%" && (u = u.substr(1));
                  var e = new StringBuilder();
                  for (_dateFormatRE.lastIndex = 0; ; ) {
                    var _ = _dateFormatRE.lastIndex, r = _dateFormatRE.exec(u);
                    if (e.append(u.slice(_, r ? r.index : u.length)), !r)
                      break;
                    var o = r[0], c = o;
                    switch (o) {
                      case "dddd":
                        c = n.day[s.getDay()];
                        break;
                      case "ddd":
                        c = n.sday[s.getDay()];
                        break;
                      case "dd":
                        c = padLeft(s.getDate().toString(), 2, "0");
                        break;
                      case "d":
                        c = s.getDate();
                        break;
                      case "MMMM":
                        c = n.mon[s.getMonth()];
                        break;
                      case "MMM":
                        c = n.smon[s.getMonth()];
                        break;
                      case "MM":
                        c = padLeft((s.getMonth() + 1).toString(), 2, "0");
                        break;
                      case "M":
                        c = s.getMonth() + 1;
                        break;
                      case "yyyy":
                        c = s.getFullYear();
                        break;
                      case "yy":
                        c = padLeft((s.getFullYear() % 100).toString(), 2, "0");
                        break;
                      case "y":
                        c = s.getFullYear() % 100;
                        break;
                      case "h":
                      case "hh":
                        c = s.getHours() % 12, c ? o == "hh" && (c = padLeft(c.toString(), 2, "0")) : c = "12";
                        break;
                      case "HH":
                        c = padLeft(s.getHours().toString(), 2, "0");
                        break;
                      case "H":
                        c = s.getHours();
                        break;
                      case "mm":
                        c = padLeft(s.getMinutes().toString(), 2, "0");
                        break;
                      case "m":
                        c = s.getMinutes();
                        break;
                      case "ss":
                        c = padLeft(s.getSeconds().toString(), 2, "0");
                        break;
                      case "s":
                        c = s.getSeconds();
                        break;
                      case "t":
                      case "tt":
                        c = s.getHours() < 12 ? n.am : n.pm, o == "t" && (c = c.charAt(0));
                        break;
                      case "fff":
                        c = padLeft(s.getMilliseconds().toString(), 3, "0");
                        break;
                      case "ff":
                        c = padLeft(s.getMilliseconds().toString(), 3).substr(0, 2);
                        break;
                      case "f":
                        c = padLeft(s.getMilliseconds().toString(), 3).charAt(0);
                        break;
                      case "z":
                        c = s.getTimezoneOffset() / 60, c = (c >= 0 ? "-" : "+") + Math.floor(Math.abs(c));
                        break;
                      case "zz":
                      case "zzz":
                        c = s.getTimezoneOffset() / 60, c = (c >= 0 ? "-" : "+") + padLeft(Math.floor(Math.abs(c)).toString(), 2, "0"), o == "zzz" && (c += n.ts + padLeft(Math.abs(s.getTimezoneOffset() % 60).toString(), 2, "0"));
                        break;
                      default:
                        c.charAt(0) == "'" && (c = c.substr(1, c.length - 2).replace(/\\'/g, "'"));
                        break;
                    }
                    e.append(c);
                  }
                  return e.toString();
                };
                var _modules = {}, _classMarker = "class", _interfaceMarker = "interface";
                function createType(s, u, i) {
                  if (Array.isArray(u)) {
                    var t = u[0];
                    if (u.length >= 2) {
                      var n = u[2];
                      if (n) {
                        var e = function() {
                        };
                        e.prototype = n.prototype, t.prototype = new e(), t.prototype.constructor = t;
                      }
                      u[1] && extend(t.prototype, u[1]), t.$base = n || Object, t.$interfaces = u.slice(3), t.$type = _classMarker;
                    } else
                      t.$type = _interfaceMarker;
                    return t.$name = s, i[s] = t;
                  }
                  return u;
                }
                function isClass(s) {
                  return s.$type == _classMarker;
                }
                function isInterface(s) {
                  return s.$type == _interfaceMarker;
                }
                function typeOf(s) {
                  var u;
                  try {
                    u = s.constructor;
                  } catch {
                  }
                  return u || Object;
                }
                function type(s) {
                  var u = s.indexOf("."), i = u > 0 ? _modules[s.substr(0, u)] : globalThis, t = u > 0 ? s.substr(u + 1) : s;
                  return i ? i[t] : null;
                }
                var _typeNames = [
                  Number,
                  "Number",
                  String,
                  "String",
                  Boolean,
                  "Boolean",
                  Array,
                  "Array",
                  Date,
                  "Date",
                  RegExp,
                  "RegExp",
                  Function,
                  "Function"
                ];
                function typeName(s) {
                  if (s instanceof Function || (s = s.constructor), s.$name)
                    return s.$name;
                  if (s.name)
                    return s.name;
                  for (var u = 0, i = _typeNames.length; u < i; u += 2)
                    if (s == _typeNames[u])
                      return _typeNames[u + 1];
                  return "Object";
                }
                function canAssign(s, u) {
                  if (s == Object || s == u)
                    return !0;
                  if (s.$type == _classMarker)
                    for (var i = u.$base; i; ) {
                      if (s == i)
                        return !0;
                      i = i.$base;
                    }
                  else if (s.$type == _interfaceMarker)
                    for (var i = u; i; ) {
                      var t = i.$interfaces;
                      if (t && t.indexOf(s) >= 0)
                        return !0;
                      i = i.$base;
                    }
                  return !1;
                }
                function instanceOf(s, u) {
                  if (!isValue(u))
                    return !1;
                  if (s == Object || u instanceof s)
                    return !0;
                  var i = typeOf(u);
                  return canAssign(s, i);
                }
                function canCast(s, u) {
                  return instanceOf(u, s);
                }
                function safeCast(s, u) {
                  return instanceOf(u, s) ? s : null;
                }
                function ss_module(s, u, i) {
                  var t = _modules[s] = { $name: s };
                  if (u)
                    for (var n in u)
                      createType(n, u[n], t);
                  var e = {};
                  if (i)
                    for (var n in i)
                      e[n] = createType(n, i[n], t);
                  return e;
                }
                function createRegistry(s) {
                  var u = _modules[s] = { $name: s };
                  return u;
                }
                return extend(ss_module("ss", null, {
                  IDisposable: [IDisposable],
                  IEnumerable: [IEnumerable],
                  IEnumerator: [IEnumerator],
                  IObserver: [IObserver],
                  IApplication: [IApplication],
                  IContainer: [IContainer],
                  IObjectFactory: [IObjectFactory],
                  IEventManager: [IEventManager],
                  IInitializable: [IInitializable],
                  EventArgs: [EventArgs, {}],
                  CancelEventArgs: [CancelEventArgs, {}, EventArgs],
                  StringBuilder: [StringBuilder, StringBuilder$],
                  Stack: [Stack, Stack$],
                  Queue: [Queue, Queue$],
                  Observable: [Observable, Observable$],
                  ObservableCollection: [ObservableCollection, ObservableCollection$, null, IEnumerable],
                  Task: [Task, Task$]
                }), {
                  version: "0.8",
                  isValue,
                  value,
                  extend,
                  keys,
                  keyCount,
                  keyExists,
                  clearKeys,
                  enumerate,
                  array: toArray,
                  remove: removeItem,
                  boolean: parseBoolean,
                  regexp: parseRegExp,
                  number: parseNumber,
                  date: parseDate,
                  truncate,
                  now,
                  today,
                  compareDates,
                  error,
                  string,
                  emptyString,
                  whitespace,
                  format,
                  compareStrings,
                  startsWith,
                  endsWith,
                  padLeft,
                  padRight,
                  trim,
                  trimStart,
                  trimEnd,
                  insertString,
                  removeString,
                  replaceString,
                  bind,
                  bindAdd,
                  bindSub,
                  bindExport,
                  deferred,
                  module: ss_module,
                  modules: _modules,
                  createRegistry,
                  createType,
                  isClass,
                  isInterface,
                  typeOf,
                  type,
                  typeName,
                  canCast,
                  safeCast,
                  canAssign,
                  instanceOf,
                  culture: {
                    neutral: neutralCulture,
                    current: currentCulture
                  },
                  fail
                });
              }
              var ss = _ss();
            }
          ),
          /***/
          "./esm/star.js": (
            /*!*********************!*\
              !*** ./esm/star.js ***!
              \*********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Galaxy: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                Star: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ./color.js */
                "./esm/color.js"
              ), r = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              );
              function o(a) {
                this.magnitude = 0, this.RA = 0, this.dec = 0, this.BMV = 0, this.id = 0, this.absoluteMagnitude = 0, this.par = 0, this.distance = 0;
                var b = a.split("	");
                if (this.id = parseInt(t.ss.replaceString(b[0], "HIP", "")), this.dec = parseFloat(b[3]), this.RA = parseFloat(b[2]) / 15, b.length > 4)
                  try {
                    b[4].toUpperCase() !== "NULL" && b[4] && (this.magnitude = parseFloat(b[4]));
                  } catch {
                  }
                if (b.length > 5)
                  try {
                    this.BMV = parseFloat(b[5]), this._makeColor(this.BMV);
                  } catch {
                  }
                b.length > 6 && (this.par = parseFloat(b[6]), this._makeDistanceAndMagnitude());
              }
              var c = {
                get_name: function() {
                  return "HIP" + this.id.toString();
                },
                get_coordinates: function() {
                  return r.Coordinates.fromRaDec(this.RA, this.dec);
                },
                stars: function(a, b) {
                  var V = a.split("	");
                  if (this.id = parseInt(V[0]), this.RA = parseFloat(V[1]) / 15, this.dec = parseFloat(V[2]), V.length > 3)
                    try {
                      this.magnitude = parseFloat(V[3]);
                    } catch {
                    }
                  if (V.length > 4)
                    try {
                      this.col = _.Color.load(V[4]);
                    } catch {
                    }
                },
                _makeDistanceAndMagnitude: function() {
                  this.distance = 1 / (this.par / 1e3), this.absoluteMagnitude = this.magnitude - 5 * (e.Util.logN(this.distance, 10) - 1), this.distance *= 206264.806;
                },
                _makeColor: function(a) {
                  var b = 4294967295;
                  a <= -0.32 ? b = 4288854271 : a <= -0.31 ? b = 4288919807 : a <= -0.3 ? b = 4288985855 : a <= -0.28 ? b = 4289182975 : a <= -0.26 ? b = 4289314303 : a <= -0.24 ? b = 4289445887 : a <= -0.2 ? b = 4289708799 : a <= -0.16 ? b = 4290037503 : a <= -0.14 ? b = 4290169087 : a <= -0.12 ? b = 4290366207 : a <= -0.09 ? b = 4290563583 : a <= -0.06 ? b = 4290892031 : a <= 0 ? b = 4291483391 : a <= 0.06 ? b = 4292009215 : a <= 0.14 ? b = 4292732159 : a <= 0.19 ? b = 4293126399 : a <= 0.31 ? b = 4294111999 : a <= 0.36 ? b = 4294571775 : a <= 0.43 ? b = 4294965756 : a <= 0.54 ? b = 4294964979 : a <= 0.59 ? b = 4294964203 : a <= 0.63 ? b = 4294963687 : a <= 0.66 ? b = 4294963169 : a <= 0.74 ? b = 4294962909 : a <= 0.82 ? b = 4294961877 : a <= 0.92 ? b = 4294960324 : a <= 1.15 ? b = 68719468472 : a <= 1.3 ? b = 4294958516 : a <= 1.41 ? b = 4294955933 : a <= 1.48 ? b = 4294954385 : a <= 1.52 ? b = 4294953351 : a <= 1.55 ? b = 4294952319 : a <= 1.56 ? b = 4294951287 : a <= 1.61 ? b = 4294950257 : a <= 1.72 ? b = 4294948966 : a <= 1.84 ? b = 4294947419 : a <= 2 && (b = 4294946129), this.col = _.Color.fromInt(b);
                }
              };
              (0, n.registerType)("Star", [o, c, null]);
              function l(a) {
                this.RA = 0, this.dec = 0, this.distance = 0, this.type = 0, this.eTypeBucket = 0, this.size = 5, this.sdssID = 0, this.sdssID = a.readInt64(), this.RA = a.readSingle(), this.dec = a.readSingle(), this.distance = a.readSingle(), this.eTypeBucket = a.readByte(), this.size = a.readSingle();
              }
              l._eTypeBuckets = [-3, -0.186, -0.168, -0.158, -0.15, -0.143, -0.137, -0.13, -0.123, -0.115, -0.104, -0.089, -0.068, -0.042, -0.011, 0.024, 0.064, 0.111, 0.169, 0.252, 3], l.getEType = function(a) {
                for (var b = 0, V = l._eTypeBuckets.length - 1; V - b > 1; ) {
                  var y = (b + V) / 2;
                  a > l._eTypeBuckets[y] ? b = y : V = y;
                }
                return b;
              };
              var g = {};
              (0, n.registerType)("Galaxy", [l, g, null]);
            }
          ),
          /***/
          "./esm/tangent_tile.js": (
            /*!*****************************!*\
              !*** ./esm/tangent_tile.js ***!
              \*****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                LatLngEdges: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                TangentTile: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), o = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), c = i(
                /*! ./layers/fits_image.js */
                "./esm/layers/fits_image.js"
              ), l = i(
                /*! ./tile.js */
                "./esm/tile.js"
              );
              function g() {
                this.latMin = 0, this.latMax = 0, this.lngMin = 0, this.lngMax = 0;
              }
              var a = {};
              (0, n.registerType)("LatLngEdges", [g, a, null]);
              function b(y, C, E, v, m) {
                this._topDown$1 = !0, l.Tile.call(this), this.parent = m, this.level = y, this.tileX = C, this.tileY = E, this.dataset = v, this._topDown$1 = !v.get_bottomsUp(), this.computeBoundingSphere();
              }
              var V = {
                computeBoundingSphere: function() {
                  if (!this._topDown$1) {
                    this.computeBoundingSphereBottomsUp();
                    return;
                  }
                  var y = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), C = this.dataset.get_baseTileDegrees() / 2 - this.tileY * y + this.dataset.get_offsetY(), E = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * y + this.dataset.get_offsetY(), v = this.tileX * y - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), m = (this.tileX + 1) * y - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), L = (C + E) / 2, A = (v + m) / 2;
                  this.sphereCenter = this.geoTo3dTan(L, A), this.topLeft = this.geoTo3dTan(C, v), this.bottomRight = this.geoTo3dTan(E, m), this.topRight = this.geoTo3dTan(C, m), this.bottomLeft = this.geoTo3dTan(E, v);
                  var K = this.geoTo3dTan(C, v);
                  K.subtract(this.sphereCenter), this.sphereRadius = K.length();
                },
                computeBoundingSphereBottomsUp: function() {
                  var y = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), C = this.dataset.get_baseTileDegrees() / 2 + (this.tileY + 1) * y + this.dataset.get_offsetY(), E = this.dataset.get_baseTileDegrees() / 2 + this.tileY * y + this.dataset.get_offsetY(), v = this.tileX * y - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), m = (this.tileX + 1) * y - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX();
                  this.topLeft = this.geoTo3dTan(C, v), this.bottomRight = this.geoTo3dTan(E, m), this.topRight = this.geoTo3dTan(C, m), this.bottomLeft = this.geoTo3dTan(E, v);
                },
                getLatLngEdges: function() {
                  var y = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), C = new g();
                  return C.latMin = this.dataset.get_baseTileDegrees() / 2 - this.tileY * y + this.dataset.get_offsetY(), C.latMax = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * y + this.dataset.get_offsetY(), C.lngMin = this.tileX * y - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), C.lngMax = (this.tileX + 1) * y - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), C;
                },
                geoTo3dTan: function(y, C) {
                  C = -C;
                  var E = this.dataset.get_baseTileDegrees() / 2, v = Math.tan(E * l.Tile.RC);
                  return this.dataset.get_matrix().transform(_.Vector3d.create(1, y / E * v, C / E * v));
                },
                requestImage: function() {
                  this.fitsImage = t.ss.safeCast(this.dataset.get_wcsImage(), c.FitsImage), this.fitsImage != null ? (this.texReady = !0, this.downloading = !1, this.errored = this.fitsImage.errored, this.requestPending = !1, (0, e.tileCacheRemoveFromQueue)(this.get_key(), !0), e.useGlVersion2 ? (this.makeTexture(), this.readyToRender = !0) : (this.bmp = this.fitsImage.getBitmap(), this.texture2d = this.bmp.getTexture(), this.readyToRender = !0)) : l.Tile.prototype.requestImage.call(this);
                },
                createGeometry: function(y) {
                  if (this.geometryCreated)
                    return !0;
                  this.geometryCreated = !0;
                  for (var C = 0; C < 4; C++)
                    this._renderTriangleLists[C] = [];
                  this.globalCenter = this.geoTo3dTan(0, 0);
                  var E = this.getLatLngEdges();
                  this.topLeft = this.geoTo3dTan(E.latMin, E.lngMin).subtract(this.globalCenter), this.bottomRight = this.geoTo3dTan(E.latMax, E.lngMax).subtract(this.globalCenter), this.topRight = this.geoTo3dTan(E.latMin, E.lngMax).subtract(this.globalCenter), this.bottomLeft = this.geoTo3dTan(E.latMax, E.lngMin).subtract(this.globalCenter);
                  var v = _.Vector3d.midPoint(this.topLeft, this.bottomRight), m = _.Vector3d.midPoint(this.topLeft, this.bottomLeft), L = _.Vector3d.midPoint(this.topRight, this.bottomRight), A = _.Vector3d.midPoint(this.topLeft, this.topRight), K = _.Vector3d.midPoint(this.bottomLeft, this.bottomRight);
                  if (y.gl == null)
                    this._renderTriangleLists[0].push(o.RenderTriangle.create(_.PositionTexture.createPos(this.topLeft, 0, 0), _.PositionTexture.createPos(m, 0, 0.5), _.PositionTexture.createPos(A, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[0].push(o.RenderTriangle.create(_.PositionTexture.createPos(m, 0, 0.5), _.PositionTexture.createPos(v, 0.5, 0.5), _.PositionTexture.createPos(A, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[1].push(o.RenderTriangle.create(_.PositionTexture.createPos(A, 0.5, 0), _.PositionTexture.createPos(L, 1, 0.5), _.PositionTexture.createPos(this.topRight, 1, 0), this.texture, this.level)), this._renderTriangleLists[1].push(o.RenderTriangle.create(_.PositionTexture.createPos(A, 0.5, 0), _.PositionTexture.createPos(v, 0.5, 0.5), _.PositionTexture.createPos(L, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(o.RenderTriangle.create(_.PositionTexture.createPos(m, 0, 0.5), _.PositionTexture.createPos(K, 0.5, 1), _.PositionTexture.createPos(v, 0.5, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(o.RenderTriangle.create(_.PositionTexture.createPos(m, 0, 0.5), _.PositionTexture.createPos(this.bottomLeft, 0, 1), _.PositionTexture.createPos(K, 0.5, 1), this.texture, this.level)), this._renderTriangleLists[3].push(o.RenderTriangle.create(_.PositionTexture.createPos(v, 0.5, 0.5), _.PositionTexture.createPos(this.bottomRight, 1, 1), _.PositionTexture.createPos(L, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[3].push(o.RenderTriangle.create(_.PositionTexture.createPos(v, 0.5, 0.5), _.PositionTexture.createPos(K, 0.5, 1), _.PositionTexture.createPos(this.bottomRight, 1, 1), this.texture, this.level)), this.readyToRender = !0;
                  else {
                    this._vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                    var T = new Float32Array(9 * 5), w = T, f = 0;
                    f = this.addVertex(w, f, _.PositionTexture.createPos(K, 0.5, 1)), f = this.addVertex(w, f, _.PositionTexture.createPos(this.bottomLeft, 0, 1)), f = this.addVertex(w, f, _.PositionTexture.createPos(this.bottomRight, 1, 1)), f = this.addVertex(w, f, _.PositionTexture.createPos(v, 0.5, 0.5)), f = this.addVertex(w, f, _.PositionTexture.createPos(m, 0, 0.5)), f = this.addVertex(w, f, _.PositionTexture.createPos(L, 1, 0.5)), f = this.addVertex(w, f, _.PositionTexture.createPos(A, 0.5, 0)), f = this.addVertex(w, f, _.PositionTexture.createPos(this.topLeft, 0, 0)), f = this.addVertex(w, f, _.PositionTexture.createPos(this.topRight, 1, 0)), e.tilePrepDevice.bufferData(r.WEBGL.ARRAY_BUFFER, T, r.WEBGL.STATIC_DRAW);
                    for (var C = 0; C < 4; C++) {
                      f = 0, this.triangleCount = 2;
                      var R = new Uint16Array(this.triangleCount * 3), O = R;
                      switch (C) {
                        case 0:
                          O[f++] = 7, O[f++] = 4, O[f++] = 6, O[f++] = 4, O[f++] = 3, O[f++] = 6;
                          break;
                        case 1:
                          O[f++] = 6, O[f++] = 5, O[f++] = 8, O[f++] = 6, O[f++] = 3, O[f++] = 5;
                          break;
                        case 2:
                          O[f++] = 4, O[f++] = 0, O[f++] = 3, O[f++] = 4, O[f++] = 1, O[f++] = 0;
                          break;
                        case 3:
                          O[f++] = 3, O[f++] = 2, O[f++] = 5, O[f++] = 3, O[f++] = 0, O[f++] = 2;
                          break;
                      }
                      this._indexBuffers[C] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[C]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, R, r.WEBGL.STATIC_DRAW);
                    }
                  }
                  return !0;
                }
              };
              (0, n.registerType)("TangentTile", [b, V, l.Tile]);
            }
          ),
          /***/
          "./esm/tile.js": (
            /*!*********************!*\
              !*** ./esm/tile.js ***!
              \*********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Tile: () => (
                  /* binding */
                  E
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), o = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), c = i(
                /*! ./graphics/texture.js */
                "./esm/graphics/texture.js"
              ), l = i(
                /*! ./graphics/shaders.js */
                "./esm/graphics/shaders.js"
              ), g = i(
                /*! ./util.js */
                "./esm/util.js"
              ), a = i(
                /*! ./blend_state.js */
                "./esm/blend_state.js"
              ), b = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), V = i(
                /*! ./layers/color_map_container.js */
                "./esm/layers/color_map_container.js"
              ), y = i(
                /*! ./layers/fits_image_js.js */
                "./esm/layers/fits_image_js.js"
              ), C = i(
                /*! ./layers/fits_image_tile.js */
                "./esm/layers/fits_image_tile.js"
              );
              function E() {
                this._renderTriangleLists = new Array(4), this._indexBuffers = new Array(4), this.level = 0, this.tileX = 0, this.tileY = 0, this.texture = null, this.texture2d = null, this.isCatalogTile = !1, this.readyToRender = !1, this.inViewFrustum = !0, this.globalCenter = e.Vector3d.zero, this.children = [null, null, null, null], this.parent = null, this.localCenter = new e.Vector3d(), this.renderedAtOrBelowGeneration = 0, this._demScaleFactor = 6371e3, this.demIndex = 0, this.demAverage = 0, this.demReady = !1, this.texReady = !1, this.demTile = !1, this.demDownloading = !1, this.renderedGeneration = 0, this.accomidation = 0, this.accessCount = 0, this.downloading = !1, this.geometryCreated = !1, this._isHdTile = !1, this.demSize = 1089, this._topLeftScreen = new e.Vector3d(), this._bottomRightScreen = new e.Vector3d(), this._topRightScreen = new e.Vector3d(), this._bottomLeftScreen = new e.Vector3d(), this.sphereRadius = 0, this.sphereCenter = new e.Vector3d(), this.radius = 1, this.triangleCount = 0, this.requestHits = 0, this.requestPending = !1, this.errored = !1, this._key = null, this._tileId = null, this._vertexCount = 0, this.renderChildPart = null, this.renderChildPart = new Array(4);
                for (var m = 0; m < 4; m++)
                  this.renderChildPart[m] = a.BlendState.create(!1, 500);
              }
              E.currentRenderGeneration = 0, E.tileTargetX = -1, E.tileTargetY = -1, E.tileTargetLevel = -1, E.tilesInView = 0, E.trianglesRendered = 0, E.tilesTouched = 0, E.frustumList = null, (0, _.set_tileUvMultiple)(1), E.callCount = 0, E.useAccomidation = !0, (0, _.set_tileDemEnabled)(!0), E.maxLevel = 20, E.meshComplexity = 50, E.imageQuality = 50, E.lastDeepestLevel = 0, E.deepestLevel = 0, E.RC = 0.01745329277777778, E.getFrustumList = function() {
                try {
                  return E.frustumList;
                } catch {
                  return null;
                }
              }, E.get_subDivisions = function() {
                return 32;
              };
              var v = {
                getIndexBuffer: function(m, L) {
                  return this._indexBuffers[m];
                },
                isPointInTile: function(m, L) {
                  return !1;
                },
                getSurfacePointAltitude: function(m, L, A) {
                  return 0;
                },
                makeTexture: function() {
                  if (_.tilePrepDevice != null)
                    try {
                      if (this.texture2d = _.tilePrepDevice.createTexture(), _.tilePrepDevice.bindTexture(o.WEBGL.TEXTURE_2D, this.texture2d), _.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_WRAP_S, o.WEBGL.CLAMP_TO_EDGE), _.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_WRAP_T, o.WEBGL.CLAMP_TO_EDGE), this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 && _.useGlVersion2)
                        _.tilePrepDevice.texImage2D(o.WEBGL.TEXTURE_2D, 0, o.WEBGL.R32F, t.ss.truncate(this.fitsImage.get_sizeX()), t.ss.truncate(this.fitsImage.get_sizeY()), 0, o.WEBGL.RED, o.WEBGL.FLOAT, this.fitsImage.dataUnit), _.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_MIN_FILTER, o.WEBGL.NEAREST), _.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_MAG_FILTER, o.WEBGL.NEAREST);
                      else {
                        var m = this.texture;
                        if ((!c.Texture.isPowerOfTwo(this.texture.height) | !c.Texture.isPowerOfTwo(this.texture.width)) === 1) {
                          var L = document.createElement("canvas");
                          L.height = c.Texture.fitPowerOfTwo(m.height), L.width = c.Texture.fitPowerOfTwo(m.width);
                          var A = L.getContext("2d");
                          A.drawImage(m, 0, 0, L.width, L.height), m = L;
                        }
                        _.tilePrepDevice.texImage2D(o.WEBGL.TEXTURE_2D, 0, o.WEBGL.RGBA, o.WEBGL.RGBA, o.WEBGL.UNSIGNED_BYTE, m), _.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_MIN_FILTER, o.WEBGL.LINEAR_MIPMAP_NEAREST), _.tilePrepDevice.generateMipmap(o.WEBGL.TEXTURE_2D);
                      }
                      _.tilePrepDevice.bindTexture(o.WEBGL.TEXTURE_2D, null);
                    } catch {
                      this.errored = !0;
                    }
                },
                addVertex: function(m, L, A) {
                  return m[L++] = A.position.x, m[L++] = A.position.y, m[L++] = A.position.z, m[L++] = A.tu, m[L++] = A.tv, L;
                },
                geoTo3dWithAlt: function(m, L, A, K) {
                  if (m = Math.max(Math.min(90, m), -90), L = Math.max(Math.min(180, L), -180), !_.tileDemEnabled || this.demData == null)
                    return this.geoTo3d(m, L, A);
                  K && (L -= 180);
                  var T = this.demData[this.demIndex], w = this.geoTo3dWithAltitude(m, L, T, A);
                  return w;
                },
                geoTo3dWithAltitude: function(m, L, A, K) {
                  var T = 1 + A / this.get__demScaleFactor(), w = e.Vector3d.create(Math.cos(L * E.RC) * Math.cos(m * E.RC) * T, Math.sin(m * E.RC) * T, Math.sin(L * E.RC) * Math.cos(m * E.RC) * T);
                  return K && w.subtract(this.localCenter), w;
                },
                get__demScaleFactor: function() {
                  return this._demScaleFactor;
                },
                set__demScaleFactor: function(m) {
                  return this._demScaleFactor = m, m;
                },
                requestImage: function() {
                  var m = this;
                  if (this.dataset.get_extension().toLowerCase().indexOf("fits") > -1)
                    !this.downloading && !this.readyToRender && (this.downloading = !0, _.useGlVersion2 ? this.fitsImage = new C.FitsImageTile(this.dataset, this.get_URL(), function(A) {
                      m.downloading = !1, m.errored = m.fitsImage.errored, (0, _.tileCacheRemoveFromQueue)(m.get_key(), !0), m.fitsImage.errored || (m.level || (m.dataset.get_fitsProperties()._fireMainImageLoaded(m.fitsImage), m.fitsImage.applyDisplaySettings()), m.texReady = !0, m.readyToRender = m.texReady && (m.demReady || !m.demTile), m.requestPending = !1, m.makeTexture());
                    }) : this.fitsImage = y.FitsImageJs.createTiledFits(this.dataset, this.get_URL(), function(A) {
                      m.level || m.dataset.get_fitsProperties()._fireMainImageLoaded(m.fitsImage), m.texReady = !0, m.downloading = !1, m.errored = m.fitsImage.errored, m.readyToRender = m.texReady && (m.demReady || !m.demTile), m.requestPending = !1, (0, _.tileCacheRemoveFromQueue)(m.get_key(), !0), m.texture2d = A.getBitmap().getTexture();
                    }));
                  else {
                    if (this.get_dataset().get_wcsImage() != null) {
                      this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, (0, _.tileCacheRemoveFromQueue)(this.get_key(), !0);
                      return;
                    }
                    if (!this.downloading && !this.readyToRender) {
                      this.downloading = !0, this.texture = document.createElement("img");
                      var L = this.texture;
                      this.texture.addEventListener("load", function(A) {
                        m.texReady = !0, m.downloading = !1, m.errored = !1, m.readyToRender = m.texReady && (m.demReady || !m.demTile), m.requestPending = !1, (0, _.tileCacheRemoveFromQueue)(m.get_key(), !0), m.makeTexture();
                      }, !1), this.texture.addEventListener("error", function(A) {
                        if (!m.texture.hasAttribute("proxyattempt")) {
                          m.texture.setAttribute("proxyattempt", !0);
                          var K = b.URLHelpers.singleton.activateProxy(m.texture.src);
                          if (K != null) {
                            m.texture.src = K;
                            return;
                          }
                        }
                        m.downloading = !1, m.readyToRender = !1, m.errored = !0, m.requestPending = !1, (0, _.tileCacheRemoveFromQueue)(m.get_key(), !0);
                      }, !1), L.crossOrigin = "anonymous", this.texture.src = this.get_URL();
                    }
                  }
                },
                createDemFromParent: function() {
                  return !1;
                },
                _loadDemData: function() {
                  if (this.demFile == null)
                    return this.createDemFromParent();
                  if (this.demData = this.demFile, this.demFile.length !== 1089 && this.demFile.length !== 513)
                    return this.createDemFromParent();
                  for (var m = t.ss.enumerate(this.demData); m.moveNext(); )
                    m.current;
                  return this.demAverage /= this.demData.length, !0;
                },
                requestDem: function() {
                  var m = this;
                  if (!this.readyToRender && !this.demDownloading) {
                    this.demTile = !0, this.demDownloading = !0, E.callCount++;
                    var L = new XMLHttpRequest();
                    L.addEventListener("load", function(A) {
                      m.demReady = !0, m.demDownloading = !1, m.readyToRender = m.texReady && (m.demReady || !m.demTile), m.requestPending = !1;
                      try {
                        m.demFile = new Float32Array(L.response);
                      } catch {
                      }
                      (0, _.tileCacheRemoveFromQueue)(m.get_key(), !0);
                    }, !1), L.addEventListener("error", function(A) {
                      m.demDownloading = !1, m.demReady = !1, m.readyToRender = !1, m.errored = !0, m.requestPending = !1, (0, _.tileCacheRemoveFromQueue)(m.get_key(), !0);
                    }, !1), L.open("GET", this.get_demURL(), !0), L.responseType = "arraybuffer", L.send();
                  }
                },
                draw3D: function(m, L) {
                  if (this.renderedGeneration = E.currentRenderGeneration, E.tilesTouched++, this.accessCount = (0, _.inc_tileCacheAccessID)(), this.errored)
                    return !1;
                  var A = 2;
                  if (this.inViewFrustum = !0, !this.readyToRender)
                    return (0, _.tileCacheAddTileToQueue)(this), !1;
                  var K = 0, T = 0;
                  (this.dataset.get_mercator() || this.dataset.get_bottomsUp()) && (T = 1);
                  for (var w = 0, f = !1, R = !1, O = 0; O < 2; O++)
                    for (var W = 0; W < A; W++)
                      this.level < this.dataset.get_levels() ? (this.children[K] == null && (this.children[K] = (0, _.tileCacheGetTile)(this.level + 1, this.tileX * 2 + (W + w) % 2, this.tileY * 2 + (O + T) % 2, this.dataset, this)), this.children[K].isTileInFrustum(m.get_frustum()) ? (this.inViewFrustum = !0, this.children[K].isTileBigEnough(m) ? (this.renderChildPart[K].set_targetState(!this.children[K].draw3D(m, L)), this.renderChildPart[K].get_targetState() && (R = !0)) : this.renderChildPart[K].set_targetState(!0)) : this.renderChildPart[K].set_targetState(this.renderChildPart[K].set_state(!1)), this.renderChildPart[K].get_targetState(), this.renderChildPart[K].get_state()) : this.renderChildPart[K].set_state(!0), this.renderChildPart[K].get_state() && (f = !0), K++;
                  if ((R || f) && (this.renderedAtOrBelowGeneration = E.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !f)
                    return !0;
                  if (!this.createGeometry(m))
                    return !1;
                  E.tilesInView++, this.accomidation = this._computeAccomidation();
                  for (var N = 0; N < 4; N++)
                    this.renderChildPart[N].get_targetState() && this.renderPart(m, N, L / 100, !1);
                  return !0;
                },
                _computeAccomidation: function() {
                  var m = 0;
                  if (!E.useAccomidation)
                    return 0;
                  var L = (0, _.tileCacheGetCachedTile)(this.level, this.tileX, this.tileY + 1, this.dataset, this);
                  (L == null || L.renderedAtOrBelowGeneration < E.currentRenderGeneration - 2) && (m += 1);
                  var A = (0, _.tileCacheGetCachedTile)(this.level, this.tileX + 1, this.tileY, this.dataset, this);
                  (A == null || A.renderedAtOrBelowGeneration < E.currentRenderGeneration - 2) && (m += 2);
                  var K = (0, _.tileCacheGetCachedTile)(this.level, this.tileX, this.tileY - 1, this.dataset, this);
                  (K == null || K.renderedAtOrBelowGeneration < E.currentRenderGeneration - 2) && (m += 4);
                  var T = (0, _.tileCacheGetCachedTile)(this.level, this.tileX - 1, this.tileY, this.dataset, this);
                  return (T == null || T.renderedAtOrBelowGeneration < E.currentRenderGeneration - 2) && (m += 8), m;
                },
                renderPart: function(m, L, A, K) {
                  if (_.tilePrepDevice == null)
                    for (var T = m.lighting && m.get_sunPosition() != null, w = t.ss.enumerate(this._renderTriangleLists[L]); w.moveNext(); ) {
                      var f = w.current;
                      if (f.opacity = A, T) {
                        var R = f.normal.copy();
                        m.get_world().multiplyVector(R), R.normalize();
                        var O = e.Vector3d.dot(R, m.get_sunPosition());
                        O < 0 ? O = 0 : O = Math.min(1, O * 1), f.lighting = O;
                      } else
                        f.lighting = 1;
                      f.draw(m.device, m.WVP);
                    }
                  else
                    _.useGlVersion2 && this.fitsImage != null ? (V.ColorMapContainer.bindColorMapTexture(_.tilePrepDevice, this.dataset.get_fitsProperties().colorMapName), l.FitsShader.min = this.dataset.get_fitsProperties().lowerCut, l.FitsShader.max = this.dataset.get_fitsProperties().upperCut, l.FitsShader.containsBlanks = this.dataset.get_fitsProperties().containsBlanks, l.FitsShader.blankValue = this.dataset.get_fitsProperties().blankValue, l.FitsShader.bZero = this.dataset.get_fitsProperties().bZero, l.FitsShader.bScale = this.dataset.get_fitsProperties().bScale, l.FitsShader.scaleType = this.dataset.get_fitsProperties().scaleType, l.FitsShader.transparentBlack = this.dataset.get_fitsProperties().transparentBlack, l.FitsShader.use(m, this._vertexBuffer, this.getIndexBuffer(L, this.accomidation), this.texture2d, A, !1, this.globalCenter)) : l.TileShader.use(m, this._vertexBuffer, this.getIndexBuffer(L, this.accomidation), this.texture2d, A, !1, this.globalCenter), m.gl.drawElements(o.WEBGL.TRIANGLES, this.triangleCount * 3, o.WEBGL.UNSIGNED_SHORT, 0);
                },
                cleanUp: function(m) {
                  if (this.readyToRender = !1, this.demData = null, this.demFile = null, this.demDownloading = !1, this.texReady = !1, this.demReady = !1, this.errored = !1, this.texture != null && (this.texture = null), this._renderTriangleLists = new Array(4), this.geometryCreated = !1, m && this.parent != null && (this.parent.removeChild(this), this.parent = null), _.tilePrepDevice != null) {
                    for (var L = t.ss.enumerate(this._indexBuffers); L.moveNext(); ) {
                      var A = L.current;
                      _.tilePrepDevice.deleteBuffer(A);
                    }
                    this._indexBuffers = new Array(4), this._vertexBuffer != null && (_.tilePrepDevice.deleteBuffer(this._vertexBuffer), this._vertexBuffer = null), this.texture2d != null && (_.tilePrepDevice.deleteTexture(this.texture2d), this.texture2d = null);
                  }
                },
                removeChild: function(m) {
                  for (var L = 0; L < 4; L++)
                    if (this.children[L] === m) {
                      this.children[L] = null;
                      return;
                    }
                },
                createGeometry: function(m) {
                  return _.tileDemEnabled && this.demReady && this.demData == null && !this._loadDemData() || _.tileDemEnabled && this.demData == null ? !1 : (this.readyToRender = !0, !0);
                },
                calcSphere: function() {
                  var m = new Array(4);
                  m[0] = this.topLeft, m[1] = this.bottomRight, m[2] = this.topRight, m[3] = this.bottomLeft;
                  var L = e.ConvexHull.findEnclosingSphere(m);
                  this.sphereCenter = L.center, this.sphereRadius = L.radius;
                },
                isTileBigEnough: function(m) {
                  if (this.level > 1) {
                    var L = m.WVP;
                    L._transformTo(this.topLeft, this._topLeftScreen), L._transformTo(this.bottomRight, this._bottomRightScreen), L._transformTo(this.topRight, this._topRightScreen), L._transformTo(this.bottomLeft, this._bottomLeftScreen);
                    var A = this._topLeftScreen;
                    A.subtract(this._topRightScreen);
                    var K = A.length(), T = this._bottomLeftScreen;
                    T.subtract(this._bottomRightScreen);
                    var w = T.length(), f = this._bottomLeftScreen;
                    f.subtract(this._topLeftScreen);
                    var R = f.length(), O = this._bottomRightScreen;
                    O.subtract(this._topRightScreen);
                    var W = O.length(), N = Math.max(Math.max(W, R), Math.max(w, K));
                    if (N < 300)
                      return !1;
                    E.deepestLevel = this.level > E.deepestLevel ? this.level : E.deepestLevel;
                  }
                  return !0;
                },
                isTileInFrustum: function(m) {
                  this.level < 2 && (!this.dataset.get_projection() || this.dataset.get_projection()), this.inViewFrustum = !1;
                  for (var L = new e.Vector4d(this.sphereCenter.x, this.sphereCenter.y, this.sphereCenter.z, 1), A = 0; A < 6; A++)
                    if (m[A].dot(L) < -this.sphereRadius)
                      return !1;
                  return this.inViewFrustum = !0, !0;
                },
                get_sphereRadius: function() {
                  return this.sphereRadius;
                },
                get_sphereCenter: function() {
                  return this.sphereCenter;
                },
                geoTo3d: function(m, L, A) {
                  if (this.dataset.get_dataSetType() === 3) {
                    var K = e.Vector3d.create(-(Math.cos(L * E.RC) * Math.cos(m * E.RC) * this.radius), Math.sin(m * E.RC) * this.radius, Math.sin(L * E.RC) * Math.cos(m * E.RC) * this.radius);
                    return K;
                  } else {
                    L -= 180;
                    var K = e.Vector3d.create(Math.cos(L * E.RC) * Math.cos(m * E.RC) * this.radius, Math.sin(m * E.RC) * this.radius, Math.sin(L * E.RC) * Math.cos(m * E.RC) * this.radius);
                    return K;
                  }
                },
                onCreateVertexBuffer: function(m, L) {
                },
                get_dataset: function() {
                  return this.dataset;
                },
                set_dataset: function(m) {
                  return this.dataset = m, m;
                },
                get_key: function() {
                  return this._key == null && (this._key = (0, g.getTileKey)(this.dataset, this.level, this.tileX, this.tileY, this.parent)), this._key;
                },
                // URL parameters
                //
                //{0} ImageSetID
                //{1} level
                //{2} x tile id
                //{3} y tile id
                //{4} quadtree address (VE style)
                //{5} quadtree address (Google maps style)
                //{6} top left corner RA
                //{7} top left corner Dec
                //{8} bottom right corner RA
                //{9} bottom right corner dec
                //{10} bottom left corner RA
                //{11} bottom left corner dec
                //{12} top right corner RA
                //{13} top right corner dec
                //{X} - Tile X value
                //{Y} - Tile Y value
                //{L} - Tile Level
                //{Q} - Quad Key ID
                //{S} - Last Digit of Quadkey
                get_URL: function() {
                  var m = b.URLHelpers.singleton.rewrite(this.dataset.get_url(), 0), L = m;
                  if (m.indexOf("{1}") > -1)
                    return !this.dataset.get_projection() && !t.ss.emptyString(this.dataset.get_quadTreeTileMap()) ? (L = t.ss.format(m, this.getServerID(), this.getTileID()), L.indexOf("virtualearth.net") > -1 && (L += "&n=z"), L) : t.ss.format(m, this.dataset.get_imageSetID(), this.level, this.tileX, this.tileY);
                  L = t.ss.replaceString(L, "{X}", this.tileX.toString()), L = t.ss.replaceString(L, "{Y}", this.tileY.toString()), L = t.ss.replaceString(L, "{L}", this.level.toString());
                  var A = 0;
                  L.indexOf("{S:0}") > -1 && (A = 0, L = t.ss.replaceString(L, "{S:0}", "{S}")), L.indexOf("{S:1}") > -1 && (A = 1, L = t.ss.replaceString(L, "{S:1}", "{S}")), L.indexOf("{S:2}") > -1 && (A = 2, L = t.ss.replaceString(L, "{S:2}", "{S}")), L.indexOf("{S:3}") > -1 && (A = 3, L = t.ss.replaceString(L, "{S:3}", "{S}")), L.indexOf("a{S}") > -1 && (L = t.ss.replaceString(L, "a{S}", "r{S}")), L.indexOf("h{S}") > -1 && (L = t.ss.replaceString(L, "h{S}", "r{S}")), L.indexOf("//r{S}.ortho.tiles.virtualearth.net") > -1 && (L = t.ss.replaceString(L, "//r{S}.ortho.tiles.virtualearth.net", "//ecn.t{S}.tiles.virtualearth.net"));
                  var K = this.getTileID(), T = "";
                  return K.length ? T = K.substr(K.length - 1, 1) : T = A.toString(), L = t.ss.replaceString(L, "{Q}", K), L = t.ss.replaceString(L, "{S}", T), L.indexOf("virtualearth.net") > -1 && (L += "&n=z"), L;
                },
                get_demURL: function() {
                  var m = b.URLHelpers.singleton.rewrite(this.dataset.get_demUrl(), 0);
                  if (!this.dataset.get_projection() && !r.freestandingMode && (b.URLHelpers.singleton.coreStaticUrl("wwtweb/demtile.aspx?q={0},{1},{2},M"), t.ss.emptyString(m)), m.indexOf("{1}") > -1)
                    return t.ss.format(m + "&new", this.level, this.tileX, this.tileY);
                  var L = m;
                  L = t.ss.replaceString(L, "{X}", this.tileX.toString()), L = t.ss.replaceString(L, "{Y}", this.tileY.toString()), L = t.ss.replaceString(L, "{L}", this.level.toString());
                  var A = 0;
                  L.indexOf("{S:0}") > -1 && (A = 0, L = t.ss.replaceString(L, "{S:0}", "{S}")), L.indexOf("{S:1}") > -1 && (A = 1, L = t.ss.replaceString(L, "{S:1}", "{S}")), L.indexOf("{S:2}") > -1 && (A = 2, L = t.ss.replaceString(L, "{S:2}", "{S}")), L.indexOf("{S:3}") > -1 && (A = 3, L = t.ss.replaceString(L, "{S:3}", "{S}"));
                  var K = this.getTileID(), T = "";
                  return K.length ? T = K.substr(K.length - 1, 1) : T = A.toString(), L = t.ss.replaceString(L, "{Q}", K), L = t.ss.replaceString(L, "{S}", T), L;
                },
                getServerID: function() {
                  var m = (this.tileX & 1) + ((this.tileY & 1) << 1);
                  return m;
                },
                getTileID: function() {
                  if (this._tileId != null)
                    return this._tileId;
                  var m = this.level, L = this.tileX, A = this.tileY;
                  this.dataset.get_projection() === 1 && m++;
                  var K = this.dataset.get_quadTreeTileMap();
                  if (t.ss.emptyString(K))
                    return this._tileId = "0", this._tileId;
                  for (var T = new t.ss.StringBuilder(), w = m; w > 0; --w) {
                    var f = 1 << w - 1, R = 0;
                    L & f && (R = 1), A & f && (R += 2), T.append(K.substr(R, 1));
                  }
                  return this._tileId = T.toString(), this._tileId;
                },
                get_vertexCount: function() {
                  return this._vertexCount;
                },
                set_vertexCount: function(m) {
                  return this._vertexCount = m, m;
                }
              };
              (0, n.registerType)("Tile", [E, v, null]);
            }
          ),
          /***/
          "./esm/tile_cache.js": (
            /*!***************************!*\
              !*** ./esm/tile_cache.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                TileCache: () => (
                  /* binding */
                  l
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ./util.js */
                "./esm/util.js"
              ), o = i(
                /*! ./tile.js */
                "./esm/tile.js"
              ), c = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              );
              function l() {
              }
              l._queue = {}, l._tiles = {}, l.openThreads = 8, l.readyToRenderCount = 0, l.maxTileCacheSize = 800, l.maxReadyToRenderSize = 200, l._maxTotalToPurge = 0, l.get_queueCount = function() {
                return t.ss.keyCount(l._queue);
              }, l.getTile = function(a, b, V, y, C) {
                var E = null, v = (0, r.getTileKey)(y, a, b, V, C);
                return t.ss.keyExists(l._tiles, v) ? E = l._tiles[v] : (E = c.Imageset.getNewTile(y, a, b, V, C), E != null && (l._tiles[v] = E)), E;
              }, (0, _.set_tileCacheGetTile)(l.getTile), l.getCachedTile = function(a, b, V, y, C) {
                if (a < y.get_baseLevel())
                  return null;
                var E = null, v = (0, r.getTileKey)(y, a, b, V, C);
                try {
                  if (t.ss.keyExists(l._tiles, v))
                    E = l._tiles[v];
                  else
                    return null;
                } catch {
                }
                return E;
              }, (0, _.set_tileCacheGetCachedTile)(l.getCachedTile), l.getReadyToRenderTileCount = function() {
                var a = [], b = [];
                try {
                  try {
                    for (var V = t.ss.enumerate(t.ss.keys(l._tiles)); V.moveNext(); ) {
                      var y = V.current, C = l._tiles[y];
                      C.renderedGeneration < o.Tile.currentRenderGeneration - 10 && !(C.requestPending || C.downloading) && (C.readyToRender ? b.push(C) : a.push(C));
                    }
                  } catch {
                  }
                  return b.length;
                } catch {
                  return -1;
                }
              }, l.processQueue = function(a) {
                for (; t.ss.keyCount(l._queue) > 0 && l.openThreads > 0; ) {
                  for (var b = 1e5, V = !1, y = null, C = t.ss.enumerate(t.ss.keys(l._queue)); C.moveNext(); ) {
                    var E = C.current, v = l._queue[E];
                    if (!v.requestPending && v.inViewFrustum) {
                      var m = e.Vector3d.makeCopy(v.get_sphereCenter());
                      m._transformByMatrics(a.get_world()), a.space ? m.subtract(e.Vector3d.create(0, 0, -1)) : m.subtract(a.cameraPosition);
                      var L = Math.max(0, m.length() - v.get_sphereRadius()), A = v.get_dataset().get_projection() === c.ProjectionType.tangent || v.get_dataset().get_projection() === c.ProjectionType.skyImage;
                      L < b && (!V || A) && (b = L, y = v.get_key(), v.level, V = A);
                    }
                  }
                  if (y != null) {
                    var K = l._queue[y];
                    K.requestPending = !0, l.openThreads--, l.openThreads < 0 && (l.openThreads = 0), K.requestImage(), K.get_dataset().get_elevationModel() && K.requestDem();
                  } else
                    return;
                }
              }, l.addTileToQueue = function(a) {
                var b;
                return b = 256, !a.downloading && !a.readyToRender && (t.ss.keyExists(l._queue, a.get_key()) ? l._queue[a.get_key()].requestHits += b : (a.requestHits = b, l._queue[a.get_key()] = a)), !0;
              }, (0, _.set_tileCacheAddTileToQueue)(l.addTileToQueue), l.removeFromQueue = function(a, b) {
                if (b) {
                  var V = l._queue[a];
                  V != null && (V.requestPending = !1, delete l._queue[V.get_key()]), l.openThreads++;
                }
                delete l._queue[a];
              }, (0, _.set_tileCacheRemoveFromQueue)(l.removeFromQueue), l.clearCache = function() {
                t.ss.clearKeys(l._tiles);
              }, l.purgeQueue = function() {
                t.ss.clearKeys(l._queue);
              }, l.purgeLRU = function() {
                if (!(t.ss.keyCount(l._tiles) < l.maxReadyToRenderSize)) {
                  var a = [], b = [];
                  try {
                    try {
                      for (var V = t.ss.enumerate(t.ss.keys(l._tiles)); V.moveNext(); ) {
                        var y = V.current, C = l._tiles[y];
                        C.renderedGeneration < o.Tile.currentRenderGeneration - 10 && !(C.requestPending || C.downloading) && (C.readyToRender ? b.push(C) : a.push(C));
                      }
                    } catch {
                    }
                    if (l.readyToRenderCount = b.length, b.length > l.maxReadyToRenderSize) {
                      b.sort(function(L, A) {
                        return A.accessCount < L.accessCount ? 1 : A.accessCount === L.accessCount ? 0 : -1;
                      });
                      for (var E = b.length - l.maxReadyToRenderSize, v = t.ss.enumerate(b); v.moveNext(); ) {
                        var C = v.current;
                        if (E < 1)
                          break;
                        C.cleanUp(!1), E--;
                      }
                    }
                    if (t.ss.keyCount(l._tiles) < l.maxTileCacheSize)
                      return;
                    if (a.length > l.maxTileCacheSize) {
                      a.sort(function(A, K) {
                        return K.accessCount < A.accessCount ? 1 : K.accessCount === A.accessCount ? 0 : -1;
                      });
                      var E = a.length - l.maxTileCacheSize;
                      E > 20 && (E = 20);
                      for (var m = t.ss.enumerate(a); m.moveNext(); ) {
                        var C = m.current;
                        if (E < 1)
                          break;
                        C.cleanUp(!0), delete l._tiles[C.get_key()], E--;
                      }
                    }
                  } catch {
                  } finally {
                  }
                }
              }, l.decimateQueue = function() {
                for (var a = [], b = t.ss.enumerate(t.ss.keys(l._queue)); b.moveNext(); ) {
                  var V = b.current, y = l._queue[V];
                  if (!y.requestPending) {
                    y.requestHits = y.requestHits / 2;
                    try {
                      y.requestHits < 2 ? a.push(y) : y.inViewFrustum || a.push(y);
                    } catch {
                    }
                  }
                }
                for (var C = t.ss.enumerate(a); C.moveNext(); ) {
                  var y = C.current;
                  delete l._queue[y.get_key()];
                }
              };
              var g = {};
              (0, n.registerType)("TileCache", [l, g, null]);
            }
          ),
          /***/
          "./esm/toast_tile.js": (
            /*!***************************!*\
              !*** ./esm/toast_tile.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ToastTile: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), r = i(
                /*! ./graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), o = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), c = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), l = i(
                /*! ./tile.js */
                "./esm/tile.js"
              ), g = i(
                /*! ./triangle.js */
                "./esm/triangle.js"
              ), a = i(
                /*! ./util.js */
                "./esm/util.js"
              );
              function b() {
                this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, l.Tile.call(this);
              }
              b.slashIndexBuffer = new Array(64), b.backSlashIndexBuffer = new Array(64), b.rootIndexBuffer = new Array(4), b._cloneArray$1 = function(y) {
                for (var C = y.length, E = new Uint16Array(C), v = E, m = 0; m < C; m++)
                  v[m] = y[m];
                return v;
              }, b.create = function(y, C, E, v, m) {
                var L = new b();
                return L.parent = m, L.level = y, L.tileX = C, L.tileY = E, L.dataset = v, L._topDown$1 = !v.get_bottomsUp(), L.tileX !== C && alert("bad"), v.get_meanRadius() ? L.set__demScaleFactor(v.get_meanRadius()) : v.get_dataSetType() ? L.set__demScaleFactor(3396010) : L.set__demScaleFactor(6371e3), L.computeBoundingSphere(), L;
              };
              var V = {
                computeBoundingSphere: function() {
                  this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
                },
                getIndexBuffer: function(y, C) {
                  return this.level ? this.backslash ? b.backSlashIndexBuffer[y * 16 + C] : b.slashIndexBuffer[y * 16 + C] : b.rootIndexBuffer[y];
                },
                _processIndexBuffer$1: function(y, C) {
                  if (!this.level) {
                    b.rootIndexBuffer[C] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, b.rootIndexBuffer[C]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, y, r.WEBGL.STATIC_DRAW);
                    return;
                  }
                  for (var E = 0; E < 16; E++) {
                    var v = b._cloneArray$1(y);
                    this._processAccomindations$1(v, E), this.backslash ? (b.backSlashIndexBuffer[C * 16 + E] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, b.backSlashIndexBuffer[C * 16 + E]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, v, r.WEBGL.STATIC_DRAW)) : (b.slashIndexBuffer[C * 16 + E] = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ELEMENT_ARRAY_BUFFER, b.slashIndexBuffer[C * 16 + E]), e.tilePrepDevice.bufferData(r.WEBGL.ELEMENT_ARRAY_BUFFER, v, r.WEBGL.STATIC_DRAW));
                  }
                },
                _processAccomindations$1: function(y, C) {
                  for (var E = {}, v = {}, m = t.ss.enumerate(y); m.moveNext(); ) {
                    var L = m.current, A = this._vertexList$1[L], K = t.ss.truncate(A.tu * 16 + 0.5), T = t.ss.truncate(A.tv * 16 + 0.5), w = (T << 8) + K;
                    t.ss.keyExists(v, w) || (v[w] = L);
                  }
                  var f = 16;
                  if ((C & 1) === 1)
                    for (var R = 1; R < f; R += 2) {
                      var O = f, W = (O << 8) + R, N = (O << 8) + R + 1;
                      t.ss.keyExists(v, W) && (E[v[W]] = v[N]);
                    }
                  if ((C & 2) === 2)
                    for (var O = 1; O < f; O += 2) {
                      var R = f, W = (O << 8) + R, N = (O + 1 << 8) + R;
                      t.ss.keyExists(v, W) && (E[v[W]] = v[N]);
                    }
                  if ((C & 4) === 4)
                    for (var R = 1; R < f; R += 2) {
                      var O = 0, W = (O << 8) + R, N = (O << 8) + R + 1;
                      t.ss.keyExists(v, W) && (E[v[W]] = v[N]);
                    }
                  if ((C & 8) === 8)
                    for (var O = 1; O < f; O += 2) {
                      var R = 0, W = (O << 8) + R, N = (O + 1 << 8) + R;
                      t.ss.keyExists(v, W) && (E[v[W]] = v[N]);
                    }
                  if (t.ss.keyCount(E))
                    for (var $ = 0; $ < y.length; $++)
                      t.ss.keyExists(E, y[$]) && (y[$] = E[y[$]]);
                },
                calculateFullSphere: function(y) {
                  var C = _.ConvexHull.findEnclosingSphere(y);
                  this.sphereCenter = C.center, this.sphereRadius = C.radius;
                },
                isPointInTile: function(y, C) {
                  if (!this.level)
                    return !0;
                  if (this.level === 1)
                    return C >= 0 && C <= 90 && !this.tileX && this.tileY === 1 || C > 90 && C <= 180 && this.tileX === 1 && this.tileY === 1 || C < 0 && C >= -90 && !this.tileX && !this.tileY || C < -90 && C >= -180 && this.tileX === 1 && !this.tileY;
                  if (!this.demReady || this.demData == null)
                    return !1;
                  var E = o.Coordinates.geoTo3dDouble(-y, C), v = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), E), m = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), E), L = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), E), A = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), E);
                  return !!(v && m && L && A);
                },
                _isLeftOfHalfSpace$1: function(y, C, E) {
                  y.normalize(), C.normalize();
                  var v = _.Vector3d.cross(y, C), m = _.Vector3d.dot(v, E);
                  return m < 0;
                },
                getSurfacePointAltitude: function(y, C, E) {
                  if (this.level < l.Tile.lastDeepestLevel)
                    for (var v = 0; v < 4; v++) {
                      var m = this.children[v];
                      if (m != null && m.isPointInTile(y, C)) {
                        var L = m.getSurfacePointAltitude(y, C, E);
                        if (L)
                          return L;
                        break;
                      }
                    }
                  l.Tile.tileTargetLevel = this.level, l.Tile.tileTargetX = this.tileX, l.Tile.tileTargetY = this.tileY;
                  var A = o.Coordinates.geoTo3dDouble(-y, C);
                  A = _.Vector3d.subtractVectors(new _.Vector3d(), A);
                  var K = a.DistanceCalc.getUVFromInnerPoint(this.topLeft.copy(), this.topRight.copy(), this.bottomLeft.copy(), this.bottomRight.copy(), A.copy()), T = Math.max(0, Math.min(16, K.x * 16)), w = Math.max(0, Math.min(16, K.y * 16)), f = Math.max(0, Math.min(15, t.ss.truncate(K.x * 16))), R = Math.max(0, Math.min(15, t.ss.truncate(K.y * 16))), O = T - f, W = w - R;
                  if (this.demArray != null) {
                    var N = this.demArray[f + 17 * R], $ = this.demArray[f + 1 + 17 * R], S = this.demArray[f + 17 * (R + 1)], I = this.demArray[f + 1 + 17 * (R + 1)], x = N * (1 - O) + O * $, P = S * (1 - O) + O * I, d = x * (1 - W) + W * P;
                    return d / this.get__demScaleFactor();
                  }
                  return this.demAverage / this.get__demScaleFactor();
                },
                _initializeGrids$1: function() {
                  if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
                    this.parent == null && (this.parent = (0, e.tileCacheGetTile)(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
                    var y = this.parent, C = this.tileX % 2, E = this.tileY % 2;
                    this.level > 1 ? this.backslash = y.backslash : this.backslash = (C === 1 ^ E === 1) === 1, this.bounds[0 + 3 * 0] = y.bounds[C + 3 * E].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(y.bounds[C + 3 * E], y.bounds[C + 1 + 3 * E]), this.bounds[2 + 3 * 0] = y.bounds[C + 1 + 3 * E].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(y.bounds[C + 3 * E], y.bounds[C + 3 * (E + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(y.bounds[C + 3 * E], y.bounds[C + 1 + 3 * (E + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(y.bounds[C + 1 + 3 * E], y.bounds[C + 3 * (E + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(y.bounds[C + 1 + 3 * E], y.bounds[C + 1 + 3 * (E + 1)]), this.bounds[0 + 3 * 2] = y.bounds[C + 3 * (E + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(y.bounds[C + 3 * (E + 1)], y.bounds[C + 1 + 3 * (E + 1)]), this.bounds[2 + 3 * 2] = y.bounds[C + 1 + 3 * (E + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 0].tv = 0 * e.tileUvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 0].tv = 0 * e.tileUvMultiple, this.bounds[2 + 3 * 0].tu = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 0].tv = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 1].tu = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * e.tileUvMultiple, this.bounds[2 + 3 * 1].tu = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * e.tileUvMultiple, this.bounds[0 + 3 * 2].tu = 0 * e.tileUvMultiple, this.bounds[0 + 3 * 2].tv = 1 * e.tileUvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * e.tileUvMultiple, this.bounds[1 + 3 * 2].tv = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 2].tu = 1 * e.tileUvMultiple, this.bounds[2 + 3 * 2].tv = 1 * e.tileUvMultiple, this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this.backslash ? (this._childTriangleList$1[0].push(g.Triangle.create(4, 1, 0)), this._childTriangleList$1[0].push(g.Triangle.create(3, 4, 0)), this._childTriangleList$1[1].push(g.Triangle.create(5, 2, 1)), this._childTriangleList$1[1].push(g.Triangle.create(4, 5, 1)), this._childTriangleList$1[2].push(g.Triangle.create(7, 4, 3)), this._childTriangleList$1[2].push(g.Triangle.create(6, 7, 3)), this._childTriangleList$1[3].push(g.Triangle.create(8, 5, 4)), this._childTriangleList$1[3].push(g.Triangle.create(7, 8, 4))) : (this._childTriangleList$1[0].push(g.Triangle.create(3, 1, 0)), this._childTriangleList$1[0].push(g.Triangle.create(4, 1, 3)), this._childTriangleList$1[1].push(g.Triangle.create(4, 2, 1)), this._childTriangleList$1[1].push(g.Triangle.create(5, 2, 4)), this._childTriangleList$1[2].push(g.Triangle.create(6, 4, 3)), this._childTriangleList$1[2].push(g.Triangle.create(7, 4, 6)), this._childTriangleList$1[3].push(g.Triangle.create(7, 5, 4)), this._childTriangleList$1[3].push(g.Triangle.create(8, 5, 7)));
                  } else
                    this.bounds[0 + 3 * 0] = _.PositionTexture.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = _.PositionTexture.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = _.PositionTexture.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = _.PositionTexture.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = _.PositionTexture.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = _.PositionTexture.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = _.PositionTexture.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = _.PositionTexture.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = _.PositionTexture.create(0, -1, 0, 1, 1), this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this._childTriangleList$1[0].push(g.Triangle.create(3, 1, 0)), this._childTriangleList$1[0].push(g.Triangle.create(4, 1, 3)), this._childTriangleList$1[1].push(g.Triangle.create(5, 2, 1)), this._childTriangleList$1[1].push(g.Triangle.create(4, 5, 1)), this._childTriangleList$1[2].push(g.Triangle.create(7, 4, 3)), this._childTriangleList$1[2].push(g.Triangle.create(6, 7, 3)), this._childTriangleList$1[3].push(g.Triangle.create(7, 5, 4)), this._childTriangleList$1[3].push(g.Triangle.create(8, 5, 7));
                },
                _midpoint$1: function(y, C) {
                  var E = _.Vector3d.lerp(y.position, C.position, 0.5), v = _.Vector2d.lerp(_.Vector2d.create(y.tu, y.tv), _.Vector2d.create(C.tu, C.tv), 0.5);
                  return E.normalize(), _.PositionTexture.createPos(E, v.x, v.y);
                },
                createGeometry: function(y) {
                  if (this.geometryCreated)
                    return !0;
                  if (this.geometryCreated = !0, l.Tile.prototype.createGeometry.call(this, y), !this._subDivided$1) {
                    this._vertexList$1 == null && this._initializeGrids$1(), e.tileUvMultiple == 256 ? !this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1 ? this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this.demTile && this.level > 1 && (this.demArray = new Array(17 * 17), this.demSize = 17 * 17, this.backslash ? b._backslashYIndex$1 == null && (this._tempBackslashYIndex$1 = new Array(this.demSize), this._tempBackslashXIndex$1 = new Array(this.demSize)) : b._slashYIndex$1 == null && (this._tempSlashYIndex$1 = new Array(this.demSize), this._tempSlashXIndex$1 = new Array(this.demSize)));
                    for (var C = 0; C < 4; C++)
                      for (var E = this._subDivisionLevel$1; E-- > 1; ) {
                        for (var v = [], m = t.ss.enumerate(this._childTriangleList$1[C]); m.moveNext(); ) {
                          var L = m.current;
                          L.subDivide(v, this._vertexList$1);
                        }
                        this._childTriangleList$1[C] = v;
                      }
                    if (y.gl == null)
                      for (var C = 0; C < 4; C++) {
                        this._renderTriangleLists[C] = [];
                        for (var A = t.ss.enumerate(this._childTriangleList$1[C]); A.moveNext(); ) {
                          var L = A.current, K = this._vertexList$1[L.c], T = this._vertexList$1[L.b], w = this._vertexList$1[L.a];
                          this._renderTriangleLists[C].push(c.RenderTriangle.create(K, T, w, this.texture, this.level));
                        }
                      }
                    else {
                      this._vertexBuffer = e.tilePrepDevice.createBuffer(), e.tilePrepDevice.bindBuffer(r.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                      for (var f = new Float32Array(this._vertexList$1.length * 5), R = f, O = 0, W = t.ss.enumerate(this._vertexList$1); W.moveNext(); ) {
                        var N = W.current;
                        this.demTile ? (O = this.addVertex(R, O, this._getMappedVertex(N)), this.demIndex++) : O = this.addVertex(R, O, N);
                      }
                      this.demTile && (this.backslash ? this._tempBackslashXIndex$1 != null && (b._backslashXIndex$1 = this._tempBackslashXIndex$1, b._backslashYIndex$1 = this._tempBackslashYIndex$1, this._tempBackslashXIndex$1 = null, this._tempBackslashYIndex$1 = null) : this._tempSlashYIndex$1 != null && (b._slashXIndex$1 = this._tempSlashXIndex$1, b._slashYIndex$1 = this._tempSlashYIndex$1, this._tempSlashYIndex$1 = null, this._tempSlashXIndex$1 = null)), e.tilePrepDevice.bufferData(r.WEBGL.ARRAY_BUFFER, f, r.WEBGL.STATIC_DRAW);
                      for (var C = 0; C < 4; C++)
                        if (this.triangleCount = this._childTriangleList$1[C].length, this.getIndexBuffer(C, 0) == null) {
                          var $ = new Uint16Array(this.triangleCount * 3), S = $;
                          O = 0;
                          for (var I = t.ss.enumerate(this._childTriangleList$1[C]); I.moveNext(); ) {
                            var L = I.current;
                            S[O++] = L.c, S[O++] = L.b, S[O++] = L.a;
                          }
                          this._processIndexBuffer$1(S, C);
                        }
                    }
                    this._subDivided$1 = !0;
                  }
                  return !0;
                },
                _getMappedVertex: function(y) {
                  var C = new _.PositionTexture(), E = o.Coordinates.cartesianToSpherical2(y.position);
                  if (E.get_lng() < -180 && E.set_lng(E.get_lng() + 360), E.get_lng() > 180 && E.set_lng(E.get_lng() - 360), this.level > 1) {
                    var v = t.ss.truncate(y.tu * 16 + 0.5), m = t.ss.truncate(y.tv * 16 + 0.5);
                    this.demArray[v + m * 17] = this.demData[this.demIndex], this.backslash ? this._tempBackslashYIndex$1 != null && (this._tempBackslashXIndex$1[this.demIndex] = v, this._tempBackslashYIndex$1[this.demIndex] = m) : this._tempSlashYIndex$1 != null && (this._tempSlashXIndex$1[this.demIndex] = v, this._tempSlashYIndex$1[this.demIndex] = m);
                  }
                  var L = this.geoTo3dWithAlt(E.get_lat(), E.get_lng(), !1, !1);
                  return C.tu = y.tu, C.tv = y.tv, L.subtract(this.localCenter), C.position = L, C;
                },
                cleanUp: function(y) {
                  l.Tile.prototype.cleanUp.call(this, y), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
                },
                _getDemSample$1: function(y, C) {
                  return this.demArray[(16 - C) * 17 + y];
                },
                createDemFromParent: function() {
                  var y = t.ss.safeCast(this.parent, b);
                  if (y == null)
                    return !1;
                  var C = this.tileX % 2 === 1 ? 8 : 0, E = this.tileY % 2 ? 0 : 8;
                  this.demArray = new Array(17 * 17);
                  for (var v = 0; v < 17; v += 2)
                    for (var m = !0, L = 0; L < 17; L++)
                      m ? this.demArray[(16 - v) * 17 + L] = y._getDemSample$1(L / 2 + C, v / 2 + E) : this.demArray[(16 - v) * 17 + L] = (y._getDemSample$1(L / 2 + C, v / 2 + E) + y._getDemSample$1(L / 2 + C + 1, v / 2 + E)) / 2, m = !m;
                  for (var A = 1; A < 17; A += 2)
                    for (var K = 0; K < 17; K++)
                      this.demArray[(16 - A) * 17 + K] = (this._getDemSample$1(K, A - 1) + this._getDemSample$1(K, A + 1)) / 2;
                  this.demData = new Array(this.demSize);
                  for (var T = 0; T < this.demSize; T++)
                    this.backslash ? this.demData[T] = this.demArray[b._backslashXIndex$1[T] + b._backslashYIndex$1[T] * 17] : this.demData[T] = this.demArray[b._slashXIndex$1[T] + b._slashYIndex$1[T] * 17], this.demAverage += this.demData[T];
                  return this.demAverage /= this.demData.length, this.demReady = !0, !0;
                }
              };
              (0, n.registerType)("ToastTile", [b, V, l.Tile]);
            }
          ),
          /***/
          "./esm/tour.js": (
            /*!*********************!*\
              !*** ./esm/tour.js ***!
              \*********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Tour: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), r = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              );
              function o() {
                this.userLevel = 0, this.classification = 0, this.averageRating = 0, this.lengthInSecs = 0, this._thumbnailUrlField = "";
              }
              o._fromXml = function(l) {
                var g = new o();
                return l.attributes.getNamedItem("ID") != null && (g.id = l.attributes.getNamedItem("ID").nodeValue), l.attributes.getNamedItem("TourUrl") != null && (g._tourUrl = l.attributes.getNamedItem("TourUrl").nodeValue), l.attributes.getNamedItem("Title") != null && (g.title = l.attributes.getNamedItem("Title").nodeValue), l.attributes.getNamedItem("Description") != null && (g.description = l.attributes.getNamedItem("Description").nodeValue), l.attributes.getNamedItem("Classification") != null && (g.classification = n.Enums.parse("Classification", l.attributes.getNamedItem("Classification").nodeValue)), l.attributes.getNamedItem("AuthorEmail") != null && (g.authorEmail = l.attributes.getNamedItem("AuthorEmail").nodeValue), l.attributes.getNamedItem("Author") != null && (g.author = l.attributes.getNamedItem("Author").nodeValue), l.attributes.getNamedItem("AuthorURL") != null && (g.authorURL = l.attributes.getNamedItem("AuthorURL").nodeValue), l.attributes.getNamedItem("AuthorImageUrl") != null && (g.authorImageUrl = l.attributes.getNamedItem("AuthorImageUrl").nodeValue), l.attributes.getNamedItem("AverageRating") != null && (g.averageRating = parseFloat(l.attributes.getNamedItem("AverageRating").nodeValue)), l.attributes.getNamedItem("LengthInSecs") != null && (g.lengthInSecs = parseFloat(l.attributes.getNamedItem("LengthInSecs").nodeValue)), l.attributes.getNamedItem("OrganizationUrl") != null && (g.organizationUrl = l.attributes.getNamedItem("OrganizationUrl").nodeValue), l.attributes.getNamedItem("OrganizationName") != null && (g.organizationName = l.attributes.getNamedItem("OrganizationName").nodeValue), l.attributes.getNamedItem("RelatedTours") != null && (g.relatedTours = l.attributes.getNamedItem("RelatedTours").nodeValue), l.attributes.getNamedItem("Keywords") != null && (g.keywords = l.attributes.getNamedItem("Keywords").nodeValue), l.attributes.getNamedItem("ThumbnailUrl") != null && g.set_thumbnailUrl(l.attributes.getNamedItem("ThumbnailUrl").nodeValue), g;
              };
              var c = {
                get_name: function() {
                  return this.title;
                },
                get_thumbnail: function() {
                  return this._thumbnail;
                },
                set_thumbnail: function(l) {
                  return this._thumbnail = l, l;
                },
                get_thumbnailUrl: function() {
                  if (t.ss.emptyString(this._thumbnailUrlField)) {
                    if (e.freestandingMode)
                      return r.URLHelpers.singleton.engineAssetUrl("thumb_star.jpg");
                  } else
                    return this._thumbnailUrlField;
                  return t.ss.format(r.URLHelpers.singleton.coreStaticUrl("wwtweb/GetTourThumbnail.aspx?GUID={0}"), this.id);
                },
                set_thumbnailUrl: function(l) {
                  return this._thumbnailUrlField = l, l;
                },
                get_tourUrl: function() {
                  return t.ss.emptyString(this._tourUrl) && !e.freestandingMode ? t.ss.format(r.URLHelpers.singleton.coreStaticUrl("wwtweb/GetTour.aspx?GUID={0}"), this.id) : this._tourUrl;
                },
                set_tourUrl: function(l) {
                  return this._tourUrl = l, l;
                },
                get_bounds: function() {
                  return this._bounds;
                },
                set_bounds: function(l) {
                  return this._bounds = l, l;
                },
                get_isImage: function() {
                  return !1;
                },
                get_isTour: function() {
                  return !0;
                },
                get_isFolder: function() {
                  return !1;
                },
                get_isCloudCommunityItem: function() {
                  return !1;
                },
                get_readOnly: function() {
                  return !1;
                },
                get_children: function() {
                  return [];
                }
              };
              (0, n.registerType)("Tour", [o, c, null, _.IThumbnail]);
            }
          ),
          /***/
          "./esm/tours/file_cabinet.js": (
            /*!***********************************!*\
              !*** ./esm/tours/file_cabinet.js ***!
              \***********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FileCabinet: () => (
                  /* binding */
                  l
                ),
                /* harmony export */
                FileEntry: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ../utilities/xml_text_writer.js */
                "./esm/utilities/xml_text_writer.js"
              ), r = i(
                /*! ../web_file.js */
                "./esm/web_file.js"
              );
              function o(a, b) {
                this.size = 0, this.offset = 0, this.filename = a, this.size = b;
              }
              var c = {
                toString: function() {
                  return this.filename;
                }
              };
              (0, n.registerType)("FileEntry", [o, c, null]);
              function l() {
                this.tempDirectory = "", this._currentOffset = 0, this._packageID = "", this.url = "", this.clearFileList();
              }
              l.fromUrl = function(a, b) {
                var V = new l();
                return V.url = a, V._callMe = b, V._webFile = new r.WebFile(a), V._webFile.responseType = "blob", V._webFile.onStateChange = t.ss.bind("_loadCabinet", V), V._webFile.send(), V;
              };
              var g = {
                get_packageID: function() {
                  return this._packageID;
                },
                set_packageID: function(a) {
                  return this._packageID = a, a;
                },
                addFile: function(a, b) {
                  if (b != null && !t.ss.keyExists(this._fileDirectory, a)) {
                    var V = new o(a, b.size);
                    V.offset = this._currentOffset, V.blob = b, this.fileList.push(V), this._fileDirectory[a] = V, this._currentOffset += V.size;
                  }
                },
                clearFileList: function() {
                  this.fileList == null && (this.fileList = []), this._fileDirectory == null && (this._fileDirectory = {}), this.fileList.length = 0, t.ss.clearKeys(this._fileDirectory), this._currentOffset = 0;
                },
                packageFiles: function() {
                  var a = new _.XmlTextWriter();
                  a.formatting = 1, a._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), a._writeStartElement("FileCabinet"), a._writeAttributeString("HeaderSize", "0x0BADFOOD"), a._writeStartElement("Files");
                  for (var b = t.ss.enumerate(this.fileList); b.moveNext(); ) {
                    var V = b.current;
                    a._writeStartElement("File"), a._writeAttributeString("Name", V.filename), a._writeAttributeString("Size", V.size.toString()), a._writeAttributeString("Offset", V.offset.toString()), a._writeEndElement();
                  }
                  a._writeEndElement(), a._writeFullEndElement(), a._close();
                  var y = a.body, C = new Blob([y]), E = t.ss.format("0x{0:x8}", C.size);
                  y = t.ss.replaceString(y, "0x0BADFOOD", E), C = new Blob([y]);
                  var v = [];
                  v.push(C);
                  for (var m = t.ss.enumerate(this.fileList); m.moveNext(); ) {
                    var V = m.current;
                    v.push(V.blob);
                  }
                  var L = new Blob(v, { type: "application/x-wtt" });
                  return L;
                },
                _loadCabinet: function() {
                  var a = this;
                  if (this._webFile.get_state() === 2)
                    alert(this._webFile.get_message());
                  else if (this._webFile.get_state() === 1) {
                    this._mainBlob = this._webFile.getBlob();
                    var b = new FileReader();
                    b.onloadend = function(V) {
                      var y = a._getSize(b.result), C = new FileReader();
                      C.onloadend = function(E) {
                        var v = t.ss.safeCast(C.result, String), m = new DOMParser();
                        a.extract(m.parseFromString(v, "text/xml"), y), a._callMe();
                      }, C.readAsText(a._mainBlob.slice(0, y));
                    }, b.readAsText(this._mainBlob.slice(0, 255));
                  }
                },
                _getSize: function(a) {
                  var b = a.indexOf("0x");
                  return b === -1 ? 0 : parseInt(a.substring(b, b + 10), 16);
                },
                extract: function(a, b) {
                  try {
                    var V = e.Util.selectSingleNode(a, "FileCabinet"), y = e.Util.selectSingleNode(V, "Files");
                    this.fileList.length = 0;
                    for (var C = t.ss.enumerate(y.childNodes); C.moveNext(); ) {
                      var E = C.current;
                      if (E.nodeName === "File") {
                        var v = new o(E.attributes.getNamedItem("Name").nodeValue, parseInt(E.attributes.getNamedItem("Size").nodeValue));
                        v.offset = b, b += v.size, this.fileList.push(v);
                      }
                    }
                  } catch {
                  }
                },
                getFileBlob: function(a) {
                  var b = this.getFileEntry(a);
                  if (b != null) {
                    var V = a.substr(a.lastIndexOf(".")).toLowerCase(), y = null;
                    switch (V) {
                      case ".png":
                        y = "image/png";
                        break;
                      case ".jpg":
                      case ".jpeg":
                        y = "image/jpeg";
                        break;
                      case ".mp3":
                        y = "audio/mpeg3";
                        break;
                      case ".txt":
                        y = "text/plain";
                        break;
                      case ".fit":
                      case ".fits":
                        y = "application/octet-stream";
                        break;
                    }
                    return this._mainBlob.slice(b.offset, b.offset + b.size, y);
                  }
                  return null;
                },
                getFileEntry: function(a) {
                  for (var b = t.ss.enumerate(this.fileList); b.moveNext(); ) {
                    var V = b.current;
                    if (V.filename === a)
                      return V;
                  }
                  return null;
                },
                get_masterFile: function() {
                  return this.fileList.length > 0 ? this.fileList[0].filename : null;
                },
                clearTempFiles: function() {
                  for (var a = t.ss.enumerate(this.fileList); a.moveNext(); )
                    a.current;
                }
              };
              (0, n.registerType)("FileCabinet", [l, g, null]);
            }
          ),
          /***/
          "./esm/tours/overlay.js": (
            /*!******************************!*\
              !*** ./esm/tours/overlay.js ***!
              \******************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                AudioOverlay: () => (
                  /* binding */
                  W
                ),
                /* harmony export */
                AudioType: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                BitmapOverlay: () => (
                  /* binding */
                  K
                ),
                /* harmony export */
                FlipbookOverlay: () => (
                  /* binding */
                  $
                ),
                /* harmony export */
                LoopTypes: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                Overlay: () => (
                  /* binding */
                  L
                ),
                /* harmony export */
                OverlayAnchor: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                ShapeOverlay: () => (
                  /* binding */
                  R
                ),
                /* harmony export */
                ShapeType: () => (
                  /* binding */
                  v
                ),
                /* harmony export */
                TextOverlay: () => (
                  /* binding */
                  w
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ../graphics/texture.js */
                "./esm/graphics/texture.js"
              ), o = i(
                /*! ../graphics/sprite2d.js */
                "./esm/graphics/sprite2d.js"
              ), c = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), l = i(
                /*! ../color.js */
                "./esm/color.js"
              ), g = i(
                /*! ../coordinates.js */
                "./esm/coordinates.js"
              ), a = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), b = i(
                /*! ../ui_tools.js */
                "./esm/ui_tools.js"
              ), V = i(
                /*! ../util.js */
                "./esm/util.js"
              ), y = i(
                /*! ./text_object.js */
                "./esm/tours/text_object.js"
              ), C = {
                sky: 0,
                screen: 1
              };
              (0, n.registerType)("OverlayAnchor", C), (0, n.registerEnum)("OverlayAnchor", C);
              var E = {
                music: 0,
                voice: 1
              };
              (0, n.registerType)("AudioType", E), (0, n.registerEnum)("AudioType", E);
              var v = {
                circle: 0,
                rectagle: 1,
                star: 2,
                donut: 3,
                arrow: 4,
                line: 5,
                openRectagle: 6
              };
              (0, n.registerType)("ShapeType", v), (0, n.registerEnum)("ShapeType", v);
              var m = {
                loop: 0,
                upDown: 1,
                down: 2,
                upDownOnce: 3,
                once: 4,
                begin: 5,
                end: 6
              };
              (0, n.registerType)("LoopTypes", m), (0, n.registerEnum)("LoopTypes", m);
              function L() {
                this.isDynamic = !1, this.isDesignTimeOnly = !1, this._name = "", this.id = (L.nextId++).toString(), this._owner = null, this._url = "", this._linkID = "", this._domeMatrix = e.Matrix3d.get_identity(), this._domeMatX = 0, this._domeMatY = 0, this._domeAngle = 0, this.points = null, this._animate = !1, this._tweenFactor = 0, this._endX = 0, this._endY = 0, this._endOpacity = 0, this._endColor = new l.Color(), this._endWidth = 0, this._endHeight = 0, this._endRotationAngle = 0, this._anchor = 1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._color = l.Colors.get_white(), this._opacity = 0.5, this._rotationAngle = 0, this.currentRotation = 0, this.texture = null, this.texture2d = null, this._interpolationType = 5;
              }
              L.defaultAnchor = 1, L.clipboardFormat = "WorldWideTelescope.Overlay", L.nextId = 11231, L.RC = 0.01745329277777778, L._fromXml = function(I, x) {
                if (x.attributes == null || x.attributes.getNamedItem("Type") == null)
                  return null;
                var P = x.attributes.getNamedItem("Type").nodeValue, d = t.ss.replaceString(P, "TerraViewer.", ""), U = null;
                switch (d) {
                  case "AudioOverlay":
                    U = new W();
                    break;
                  case "BitmapOverlay":
                    U = new K();
                    break;
                  case "FlipBookOverlay":
                    U = new $();
                    break;
                  case "ShapeOverlay":
                    U = new R();
                    break;
                  case "TextOverlay":
                    U = new w();
                    break;
                  default:
                    return null;
                }
                return U._owner = I, U._initOverlayFromXml(x), U;
              };
              var A = {
                get_name: function() {
                  return this._name;
                },
                set_name: function(I) {
                  return this._name = I, I;
                },
                get_owner: function() {
                  return this._owner;
                },
                set_owner: function(I) {
                  return this._owner = I, I;
                },
                get_zOrder: function() {
                  for (var I = 0, x = t.ss.enumerate(this._owner.get_overlays()); x.moveNext(); ) {
                    var P = x.current;
                    if (P === this)
                      break;
                    I++;
                  }
                  return I;
                },
                get_url: function() {
                  return this._url;
                },
                set_url: function(I) {
                  return this._url = I, I;
                },
                get_linkID: function() {
                  return this._linkID;
                },
                set_linkID: function(I) {
                  return this._linkID = I, I;
                },
                play: function() {
                },
                pause: function() {
                },
                stop: function() {
                },
                seek: function(I) {
                },
                makePosition: function(I, x, P, d, U) {
                  I -= 960, x -= 558;
                  var F = e.Vector3d.create(I + P, x + d, 1347);
                  return (this._domeMatX || this._domeMatY || this._domeAngle !== U) && (this._domeMatX = I, this._domeMatY = x, this._domeMatrix = e.Matrix3d.translation(e.Vector3d.create(-I, -x, 0)), this._domeMatrix._multiply(e.Matrix3d._rotationZ(U / 180 * Math.PI)), this._domeMatrix._multiply(e.Matrix3d.translation(e.Vector3d.create(I, x, 0)))), F = e.Vector3d._transformCoordinate(F, this._domeMatrix), F;
                },
                draw3D: function(I, x) {
                  _.useGl && ((this.texture == null || this.isDynamic) && this.initializeTexture(), (!this.isDesignTimeOnly || x) && (this.initializeGeometry(), this.updateRotation()));
                },
                cleanUp: function() {
                  this.texture != null && (this.texture = null), this.texture2d = null;
                },
                initializeTexture: function() {
                },
                // This hook exists to deal with web browser autoplay restrictions. In the
                // strictest case, we can't just start playing media files at will -- we
                // need to start playing them in response to a user-initiated event. But
                // there is a generally a scheme in which files are "unlocked" once they've
                // started to be played, and after that point we can control their playback
                // more precisely. So, this function should do any multimedia playback
                // initialization needed. It will be called when the user initiates tour
                // playback.
                //
                // Repeated calls should be idempotent.
                prepMultimedia: function() {
                },
                cleanUpGeometry: function() {
                  this.currentRotation = 0, this.points = null;
                },
                initializeGeometry: function() {
                  this.points == null && (this.currentRotation = 0, this.points = new Array(4), this.points[0] = new e.PositionColoredTextured(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new e.PositionColoredTextured(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new e.PositionColoredTextured(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new e.PositionColoredTextured(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 1, this.points[3].color = this.get_color());
                },
                updateRotation: function() {
                },
                // Animation Support
                get_animate: function() {
                  return this._animate;
                },
                set_animate: function(I) {
                  return this._animate !== I && (this._animate = I, this._animate ? (this._endX = this._x, this._endY = this._y, this._endRotationAngle = this._rotationAngle, this._endColor = this._color, this._endWidth = this._width, this._endHeight = this._height, this.cleanUpGeometry()) : (this._endX = this._x = this.get_x(), this._endY = this._y = this.get_y(), this._endRotationAngle = this._rotationAngle = this.get_rotationAngle(), this._endColor = this._color = this.get_color(), this._endWidth = this._width = this.get_width(), this._endHeight = this._height = this.get_height(), this.cleanUpGeometry(), this._tweenFactor = 0)), I;
                },
                get_tweenFactor: function() {
                  return this._tweenFactor;
                },
                set_tweenFactor: function(I) {
                  return this._animate ? this._tweenFactor !== I && (this._tweenFactor = I, this.cleanUpGeometry()) : this._tweenFactor = 0, I;
                },
                get_anchor: function() {
                  return this._anchor;
                },
                set_anchor: function(I) {
                  return this._anchor = I, I;
                },
                get_position: function() {
                  return e.Vector2d.create(this.get_x(), this.get_y());
                },
                set_position: function(I) {
                  return this.set_x(I.x), this.set_y(I.y), I;
                },
                get_x: function() {
                  return this._x * (1 - this._tweenFactor) + this._endX * this._tweenFactor;
                },
                set_x: function(I) {
                  return this._tweenFactor < 0.5 ? this._x !== I && (this._x = I, this.cleanUpGeometry()) : this._endX !== I && (this._endX = I, this.cleanUpGeometry()), I;
                },
                get_y: function() {
                  return this._y * (1 - this._tweenFactor) + this._endY * this._tweenFactor;
                },
                set_y: function(I) {
                  return this._tweenFactor < 0.5 ? this._y !== I && (this._y = I, this.cleanUpGeometry()) : this._endY !== I && (this._endY = I, this.cleanUpGeometry()), I;
                },
                get_width: function() {
                  return this._width * (1 - this._tweenFactor) + this._endWidth * this._tweenFactor;
                },
                set_width: function(I) {
                  return I < 5 && I && (I = 5), this._tweenFactor < 0.5 ? this._width !== I && (this._width = I, this.cleanUpGeometry()) : this._endWidth !== I && (this._endWidth = I, this.cleanUpGeometry()), I;
                },
                get_height: function() {
                  return this._height * (1 - this._tweenFactor) + this._endHeight * this._tweenFactor;
                },
                set_height: function(I) {
                  return I < 5 && I && (I = 5), this._tweenFactor < 0.5 ? this._height !== I && (this._height = I, this.cleanUpGeometry()) : this._endHeight !== I && (this._endHeight = I, this.cleanUpGeometry()), I;
                },
                get_color: function() {
                  var I = t.ss.truncate(this._color.r * (1 - this._tweenFactor) + this._endColor.r * this._tweenFactor), x = t.ss.truncate(this._color.g * (1 - this._tweenFactor) + this._endColor.g * this._tweenFactor), P = t.ss.truncate(this._color.b * (1 - this._tweenFactor) + this._endColor.b * this._tweenFactor), d = t.ss.truncate(this._color.a * (1 - this._tweenFactor) + this._endColor.a * this._tweenFactor);
                  return l.Color.fromArgb(Math.max(0, Math.min(255, d)), Math.max(0, Math.min(255, I)), Math.max(0, Math.min(255, x)), Math.max(0, Math.min(255, P)));
                },
                set_color: function(I) {
                  return this._tweenFactor < 0.5 ? this._color !== I && (this._color = I, this.cleanUpGeometry()) : this._endColor !== I && (this._endColor = I, this.cleanUpGeometry()), I;
                },
                get_opacity: function() {
                  return this.get_color().a / 255;
                },
                set_opacity: function(I) {
                  var x = this.get_color();
                  return this.set_color(l.Color.fromArgb(Math.min(255, t.ss.truncate(I * 255)), x.r, x.g, x.b)), this._opacity = I, I;
                },
                get_rotationAngle: function() {
                  return this._rotationAngle * (1 - this._tweenFactor) + this._endRotationAngle * this._tweenFactor;
                },
                set_rotationAngle: function(I) {
                  return this._tweenFactor < 0.5 ? this._rotationAngle !== I && (this._rotationAngle = I, this.cleanUpGeometry()) : this._endRotationAngle !== I && (this._endRotationAngle = I, this.cleanUpGeometry()), I;
                },
                hitTest: function(I) {
                  var x = new Array(1);
                  x[0] = e.Vector2d.create(I.x, I.y);
                  var P = e.Matrix2d.rotateAt(-this.get_rotationAngle() / 180 * Math.PI, e.Vector2d.create(this.get_x(), this.get_y()));
                  P._transformPoints(x);
                  var d = V.Rectangle.create(this.get_x() - this.get_width() / 2, this.get_y() - this.get_height() / 2, this.get_width(), this.get_height());
                  return d.contains(x[0]);
                },
                get_bounds: function() {
                  return this._bounds;
                },
                set_bounds: function(I) {
                  return this._bounds = I, I;
                },
                get_interpolationType: function() {
                  return this._interpolationType;
                },
                set_interpolationType: function(I) {
                  return this._interpolationType = I, I;
                },
                saveToXml: function(I, x) {
                  I._writeStartElement("Overlay"), I._writeAttributeString("Id", this.id), I._writeAttributeString("Type", this.getTypeName()), I._writeAttributeString("Name", this.get_name()), I._writeAttributeString("X", this._x.toString()), I._writeAttributeString("Y", this._y.toString()), I._writeAttributeString("Width", this._width.toString()), I._writeAttributeString("Height", this._height.toString()), I._writeAttributeString("Rotation", this._rotationAngle.toString()), I._writeAttributeString("Color", this._color.save()), I._writeAttributeString("Url", this._url), I._writeAttributeString("LinkID", this._linkID), I._writeAttributeString("Animate", this._animate.toString()), this._animate && (I._writeAttributeString("EndX", this._endX.toString()), I._writeAttributeString("EndY", this._endY.toString()), I._writeAttributeString("EndWidth", this._endWidth.toString()), I._writeAttributeString("EndHeight", this._endHeight.toString()), I._writeAttributeString("EndRotation", this._endRotationAngle.toString()), I._writeAttributeString("EndColor", this._endColor.save()), I._writeAttributeString("InterpolationType", n.Enums.toXml("InterpolationType", this._interpolationType))), I._writeAttributeString("Anchor", n.Enums.toXml("OverlayAnchor", this._anchor)), this.writeOverlayProperties(I), I._writeEndElement();
                },
                getTypeName: function() {
                  return "TerraViewer.Overlay";
                },
                addFilesToCabinet: function(I) {
                },
                writeOverlayProperties: function(I) {
                },
                _initOverlayFromXml: function(I) {
                  this.id = I.attributes.getNamedItem("Id").nodeValue, this.set_name(I.attributes.getNamedItem("Name").nodeValue), this._x = parseFloat(I.attributes.getNamedItem("X").nodeValue), this._y = parseFloat(I.attributes.getNamedItem("Y").nodeValue), this._width = parseFloat(I.attributes.getNamedItem("Width").nodeValue), this._height = parseFloat(I.attributes.getNamedItem("Height").nodeValue), this._rotationAngle = parseFloat(I.attributes.getNamedItem("Rotation").nodeValue), this._color = l.Color.load(I.attributes.getNamedItem("Color").nodeValue), I.attributes.getNamedItem("Url") != null && this.set_url(I.attributes.getNamedItem("Url").nodeValue), I.attributes.getNamedItem("LinkID") != null && this.set_linkID(I.attributes.getNamedItem("LinkID").nodeValue), I.attributes.getNamedItem("Animate") != null && (this._animate = t.ss.boolean(I.attributes.getNamedItem("Animate").nodeValue), this._animate && (this._endX = parseFloat(I.attributes.getNamedItem("EndX").nodeValue), this._endY = parseFloat(I.attributes.getNamedItem("EndY").nodeValue), this._endColor = l.Color.load(I.attributes.getNamedItem("EndColor").nodeValue), this._endWidth = parseFloat(I.attributes.getNamedItem("EndWidth").nodeValue), this._endHeight = parseFloat(I.attributes.getNamedItem("EndHeight").nodeValue), this._endRotationAngle = parseFloat(I.attributes.getNamedItem("EndRotation").nodeValue), I.attributes.getNamedItem("InterpolationType") != null && this.set_interpolationType(n.Enums.parse("InterpolationType", I.attributes.getNamedItem("InterpolationType").nodeValue)))), this.initializeFromXml(I);
                },
                initializeFromXml: function(I) {
                },
                toString: function() {
                  return this.get_name();
                }
              };
              (0, n.registerType)("Overlay", [L, A, null]);
              function K() {
                this._textureReady$1 = !1, this._sprite$1 = new o.Sprite2d(), L.call(this);
              }
              K.create = function(I, x) {
                var P = new K();
                return P.set_owner(I), P._filename$1 = x.name, P.set_name(I.getNextDefaultName("Image")), P.set_x(0), P.set_y(0), I.get_owner().addCachedFile(x.name, x), P;
              };
              var T = {
                getTypeName: function() {
                  return "TerraViewer.BitmapOverlay";
                },
                copy: function(I) {
                  var x = new K();
                  return x.set_owner(I), x._filename$1 = this._filename$1, x.set_x(this.get_x()), x.set_y(this.get_y()), x.set_width(this.get_width()), x.set_height(this.get_height()), x.set_color(this.get_color()), x.set_opacity(this.get_opacity()), x.set_rotationAngle(this.get_rotationAngle()), x.set_name(this.get_name() + " - Copy"), x;
                },
                cleanUp: function() {
                  this.texture = null, this.texture2d != null && (this.texture2d.cleanUp(), this.texture2d = null);
                },
                initializeTexture: function() {
                  var I = this;
                  try {
                    _.useGl ? (this.texture2d = this.get_owner().get_owner().getCachedTexture2d(this._filename$1), this._textureReady$1 = !0) : this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
                      I._textureReady$1 = !0;
                    });
                  } catch {
                  }
                },
                draw3D: function(I, x) {
                  if (_.useGl)
                    this.texture2d == null && this.initializeTexture(), !this.get_width() && !this.get_height() && (this.set_width(this.texture2d.imageElement.width), this.set_height(this.texture2d.imageElement.height)), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(I, this.points, this.points.length, this.texture2d, !0, 1);
                  else {
                    if (this.texture == null && this.initializeTexture(), !this._textureReady$1)
                      return;
                    !this.get_width() && !this.get_height() && (this.set_width(this.texture.width), this.set_height(this.texture.height));
                    var P = I.device;
                    P.save(), P.translate(this.get_x(), this.get_y()), P.rotate(this.get_rotationAngle() * L.RC), P.globalAlpha = this.get_opacity(), P.drawImage(this.texture, -this.get_width() / 2, -this.get_height() / 2, this.get_width(), this.get_height()), P.restore();
                  }
                },
                addFilesToCabinet: function(I) {
                  I.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
                },
                writeOverlayProperties: function(I) {
                  I._writeStartElement("Bitmap"), I._writeAttributeString("Filename", this._filename$1), I._writeEndElement();
                },
                initializeFromXml: function(I) {
                  var x = c.Util.selectSingleNode(I, "Bitmap");
                  this._filename$1 = x.attributes.getNamedItem("Filename").nodeValue;
                }
              };
              (0, n.registerType)("BitmapOverlay", [K, T, L]);
              function w() {
                this._sprite$1 = new o.Sprite2d(), this._ctx$1 = null, this._ce$1 = null, L.call(this);
              }
              w.create = function(I) {
                var x = new w();
                return x.textObject = I, x._calculateTextSize$1(), x;
              };
              var f = {
                getTypeName: function() {
                  return "TerraViewer.TextOverlay";
                },
                get_color: function() {
                  return L.prototype.get_color.call(this);
                },
                set_color: function(I) {
                  return this.textObject.foregroundColor !== I && (this.textObject.foregroundColor = I, L.prototype.set_color.call(this, I), this.cleanUp()), I;
                },
                draw3D: function(I, x) {
                  if (_.useGl)
                    this.initializeTexture(), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(I, this.points, this.points.length, this.texture2d, !0, 1);
                  else {
                    var P = I.device;
                    P.save(), P.translate(this.get_x(), this.get_y()), P.rotate(this.get_rotationAngle() * L.RC), P.globalAlpha = this.get_opacity(), this._drawCanvasText$1(P), P.restore();
                  }
                },
                _drawCanvasText$1: function(I) {
                  I.fillStyle = this.textObject.foregroundColor.toString(), I.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, I.textBaseline = "top";
                  var x = this.textObject.text;
                  if (x.indexOf("{$") > -1) {
                    if (x.indexOf("{$DATE}") > -1) {
                      var P = t.ss.format("{0:yyyy/MM/dd}", a.SpaceTimeController.get_now());
                      x = t.ss.replaceString(x, "{$DATE}", P);
                    }
                    if (x.indexOf("{$TIME}") > -1) {
                      var d = t.ss.format("{0:HH:mm:ss}", a.SpaceTimeController.get_now());
                      x = t.ss.replaceString(x, "{$TIME}", d);
                    }
                    x = t.ss.replaceString(x, "{$DIST}", b.UiTools.formatDistance(_.globalRenderContext.get_solarSystemCameraDistance())), x = t.ss.replaceString(x, "{$LAT}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.lat)), x = t.ss.replaceString(x, "{$LNG}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.lat)), x = t.ss.replaceString(x, "{$RA}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.get_RA())), x = t.ss.replaceString(x, "{$DEC}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.get_dec())), x = t.ss.replaceString(x, "{$FOV}", g.Coordinates.formatDMS(_.globalRenderContext.get_fovAngle()));
                  }
                  for (var U = x.split(`
`), F = -(this.get_height() / 2), X = this.textObject.fontSize * 1.7, Y = t.ss.enumerate(U); Y.moveNext(); )
                    for (var M = Y.current, B = c.Util.getWrappedText(I, M, this.get_width()), D = t.ss.enumerate(B); D.moveNext(); ) {
                      var k = D.current;
                      I.fillText(k, -this.get_width() / 2, F), F += X;
                    }
                },
                _calculateTextSize$1: function() {
                  (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = 100, this._ce$1.width = 100, this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.fillStyle = this.textObject.foregroundColor.toString(), this._ctx$1.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, this._ctx$1.textBaseline = "top";
                  var I = this.textObject.text;
                  if (I.indexOf("{$") > -1) {
                    if (I.indexOf("{$DATE}") > -1) {
                      var x = t.ss.format("{0:yyyy/MM/dd}", a.SpaceTimeController.get_now());
                      I = t.ss.replaceString(I, "{$DATE}", x);
                    }
                    if (I.indexOf("{$TIME}") > -1) {
                      var P = t.ss.format("{0:HH:mm:ss}", a.SpaceTimeController.get_now());
                      I = t.ss.replaceString(I, "{$TIME}", P);
                    }
                    I = t.ss.replaceString(I, "{$DIST}", b.UiTools.formatDistance(_.globalRenderContext.get_solarSystemCameraDistance())), I = t.ss.replaceString(I, "{$LAT}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.lat)), I = t.ss.replaceString(I, "{$LNG}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.lat)), I = t.ss.replaceString(I, "{$RA}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.get_RA())), I = t.ss.replaceString(I, "{$DEC}", g.Coordinates.formatDMS(_.globalRenderContext.viewCamera.get_dec())), I = t.ss.replaceString(I, "{$FOV}", g.Coordinates.formatDMS(_.globalRenderContext.get_fovAngle()));
                  }
                  for (var d = I.split(`
`), U = 0, F = this.textObject.fontSize * 1.7, X = 0, Y = t.ss.enumerate(d); Y.moveNext(); ) {
                    var M = Y.current, B = this._ctx$1.measureText(M).width;
                    X = Math.max(B, X), U += F;
                  }
                  this.set_width(X * 1.01), this.set_height(U), this._ce$1 = null, this._ctx$1 = null;
                },
                initializeTexture: function() {
                  (this.texture2d == null || this.textObject.text.indexOf("{$") > -1) && ((!this.get_height() || !this.get_width()) && this._calculateTextSize$1(), (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = t.ss.truncate(this.get_height()), this._ce$1.width = t.ss.truncate(this.get_width()), this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.translate(this.get_width() / 2, this.get_height() / 2), this._ctx$1.clearRect(0, 0, this.get_width(), this.get_height()), this._drawCanvasText$1(this._ctx$1), this.texture2d = new r.Texture(), this.texture2d.imageElement = this._ce$1, this.texture2d.makeTexture(), this._ce$1 = null, this._ctx$1 = null);
                },
                writeOverlayProperties: function(I) {
                  I._writeStartElement("Text"), this.textObject._saveToXml(I), I._writeEndElement();
                },
                initializeFromXml: function(I) {
                  var x = c.Util.selectSingleNode(I, "Text");
                  this.textObject = y.TextObject._fromXml(c.Util.selectSingleNode(x, "TextObject"));
                },
                initializeGeometry: function() {
                  _.useGl && L.prototype.initializeGeometry.call(this);
                }
              };
              (0, n.registerType)("TextOverlay", [w, f, L]);
              function R() {
                this._shapeType$1 = 1, this._sprite$1 = new o.Sprite2d(), this._triangleStrip$1 = !0, L.call(this);
              }
              R._create = function(I, x) {
                var P = new R();
                return P._shapeType$1 = x, P.set_owner(I), P;
              };
              var O = {
                getTypeName: function() {
                  return "TerraViewer.ShapeOverlay";
                },
                get_shapeType: function() {
                  return this._shapeType$1;
                },
                set_shapeType: function(I) {
                  return this._shapeType$1 = I, this.cleanUpGeometry(), I;
                },
                draw3D: function(I, x) {
                  if (_.useGl)
                    this.initializeGeometry(), this._sprite$1.draw(I, this.points, this.points.length, null, this._triangleStrip$1, this.get_opacity());
                  else
                    switch (this._shapeType$1) {
                      case 0:
                        this._drawCircleGeometry$1(I);
                        break;
                      case 1:
                        this._drawRectGeometry$1(I);
                        break;
                      case 6:
                        this._drawOpenRectGeometry$1(I);
                        break;
                      case 2:
                        this._drawStarGeometry$1(I);
                        break;
                      case 3:
                        this._drawDonutGeometry$1(I);
                        break;
                      case 4:
                        this._drawArrowGeometry$1(I);
                        break;
                      case 5:
                        this._drawLineGeometry$1(I);
                        break;
                    }
                },
                initializeGeometry: function() {
                  if (this.points == null)
                    switch (this._shapeType$1) {
                      case 0:
                        this._createCircleGeometry$1();
                        break;
                      case 1:
                        L.prototype.initializeGeometry.call(this);
                        break;
                      case 6:
                        this._createOpenRectGeometry$1();
                        break;
                      case 2:
                        this._createStarGeometry$1();
                        break;
                      case 3:
                        this._createDonutGeometry$1();
                        break;
                      case 4:
                        this._createArrowGeometry$1();
                        break;
                      case 5:
                        this._createLineGeometry$1();
                        break;
                    }
                },
                _createLineGeometry$1: function() {
                  this.get_x(), this.get_y(), this.get_width() / 2;
                  var I = this.get_width(), x = t.ss.truncate(I / 12) + 1;
                  this.points == null && (this.points = new Array(x * 2 + 2));
                  for (var P = 0; P <= x; P++) {
                    var d = P * 2;
                    this.points[d] = new e.PositionColoredTextured(), this.points[d].position = this.makePosition(this.get_x(), this.get_y(), P / x * this.get_width() - this.get_width() / 2, 6, this.get_rotationAngle()), this.points[d].tu = P % 2, this.points[d].tv = 0, this.points[d].color = this.get_color(), this.points[d + 1] = new e.PositionColoredTextured(), this.points[d + 1].position = this.makePosition(this.get_x(), this.get_y(), P / x * this.get_width() - this.get_width() / 2, -6, this.get_rotationAngle()), this.points[d + 1].tu = P % 2, this.points[d + 1].tv = 1, this.points[d + 1].color = this.get_color();
                  }
                },
                _createOpenRectGeometry$1: function() {
                  var I = this.get_x(), x = this.get_y();
                  this.get_width() / 2;
                  var P = this.get_width(), d = t.ss.truncate(P / 12) + 1, U = t.ss.truncate(this.get_height() / 12) + 1, F = ((d + 1) * 2 + (U + 1) * 2) * 2;
                  this.points == null && (this.points = new Array(F));
                  for (var X = 0; X <= d; X++) {
                    var Y = X * 2;
                    this.points[Y] = new e.PositionColoredTextured(), this.points[Y].position = this.makePosition(I, x, X / d * this.get_width() - this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[Y].tu = X % 2, this.points[Y].tv = 0, this.points[Y].color = this.get_color(), this.points[Y + 1] = new e.PositionColoredTextured(), this.points[Y + 1].position = this.makePosition(I, x, X / d * this.get_width() - this.get_width() / 2, this.get_height() / 2 - 12, this.get_rotationAngle()), this.points[Y + 1].tu = X % 2, this.points[Y + 1].tv = 1, this.points[Y + 1].color = this.get_color();
                    var M = (d + 1) * 4 + (U + 1) * 2 - 2 - Y;
                    this.points[M] = new e.PositionColoredTextured(), this.points[M].position = this.makePosition(I, x, X / d * this.get_width() - this.get_width() / 2, -(this.get_height() / 2) + 12, this.get_rotationAngle()), this.points[M].tu = X % 2, this.points[M].tv = 0, this.points[M].color = this.get_color(), this.points[M + 1] = new e.PositionColoredTextured(), this.points[M + 1].position = this.makePosition(I, x, X / d * this.get_width() - this.get_width() / 2, -(this.get_height() / 2), this.get_rotationAngle()), this.points[M + 1].tu = X % 2, this.points[M + 1].tv = 1, this.points[M + 1].color = this.get_color();
                  }
                  for (var B = (d + 1) * 2, X = 0; X <= U; X++) {
                    var D = (U + 1) * 2 + B - 2, Y = X * 2;
                    this.points[D - Y] = new e.PositionColoredTextured(), this.points[D - Y].position = this.makePosition(I, x, this.get_width() / 2, X / U * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[D - Y].tu = X % 2, this.points[D - Y].tv = 0, this.points[D - Y].color = this.get_color(), this.points[D - Y + 1] = new e.PositionColoredTextured(), this.points[D - Y + 1].position = this.makePosition(I, x, this.get_width() / 2 - 12, X / U * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[D - Y + 1].tu = X % 2, this.points[D - Y + 1].tv = 1, this.points[D - Y + 1].color = this.get_color();
                    var M = Y + (d + 1) * 4 + (U + 1) * 2;
                    this.points[M] = new e.PositionColoredTextured(), this.points[M].position = this.makePosition(I, x, -(this.get_width() / 2) + 12, X / U * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[M].tu = X % 2, this.points[M].tv = 0, this.points[M].color = this.get_color(), this.points[M + 1] = new e.PositionColoredTextured(), this.points[M + 1].position = this.makePosition(I, x, -(this.get_width() / 2), X / U * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[M + 1].tu = X % 2, this.points[M + 1].tv = 1, this.points[M + 1].color = this.get_color();
                  }
                },
                _createStarGeometry$1: function() {
                  var I = this.get_x(), x = this.get_y();
                  this.get_width() / 2;
                  var P = Math.PI * 2 / 5;
                  this.points == null && (this.points = new Array(12)), this._pnts$1 == null && (this._pnts$1 = new Array(10));
                  for (var d = 0; d < 5; d++) {
                    var U = d * P - Math.PI / 2;
                    this._pnts$1[d] = new e.PositionColoredTextured(), this._pnts$1[d].position = this.makePosition(I, x, Math.cos(U) * (this.get_width() / 2), Math.sin(U) * (this.get_height() / 2), this.get_rotationAngle()), this._pnts$1[d].tu = 0, this._pnts$1[d].tv = 0, this._pnts$1[d].color = this.get_color();
                  }
                  for (var d = 5; d < 10; d++) {
                    var U = d * P + P / 2 - Math.PI / 2;
                    this._pnts$1[d] = new e.PositionColoredTextured(), this._pnts$1[d].position = this.makePosition(I, x, Math.cos(U) * (this.get_width() / 5.3), Math.sin(U) * (this.get_height() / 5.3), this.get_rotationAngle()), this._pnts$1[d].tu = 0, this._pnts$1[d].tv = 0, this._pnts$1[d].color = this.get_color();
                  }
                  this.points[0] = this._pnts$1[0], this.points[1] = this._pnts$1[5], this.points[2] = this._pnts$1[9], this.points[3] = this._pnts$1[1], this.points[4] = this._pnts$1[7], this.points[5] = this._pnts$1[4], this.points[6] = this._pnts$1[6], this.points[7] = this._pnts$1[2], this.points[8] = this._pnts$1[7], this.points[9] = this._pnts$1[7], this.points[10] = this._pnts$1[3], this.points[11] = this._pnts$1[8], this._triangleStrip$1 = !1;
                },
                _createArrowGeometry$1: function() {
                  this.points == null && (this.points = new Array(9)), this.points[0] = new e.PositionColoredTextured(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 4, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new e.PositionColoredTextured(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new e.PositionColoredTextured(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new e.PositionColoredTextured(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 0, this.points[3].color = this.get_color(), this.points[4] = new e.PositionColoredTextured(), this.points[4].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[4].tu = 0, this.points[4].tv = 1, this.points[4].color = this.get_color(), this.points[5] = new e.PositionColoredTextured(), this.points[5].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 4, this.get_rotationAngle()), this.points[5].tu = 1, this.points[5].tv = 1, this.points[5].color = this.get_color(), this.points[6] = new e.PositionColoredTextured(), this.points[6].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 2, this.get_rotationAngle()), this.points[6].tu = 1, this.points[6].tv = 1, this.points[6].color = this.get_color(), this.points[7] = new e.PositionColoredTextured(), this.points[7].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, 0, this.get_rotationAngle()), this.points[7].tu = 1, this.points[7].tv = 0.5, this.points[7].color = this.get_color(), this.points[8] = new e.PositionColoredTextured(), this.points[8].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 2, this.get_rotationAngle()), this.points[8].tu = 1, this.points[8].tv = 1, this.points[8].color = this.get_color(), this._triangleStrip$1 = !1;
                },
                _createDonutGeometry$1: function() {
                  var I = this.get_x(), x = this.get_y(), P = this.get_width() / 2, d = Math.PI * 2 * P, U = t.ss.truncate(d / 12) + 1, F = Math.PI * 2 / U;
                  this.points == null && (this.points = new Array(U * 2 + 2));
                  for (var X = 0; X <= U; X++) {
                    var Y = X * 2;
                    this.points[Y] = new e.PositionColoredTextured(), this.points[Y].position = this.makePosition(I, x, Math.cos(X * F) * (this.get_width() / 2), Math.sin(X * F) * (this.get_height() / 2), this.get_rotationAngle()), this.points[Y].tu = X % 2, this.points[Y].tv = 0, this.points[Y].color = this.get_color(), this.points[Y + 1] = new e.PositionColoredTextured(), this.points[Y + 1].position = this.makePosition(I, x, Math.cos(X * F) * (this.get_width() / 2 - 10), Math.sin(X * F) * (this.get_height() / 2 - 10), this.get_rotationAngle()), this.points[Y + 1].tu = X % 2, this.points[Y + 1].tv = 1, this.points[Y + 1].color = this.get_color();
                  }
                },
                _createCircleGeometry$1: function() {
                  var I = this.get_x(), x = this.get_y(), P = this.get_width() / 2, d = Math.PI * 2 * P, U = t.ss.truncate(d / 12) + 1, F = Math.PI * 2 / U;
                  this.points == null && (this.points = new Array(U * 2 + 2));
                  for (var X = 0; X <= U; X++) {
                    var Y = X * 2;
                    this.points[Y] = new e.PositionColoredTextured(), this.points[Y].position = this.makePosition(I, x, Math.cos(X * F) * (this.get_width() / 2), Math.sin(X * F) * (this.get_height() / 2), this.get_rotationAngle()), this.points[Y].tu = X % 2, this.points[Y].tv = 0, this.points[Y].color = this.get_color(), this.points[Y + 1] = new e.PositionColoredTextured(), this.points[Y + 1].position = this.makePosition(I, x, 0, 0, this.get_rotationAngle()), this.points[Y + 1].tu = X % 2, this.points[Y + 1].tv = 1, this.points[Y + 1].color = this.get_color();
                  }
                },
                initializeTexture: function() {
                  switch (this.get_shapeType()) {
                    case 5:
                    case 3:
                    case 6:
                      break;
                    case 0:
                    case 1:
                    case 2:
                    case 4:
                    default:
                      this.texture = null;
                      break;
                  }
                },
                //todo this needs to be Dashed rounded lines..
                _drawLineGeometry$1: function(I) {
                  var x = I.device;
                  x.save();
                  var P = this.get_width() / 2;
                  x.translate(this.get_x(), this.get_y()), x.rotate(this.get_rotationAngle() * L.RC), x.moveTo(-P, 0), x.lineTo(P, 0), x.lineWidth = 9, x.strokeStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.stroke(), x.restore();
                },
                _drawOpenRectGeometry$1: function(I) {
                  var x = I.device;
                  x.save(), x.translate(this.get_x(), this.get_y()), x.rotate(this.get_rotationAngle() * L.RC), x.beginPath(), x.moveTo(-this.get_width() / 2, -this.get_height() / 2), x.lineTo(this.get_width() / 2, -this.get_height() / 2), x.lineTo(this.get_width() / 2, this.get_height() / 2), x.lineTo(-this.get_width() / 2, this.get_height() / 2), x.closePath(), x.lineWidth = 9, x.strokeStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.stroke(), x.restore();
                },
                _drawRectGeometry$1: function(I) {
                  var x = I.device;
                  x.save(), x.translate(this.get_x(), this.get_y()), x.rotate(this.get_rotationAngle() * L.RC), x.beginPath(), x.moveTo(-this.get_width() / 2, -this.get_height() / 2), x.lineTo(this.get_width() / 2, -this.get_height() / 2), x.lineTo(this.get_width() / 2, this.get_height() / 2), x.lineTo(-this.get_width() / 2, this.get_height() / 2), x.closePath(), x.lineWidth = 0, x.fillStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.fill(), x.restore();
                },
                _drawStarGeometry$1: function(I) {
                  var x = I.device;
                  x.save(), x.translate(this.get_x(), this.get_y()), x.rotate(this.get_rotationAngle() * L.RC), x.beginPath();
                  var P = 0, d = 0;
                  this.get_width() / 2;
                  for (var U = Math.PI * 2 / 5, F = !0, X = 0; X < 5; X++) {
                    var Y = X * U - Math.PI / 2;
                    F ? (F = !1, x.moveTo(P + Math.cos(Y) * (this.get_width() / 2), d + Math.sin(Y) * (this.get_height() / 2))) : x.lineTo(P + Math.cos(Y) * (this.get_width() / 2), d + Math.sin(Y) * (this.get_height() / 2));
                    var M = X * U + U / 2 - Math.PI / 2;
                    x.lineTo(P + Math.cos(M) * (this.get_width() / 5.3), d + Math.sin(M) * (this.get_height() / 5.3));
                  }
                  x.closePath(), x.lineWidth = 0, x.fillStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.fill(), x.restore();
                },
                _drawArrowGeometry$1: function(I) {
                  var x = I.device;
                  x.save(), x.translate(this.get_x(), this.get_y()), x.rotate(this.get_rotationAngle() * L.RC), x.beginPath(), x.moveTo(-(this.get_width() / 2), -(this.get_height() / 4)), x.lineTo(this.get_width() / 4, -(this.get_height() / 4)), x.lineTo(this.get_width() / 4, -(this.get_height() / 2)), x.lineTo(this.get_width() / 2, 0), x.lineTo(this.get_width() / 4, this.get_height() / 2), x.lineTo(this.get_width() / 4, this.get_height() / 4), x.lineTo(-(this.get_width() / 2), this.get_height() / 4), x.closePath(), x.lineWidth = 0, x.fillStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.fill(), x.restore();
                },
                //todo move to dashed lines in future
                _drawDonutGeometry$1: function(I) {
                  var x = I.device;
                  x.save(), x.translate(this.get_x(), this.get_y()), x.scale(1, this.get_height() / this.get_width()), x.rotate(this.get_rotationAngle() * L.RC), x.beginPath(), x.arc(0, 0, this.get_width() / 2, 0, Math.PI * 2, !1), x.closePath(), x.lineWidth = 9, x.strokeStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.stroke(), x.restore();
                },
                _drawCircleGeometry$1: function(I) {
                  var x = I.device;
                  x.save(), x.scale(1, this.get_width() / this.get_height()), x.translate(this.get_x(), this.get_y()), x.rotate(this.get_rotationAngle() * L.RC), x.beginPath(), x.arc(0, 0, this.get_width(), 0, Math.PI * 2, !1), x.closePath(), x.lineWidth = 0, x.fillStyle = this.get_color().toString(), x.globalAlpha = this.get_opacity(), x.fill(), x.restore();
                },
                cleanUpGeometry: function() {
                  L.prototype.cleanUpGeometry.call(this), this.cleanUp();
                },
                writeOverlayProperties: function(I) {
                  I._writeStartElement("Shape"), I._writeAttributeString("ShapeType", n.Enums.toXml("ShapeType", this._shapeType$1)), I._writeEndElement();
                },
                initializeFromXml: function(I) {
                  var x = c.Util.selectSingleNode(I, "Shape");
                  this._shapeType$1 = n.Enums.parse("ShapeType", x.attributes.getNamedItem("ShapeType").nodeValue);
                }
              };
              (0, n.registerType)("ShapeOverlay", [R, O, L]);
              function W() {
                this._audio$1 = null, this._audioReady$1 = !1, this._wantPlaying$1 = !1, this._volume$1 = 100, this._mute$1 = !1, this._position$1 = 0, this._trackType$1 = 0, L.call(this), this.isDesignTimeOnly = !0;
              }
              W.create = function(I, x) {
                var P = new W();
                return P.set_owner(I), P._filename$1 = x.name, P.get_owner().get_owner().addCachedFile(x.name, x), P;
              };
              var N = {
                getTypeName: function() {
                  return "TerraViewer.AudioOverlay";
                },
                get_mute: function() {
                  return this._mute$1;
                },
                set_mute: function(I) {
                  return this._mute$1 = I, this.set_volume(this.get_volume()), I;
                },
                get_volume: function() {
                  return this._volume$1;
                },
                set_volume: function(I) {
                  return this._volume$1 = I, this._audio$1 != null && (this._audio$1.volume = this._mute$1 ? 0 : this._volume$1 / 100), I;
                },
                addFilesToCabinet: function(I) {
                  I.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
                },
                play: function() {
                  this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !0, this._audio$1 != null && this._audioReady$1 && (this._audio$1.play(), this.set_volume(this.get_volume()), this._audio$1.currentTime = this._position$1);
                },
                pause: function() {
                  this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !1, this._audio$1 != null && this._audioReady$1 && this._audio$1.pause();
                },
                stop: function() {
                  this.pause();
                },
                seek: function(I) {
                  this._position$1 = I, this._audio$1 == null && this.prepMultimedia(), this._audioReady$1 && (this._audio$1.duration < I ? this._audio$1.pause() : this._audio$1.currentTime = this._position$1);
                },
                prepMultimedia: function() {
                  var I = this;
                  if (this._audio$1 == null) {
                    this._audio$1 = document.createElement("audio"), this._audio$1.addEventListener("canplaythrough", function() {
                      I._audioReady$1 || (I._audioReady$1 = !0, I._wantPlaying$1 && I.play());
                    }, !1);
                    var x = document.createElement("source");
                    this._audio$1.appendChild(x), x.src = this.get_owner().get_owner().getFileStream(this._filename$1), x.type = "audio/mp3", this._audio$1.load();
                  }
                },
                // TODO: understand better when/how this function is called. It ought to
                // be called for every frame by the generic Draw3D implementation since
                // we never set `texture`, I think. But note that the main music and
                // voice tracks aren't "rendered" in this way, so this function doesn't
                // get called for them, it looks.
                initializeTexture: function() {
                  this.prepMultimedia();
                },
                cleanUp: function() {
                  L.prototype.cleanUp.call(this), this._wantPlaying$1 = !1, this._audio$1 != null && (this._audio$1.pause(), this._audio$1.src = null, this._audio$1 = null);
                },
                get_trackType: function() {
                  return this._trackType$1;
                },
                set_trackType: function(I) {
                  return this._trackType$1 = I, I;
                },
                writeOverlayProperties: function(I) {
                  I._writeStartElement("Audio"), I._writeAttributeString("Filename", this._filename$1), I._writeAttributeString("Volume", this._volume$1.toString()), I._writeAttributeString("Mute", this._mute$1.toString()), I._writeAttributeString("TrackType", n.Enums.toXml("AudioType", this._trackType$1)), I._writeEndElement();
                },
                initializeFromXml: function(I) {
                  var x = c.Util.selectSingleNode(I, "Audio");
                  this._filename$1 = x.attributes.getNamedItem("Filename").nodeValue, x.attributes.getNamedItem("Volume") != null && (this._volume$1 = parseInt(x.attributes.getNamedItem("Volume").nodeValue)), x.attributes.getNamedItem("Mute") != null && (this._mute$1 = t.ss.boolean(x.attributes.getNamedItem("Mute").nodeValue)), x.attributes.getNamedItem("TrackType") != null && (this._trackType$1 = n.Enums.parse("AudioType", x.attributes.getNamedItem("TrackType").nodeValue));
                }
              };
              (0, n.registerType)("AudioOverlay", [W, N, L]);
              function $() {
                this._loopType$1 = 1, this._startFrame$1 = 0, this._framesList$1 = [], this._frames$1 = 1, this._framesX$1 = 8, this._framesY$1 = 8, this._textureReady$1 = !1, this._currentFrame$1 = 0, this._cellHeight$1 = 256, this._cellWidth$1 = 256, this._timeStart$1 = t.ss.now(), this._playing$1 = !0, L.call(this);
              }
              var S = {
                getTypeName: function() {
                  return "TerraViewer.FlipbookOverlay";
                },
                get_loopType: function() {
                  return this._loopType$1;
                },
                set_loopType: function(I) {
                  return this._loopType$1 = I, I;
                },
                get_startFrame: function() {
                  return this._startFrame$1;
                },
                set_startFrame: function(I) {
                  return this._startFrame$1 = I, I;
                },
                get_frameSequence: function() {
                  return this._frameSequence$1;
                },
                set_frameSequence: function(I) {
                  if (this._frameSequence$1 !== I && (this._frameSequence$1 = I, this._framesList$1 = [], !t.ss.emptyString(this._frameSequence$1)))
                    try {
                      for (var x = this._frameSequence$1.split(","), P = t.ss.enumerate(x); P.moveNext(); ) {
                        var d = P.current, U = parseInt(t.ss.trim(d));
                        this._framesList$1.push(U);
                      }
                    } catch {
                    }
                  return I;
                },
                get_frames: function() {
                  return this._frames$1;
                },
                set_frames: function(I) {
                  return this._frames$1 = I, I;
                },
                get_framesX: function() {
                  return this._framesX$1;
                },
                set_framesX: function(I) {
                  return this._framesX$1 = I, I;
                },
                get_framesY: function() {
                  return this._framesY$1;
                },
                set_framesY: function(I) {
                  return this._framesY$1 = I, I;
                },
                copy: function(I) {
                  var x = new $();
                  return x.set_owner(I), x._filename$1 = this._filename$1, x.set_x(this.get_x()), x.set_y(this.get_y()), x.set_width(this.get_width()), x.set_height(this.get_height()), x.set_color(this.get_color()), x.set_opacity(this.get_opacity()), x.set_rotationAngle(this.get_rotationAngle()), x.set_name(this.get_name() + " - Copy"), x.set_startFrame(this.get_startFrame()), x.set_frames(this.get_frames()), x.set_loopType(this.get_loopType()), x.set_frameSequence(this.get_frameSequence()), x.set_framesX(this.get_framesX()), x.set_framesY(this.get_framesY()), x;
                },
                cleanUp: function() {
                  this.texture = null;
                },
                initializeTexture: function() {
                  var I = this;
                  try {
                    var x = t.ss.endsWith(this._filename$1.toLowerCase(), ".jpg");
                    this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
                      I._textureReady$1 = !0;
                    });
                  } catch {
                  }
                },
                addFilesToCabinet: function(I) {
                  I.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
                },
                writeOverlayProperties: function(I) {
                  I._writeStartElement("Flipbook"), I._writeAttributeString("Filename", this._filename$1), I._writeAttributeString("Frames", this._frames$1.toString()), I._writeAttributeString("Loop", n.Enums.toXml("LoopTypes", this._loopType$1)), I._writeAttributeString("FramesX", this._framesX$1.toString()), I._writeAttributeString("FramesY", this._framesY$1.toString()), I._writeAttributeString("StartFrame", this._startFrame$1.toString()), t.ss.emptyString(this._frameSequence$1) || I._writeAttributeString("FrameSequence", this._frameSequence$1), I._writeEndElement();
                },
                initializeFromXml: function(I) {
                  var x = c.Util.selectSingleNode(I, "Flipbook");
                  this._filename$1 = x.attributes.getNamedItem("Filename").nodeValue, this._frames$1 = parseInt(x.attributes.getNamedItem("Frames").nodeValue), this._loopType$1 = n.Enums.parse("LoopTypes", x.attributes.getNamedItem("Loop").nodeValue), x.attributes.getNamedItem("FramesX") != null && this.set_framesX(parseInt(x.attributes.getNamedItem("FramesX").nodeValue)), x.attributes.getNamedItem("FramesY") != null && this.set_framesY(parseInt(x.attributes.getNamedItem("FramesY").nodeValue)), x.attributes.getNamedItem("StartFrame") != null && this.set_startFrame(parseInt(x.attributes.getNamedItem("StartFrame").nodeValue)), x.attributes.getNamedItem("FrameSequence") != null && this.set_frameSequence(x.attributes.getNamedItem("FrameSequence").nodeValue);
                },
                play: function() {
                  this._playing$1 = !0, this._timeStart$1 = t.ss.now();
                },
                pause: function() {
                  this._playing$1 = !1;
                },
                stop: function() {
                  this._playing$1 = !1, this._currentFrame$1 = 0;
                },
                initializeGeometry: function() {
                  var I = this._frames$1;
                  if (t.ss.emptyString(this._frameSequence$1) || (I = this._framesList$1.length), this._playing$1) {
                    var x = t.ss.now() - this._timeStart$1;
                    switch (this._loopType$1) {
                      case 0:
                        this._currentFrame$1 = t.ss.truncate(x / 1e3 * 24 % I) + this._startFrame$1;
                        break;
                      case 1:
                        this._currentFrame$1 = Math.abs(t.ss.truncate((x / 1e3 * 24 + I) % (I * 2 - 1)) - (I - 1)) + this._startFrame$1, this._currentFrame$1 < 0 || this._currentFrame$1 > I - 1;
                        break;
                      case 2:
                        this._currentFrame$1 = Math.max(0, I - t.ss.truncate(x / 1e3 * 24 % I)) + this._startFrame$1;
                        break;
                      case 3:
                        var P = Math.min(x / 1e3 * 24, I * 2 + 1) + I;
                        this._currentFrame$1 = Math.abs(P % (I * 2 - 1) - (I - 1)) + this._startFrame$1;
                        break;
                      case 4:
                        this._currentFrame$1 = Math.min(I - 1, t.ss.truncate(x / 1e3 * 24));
                        break;
                      case 5:
                        this._currentFrame$1 = this._startFrame$1;
                        break;
                      case 6:
                        this._currentFrame$1 = I - 1 + this._startFrame$1;
                        break;
                      default:
                        this._currentFrame$1 = this._startFrame$1;
                        break;
                    }
                  }
                  t.ss.emptyString(this._frameSequence$1) || (this._currentFrame$1 < this._framesList$1.length && this._currentFrame$1 > -1 ? this._currentFrame$1 = this._framesList$1[this._currentFrame$1] : this._currentFrame$1 = 0), this.currentRotation = 0;
                }
              };
              (0, n.registerType)("FlipbookOverlay", [$, S, L]);
            }
          ),
          /***/
          "./esm/tours/selection.js": (
            /*!********************************!*\
              !*** ./esm/tours/selection.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Selection: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                SelectionAnchor: () => (
                  /* binding */
                  l
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../graphics/sprite2d.js */
                "./esm/graphics/sprite2d.js"
              ), r = i(
                /*! ../graphics/texture.js */
                "./esm/graphics/texture.js"
              ), o = i(
                /*! ../color.js */
                "./esm/color.js"
              ), c = i(
                /*! ../util.js */
                "./esm/util.js"
              ), l = {
                topLeft: 0,
                top: 1,
                topRight: 2,
                right: 3,
                bottomRight: 4,
                bottom: 5,
                bottomLeft: 6,
                left: 7,
                rotate: 8,
                move: 9,
                center: 10,
                none: 11
              };
              (0, n.registerType)("SelectionAnchor", l), (0, n.registerEnum)("SelectionAnchor", l);
              function g() {
                this._singleSelectHandles = null, this._multiSelectHandles = null, this._focusHandles = null, this.selectionSet = [], this._focus = null, this._ratio = 1, this._sprite = new _.Sprite2d(), this._centerX = 0, this._centerY = 0;
              }
              g._points = new Array(54);
              var a = {
                clearSelection: function() {
                  this.selectionSet.length = 0;
                },
                addSelection: function(b) {
                  b != null && (this.selectionSet.indexOf(b) >= 0 || this.selectionSet.push(b));
                },
                addSelectionRange: function(b) {
                  for (var V = t.ss.enumerate(b); V.moveNext(); ) {
                    var y = V.current;
                    this.selectionSet.push(y);
                  }
                },
                isOverlaySelected: function(b) {
                  return this.selectionSet.indexOf(b) >= 0;
                },
                setSelection: function(b) {
                  this.selectionSet.length = 0, b != null && this.selectionSet.push(b);
                },
                get_multiSelect: function() {
                  return this.selectionSet.length > 1;
                },
                setSelectionRange: function(b) {
                  this.selectionSet.length = 0;
                  for (var V = t.ss.enumerate(b); V.moveNext(); ) {
                    var y = V.current;
                    this.selectionSet.push(y);
                  }
                },
                get_focus: function() {
                  return this._focus;
                },
                set_focus: function(b) {
                  return this._focus = b, b;
                },
                draw3D: function(b, V) {
                  if (this._ratio = 1116 / b.height, this._singleSelectHandles == null && (this._singleSelectHandles = r.Texture.fromUrl("images/Selhand.bmp")), this._multiSelectHandles == null && (this._multiSelectHandles = r.Texture.fromUrl("images/multiSelhand.bmp")), this._focusHandles == null && (this._focusHandles = r.Texture.fromUrl("images/FocusHandles.png")), this.selectionSet.length > 1)
                    for (var y = t.ss.enumerate(this.selectionSet); y.moveNext(); ) {
                      var C = y.current;
                      C === this._focus ? this._drawSelectionHandles(b, C, this._focusHandles) : this._drawSelectionHandles(b, C, this._multiSelectHandles);
                    }
                  else
                    for (var E = t.ss.enumerate(this.selectionSet); E.moveNext(); ) {
                      var C = E.current;
                      this._drawSelectionHandles(b, C, this._singleSelectHandles);
                    }
                },
                _drawSelectionHandles: function(b, V, y) {
                  for (var C = this.makeHandles(V), E = V.get_rotationAngle(), v = 0, m = 0, L = t.ss.enumerate(C); L.moveNext(); ) {
                    var A = L.current;
                    g._points[v + 0] = new e.PositionColoredTextured(), g._points[v + 0].position = V.makePosition(this._centerX, this._centerY, A.get_left() - this._centerX, A.get_top() - this._centerY, E), g._points[v + 0].tu = m * (1 / 9), g._points[v + 0].tv = 0, g._points[v + 0].color = o.Colors.get_white(), g._points[v + 1] = new e.PositionColoredTextured(), g._points[v + 1].position = V.makePosition(this._centerX, this._centerY, A.get_right() - this._centerX, A.get_top() - this._centerY, E), g._points[v + 1].tu = (m + 1) * (1 / 9), g._points[v + 1].tv = 0, g._points[v + 1].color = o.Colors.get_white(), g._points[v + 2] = new e.PositionColoredTextured(), g._points[v + 2].position = V.makePosition(this._centerX, this._centerY, A.get_left() - this._centerX, A.get_bottom() - this._centerY, E), g._points[v + 2].tu = m * (1 / 9), g._points[v + 2].tv = 1, g._points[v + 2].color = o.Colors.get_white(), g._points[v + 3] = new e.PositionColoredTextured(), g._points[v + 3].position = V.makePosition(this._centerX, this._centerY, A.get_right() - this._centerX, A.get_top() - this._centerY, E), g._points[v + 3].tu = (m + 1) * (1 / 9), g._points[v + 3].tv = 0, g._points[v + 3].color = o.Colors.get_white(), g._points[v + 4] = new e.PositionColoredTextured(), g._points[v + 4].position = V.makePosition(this._centerX, this._centerY, A.get_right() - this._centerX, A.get_bottom() - this._centerY, E), g._points[v + 4].tu = (m + 1) * (1 / 9), g._points[v + 4].tv = 1, g._points[v + 4].color = o.Colors.get_white(), g._points[v + 5] = new e.PositionColoredTextured(), g._points[v + 5].position = V.makePosition(this._centerX, this._centerY, A.get_left() - this._centerX, A.get_bottom() - this._centerY, E), g._points[v + 5].tu = m * (1 / 9), g._points[v + 5].tv = 1, g._points[v + 5].color = o.Colors.get_white(), v += 6, m++;
                  }
                  this.get_multiSelect() ? this._sprite.draw(b, g._points, g._points.length - 6, y, !1, 1) : this._sprite.draw(b, g._points, g._points.length, y, !1, 1);
                },
                pointToSelectionSpace: function(b) {
                  var V = new Array(1);
                  V[0] = e.Vector2d.create(b.x, b.y);
                  var y = e.Matrix2d.rotateAt(-this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, e.Vector2d.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
                  return y._transformPoints(V), V[0];
                },
                pointToScreenSpace: function(b) {
                  var V = new Array(1);
                  V[0] = e.Vector2d.create(b.x, b.y);
                  var y = e.Matrix2d.rotateAt(this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, e.Vector2d.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
                  return y._transformPoints(V), V[0];
                },
                hitTest: function(b) {
                  if (this.selectionSet.length === 1)
                    for (var V = t.ss.enumerate(this.selectionSet); V.moveNext(); )
                      for (var y = V.current, C = this.makeHandles(y), E = 0, v = this.pointToSelectionSpace(b), m = t.ss.enumerate(C); m.moveNext(); ) {
                        var L = m.current;
                        if (L.contains(v))
                          return E;
                        E++;
                      }
                  return 11;
                },
                makeHandles: function(b) {
                  var V = t.ss.truncate(b.get_x() - b.get_width() / 2) + 0.5, y = t.ss.truncate(b.get_y()) - b.get_height() / 2 + 0.5;
                  this._centerX = b.get_x(), this._centerY = b.get_y();
                  var C = b.get_width(), E = b.get_height(), v = 12 * this._ratio, m = new Array(9);
                  return m[0] = c.Rectangle.create(V - v, y - v, v, v), m[1] = c.Rectangle.create(V + C / 2 - v / 2, y - v, v, v), m[2] = c.Rectangle.create(V + C, y - v, v, v), m[3] = c.Rectangle.create(V + C, y + E / 2 - v / 2, v, v), m[4] = c.Rectangle.create(V + C, y + E, v, v), m[5] = c.Rectangle.create(V + C / 2 - v / 2, y + E, v, v), m[6] = c.Rectangle.create(V - v, y + E, v, v), m[7] = c.Rectangle.create(V - v, y + E / 2 - v / 2, v, v), m[8] = c.Rectangle.create(V + C / 2 - v / 2, y - 30 * this._ratio, v, v), m;
                }
              };
              (0, n.registerType)("Selection", [g, a, null]);
            }
          ),
          /***/
          "./esm/tours/text_object.js": (
            /*!**********************************!*\
              !*** ./esm/tours/text_object.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                TextBorderStyle: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                TextObject: () => (
                  /* binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ../color.js */
                "./esm/color.js"
              ), r = {
                none: 0,
                tight: 1,
                small: 2,
                medium: 3,
                large: 4
              };
              (0, t.registerType)("TextBorderStyle", r), (0, t.registerEnum)("TextBorderStyle", r);
              function o() {
                this.bold = !1, this.italic = !1, this.underline = !1, this.fontSize = 0, this.borderStyle = 0;
              }
              o.create = function(l, g, a, b, V, y, C, E, v) {
                var m = new o();
                return m.text = l, m.bold = g, m.italic = a, m.underline = b, m.fontSize = V, m.fontName = y, m.foregroundColor = C, m.backgroundColor = E, m.borderStyle = v, m;
              }, o._fromXml = function(l) {
                var g = new o();
                return g.text = e.Util.getInnerText(l), g.borderStyle = 0, g.bold = n.ss.boolean(l.attributes.getNamedItem("Bold").nodeValue), g.italic = n.ss.boolean(l.attributes.getNamedItem("Italic").nodeValue), g.underline = n.ss.boolean(l.attributes.getNamedItem("Underline").nodeValue), g.fontSize = parseFloat(l.attributes.getNamedItem("FontSize").nodeValue), g.fontName = l.attributes.getNamedItem("FontName").nodeValue, g.foregroundColor = _.Color.load(l.attributes.getNamedItem("ForgroundColor").nodeValue), g.backgroundColor = _.Color.load(l.attributes.getNamedItem("BackgroundColor").nodeValue), l.attributes.getNamedItem("BorderStyle") != null && (g.borderStyle = t.Enums.parse("TextBorderStyle", l.attributes.getNamedItem("BorderStyle").nodeValue)), g;
              };
              var c = {
                toString: function() {
                  return this.text;
                },
                _saveToXml: function(l) {
                  l._writeStartElement("TextObject"), l._writeAttributeString("Bold", this.bold.toString()), l._writeAttributeString("Italic", this.italic.toString()), l._writeAttributeString("Underline", this.underline.toString()), l._writeAttributeString("FontSize", this.fontSize.toString()), l._writeAttributeString("FontName", this.fontName), l._writeAttributeString("ForgroundColor", this.foregroundColor.save()), l._writeAttributeString("BackgroundColor", this.backgroundColor.save()), l._writeAttributeString("BorderStyle", t.Enums.toXml("TextBorderStyle", this.borderStyle)), l._writeString(this.text), l._writeEndElement();
                }
              };
              (0, t.registerType)("TextObject", [o, c, null]);
            }
          ),
          /***/
          "./esm/tours/tour_document.js": (
            /*!************************************!*\
              !*** ./esm/tours/tour_document.js ***!
              \************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                TourDocument: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                UserLevel: () => (
                  /* binding */
                  L
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), o = i(
                /*! ../graphics/texture.js */
                "./esm/graphics/texture.js"
              ), c = i(
                /*! ../util.js */
                "./esm/util.js"
              ), l = i(
                /*! ../utilities/xml_text_writer.js */
                "./esm/utilities/xml_text_writer.js"
              ), g = i(
                /*! ../imageset.js */
                "./esm/imageset.js"
              ), a = i(
                /*! ../view_mover.js */
                "./esm/view_mover.js"
              ), b = i(
                /*! ../layers/reference_frame.js */
                "./esm/layers/reference_frame.js"
              ), V = i(
                /*! ./file_cabinet.js */
                "./esm/tours/file_cabinet.js"
              ), y = i(
                /*! ./tour_stop.js */
                "./esm/tours/tour_stop.js"
              ), C = i(
                /*! ./tour_player.js */
                "./esm/tours/tour_player.js"
              ), E = i(
                /*! ../layers/layer.js */
                "./esm/layers/layer.js"
              ), v = i(
                /*! ../layers/imageset_layer.js */
                "./esm/layers/imageset_layer.js"
              ), m = i(
                /*! ../layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              ), L = {
                beginner: 0,
                intermediate: 1,
                advanced: 2,
                educator: 3,
                professional: 4
              };
              (0, n.registerType)("UserLevel", L), (0, n.registerEnum)("UserLevel", L);
              function A() {
                this._tourDirty = 0, this._workingDirectory = "", this.url = "", this._tagId = "", this._representativeThumbnailTourstop = 0, this._id = "", this._title = "", this._runTime = 0, this._lastDirtyCheck = 0, this._description = "", this._attributesAndCredits = "", this._authorEmailOther = "", this._authorEmail = "", this._authorUrl = "", this._authorPhone = "", this._authorContactText = "", this._orgName = "None", this._orgUrl = "", this._author = "", this._authorImageUrl = "", this._authorImage = null, this._organizationUrl = "", this._filename = "", this._level = 0, this._type = 268435456, this._taxonomy = "", this._keywords = "", this._objects = "", this._editMode = !1, this.explicitTourLinks = [], this.implicitTourLinks = [], this._tourStops = [], this._currentTourstopIndex = -1, this._textureList = {}, this._textureList2d = {}, this._fileCache = {}, this.dontCleanUpTempFiles = !1, this._id = c.Guid.newGuid().toString();
              }
              A.get_baseWorkingDirectory = function() {
                return "";
              }, A.fromUrl = function(T, w) {
                var f = new A();
                return f.url = T, f._callMe = w, f._cabinet = V.FileCabinet.fromUrl(T, t.ss.bind("_loadXmlDocument", f)), f;
              }, A.fromUrlRaw = function(T, w) {
                var f = new A();
                return f.url = T, f._callMe = w, f._cabinet = V.FileCabinet.fromUrl(T, w), f;
              }, (0, e.set_tourDocumentFromUrlRaw)(A.fromUrlRaw);
              var K = {
                get_tourDirty: function() {
                  return this._tourDirty > 0;
                },
                set_tourDirty: function(T) {
                  return T ? this._tourDirty++ : this._tourDirty = 0, T;
                },
                get_workingDirectory: function() {
                  return t.ss.emptyString(this._workingDirectory) && (this._workingDirectory = A.get_baseWorkingDirectory() + this._id + "\\"), this._workingDirectory;
                },
                set_workingDirectory: function(T) {
                  return this._workingDirectory = T, T;
                },
                _loadXmlDocument: function() {
                  var T = this;
                  try {
                    var w = this._cabinet.get_masterFile(), f = new FileReader();
                    f.onloadend = function(R) {
                      var O = t.ss.safeCast(f.result, String), W = new DOMParser();
                      T.fromXml(W.parseFromString(O, "text/xml")), T._callMe();
                    }, f.readAsText(this._cabinet.getFileBlob(w));
                  } catch (R) {
                    e.globalScriptInterface._fireTourError(R);
                  }
                },
                fromXml: function(T) {
                  var w = r.Util.selectSingleNode(T, "Tour");
                  this._id = w.attributes.getNamedItem("ID").nodeValue, this.set_title(w.attributes.getNamedItem("Title").nodeValue), this.set_author(w.attributes.getNamedItem("Author").nodeValue), w.attributes.getNamedItem("Descirption") != null && this.set_description(w.attributes.getNamedItem("Descirption").nodeValue), w.attributes.getNamedItem("AuthorEmail") != null && (this._authorEmail = w.attributes.getNamedItem("AuthorEmail").nodeValue), w.attributes.getNamedItem("Keywords") != null && this.set_keywords(w.attributes.getNamedItem("Keywords").nodeValue), w.attributes.getNamedItem("OrganizationName") != null && this.set_orgName(w.attributes.getNamedItem("OrganizationName").nodeValue), this._organizationUrl = w.attributes.getNamedItem("OrganizationUrl").nodeValue, this._level = n.Enums.parse("UserLevel", w.attributes.getNamedItem("UserLevel").nodeValue), this._type = n.Enums.parse("Classification", w.attributes.getNamedItem("Classification").nodeValue), this._taxonomy = w.attributes.getNamedItem("Taxonomy").nodeValue;
                  for (var f = r.Util.selectSingleNode(w, "TourStops"), R = t.ss.enumerate(f.childNodes); R.moveNext(); ) {
                    var O = R.current;
                    O.nodeName === "TourStop" && this.addTourStop(y.TourStop._fromXml(this, O));
                  }
                  var W = r.Util.selectSingleNode(w, "ReferenceFrames");
                  if (W != null) {
                    for (var N = t.ss.enumerate(W.childNodes); N.moveNext(); ) {
                      var $ = N.current;
                      if ($.nodeName === "ReferenceFrame") {
                        var S = new b.ReferenceFrame();
                        if (S.initializeFromXml($), !t.ss.keyExists((0, e.layerManagerGetAllMaps)(), S.name)) {
                          var I = new m.LayerMap(S.name, 18);
                          I.frame = S, I.loadedFromTour = !0, (0, e.layerManagerGetAllMaps)()[S.name] = I;
                        }
                      }
                    }
                    m.LayerManager.connectAllChildren(), m.LayerManager.loadTree();
                  }
                  var x = r.Util.selectSingleNode(w, "Layers");
                  if (x != null) {
                    for (var P = t.ss.enumerate(x.childNodes); P.moveNext(); ) {
                      var d = P.current;
                      if (d.nodeName === "Layer") {
                        var U = E.Layer.fromXml(d, !0);
                        if (U != null) {
                          if (t.ss.canCast(U, v.ImageSetLayer)) {
                            var F = U, X = F.get_imageSet();
                            if (X.get_projection() === g.ProjectionType.healpix && X.get_extension() === ".tsv") {
                              e.globalWWTControl.addCatalogHips(X);
                              continue;
                            }
                          }
                          var Y = t.ss.format("{0}.txt", U.id.toString());
                          t.ss.keyExists(m.LayerManager.get_layerList(), U.id) && m.LayerManager.deleteLayerByID(U.id, !0, !1);
                          try {
                            U.loadedFromTour = !0, U.loadData(this, Y), m.LayerManager.add(U, !1);
                          } catch {
                          }
                        }
                      }
                    }
                    m.LayerManager.loadTree();
                  }
                  this._tourDirty = 0;
                },
                saveToDataUrl: function() {
                  return URL.createObjectURL(this.saveToBlob());
                },
                saveToBlob: function() {
                  var T = !1;
                  this.cleanUp();
                  var w = this.getTourXML(), f = new V.FileCabinet();
                  f.set_packageID(this.get_id()), f.addFile("Tour.wwtxml", new Blob([w])), this._authorImage != null;
                  for (var R = t.ss.enumerate(this.get_tourStops()); R.moveNext(); ) {
                    var O = R.current;
                    O._addFilesToCabinet(f, T);
                  }
                  for (var W = this._createLayerMasterList(), N = t.ss.enumerate(W); N.moveNext(); ) {
                    var $ = N.current;
                    t.ss.keyExists(m.LayerManager.get_layerList(), $) && m.LayerManager.get_layerList()[$].addFilesToCabinet(f);
                  }
                  return this.set_tourDirty(!1), f.packageFiles();
                },
                getTourXML: function() {
                  var T = new l.XmlTextWriter();
                  T.formatting = 1, T._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), T._writeStartElement("Tour"), T._writeAttributeString("ID", this._id), T._writeAttributeString("Title", this._title), T._writeAttributeString("Descirption", this.get_description()), T._writeAttributeString("Description", this.get_description()), T._writeAttributeString("RunTime", (this.get_runTime() / 1e3).toString()), T._writeAttributeString("Author", this._author), T._writeAttributeString("AuthorEmail", this._authorEmail), T._writeAttributeString("OrganizationUrl", this._organizationUrl), T._writeAttributeString("OrganizationName", this.get_orgName()), T._writeAttributeString("Keywords", this.get_keywords()), T._writeAttributeString("UserLevel", n.Enums.toXml("UserLevel", this._level)), T._writeAttributeString("Classification", n.Enums.toXml("Classification", this._type)), T._writeAttributeString("Taxonomy", this._taxonomy);
                  var w = this._isTimelineTour();
                  T._writeAttributeString("TimeLineTour", w.toString()), T._writeStartElement("TourStops");
                  for (var f = t.ss.enumerate(this.get_tourStops()); f.moveNext(); ) {
                    var R = f.current;
                    R._saveToXml(T, !0);
                  }
                  T._writeEndElement();
                  var O = this._createLayerMasterList(), W = this._getReferenceFrameList();
                  T._writeStartElement("ReferenceFrames");
                  for (var N = t.ss.enumerate(W); N.moveNext(); ) {
                    var $ = N.current;
                    $.saveToXml(T);
                  }
                  T._writeEndElement(), T._writeStartElement("Layers");
                  for (var S = t.ss.enumerate(O); S.moveNext(); ) {
                    var I = S.current;
                    if (t.ss.keyExists(m.LayerManager.get_layerList(), I)) {
                      var x = m.LayerManager.get_layerList()[I], P = x.get_name(), d = _.globalRenderContext.getCatalogHipsByName(P);
                      if (d != null) {
                        var U = v.ImageSetLayer.create(d);
                        U.id = I, U.set_name(P), U.set_referenceFrame("Sky"), U.saveToXml(T);
                      } else
                        m.LayerManager.get_layerList()[I].saveToXml(T);
                    }
                  }
                  return T._writeEndElement(), T._writeFullEndElement(), T._close(), T.body;
                },
                _getReferenceFrameList: function() {
                  for (var T = [], w = t.ss.enumerate(t.ss.keys((0, e.layerManagerGetAllMaps)())); w.moveNext(); ) {
                    var f = w.current, R = (0, e.layerManagerGetAllMaps)()[f];
                    (R.frame.reference === 18 || R.frame.reference === 19) && !(T.indexOf(R.frame) >= 0) && !R.frame._systemGenerated && T.push(R.frame);
                  }
                  return T;
                },
                _createLayerMasterList: function() {
                  for (var T = [], w = t.ss.enumerate(this.get_tourStops()); w.moveNext(); )
                    for (var f = w.current, R = t.ss.enumerate(t.ss.keys(f.layers)); R.moveNext(); ) {
                      var O = R.current;
                      T.indexOf(O) >= 0 || t.ss.keyExists(m.LayerManager.get_layerList(), O) && T.push(O);
                    }
                  return T;
                },
                _isTimelineTour: function() {
                  return !1;
                },
                get_tagId: function() {
                  return this._tagId;
                },
                set_tagId: function(T) {
                  return this._tagId = T, T;
                },
                get_authorThumbnailFilename: function() {
                  return "Author.Png";
                },
                get_tourThumbnailFilename: function() {
                  return this._representativeThumbnailTourstop < this._tourStops.length ? this._tourStops[this._representativeThumbnailTourstop].get_tourStopThumbnailFilename() : null;
                },
                get_id: function() {
                  return this._id;
                },
                set_id: function(T) {
                  return this._id = T, T;
                },
                get_title: function() {
                  return this._title;
                },
                set_title: function(T) {
                  return this._title = T, this.set_tourDirty(!0), T;
                },
                get_runTime: function() {
                  return (!this._runTime || this._lastDirtyCheck !== this._tourDirty) && (this._runTime = this._calculateRunTime(), this._lastDirtyCheck = this._tourDirty), this._runTime;
                },
                get_description: function() {
                  return this._description;
                },
                set_description: function(T) {
                  return this._description = T, this.set_tourDirty(!0), T;
                },
                get_attributesAndCredits: function() {
                  return this._attributesAndCredits;
                },
                set_attributesAndCredits: function(T) {
                  return this._attributesAndCredits = T, this.set_tourDirty(!0), T;
                },
                get_authorEmailOther: function() {
                  return this._authorEmailOther;
                },
                set_authorEmailOther: function(T) {
                  return this._authorEmailOther = T, this.set_tourDirty(!0), T;
                },
                get_authorEmail: function() {
                  return this._authorEmail;
                },
                set_authorEmail: function(T) {
                  return this._authorEmail = T, this.set_tourDirty(!0), T;
                },
                get_authorUrl: function() {
                  return this._authorUrl;
                },
                set_authorUrl: function(T) {
                  return this._authorUrl = T, this.set_tourDirty(!0), T;
                },
                get_authorPhone: function() {
                  return this._authorPhone;
                },
                set_authorPhone: function(T) {
                  return this._authorPhone = T, this.set_tourDirty(!0), T;
                },
                get_authorContactText: function() {
                  return this._authorContactText;
                },
                set_authorContactText: function(T) {
                  return this._authorContactText = T, this.set_tourDirty(!0), T;
                },
                get_orgName: function() {
                  return this._orgName;
                },
                set_orgName: function(T) {
                  return this._orgName = T, this.set_tourDirty(!0), T;
                },
                get_orgUrl: function() {
                  return this._orgUrl;
                },
                set_orgUrl: function(T) {
                  return this._orgUrl = T, this.set_tourDirty(!0), T;
                },
                get_author: function() {
                  return this._author;
                },
                set_author: function(T) {
                  return this._author = T, this.set_tourDirty(!0), T;
                },
                get_authorImageUrl: function() {
                  return this._authorImageUrl;
                },
                set_authorImageUrl: function(T) {
                  return this._authorImageUrl = T, this.set_tourDirty(!0), T;
                },
                get_authorImage: function() {
                  return this._authorImage;
                },
                set_authorImage: function(T) {
                  return this._authorImage = T, this.set_tourDirty(!0), T;
                },
                get_organizationUrl: function() {
                  return this._organizationUrl;
                },
                set_organizationUrl: function(T) {
                  return this._organizationUrl = T, this.set_tourDirty(!0), T;
                },
                get_fileName: function() {
                  return this._filename;
                },
                set_fileName: function(T) {
                  return this._filename = T, T;
                },
                get_level: function() {
                  return this._level;
                },
                set_level: function(T) {
                  return this._level = T, this.set_tourDirty(!0), T;
                },
                get_type: function() {
                  return this._type;
                },
                set_type: function(T) {
                  return this._type = T, this.set_tourDirty(!0), T;
                },
                get_taxonomy: function() {
                  return this._taxonomy;
                },
                set_taxonomy: function(T) {
                  return this._taxonomy = T, this.set_tourDirty(!0), T;
                },
                get_keywords: function() {
                  return this._keywords;
                },
                set_keywords: function(T) {
                  return this._keywords = T, this.set_tourDirty(!0), T;
                },
                get_objects: function() {
                  return this._objects;
                },
                set_objects: function(T) {
                  return this._objects = T, this.set_tourDirty(!0), T;
                },
                get_editMode: function() {
                  return this._editMode;
                },
                set_editMode: function(T) {
                  return this._editMode = T, T;
                },
                get_tourStops: function() {
                  return this._tourStops;
                },
                set_tourStops: function(T) {
                  return this._tourStops = T, T;
                },
                get_currentTourstopIndex: function() {
                  return this._currentTourstopIndex;
                },
                set_currentTourstopIndex: function(T) {
                  return this._currentTourstopIndex = T, T;
                },
                addTourStop: function(T) {
                  T.set_owner(this), this.get_tourStops().push(T), this._currentTourstopIndex = this._tourStops.length - 1, this.set_tourDirty(!0);
                },
                insertTourStop: function(T) {
                  T.set_owner(this), this._currentTourstopIndex > -1 ? this.get_tourStops().splice(this._currentTourstopIndex, 0, T) : (this.get_tourStops().push(T), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
                },
                insertAfterTourStop: function(T) {
                  T.set_owner(this), this._currentTourstopIndex > -1 || this._currentTourstopIndex < this.get_tourStops().length ? this.get_tourStops().splice(this._currentTourstopIndex + 1, 0, T) : (this.get_tourStops().push(T), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
                },
                removeTourStop: function(T) {
                  t.ss.remove(this._tourStops, T), this._currentTourstopIndex > this._tourStops.length - 1 && this._currentTourstopIndex--, this.set_tourDirty(!0);
                },
                _calculateRunTime: function() {
                  for (var T = 0, w = 0; w < this._tourStops.length; w++)
                    if (T += this._tourStops[w].get_duration(), w > 0)
                      switch (this._tourStops[w].get__transition()) {
                        case 0:
                          if (this._tourStops[w].get_target().get_backgroundImageset() == null || this._tourStops[w - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[w].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[w - 1].get_target().get_backgroundImageset().get_dataSetType() != g.ImageSetType.solarSystem || this._tourStops[w - 1].get_target().get_target() === this._tourStops[w].get_target().get_target())) {
                            var f = this._tourStops[w - 1].get_endTarget() == null ? this._tourStops[w - 1].get_target().get_camParams() : this._tourStops[w - 1].get_endTarget().get_camParams(), R = a.ViewMoverSlew.create(f, this._tourStops[w].get_target().get_camParams());
                            T += R.get_moveTime() * 1e3;
                          }
                          break;
                      }
                  return t.ss.truncate(T);
                },
                elapsedTimeTillTourstop: function(T) {
                  if (!T && T >= this._tourStops.length)
                    return 0;
                  for (var w = 0, f = 0; f < T; f++)
                    if (w += this._tourStops[f].get_duration(), f > 0)
                      switch (this._tourStops[f].get__transition()) {
                        case 0:
                          var R = this._tourStops[f - 1].get_endTarget() == null ? this._tourStops[f - 1].get_target().get_camParams() : this._tourStops[f - 1].get_endTarget().get_camParams();
                          if (this._tourStops[f - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[f].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[f - 1].get_target().get_backgroundImageset().get_dataSetType() != g.ImageSetType.solarSystem || this._tourStops[f - 1].get_target().get_target() === this._tourStops[f].get_target().get_target())) {
                            var O = a.ViewMoverSlew.create(R, this._tourStops[f].get_target().get_camParams());
                            w += O.get_moveTime() * 1e3;
                          }
                          break;
                      }
                  return w / 1e3;
                },
                elapsedTimeSinceLastMaster: function(T) {
                  var w = null;
                  if (!T && T >= this._tourStops.length)
                    return null;
                  for (var f = 0, R = 0; R < T; R++)
                    if (this._tourStops[R].get_masterSlide() && (f = 0, w = this._tourStops[R]), f += this._tourStops[R].get_duration(), R > 0)
                      switch (this._tourStops[R].get__transition()) {
                        case 0:
                          var O = this._tourStops[R - 1].get_endTarget() == null ? this._tourStops[R - 1].get_target().get_camParams() : this._tourStops[R - 1].get_endTarget().get_camParams();
                          if (this._tourStops[R - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[R].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[R - 1].get_target().get_backgroundImageset().get_dataSetType() != g.ImageSetType.solarSystem || this._tourStops[R - 1].get_target().get_target() === this._tourStops[R].get_target().get_target())) {
                            var W = a.ViewMoverSlew.create(O, this._tourStops[R].get_target().get_camParams());
                            f += W.get_moveTime() * 1e3;
                          }
                          break;
                      }
                  return new C.MasterTime(w, f / 1e3);
                },
                getMasterSlideForIndex: function(T) {
                  for (var w = -1, f = 0; f < T; f++)
                    this._tourStops[f].get_masterSlide() && (w = f);
                  return w === -1 ? null : this._tourStops[w];
                },
                getTourStopIndexByID: function(T) {
                  if (!T || T === "Next")
                    return this._currentTourstopIndex++;
                  for (var w = 0, f = t.ss.enumerate(this._tourStops); f.moveNext(); ) {
                    var R = f.current;
                    if (R.get_id() === T)
                      return w;
                    w++;
                  }
                  return -1;
                },
                cleanUp: function() {
                },
                getCachedTexture: function(T, w) {
                  if (this._textureList == null && (this._textureList = {}), t.ss.keyExists(this._textureList, T))
                    return w(), this._textureList[T];
                  var f = this.getFileStream(T);
                  if (t.ss.whitespace(f))
                    return null;
                  var R = document.createElement("img");
                  return R.src = this.getFileStream(T), R.addEventListener("load", function() {
                    w();
                  }, !1), this._textureList[T] = R, R;
                },
                getCachedTexture2d: function(T) {
                  if (this._textureList2d == null && (this._textureList2d = {}), t.ss.keyExists(this._textureList2d, T))
                    return this._textureList2d[T];
                  var w = new o.Texture();
                  return w.load(this.getFileStream(T)), this._textureList2d[T] = w, w;
                },
                addCachedFile: function(T, w) {
                  this._fileCache[T] = w, t.ss.keyExists(this._textureList2d, T) && delete this._textureList2d[T], t.ss.keyExists(this._textureList, T) && delete this._textureList[T];
                },
                getFileStream: function(T) {
                  var w = this.getFileBlob(T);
                  return w == null ? null : URL.createObjectURL(w);
                },
                getFileBlob: function(T) {
                  return t.ss.keyExists(this._fileCache, T) ? this._fileCache[T] : this._cabinet != null ? this._cabinet.getFileBlob(this.get_workingDirectory() + T) : null;
                },
                get_currentTourStop: function() {
                  return this._currentTourstopIndex > -1 ? this.get_tourStops()[this._currentTourstopIndex] : null;
                },
                set_currentTourStop: function(T) {
                  for (var w = 0, f = t.ss.enumerate(this.get_tourStops()); f.moveNext(); ) {
                    var R = f.current;
                    if (R === T) {
                      this._currentTourstopIndex > -1, this._currentTourstopIndex = w;
                      break;
                    }
                    w++;
                  }
                  return T;
                },
                clearTempFiles: function() {
                }
              };
              (0, n.registerType)("TourDocument", [A, K, null]);
            }
          ),
          /***/
          "./esm/tours/tour_edit.js": (
            /*!********************************!*\
              !*** ./esm/tours/tour_edit.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                TourEditTab: () => (
                  /* binding */
                  K
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), o = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), c = i(
                /*! ../color.js */
                "./esm/color.js"
              ), l = i(
                /*! ../utilities/xml_text_writer.js */
                "./esm/utilities/xml_text_writer.js"
              ), g = i(
                /*! ../utilities/context_menu_strip.js */
                "./esm/utilities/context_menu_strip.js"
              ), a = i(
                /*! ../util.js */
                "./esm/util.js"
              ), b = i(
                /*! ../place.js */
                "./esm/place.js"
              ), V = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), y = i(
                /*! ../ui_tools.js */
                "./esm/ui_tools.js"
              ), C = i(
                /*! ../layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              ), E = i(
                /*! ./overlay.js */
                "./esm/tours/overlay.js"
              ), v = i(
                /*! ./undo.js */
                "./esm/tours/undo.js"
              ), m = i(
                /*! ./tour_stop.js */
                "./esm/tours/tour_stop.js"
              ), L = i(
                /*! ./tour_player.js */
                "./esm/tours/tour_player.js"
              ), A = i(
                /*! ./tour_editor.js */
                "./esm/tours/tour_editor.js"
              );
              function K() {
                this.musicTrack = new A.SoundEditor(), this.voiceTrack = new A.SoundEditor(), this._tour = null, this.tourStopList = new A.TourStopList(), this.tourEditorUI = new A.TourEditor(), this._contextMenu = new g.ContextMenuStrip(), this.nextSlideCallback = null, this.playing = !1, this._player = null, this._defultColor = c.Colors.get_white();
              }
              var T = {
                setUiStrings: function() {
                },
                get_tour: function() {
                  return this._tour;
                },
                set_tour: function(w) {
                  return this._tour = w, this.tourEditorUI.set_tour(this._tour), this.tourStopList.tour = this._tour, E.Overlay.defaultAnchor = 1, this._tour.get_tourStops().length > 0 && (e.globalWWTControl.gotoTarget(this._tour.get_tourStops()[0].get_target(), !1, !0, !1), this._tour.set_currentTourstopIndex(0), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop(), (0, e.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers)), this.setEditMode(this._tour.get_editMode()), w;
                },
                tour_CurrentTourstopChanged: function() {
                  A.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection), this.tourEditorUI != null && this.tourEditorUI.clearSelection(), this.tourStopList.refresh();
                },
                setFocusedChild: function() {
                },
                selectCurrent: function() {
                  this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.tourStopList.refresh();
                },
                tourEdit_Load: function(w, f) {
                },
                playNow: function(w) {
                  this.playing = !0, (this.get_tour().get_editMode() || w) && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
                },
                _tourPlayer_TourEnded: function(w, f) {
                },
                _endTour_CloseTour: function(w, f) {
                },
                _endTour_LaunchTour: function(w, f) {
                  this.playNow(!0);
                },
                setEditMode: function(w) {
                },
                tourStopList_ItemClicked: function(w, f) {
                  this._tour.get_currentTourStop() !== f && (this._tour.set_currentTourStop(f), f != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection()), this.playing && this._playFromHere_Click(w, new t.ss.EventArgs());
                },
                tourStopList_ItemDoubleClicked: function(w, f) {
                  this.showSlideStartPosition(f);
                },
                showSlideStartPosition: function(w) {
                  this._tour.set_currentTourStop(w), w != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection(), this._tour.get_currentTourStop() != null && (this._tour.get_currentTourStop().syncSettings(), V.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), V.SpaceTimeController.set_syncToClock(!1), e.globalWWTControl.gotoTarget(w.get_target(), !1, !0, !1), this._tour.get_currentTourStop().set_tweenPosition(0), this._tour.get_currentTourStop()._updateLayerOpacity(), (0, e.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers));
                },
                tourStopList_MouseClick: function(w, f) {
                  if (this._tour.get_editMode(), this.tourStopList.multipleSelection) {
                    this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new g.ContextMenuStrip();
                    var R = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1345, "Select All")), O = g.ToolStripMenuItem.create(a.Language.getLocalizedText(427, "Cut")), W = g.ToolStripMenuItem.create(a.Language.getLocalizedText(428, "Copy")), N = g.ToolStripMenuItem.create(a.Language.getLocalizedText(429, "Paste")), $ = g.ToolStripMenuItem.create(a.Language.getLocalizedText(167, "Delete"));
                    O.click = t.ss.bind("_cutMenu_Click", this), W.click = t.ss.bind("_copyMenu_Click", this), N.click = t.ss.bind("_pasteMenu_Click", this), $.click = t.ss.bind("_deleteMenu_Click", this), R.click = t.ss.bind("_selectAllMenu_Click", this);
                    var S = new g.ToolStripSeparator();
                    this._contextMenu.items.push(R), this._contextMenu.items.push(S), this._contextMenu.items.push(O), this._contextMenu.items.push(W), N.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(N), this._contextMenu.items.push($), this._contextMenu._show(a.Cursor.get_position());
                  } else if (this._tour.get_currentTourStop() == null) {
                    this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new g.ContextMenuStrip();
                    var R = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1345, "Select All")), N = g.ToolStripMenuItem.create(a.Language.getLocalizedText(425, "Paste")), S = new g.ToolStripSeparator(), I = new g.ToolStripSeparator(), x = g.ToolStripMenuItem.create(a.Language.getLocalizedText(426, "Add New Slide"));
                    N.click = t.ss.bind("_pasteMenu_Click", this), R.click = t.ss.bind("_selectAllMenu_Click", this), x.click = t.ss.bind("_addNewSlide_Click", this), N.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(R), this._contextMenu.items.push(S), this._contextMenu.items.push(N), this._contextMenu.items.push(I), this._contextMenu.items.push(x), this._contextMenu._show(a.Cursor.get_position());
                  } else {
                    this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new g.ContextMenuStrip();
                    var R = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1345, "Select All")), O = g.ToolStripMenuItem.create(a.Language.getLocalizedText(427, "Cut")), W = g.ToolStripMenuItem.create(a.Language.getLocalizedText(428, "Copy")), N = g.ToolStripMenuItem.create(a.Language.getLocalizedText(429, "Paste")), $ = g.ToolStripMenuItem.create(a.Language.getLocalizedText(167, "Delete")), S = new g.ToolStripSeparator(), P = new g.ToolStripSeparator(), d = new g.ToolStripSeparator(), U = new g.ToolStripSeparator(), F = new g.ToolStripSeparator(), X = new g.ToolStripSeparator(), x = g.ToolStripMenuItem.create(a.Language.getLocalizedText(431, "Insert New Slide")), Y = g.ToolStripMenuItem.create(a.Language.getLocalizedText(627, "Duplicate Slide at End Position")), M = g.ToolStripMenuItem.create(a.Language.getLocalizedText(628, "Merge Tour after slide...")), B = g.ToolStripMenuItem.create(a.Language.getLocalizedText(432, "Preview Tour From Here")), I = new g.ToolStripSeparator(), D = g.ToolStripMenuItem.create(a.Language.getLocalizedText(433, "Capture New Thumbnail")), k = g.ToolStripMenuItem.create(a.Language.getLocalizedText(434, "Set Start Camera Position")), G = g.ToolStripMenuItem.create(a.Language.getLocalizedText(435, "Set End Camera Position")), j = g.ToolStripMenuItem.create(a.Language.getLocalizedText(436, "Show Start Camera Position")), ee = g.ToolStripMenuItem.create(a.Language.getLocalizedText(437, "Show End Camera Position")), Z = g.ToolStripMenuItem.create(a.Language.getLocalizedText(438, "Master Slide"));
                    g.ToolStripMenuItem.create(a.Language.getLocalizedText(1346, "Create Timeline")), g.ToolStripMenuItem.create(a.Language.getLocalizedText(1347, "Show Timeline"));
                    var z = this._tour.get_currentTourStop().get_nextSlide();
                    switch (z) {
                      case "":
                      case null:
                      case "Next":
                        z = " (" + a.Language.getLocalizedText(610, "Next Slide") + ")";
                        break;
                      case "Return":
                        z = " (" + a.Language.getLocalizedText(602, "Return to Caller") + ")";
                        break;
                      default:
                        var te = this.get_tour().getTourStopIndexByID(z);
                        te > -1 && (t.ss.emptyString(this._tour.get_tourStops()[te].get_description()) ? z = t.ss.format(" (Slide {0})", te) : z = " (" + this._tour.get_tourStops()[te].get_description() + ")");
                        break;
                    }
                    var re = g.ToolStripMenuItem.create(a.Language.getLocalizedText(590, "Set Next Slide") + z), le = g.ToolStripMenuItem.create(a.Language.getLocalizedText(439, "Track Date/Time/Location")), ae = g.ToolStripMenuItem.create(a.Language.getLocalizedText(629, "Fade In Slide Elements")), oe = g.ToolStripMenuItem.create(a.Language.getLocalizedText(20, "Properties")), de = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1029, "Animation Tween Type")), ve = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1030, "Linear")), ce = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1031, "Ease In/Out")), he = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1032, "Ease In")), ye = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1033, "Ease Out")), fe = g.ToolStripMenuItem.create(a.Language.getLocalizedText(1034, "Exponential"));
                    switch (ve.tag = 0, ce.tag = 3, he.tag = 1, ye.tag = 2, fe.tag = 4, ve.click = t.ss.bind("_interpolation_Click", this), ce.click = t.ss.bind("_interpolation_Click", this), he.click = t.ss.bind("_interpolation_Click", this), ye.click = t.ss.bind("_interpolation_Click", this), fe.click = t.ss.bind("_interpolation_Click", this), this._tour.get_currentTourStop().get_interpolationType()) {
                      case 0:
                        ve.checked = !0;
                        break;
                      case 1:
                        he.checked = !0;
                        break;
                      case 2:
                        ye.checked = !0;
                        break;
                      case 3:
                        ce.checked = !0;
                        break;
                      case 4:
                        fe.checked = !0;
                        break;
                    }
                    de.dropDownItems.push(ve), de.dropDownItems.push(ce), de.dropDownItems.push(he), de.dropDownItems.push(ye), de.dropDownItems.push(fe), R.click = t.ss.bind("_selectAllMenu_Click", this), Y.click = t.ss.bind("_insertDuplicate_Click", this), O.click = t.ss.bind("_cutMenu_Click", this), W.click = t.ss.bind("_copyMenu_Click", this), N.click = t.ss.bind("_pasteMenu_Click", this), $.click = t.ss.bind("_deleteMenu_Click", this), x.click = t.ss.bind("_insertNewSlide_Click", this), oe.click = t.ss.bind("_properties_Click", this), D.click = t.ss.bind("_captureThumbnail_Click", this), k.click = t.ss.bind("_setSkyPosition_Click", this), G.click = t.ss.bind("_setEndSkyPosition_Click", this), ee.click = t.ss.bind("_showEndSkyPosition_Click", this), j.click = t.ss.bind("_showSkyPosition_Click", this), B.click = t.ss.bind("_playFromHere_Click", this), Z.click = t.ss.bind("_masterSlide_Click", this), re.click = t.ss.bind("_setNextSlide_Click", this), le.click = t.ss.bind("_trackSpaceTime_Click", this), M.click = t.ss.bind("_insertSlideshow_Click", this), ae.click = t.ss.bind("_fadeInOverlays_Click", this), this._tour.get_currentTourStop().get_masterSlide() && (Z.checked = !0), this._tour.get_currentTourStop().get_hasTime() && (le.checked = !0), ae.checked = this._tour.get_currentTourStop().get_fadeInOverlays(), this._contextMenu.items.push(R), this._contextMenu.items.push(X), this._contextMenu.items.push(O), this._contextMenu.items.push(W), N.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(N), this._contextMenu.items.push($), this._contextMenu.items.push(S), this._contextMenu.items.push(x), this._contextMenu.items.push(Y), this._contextMenu.items.push(M), this._contextMenu.items.push(I), this._contextMenu.items.push(B), this._contextMenu.items.push(P), this._contextMenu.items.push(k), this._contextMenu.items.push(G), this._contextMenu.items.push(d), this._contextMenu.items.push(j), this._contextMenu.items.push(ee), this._contextMenu.items.push(U), this._contextMenu.items.push(D), this._contextMenu.items.push(F), this._contextMenu.items.push(Z), this._contextMenu.items.push(re), this._contextMenu.items.push(ae), this._contextMenu.items.push(le), this._contextMenu.items.push(de), this._contextMenu._show(r.Vector2d.create(f.clientX, f.clientY));
                  }
                },
                _selectAllMenu_Click: function(w, f) {
                  this.tourStopList.selectAll();
                },
                _interpolation_Click: function(w, f) {
                  var R = w;
                  this._tour.get_currentTourStop().set_interpolationType(R.tag);
                },
                _nextSlideChosen: function() {
                  this._selectDialog.get_OK() && this._tour.get_currentTourStop().set_nextSlide(this._selectDialog.get_id());
                },
                _setNextSlide_Click: function(w, f) {
                  this._selectDialog = new a.SelectLink(null), this.nextSlideCallback(this._selectDialog, t.ss.bind("_nextSlideChosen", this));
                },
                _insertDuplicate_Click: function(w, f) {
                  v.Undo.push(new v.UndoTourSlidelistChange(a.Language.getLocalizedText(530, "Duplicate Slide at End Position"), this._tour));
                  var R = this._tour.get_currentTourStop().copy();
                  if (R != null) {
                    R.get_endTarget() != null && (R.get_endTarget().set_backgroundImageset(R.get_target().get_backgroundImageset()), R.get_endTarget().set_studyImageset(R.get_target().get_studyImageset()), R.set_target(R.get_endTarget()), R.set_startTime(R.get_endTime()), R.set_endTarget(null));
                    for (var O = t.ss.enumerate(R.get_overlays()); O.moveNext(); ) {
                      var W = O.current;
                      W.set_tweenFactor(1), W.set_animate(!W.get_animate()), W.set_animate(!W.get_animate());
                    }
                    R.set_tweenPosition(0), R.set_fadeInOverlays(!1), this._tour.insertAfterTourStop(R), this.tourStopList.refresh();
                  }
                },
                _fadeInOverlays_Click: function(w, f) {
                  this._tour.get_currentTourStop().set_fadeInOverlays(!this._tour.get_currentTourStop().get_fadeInOverlays());
                },
                _insertSlideshow_Click: function(w, f) {
                },
                _trackSpaceTime_Click: function(w, f) {
                  v.Undo.push(new m.UndoTourStopChange(a.Language.getLocalizedText(532, "Track Time Edit"), this._tour)), this._tour.get_currentTourStop().set_hasTime(!this._tour.get_currentTourStop().get_hasTime());
                },
                _masterSlide_Click: function(w, f) {
                  v.Undo.push(new m.UndoTourStopChange(a.Language.getLocalizedText(533, "Master Slide State Edit"), this._tour)), this._tour.get_currentTourStop().set_masterSlide(!this._tour.get_currentTourStop().get_masterSlide()), this.tourStopList.refresh();
                },
                _playFromHere_Click: function(w, f) {
                  this.playFromCurrentTourstop();
                },
                playFromCurrentTourstop: function() {
                  this.playing = !0, e.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), V.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), V.SpaceTimeController.set_syncToClock(!1), this.setPlayPauseMode();
                },
                playFromTourstop: function(w) {
                  this._tour.set_currentTourStop(w), this.playFromCurrentTourstop();
                },
                _showSkyPosition_Click: function(w, f) {
                  this._tour.get_currentTourStop() != null && (e.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), this._tour.get_currentTourStop().syncSettings(), V.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), V.SpaceTimeController.set_syncToClock(!1), this._tour.get_currentTourStop().set_tweenPosition(0), (0, e.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers), this.tourStopList.refresh());
                },
                _showEndSkyPosition_Click: function(w, f) {
                  this._tour.get_currentTourStop().set_tweenPosition(1), this._tour.get_currentTourStop()._updateLayerOpacity(), this._tour.get_currentTourStop() != null && this._tour.get_currentTourStop().get_endTarget() != null && (e.globalWWTControl.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), _.globalRenderContext.set_solarSystemTrack(this._tour.get_currentTourStop().get_endTarget().get_target()), V.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_endTime()), this._tour.get_currentTourStop().syncSettings(), (0, e.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers), V.SpaceTimeController.set_syncToClock(!1), this.tourStopList.refresh(), this.tourEditorUI.clearSelection());
                },
                _setEndSkyPosition_Click: function(w, f) {
                  if (this._tour.get_currentTourStop() != null) {
                    v.Undo.push(new m.UndoTourStopChange(a.Language.getLocalizedText(435, "Set End Camera Position"), this._tour));
                    var R = b.Place.createCameraParams("End Place", _.globalRenderContext.viewCamera.copy(), 268435456, e.globalWWTControl.constellation, _.globalRenderContext.get_backgroundImageset().get_dataSetType(), _.globalRenderContext.get_solarSystemTrack());
                    this._tour.get_currentTourStop().set_endTarget(R), this._tour.get_currentTourStop().get_endTarget().set_constellation(e.globalWWTControl.constellation), this._tour.get_currentTourStop().set_endTime(V.SpaceTimeController.get_now()), this._tour.get_currentTourStop().set_tweenPosition(1);
                    for (var O = t.ss.enumerate(t.ss.keys(this._tour.get_currentTourStop().layers)); O.moveNext(); ) {
                      var W = O.current, N = this._tour.get_currentTourStop().layers[W];
                      t.ss.keyExists(C.LayerManager.get_layerList(), N.id) && (N.endOpacity = C.LayerManager.get_layerList()[N.id].get_opacity(), N.endParams = C.LayerManager.get_layerList()[N.id].getParams());
                    }
                    this._tour.get_currentTourStop()._updateLayerOpacity(), this.tourStopList.refresh(), A.TimeLine.refreshUi(), this.tourEditorUI.clearSelection();
                  }
                },
                _setSkyPosition_Click: function(w, f) {
                  this._tour.get_currentTourStop() != null && (v.Undo.push(new m.UndoTourStopChange(a.Language.getLocalizedText(434, "Set Start Camera Position"), this._tour)), this._tour.get_currentTourStop().get_target().set_target(_.globalRenderContext.get_solarSystemTrack()), this._tour.get_currentTourStop().get_target().set_type(_.globalRenderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_camParams(_.globalRenderContext.viewCamera.copy()), this._tour.get_currentTourStop().get_target().set_constellation(e.globalWWTControl.constellation), this._tour.get_currentTourStop().get_target().set_studyImageset(_.globalRenderContext.get_foregroundImageset()), this._tour.get_currentTourStop().get_target().set_type(_.globalRenderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_backgroundImageset(_.globalRenderContext.get_backgroundImageset().get_stockImageSet()), this._tour.get_currentTourStop().captureSettings(), this._tour.get_currentTourStop().layers = C.LayerManager._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().set_tweenPosition(0), this.tourStopList.refresh(), A.TimeLine.refreshUi(), this.tourEditorUI.clearSelection());
                },
                _captureThumbnail_Click: function(w, f) {
                  this._tour.get_currentTourStop() != null && this._captureThumbnail(this._tour.get_currentTourStop());
                },
                _captureThumbnail: function(w) {
                  var f = this;
                  e.globalWWTControl.captureThumbnail(function(R) {
                    var O = t.ss.format("{0}.thumb.png", w.get_id());
                    f._tour.addCachedFile(O, R), w.set_thumbnail(f._tour.getCachedTexture(O, function() {
                      f.tourStopList.refresh();
                    }));
                  });
                },
                _properties_Click: function(w, f) {
                  throw new Error("The method or operation is not implemented.");
                },
                tourStopList_AddNewSlide: function(w, f) {
                  this.addSlide(!1), this.tourStopList.ensureAddVisible();
                },
                _addNewSlide_Click: function(w, f) {
                  this.addSlide(!1), this.tourStopList.ensureAddVisible();
                },
                _insertNewSlide_Click: function(w, f) {
                  this.addSlide(!0);
                },
                addSlide: function(w) {
                  v.Undo.push(new v.UndoTourSlidelistChange(a.Language.getLocalizedText(426, "Add New Slide"), this._tour)), a.Cursor.set_current(a.Cursors.get_waitCursor());
                  var f = "Current Screen", R = b.Place.createCameraParams(f, _.globalRenderContext.viewCamera.copy(), 268435456, e.globalWWTControl.constellation, _.globalRenderContext.get_backgroundImageset().get_dataSetType(), _.globalRenderContext.get_solarSystemTrack());
                  R.set_studyImageset(_.globalRenderContext.get_foregroundImageset()), R.set_backgroundImageset(_.globalRenderContext.get_backgroundImageset().get_stockImageSet());
                  var O = m.TourStop.create(R);
                  w ? this._tour.insertTourStop(O) : this._tour.addTourStop(O), this._tour.get_currentTourStop() != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this._tour.get_currentTourStop().layers = C.LayerManager._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._captureThumbnail(O), this.tourStopList.selectedItem = this.tourStopList.findItem(O), this.tourStopList.refresh(), this.tourEditorUI.clearSelection(), a.Cursor.set_current(a.Cursors.get_defaultV()), A.TimeLine.refreshUi();
                },
                _deleteMenu_Click: function(w, f) {
                  v.Undo.push(new v.UndoTourSlidelistChange(a.Language.getLocalizedText(534, "Delete Slide"), this._tour));
                  for (var R = t.ss.enumerate(t.ss.keys(this.tourStopList.selectedItems)); R.moveNext(); ) {
                    var O = R.current, W = this.tourStopList.selectedItems[O];
                    this._tour.removeTourStop(W);
                  }
                  t.ss.clearKeys(this.tourStopList.selectedItems), this.tourStopList.selectedItem = -1, this._tour.set_currentTourStop(null), this.musicTrack.target = null, this.voiceTrack.target = null, this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
                },
                _pasteMenu_Click: function(w, f) {
                  if (this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide") {
                    v.Undo.push(new v.UndoTourSlidelistChange(a.Language.getLocalizedText(535, "Paste Slide"), this._tour));
                    for (var R = new DOMParser(), O = R.parseFromString(this.tourEditorUI.clipboardData, "text/xml"), W = o.Util.selectSingleNode(O, "TourStops"), N = new t.ss.Stack(), $ = t.ss.enumerate(W.childNodes); $.moveNext(); ) {
                      var S = $.current;
                      if (S.nodeName === "TourStop") {
                        var I = m.TourStop._fromXml(this._tour, S);
                        I.set_id(a.Guid.newGuid().toString()), N.push(I);
                      }
                    }
                    t.ss.clearKeys(this.tourStopList.selectedItems);
                    for (var x = this.tourStopList.selectedItem + N.count - 1; N.count > 0; ) {
                      var I = N.pop();
                      this._tour.insertTourStop(I), this.tourStopList.selectedItems[x--] = I;
                    }
                    this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
                  }
                },
                _copyMenu_Click: function(w, f) {
                  var R = new l.XmlTextWriter();
                  R._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), R._writeStartElement("TourStops");
                  for (var O = t.ss.enumerate(t.ss.keys(this.tourStopList.selectedItems)); O.moveNext(); ) {
                    var W = O.current, N = this.tourStopList.selectedItems[W];
                    N._saveToXml(R, !0);
                  }
                  R._writeEndElement(), this.tourEditorUI.clipboardType = "WorldWideTelescope.Slide", this.tourEditorUI.clipboardData = R.body;
                },
                _cutMenu_Click: function(w, f) {
                  v.Undo.push(new v.UndoTourSlidelistChange(a.Language.getLocalizedText(536, "Cut Slide"), this._tour)), this._copyMenu_Click(w, f);
                  for (var R = t.ss.enumerate(t.ss.keys(this.tourStopList.selectedItems)); R.moveNext(); ) {
                    var O = R.current, W = this.tourStopList.selectedItems[O];
                    this._tour.removeTourStop(W);
                  }
                  t.ss.clearKeys(this.tourStopList.selectedItems), this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
                },
                pauseTour: function() {
                  this.playing && (this.playing = !1), this.setPlayPauseMode();
                },
                preview_Click: function(w, f) {
                  this.playing = !this.playing, this.playing && this._tour.get_editMode() && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
                },
                setPlayPauseMode: function() {
                  this._tour.get_editMode() ? this.playing ? (this._player == null && (this._player = new L.TourPlayer()), this._player.set_tour(this._tour), e.globalWWTControl.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (e.globalWWTControl.uiController = this.tourEditorUI, this._player != null && this._player.stop(!1), this._player = null, e.globalWWTControl.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()) : this.playing ? (this._player == null && (this._player = new L.TourPlayer()), this._player.set_tour(this._tour), e.globalWWTControl.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (e.globalWWTControl.uiController = null, _.globalRenderContext.freezeView(), this._player != null && this._player.stop(!1), this._player = null, e.globalWWTControl.uiController = null, e.globalWWTControl.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()), this.tourStopList.refresh();
                },
                playerTimer_Tick: function(w, f) {
                  this.playing && this._player != null && (L.TourPlayer.get_playing() ? this.tourStopList.selectedItem !== this._tour.get_currentTourstopIndex() && (this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex()) : (this.playing = !1, this.setPlayPauseMode()));
                },
                insertShapeCircle_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 0);
                },
                insertShapeRectangle_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 1);
                },
                insertShapeLine_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 5);
                },
                insertDonut_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 3);
                },
                _addArrow_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 4);
                },
                insertVideo_Click: function(w, f) {
                },
                insertAudio_Click: function(w, f) {
                },
                insertHyperlink_Click: function(w, f) {
                },
                colorPicker_Click: function(w, f) {
                },
                tourEditTab_Leave: function(w, f) {
                },
                editTourProperties_Click: function(w, f) {
                },
                saveTour_Click: function(w, f) {
                  this.save(!1);
                },
                save: function(w) {
                  return !0;
                },
                addVideo_Click: function(w, f) {
                },
                addPicture_Click: function(w, f) {
                },
                addShape_Click: function(w, f) {
                },
                _addOpenRectangle_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 6);
                },
                _addStar_Click: function(w, f) {
                  this.tourEditorUI.addShape("", 2);
                },
                addText_Click: function(w, f) {
                },
                preview_EnabledChanged: function(w, f) {
                  this.playing;
                },
                preview_MouseEnter: function(w, f) {
                },
                preview_MouseLeave: function(w, f) {
                },
                preview_MouseUp: function(w, f) {
                },
                preview_MouseDown: function(w, f) {
                },
                tourStopList_ItemHover: function(w, f) {
                },
                refresh: function() {
                },
                undoStep: function() {
                  v.Undo.peekAction() && (v.Undo.stepBack(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), A.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
                },
                redoStep: function() {
                  v.Undo.peekRedoAction() && (v.Undo.stepForward(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), A.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
                },
                tourStopList_ShowEndPosition: function(w, f) {
                  this._showEndSkyPosition_Click(this, new t.ss.EventArgs());
                },
                tourStopList_ShowStartPosition: function(w, f) {
                  this.showSlideStartPosition(this.get_tour().get_currentTourStop()), this.tourEditorUI.clearSelection();
                },
                tourStopList_KeyDown: function(w, f) {
                  if (f.ctrlKey)
                    switch (f.keyCode) {
                      case 67:
                        this._copyMenu_Click(null, new t.ss.EventArgs());
                        break;
                      case 86:
                        this._pasteMenu_Click(null, new t.ss.EventArgs());
                        break;
                      case 88:
                        this._cutMenu_Click(null, new t.ss.EventArgs());
                        break;
                      case 90:
                        v.Undo.peekAction() ? A.TourEdit._undoStep() : y.UiTools._beep();
                        break;
                      case 89:
                        v.Undo.peekRedoAction() ? A.TourEdit._redoStep() : y.UiTools._beep();
                        break;
                    }
                  f.keyCode === 46 && this._deleteMenu_Click(null, new t.ss.EventArgs());
                },
                _ensureSelectedVisible: function() {
                  this.tourStopList.ensureSelectedVisible();
                }
              };
              (0, n.registerType)("TourEditTab", [K, T, null]);
            }
          ),
          /***/
          "./esm/tours/tour_editor.js": (
            /*!**********************************!*\
              !*** ./esm/tours/tour_editor.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                OverlayList: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                SoundEditor: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                TimeLine: () => (
                  /* binding */
                  S
                ),
                /* harmony export */
                TourEdit: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                TourEditor: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                TourStopList: () => (
                  /* binding */
                  N
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), r = i(
                /*! ../color.js */
                "./esm/color.js"
              ), o = i(
                /*! ../utilities/color_picker.js */
                "./esm/utilities/color_picker.js"
              ), c = i(
                /*! ../utilities/context_menu_strip.js */
                "./esm/utilities/context_menu_strip.js"
              ), l = i(
                /*! ../utilities/simple_input.js */
                "./esm/utilities/simple_input.js"
              ), g = i(
                /*! ../utilities/xml_text_writer.js */
                "./esm/utilities/xml_text_writer.js"
              ), a = i(
                /*! ../interfaces.js */
                "./esm/interfaces.js"
              ), b = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), V = i(
                /*! ../settings.js */
                "./esm/settings.js"
              ), y = i(
                /*! ../ui_tools.js */
                "./esm/ui_tools.js"
              ), C = i(
                /*! ../util.js */
                "./esm/util.js"
              ), E = i(
                /*! ./overlay.js */
                "./esm/tours/overlay.js"
              ), v = i(
                /*! ./selection.js */
                "./esm/tours/selection.js"
              ), m = i(
                /*! ./undo.js */
                "./esm/tours/undo.js"
              ), L = i(
                /*! ./tour_stop.js */
                "./esm/tours/tour_stop.js"
              );
              function A() {
                this.selection = new v.Selection(), this._contextMenu = new c.ContextMenuStrip(), this._tour = null, this._mouseDown = !1, this._selectionAction = 11, this._needUndoFrame = !1, this._contextPoint = new e.Vector2d(), this._dragCopying = !1, this._brokeThreshold = !1, this.nextSlideCallback = null, this.clipboardData = "", this.clipboardType = "", this.editTextCallback = null, this._defaultColor = r.Colors.get_white();
              }
              A.capturing = !1, A.currentEditor = null;
              var K = {
                render: function(x) {
                  if (x.setupMatricesOverlays(), !(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    for (var P = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); P.moveNext(); ) {
                      var d = P.current;
                      d.get_animate() && this.get_tour().get_currentTourStop().get_keyFramed() ? d.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition()) : this.get_tour().get_currentTourStop().get_keyFramed() || d.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition() < 0.5 ? 0 : 1), d.draw3D(x, !0);
                    }
                    this.selection.draw3D(x, 1), A.currentEditor != null && A.currentEditor.render(x), V.Settings.tourSettings = null;
                  }
                },
                get_tour: function() {
                  return this._tour;
                },
                set_tour: function(x) {
                  return this._tour = x, x;
                },
                close: function() {
                  this._tour != null && (this._tour = null, this.set_focus(null));
                },
                clearSelection: function() {
                  this.selection.clearSelection(), T._updateOverlayListSelection(this.selection), this.set_focus(null);
                },
                get_focus: function() {
                  return this.selection.get_focus();
                },
                set_focus: function(x) {
                  return this.selection.set_focus(x), x;
                },
                pointToView: function(x) {
                  var P = b.globalRenderContext.height, d = b.globalRenderContext.width, U = b.globalRenderContext.width / b.globalRenderContext.height * 1116, F = x.x / d * U - (U - 1920) / 2, X = x.y / P * 1116;
                  return e.Vector2d.create(F, X);
                },
                mouseDown: function(x, P) {
                  this._brokeThreshold = !1, this._needUndoFrame = !0;
                  var d = this.pointToView(e.Vector2d.create(P.offsetX, P.offsetY));
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return this._needUndoFrame = !1, !1;
                  if (A.currentEditor != null && A.currentEditor.mouseDown(x, P))
                    return !0;
                  if (this.get_focus() != null) {
                    if (this.selection.get_multiSelect())
                      for (var U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                        var F = U.current;
                        if (F.hitTest(d))
                          return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = d, this.set_focus(F), P.ctrlKey && (this._dragCopying = !0), !0;
                      }
                    else if (this.get_focus().hitTest(d))
                      return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = d, P.ctrlKey && (this._dragCopying = !0), !0;
                    var X = this.selection.hitTest(d);
                    if (X !== 11)
                      return this._selectionAction = X, this._mouseDown = !0, X === 8 ? this._pointDown = d : this._pointDown = this.selection.pointToSelectionSpace(d), !0;
                  }
                  for (var Y = this._tour.get_currentTourStop().get_overlays().length - 1; Y >= 0; Y--)
                    if (this._tour.get_currentTourStop().get_overlays()[Y].hitTest(d))
                      return this._selectionAction = 9, this.set_focus(this._tour.get_currentTourStop().get_overlays()[Y]), P.ctrlKey || P.shiftKey ? this.selection.addSelection(this.get_focus()) : this.selection.setSelection(this.get_focus()), T._updateOverlayListSelection(this.selection), this._mouseDown = !0, this._pointDown = d, !0;
                  return this.set_focus(null), this.clearSelection(), this._needUndoFrame = !1, !1;
                },
                mouseUp: function(x, P) {
                  return this._brokeThreshold = !1, A.currentEditor != null && A.currentEditor.mouseUp(x, P) ? !0 : (this._contextPoint = e.Vector2d.create(P.offsetX, P.offsetY), this._mouseDown ? (this._mouseDown = !1, P.button === 2 && this.get_focus() != null && this.showSelectionContextMenu(e.Vector2d.create(P.offsetX, P.offsetY)), !0) : P.button === 2 ? (this.get_focus() == null && this._showNoSelectionContextMenu(e.Vector2d.create(P.offsetX, P.offsetY)), !0) : !1);
                },
                mouseMove: function(x, P) {
                  if (A.currentEditor != null && A.currentEditor.mouseMove(x, P))
                    return !0;
                  var d = this.pointToView(e.Vector2d.create(P.offsetX, P.offsetY));
                  if (this._mouseDown && this.get_focus() != null) {
                    var U = null, F = C.Language.getLocalizedText(502, "Edit");
                    this._needUndoFrame && (U = new L.UndoTourStopChange(C.Language.getLocalizedText(502, "Edit"), this._tour));
                    var X, Y;
                    if (this._selectionAction !== 9 && this._selectionAction !== 8) {
                      var M = this.selection.pointToSelectionSpace(d);
                      X = M.x - this._pointDown.x, Y = M.y - this._pointDown.y, this._pointDown = M;
                    } else {
                      if (X = d.x - this._pointDown.x, Y = d.y - this._pointDown.y, this._selectionAction === 9 && !this._brokeThreshold)
                        if (Math.abs(X) > 3 || Math.abs(Y) > 3)
                          this._brokeThreshold = !0;
                        else
                          return !0;
                      this._pointDown = d;
                    }
                    if (this._dragCopying)
                      if (this.selection.get_multiSelect()) {
                        var B = this.selection.selectionSet;
                        this.clearSelection();
                        for (var D = t.ss.enumerate(B); D.moveNext(); ) {
                          var k = D.current, G = this.addOverlay(k);
                          G.set_x(k.get_x()), G.set_y(k.get_y()), this.set_focus(G), this.selection.addSelection(this.get_focus());
                        }
                        T._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
                      } else {
                        var G = this.addOverlay(this.get_focus());
                        G.set_x(this.get_focus().get_x()), G.set_y(this.get_focus().get_y()), this.set_focus(G), this.selection.setSelection(this.get_focus()), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
                      }
                    var j = this.get_focus().get_width() / this.get_focus().get_height(), ee = e.Vector2d.create(this.get_focus().get_x(), this.get_focus().get_y());
                    if (P.ctrlKey)
                      switch (F = C.Language.getLocalizedText(537, "Resize"), this._selectionAction) {
                        case 0:
                          this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - X * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - X / j * 2));
                          break;
                        case 1:
                          this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - Y * 2));
                          break;
                        case 2:
                          this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + X * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + X / j * 2));
                          break;
                        case 3:
                          this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + X * 2));
                          break;
                        case 4:
                          this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + X * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + X / j * 2));
                          break;
                        case 5:
                          this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + Y * 2));
                          break;
                        case 6:
                          this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - X * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - X / j * 2));
                          break;
                        case 7:
                          this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - X * 2));
                          break;
                        case 8:
                          F = C.Language.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + X / 10);
                          break;
                        case 9:
                          F = C.Language.getLocalizedText(539, "Drag Copy"), ee.x += X, ee.y += Y;
                          break;
                      }
                    else
                      switch (this._selectionAction !== 8 && this._selectionAction !== 9 && (X > this.get_focus().get_width() - 2 && (X = 0), Y > this.get_focus().get_height() - 2 && (Y = 0)), F = C.Language.getLocalizedText(537, "Resize"), this._selectionAction) {
                        case 0:
                          this.get_focus().set_width(this.get_focus().get_width() - X), this.get_focus().set_height(this.get_focus().get_height() - X / j), ee.x += X / 2, ee.y += X / j / 2;
                          break;
                        case 1:
                          this.get_focus().set_height(this.get_focus().get_height() - Y), ee.y += Y / 2;
                          break;
                        case 2:
                          this.get_focus().set_width(this.get_focus().get_width() + X), this.get_focus().set_height(this.get_focus().get_height() + X / j), ee.x += X / 2, ee.y -= X / j / 2;
                          break;
                        case 3:
                          this.get_focus().set_width(this.get_focus().get_width() + X), ee.x += X / 2;
                          break;
                        case 4:
                          this.get_focus().set_width(this.get_focus().get_width() + X), this.get_focus().set_height(this.get_focus().get_height() + X / j), ee.x += X / 2, ee.y += X / j / 2;
                          break;
                        case 5:
                          this.get_focus().set_height(this.get_focus().get_height() + Y), ee.y += Y / 2;
                          break;
                        case 6:
                          this.get_focus().set_width(this.get_focus().get_width() - X), this.get_focus().set_height(this.get_focus().get_height() - X / j), ee.x += X / 2, ee.y -= X / j / 2;
                          break;
                        case 7:
                          this.get_focus().set_width(this.get_focus().get_width() - X), ee.x += X / 2;
                          break;
                        case 8:
                          F = C.Language.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + X);
                          break;
                        case 9:
                          F = C.Language.getLocalizedText(540, "Move"), ee.x += X, ee.y += Y;
                          break;
                      }
                    if (this._selectionAction !== 9 && this._selectionAction !== 8 && (ee = this.selection.pointToScreenSpace(ee)), this.selection.get_multiSelect())
                      for (var Z = t.ss.enumerate(this.selection.selectionSet); Z.moveNext(); ) {
                        var k = Z.current;
                        k.set_x(k.get_x() + X), k.set_y(k.get_y() + Y);
                      }
                    else
                      this.get_focus().set_x(ee.x), this.get_focus().set_y(ee.y);
                    this._needUndoFrame && (this._needUndoFrame = !1, U.set_actionText(F), m.Undo.push(U));
                  } else if (this.get_focus() != null) {
                    if (this.get_focus().hitTest(d))
                      return C.Cursor.set_current(C.Cursors.get_sizeAll()), !1;
                    var z = this.selection.hitTest(d);
                    if (z === 11)
                      return !1;
                    switch (z) {
                      case 0:
                        C.Cursor.set_current(C.Cursors.get_sizeNWSE());
                        break;
                      case 1:
                        C.Cursor.set_current(C.Cursors.get_sizeNS());
                        break;
                      case 2:
                        C.Cursor.set_current(C.Cursors.get_sizeNESW());
                        break;
                      case 3:
                        C.Cursor.set_current(C.Cursors.get_sizeWE());
                        break;
                      case 4:
                        C.Cursor.set_current(C.Cursors.get_sizeNWSE());
                        break;
                      case 5:
                        C.Cursor.set_current(C.Cursors.get_sizeNS());
                        break;
                      case 6:
                        C.Cursor.set_current(C.Cursors.get_sizeNESW());
                        break;
                      case 7:
                        C.Cursor.set_current(C.Cursors.get_sizeWE());
                        break;
                      case 8:
                        C.Cursor.set_current(C.Cursors.get_sizeWE());
                        break;
                    }
                  }
                  return !1;
                },
                _showNoSelectionContextMenu: function(x) {
                  if (this._contextMenu != null && this._contextMenu._dispose(), this._tour.get_currentTourStop() != null) {
                    this._contextMenu = new c.ContextMenuStrip();
                    var P = c.ToolStripMenuItem.create(C.Language.getLocalizedText(425, "Paste"));
                    P.enabled = this.clipboardType === "WorldWideTelescope.Overlay", P.click = t.ss.bind("_pasteMenu_Click", this), this._contextMenu.items.push(P), this._contextMenu._show(x);
                  }
                },
                _addOpenRectangle_Click: function(x, P) {
                  this.addShape("", 6);
                },
                _addStar_Click: function(x, P) {
                  this.addShape("", 2);
                },
                _insertShapeCircle_Click: function(x, P) {
                  this.addShape("", 0);
                },
                _insertShapeRectangle_Click: function(x, P) {
                  this.addShape("", 1);
                },
                _insertShapeLine_Click: function(x, P) {
                  this.addShape("", 5);
                },
                _insertDonut_Click: function(x, P) {
                  this.addShape("", 3);
                },
                _addArrow_Click: function(x, P) {
                  this.addShape("", 4);
                },
                showSelectionContextMenu: function(x) {
                  if (this.get_focus() != null) {
                    var P = this.selection.get_multiSelect();
                    this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new c.ContextMenuStrip();
                    var d = c.ToolStripMenuItem.create(C.Language.getLocalizedText(427, "Cut")), U = c.ToolStripMenuItem.create(C.Language.getLocalizedText(428, "Copy")), F = c.ToolStripMenuItem.create(C.Language.getLocalizedText(425, "Paste")), X = c.ToolStripMenuItem.create(C.Language.getLocalizedText(167, "Delete")), Y = new c.ToolStripSeparator(), M = new c.ToolStripSeparator(), B = new c.ToolStripSeparator(), D = c.ToolStripMenuItem.create(C.Language.getLocalizedText(452, "Bring to Front")), k = c.ToolStripMenuItem.create(C.Language.getLocalizedText(453, "Send to Back")), G = c.ToolStripMenuItem.create(C.Language.getLocalizedText(454, "Bring Forward")), j = c.ToolStripMenuItem.create(C.Language.getLocalizedText(455, "Send Backward")), ee = c.ToolStripMenuItem.create(C.Language.getLocalizedText(20, "Properties")), Z = c.ToolStripMenuItem.create(C.Language.getLocalizedText(502, "Edit")), z = c.ToolStripMenuItem.create(C.Language.getLocalizedText(587, "Hyperlink")), te = this.get_focus().get_linkID();
                    switch (this.get_focus().get_linkID()) {
                      case "":
                      case null:
                        te = " (" + C.Language.getLocalizedText(609, "No Link") + ")";
                        break;
                      case "Next":
                        te = " (" + C.Language.getLocalizedText(610, "Next Slide") + ")";
                        break;
                      case "Return":
                        te = " (" + C.Language.getLocalizedText(602, "Return to Caller") + ")";
                        break;
                      default:
                        var re = this.get_tour().getTourStopIndexByID(this.get_focus().get_linkID());
                        re > -1 && (t.ss.emptyString(this._tour.get_tourStops()[re].get_description()) ? te = t.ss.format(" (" + C.Language.getLocalizedText(1340, "Slide") + " {0})", re) : te = " (" + this._tour.get_tourStops()[re].get_description() + ")");
                        break;
                    }
                    var le = c.ToolStripMenuItem.create(C.Language.getLocalizedText(588, "Animate")), ae = c.ToolStripMenuItem.create(C.Language.getLocalizedText(589, "Link to Slide") + te), oe = c.ToolStripMenuItem.create(C.Language.getLocalizedText(458, "Color/Opacity")), de = c.ToolStripMenuItem.create(C.Language.getLocalizedText(630, "Flipbook Properties")), ve = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1029, "Animation Tween Type")), ce = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1030, "Linear")), he = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1031, "Ease In/Out")), ye = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1032, "Ease In")), fe = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1033, "Ease Out")), Ce = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1034, "Exponential")), Ae = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1035, "Slide Default")), Te = c.ToolStripMenuItem.create(C.Language.getLocalizedText(790, "Align")), Re = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1333, "Top")), De = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1334, "Bottom")), Oe = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1335, "Left")), Ne = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1336, "Right")), Fe = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1337, "Horizontal")), $e = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1338, "Vertical")), ze = c.ToolStripMenuItem.create(C.Language.getLocalizedText(1339, "Centered"));
                    switch (Te.dropDownItems.push(Re), Te.dropDownItems.push(De), Te.dropDownItems.push(Oe), Te.dropDownItems.push(Ne), Te.dropDownItems.push(Fe), Te.dropDownItems.push($e), Te.dropDownItems.push(ze), ce.tag = 0, he.tag = 3, ye.tag = 1, fe.tag = 2, Ce.tag = 4, Ae.tag = 5, ce.click = t.ss.bind("_interpolation_Click", this), he.click = t.ss.bind("_interpolation_Click", this), ye.click = t.ss.bind("_interpolation_Click", this), fe.click = t.ss.bind("_interpolation_Click", this), Ce.click = t.ss.bind("_interpolation_Click", this), Ae.click = t.ss.bind("_interpolation_Click", this), this.get_focus().get_interpolationType()) {
                      case 0:
                        ce.checked = !0;
                        break;
                      case 1:
                        ye.checked = !0;
                        break;
                      case 2:
                        fe.checked = !0;
                        break;
                      case 3:
                        he.checked = !0;
                        break;
                      case 4:
                        Ce.checked = !0;
                        break;
                      case 5:
                        Ae.checked = !0;
                        break;
                    }
                    ve.dropDownItems.push(Ae), ve.dropDownItems.push(ce), ve.dropDownItems.push(he), ve.dropDownItems.push(ye), ve.dropDownItems.push(fe), ve.dropDownItems.push(Ce), d.click = t.ss.bind("_cutMenu_Click", this), U.click = t.ss.bind("_copyMenu_Click", this), X.click = t.ss.bind("_deleteMenu_Click", this), D.click = t.ss.bind("_bringToFront_Click", this), k.click = t.ss.bind("_sendToBack_Click", this), j.click = t.ss.bind("_sendBackward_Click", this), G.click = t.ss.bind("_bringForward_Click", this), ee.click = t.ss.bind("_properties_Click", this), Z.click = t.ss.bind("_editText_Click", this), z.click = t.ss.bind("_url_Click", this), oe.click = t.ss.bind("_pickColor_Click", this), F.click = t.ss.bind("_pasteMenu_Click", this), le.click = t.ss.bind("_animateMenu_Click", this), de.click = t.ss.bind("_flipbookProperties_Click", this), ae.click = t.ss.bind("_linkID_Click", this), Re.click = t.ss.bind("_alignTop_Click", this), De.click = t.ss.bind("_alignBottom_Click", this), Oe.click = t.ss.bind("_alignLeft_Click", this), Ne.click = t.ss.bind("_alignRight_Click", this), Fe.click = t.ss.bind("_alignHorizon_Click", this), $e.click = t.ss.bind("_alignVertical_Click", this), ze.click = t.ss.bind("_alignCenter_Click", this), this._contextMenu.items.push(d), this._contextMenu.items.push(U), this._contextMenu.items.push(F), this._contextMenu.items.push(X), this._contextMenu.items.push(Y), this._contextMenu.items.push(D), this._contextMenu.items.push(k), this._contextMenu.items.push(G), this._contextMenu.items.push(j), this._contextMenu.items.push(Te), this._contextMenu.items.push(M), F.enabled = !1, this._contextMenu.items.push(oe), this._contextMenu.items.push(z), this._contextMenu.items.push(ae), this._contextMenu.items.push(le), this._contextMenu.items.push(B), this._contextMenu.items.push(de), le.checked = this.get_focus().get_animate(), this._contextMenu.items.push(ve), ve.enabled = this.get_focus().get_animate(), de.visible = t.ss.canCast(this.get_focus(), E.FlipbookOverlay), B.visible = t.ss.canCast(this.get_focus(), E.FlipbookOverlay), P ? (z.visible = !1, ae.visible = !1, ee.visible = !1, de.visible = !1, G.visible = !1, j.visible = !1) : Te.visible = !1, this._contextMenu.items.push(ee), this.get_focus() != null && t.ss.typeOf(this.get_focus()) === E.TextOverlay && this._contextMenu.items.push(Z), this._contextMenu._show(x);
                  }
                },
                _editText_Click: function(x, P) {
                  this.get_focus() != null && t.ss.typeOf(this.get_focus()) === E.TextOverlay && this._editText();
                },
                _alignVertical_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1036, "Vertical Align"), this._tour));
                    for (var d = this.get_focus().get_x(), U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_x(d);
                    }
                  }
                },
                _alignHorizon_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1037, "Horizontal Align"), this._tour));
                    for (var d = this.get_focus().get_y(), U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_y(d);
                    }
                  }
                },
                _alignCenter_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1038, "Align Centers"), this._tour));
                    for (var d = this.get_focus().get_y(), U = this.get_focus().get_x(), F = t.ss.enumerate(this.selection.selectionSet); F.moveNext(); ) {
                      var X = F.current;
                      X.set_y(d), X.set_x(U);
                    }
                  }
                },
                _alignRight_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1040, "Align Right"), this._tour));
                    for (var d = this.get_focus().get_x() + this.get_focus().get_width() / 2, U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_x(d - F.get_width() / 2);
                    }
                  }
                },
                _alignLeft_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1041, "Align Left"), this._tour));
                    for (var d = this.get_focus().get_x() - this.get_focus().get_width() / 2, U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_x(d + F.get_width() / 2);
                    }
                  }
                },
                _alignBottom_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1042, "Align Bottoms"), this._tour));
                    for (var d = this.get_focus().get_y() + this.get_focus().get_height() / 2, U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_y(d - F.get_height() / 2);
                    }
                  }
                },
                _alignTop_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(1039, "Align Tops"), this._tour));
                    for (var d = this.get_focus().get_y() - this.get_focus().get_height() / 2, U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_y(d + F.get_height() / 2);
                    }
                  }
                },
                _interpolation_Click: function(x, P) {
                  var d = x;
                  if (this.get_focus() != null)
                    for (var U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_interpolationType(d.tag);
                    }
                },
                _linkSlideChosen: function() {
                  this.selectDialog.get_OK() && this.get_focus().set_linkID(this.selectDialog.get_id());
                },
                _linkID_Click: function(x, P) {
                  this.selectDialog = new C.SelectLink(this.get_focus().get_linkID()), this.nextSlideCallback(this.selectDialog, t.ss.bind("_linkSlideChosen", this));
                },
                _flipbookProperties_Click: function(x, P) {
                },
                _animateMenu_Click: function(x, P) {
                  if (this.get_focus() != null) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(588, "Animate"), this._tour));
                    for (var d = !this.get_focus().get_animate(), U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.set_animate(d);
                    }
                  }
                },
                _url_Click: function(x, P) {
                  var d = this;
                  if (this.get_focus() != null) {
                    var U = new l.SimpleInput(C.Language.getLocalizedText(541, "Edit Hyperlink"), C.Language.getLocalizedText(542, "Url"), this.get_focus().get_url(), 2048);
                    U.show(C.Cursor.get_position(), function() {
                      m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(541, "Edit Hyperlink"), d._tour)), d.get_focus().set_url(U.text);
                    });
                  }
                },
                _pickColor_Click: function(x, P) {
                  var d = this, U = new o.ColorPicker();
                  U.color = this.get_focus().get_color(), U.callBack = function() {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(543, "Edit Color"), d._tour));
                    for (var F = t.ss.enumerate(d.selection.selectionSet); F.moveNext(); ) {
                      var X = F.current;
                      X.set_color(U.color);
                    }
                  }, U.show(P);
                },
                _volume_Click: function(x, P) {
                  var d = new C.PopupVolume();
                  d.volume = this.get_focus().get_volume(), d.showDialog(), this.get_focus().set_volume(d.volume);
                },
                _deleteMenu_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(167, "Delete"), this._tour));
                    for (var d = t.ss.enumerate(this.selection.selectionSet); d.moveNext(); ) {
                      var U = d.current;
                      this._tour.get_currentTourStop().removeOverlay(U);
                    }
                    this.set_focus(null), this.clearSelection(), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                  }
                },
                _properties_Click: function(x, P) {
                  this._tour == null || this._tour.get_currentTourStop() == null, m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(549, "Properties Edit"), this._tour));
                  var d = new C.OverlayProperties();
                  d.overlay = this.get_focus(), d.showDialog(), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                },
                _bringForward_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(454, "Bring Forward"), this._tour));
                    for (var d = t.ss.enumerate(this._getSortedSelection(!1)); d.moveNext(); ) {
                      var U = d.current;
                      this._tour.get_currentTourStop().bringForward(U);
                    }
                    T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                  }
                },
                _sendBackward_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(455, "Send Backward"), this._tour));
                    for (var d = t.ss.enumerate(this._getSortedSelection(!0)); d.moveNext(); ) {
                      var U = d.current;
                      this._tour.get_currentTourStop().sendBackward(U);
                    }
                    T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                  }
                },
                _sendToBack_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(453, "Send to Back"), this._tour));
                    for (var d = t.ss.enumerate(this._getSortedSelection(!0)); d.moveNext(); ) {
                      var U = d.current;
                      this._tour.get_currentTourStop().sendToBack(U);
                    }
                    T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                  }
                },
                _bringToFront_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(452, "Bring to Front"), this._tour));
                    for (var d = t.ss.enumerate(this._getSortedSelection(!1)); d.moveNext(); ) {
                      var U = d.current;
                      this._tour.get_currentTourStop().bringToFront(U);
                    }
                    T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                  }
                },
                _getSortedSelection: function(x) {
                  for (var P = [], d = t.ss.enumerate(this.selection.selectionSet); d.moveNext(); ) {
                    var U = d.current;
                    P.push(U);
                  }
                  return x ? P.sort(function(F, X) {
                    return -_.Util.compare(F.get_zOrder(), X.get_zOrder());
                  }) : P.sort(function(F, X) {
                    return _.Util.compare(F.get_zOrder(), X.get_zOrder());
                  }), P;
                },
                _copyMenu_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    var d = new g.XmlTextWriter();
                    d._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), d._writeStartElement("Overlays");
                    for (var U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                      var F = U.current;
                      F.saveToXml(d, !0);
                    }
                    d._writeEndElement(), this.clipboardData = d.body, this.clipboardType = "WorldWideTelescope.Overlay";
                  }
                },
                _cutMenu_Click: function(x, P) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                    m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(427, "Cut"), this._tour)), this._copyMenu_Click(x, P);
                    for (var d = t.ss.enumerate(this.selection.selectionSet); d.moveNext(); ) {
                      var U = d.current;
                      this._tour.get_currentTourStop().removeOverlay(U);
                    }
                    this.set_focus(null), this.clearSelection(), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                  }
                },
                _pasteMenu_Click: function(x, P) {
                  if (m.Undo.push(new m.UndoTourSlidelistChange(C.Language.getLocalizedText(544, "Paste Object"), this._tour)), this.clipboardType === "WorldWideTelescope.Overlay") {
                    var d = new DOMParser(), U = d.parseFromString(this.clipboardData, "text/xml");
                    this.clearSelection();
                    for (var F = _.Util.selectSingleNode(U, "Overlays"), X = t.ss.enumerate(F.childNodes); X.moveNext(); ) {
                      var Y = X.current;
                      if (Y.nodeName === "Overlay") {
                        for (var M = E.Overlay._fromXml(this._tour.get_currentTourStop(), Y), B = !1, D = 0, k = 0, G = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); G.moveNext(); ) {
                          var j = G.current;
                          j.id === M.id && t.ss.typeOf(j) === t.ss.typeOf(M) && (B = !0, (k < j.get_y() || D < j.get_x()) && (D = j.get_x(), k = j.get_y()));
                        }
                        B && (M.set_x(D + 20), M.set_y(k + 20)), this._tour.get_currentTourStop().addOverlay(M), this.set_focus(M), this.selection.addSelection(this.get_focus()), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                      }
                    }
                  }
                },
                mouseClick: function(x, P) {
                  return !!(A.currentEditor != null && A.currentEditor.mouseClick(x, P));
                },
                click: function(x, P) {
                  return !!(A.currentEditor != null && A.currentEditor.click(x, P));
                },
                mouseDoubleClick: function(x, P) {
                  return A.currentEditor != null && A.currentEditor.mouseDoubleClick(x, P) || this.get_focus() != null && t.ss.typeOf(this.get_focus()) === E.TextOverlay && this._editText(), !0;
                },
                _doneEditing: function() {
                  m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(545, "Text Edit"), this._tour)), this.get_focus().set_width(0), this.get_focus().set_height(0), this.get_focus().set_color(this.get_focus().textObject.foregroundColor), this.get_focus().cleanUp();
                },
                _editText: function() {
                  var x = this.get_focus().textObject;
                  this.editTextCallback(x, t.ss.bind("_doneEditing", this));
                },
                keyDown: function(x, P) {
                  if (A.currentEditor != null && A.currentEditor.keyDown(x, P))
                    return !0;
                  var d = 1;
                  switch (P.ctrlKey && (d = 10), P.keyCode) {
                    case 65:
                      P.ctrlKey && (this.clearSelection(), this.selection.addSelectionRange(this._tour.get_currentTourStop().get_overlays()), T._updateOverlayListSelection(this.selection), this._tour.get_currentTourStop().get_overlays().length > 0 && this.set_focus(this._tour.get_currentTourStop().get_overlays()[0]));
                      break;
                    case 90:
                      P.ctrlKey && (m.Undo.peekAction() ? f._undoStep() : y.UiTools._beep());
                      break;
                    case 89:
                      P.ctrlKey && (m.Undo.peekRedoAction() ? f._redoStep() : y.UiTools._beep());
                      break;
                    case 67:
                      P.ctrlKey && this._copyMenu_Click(this, new t.ss.EventArgs());
                      break;
                    case 86:
                      P.ctrlKey && this._pasteMenu_Click(this, new t.ss.EventArgs());
                      break;
                    case 88:
                      P.ctrlKey && this._cutMenu_Click(this, new t.ss.EventArgs());
                      break;
                    case 46:
                      return this._deleteMenu_Click(null, null), !0;
                    case 9:
                      return P.shiftKey ? this._selectLast() : this._selectNext(), !0;
                    case 37:
                      if (this.get_focus() != null) {
                        for (var U = t.ss.enumerate(this.selection.selectionSet); U.moveNext(); ) {
                          var F = U.current;
                          if (P.shiftKey)
                            if (P.altKey)
                              F.get_width() > d && (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(537, "Resize"), this._tour)), F.set_width(F.get_width() - d));
                            else {
                              var X = F.get_width() / F.get_height();
                              F.get_width() > d && F.get_height() > d * X && (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(537, "Resize"), this._tour)), F.set_width(F.get_width() - d), F.set_height(F.get_height() - d * X));
                            }
                          else
                            P.altKey ? (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(538, "Rotate"), this._tour)), F.set_rotationAngle(F.get_rotationAngle() - d)) : (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(540, "Move"), this._tour)), F.set_x(F.get_x() - d));
                        }
                        return !0;
                      }
                      break;
                    case 39:
                      if (this.get_focus() != null) {
                        for (var Y = t.ss.enumerate(this.selection.selectionSet); Y.moveNext(); ) {
                          var F = Y.current;
                          if (P.shiftKey)
                            if (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(537, "Resize"), this._tour)), P.altKey)
                              F.set_width(F.get_width() + d);
                            else {
                              var X = F.get_width() / F.get_height();
                              F.set_width(F.get_width() + d), F.set_height(F.get_height() + d * X);
                            }
                          else
                            P.altKey ? (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(538, "Rotate"), this._tour)), F.set_rotationAngle(F.get_rotationAngle() + d)) : (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(540, "Move"), this._tour)), F.set_x(F.get_x() + d));
                        }
                        return !0;
                      }
                      break;
                    case 38:
                      if (this.get_focus() != null) {
                        for (var M = t.ss.enumerate(this.selection.selectionSet); M.moveNext(); ) {
                          var F = M.current;
                          if (P.shiftKey)
                            if (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(537, "Resize"), this._tour)), P.altKey)
                              F.set_height(F.get_height() + d);
                            else {
                              var X = F.get_width() / F.get_height();
                              F.set_width(F.get_width() + d), F.set_height(F.get_height() + d * X);
                            }
                          else
                            P.altKey || (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(540, "Move"), this._tour)), F.set_y(F.get_y() - d));
                        }
                        return !0;
                      }
                      break;
                    case 40:
                      if (this.get_focus() != null) {
                        for (var B = t.ss.enumerate(this.selection.selectionSet); B.moveNext(); ) {
                          var F = B.current;
                          if (P.shiftKey)
                            if (P.altKey)
                              F.get_height() > d && (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(537, "Resize"), this._tour)), F.set_height(F.get_height() - d));
                            else {
                              var X = F.get_width() / F.get_height();
                              F.get_width() > d && F.get_height() > d * X && (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(537, "Resize"), this._tour)), F.set_width(F.get_width() - d), F.set_height(F.get_height() - d * X));
                            }
                          else
                            P.altKey || (m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(540, "Move"), this._tour)), F.set_y(F.get_y() + d));
                        }
                        return !0;
                      }
                      break;
                    case 34:
                      if (P.altKey)
                        return this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1, f._selectCurrent(), f._ensureSelectedVisible()), !0;
                      break;
                    case 33:
                      if (P.altKey)
                        return this._tour.get_currentTourstopIndex() > 0 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() - 1) + 1, f._selectCurrent(), f._ensureSelectedVisible()), !0;
                      break;
                  }
                  return !1;
                },
                _selectNext: function() {
                  this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getNextOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
                },
                _selectLast: function() {
                  this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getPerviousOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
                },
                keyUp: function(x, P) {
                  return !!(A.currentEditor != null && A.currentEditor.keyUp(x, P));
                },
                addPicture: function(x) {
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return !1;
                  m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(546, "Insert Picture"), this._tour));
                  var P = E.BitmapOverlay.create(this._tour.get_currentTourStop(), x);
                  return P.set_x(960), P.set_y(600), this._tour.get_currentTourStop().addOverlay(P), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
                },
                addFlipbook: function(x) {
                  return !1;
                },
                addAudio: function(x, P) {
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return !1;
                  var d = E.AudioOverlay.create(this._tour.get_currentTourStop(), x);
                  return d.set_x(900), d.set_y(600), P ? this._tour.get_currentTourStop().set_musicTrack(d) : this._tour.get_currentTourStop().set_voiceTrack(d), !0;
                },
                addVideo: function(x) {
                  return !0;
                },
                addText: function(x, P) {
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return !1;
                  var d = E.TextOverlay.create(P);
                  return d.set_color(P.foregroundColor), d.set_x(960), d.set_y(600), m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(547, "Insert Text"), this._tour)), this._tour.get_currentTourStop().addOverlay(d), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
                },
                addOverlay: function(x) {
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return null;
                  if (t.ss.typeOf(x) === E.ShapeOverlay) {
                    var P = x;
                    if (P != null) {
                      var d = E.ShapeOverlay._create(this._tour.get_currentTourStop(), P.get_shapeType());
                      return d.set_width(P.get_width()), d.set_height(P.get_height()), d.set_x(this._contextPoint.x), d.set_y(this._contextPoint.y), d.set_color(P.get_color()), d.set_rotationAngle(P.get_rotationAngle()), this._tour.get_currentTourStop().addOverlay(d), d;
                    }
                  } else if (t.ss.typeOf(x) === E.TextOverlay) {
                    var U = x;
                    if (U != null) {
                      var F = E.TextOverlay.create(U.textObject);
                      return F.set_x(this._contextPoint.x), F.set_y(this._contextPoint.y), F.set_color(U.get_color()), this._tour.get_currentTourStop().addOverlay(F), F;
                    }
                  } else if (t.ss.typeOf(x) === E.BitmapOverlay) {
                    var X = x;
                    if (X != null) {
                      var Y = X.copy(this._tour.get_currentTourStop());
                      return Y.set_x(this._contextPoint.x), Y.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(Y), Y;
                    }
                  } else if (t.ss.typeOf(x) === E.FlipbookOverlay) {
                    var M = x;
                    if (M != null) {
                      var Y = M.copy(this._tour.get_currentTourStop());
                      return Y.set_x(this._contextPoint.x), Y.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(Y), Y;
                    }
                  }
                  return null;
                },
                addShape: function(x, P) {
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return !1;
                  m.Undo.push(new L.UndoTourStopChange(C.Language.getLocalizedText(548, "Insert Shape"), this._tour));
                  var d = E.ShapeOverlay._create(this._tour.get_currentTourStop(), P);
                  return d.set_width(200), d.set_height(200), P === 4 && d.set_height(d.get_height() / 2), P === 5 && d.set_height(12), d.set_x(960), d.set_y(600), this._tour.get_currentTourStop().addOverlay(d), this.set_focus(d), this.selection.setSelection(this.get_focus()), T._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
                },
                getCurrentColor: function() {
                  return this._tour == null || this._tour.get_currentTourStop() == null ? this._defaultColor : this.get_focus() != null ? this.get_focus().get_color() : this._defaultColor;
                },
                setCurrentColor: function(x) {
                  this._defaultColor = x, !(this._tour == null || this._tour.get_currentTourStop() == null) && this.get_focus() != null && this.get_focus().set_color(x);
                },
                dispose: function() {
                  this._contextMenu != null && (this._contextMenu._dispose(), this._contextMenu = null);
                },
                hover: function(x) {
                  return A.currentEditor != null && A.currentEditor.hover(x), !0;
                }
              };
              (0, n.registerType)("TourEditor", [A, K, null, a.IUiController]);
              function T() {
              }
              T._updateOverlayList = function(x, P) {
              }, T._updateOverlayListSelection = function(x) {
              };
              var w = {};
              (0, n.registerType)("OverlayList", [T, w, null]);
              function f() {
              }
              f._ensureSelectedVisible = function() {
              }, f._selectCurrent = function() {
              }, f._undoStep = function() {
                m.Undo.peekAction() && m.Undo.stepBack();
              }, f._redoStep = function() {
                m.Undo.peekRedoAction() && m.Undo.stepForward();
              };
              var R = {};
              (0, n.registerType)("TourEdit", [f, R, null]);
              function O() {
                this.target = null;
              }
              var W = {};
              (0, n.registerType)("SoundEditor", [O, W, null]);
              function N() {
                this.tour = null, this.showAddButton = !1, this.selectedItems = null, this.selectedItem = -1, this.refreshCallback = null, this.multipleSelection = !1, this.hitType = !1;
              }
              var $ = {
                selectAll: function() {
                  this.selectedItems = {};
                  for (var x = 0; x < this.tour.get_tourStops().length; x++)
                    this.selectedItems[x] = this.tour.get_tourStops()[x];
                },
                refresh: function() {
                  this.refreshCallback != null && this.refreshCallback();
                },
                findItem: function(x) {
                  return -1;
                },
                ensureSelectedVisible: function() {
                },
                ensureAddVisible: function() {
                }
              };
              (0, n.registerType)("TourStopList", [N, $, null]);
              function S() {
              }
              S.refreshUi = function() {
              };
              var I = {};
              (0, n.registerType)("TimeLine", [S, I, null]);
            }
          ),
          /***/
          "./esm/tours/tour_player.js": (
            /*!**********************************!*\
              !*** ./esm/tours/tour_player.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                MasterTime: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                TourPlayer: () => (
                  /* binding */
                  y
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), r = i(
                /*! ../blend_state.js */
                "./esm/blend_state.js"
              ), o = i(
                /*! ../camera_parameters.js */
                "./esm/camera_parameters.js"
              ), c = i(
                /*! ../interfaces.js */
                "./esm/interfaces.js"
              ), l = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), g = i(
                /*! ../settings.js */
                "./esm/settings.js"
              ), a = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), b = i(
                /*! ../view_mover.js */
                "./esm/view_mover.js"
              ), V = i(
                /*! ./overlay.js */
                "./esm/tours/overlay.js"
              );
              function y() {
                this._overlayBlend = r.BlendState.create(!1, 1e3), this._tour = null, this._onTarget = !1, this._currentMasterSlide = null, this._callStack = new t.ss.Stack(), this._leaveSettingsWhenStopped = !1;
              }
              y._playing = !1, y._switchedToFullScreen = !1, y.noRestoreUIOnStop = !1, y.get_playing = function() {
                return y._playing;
              }, y.set_playing = function(m) {
                return y._playing = m, m;
              }, y.add_tourEnded = function(m) {
                y.__tourEnded = t.ss.bindAdd(y.__tourEnded, m);
              }, y.remove_tourEnded = function(m) {
                y.__tourEnded = t.ss.bindSub(y.__tourEnded, m);
              };
              var C = {
                render: function(m) {
                  if (!(this._tour == null || this._tour.get_currentTourStop() == null || !y._playing)) {
                    if (m.save(), this.updateSlideStates(), !this._onTarget && (this._slideStartTime = t.ss.now(), m.onTarget(this.get_tour().get_currentTourStop().get_target()))) {
                      this._onTarget = !0, this._overlayBlend.set_state(!this.get_tour().get_currentTourStop().get_fadeInOverlays()), this._overlayBlend.set_targetState(!0), this._tour.get_currentTourStop().get_musicTrack() != null && (this._tour.get_currentTourStop().get_musicTrack().seek(0), this._tour.get_currentTourStop().get_musicTrack().play()), this._tour.get_currentTourStop().get_voiceTrack() != null && (this._tour.get_currentTourStop().get_voiceTrack().seek(0), this._tour.get_currentTourStop().get_voiceTrack().play());
                      for (var L = "", A = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); A.moveNext(); ) {
                        var K = A.current;
                        if (K.get_name().toLowerCase() === "caption") {
                          var T = t.ss.safeCast(K, V.TextOverlay);
                          T != null && (L = T.textObject.text);
                        }
                        K.play();
                      }
                      (0, l.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().get_endTarget() != null && this._tour.get_currentTourStop().get_endTarget().get_zoomLevel() !== -1 && (this._tour.get_currentTourStop().get_target().get_type(), m.viewMover = new b.ViewMoverKenBurnsStyle(this._tour.get_currentTourStop().get_target().get_camParams(), this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_duration() / 1e3, this._tour.get_currentTourStop().get_startTime(), this._tour.get_currentTourStop().get_endTime(), this._tour.get_currentTourStop().get_interpolationType())), g.Settings.tourSettings = this._tour.get_currentTourStop(), a.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), a.SpaceTimeController.set_syncToClock(!1), l.globalScriptInterface._fireSlideChanged(L);
                    }
                    if (m.gl != null) {
                      if (m.setupMatricesOverlays(), this._currentMasterSlide != null)
                        for (var w = t.ss.enumerate(this._currentMasterSlide.get_overlays()); w.moveNext(); ) {
                          var K = w.current;
                          K.set_tweenFactor(1), K.draw3D(m, !1);
                        }
                      if (this._onTarget)
                        for (var f = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); f.moveNext(); ) {
                          var K = f.current;
                          (K.get_name().toLowerCase() !== "caption" || l.globalScriptInterface.get_showCaptions()) && (K.set_tweenFactor(o.CameraParameters.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), K.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : K.get_interpolationType())), K.draw3D(m, !1));
                        }
                      m.restore();
                    } else {
                      m.device.scale(m.height / 1116, m.height / 1116);
                      var R = m.width / m.height;
                      if (m.device.translate(-((1920 - R * 1116) / 2), 0), this._currentMasterSlide != null)
                        for (var O = t.ss.enumerate(this._currentMasterSlide.get_overlays()); O.moveNext(); ) {
                          var K = O.current;
                          K.set_tweenFactor(1), K.draw3D(m, !1);
                        }
                      if (this._onTarget)
                        for (var W = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); W.moveNext(); ) {
                          var K = W.current;
                          (K.get_name().toLowerCase() !== "caption" || l.globalScriptInterface.get_showCaptions()) && (K.set_tweenFactor(o.CameraParameters.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), K.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : K.get_interpolationType())), K.draw3D(m, !1));
                        }
                      m.restore();
                    }
                  }
                },
                get_tour: function() {
                  return this._tour;
                },
                set_tour: function(m) {
                  return this._tour = m, m;
                },
                nextSlide: function() {
                  if (this._tour.get_currentTourStop() != null)
                    if (this._tour.get_currentTourStop().get_masterSlide())
                      this._currentMasterSlide = this._tour.get_currentTourStop();
                    else {
                      this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
                      for (var m = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); m.moveNext(); ) {
                        var L = m.current;
                        L.stop();
                      }
                    }
                  if (this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 || this._tour.get_currentTourStop().get_isLinked()) {
                    if (this._tour.get_currentTourStop().get_endTarget() != null && (l.globalWWTControl.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), l.globalWWTControl.set__mover(null)), this._onTarget = !1, this._tour.get_currentTourStop().get_isLinked())
                      try {
                        switch (this._tour.get_currentTourStop().get_nextSlide()) {
                          case "Return":
                            this._callStack.count > 0 ? this.playFromTourstop(this._tour.get_tourStops()[this._callStack.pop()]) : this._tour.set_currentTourstopIndex(this._tour.get_tourStops().length - 1);
                            break;
                          default:
                            this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_nextSlide())]);
                            break;
                        }
                      } catch {
                        this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                      }
                    else
                      this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                    this._currentMasterSlide != null && this._tour.get_currentTourStop().get_masterSlide() && this._stopCurrentMaster();
                    var A = !1;
                    switch (this._tour.get_currentTourStop().get__transition()) {
                      case 0:
                        break;
                      case 1:
                        A = !0;
                        break;
                      case 2:
                        A = !0;
                        break;
                      case 3:
                        A = !0;
                        break;
                      case 5:
                        A = !0;
                        break;
                      case 4:
                        A = !0;
                        break;
                    }
                    l.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, A, !1), this._slideStartTime = t.ss.now(), g.Settings.tourSettings = this._tour.get_currentTourStop(), a.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), a.SpaceTimeController.set_syncToClock(!1);
                  } else
                    this._stopCurrentMaster(), y._playing = !1, g.Settings.get_current().autoRepeatTour ? (this._tour.set_currentTourstopIndex(-1), this.play()) : (l.globalWWTControl._freezeView(), y.__tourEnded != null && y.__tourEnded(this, new t.ss.EventArgs()), l.globalWWTControl._hideUI(!1), l.globalScriptInterface._fireTourEnded());
                },
                _stopCurrentMaster: function() {
                  if (this._currentMasterSlide != null) {
                    this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
                    for (var m = t.ss.enumerate(this._currentMasterSlide.get_overlays()); m.moveNext(); ) {
                      var L = m.current;
                      L.stop();
                    }
                    this._currentMasterSlide = null;
                  }
                },
                get_leaveSettingsWhenStopped: function() {
                  return this._leaveSettingsWhenStopped;
                },
                set_leaveSettingsWhenStopped: function(m) {
                  return this._leaveSettingsWhenStopped = m, m;
                },
                play: function() {
                  if (this._tour != null) {
                    if (y._playing ? this.stop(!0) : y._playing = !0, l.globalWWTControl._hideUI(!0), y._playing = !0, this._tour.get_tourStops().length > 0) {
                      this._onTarget = !1, this._tour.get_currentTourstopIndex() === -1 && this._tour.set_currentTourStop(this._tour.get_tourStops()[0]);
                      for (var m = t.ss.enumerate(this._tour.get_tourStops()); m.moveNext(); ) {
                        var L = m.current;
                        L.get_musicTrack() != null && L.get_musicTrack().prepMultimedia(), L.get_voiceTrack() != null && L.get_voiceTrack().prepMultimedia();
                        for (var A = t.ss.enumerate(L.get_overlays()); A.moveNext(); ) {
                          var K = A.current;
                          K.prepMultimedia();
                        }
                      }
                      this._tour.get_currentTourstopIndex() > 0 && this._playMasterForCurrent(), l.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1);
                    }
                    this._slideStartTime = t.ss.now(), y._playing = !0;
                  }
                },
                _playMasterForCurrent: function() {
                  if (!this._tour.get_currentTourStop().get_masterSlide()) {
                    var m = this._tour.elapsedTimeSinceLastMaster(this._tour.get_currentTourstopIndex());
                    if (m != null) {
                      var L = m.duration;
                      this._currentMasterSlide = m.master, this._currentMasterSlide.get_musicTrack() != null && (this._currentMasterSlide.get_musicTrack().seek(L), this._currentMasterSlide.get_musicTrack().play()), this._currentMasterSlide.get_voiceTrack() != null && (this._currentMasterSlide.get_voiceTrack().seek(L), this._currentMasterSlide.get_voiceTrack().play());
                      for (var A = t.ss.enumerate(this._currentMasterSlide.get_overlays()); A.moveNext(); ) {
                        var K = A.current;
                        K.seek(L), K.play();
                      }
                    }
                  }
                },
                stop: function(m) {
                  if (y._switchedToFullScreen, this._leaveSettingsWhenStopped || (g.Settings.tourSettings = null), y._playing = !1, this._tour.get_currentTourStop() != null) {
                    this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
                    for (var L = t.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); L.moveNext(); ) {
                      var A = L.current;
                      A.stop();
                    }
                  }
                  if (this._currentMasterSlide != null) {
                    this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
                    for (var K = t.ss.enumerate(this._currentMasterSlide.get_overlays()); K.moveNext(); ) {
                      var A = K.current;
                      A.stop();
                    }
                  }
                  l.globalWWTControl._hideUI(y.noRestoreUIOnStop), l.globalScriptInterface._fireTourEnded();
                },
                updateSlideStates: function() {
                  var m = !1, L = t.ss.now() - this._slideStartTime;
                  if (L > this._tour.get_currentTourStop().get_duration() && y._playing && (this.nextSlide(), m = !0), L = t.ss.now() - this._slideStartTime, this._tour.get_currentTourStop() != null) {
                    this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, L / this._tour.get_currentTourStop().get_duration())), this._tour.get_currentTourStop().faderOpacity = 0;
                    var A = this._tour.get_currentTourStop().get_tweenPosition() * this._tour.get_currentTourStop().get_duration() / 1e3;
                    switch (m && l.globalWWTControl.set_crossFadeFrame(!1), this._tour.get_currentTourStop().get__transition()) {
                      case 0:
                        this._tour.get_currentTourStop().faderOpacity = 0, l.globalWWTControl.set_crossFadeFrame(!1);
                        break;
                      case 2:
                        A < A - this._tour.get_currentTourStop().get__transitionHoldTime() ? (l.globalWWTControl.set_crossFadeFrame(!0), this._tour.get_currentTourStop().faderOpacity = 1) : (this._tour.get_currentTourStop().faderOpacity = 0, l.globalWWTControl.set_crossFadeFrame(!1));
                        break;
                      case 1:
                        l.globalWWTControl.set_crossFadeFrame(!0);
                        var K = Math.max(0, 1 - Math.min(1, (A - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime()));
                        this._tour.get_currentTourStop().faderOpacity = K;
                        break;
                      case 3:
                      case 4:
                        l.globalWWTControl.set_crossFadeFrame(!1);
                        var K = Math.max(0, 1 - Math.max(0, A - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime());
                        this._tour.get_currentTourStop().faderOpacity = K;
                        break;
                      case 5:
                        l.globalWWTControl.set_crossFadeFrame(!1);
                        break;
                    }
                    if (!this._tour.get_currentTourStop().get_isLinked() && this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1) {
                      var T = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transition(), w = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transitionOutTime();
                      switch (T) {
                        case 5:
                        case 3:
                          if (!this._tour.get_currentTourStop().faderOpacity) {
                            l.globalWWTControl.set_crossFadeFrame(!1);
                            var K = Math.max(0, 1 - Math.min(1, (this._tour.get_currentTourStop().get_duration() / 1e3 - A) / w));
                            this._tour.get_currentTourStop().faderOpacity = K;
                          }
                          break;
                      }
                    }
                  }
                },
                updateTweenPosition: function(m) {
                  var L = t.ss.now() - this._slideStartTime;
                  return m > -1 ? this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, m)) : this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, L / this._tour.get_currentTourStop().get_duration()));
                },
                close: function() {
                  this._tour != null && (y.get_playing() && this.stop(y._switchedToFullScreen), this._tour = null);
                },
                mouseDown: function(m, L) {
                  var A;
                  if (A = this.pointToView(e.Vector2d.create(L.offsetX, L.offsetY)), this._tour == null || this._tour.get_currentTourStop() == null)
                    return !1;
                  for (var K = this._tour.get_currentTourStop().get_overlays().length - 1; K >= 0; K--)
                    if (this._tour.get_currentTourStop().get_overlays()[K].hitTest(A)) {
                      if (!t.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[K].get_url())) {
                        var T = this._tour.get_currentTourStop().get_overlays()[K];
                        return _.Util._openUrl(T.get_url()), !0;
                      }
                      if (!t.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[K].get_linkID()))
                        return this._callStack.push(this._tour.get_currentTourstopIndex()), this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_overlays()[K].get_linkID())]), !0;
                    }
                  return !1;
                },
                mouseUp: function(m, L) {
                  return !1;
                },
                mouseMove: function(m, L) {
                  var A;
                  try {
                    A = this.pointToView(e.Vector2d.create(L.offsetX, L.offsetY));
                  } catch {
                    return !1;
                  }
                  if (this._tour == null || this._tour.get_currentTourStop() == null)
                    return !1;
                  for (var K = this._tour.get_currentTourStop().get_overlays().length - 1; K >= 0; K--)
                    if (this._tour.get_currentTourStop().get_overlays()[K].hitTest(A) && (!t.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[K].get_url()) || !t.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[K].get_linkID())))
                      return !0;
                  return !1;
                },
                mouseClick: function(m, L) {
                  return !1;
                },
                click: function(m, L) {
                  return !1;
                },
                mouseDoubleClick: function(m, L) {
                  return !1;
                },
                keyDown: function(m, L) {
                  switch (L.keyCode) {
                    case 27:
                      return this.stop(y._switchedToFullScreen), l.globalWWTControl._closeTour(), !0;
                    case 32:
                      return this.pauseTour(), !0;
                    case 39:
                      return this._playNextSlide(), !0;
                    case 37:
                      return this._playPreviousSlide(), !0;
                    case 35:
                      return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_tourStops().length - 1]), !0;
                    case 36:
                      return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[0]), !0;
                  }
                  return !1;
                },
                _playNextSlide: function() {
                  this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1]);
                },
                _playPreviousSlide: function() {
                  this._tour.get_currentTourstopIndex() > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() - 1]);
                },
                playFromTourstop: function(m) {
                  this.stop(!0), this._tour.set_currentTourStop(m), l.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), a.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), a.SpaceTimeController.set_syncToClock(!1), this.play();
                },
                pauseTour: function() {
                  y._playing ? (this.stop(y._switchedToFullScreen), l.globalWWTControl._freezeView(), l.globalScriptInterface._fireTourPaused()) : (this.play(), l.globalScriptInterface._fireTourResume());
                },
                keyUp: function(m, L) {
                  return !1;
                },
                hover: function(m) {
                  return !!y._playing;
                },
                pointToView: function(m) {
                  var L = l.globalWWTControl.canvas.height, A = l.globalWWTControl.canvas.width, K = A / L * 1116, T = m.x / A * K - (K - 1920) / 2, w = m.y / L * 1116;
                  return e.Vector2d.create(T, w);
                }
              };
              (0, n.registerType)("TourPlayer", [y, C, null, c.IUiController]);
              function E(m, L) {
                this.duration = 0, this.master = m, this.duration = L;
              }
              var v = {};
              (0, n.registerType)("MasterTime", [E, v, null]);
            }
          ),
          /***/
          "./esm/tours/tour_stop.js": (
            /*!********************************!*\
              !*** ./esm/tours/tour_stop.js ***!
              \********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                LayerInfo: () => (
                  /* binding */
                  m
                ),
                /* harmony export */
                TourStop: () => (
                  /* binding */
                  E
                ),
                /* harmony export */
                TransitionType: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                UndoTourStopChange: () => (
                  /* binding */
                  A
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              ), _ = i(
                /*! ../utilities/xml_text_writer.js */
                "./esm/utilities/xml_text_writer.js"
              ), r = i(
                /*! ../baseutil.js */
                "./esm/baseutil.js"
              ), o = i(
                /*! ../color.js */
                "./esm/color.js"
              ), c = i(
                /*! ../constellation_filter.js */
                "./esm/constellation_filter.js"
              ), l = i(
                /*! ../interfaces.js */
                "./esm/interfaces.js"
              ), g = i(
                /*! ../place.js */
                "./esm/place.js"
              ), a = i(
                /*! ../settings.js */
                "./esm/settings.js"
              ), b = i(
                /*! ../space_time_controller.js */
                "./esm/space_time_controller.js"
              ), V = i(
                /*! ../util.js */
                "./esm/util.js"
              ), y = i(
                /*! ./overlay.js */
                "./esm/tours/overlay.js"
              ), C = {
                slew: 0,
                crossFade: 1,
                crossCut: 2,
                fadeOutIn: 3,
                fadeIn: 4,
                fadeOut: 5
              };
              (0, n.registerType)("TransitionType", C), (0, n.registerEnum)("TransitionType", C);
              function E() {
                this._tourStopType = 0, this._keyFramed = !1, this._tweenPosition = 0, this.faderOpacity = 0, this._owner = null, this._transition = 0, this._transitionTime = 2, this._transitionHoldTime = 4, this._transitionOutTime = 2, this._nextSlide = "Next", this._fadeInOverlays = !1, this._masterSlide = !1, this._id = "", this._description = "", this._name = "", this._duration = 1e4, this._interpolationType = 0, this._hasLocation = !0, this._hasTime = !0, this._startTime = b.SpaceTimeController.get_now(), this._endTime = b.SpaceTimeController.get_now(), this._actualPlanetScale = a.Settings.get_current().get_actualPlanetScale(), this._locationAltitude = a.Settings.get_current().get_locationAltitude(), this._locationLat = a.Settings.get_current().get_locationLat(), this._locationLng = a.Settings.get_current().get_locationLng(), this._showClouds = a.Settings.get_current().get_showClouds(), this._showConstellationBoundries = a.Settings.get_current().get_showConstellationBoundries(), this._showConstellationFigures = a.Settings.get_current().get_showConstellationFigures(), this._showConstellationSelection = a.Settings.get_current().get_showConstellationSelection(), this._showEcliptic = a.Settings.get_current().get_showEcliptic(), this._showElevationModel = a.Settings.get_current().get_showElevationModel(), this._showFieldOfView = a.Settings.get_current().get_showFieldOfView(), this._showGrid = a.Settings.get_current().get_showGrid(), this._showHorizon = a.Settings.get_current().get_showHorizon(), this._showHorizonPanorama = a.Settings.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = a.Settings.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = a.Settings.get_current().get_showSolarSystem(), this._fovTelescope = a.Settings.get_current().get_fovTelescope(), this._fovEyepiece = a.Settings.get_current().get_fovEyepiece(), this._fovCamera = a.Settings.get_current().get_fovCamera(), this._localHorizonMode = a.Settings.get_current().get_localHorizonMode(), this._galacticMode = a.Settings.get_current().get_galacticMode(), this._solarSystemStars = a.Settings.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = a.Settings.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = a.Settings.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = a.Settings.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = a.Settings.get_current().get_solarSystemOverlays(), this._solarSystemLighting = a.Settings.get_current().get_solarSystemLighting(), this._solarSystemScale = a.Settings.get_current().get_solarSystemScale(), this._solarSystemMultiRes = a.Settings.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = a.Settings.get_current().get_showEquatorialGridText(), this._showGalacticGrid = a.Settings.get_current().get_showGalacticGrid(), this._showGalacticGridText = a.Settings.get_current().get_showGalacticGridText(), this._showEclipticGrid = a.Settings.get_current().get_showEclipticGrid(), this._showEclipticGridText = a.Settings.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = a.Settings.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = a.Settings.get_current().get_showAltAzGrid(), this._showAltAzGridText = a.Settings.get_current().get_showAltAzGridText(), this._showPrecessionChart = a.Settings.get_current().get_showPrecessionChart(), this._showConstellationPictures = a.Settings.get_current().get_showConstellationPictures(), this._showConstellationLabels = a.Settings.get_current().get_showConstellationLabels(), this._solarSystemCMB = a.Settings.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = a.Settings.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = a.Settings.get_current().get_solarSystemPlanets(), this._showEarthSky = a.Settings.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = a.Settings.get_current().get_solarSystemMinorOrbits(), this._constellationsEnabled = "", this._constellationFiguresFilter = a.Settings.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = a.Settings.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = a.Settings.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = a.Settings.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = a.Settings.get_current().get_showSkyOverlays(), this._showConstellations = a.Settings.get_current().get_showConstellations(), this._showSkyNode = a.Settings.get_current().get_showSkyNode(), this._showSkyGrids = a.Settings.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = a.Settings.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = a.Settings.get_current().get_earthCutawayView(), this._showISSModel = a.Settings.get_current().get_showISSModel(), this._milkyWayModel = a.Settings.get_current().get_milkyWayModel(), this._minorPlanetsFilter = a.Settings.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = a.Settings.get_current().get_planetOrbitsFilter(), this._thumbnailString = "", this._thumbnail = null, this.layers = {}, this._overlays = [], this._musicTrack = null, this._voiceTrack = null, this._eclipticGridColor = o.Colors.get_green(), this._galacticGridColor = o.Colors.get_cyan(), this._altAzGridColor = o.Colors.get_magenta(), this._precessionChartColor = o.Colors.get_orange(), this._eclipticColor = o.Colors.get_blue(), this._equatorialGridColor = o.Colors.get_white(), this._constellationLabelsHeight = 80, this._id = V.Guid.newGuid().toString();
              }
              E.clipboardFormat = "WorldWideTelescope.Slide", E.create = function(T) {
                var w = new E();
                return w._target = T, w;
              }, E.getXmlText = function(T) {
                var w = new _.XmlTextWriter();
                return w._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), T._saveToXml(w, !0), w._close(), w.body;
              }, E._fromXml = function(T, w) {
                try {
                  var f = new E();
                  f._owner = T, f.set_id(w.attributes.getNamedItem("Id").nodeValue), f.set_name(w.attributes.getNamedItem("Name").nodeValue), f.set_description(w.attributes.getNamedItem("Description").nodeValue), f._thumbnailString = w.attributes.getNamedItem("Thumbnail").nodeValue, f._duration = r.Util.parseTimeSpan(w.attributes.getNamedItem("Duration").nodeValue), w.attributes.getNamedItem("Master") != null && (f._masterSlide = t.ss.boolean(w.attributes.getNamedItem("Master").nodeValue)), w.attributes.getNamedItem("NextSlide") != null && (f._nextSlide = w.attributes.getNamedItem("NextSlide").nodeValue), w.attributes.getNamedItem("InterpolationType") != null && f.set_interpolationType(n.Enums.parse("InterpolationType", w.attributes.getNamedItem("InterpolationType").nodeValue)), f._fadeInOverlays = !0, w.attributes.getNamedItem("FadeInOverlays") != null && (f._fadeInOverlays = t.ss.boolean(w.attributes.getNamedItem("FadeInOverlays").nodeValue)), w.attributes.getNamedItem("Transition") != null && (f._transition = n.Enums.parse("TransitionType", w.attributes.getNamedItem("Transition").nodeValue)), w.attributes.getNamedItem("HasLocation") != null && (f._hasLocation = t.ss.boolean(w.attributes.getNamedItem("HasLocation").nodeValue)), f._hasLocation && (w.attributes.getNamedItem("LocationAltitude") != null && (f._locationAltitude = parseFloat(w.attributes.getNamedItem("LocationAltitude").nodeValue)), w.attributes.getNamedItem("LocationLat") != null && (f._locationLat = parseFloat(w.attributes.getNamedItem("LocationLat").nodeValue)), w.attributes.getNamedItem("LocationLng") != null && (f._locationLng = parseFloat(w.attributes.getNamedItem("LocationLng").nodeValue))), w.attributes.getNamedItem("HasTime") != null && (f._hasTime = t.ss.boolean(w.attributes.getNamedItem("HasTime").nodeValue), f._hasTime && (w.attributes.getNamedItem("StartTime") != null && (f._startTime = t.ss.date(w.attributes.getNamedItem("StartTime").nodeValue + " UTC")), w.attributes.getNamedItem("EndTime") != null && (f._endTime = t.ss.date(w.attributes.getNamedItem("EndTime").nodeValue + " UTC")))), w.attributes.getNamedItem("ActualPlanetScale") != null && (f._actualPlanetScale = t.ss.boolean(w.attributes.getNamedItem("ActualPlanetScale").nodeValue)), w.attributes.getNamedItem("ShowClouds") != null && (f._showClouds = t.ss.boolean(w.attributes.getNamedItem("ShowClouds").nodeValue)), w.attributes.getNamedItem("ShowConstellationBoundries") != null && (f._showConstellationBoundries = t.ss.boolean(w.attributes.getNamedItem("ShowConstellationBoundries").nodeValue)), w.attributes.getNamedItem("ShowConstellationFigures") != null && (f._showConstellationFigures = t.ss.boolean(w.attributes.getNamedItem("ShowConstellationFigures").nodeValue)), w.attributes.getNamedItem("ShowConstellationSelection") != null && (f._showConstellationSelection = t.ss.boolean(w.attributes.getNamedItem("ShowConstellationSelection").nodeValue)), w.attributes.getNamedItem("ShowEcliptic") != null && (f._showEcliptic = t.ss.boolean(w.attributes.getNamedItem("ShowEcliptic").nodeValue)), w.attributes.getNamedItem("EclipticColor") != null && (f._eclipticColor = o.Color.load(w.attributes.getNamedItem("EclipticColor").nodeValue)), w.attributes.getNamedItem("ShowElevationModel") != null && (f._showElevationModel = t.ss.boolean(w.attributes.getNamedItem("ShowElevationModel").nodeValue)), w.attributes.getNamedItem("ShowFieldOfView") != null && (f._showFieldOfView = t.ss.boolean(w.attributes.getNamedItem("ShowFieldOfView").nodeValue)), w.attributes.getNamedItem("ShowGrid") != null && (f._showGrid = t.ss.boolean(w.attributes.getNamedItem("ShowGrid").nodeValue)), w.attributes.getNamedItem("ShowHorizon") != null && (f._showHorizon = t.ss.boolean(w.attributes.getNamedItem("ShowHorizon").nodeValue)), w.attributes.getNamedItem("ShowHorizonPanorama") != null && (f._showHorizonPanorama = t.ss.boolean(w.attributes.getNamedItem("ShowHorizonPanorama").nodeValue)), w.attributes.getNamedItem("ShowMoonsAsPointSource") != null && (f._showMoonsAsPointSource = t.ss.boolean(w.attributes.getNamedItem("ShowMoonsAsPointSource").nodeValue)), w.attributes.getNamedItem("ShowSolarSystem") != null && (f._showSolarSystem = t.ss.boolean(w.attributes.getNamedItem("ShowSolarSystem").nodeValue)), w.attributes.getNamedItem("FovTelescope") != null && (f._fovTelescope = parseInt(w.attributes.getNamedItem("FovTelescope").nodeValue)), w.attributes.getNamedItem("FovEyepiece") != null && (f._fovEyepiece = parseInt(w.attributes.getNamedItem("FovEyepiece").nodeValue)), w.attributes.getNamedItem("FovCamera") != null && (f._fovCamera = parseInt(w.attributes.getNamedItem("FovCamera").nodeValue)), w.attributes.getNamedItem("LocalHorizonMode") != null && (f._localHorizonMode = t.ss.boolean(w.attributes.getNamedItem("LocalHorizonMode").nodeValue)), w.attributes.getNamedItem("GalacticMode") != null && (f._galacticMode = t.ss.boolean(w.attributes.getNamedItem("GalacticMode").nodeValue)), w.attributes.getNamedItem("SolarSystemStars") != null && (f._solarSystemStars = t.ss.boolean(w.attributes.getNamedItem("SolarSystemStars").nodeValue)), w.attributes.getNamedItem("SolarSystemMilkyWay") != null && (f._solarSystemMilkyWay = t.ss.boolean(w.attributes.getNamedItem("SolarSystemMilkyWay").nodeValue)), w.attributes.getNamedItem("SolarSystemCosmos") != null && (f._solarSystemCosmos = t.ss.boolean(w.attributes.getNamedItem("SolarSystemCosmos").nodeValue)), w.attributes.getNamedItem("SolarSystemOrbits") != null && (f._solarSystemOrbits = t.ss.boolean(w.attributes.getNamedItem("SolarSystemOrbits").nodeValue)), w.attributes.getNamedItem("SolarSystemOverlays") != null && (f._solarSystemOverlays = t.ss.boolean(w.attributes.getNamedItem("SolarSystemOverlays").nodeValue)), w.attributes.getNamedItem("SolarSystemLighting") != null && (f._solarSystemLighting = t.ss.boolean(w.attributes.getNamedItem("SolarSystemLighting").nodeValue)), w.attributes.getNamedItem("SolarSystemScale") != null && (f._solarSystemScale = parseInt(w.attributes.getNamedItem("SolarSystemScale").nodeValue)), w.attributes.getNamedItem("SolarSystemMultiRes") != null && (f._solarSystemMultiRes = t.ss.boolean(w.attributes.getNamedItem("SolarSystemMultiRes").nodeValue)), w.attributes.getNamedItem("ShowEquatorialGridText") != null && (f._showEquatorialGridText = t.ss.boolean(w.attributes.getNamedItem("ShowEquatorialGridText").nodeValue)), w.attributes.getNamedItem("EquatorialGridColor") != null && (f._equatorialGridColor = o.Color.load(w.attributes.getNamedItem("EquatorialGridColor").nodeValue)), w.attributes.getNamedItem("ShowGalacticGrid") != null && (f._showGalacticGrid = t.ss.boolean(w.attributes.getNamedItem("ShowGalacticGrid").nodeValue)), w.attributes.getNamedItem("ShowGalacticGridText") != null && (f._showGalacticGridText = t.ss.boolean(w.attributes.getNamedItem("ShowGalacticGridText").nodeValue)), w.attributes.getNamedItem("GalacticGridColor") != null && (f._galacticGridColor = o.Color.load(w.attributes.getNamedItem("GalacticGridColor").nodeValue)), w.attributes.getNamedItem("ShowEclipticGrid") != null && (f._showEclipticGrid = t.ss.boolean(w.attributes.getNamedItem("ShowEclipticGrid").nodeValue)), w.attributes.getNamedItem("ShowEclipticGridText") != null && (f._showEclipticGridText = t.ss.boolean(w.attributes.getNamedItem("ShowEclipticGridText").nodeValue)), w.attributes.getNamedItem("EclipticGridColor") != null && (f._eclipticGridColor = o.Color.load(w.attributes.getNamedItem("EclipticGridColor").nodeValue)), w.attributes.getNamedItem("ShowEclipticOverviewText") != null && (f._showEclipticOverviewText = t.ss.boolean(w.attributes.getNamedItem("ShowEclipticOverviewText").nodeValue)), w.attributes.getNamedItem("ShowAltAzGrid") != null && (f._showAltAzGrid = t.ss.boolean(w.attributes.getNamedItem("ShowAltAzGrid").nodeValue)), w.attributes.getNamedItem("ShowAltAzGridText") != null && (f._showAltAzGridText = t.ss.boolean(w.attributes.getNamedItem("ShowAltAzGridText").nodeValue)), w.attributes.getNamedItem("AltAzGridColor") != null && (f._altAzGridColor = o.Color.load(w.attributes.getNamedItem("AltAzGridColor").nodeValue)), w.attributes.getNamedItem("ShowPrecessionChart") != null && (f._showPrecessionChart = t.ss.boolean(w.attributes.getNamedItem("ShowPrecessionChart").nodeValue)), w.attributes.getNamedItem("PrecessionChartColor") != null && (f._precessionChartColor = o.Color.load(w.attributes.getNamedItem("PrecessionChartColor").nodeValue)), w.attributes.getNamedItem("ShowConstellationPictures") != null && (f._showConstellationPictures = t.ss.boolean(w.attributes.getNamedItem("ShowConstellationPictures").nodeValue)), w.attributes.getNamedItem("ShowConstellationLabels") != null && (f._showConstellationLabels = t.ss.boolean(w.attributes.getNamedItem("ShowConstellationLabels").nodeValue)), w.attributes.getNamedItem("SolarSystemCMB") != null && (f._solarSystemCMB = t.ss.boolean(w.attributes.getNamedItem("SolarSystemCMB").nodeValue)), w.attributes.getNamedItem("SolarSystemMinorPlanets") != null && (f._solarSystemMinorPlanets = t.ss.boolean(w.attributes.getNamedItem("SolarSystemMinorPlanets").nodeValue)), w.attributes.getNamedItem("SolarSystemPlanets") != null && (f._solarSystemPlanets = t.ss.boolean(w.attributes.getNamedItem("SolarSystemPlanets").nodeValue)), w.attributes.getNamedItem("ShowEarthSky") != null && (f._showEarthSky = t.ss.boolean(w.attributes.getNamedItem("ShowEarthSky").nodeValue)), w.attributes.getNamedItem("SolarSystemMinorOrbits") != null && (f._solarSystemMinorOrbits = t.ss.boolean(w.attributes.getNamedItem("SolarSystemMinorOrbits").nodeValue)), w.attributes.getNamedItem("ShowSkyOverlays") != null ? f._showSkyOverlays = t.ss.boolean(w.attributes.getNamedItem("ShowSkyOverlays").nodeValue) : f._showSkyOverlays = !0, w.attributes.getNamedItem("ShowConstellations") != null ? f._showConstellations = t.ss.boolean(w.attributes.getNamedItem("ShowConstellations").nodeValue) : f._showConstellations = !0, w.attributes.getNamedItem("ShowSkyNode") != null ? f._showSkyNode = t.ss.boolean(w.attributes.getNamedItem("ShowSkyNode").nodeValue) : f._showSkyNode = !0, w.attributes.getNamedItem("ShowSkyGrids") != null ? f._showSkyGrids = t.ss.boolean(w.attributes.getNamedItem("ShowSkyGrids").nodeValue) : f._showSkyGrids = !0, w.attributes.getNamedItem("ShowSkyOverlaysIn3d") != null && (f._showSkyOverlaysIn3d = t.ss.boolean(w.attributes.getNamedItem("ShowSkyOverlaysIn3d").nodeValue)), w.attributes.getNamedItem("EarthCutawayView") != null && (f._earthCutawayView = t.ss.boolean(w.attributes.getNamedItem("EarthCutawayView").nodeValue)), w.attributes.getNamedItem("ShowISSModel") != null && (f._showISSModel = t.ss.boolean(w.attributes.getNamedItem("ShowISSModel").nodeValue)), w.attributes.getNamedItem("MilkyWayModel") != null && (f._milkyWayModel = t.ss.boolean(w.attributes.getNamedItem("MilkyWayModel").nodeValue)), w.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? f._constellationBoundariesFilter = c.ConstellationFilter.parse(w.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : f._constellationBoundariesFilter = c.ConstellationFilter.get_allConstellation(), w.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? f._constellationFiguresFilter = c.ConstellationFilter.parse(w.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : f._constellationFiguresFilter = new c.ConstellationFilter(), w.attributes.getNamedItem("ConstellationNamesFilter") != null ? f._constellationNamesFilter = c.ConstellationFilter.parse(w.attributes.getNamedItem("ConstellationNamesFilter").nodeValue) : f._constellationNamesFilter = new c.ConstellationFilter(), w.attributes.getNamedItem("ConstellationArtFilter") != null ? f._constellationArtFilter = c.ConstellationFilter.parse(w.attributes.getNamedItem("ConstellationArtFilter").nodeValue) : f._constellationArtFilter = new c.ConstellationFilter(), w.attributes.getNamedItem("MinorPlanetsFilter") != null && (f._minorPlanetsFilter = parseInt(w.attributes.getNamedItem("MinorPlanetsFilter").nodeValue)), w.attributes.getNamedItem("PlanetOrbitsFilter") != null && (f._planetOrbitsFilter = parseInt(w.attributes.getNamedItem("PlanetOrbitsFilter").nodeValue));
                  var R = r.Util.selectSingleNode(w, "Place");
                  f._target = g.Place._fromXml(R);
                  var O = r.Util.selectSingleNode(w, "EndTarget");
                  O != null && (f._endTarget = g.Place._fromXml(O));
                  for (var W = r.Util.selectSingleNode(w, "Overlays"), N = t.ss.enumerate(W.childNodes); N.moveNext(); ) {
                    var $ = N.current;
                    $.nodeName === "Overlay" && f.addOverlay(y.Overlay._fromXml(f, $));
                  }
                  var S = r.Util.selectSingleNode(w, "MusicTrack");
                  S != null && (f._musicTrack = y.Overlay._fromXml(f, r.Util.selectSingleNode(S, "Overlay")));
                  var I = r.Util.selectSingleNode(w, "VoiceTrack");
                  I != null && (f._voiceTrack = y.Overlay._fromXml(f, r.Util.selectSingleNode(I, "Overlay")));
                  var x = r.Util.selectSingleNode(w, "VisibleLayers");
                  return x != null && f._loadLayerList(x), f._thumbnail = T.getCachedTexture(t.ss.format("{0}.thumb.png", f._id), function() {
                    var P = 0;
                  }), f;
                } catch (P) {
                  return e.globalScriptInterface._fireTourError(P), null;
                }
              };
              var v = {
                get_keyFramed: function() {
                  return this._keyFramed;
                },
                get_tourStopType: function() {
                  return this._target.get_backgroundImageset() != null ? this._target.get_backgroundImageset().get_dataSetType() : this._tourStopType;
                },
                set_tourStopType: function(T) {
                  return this._target.get_backgroundImageset() != null && this._target.get_backgroundImageset().get_dataSetType() !== T && this._target.set_backgroundImageset(null), this._tourStopType = T, T;
                },
                get_tweenPosition: function() {
                  return this._tweenPosition;
                },
                set_tweenPosition: function(T) {
                  return this._tweenPosition !== T && (this._tweenPosition = Math.max(0, Math.min(1, T)), this.updateTweenPosition()), T;
                },
                updateTweenPosition: function() {
                  this.get_keyFramed();
                },
                copy: function() {
                  var T = new _.XmlTextWriter();
                  T._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), this._saveToXml(T, !0);
                  try {
                    var w = new DOMParser(), f = w.parseFromString(T.body, "text/xml"), R = r.Util.selectSingleNode(f, "TourStop"), O = E._fromXml(this.get_owner(), R);
                    return O.set_id(V.Guid.newGuid().toString()), O;
                  } catch {
                  }
                  return null;
                },
                get_owner: function() {
                  return this._owner;
                },
                set_owner: function(T) {
                  return this._owner = T, T;
                },
                get__transition: function() {
                  return this._transition;
                },
                set__transition: function(T) {
                  return this._transition !== T && (this._transition = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get__transitionTime: function() {
                  return this._transitionTime;
                },
                set__transitionTime: function(T) {
                  return this._transitionTime !== T && (this._transitionTime = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get__transitionHoldTime: function() {
                  return this._transitionHoldTime;
                },
                set__transitionHoldTime: function(T) {
                  return this._transitionHoldTime !== T && (this._transitionHoldTime = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get__transitionOutTime: function() {
                  return this._transitionOutTime;
                },
                set__transitionOutTime: function(T) {
                  return this._transitionOutTime !== T && (this._transitionOutTime = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_nextSlide: function() {
                  return this._nextSlide;
                },
                set_nextSlide: function(T) {
                  return this._nextSlide = T, T;
                },
                get_isLinked: function() {
                  return !(this._nextSlide == null || this._nextSlide === "Next" || !this._nextSlide);
                },
                get_fadeInOverlays: function() {
                  return this._fadeInOverlays;
                },
                set_fadeInOverlays: function(T) {
                  return this._fadeInOverlays = T, T;
                },
                get_masterSlide: function() {
                  return this._masterSlide;
                },
                set_masterSlide: function(T) {
                  return this._masterSlide !== T && (this._masterSlide = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_id: function() {
                  return this._id;
                },
                set_id: function(T) {
                  return this._id = T, this._owner != null && this._owner.set_tourDirty(!0), T;
                },
                toString: function() {
                  return this._target != null ? this.get_target().get_name() : this._description;
                },
                get_description: function() {
                  return this._description;
                },
                set_description: function(T) {
                  return this._description !== T && (this._description = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_name: function() {
                  return this._target != null ? this._target.get_name() : this._name;
                },
                set_name: function(T) {
                  return this._name !== T && (this._name = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_duration: function() {
                  return this._duration;
                },
                set_duration: function(T) {
                  return this._duration !== T && (this._duration = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_target: function() {
                  return this._target;
                },
                set_target: function(T) {
                  return this._target !== T && (this._target = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_endTarget: function() {
                  return this._endTarget;
                },
                set_endTarget: function(T) {
                  return this._endTarget !== T && (this._endTarget = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_interpolationType: function() {
                  return this._interpolationType;
                },
                set_interpolationType: function(T) {
                  return this._interpolationType = T, T;
                },
                get_hasLocation: function() {
                  return this._hasTime;
                },
                set_hasLocation: function(T) {
                  return this._hasLocation !== T && (this._hasLocation = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_hasTime: function() {
                  return this._hasTime;
                },
                set_hasTime: function(T) {
                  return this._hasTime !== T && (this._hasTime = this._hasLocation = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_startTime: function() {
                  return this._startTime;
                },
                set_startTime: function(T) {
                  return this._startTime = T, t.ss.compareDates(this._startTime, T) || (this._startTime = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_endTime: function() {
                  return this._endTime;
                },
                set_endTime: function(T) {
                  return t.ss.compareDates(this._endTime, T) || (this._endTime = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                captureSettings: function() {
                  this._startTime = b.SpaceTimeController.get_now(), this._actualPlanetScale = a.Settings.get_current().get_actualPlanetScale(), this._locationAltitude = a.Settings.get_current().get_locationAltitude(), this._locationLat = a.Settings.get_current().get_locationLat(), this._locationLng = a.Settings.get_current().get_locationLng(), this._showClouds = a.Settings.get_current().get_showClouds(), this._showConstellationBoundries = a.Settings.get_current().get_showConstellationBoundries(), this._showConstellationFigures = a.Settings.get_current().get_showConstellationFigures(), this._showConstellationSelection = a.Settings.get_current().get_showConstellationSelection(), this._showEcliptic = a.Settings.get_current().get_showEcliptic(), this._showElevationModel = a.Settings.get_current().get_showElevationModel(), this._showFieldOfView = a.Settings.get_current().get_showFieldOfView(), this._showGrid = a.Settings.get_current().get_showGrid(), this._showHorizon = a.Settings.get_current().get_showHorizon(), this._showHorizonPanorama = a.Settings.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = a.Settings.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = a.Settings.get_current().get_showSolarSystem(), this._fovTelescope = a.Settings.get_current().get_fovTelescope(), this._fovEyepiece = a.Settings.get_current().get_fovEyepiece(), this._fovCamera = a.Settings.get_current().get_fovCamera(), this._localHorizonMode = a.Settings.get_current().get_localHorizonMode(), this._galacticMode = a.Settings.get_current().get_galacticMode(), this._solarSystemStars = a.Settings.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = a.Settings.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = a.Settings.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = a.Settings.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = a.Settings.get_current().get_solarSystemOverlays(), this._solarSystemLighting = a.Settings.get_current().get_solarSystemLighting(), this._solarSystemScale = a.Settings.get_current().get_solarSystemScale(), this._solarSystemMultiRes = a.Settings.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = a.Settings.get_current().get_showEquatorialGridText(), this._showGalacticGrid = a.Settings.get_current().get_showGalacticGrid(), this._showGalacticGridText = a.Settings.get_current().get_showGalacticGridText(), this._showEclipticGrid = a.Settings.get_current().get_showEclipticGrid(), this._showEclipticGridText = a.Settings.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = a.Settings.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = a.Settings.get_current().get_showAltAzGrid(), this._showAltAzGridText = a.Settings.get_current().get_showAltAzGridText(), this._showPrecessionChart = a.Settings.get_current().get_showPrecessionChart(), this._showConstellationPictures = a.Settings.get_current().get_showConstellationPictures(), this._showConstellationLabels = a.Settings.get_current().get_showConstellationLabels(), this._solarSystemCMB = a.Settings.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = a.Settings.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = a.Settings.get_current().get_solarSystemPlanets(), this._showEarthSky = a.Settings.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = a.Settings.get_current().get_solarSystemMinorOrbits(), this._constellationFiguresFilter = a.Settings.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = a.Settings.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = a.Settings.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = a.Settings.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = a.Settings.get_current().get_showSkyOverlays(), this._showConstellations = a.Settings.get_current().get_showConstellations(), this._showSkyNode = a.Settings.get_current().get_showSkyNode(), this._showSkyGrids = a.Settings.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = a.Settings.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = a.Settings.get_current().get_earthCutawayView(), this._showISSModel = a.Settings.get_current().get_showISSModel(), this._milkyWayModel = a.Settings.get_current().get_milkyWayModel(), this._minorPlanetsFilter = a.Settings.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = a.Settings.get_current().get_planetOrbitsFilter();
                },
                syncSettings: function() {
                  a.Settings.get_globalSettings().set_actualPlanetScale(this._actualPlanetScale), a.Settings.get_globalSettings().set_locationAltitude(this._locationAltitude), a.Settings.get_globalSettings().set_locationLat(this._locationLat), a.Settings.get_globalSettings().set_locationLng(this._locationLng), a.Settings.get_globalSettings().set_earthCutawayView(this._earthCutawayView), a.Settings.get_globalSettings().set_showConstellationBoundries(this._showConstellationBoundries), a.Settings.get_globalSettings().set_showConstellationFigures(this._showConstellationFigures), a.Settings.get_globalSettings().set_showConstellationSelection(this._showConstellationSelection), a.Settings.get_globalSettings().set_showEcliptic(this._showEcliptic), a.Settings.get_globalSettings().set_showElevationModel(this._showElevationModel), a.Settings.get_globalSettings().set_showGrid(this._showGrid), a.Settings.get_globalSettings().set_showHorizon(this._showHorizon), a.Settings.get_globalSettings().set_showSolarSystem(this._showSolarSystem), a.Settings.get_globalSettings().set_localHorizonMode(this._localHorizonMode), a.Settings.get_globalSettings().set_galacticMode(this._galacticMode), a.Settings.get_globalSettings().set_solarSystemStars(this._solarSystemStars), a.Settings.get_globalSettings().set_solarSystemMilkyWay(this._solarSystemMilkyWay), a.Settings.get_globalSettings().set_solarSystemCosmos(this._solarSystemCosmos), a.Settings.get_globalSettings().set_solarSystemCMB(this._solarSystemCMB), a.Settings.get_globalSettings().set_solarSystemOrbits(this._solarSystemOrbits), a.Settings.get_globalSettings().set_solarSystemMinorOrbits(this._solarSystemMinorOrbits), a.Settings.get_globalSettings().set_solarSystemMinorPlanets(this._solarSystemMinorPlanets), a.Settings.get_globalSettings().set_solarSystemOverlays(this._solarSystemOverlays), a.Settings.get_globalSettings().set_solarSystemLighting(this._solarSystemLighting), a.Settings.get_globalSettings().set_showISSModel(this._showISSModel), a.Settings.get_globalSettings().set_solarSystemScale(this._solarSystemScale), a.Settings.get_globalSettings().set_solarSystemMultiRes(this._solarSystemMultiRes), a.Settings.get_globalSettings().set_showEarthSky(this._showEarthSky), a.Settings.get_globalSettings().set_minorPlanetsFilter(this._minorPlanetsFilter), a.Settings.get_globalSettings().set_planetOrbitsFilter(this._planetOrbitsFilter), a.Settings.get_globalSettings().set_showEquatorialGridText(this._showEquatorialGridText), a.Settings.get_globalSettings().set_showGalacticGrid(this._showGalacticGrid), a.Settings.get_globalSettings().set_showGalacticGridText(this._showGalacticGridText), a.Settings.get_globalSettings().set_showEclipticGrid(this._showEclipticGrid), a.Settings.get_globalSettings().set_showEclipticGridText(this._showEclipticGridText), a.Settings.get_globalSettings().set_showEclipticOverviewText(this._showEclipticOverviewText), a.Settings.get_globalSettings().set_showAltAzGrid(this._showAltAzGrid), a.Settings.get_globalSettings().set_showAltAzGridText(this._showAltAzGridText), a.Settings.get_globalSettings().set_showPrecessionChart(this._showPrecessionChart), a.Settings.get_globalSettings().set_showConstellationPictures(this._showConstellationPictures), a.Settings.get_globalSettings().set_constellationsEnabled(this._constellationsEnabled), a.Settings.get_globalSettings().set_showSkyOverlays(this._showSkyOverlays), a.Settings.get_globalSettings().set_constellations(this._showConstellations), a.Settings.get_globalSettings().set_showSkyNode(this._showSkyNode), a.Settings.get_globalSettings().set_showSkyGrids(this._showSkyGrids), a.Settings.get_globalSettings().set_constellationFiguresFilter(this._constellationFiguresFilter.clone()), a.Settings.get_globalSettings().set_constellationBoundariesFilter(this._constellationBoundariesFilter.clone()), a.Settings.get_globalSettings().set_constellationNamesFilter(this._constellationNamesFilter.clone()), a.Settings.get_globalSettings().set_constellationArtFilter(this._constellationArtFilter.clone());
                },
                get_solarSystemStars: function() {
                  return this._solarSystemStars;
                },
                get_solarSystemMultiRes: function() {
                  return this._solarSystemMultiRes;
                },
                get_solarSystemMilkyWay: function() {
                  return this._solarSystemMilkyWay;
                },
                get_solarSystemCosmos: function() {
                  return this._solarSystemCosmos;
                },
                get_solarSystemOrbits: function() {
                  return this._solarSystemOrbits;
                },
                get_solarSystemOverlays: function() {
                  return this._solarSystemOverlays;
                },
                get_solarSystemLighting: function() {
                  return this._solarSystemLighting;
                },
                get_solarSystemScale: function() {
                  return this._solarSystemScale;
                },
                get_actualPlanetScale: function() {
                  return this._actualPlanetScale;
                },
                get_fovCamera: function() {
                  return this._fovCamera;
                },
                get_fovEyepiece: function() {
                  return this._fovEyepiece;
                },
                get_fovTelescope: function() {
                  return this._fovTelescope;
                },
                get_locationAltitude: function() {
                  return this._hasLocation ? this._locationAltitude : a.Settings.get_current().get_locationAltitude();
                },
                get_locationLat: function() {
                  return this._hasLocation ? this._locationLat : a.Settings.get_current().get_locationLat();
                },
                get_locationLng: function() {
                  return this._hasLocation ? this._locationLng : a.Settings.get_current().get_locationLng();
                },
                get_showClouds: function() {
                  return this._showClouds;
                },
                get_showConstellationBoundries: function() {
                  return this._showConstellationBoundries;
                },
                get_showConstellationFigures: function() {
                  return this._showConstellationFigures;
                },
                get_showConstellationSelection: function() {
                  return this._showConstellationSelection;
                },
                get_showEcliptic: function() {
                  return this._showEcliptic;
                },
                get_showElevationModel: function() {
                  return this._showElevationModel;
                },
                get_showFieldOfView: function() {
                  return this._showFieldOfView;
                },
                get_showGrid: function() {
                  return this._showGrid;
                },
                get_showHorizon: function() {
                  return this._showHorizon;
                },
                get_showHorizonPanorama: function() {
                  return this._showHorizonPanorama;
                },
                get_showMoonsAsPointSource: function() {
                  return this._showMoonsAsPointSource;
                },
                get_showSolarSystem: function() {
                  return this._showSolarSystem;
                },
                get_localHorizonMode: function() {
                  return this._localHorizonMode;
                },
                get_galacticMode: function() {
                  return this._galacticMode;
                },
                get_thumbnail: function() {
                  return this._target != null && this._thumbnail == null ? null : this._thumbnail;
                },
                set_thumbnail: function(T) {
                  return this._thumbnail = T, this._owner != null && this._owner.set_tourDirty(!0), T;
                },
                get_overlays: function() {
                  return this._overlays;
                },
                get_musicTrack: function() {
                  return this._musicTrack;
                },
                set_musicTrack: function(T) {
                  return this._musicTrack !== T && (this._musicTrack = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                get_voiceTrack: function() {
                  return this._voiceTrack;
                },
                set_voiceTrack: function(T) {
                  return this._voiceTrack !== T && (this._voiceTrack = T, this._owner != null && this._owner.set_tourDirty(!0)), T;
                },
                addOverlay: function(T) {
                  T != null && (T.set_owner(this), this._overlays.push(T), this._owner != null && this._owner.set_tourDirty(!0));
                },
                removeOverlay: function(T) {
                  t.ss.remove(this._overlays, T), this._owner != null && this._owner.set_tourDirty(!0);
                },
                cleanUp: function() {
                  for (var T = t.ss.enumerate(this.get_overlays()); T.moveNext(); ) {
                    var w = T.current;
                    w.cleanUp();
                  }
                  this._voiceTrack != null && this._voiceTrack.cleanUp(), this._musicTrack != null && this._musicTrack.cleanUp();
                },
                sendToBack: function(T) {
                  t.ss.remove(this._overlays, T), this._overlays.splice(0, 0, T), this._owner != null && this._owner.set_tourDirty(!0);
                },
                bringToFront: function(T) {
                  t.ss.remove(this._overlays, T), this._overlays.push(T), this._owner != null && this._owner.set_tourDirty(!0);
                },
                bringForward: function(T) {
                  var w = this._overlays.indexOf(T);
                  w < this._overlays.length - 1 && (t.ss.remove(this._overlays, T), this._overlays.splice(w + 1, 0, T)), this._owner != null && this._owner.set_tourDirty(!0);
                },
                sendBackward: function(T) {
                  var w = this._overlays.indexOf(T);
                  w > 0 && (t.ss.remove(this._overlays, T), this._overlays.splice(w - 1, 0, T)), this._owner != null && this._owner.set_tourDirty(!0);
                },
                getNextOverlay: function(T) {
                  if (T == null)
                    return this._overlays.length > 0 ? this._overlays[0] : null;
                  var w = this._overlays.indexOf(T);
                  return w < this._overlays.length - 1 ? this._overlays[w + 1] : this._overlays[0];
                },
                getPerviousOverlay: function(T) {
                  if (T == null)
                    return this._overlays.length > 0 ? this._overlays[0] : null;
                  var w = this._overlays.indexOf(T);
                  return w > 0 ? this._overlays[w - 1] : this._overlays[this._overlays.length - 1];
                },
                getOverlayById: function(T) {
                  for (var w = t.ss.enumerate(this._overlays); w.moveNext(); ) {
                    var f = w.current;
                    if (f.id === T)
                      return f;
                  }
                  return null;
                },
                get_tourStopThumbnailFilename: function() {
                  return t.ss.format("{0}.thumb.png", this._id);
                },
                _saveToXml: function(T, w) {
                  w && this._thumbnail != null, T._writeStartElement("TourStop"), T._writeAttributeString("Id", this._id), T._writeAttributeString("Name", this._name), T._writeAttributeString("Description", this._description), T._writeAttributeString("Thumbnail", this._thumbnailString), T._writeAttributeString("Duration", r.Util.xmlDuration(this._duration)), T._writeAttributeString("Master", this._masterSlide.toString()), T._writeAttributeString("TransitionType", n.Enums.toXml("TransitionType", this._transition)), T._writeAttributeString("TransitionTime", this._transitionTime.toString()), T._writeAttributeString("TransitionOutTime", this._transitionOutTime.toString()), T._writeAttributeString("TransitionHoldTime", this._transitionHoldTime.toString()), T._writeAttributeString("NextSlide", this._nextSlide), T._writeAttributeString("InterpolationType", n.Enums.toXml("InterpolationType", this._interpolationType)), T._writeAttributeString("HasLocation", this._hasLocation.toString()), this._hasLocation && (T._writeAttributeString("LocationAltitude", this._locationAltitude.toString()), T._writeAttributeString("LocationLat", this._locationLat.toString()), T._writeAttributeString("LocationLng", this._locationLng.toString())), T._writeAttributeString("HasTime", this._hasTime.toString()), this._hasTime && (T._writeAttributeString("StartTime", r.Util.xmlDate(this._startTime)), T._writeAttributeString("EndTime", r.Util.xmlDate(this._endTime))), T._writeAttributeString("ActualPlanetScale", this._actualPlanetScale.toString()), T._writeAttributeString("ShowClouds", this._showClouds.toString()), T._writeAttributeString("EarthCutawayView", this._earthCutawayView.toString()), T._writeAttributeString("ShowConstellationBoundries", this._showConstellationBoundries.toString()), T._writeAttributeString("ShowConstellationFigures", this._showConstellationFigures.toString()), T._writeAttributeString("ShowConstellationSelection", this._showConstellationSelection.toString()), T._writeAttributeString("ShowEcliptic", this._showEcliptic.toString()), T._writeAttributeString("EclipticColor", this._eclipticColor.save()), T._writeAttributeString("ShowElevationModel", this._showElevationModel.toString()), this._showFieldOfView = !1, T._writeAttributeString("ShowFieldOfView", this._showFieldOfView.toString()), T._writeAttributeString("ShowGrid", this._showGrid.toString()), T._writeAttributeString("ShowHorizon", this._showHorizon.toString()), T._writeAttributeString("ShowHorizonPanorama", this._showHorizonPanorama.toString()), T._writeAttributeString("ShowMoonsAsPointSource", this._showMoonsAsPointSource.toString()), T._writeAttributeString("ShowSolarSystem", this._showSolarSystem.toString()), T._writeAttributeString("FovTelescope", this._fovTelescope.toString()), T._writeAttributeString("FovEyepiece", this._fovEyepiece.toString()), T._writeAttributeString("FovCamera", this._fovCamera.toString()), T._writeAttributeString("LocalHorizonMode", this._localHorizonMode.toString()), T._writeAttributeString("GalacticMode", this._galacticMode.toString()), T._writeAttributeString("FadeInOverlays", this._fadeInOverlays.toString()), T._writeAttributeString("SolarSystemStars", this._solarSystemStars.toString()), T._writeAttributeString("SolarSystemMilkyWay", this._solarSystemMilkyWay.toString()), T._writeAttributeString("SolarSystemCosmos", this._solarSystemCosmos.toString()), T._writeAttributeString("SolarSystemCMB", this._solarSystemCMB.toString()), T._writeAttributeString("SolarSystemOrbits", this._solarSystemOrbits.toString()), T._writeAttributeString("SolarSystemMinorOrbits", this._solarSystemMinorOrbits.toString()), T._writeAttributeString("SolarSystemOverlays", this._solarSystemOverlays.toString()), T._writeAttributeString("SolarSystemLighting", this._solarSystemLighting.toString()), T._writeAttributeString("ShowISSModel", this._showISSModel.toString()), T._writeAttributeString("SolarSystemScale", this._solarSystemScale.toString()), T._writeAttributeString("MinorPlanetsFilter", this._minorPlanetsFilter.toString()), T._writeAttributeString("PlanetOrbitsFilter", this._planetOrbitsFilter.toString()), T._writeAttributeString("SolarSystemMultiRes", this._solarSystemMultiRes.toString()), T._writeAttributeString("SolarSystemMinorPlanets", this._solarSystemMinorPlanets.toString()), T._writeAttributeString("SolarSystemPlanets", this._solarSystemPlanets.toString()), T._writeAttributeString("ShowEarthSky", this._showEarthSky.toString()), T._writeAttributeString("ShowEquatorialGridText", this.get_showEquatorialGridText().toString()), T._writeAttributeString("EquatorialGridColor", this.get_equatorialGridColor().save()), T._writeAttributeString("ShowGalacticGrid", this.get_showGalacticGrid().toString()), T._writeAttributeString("ShowGalacticGridText", this.get_showGalacticGridText().toString()), T._writeAttributeString("GalacticGridColor", this.get_galacticGridColor().save()), T._writeAttributeString("ShowEclipticGrid", this.get_showEclipticGrid().toString()), T._writeAttributeString("ShowEclipticGridText", this.get_showEclipticGridText().toString()), T._writeAttributeString("EclipticGridColor", this.get_eclipticGridColor().save()), T._writeAttributeString("ShowEclipticOverviewText", this.get_showEclipticOverviewText().toString()), T._writeAttributeString("ShowAltAzGrid", this.get_showAltAzGrid().toString()), T._writeAttributeString("ShowAltAzGridText", this.get_showAltAzGridText().toString()), T._writeAttributeString("AltAzGridColor", this.get_altAzGridColor().save()), T._writeAttributeString("ShowPrecessionChart", this.get_showPrecessionChart().toString()), T._writeAttributeString("PrecessionChartColor", this.get_precessionChartColor().save()), T._writeAttributeString("ConstellationPictures", this.get_showConstellationPictures().toString()), T._writeAttributeString("ConstellationsEnabled", this.get_constellationsEnabled()), T._writeAttributeString("ShowConstellationLabels", this.get_showConstellationLabels().toString()), T._writeAttributeString("ShowSkyOverlays", this.get_showSkyOverlays().toString()), T._writeAttributeString("ShowConstellations", this.get_showConstellations().toString()), T._writeAttributeString("ShowSkyNode", this.get_showSkyNode().toString()), T._writeAttributeString("ShowSkyGrids", this.get_showSkyGrids().toString()), T._writeAttributeString("SkyOverlaysIn3d", this.get_showSkyOverlaysIn3d().toString()), T._writeAttributeString("ConstellationFiguresFilter", this._constellationFiguresFilter.toString()), T._writeAttributeString("ConstellationBoundariesFilter", this._constellationBoundariesFilter.toString()), T._writeAttributeString("ConstellationNamesFilter", this._constellationNamesFilter.toString()), T._writeAttributeString("ConstellationArtFilter", this._constellationArtFilter.toString()), this._target._saveToXml(T, "Place"), this._endTarget != null && this._endTarget._saveToXml(T, "EndTarget"), T._writeStartElement("Overlays");
                  for (var f = t.ss.enumerate(this._overlays); f.moveNext(); ) {
                    var R = f.current;
                    R.saveToXml(T, !1);
                  }
                  T._writeEndElement(), this._musicTrack != null && (T._writeStartElement("MusicTrack"), this._musicTrack.saveToXml(T, !1), T._writeEndElement()), this._voiceTrack != null && (T._writeStartElement("VoiceTrack"), this._voiceTrack.saveToXml(T, !1), T._writeEndElement()), this._writeLayerList(T), T._writeEndElement();
                },
                _writeLayerList: function(T) {
                  if (t.ss.keyCount(this.layers) > 0) {
                    T._writeStartElement("VisibleLayers");
                    for (var w = t.ss.enumerate(t.ss.keys(this.layers)); w.moveNext(); ) {
                      var f = w.current, R = this.layers[f];
                      T._writeStartElement("Layer"), T._writeAttributeString("StartOpacity", R.startOpacity.toString()), T._writeAttributeString("EndOpacity", R.endOpacity.toString());
                      var O = R.startParams.length;
                      T._writeAttributeString("ParamCount", O.toString());
                      for (var W = 0; W < O; W++)
                        T._writeAttributeString(t.ss.format("StartParam{0}", W), R.startParams[W].toString()), T._writeAttributeString(t.ss.format("EndParam{0}", W), R.endParams[W].toString());
                      T._writeValue(R.id.toString()), T._writeEndElement();
                    }
                    T._writeEndElement();
                  }
                },
                _addFilesToCabinet: function(T, w) {
                  if (this._thumbnail != null) {
                    var f = t.ss.format("{0}.thumb.png", this._id), R = this._owner.getFileBlob(f);
                    T.addFile(this._owner.get_workingDirectory() + f, R);
                  }
                  w || (this._musicTrack != null && this._musicTrack.addFilesToCabinet(T), this._voiceTrack != null && this._voiceTrack.addFilesToCabinet(T));
                  for (var O = t.ss.enumerate(this._overlays); O.moveNext(); ) {
                    var W = O.current;
                    W.addFilesToCabinet(T);
                  }
                },
                getNextDefaultName: function(T) {
                  for (var w = 1, f = t.ss.enumerate(this._overlays); f.moveNext(); ) {
                    var R = f.current;
                    if (t.ss.startsWith(R.get_name(), T)) {
                      var O = 0;
                      try {
                        O = parseInt(R.get_name().substr(T.length));
                      } catch {
                      }
                      O >= w && (w = O + 1);
                    }
                  }
                  return t.ss.format("{0} {1}", T, w);
                },
                _loadLayerList: function(T) {
                  for (var w = t.ss.enumerate(T.childNodes); w.moveNext(); ) {
                    var f = w.current;
                    if (f.nodeName === "Layer") {
                      var R = new m(), O = f.innerHTML;
                      R.id = V.Guid.fromString(O), R.startOpacity = parseFloat(f.attributes.getNamedItem("StartOpacity").nodeValue), R.endOpacity = parseFloat(f.attributes.getNamedItem("EndOpacity").nodeValue);
                      var W = 0;
                      f.attributes.getNamedItem("ParamCount") != null && (W = parseInt(f.attributes.getNamedItem("ParamCount").nodeValue)), R.startParams = new Array(W), R.endParams = new Array(W), R.frameParams = new Array(W);
                      for (var N = 0; N < W; N++)
                        R.startParams[N] = parseFloat(f.attributes.getNamedItem(t.ss.format("StartParam{0}", N)).nodeValue), R.endParams[N] = parseFloat(f.attributes.getNamedItem(t.ss.format("EndParam{0}", N)).nodeValue), R.frameParams[N] = R.startParams[N];
                      this.layers[R.id] = R;
                    }
                  }
                },
                _updateLayerOpacity: function() {
                  this.get_keyFramed() && this.updateTweenPosition();
                },
                get_showEquatorialGridText: function() {
                  return this._showEquatorialGridText;
                },
                set_showEquatorialGridText: function(T) {
                  return this._showEquatorialGridText = T, T;
                },
                get_showGalacticGrid: function() {
                  return this._showGalacticGrid;
                },
                set_showGalacticGrid: function(T) {
                  return this._showGalacticGrid = T, T;
                },
                get_showGalacticGridText: function() {
                  return this._showGalacticGridText;
                },
                set_showGalacticGridText: function(T) {
                  return this._showGalacticGridText = T, T;
                },
                get_showEclipticGrid: function() {
                  return this._showEclipticGrid;
                },
                set_showEclipticGrid: function(T) {
                  return this._showEclipticGrid = T, T;
                },
                get_showEclipticGridText: function() {
                  return this._showEclipticGridText;
                },
                set_showEclipticGridText: function(T) {
                  return this._showEclipticGridText = T, T;
                },
                get_showEclipticOverviewText: function() {
                  return this._showEclipticOverviewText;
                },
                set_showEclipticOverviewText: function(T) {
                  return this._showEclipticOverviewText = T, T;
                },
                get_showAltAzGrid: function() {
                  return this._showAltAzGrid;
                },
                set_showAltAzGrid: function(T) {
                  return this._showAltAzGrid = T, T;
                },
                get_showAltAzGridText: function() {
                  return this._showAltAzGridText;
                },
                set_showAltAzGridText: function(T) {
                  return this._showAltAzGridText = T, T;
                },
                get_showPrecessionChart: function() {
                  return this._showPrecessionChart;
                },
                set_showPrecessionChart: function(T) {
                  return this._showPrecessionChart = T, T;
                },
                get_showConstellationPictures: function() {
                  return this._showConstellationPictures;
                },
                set_showConstellationPictures: function(T) {
                  return this._showConstellationPictures = T, T;
                },
                get_showConstellationLabels: function() {
                  return this._showConstellationLabels;
                },
                set_showConstellationLabels: function(T) {
                  return this._showConstellationLabels = T, T;
                },
                get_solarSystemCMB: function() {
                  return this._solarSystemCMB;
                },
                set_solarSystemCMB: function(T) {
                  return this._solarSystemCMB = T, T;
                },
                get_solarSystemMinorPlanets: function() {
                  return this._solarSystemMinorPlanets;
                },
                set_solarSystemMinorPlanets: function(T) {
                  return this._solarSystemMinorPlanets = T, T;
                },
                get_solarSystemPlanets: function() {
                  return this._solarSystemPlanets;
                },
                set_solarSystemPlanets: function(T) {
                  return this._solarSystemPlanets = T, T;
                },
                get_showEarthSky: function() {
                  return this._showEarthSky;
                },
                set_showEarthSky: function(T) {
                  return this._showEarthSky = T, T;
                },
                get_solarSystemMinorOrbits: function() {
                  return this._solarSystemMinorOrbits;
                },
                set_solarSystemMinorOrbits: function(T) {
                  return this._solarSystemMinorOrbits = T, T;
                },
                get_constellationsEnabled: function() {
                  return this._constellationsEnabled;
                },
                set_constellationsEnabled: function(T) {
                  return this._constellationsEnabled = T, T;
                },
                get_constellationFiguresFilter: function() {
                  return this._constellationFiguresFilter;
                },
                set_constellationFiguresFilter: function(T) {
                  return this._constellationFiguresFilter = T, T;
                },
                get_constellationBoundariesFilter: function() {
                  return this._constellationBoundariesFilter;
                },
                set_constellationBoundariesFilter: function(T) {
                  return this._constellationBoundariesFilter = T, T;
                },
                get_constellationNamesFilter: function() {
                  return this._constellationNamesFilter;
                },
                set_constellationNamesFilter: function(T) {
                  return this._constellationNamesFilter = T, T;
                },
                get_constellationArtFilter: function() {
                  return this._constellationArtFilter;
                },
                set_constellationArtFilter: function(T) {
                  return this._constellationArtFilter = T, T;
                },
                get_showSkyOverlays: function() {
                  return this._showSkyOverlays;
                },
                set_showSkyOverlays: function(T) {
                  return this._showSkyOverlays = T, T;
                },
                get_showConstellations: function() {
                  return this._showConstellations;
                },
                set_showConstellations: function(T) {
                  return this._showConstellations = T, T;
                },
                get_showSkyNode: function() {
                  return this._showSkyNode;
                },
                set_showSkyNode: function(T) {
                  return this._showSkyNode = T, T;
                },
                get_showSkyGrids: function() {
                  return this._showSkyGrids;
                },
                set_showSkyGrids: function(T) {
                  return this._showSkyGrids = T, T;
                },
                get_showSkyOverlaysIn3d: function() {
                  return this._showSkyOverlaysIn3d;
                },
                set_showSkyOverlaysIn3d: function(T) {
                  return this._showSkyOverlaysIn3d = T, T;
                },
                get_earthCutawayView: function() {
                  return this._earthCutawayView;
                },
                set_earthCutawayView: function(T) {
                  return this._earthCutawayView = T, T;
                },
                get_showISSModel: function() {
                  return this._showISSModel;
                },
                set_showISSModel: function(T) {
                  return this._showISSModel = T, T;
                },
                get_milkyWayModel: function() {
                  return this._milkyWayModel;
                },
                set_milkyWayModel: function(T) {
                  return this._milkyWayModel = T, T;
                },
                get_minorPlanetsFilter: function() {
                  return this._minorPlanetsFilter;
                },
                set_minorPlanetsFilter: function(T) {
                  return this._minorPlanetsFilter = T, T;
                },
                get_planetOrbitsFilter: function() {
                  return this._planetOrbitsFilter;
                },
                set_planetOrbitsFilter: function(T) {
                  return this._planetOrbitsFilter = T, T;
                },
                getSetting: function(T) {
                  return T === 17 ? new a.SettingParameter(!0, this.faderOpacity, !!this.faderOpacity, null) : new a.SettingParameter(!1, 1, !1, null);
                },
                get_eclipticGridColor: function() {
                  return this._eclipticGridColor;
                },
                set_eclipticGridColor: function(T) {
                  return this._eclipticGridColor = T, T;
                },
                get_galacticGridColor: function() {
                  return this._galacticGridColor;
                },
                set_galacticGridColor: function(T) {
                  return this._galacticGridColor = T, T;
                },
                get_altAzGridColor: function() {
                  return this._altAzGridColor;
                },
                set_altAzGridColor: function(T) {
                  return this._altAzGridColor = T, T;
                },
                get_precessionChartColor: function() {
                  return this._precessionChartColor;
                },
                set_precessionChartColor: function(T) {
                  return this._precessionChartColor = T, T;
                },
                get_eclipticColor: function() {
                  return this._eclipticColor;
                },
                set_eclipticColor: function(T) {
                  return this._eclipticColor = T, T;
                },
                get_equatorialGridColor: function() {
                  return this._equatorialGridColor;
                },
                set_equatorialGridColor: function(T) {
                  return this._equatorialGridColor = T, T;
                },
                get_constellationLabelsHeight: function() {
                  return this._constellationLabelsHeight;
                },
                set_constellationLabelsHeight: function(T) {
                  return this._constellationLabelsHeight = T, T;
                }
              };
              (0, n.registerType)("TourStop", [E, v, null, l.ISettings]);
              function m() {
                this.id = V.Guid.newGuid(), this.startOpacity = 1, this.endOpacity = 1, this.frameOpacity = 1, this.startParams = new Array(0), this.endParams = new Array(0), this.frameParams = new Array(0);
              }
              var L = {};
              (0, n.registerType)("LayerInfo", [m, L, null]);
              function A(T, w) {
                this._undoXml = "", this._redoXml = "", this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._currentIndex = w.get_currentTourstopIndex(), this._actionText = T, this._targetTour = w, this._undoXml = E.getXmlText(w.get_currentTourStop()), this._targetTour.set_tourDirty(!0);
              }
              var K = {
                get_actionText: function() {
                  return this._actionText;
                },
                set_actionText: function(T) {
                  return this._actionText = T, T;
                },
                undo: function() {
                  var T = this._targetTour.get_tourStops()[this._currentIndex], w = new DOMParser(), f = w.parseFromString(this._undoXml, "text/xml"), R = r.Util.selectSingleNode(f, "TourStop");
                  this._targetTour.get_tourStops()[this._currentIndex] = E._fromXml(this._targetTour, R), this._targetTour.set_currentTourstopIndex(this._currentIndex), t.ss.emptyString(this._redoXml) && (this._redoXml = E.getXmlText(T)), this._targetTour.set_tourDirty(!0);
                },
                redo: function() {
                  var T = new DOMParser(), w = T.parseFromString(this._redoXml, "text/xml"), f = r.Util.selectSingleNode(w, "TourStop");
                  this._targetTour.get_tourStops()[this._currentIndex] = E._fromXml(this._targetTour, f), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
                },
                toString: function() {
                  return this._actionText;
                }
              };
              (0, n.registerType)("UndoTourStopChange", [A, K, null, l.IUndoStep]);
            }
          ),
          /***/
          "./esm/tours/undo.js": (
            /*!***************************!*\
              !*** ./esm/tours/undo.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Undo: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                UndoStep: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                UndoTourPropertiesChange: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                UndoTourSlidelistChange: () => (
                  /* binding */
                  g
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../interfaces.js */
                "./esm/interfaces.js"
              ), _ = i(
                /*! ../util.js */
                "./esm/util.js"
              );
              function r() {
              }
              r._undoStack = new t.ss.Stack(), r._redoStack = new t.ss.Stack(), r.clear = function() {
                r._undoStack = new t.ss.Stack(), r._redoStack = new t.ss.Stack();
              }, r.push = function(y) {
                r._undoStack.push(y), r._redoStack = new t.ss.Stack();
              }, r.peekActionString = function() {
                return r._undoStack.count > 0 ? r._undoStack.peek().toString() : _.Language.getLocalizedText(551, "Nothing to Undo");
              }, r.peekRedoActionString = function() {
                return r._redoStack.count > 0 ? r._redoStack.peek().toString() : "";
              }, r.peekAction = function() {
                return r._undoStack.count > 0;
              }, r.peekRedoAction = function() {
                return r._redoStack.count > 0;
              }, r.stepBack = function() {
                var y = r._undoStack.pop();
                y.undo(), r._redoStack.push(y);
              }, r.stepForward = function() {
                var y = r._redoStack.pop();
                y.redo(), r._undoStack.push(y);
              };
              var o = {};
              (0, n.registerType)("Undo", [r, o, null]);
              function c() {
              }
              var l = {
                undo: function() {
                },
                redo: function() {
                },
                toString: function() {
                  return _.Language.getLocalizedText(551, "Nothing to Undo");
                }
              };
              (0, n.registerType)("UndoStep", [c, l, null, e.IUndoStep]);
              function g(y, C) {
                this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._undoList = [];
                for (var E = 0; E < C.get_tourStops().length; E++)
                  this._undoList.push(C.get_tourStops()[E]);
                this._currentIndex = C.get_currentTourstopIndex(), this._actionText = y, this._targetTour = C, this._targetTour.set_tourDirty(!0);
              }
              var a = {
                get_actionText: function() {
                  return this._actionText;
                },
                set_actionText: function(y) {
                  return this._actionText = y, y;
                },
                undo: function() {
                  this._redoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._undoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
                },
                redo: function() {
                  this._undoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._redoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
                },
                toString: function() {
                  return this._actionText;
                }
              };
              (0, n.registerType)("UndoTourSlidelistChange", [g, a, null, e.IUndoStep]);
              function b(y, C) {
                this._actionText = "", this._targetTour = null, this._undoDomeMode = !1, this._undoLevel = 0, this._redoDomeMode = !1, this._redoLevel = 0, this._undoTitle = C.get_title(), this._undoAuthor = C.get_author(), this._undoAuthorEmail = C.get_authorEmail(), this._undoDescription = C.get_description(), this._undoAuthorImage = C.get_authorImage(), this._undoOrganizationUrl = C.get_organizationUrl(), this._undoOrgName = C.get_orgName(), this._undoKeywords = C.get_keywords(), this._undoTaxonomy = C.get_taxonomy(), this._undoLevel = C.get_level(), this._actionText = y, this._targetTour = C, this._targetTour.set_tourDirty(!0);
              }
              var V = {
                get_actionText: function() {
                  return this._actionText;
                },
                set_actionText: function(y) {
                  return this._actionText = y, y;
                },
                undo: function() {
                  this._redoTitle = this._targetTour.get_title(), this._redoAuthor = this._targetTour.get_author(), this._redoAuthorEmail = this._targetTour.get_authorEmail(), this._redoDescription = this._targetTour.get_description(), this._redoAuthorImage = this._targetTour.get_authorImage(), this._redoOrganizationUrl = this._targetTour.get_organizationUrl(), this._redoOrgName = this._targetTour.get_orgName(), this._redoKeywords = this._targetTour.get_keywords(), this._redoTaxonomy = this._targetTour.get_taxonomy(), this._redoLevel = this._targetTour.get_level(), this._targetTour.set_title(this._undoTitle), this._targetTour.set_author(this._undoAuthor), this._targetTour.set_authorEmail(this._undoAuthorEmail), this._targetTour.set_description(this._undoDescription), this._targetTour.set_authorImage(this._undoAuthorImage), this._targetTour.set_organizationUrl(this._undoOrganizationUrl), this._targetTour.set_orgName(this._undoOrgName), this._targetTour.set_keywords(this._undoKeywords), this._targetTour.set_taxonomy(this._undoTaxonomy), this._targetTour.set_level(this._undoLevel), this._targetTour.set_tourDirty(!0);
                },
                redo: function() {
                  this._targetTour.set_title(this._redoTitle), this._targetTour.set_author(this._redoAuthor), this._targetTour.set_authorEmail(this._redoAuthorEmail), this._targetTour.set_description(this._redoDescription), this._targetTour.set_authorImage(this._redoAuthorImage), this._targetTour.set_organizationUrl(this._redoOrganizationUrl), this._targetTour.set_orgName(this._redoOrgName), this._targetTour.set_keywords(this._redoKeywords), this._targetTour.set_taxonomy(this._redoTaxonomy), this._targetTour.set_level(this._redoLevel), this._targetTour.set_tourDirty(!0);
                },
                toString: function() {
                  return this._actionText;
                }
              };
              (0, n.registerType)("UndoTourPropertiesChange", [b, V, null, e.IUndoStep]);
            }
          ),
          /***/
          "./esm/triangle.js": (
            /*!*************************!*\
              !*** ./esm/triangle.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Triangle: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              );
              function e() {
                this.a = -1, this.b = -1, this.c = -1;
              }
              e.create = function(r, o, c) {
                var l = new e();
                return l.a = r, l.b = o, l.c = c, l;
              };
              var _ = {
                subDivide: function(r, o) {
                  var c = n.Vector3d.lerp(o[this.b].position, o[this.c].position, 0.5), l = n.Vector3d.lerp(o[this.c].position, o[this.a].position, 0.5), g = n.Vector3d.lerp(o[this.a].position, o[this.b].position, 0.5), a = n.Vector2d.lerp(n.Vector2d.create(o[this.b].tu, o[this.b].tv), n.Vector2d.create(o[this.c].tu, o[this.c].tv), 0.5), b = n.Vector2d.lerp(n.Vector2d.create(o[this.c].tu, o[this.c].tv), n.Vector2d.create(o[this.a].tu, o[this.a].tv), 0.5), V = n.Vector2d.lerp(n.Vector2d.create(o[this.a].tu, o[this.a].tv), n.Vector2d.create(o[this.b].tu, o[this.b].tv), 0.5);
                  c.normalize(), l.normalize(), g.normalize();
                  var y = o.length, C = o.length + 1, E = o.length + 2;
                  o.push(n.PositionTexture.createPosRaw(c, a.x, a.y)), o.push(n.PositionTexture.createPosRaw(l, b.x, b.y)), o.push(n.PositionTexture.createPosRaw(g, V.x, V.y)), r.push(e.create(this.a, E, C)), r.push(e.create(this.b, y, E)), r.push(e.create(this.c, C, y)), r.push(e.create(y, C, E));
                },
                subDivideNoNormalize: function(r, o) {
                  var c = n.Vector3d.lerp(o[this.b].position, o[this.c].position, 0.5), l = n.Vector3d.lerp(o[this.c].position, o[this.a].position, 0.5), g = n.Vector3d.lerp(o[this.a].position, o[this.b].position, 0.5), a = n.Vector2d.lerp(n.Vector2d.create(o[this.b].tu, o[this.b].tv), n.Vector2d.create(o[this.c].tu, o[this.c].tv), 0.5), b = n.Vector2d.lerp(n.Vector2d.create(o[this.c].tu, o[this.c].tv), n.Vector2d.create(o[this.a].tu, o[this.a].tv), 0.5), V = n.Vector2d.lerp(n.Vector2d.create(o[this.a].tu, o[this.a].tv), n.Vector2d.create(o[this.b].tu, o[this.b].tv), 0.5), y = o.length, C = o.length + 1, E = o.length + 2;
                  o.push(n.PositionTexture.createPosRaw(c, a.x, a.y)), o.push(n.PositionTexture.createPosRaw(l, b.x, b.y)), o.push(n.PositionTexture.createPosRaw(g, V.x, V.y)), r.push(e.create(this.a, E, C)), r.push(e.create(this.b, y, E)), r.push(e.create(this.c, C, y)), r.push(e.create(y, C, E));
                }
              };
              (0, t.registerType)("Triangle", [e, _, null]);
            }
          ),
          /***/
          "./esm/typesystem.js": (
            /*!***************************!*\
              !*** ./esm/typesystem.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Enums: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                registerEnum: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                registerType: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              );
              const n = t.ss.createRegistry("wwtlib"), e = {};
              function _(l, g) {
                t.ss.createType(l, g, n);
              }
              function r(l, g) {
                e[l] = g;
              }
              function o() {
              }
              o.parse = function(l, g) {
                if (g === "Default" && (g = "DefaultV"), g === "0")
                  return 0;
                var a = g.substr(0, 1).toLowerCase() + g.substr(1);
                return e[l][a];
              }, o.toXml = function(l, g) {
                var a = "0", b = Object.keys(e[l]);
                for (var V in b)
                  if (e[l][b[V]] == g) {
                    a = b[V];
                    break;
                  }
                var y = a, C = y.substr(0, 1).toUpperCase() + y.substr(1);
                return C === "DefaultV" && (C = "Default"), C;
              }, _("Enums", [o, {}, null]);
            }
          ),
          /***/
          "./esm/ui_tools.js": (
            /*!*************************!*\
              !*** ./esm/ui_tools.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                UiTools: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              );
              function e() {
              }
              e.kilometersPerAu = 149598e3, e.auPerParsec = 206264.806, e.auPerLightYear = 63239.6717, e.ssmUnitConversion = 370, e.gamma = function(r, o) {
                return Math.min(255, t.ss.truncate(255 * Math.pow(r / 255, 1 / o) + 0.5));
              }, e.getNamesStringFromArray = function(r) {
                for (var o = "", c = "", l = t.ss.enumerate(r); l.moveNext(); ) {
                  var g = l.current;
                  o += c, o += g, c = ";";
                }
                return o;
              }, e.solarSystemToMeters = function(r) {
                return r * 149598e3 * 370;
              }, e.metersToSolarSystemDistance = function(r) {
                return r / 370 * 149598e3;
              }, e.metersToZoom = function(r) {
                return (r / 1e3 / 370 - 1e-6) / 4 * 9;
              }, e.formatDistance = function(r) {
                if (r < 0.1) {
                  var o = r * 149598e3;
                  if (o < 10) {
                    var c = t.ss.truncate(o * 1e3);
                    return t.ss.format("{0} m", c);
                  } else
                    return o = t.ss.truncate(o), t.ss.format("{0} km", o);
                } else if (r < 10) {
                  var l = t.ss.truncate(r * 10) / 10;
                  return t.ss.format("{0} au", l);
                } else if (r < 6323.96717) {
                  var l = t.ss.truncate(r);
                  return t.ss.format("{0} au", l);
                } else if (r < 632396.717) {
                  var g = t.ss.truncate(r * 10 / 63239.6717) / 10;
                  return t.ss.format("{0} ly", g);
                } else if (r < 63239671700) {
                  var g = t.ss.truncate(r / 63239.6717);
                  return t.ss.format("{0} ly", g);
                } else if (r < 206264806e4) {
                  var a = t.ss.truncate(r * 10 / 206264806e3) / 10;
                  return t.ss.format("{0} Mpc", a);
                } else if (r < 206264806e6) {
                  var a = t.ss.truncate(r / 206264806e3);
                  return t.ss.format("{0} Mpc", a);
                } else {
                  var a = t.ss.truncate(r * 10 / 206264806e6) / 10;
                  return t.ss.format("{0} Gpc", a);
                }
              }, e.formatDecimalHours = function(r) {
                var o = t.ss.now(), c = o.getTimezoneOffset() / 60;
                c = 0;
                for (var l = r - c + 0.0083333334; l > 24; )
                  l -= 24;
                for (; l < 0; )
                  l += 24;
                var g = t.ss.truncate(l), a = t.ss.truncate(l * 60 - g * 60), b = t.ss.truncate(l * 3600 - (g * 3600 + a * 60));
                return t.ss.format("{0}:{1}", g, a, b);
              }, e.splitString = function(r, o) {
                for (var c = [], l = 0, g = 0, a = 0, b = 0; g < r.length; ) {
                  if (r.substr(g, 1) === "(" && l++, r.substr(g, 1) === ")" && l--, g === r.length - 1) {
                    if (r.substr(g, 1) === o)
                      return c.push(r.substr(b, a)), c.push(""), c;
                    a++;
                  }
                  g === r.length - 1 || r.substr(g, 1) === o && o === "	" || !l && r.substr(g, 1) === o ? (c.push(r.substr(b, a)), b = g + 1, a = 0) : a++, g++;
                }
                return c;
              }, e.split = function(r, o) {
                for (var c = [], l = 0, g = 0, a = 0; l < r.length; )
                  l === r.length - 1 && g++, l === r.length - 1 || o.indexOf(r.substr(l, 1)) > -1 ? (c.push(r.substr(a, g)), a = l + 1, g = 0) : g++, l++;
                return c;
              }, e._beep = function() {
              };
              var _ = {};
              (0, n.registerType)("UiTools", [e, _, null]);
            }
          ),
          /***/
          "./esm/url_helpers.js": (
            /*!****************************!*\
              !*** ./esm/url_helpers.js ***!
              \****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                URLHelpers: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                URLRewriteMode: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), _ = {
                wwtFlagship: 0,
                // this host is worldwidetelescope.org or an equivalent
                localhost: 1,
                // this host is localhost or an equivalent
                neverProxy: 2,
                // this host is known to never need proxying
                tryNoProxy: 3,
                // none of the above, and we hope that we can get data from it without needing to use our proxy
                proxy: 4
                // none of the above, and we need to proxy it for HTTPS/CORS reasons
              }, r = {
                asIfAbsolute: 0,
                // act as if this URL is absolute even if it is missing a domain
                originRelative: 1
                // if this URL is relative, treat it as relative to the browser origin
              };
              (0, t.registerType)("URLRewriteMode", r), (0, t.registerEnum)("URLRewriteMode", r);
              function o() {
                switch (this._origin_protocol = typeof window > "u" ? "https:" : window.location.protocol, this._force_https = this._origin_protocol === "https:", this._origin_domain = typeof window > "u" ? "" : window.location.hostname, this._domain_handling = {}, this._domain_handling["worldwidetelescope.org"] = _.wwtFlagship, this._domain_handling["www.worldwidetelescope.org"] = _.wwtFlagship, this._domain_handling["cdn.worldwidetelescope.org"] = _.wwtFlagship, this._domain_handling["content.worldwidetelescope.org"] = _.wwtFlagship, this._domain_handling["beta.worldwidetelescope.org"] = _.wwtFlagship, this._domain_handling["beta-cdn.worldwidetelescope.org"] = _.wwtFlagship, this._domain_handling["wwtstaging.azurewebsites.net"] = _.wwtFlagship, this._domain_handling["wwtfiles.blob.core.windows.net"] = _.neverProxy, this._domain_handling["wwttiles.blob.core.windows.net"] = _.neverProxy, this._domain_handling["web.wwtassets.org"] = _.neverProxy, this._domain_handling["data1.wwtassets.org"] = _.neverProxy, this._domain_handling.localhost = _.localhost, this._domain_handling["127.0.0.1"] = _.localhost, this._origin_domain) {
                  case "worldwidetelescope.org":
                  case "www.worldwidetelescope.org":
                  case "cdn.worldwidetelescope.org":
                    this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
                    break;
                  case "beta.worldwidetelescope.org":
                  case "beta-cdn.worldwidetelescope.org":
                    this._core_static_baseurl = this._origin_protocol + "//beta-cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//beta.worldwidetelescope.org";
                    break;
                  default:
                    this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
                    break;
                }
                this._engine_asset_baseurl = this._origin_protocol + "//web.wwtassets.org/engine/assets", this._flagship_static_lcpaths = {}, this._flagship_static_lcpaths["/wwtweb/2massoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dembath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dss.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dusttoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthmerbath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/fixedaltitudedemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/g360.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4far.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4near.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galextoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettour.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettourfile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettours.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/glimpse.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/halphatoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem3.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/jupiter.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel1.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marshirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsmoc.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mipsgal.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moondem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moonoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoastdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/rasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/thumbnail.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tilesthumb.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/twomasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tychooct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/veblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/vlsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmap.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmsmoon.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmstoast.aspx"] = !0;
              }
              var c = {
                overrideAssetBaseurl: function(l) {
                  this._engine_asset_baseurl = l;
                },
                rewrite: function(l, g) {
                  var a = l.toLowerCase(), b, V;
                  if (n.ss.startsWith(a, "http://"))
                    b = "http:", V = l.substring(7);
                  else if (n.ss.startsWith(a, "https://"))
                    b = "https:", V = l.substring(8);
                  else if (n.ss.startsWith(a, "//"))
                    b = "", V = l.substring(2);
                  else {
                    if (n.ss.startsWith(a, "blob:"))
                      return l;
                    switch (g) {
                      case r.asIfAbsolute:
                      default:
                        b = "", V = l;
                        break;
                      case r.originRelative:
                        return l = new URL(l, window.location.href).toString(), this.rewrite(l, 0);
                    }
                  }
                  if (e.freestandingMode)
                    return l;
                  var y, C, E = V.indexOf("/");
                  E < 0 ? (y = V, C = "/") : (y = V.substring(0, E), C = V.substring(E));
                  var v = y.toLowerCase(), m = C.toLowerCase().split("?")[0];
                  n.ss.keyExists(this._domain_handling, v) || (n.ss.startsWith(v, "localhost:") || n.ss.startsWith(v, "127.0.0.1:") ? this._domain_handling[v] = _.localhost : this._domain_handling[v] = _.tryNoProxy);
                  var L = this._domain_handling[v];
                  switch (L) {
                    case _.localhost:
                      return l;
                    case _.neverProxy:
                    case _.tryNoProxy:
                    default:
                      return this._force_https && b !== "https:" ? "https://" + y + C : l;
                    case _.proxy:
                      return b || (l = "http://" + l), l = n.ss.replaceString(n.ss.replaceString(encodeURIComponent(l), "%7B", "{"), "%7D", "}"), this._core_dynamic_baseurl + "/webserviceproxy.aspx?targeturl=" + l;
                    case _.wwtFlagship:
                      var A = !1;
                      return (n.ss.startsWith(m, "/data/") || n.ss.keyExists(this._flagship_static_lcpaths, m) || n.ss.startsWith(m, "/content/") || n.ss.startsWith(m, "/engine/assets/")) && (A = !0), A ? this._core_static_baseurl + C : this._core_dynamic_baseurl + C;
                  }
                },
                // Call this when you have tried to load a url via XMLHttpRequest or
                // something along those lines, and the attempt has failed. We will mark the
                // domain as needing proxying, and will return a new proxy-enabled URL to try.
                // The exception is for flagship website URLs, which we know that the proxy
                // won't help with. For those, null is returned.
                activateProxy: function(l) {
                  if (e.freestandingMode)
                    return null;
                  var g = l.toLowerCase(), a;
                  n.ss.startsWith(g, "http://") ? a = l.substring(7) : n.ss.startsWith(g, "https://") ? a = l.substring(8) : n.ss.startsWith(g, "//") ? a = l.substring(2) : a = l;
                  var b, V = a.indexOf("/");
                  V < 0 ? b = a : b = a.substring(0, V).toLowerCase(), n.ss.keyExists(this._domain_handling, b) || (n.ss.startsWith(b, "localhost:") || n.ss.startsWith(b, "127.0.0.1:") ? this._domain_handling[b] = _.localhost : this._domain_handling[b] = _.tryNoProxy);
                  var y = this._domain_handling[b];
                  return y === _.wwtFlagship || y === _.neverProxy || y === _.localhost ? null : (this._domain_handling[b] = _.proxy, this.rewrite(l, 0));
                },
                engineAssetUrl: function(l) {
                  return n.ss.format("{0}/{1}", this._engine_asset_baseurl, l);
                },
                coreDynamicUrl: function(l) {
                  return n.ss.format("{0}/{1}", this._core_dynamic_baseurl, l);
                },
                coreStaticUrl: function(l) {
                  return n.ss.format("{0}/{1}", this._core_static_baseurl, l);
                }
              };
              (0, t.registerType)("URLHelpers", [o, c, null]), o.singleton = new o();
            }
          ),
          /***/
          "./esm/util.js": (
            /*!*********************!*\
              !*** ./esm/util.js ***!
              \*********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Cursor: () => (
                  /* binding */
                  C
                ),
                /* harmony export */
                Cursors: () => (
                  /* binding */
                  v
                ),
                /* harmony export */
                DialogResult: () => (
                  /* binding */
                  I
                ),
                /* harmony export */
                DistanceCalc: () => (
                  /* binding */
                  $
                ),
                /* harmony export */
                Guid: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                Keys: () => (
                  /* binding */
                  L
                ),
                /* harmony export */
                Language: () => (
                  /* binding */
                  V
                ),
                /* harmony export */
                Mouse: () => (
                  /* binding */
                  b
                ),
                /* harmony export */
                OverlayProperties: () => (
                  /* binding */
                  O
                ),
                /* harmony export */
                PopupColorPicker: () => (
                  /* binding */
                  f
                ),
                /* harmony export */
                PopupVolume: () => (
                  /* binding */
                  T
                ),
                /* harmony export */
                Rectangle: () => (
                  /* binding */
                  c
                ),
                /* harmony export */
                SelectLink: () => (
                  /* binding */
                  A
                ),
                /* harmony export */
                Util: () => (
                  /* reexport safe */
                  _.Util
                ),
                /* harmony export */
                getTileKey: () => (
                  /* binding */
                  N
                )
                /* harmony export */
              });
              var t = i(
                /*! uuid */
                "../node_modules/uuid/dist/esm-browser/v5.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), _ = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), r = i(
                /*! ./color.js */
                "./esm/color.js"
              ), o = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              );
              function c() {
                this.x = 0, this.y = 0, this.width = 0, this.height = 0;
              }
              c.create = function(x, P, d, U) {
                var F = new c();
                return F.x = x, F.y = P, F.width = d, F.height = U, F;
              };
              var l = {
                get_left: function() {
                  return this.x;
                },
                get_right: function() {
                  return this.x + this.width;
                },
                get_top: function() {
                  return this.y;
                },
                get_bottom: function() {
                  return this.y + this.height;
                },
                contains: function(x) {
                  return this._between(x.x, this.x, this.x + this.width) && this._between(x.y, this.y, this.y + this.height);
                },
                _between: function(x, P, d) {
                  return P > d ? !(x > P) && !(x < d) : !(x < P) && !(x > d);
                },
                copy: function() {
                  var x = new c();
                  return x.x = this.x, x.y = this.y, x.width = this.width, x.height = this.height, x;
                }
              };
              (0, n.registerType)("Rectangle", [c, l, null]);
              function g() {
                this._guid = g.create();
              }
              g.newGuid = function() {
                return new g();
              }, g.fromString = function(x) {
                var P = new g();
                return P._guid = e.ss.trim(x), P;
              }, g.create = function() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(x) {
                  var P = Math.random() * 16 | 0, d = x == "x" ? P : P & 3 | 8;
                  return d.toString(16);
                });
              }, g.createFrom = function(x) {
                var P = t.default(x, "1420736a-a637-40a7-813a-ba692e72204e");
                return g.fromString(P);
              };
              var a = {
                toString: function() {
                  return this._guid;
                }
              };
              (0, n.registerType)("Guid", [g, a, null]);
              function b() {
              }
              b.offsetX = function(x, P) {
                var d = 0, U = x, F = P;
                if (U.offsetParent != null)
                  do
                    d += U.offsetLeft;
                  while ((U = U.offsetParent) != null);
                return F.pageX - d;
              }, b.offsetY = function(x, P) {
                var d = 0, U = x, F = P;
                if (U.offsetParent != null)
                  do
                    d += U.offsetTop;
                  while ((U = U.offsetParent) != null);
                return F.pageY - d;
              }, (0, n.registerType)("Mouse", [b, null, null]);
              function V() {
              }
              V.getLocalizedText = function(x, P) {
                return P;
              };
              var y = {};
              (0, n.registerType)("Language", [V, y, null]);
              function C() {
              }
              C.get_position = function() {
                return new o.Vector2d();
              }, C.get_current = function() {
                return document.body.style.cursor;
              }, C.set_current = function(x) {
                return document.body.style.cursor = x, x;
              };
              var E = {};
              (0, n.registerType)("Cursor", [C, E, null]);
              function v() {
              }
              v.get_arrow = function() {
                return "default";
              }, v.get_cross = function() {
                return "crosshair";
              }, v.get_defaultV = function() {
                return "default";
              }, v.get_hand = function() {
                return "grab";
              }, v.get_help = function() {
                return "help";
              }, v.get_hSplit = function() {
                return "row-resize";
              }, v.get_iBeam = function() {
                return "text";
              }, v.get_no = function() {
                return "not-allowed";
              }, v.get_sizeAll = function() {
                return "help";
              }, v.get_sizeNESW = function() {
                return "nwse-resize";
              }, v.get_sizeNS = function() {
                return "ns-resize";
              }, v.get_sizeNWSE = function() {
                return "nwse-resize";
              }, v.get_sizeWE = function() {
                return "ew-resize";
              }, v.get_upArrow = function() {
                return "help";
              }, v.get_vSplit = function() {
                return "col-resize";
              }, v.get_waitCursor = function() {
                return "wait";
              };
              var m = {};
              (0, n.registerType)("Cursors", [v, m, null]);
              var L = {
                modifiers: -65536,
                none: 0,
                lButton: 1,
                rButton: 2,
                cancel: 3,
                mButton: 4,
                xButton1: 5,
                xButton2: 6,
                back: 8,
                tab: 9,
                lineFeed: 10,
                clearKey: 12,
                returnKey: 13,
                enter: 13,
                shiftKey: 16,
                controlKey: 17,
                menu: 18,
                pause: 19,
                capital: 20,
                capsLock: 20,
                kanaMode: 21,
                hanguelMode: 21,
                hangulMode: 21,
                junjaMode: 23,
                finalMode: 24,
                hanjaMode: 25,
                kanjiMode: 25,
                escape: 27,
                imeConvert: 28,
                imeNonconvert: 29,
                imeAccept: 30,
                imeAceept: 30,
                imeModeChange: 31,
                space: 32,
                prior: 33,
                pageUp: 33,
                next: 34,
                pageDown: 34,
                end: 35,
                home: 36,
                left: 37,
                up: 38,
                right: 39,
                down: 40,
                select: 41,
                print: 42,
                execute: 43,
                snapshot: 44,
                printScreen: 44,
                insertKey: 45,
                deleteKey: 46,
                help: 47,
                d0: 48,
                d1: 49,
                d2: 50,
                d3: 51,
                d4: 52,
                d5: 53,
                d6: 54,
                d7: 55,
                d8: 56,
                d9: 57,
                a: 65,
                b: 66,
                c: 67,
                d: 68,
                e: 69,
                f: 70,
                g: 71,
                h: 72,
                i: 73,
                j: 74,
                k: 75,
                l: 76,
                m: 77,
                n: 78,
                o: 79,
                p: 80,
                q: 81,
                r: 82,
                s: 83,
                t: 84,
                u: 85,
                v: 86,
                w: 87,
                x: 88,
                y: 89,
                z: 90,
                lWin: 91,
                rWin: 92,
                apps: 93,
                sleep: 95,
                numPad0: 96,
                numPad1: 97,
                numPad2: 98,
                numPad3: 99,
                numPad4: 100,
                numPad5: 101,
                numPad6: 102,
                numPad7: 103,
                numPad8: 104,
                numPad9: 105,
                multiply: 106,
                add: 107,
                separator: 108,
                subtract: 109,
                decimal: 110,
                divide: 111,
                f1: 112,
                f2: 113,
                f3: 114,
                f4: 115,
                f5: 116,
                f6: 117,
                f7: 118,
                f8: 119,
                f9: 120,
                f10: 121,
                f11: 122,
                f12: 123,
                f13: 124,
                f14: 125,
                f15: 126,
                f16: 127,
                f17: 128,
                f18: 129,
                f19: 130,
                f20: 131,
                f21: 132,
                f22: 133,
                f23: 134,
                f24: 135,
                numLock: 144,
                scroll: 145,
                lShiftKey: 160,
                rShiftKey: 161,
                lControlKey: 162,
                rControlKey: 163,
                lMenu: 164,
                rMenu: 165,
                browserBack: 166,
                browserForward: 167,
                browserRefresh: 168,
                browserStop: 169,
                browserSearch: 170,
                browserFavorites: 171,
                browserHome: 172,
                volumeMute: 173,
                volumeDown: 174,
                volumeUp: 175,
                mediaNextTrack: 176,
                mediaPreviousTrack: 177,
                mediaStop: 178,
                mediaPlayPause: 179,
                launchMail: 180,
                selectMedia: 181,
                launchApplication1: 182,
                launchApplication2: 183,
                oemSemicolon: 186,
                oem1: 186,
                oemplus: 187,
                oemcomma: 188,
                oemMinus: 189,
                oemPeriod: 190,
                oemQuestion: 191,
                oem2: 191,
                oemtilde: 192,
                oem3: 192,
                oemOpenBrackets: 219,
                oem4: 219,
                oemPipe: 220,
                oem5: 220,
                oemCloseBrackets: 221,
                oem6: 221,
                oemQuotes: 222,
                oem7: 222,
                oem8: 223,
                oemBackslash: 226,
                oem102: 226,
                processKey: 229,
                packet: 231,
                attn: 246,
                crsel: 247,
                exsel: 248,
                eraseEof: 249,
                play: 250,
                zoom: 251,
                noName: 252,
                pa1: 253,
                oemClear: 254,
                keyCode: 65535,
                shift: 65536,
                control: 131072,
                alt: 262144
              };
              (0, n.registerType)("Keys", L);
              function A(x) {
                this._return = !1, this._next = !0, this._linkSlide = !1, this._slide = null, this._ok = !1, x != null ? this.set_id(x) : this.set_next(!0);
              }
              var K = {
                get_returnCaller: function() {
                  return this._return;
                },
                set_returnCaller: function(x) {
                  return x && (this._slide = "Return"), this._return = x, x;
                },
                get_next: function() {
                  return this._next;
                },
                set_next: function(x) {
                  return x && (this._slide = "Next"), this._next = x, x;
                },
                get_linkToSlide: function() {
                  return this._linkSlide;
                },
                set_linkToSlide: function(x) {
                  return x && (this._slide = "Next"), this._linkSlide = x, x;
                },
                get_id: function() {
                  return this._slide;
                },
                set_id: function(x) {
                  return this._return = !1, this._next = !1, this._linkSlide = !0, this._slide = x, x;
                },
                get_OK: function() {
                  return this._ok;
                },
                set_OK: function(x) {
                  return this._ok = x, x;
                }
              };
              (0, n.registerType)("SelectLink", [A, K, null]);
              function T() {
                this.volume = 0;
              }
              var w = {
                showDialog: function() {
                  return 1;
                }
              };
              (0, n.registerType)("PopupVolume", [T, w, null]);
              function f() {
                this.volume = 0, this.location = new o.Vector2d(), this.color = new r.Color();
              }
              var R = {
                showDialog: function() {
                  return 1;
                }
              };
              (0, n.registerType)("PopupColorPicker", [f, R, null]);
              function O() {
                this.volume = 0, this.location = new o.Vector2d(), this.overlay = null;
              }
              var W = {
                showDialog: function() {
                  return 1;
                }
              };
              (0, n.registerType)("OverlayProperties", [O, W, null]);
              function N(x, P, d, U, F) {
                if (x.get_projection() === 7 && F != null) {
                  var X = F.ipix * 4 + U * 2 + d;
                  return x.get_imageSetID().toString() + "\\" + P.toString() + "\\" + X.toString();
                }
                return x.get_imageSetID().toString() + "\\" + P.toString() + "\\" + U.toString() + "_" + d.toString();
              }
              function $() {
              }
              $.lineToPoint = function(x, P, d) {
                var U = o.Vector3d.subtractVectors(P, x), F = o.Vector3d.subtractVectors(d, x), X = o.Vector3d.cross(F, U).length() / U.length();
                return X;
              }, $.getUVFromInnerPoint = function(x, P, d, U, F) {
                x.normalize(), P.normalize(), d.normalize(), U.normalize(), F.normalize();
                var X = $.lineToPoint(x, P, F), Y = $.lineToPoint(d, U, F), M = X + Y, B = $.lineToPoint(P, U, F), D = $.lineToPoint(x, d, F), k = B + D;
                return o.Vector2d.create(D / k, X / M);
              };
              var S = {};
              (0, n.registerType)("DistanceCalc", [$, S, null]);
              var I = {
                OK: 1
              };
              (0, n.registerType)("DialogResult", I), (0, n.registerEnum)("DialogResult", I);
            }
          ),
          /***/
          "./esm/utilities/binary_reader.js": (
            /*!****************************************!*\
              !*** ./esm/utilities/binary_reader.js ***!
              \****************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                BinaryReader: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              );
              function n(_) {
                this.position = 0, this._data = null, this._data = _;
              }
              n.id = 1;
              var e = {
                get_position: function() {
                  return this.position;
                },
                seek: function(_) {
                  this.position = _;
                },
                seekRelative: function(_) {
                  this.position += _;
                },
                get_length: function() {
                  return this._data.length;
                },
                get_endOfStream: function() {
                  return this.position >= this.get_length();
                },
                readByte: function() {
                  var _;
                  return _ = this._data[this.position], this.position += 1, _;
                },
                readSByte: function() {
                  var _;
                  return _ = this._data[this.position], this.position += 1, _;
                },
                readBytes: function(_) {
                  for (var r = new Array(_), o = 0; o < _; o++)
                    r[o] = this._data[this.position + o];
                  return this.position += _, r;
                },
                readRemainingI16: function(_) {
                  for (var r = new Float32Array(_), o = 0; o < _; o++)
                    r[o] = this.readInt16(!0);
                  return r;
                },
                readByteString: function(_) {
                  for (var r = "", o = 0; o < _; o++)
                    r += String.fromCharCode(this._data[this.position + o]);
                  return this.position += _, r;
                },
                readSingle: function() {
                  var _ = new Uint8Array(4);
                  _[0] = this._data[this.position], _[1] = this._data[this.position + 1], _[2] = this._data[this.position + 2], _[3] = this._data[this.position + 3];
                  var r = new Float32Array(_.buffer, 0, 1)[0];
                  return this.position += 4, r;
                },
                readUInt32: function() {
                  var _ = this._data[this.position] + (this._data[this.position + 1] << 8) + (this._data[this.position + 2] << 16) + (this._data[this.position + 3] << 24);
                  return this.position += 4, _;
                },
                readUInt16: function() {
                  var _ = this._data[this.position] + (this._data[this.position + 1] << 8);
                  return this.position += 2, _;
                },
                readUInt16LittleEndian: function() {
                  var _ = (this._data[this.position] << 8) + this._data[this.position + 1];
                  return this.position += 2, _;
                },
                readInt16: function(_) {
                  var r = _ ? this.readUInt16LittleEndian() : this.readUInt16();
                  return r & 32768 ? -(r - 1 ^ 65535) : r;
                },
                readInt32: function() {
                  var _ = this.readUInt32();
                  return _ & 2147483648 ? -(_ - 1 ^ 4294967295) : _;
                },
                readInt64: function() {
                  return this.position += 8, n.id++;
                },
                close: function() {
                }
              };
              (0, t.registerType)("BinaryReader", [n, e, null]);
            }
          ),
          /***/
          "./esm/utilities/bitmap.js": (
            /*!*********************************!*\
              !*** ./esm/utilities/bitmap.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Bitmap: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), e = i(
                /*! ../graphics/webgl_constants.js */
                "./esm/graphics/webgl_constants.js"
              ), _ = i(
                /*! ../graphics/texture.js */
                "./esm/graphics/texture.js"
              );
              function r() {
                this.width = 0, this.height = 0;
              }
              r.create = function(c, l) {
                l = _.Texture.fitPowerOfTwo(l), c = _.Texture.fitPowerOfTwo(c);
                var g = new r();
                return g.height = l, g.width = c, g._buffer = new Uint8Array(c * l * 4), g;
              };
              var o = {
                setPixel: function(c, l, g, a, b, V) {
                  var y = (c + l * this.width) * 4;
                  this._buffer[y++] = g, this._buffer[y++] = a, this._buffer[y++] = b, this._buffer[y++] = V;
                },
                getTexture: function() {
                  var c = n.tilePrepDevice.createTexture();
                  return n.tilePrepDevice.bindTexture(e.WEBGL.TEXTURE_2D, c), n.tilePrepDevice.texParameteri(e.WEBGL.TEXTURE_2D, e.WEBGL.TEXTURE_WRAP_S, e.WEBGL.CLAMP_TO_EDGE), n.tilePrepDevice.texParameteri(e.WEBGL.TEXTURE_2D, e.WEBGL.TEXTURE_WRAP_T, e.WEBGL.CLAMP_TO_EDGE), n.tilePrepDevice.texImage2D(e.WEBGL.TEXTURE_2D, 0, e.WEBGL.RGBA, this.width, this.height, 0, e.WEBGL.RGBA, e.WEBGL.UNSIGNED_BYTE, this._buffer), n.tilePrepDevice.texParameteri(e.WEBGL.TEXTURE_2D, e.WEBGL.TEXTURE_MIN_FILTER, e.WEBGL.LINEAR_MIPMAP_NEAREST), n.tilePrepDevice.generateMipmap(e.WEBGL.TEXTURE_2D), n.tilePrepDevice.bindTexture(e.WEBGL.TEXTURE_2D, null), c;
                }
              };
              (0, t.registerType)("Bitmap", [r, o, null]);
            }
          ),
          /***/
          "./esm/utilities/color_picker.js": (
            /*!***************************************!*\
              !*** ./esm/utilities/color_picker.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ColorPicker: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../color.js */
                "./esm/color.js"
              ), e = i(
                /*! ../data_globals.js */
                "./esm/data_globals.js"
              );
              function _() {
                this.callBack = null, this.color = n.Colors.get_white();
              }
              var r = {
                nonMenuClick: function(o) {
                },
                show: function(o) {
                  e.globalScriptInterface.showColorPicker(this, o);
                },
                getColorFromClick: function(o) {
                  var c = document.getElementById("colorhex"), l = document.createElement("canvas");
                  l.width = c.width, l.height = c.height;
                  var g = l.getContext("2d");
                  g.drawImage(c, 0, 0);
                  var a = g.getImageData(o.offsetX, o.offsetY, 1, 1).data;
                  return this.color = n.Color.fromArgb(a[3], a[0], a[1], a[2]), this.color;
                },
                pickColor: function(o) {
                  this.callBack(this.color);
                }
              };
              (0, t.registerType)("ColorPicker", [_, r, null]);
            }
          ),
          /***/
          "./esm/utilities/context_menu_strip.js": (
            /*!*********************************************!*\
              !*** ./esm/utilities/context_menu_strip.js ***!
              \*********************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ContextMenuStrip: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                TagMe: () => (
                  /* binding */
                  a
                ),
                /* harmony export */
                ToolStripMenuItem: () => (
                  /* binding */
                  o
                ),
                /* harmony export */
                ToolStripSeparator: () => (
                  /* binding */
                  l
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              );
              function _() {
                this.items = [];
              }
              var r = {
                _dispose: function() {
                },
                _nonMenuClick: function(V) {
                  var y = document.getElementById("contextmenu");
                  y.style.display = "none", window.removeEventListener("click", n.ss.bind("_nonMenuClick", this), !1);
                  for (var C = document.getElementById("popoutmenu"); C.firstChild != null; )
                    C.removeChild(C.firstChild);
                  C.style.display = "none";
                },
                _menuItemClicked: function(V) {
                  var y = V.currentTarget;
                  y.itemTag.click(y.itemTag, new n.ss.EventArgs());
                },
                _show: function(V) {
                  for (var y = document.getElementById("contextmenu"); y.firstChild != null; )
                    y.removeChild(y.firstChild);
                  y.className = "contextmenu", y.style.display = "block", y.style.left = V.x.toString() + "px", y.style.top = V.y.toString() + "px", window.addEventListener("click", n.ss.bind("_nonMenuClick", this), !0);
                  for (var C = n.ss.enumerate(this.items); C.moveNext(); ) {
                    var E = C.current;
                    if (E.visible) {
                      var v = document.createElement("div");
                      E.dropDownItems.length > 0 ? v.className = "contextmenuitem submenu" : E.checked ? v.className = "contextmenuitem checkedmenu" : v.className = "contextmenuitem", v.innerText = E.name;
                      var m = v;
                      m.itemTag = E, v.addEventListener("mouseover", n.ss.bind("_openSubMenu", this), !1), E.click != null && v.addEventListener("click", n.ss.bind("_menuItemClicked", this), !1), y.appendChild(v);
                    }
                  }
                },
                _openSubMenu: function(V) {
                  for (var y = V.currentTarget, C = y.itemTag, E = document.getElementById("popoutmenu"); E.firstChild != null; )
                    E.removeChild(E.firstChild);
                  if (E.style.display = "none", !!C.dropDownItems.length) {
                    var v = new e.Vector2d();
                    v.x = V.currentTarget.parentNode.offsetLeft + V.currentTarget.parentNode.clientWidth, v.y = V.currentTarget.parentNode.offsetTop + V.currentTarget.offsetTop, E.className = "contextmenu", E.style.display = "block", E.style.left = v.x.toString() + "px", E.style.top = v.y.toString() + "px", window.addEventListener("click", n.ss.bind("_nonMenuClick", this), !0);
                    for (var m = n.ss.enumerate(C.dropDownItems); m.moveNext(); ) {
                      var L = m.current;
                      if (L.visible) {
                        var A = document.createElement("div");
                        A.className = L.checked ? "contextmenuitem checkedmenu" : "contextmenuitem", A.innerText = L.name;
                        var K = A;
                        K.itemTag = L, A.addEventListener("click", n.ss.bind("_menuItemClicked", this), !1), E.appendChild(A);
                      }
                    }
                  }
                }
              };
              (0, t.registerType)("ContextMenuStrip", [_, r, null]);
              function o() {
                this.tag = null, this.dropDownItems = [], this.checked = !1, this.enabled = !0, this.visible = !0;
              }
              o.create = function(V) {
                var y = new o();
                return y.name = V, y;
              };
              var c = {};
              (0, t.registerType)("ToolStripMenuItem", [o, c, null]);
              function l() {
                o.call(this), this.name = "--------------------------------------";
              }
              var g = {};
              (0, t.registerType)("ToolStripSeparator", [l, g, o]);
              function a() {
              }
              var b = {};
              (0, t.registerType)("TagMe", [a, b, null]);
            }
          ),
          /***/
          "./esm/utilities/dialog.js": (
            /*!*********************************!*\
              !*** ./esm/utilities/dialog.js ***!
              \*********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Dialog: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              );
              function e() {
              }
              var _ = {
                add_showDialogHook: function(r) {
                  this.__showDialogHook = t.ss.bindAdd(this.__showDialogHook, r);
                },
                remove_showDialogHook: function(r) {
                  this.__showDialogHook = t.ss.bindSub(this.__showDialogHook, r);
                },
                show: function(r, o) {
                  this.__showDialogHook != null && this.__showDialogHook(r, o);
                }
              };
              (0, n.registerType)("Dialog", [e, _, null]);
            }
          ),
          /***/
          "./esm/utilities/histogram.js": (
            /*!************************************!*\
              !*** ./esm/utilities/histogram.js ***!
              \************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Histogram: () => (
                  /* binding */
                  c
                )
                /* harmony export */
              });
              var t = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ../double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ../render_globals.js */
                "./esm/render_globals.js"
              ), r = i(
                /*! ../util.js */
                "./esm/util.js"
              ), o = i(
                /*! ../layers/fits_image_js.js */
                "./esm/layers/fits_image_js.js"
              );
              function c() {
                this.image = null, this.layer = null, this.tile = null, this._dropDown = null, this._downPosition = 0, this._lowPosition = 0, this._highPosition = 255, this._center = 127, this._ignoreNextClick = !1, this._dragType = 4, this._updated = !1, this.selectedCurveStyle = 0;
              }
              c.updateImage = function(g, a) {
                if (!_.useGlVersion2) {
                  var b = t.ss.safeCast(g.get_imageSet().get_wcsImage(), o.FitsImageJs), V = (0, _.tileCacheGetTile)(0, 0, 0, g.get_imageSet(), null);
                  V.texture2d = b.getBitmap().getTexture();
                }
              }, c.updateScale = function(g, a, b, V) {
                if (g.get_imageSet().get_fitsProperties().scaleType = a, g.get_imageSet().get_fitsProperties().lowerCut = b, g.get_imageSet().get_fitsProperties().upperCut = V, !_.useGlVersion2) {
                  var y = t.ss.safeCast(g.get_imageSet().get_wcsImage(), o.FitsImageJs), C = (0, _.tileCacheGetTile)(0, 0, 0, g.get_imageSet(), null);
                  C.texture2d = y.getBitmap().getTexture();
                }
              }, c.updateColorMapper = function(g, a) {
                if (g.get_imageSet().get_fitsProperties().colorMapName = a, !_.useGlVersion2) {
                  var b = t.ss.safeCast(g.get_imageSet().get_wcsImage(), o.FitsImageJs), V = (0, _.tileCacheGetTile)(0, 0, 0, g.get_imageSet(), null);
                  V.texture2d = b.getBitmap().getTexture();
                }
              };
              var l = {
                close: function(g) {
                  var a = document.getElementById("histogram");
                  document.getElementById("histogramClose"), a.style.display = "none", window.removeEventListener("click", t.ss.bind("close", this), !0);
                  var b = document.getElementById("graph");
                  b.removeEventListener("mousedown", t.ss.bind("onPointerDown", this), !1), b.removeEventListener("mousemove", t.ss.bind("onPointerMove", this), !1), b.removeEventListener("mouseup", t.ss.bind("onPointerUp", this), !1), this._dropDown.removeEventListener("change", t.ss.bind("curveStyleSelected", this), !1), this._dropDown.removeEventListener("click", t.ss.bind("ignoreMe", this), !0);
                },
                show: function(g) {
                  this.tile = (0, _.tileCacheGetTile)(0, 0, 0, this.layer.get_imageSet(), null);
                  var a = document.getElementById("histogram"), b = document.getElementById("histogramClose");
                  a.style.display = "block", a.style.left = g.x.toString() + "px", a.style.top = g.y.toString() + "px", this.selectedCurveStyle = this.layer.get_imageSet().get_fitsProperties().scaleType, this._dropDown = document.getElementById("ScaleTypePicker"), this._dropDown.addEventListener("change", t.ss.bind("curveStyleSelected", this), !1), this._dropDown.addEventListener("click", t.ss.bind("ignoreMe", this), !0);
                  var V = document.getElementById("graph");
                  V.addEventListener("pointerdown", t.ss.bind("onPointerDown", this), !1), V.addEventListener("pointermove", t.ss.bind("onPointerMove", this), !1), V.addEventListener("pointerup", t.ss.bind("onPointerUp", this), !1), b.addEventListener("click", t.ss.bind("close", this), !0), this.draw();
                },
                ignoreMe: function(g) {
                  this._ignoreNextClick = !0;
                },
                curveStyleSelected: function(g) {
                  this.selectedCurveStyle = this._dropDown.selectedIndex, this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, this.draw(), this._ignoreNextClick = !0;
                },
                onPointerDown: function(g) {
                  var a = document.getElementById("graph"), b = r.Mouse.offsetX(a, g), V = r.Mouse.offsetY(a, g);
                  a.setPointerCapture(g.pointerId), Math.abs(b - this._center) < 10 && Math.abs(V - 75) < 10 ? this._dragType = 3 : Math.abs(b - this._lowPosition) < 10 ? this._dragType = 0 : Math.abs(b - this._highPosition) < 10 ? this._dragType = 1 : (this._dragType = 2, this._downPosition = Math.min(255, Math.max(0, b)), this.draw()), g.cancelBubble = !0;
                },
                onPointerMove: function(g) {
                  var a = document.getElementById("graph"), b = r.Mouse.offsetX(a, g);
                  switch (r.Mouse.offsetY(a, g), this._dragType) {
                    case 0:
                      this._lowPosition = Math.min(255, Math.max(0, b));
                      break;
                    case 1:
                      this._highPosition = Math.min(255, Math.max(0, b));
                      break;
                    case 2:
                      this._lowPosition = this._downPosition, this._highPosition = Math.min(255, Math.max(0, b));
                      break;
                    case 3:
                      var V = Math.abs(this._highPosition - this._lowPosition) / 2, y = Math.min(255 - V, Math.max(V, b)), C = this._center - y;
                      this._lowPosition -= C, this._highPosition -= C;
                      break;
                    case 4:
                      return;
                  }
                  this._center = (this._lowPosition + this._highPosition) / 2, this.draw();
                  var E = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, v = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * E, m = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * E;
                  this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().upperCut = m, this.layer.get_imageSet().get_fitsProperties().lowerCut = v, this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, g.cancelBubble = !0;
                },
                onPointerUp: function(g) {
                  g.srcElement.releasePointerCapture(g.pointerId), this._dragType !== 4 && (this._dragType = 4, this.setUpdateTimer(), this._ignoreNextClick = !0), g.cancelBubble = !0;
                },
                setUpdateTimer: function() {
                  var g = this;
                  _.useGlVersion2 || (setTimeout(function() {
                    g.update();
                  }, 500), this._updated = !1);
                },
                update: function() {
                  if (!this._updated) {
                    if (t.ss.canCast(this.image, o.FitsImageJs)) {
                      var g = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, a = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * g, b = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * g;
                      this.tile.texture2d = this.image.getScaledBitmap(a, b, this.selectedCurveStyle, 0, null).getTexture();
                    }
                    this._updated = !0;
                  }
                },
                draw: function() {
                  var g = document.getElementById("graph"), a = g.getContext("2d");
                  this.image != null && this.image.drawHistogram(a);
                  var b = "rgba(255,0,0,255)", V = "rgba(0,255,0,255)", y = "rgba(0,0,255,255)";
                  a.strokeStyle = b, a.beginPath(), a.moveTo(this._lowPosition, 0), a.lineTo(this._lowPosition, 150), a.stroke(), a.strokeStyle = V, a.beginPath(), a.moveTo(this._highPosition, 0), a.lineTo(this._highPosition, 150), a.stroke(), a.strokeStyle = y, a.beginPath(), a.arc(this._center, 75, 10, 0, Math.PI * 2, !1), a.closePath(), a.stroke();
                  var C = [];
                  switch (this.selectedCurveStyle) {
                    case 0:
                      C.length = 0, C.push(e.Vector2d.create(this._lowPosition, 150)), C.push(e.Vector2d.create(this._highPosition, 0));
                      break;
                    case 1:
                      C.length = 0;
                      for (var v = 150 / Math.log(255), m = this._highPosition - this._lowPosition, L = m < 0 ? -1 : 1, A = Math.abs(256 / (m || 1e-6)), K = 1e-6, E = this._lowPosition; E !== this._highPosition; E += L)
                        C.push(e.Vector2d.create(E, 150 - Math.log(K) * v)), K += A;
                      break;
                    case 2:
                      C.length = 0;
                      for (var v = 150 / Math.pow(255, 2), m = this._highPosition - this._lowPosition, L = m < 0 ? -1 : 1, A = Math.abs(256 / (m || 1e-6)), K = 1e-6, E = this._lowPosition; E !== this._highPosition; E += L)
                        C.push(e.Vector2d.create(E, 150 - Math.pow(K, 2) * v)), K += A;
                      break;
                    case 3:
                      C.length = 0;
                      for (var v = 150 / Math.sqrt(255), m = this._highPosition - this._lowPosition, L = m < 0 ? -1 : 1, A = Math.abs(256 / (m || 1e-6)), K = 1e-6, E = this._lowPosition; E !== this._highPosition; E += L)
                        C.push(e.Vector2d.create(E, 150 - Math.sqrt(K) * v)), K += A;
                      break;
                  }
                  if (C.length > 1) {
                    a.beginPath(), a.strokeStyle = y, a.moveTo(C[0].x, C[0].y);
                    for (var E = 1; E < C.length; E++)
                      a.lineTo(C[E].x, C[E].y);
                    a.stroke();
                  }
                }
              };
              (0, n.registerType)("Histogram", [c, l, null]);
            }
          ),
          /***/
          "./esm/utilities/simple_input.js": (
            /*!***************************************!*\
              !*** ./esm/utilities/simple_input.js ***!
              \***************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                SimpleInput: () => (
                  /* binding */
                  e
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              );
              function e(r, o, c, l) {
                this.title = "Tile", this.label = "Enter Text Below", this.text = "", this._textElement = null, this._ignoreNextClick = !1, this.title = r, this.label = o, this.text = c;
              }
              var _ = {
                showDialog: function() {
                  return 1;
                },
                nonMenuClick: function(r) {
                  this._ignoreNextClick || this._close(), this._ignoreNextClick = !1;
                },
                show: function(r, o) {
                  var c = document.getElementById("simpleinput"), l = document.getElementById("simplemodal");
                  l.style.display = "block", c.style.display = "block", c.style.marginLeft = r.x.toString() + "px", c.style.marginTop = r.y.toString() + "px", this._textElement = document.getElementById("inputtext"), this._textElement.value = this.text;
                  var g = document.getElementById("simpletitle"), a = document.getElementById("inputlabel");
                  g.innerText = this.title, a.innerText = this.label, this._textElement.addEventListener("change", n.ss.bind("textChanged", this), !1), this._textElement.addEventListener("click", n.ss.bind("ignoreMe", this), !0);
                  var b = document.getElementById("simpleinputok"), V = document.getElementById("simpleinputcancel");
                  b.addEventListener("click", n.ss.bind("okClicked", this), !1), V.addEventListener("click", n.ss.bind("cancelClicked", this), !1), this._okCallback = o;
                },
                okClicked: function(r) {
                  this._close(), this._okCallback != null && this._okCallback();
                },
                cancelClicked: function(r) {
                  this._close();
                },
                _close: function() {
                  var r = document.getElementById("simplemodal");
                  r.style.display = "none", this._textElement.removeEventListener("change", n.ss.bind("textChanged", this), !1);
                  var o = document.getElementById("simpleinputok"), c = document.getElementById("simpleinputcancel");
                  o.removeEventListener("click", n.ss.bind("okClicked", this), !1), c.removeEventListener("click", n.ss.bind("cancelClicked", this), !1);
                },
                ignoreMe: function(r) {
                  this._ignoreNextClick = !0;
                },
                textChanged: function(r) {
                  this.text = this._textElement.value, this._ignoreNextClick = !0;
                }
              };
              (0, t.registerType)("SimpleInput", [e, _, null]);
            }
          ),
          /***/
          "./esm/utilities/xml_text_writer.js": (
            /*!******************************************!*\
              !*** ./esm/utilities/xml_text_writer.js ***!
              \******************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                Formatting: () => (
                  /* binding */
                  e
                ),
                /* harmony export */
                XmlTextWriter: () => (
                  /* binding */
                  _
                )
                /* harmony export */
              });
              var t = i(
                /*! ../typesystem.js */
                "./esm/typesystem.js"
              ), n = i(
                /*! ../ss.js */
                "./esm/ss.js"
              ), e = {
                indented: 1
              };
              (0, t.registerType)("Formatting", e), (0, t.registerEnum)("Formatting", e);
              function _() {
                this.body = `<?xml version='1.0' encoding='UTF-8'?>\r
`, this.formatting = 1, this._elementStack = new n.ss.Stack(), this._pending = !1, this._currentName = "", this._attributes = {}, this._value = "";
              }
              var r = {
                _pushNewElement: function(o) {
                  this._writePending(!1), this._elementStack.push(o), this._pending = !0, this._currentName = o;
                },
                _writePending: function(o) {
                  var c = !0;
                  if (this._pending) {
                    for (var l = 1; l < this._elementStack.count; l++)
                      this.body += "  ";
                    if (this.body += "<" + this._currentName, n.ss.keyCount(this._attributes) > 0)
                      for (var g = n.ss.enumerate(n.ss.keys(this._attributes)); g.moveNext(); ) {
                        var a = g.current;
                        this.body += n.ss.format(' {0}="{1}"', a, this._attributes[a]);
                      }
                    return n.ss.emptyString(this._value) ? o ? (this.body += ` />\r
`, c = !0) : this.body += `>\r
` : (this.body += ">", c = !1, n.ss.emptyString(this._value) || (this.body += this._value)), this._pending = !1, this._currentName = "", this._value = "", this._attributes = {}, c;
                  }
                  return !1;
                },
                _writeProcessingInstruction: function(o, c) {
                },
                _writeStartElement: function(o) {
                  this._pushNewElement(o);
                },
                _writeAttributeString: function(o, c) {
                  c != null ? this._attributes[o] = n.ss.replaceString(c.toString(), "&", "&amp;") : this._attributes[o] = "";
                },
                _writeEndElement: function() {
                  if (this._writePending(!0))
                    this._elementStack.pop();
                  else {
                    for (var o = 1; o < this._elementStack.count; o++)
                      this.body += "  ";
                    this.body += n.ss.format(`</{0}>\r
`, this._elementStack.pop());
                  }
                },
                _writeString: function(o) {
                  this._value = n.ss.replaceString(o, "&", "&amp;");
                },
                _writeFullEndElement: function() {
                  this._writePending(!1);
                  for (var o = 1; o < this._elementStack.count; o++)
                    this.body += "  ";
                  this.body += n.ss.format(`</{0}>\r
`, this._elementStack.pop());
                },
                _close: function() {
                },
                _writeElementString: function(o, c) {
                  this._writeStartElement(o), this._writeValue(n.ss.replaceString(c, "&", "&amp;")), this._writeEndElement();
                },
                _writeValue: function(o) {
                  this._value = n.ss.replaceString(o, "&", "&amp;");
                },
                _writeCData: function(o) {
                  this._value = n.ss.format("<![CDATA[{0}]]>", o);
                }
              };
              (0, t.registerType)("XmlTextWriter", [_, r, null]);
            }
          ),
          /***/
          "./esm/video_output_type.js": (
            /*!**********************************!*\
              !*** ./esm/video_output_type.js ***!
              \**********************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                VideoOutputType: () => (
                  /* binding */
                  n
                )
                /* harmony export */
              });
              var t = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              );
              function n(_, r, o, c, l) {
                this.fps = 0, this.width = 0, this.height = 0, this.totalFrames = 0, this.waitDownload = !1, this.format = "image/jpeg", this.width = _, this.height = r, this.fps = o, this.format = c, this.waitDownload = l;
              }
              var e = {};
              (0, t.registerType)("VideoOutputType", [n, e, null]);
            }
          ),
          /***/
          "./esm/view_mover.js": (
            /*!***************************!*\
              !*** ./esm/view_mover.js ***!
              \***************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                ViewMoverKenBurnsStyle: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                ViewMoverSlew: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./baseutil.js */
                "./esm/baseutil.js"
              ), _ = i(
                /*! ./camera_parameters.js */
                "./esm/camera_parameters.js"
              ), r = i(
                /*! ./interfaces.js */
                "./esm/interfaces.js"
              ), o = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), c = i(
                /*! ./settings.js */
                "./esm/settings.js"
              ), l = i(
                /*! ./space_time_controller.js */
                "./esm/space_time_controller.js"
              );
              function g(y, C, E, v, m, L) {
                this.interpolationType = 0, this.fastDirectionMove = !1, this._toTargetTime = 0, this._dateTimeSpan = 0, this._complete = !1, this._midpointFired = !1, this.interpolationType = L, Math.abs(y.lng - C.lng) > 180 && (y.lng > C.lng ? y.lng -= 360 : y.lng += 360), this._fromDateTime = v, this._toDateTime = m, this._dateTimeSpan = m - v, this._from = y.copy(), this._to = C.copy(), this._fromTime = l.SpaceTimeController.get_metaNow(), this._toTargetTime = E;
              }
              var a = {
                get_complete: function() {
                  return this._complete;
                },
                get_currentPosition: function() {
                  var y = l.SpaceTimeController.get_metaNow() - this._fromTime, C = y / 1e3, E = C / this._toTargetTime;
                  return !this._midpointFired && E >= 0.5 && (this._midpointFired = !0, this._midpoint != null && this._midpoint()), E >= 1 ? (E = 1, this._complete = !0, this._to.copy()) : c.Settings.get_active().get_galacticMode() && o.globalRenderContext.space ? _.CameraParameters.interpolateGreatCircle(this._from, this._to, E, this.interpolationType, this.fastDirectionMove) : _.CameraParameters.interpolate(this._from, this._to, E, this.interpolationType, this.fastDirectionMove);
                },
                get_currentDateTime: function() {
                  var y = l.SpaceTimeController.get_metaNow() - this._fromTime, C = y / 1e3, E = C / this._toTargetTime, v = this._dateTimeSpan * E, m = new Date(this._fromDateTime.getTime() + t.ss.truncate(v));
                  return m;
                },
                get_midpoint: function() {
                  return this._midpoint;
                },
                set_midpoint: function(y) {
                  return this._midpoint = y, y;
                },
                get_moveTime: function() {
                  return this._toTargetTime;
                }
              };
              (0, n.registerType)("ViewMoverKenBurnsStyle", [g, a, null, r.IViewMover]);
              function b() {
                this._upTargetTime = 0, this._downTargetTime = 0, this._toTargetTime = 0, this._upTimeFactor = 0.6, this._downTimeFactor = 0.6, this._travelTimeFactor = 7, this._midpointFired = !1, this._complete = !1;
              }
              b.create = function(y, C) {
                var E = new b();
                return E.init(y, C), E;
              }, b.createUpDown = function(y, C, E) {
                var v = new b();
                return v._upTimeFactor = v._downTimeFactor = E, v.init(y.copy(), C.copy()), v;
              };
              var V = {
                init: function(y, C) {
                  Math.abs(y.lng - C.lng) > 180 && (y.lng > C.lng ? y.lng -= 360 : y.lng += 360), C.zoom <= 0 && (C.zoom = 360), y.zoom <= 0 && (y.zoom = 360), this._from = y, this._to = C, this._fromTime = l.SpaceTimeController.get_metaNow();
                  var E = 360, v, m = Math.abs(y.lng - C.lng), L = Math.abs(y.lat - C.lat), A = Math.sqrt(L * L + m * m);
                  E = A / 3 * 20, E > 360 && (E = 360), E < y.zoom && (E = y.zoom), v = A / 180 * (360 / E) * this._travelTimeFactor;
                  var K = Math.max(Math.abs(y.angle - C.angle), Math.abs(y.rotation - C.rotation)), T = Math.max(Math.abs(e.Util.logN(E, 2) - e.Util.logN(y.zoom, 2)), K);
                  this._upTargetTime = this._upTimeFactor * T, this._downTargetTime = this._upTargetTime + v;
                  var w = Math.abs(e.Util.logN(E, 2) - e.Util.logN(C.zoom, 2));
                  this._toTargetTime = this._downTargetTime + Math.max(this._downTimeFactor * w, K), this._fromTop = y.copy(), this._fromTop.zoom = E, this._fromTop.angle = (y.angle + C.angle) / 2, this._fromTop.rotation = (y.rotation + C.rotation) / 2, this._toTop = C.copy(), this._toTop.zoom = this._fromTop.zoom, this._toTop.angle = this._fromTop.angle, this._toTop.rotation = this._fromTop.rotation;
                },
                get_complete: function() {
                  return this._complete;
                },
                get_currentPosition: function() {
                  var y = l.SpaceTimeController.get_metaNow() - this._fromTime, C = y / 1e3;
                  if (C < this._upTargetTime)
                    return _.CameraParameters.interpolate(this._from, this._fromTop, C / this._upTargetTime, 3, !1);
                  if (C < this._downTargetTime)
                    return C -= this._upTargetTime, c.Settings.get_active().get_galacticMode() && o.globalRenderContext.space ? _.CameraParameters.interpolateGreatCircle(this._fromTop, this._toTop, C / (this._downTargetTime - this._upTargetTime), 3, !1) : _.CameraParameters.interpolate(this._fromTop, this._toTop, C / (this._downTargetTime - this._upTargetTime), 3, !1);
                  this._midpointFired || (this._midpointFired = !0, this._midpoint != null && this._midpoint()), C -= this._downTargetTime;
                  var E = C / (this._toTargetTime - this._downTargetTime);
                  return E > 1 ? (E = 1, this._complete = !0, this._to.copy()) : _.CameraParameters.interpolate(this._toTop, this._to, E, 3, !1);
                },
                get_currentDateTime: function() {
                  return l.SpaceTimeController.updateClock(), l.SpaceTimeController.get_now();
                },
                get_midpoint: function() {
                  return this._midpoint;
                },
                set_midpoint: function(y) {
                  return this._midpoint = y, y;
                },
                get_moveTime: function() {
                  return this._toTargetTime;
                }
              };
              (0, n.registerType)("ViewMoverSlew", [b, V, null, r.IViewMover]);
            }
          ),
          /***/
          "./esm/viz_layer.js": (
            /*!**************************!*\
              !*** ./esm/viz_layer.js ***!
              \**************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                VizLayer: () => (
                  /* binding */
                  c
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), _ = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), r = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), o = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              );
              function c() {
                this.table = [], this.items = [], this._imageReady = !1, this._dateColumn = 0, this._latColumn = 1, this._lngColumn = 2, this._depthColumn = 3, this._magColumn = 4;
              }
              c.earthRadius = 6371e3;
              var l = {
                load: function(g) {
                  var a = this, b = g.split(`\r
`);
                  this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(E) {
                    a._imageReady = !0;
                  }, !1), this._starProfile.src = r.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png");
                  for (var V = !1, y = t.ss.enumerate(b); y.moveNext(); ) {
                    var C = y.current;
                    V ? this.table.push(C.split("	")) : (this.header = C.split("	"), V = !0);
                  }
                },
                prepare: function() {
                  this._worldList = new Array(this.table.length), this._transformedList = new Array(this.table.length);
                  for (var g = 0, a = t.ss.enumerate(this.table); a.moveNext(); ) {
                    var b = a.current, V = new _.DataItem();
                    V.eventTime = t.ss.date(b[this._dateColumn]);
                    var y = (6371e3 - parseFloat(b[this._depthColumn]) * 1e3) / 6371e3;
                    V.location = o.Coordinates.geoTo3dRad(parseFloat(b[this._latColumn]), parseFloat(b[this._lngColumn]) + 180, y), V.tranformed = new e.Vector3d(), V.size = Math.pow(2, parseFloat(b[this._magColumn])) / 50, this._worldList[g] = V.location, this._transformedList[g] = V.tranformed, this.items.push(V), g++;
                  }
                },
                draw: function(g) {
                  if (this._imageReady) {
                    g.device.save(), g.WVP.projectArrayToScreen(this._worldList, this._transformedList);
                    var a = g.device;
                    a.globalAlpha = 0.4;
                    var b = g.width, V = g.height;
                    e.Vector3d.makeCopy(g.get_viewPoint());
                    for (var y = g.get_fovScale() / 100, C = t.ss.enumerate(this.items); C.moveNext(); ) {
                      var E = C.current;
                      if (E.tranformed.z < 1) {
                        var v = E.tranformed.x, m = E.tranformed.y, L = 4 * E.size / y, A = L / 2;
                        v > -A && v < b + A && m > -A && m < V + A && a.drawImage(this._starProfile, v - L / 2, m - L / 2, L, L);
                      }
                    }
                    g.device.restore();
                  }
                }
              };
              (0, n.registerType)("VizLayer", [c, l, null]);
            }
          ),
          /***/
          "./esm/web_file.js": (
            /*!*************************!*\
              !*** ./esm/web_file.js ***!
              \*************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                StateType: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                WebFile: () => (
                  /* binding */
                  r
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), _ = {
                pending: 0,
                received: 1,
                error: 2
              };
              (0, n.registerType)("StateType", _), (0, n.registerEnum)("StateType", _);
              function r(c) {
                this._state = 0, this.responseType = "", this._triedOnce = !1, this._url = c;
              }
              var o = {
                send: function() {
                  typeof navigator > "u" || (this._CORS(), this.set_state(_.pending));
                },
                get_message: function() {
                  return this._message;
                },
                get_state: function() {
                  return this._state;
                },
                set_state: function(c) {
                  return this._state = c, this.onStateChange != null && this.onStateChange(), c;
                },
                _loadData: function(c) {
                  this._data = c, this.set_state(_.received);
                },
                _loadBlob: function(c) {
                  this._blobdata = c, this.set_state(_.received);
                },
                _error: function() {
                  this._message = t.ss.format("Error encountered loading {0}", this._url), this.set_state(_.error);
                },
                _timeOut: function() {
                  this._message = t.ss.format("Timeout encountered loading {0}", this._url), this.set_state(_.error);
                },
                _CORS: function() {
                  var c = this;
                  this._xhr = new XMLHttpRequest();
                  try {
                    this._xhr.open("GET", this._url), this.responseType != null && (this._xhr.responseType = this.responseType), this._xhr.onreadystatechange = function() {
                      if (c._xhr.readyState === 4) {
                        if (c._xhr.status)
                          c._xhr.status >= 400 ? (c._message = c._xhr.statusText, c.set_state(_.error)) : c.responseType ? c._loadBlob(c._xhr.response) : c._loadData(c._xhr.responseText);
                        else if (!c._triedOnce) {
                          c._triedOnce = !0, c._xhr.onreadystatechange = null;
                          var l = e.URLHelpers.singleton.activateProxy(c._url);
                          l !== null ? (c._url = l, c._CORS()) : (c._message = c._xhr.statusText, c.set_state(_.error));
                        }
                      }
                    }, this._xhr.send();
                  } catch (l) {
                    throw this._message = l.message, this.set_state(_.error), l;
                  }
                },
                getText: function() {
                  return this._data;
                },
                getBlob: function() {
                  return this._blobdata;
                },
                getXml: function() {
                  var c = new DOMParser();
                  return c.parseFromString(this._data, "text/xml");
                }
              };
              (0, n.registerType)("WebFile", [r, o, null]);
            }
          ),
          /***/
          "./esm/wtml.js": (
            /*!*********************!*\
              !*** ./esm/wtml.js ***!
              \*********************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                FolderDownloadAction: () => (
                  /* binding */
                  g
                ),
                /* harmony export */
                Wtml: () => (
                  /* binding */
                  b
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), r = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), o = i(
                /*! ./place.js */
                "./esm/place.js"
              ), c = i(
                /*! ./folder.js */
                "./esm/folder.js"
              ), l = i(
                /*! ./wwt_control.js */
                "./esm/wwt_control.js"
              );
              function g(y, C) {
                this.loadChildFolders = !1, this._numLoadingFolders = 0, this._onComplete = y, this.loadChildFolders = C;
              }
              var a = {
                _folderLoaded: function() {
                  this._numLoadingFolders--, this._numLoadingFolders || this._onComplete();
                },
                startingNewFolderLoad: function(y) {
                  var C = this;
                  this._numLoadingFolders++, y.childLoadCallback(function() {
                    b.loadImagesets(y, C), C._folderLoaded();
                  });
                }
              };
              (0, n.registerType)("FolderDownloadAction", [g, a, null]);
              function b() {
              }
              b.getWtmlFile = function(y, C, E) {
                E == null && (E = !1);
                var v = new c.Folder();
                v.set_url(y);
                var m = new g(C, E);
                return m.startingNewFolderLoad(v), v;
              }, (0, _.set_loadWtmlFile)(b.getWtmlFile), b.loadImagesets = function(y, C) {
                for (var E = y.get_children(), v = t.ss.enumerate(E); v.moveNext(); ) {
                  var m = v.current;
                  if (t.ss.canCast(m, r.Imageset)) {
                    var L = m;
                    l.WWTControl.addImageSetToRepository(L);
                  }
                  if (t.ss.canCast(m, o.Place)) {
                    var A = m;
                    A.get_studyImageset() != null && l.WWTControl.addImageSetToRepository(A.get_studyImageset()), A.get_backgroundImageset() != null && l.WWTControl.addImageSetToRepository(A.get_backgroundImageset());
                  }
                  t.ss.canCast(m, c.Folder) && C.loadChildFolders && C.startingNewFolderLoad(m);
                }
                if (!t.ss.emptyString(l.WWTControl.imageSetName))
                  for (var K = l.WWTControl.imageSetName.toLowerCase(), T = t.ss.enumerate(l.WWTControl.getImageSets()); T.moveNext(); ) {
                    var w = T.current;
                    w.get_name().toLowerCase() === K && e.globalRenderContext.set_backgroundImageset(w);
                  }
              };
              var V = {};
              (0, n.registerType)("Wtml", [b, V, null]);
            }
          ),
          /***/
          "./esm/wwt_control.js": (
            /*!****************************!*\
              !*** ./esm/wwt_control.js ***!
              \****************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                WWTControl: () => (
                  /* binding */
                  F
                ),
                /* harmony export */
                WWTControlBuilder: () => (
                  /* binding */
                  Y
                ),
                /* harmony export */
                WWTElementEvent: () => (
                  /* binding */
                  B
                )
                /* harmony export */
              });
              var t = i(
                /*! ./ss.js */
                "./esm/ss.js"
              ), n = i(
                /*! ./typesystem.js */
                "./esm/typesystem.js"
              ), e = i(
                /*! ./render_globals.js */
                "./esm/render_globals.js"
              ), _ = i(
                /*! ./data_globals.js */
                "./esm/data_globals.js"
              ), r = i(
                /*! ./blend_state.js */
                "./esm/blend_state.js"
              ), o = i(
                /*! ./color.js */
                "./esm/color.js"
              ), c = i(
                /*! ./url_helpers.js */
                "./esm/url_helpers.js"
              ), l = i(
                /*! ./util.js */
                "./esm/util.js"
              ), g = i(
                /*! ./double3d.js */
                "./esm/double3d.js"
              ), a = i(
                /*! ./graphics/primitives3d.js */
                "./esm/graphics/primitives3d.js"
              ), b = i(
                /*! ./graphics/sprite2d.js */
                "./esm/graphics/sprite2d.js"
              ), V = i(
                /*! ./annotation.js */
                "./esm/annotation.js"
              ), y = i(
                /*! ./camera_parameters.js */
                "./esm/camera_parameters.js"
              ), C = i(
                /*! ./constellations.js */
                "./esm/constellations.js"
              ), E = i(
                /*! ./coordinates.js */
                "./esm/coordinates.js"
              ), v = i(
                /*! ./grids.js */
                "./esm/grids.js"
              ), m = i(
                /*! ./imageset.js */
                "./esm/imageset.js"
              ), L = i(
                /*! ./minor_planets.js */
                "./esm/minor_planets.js"
              ), A = i(
                /*! ./place.js */
                "./esm/place.js"
              ), K = i(
                /*! ./planets.js */
                "./esm/planets.js"
              ), T = i(
                /*! ./settings.js */
                "./esm/settings.js"
              ), w = i(
                /*! ./space_time_controller.js */
                "./esm/space_time_controller.js"
              ), f = i(
                /*! ./render_triangle.js */
                "./esm/render_triangle.js"
              ), R = i(
                /*! ./tile.js */
                "./esm/tile.js"
              ), O = i(
                /*! ./tile_cache.js */
                "./esm/tile_cache.js"
              ), W = i(
                /*! ./video_output_type.js */
                "./esm/video_output_type.js"
              ), N = i(
                /*! ./ui_tools.js */
                "./esm/ui_tools.js"
              ), $ = i(
                /*! ./view_mover.js */
                "./esm/view_mover.js"
              ), S = i(
                /*! ./tours/tour_player.js */
                "./esm/tours/tour_player.js"
              ), I = i(
                /*! ./layers/layer_manager.js */
                "./esm/layers/layer_manager.js"
              ), x = i(
                /*! ./tours/tour_document.js */
                "./esm/tours/tour_document.js"
              ), P = i(
                /*! ./tours/tour_edit.js */
                "./esm/tours/tour_edit.js"
              ), d = i(
                /*! ./planets_3d.js */
                "./esm/planets_3d.js"
              ), U = i(
                /*! ./script_interface.js */
                "./esm/script_interface.js"
              );
              function F() {
                this.freestandingMode = !1, this.uiController = null, this._annotations = [], this._hoverText = "", this._hoverTextPoint = new g.Vector2d(), this._lastMouseMove = new Date(1900, 1, 0, 0, 0, 0, 0), this.layers = [], this._frameCount = 0, this._zoomMax = 360, this._zoomMaxSolarSystem = 1e16, this._zoomMin = 0.001373291015625, this._zoomMinSolarSystem = 1e-8, this.constellation = "UMA", this._fadePoints = null, this.fader = r.BlendState.create(!0, 2e3), this._crossFadeFrame = !1, this._crossFadeTexture = null, this._sprite = new b.Sprite2d(), this.renderType = 2, this._milkyWayBackground = null, this.capturingVideo = !1, this._videoBlobReady = null, this.dumpFrameParams = null, this._videoBlobQueue = {}, this._videoQueueIndex = 0, this._emptyFrames = [], this._beginZoom = 1, this._dragging = !1, this._mouseDown = !1, this._hasTwoTouches = !1, this._lastX = 0, this._lastY = 0, this._pointerIds = new Array(2), this._pinchingZoomRect = new Array(2), this._moved = !1, this._foregroundCanvas = null, this._fgDevice = null, this._tracking = !1, this._trackingObject = null, this.sandboxMode = !1, this._solarSystemTrack = 65536, this._moving = !1, this._targetStudyImageset = null, this._targetBackgroundImageset = null, this.tour = null, this.tourEdit = null, this._crossHairs = null;
              }
              F.imageSets = [], F.imageSetName = "", F.showDataLayers = !1, F._renderNeeded = !1, F.constellationsFigures = null, F.constellationsBoundries = null, F.solarSystemObjectsNames = ["Sun", "Mercury", "Venus", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto", "Moon", "Io", "Europa", "Ganymede", "Callisto", "IoShadow", "EuropaShadow", "GanymedeShadow", "CallistoShadow", "SunEclipsed", "Earth", "Custom", "Undefined"], F.addImageSetToRepository = function(k) {
                for (var G = t.ss.enumerate(F.imageSets); G.moveNext(); ) {
                  var j = G.current;
                  if (j.get_imageSetID() === k.get_imageSetID())
                    return j;
                }
                return F.imageSets.push(k), k;
              }, F.getImageSets = function() {
                return F.imageSets;
              }, F.get_renderNeeded = function() {
                return F._renderNeeded;
              }, F.set_renderNeeded = function(k) {
                return F._renderNeeded = !0, k;
              }, F.initControl = function(k) {
                return F.initControl2(k, !0);
              }, F.initControlParam = function(k, G) {
                return F.initControl2(k, !0);
              }, F.initControl2 = function(k, G) {
                return F.initControl6(k, G, 0, 0, 360, "Sky");
              }, F.initControl6 = function(k, G, j, ee, Z, z) {
                if (e.globalRenderContext.device == null) {
                  F.scriptInterface = new U.ScriptInterface(), F.scriptInterface.settings = T.Settings.get_current(), (0, _.set_globalScriptInterface)(F.scriptInterface);
                  var te = F._createCanvasElement(k), re = te.getContext("webgl2");
                  if (re != null ? (0, e.set_useGlVersion2)(!0) : (console.warn("This browser does not support WebGL 2.0. Some features will work suboptimally. To get the full WWT experience, consider using the latest version of Chrome, Firefox or Edge. In case you would like to use Safari, we recommend that you enable WebGL 2.0"), re = te.getContext("webgl")), re == null && (re = te.getContext("experimental-webgl")), re == null) {
                    var le = te.getContext("2d");
                    e.globalRenderContext.device = le;
                  } else
                    (0, e.set_tilePrepDevice)(re), e.globalRenderContext.gl = re, (0, e.set_useGl)(!0);
                  _.globalWWTControl.canvas = te, e.globalRenderContext.width = te.width, e.globalRenderContext.height = te.height, _.globalWWTControl.setup(te, j, ee, Z), C.Constellations.initializeConstellations(), I.LayerManager.oneTimeInitialization(), z === "earth" ? e.globalRenderContext.set_backgroundImageset(
                    m.Imageset.create(
                      "Blue Marble",
                      // name
                      c.URLHelpers.singleton.coreStaticUrl("wwtweb/tiles.aspx?q={1},{2},{3},bm200407"),
                      m.ImageSetType.earth,
                      // dataSetType
                      m.BandPass.visible,
                      // bandPass
                      m.ProjectionType.toast,
                      // projectionType
                      101,
                      // imageSetID
                      0,
                      // baseLevel
                      7,
                      // levels
                      256,
                      // tileSize (unused)
                      180,
                      // basetileDegrees
                      ".png",
                      // extension
                      !1,
                      // bottomsUp
                      "",
                      // quadTreeMap
                      0,
                      // centerX
                      0,
                      // centerY
                      0,
                      // rotation
                      !1,
                      // sparse
                      c.URLHelpers.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=bm200407"),
                      !0,
                      // defaultSet
                      !1,
                      // elevationModel
                      0,
                      // widthFactor
                      0,
                      // offsetX
                      0,
                      // offsetY
                      "",
                      // creditsText
                      "",
                      // creditsUrl
                      "",
                      // demUrl
                      "",
                      // altUrl
                      6371e3,
                      // meanRadius
                      "Earth"
                      // referenceFrame
                    )
                  ) : z === "black" ? e.globalRenderContext.set_backgroundImageset(
                    m.Imageset.create(
                      "Black Sky Background",
                      // name
                      "",
                      // url
                      m.ImageSetType.sky,
                      // dataSetType
                      m.BandPass.visible,
                      // bandPass
                      m.ProjectionType.toast,
                      // projectionType
                      102,
                      // imageSetID
                      0,
                      // baseLevel
                      0,
                      // levels
                      256,
                      // tileSize (unused)
                      180,
                      // baseTileDegrees
                      ".png",
                      // extension
                      !1,
                      // bottomsUp
                      "0123",
                      // quadTreeMap
                      0,
                      // centerX
                      0,
                      // centerY
                      0,
                      // rotation
                      !1,
                      // sparse
                      "",
                      // thumbnailUrl
                      !1,
                      // defaultSet
                      !1,
                      // elevationModel
                      2,
                      // widthFactor
                      0,
                      // offsetX
                      0,
                      // offsetY
                      "",
                      // creditsText
                      "",
                      // creditsUrl
                      "",
                      // demUrl
                      "",
                      // altUrl
                      1,
                      // meanRadius
                      "Sky"
                      // referenceFrame
                    )
                  ) : e.globalRenderContext.set_backgroundImageset(
                    m.Imageset.create(
                      "DSS",
                      // name
                      c.URLHelpers.singleton.coreStaticUrl("wwtweb/dss.aspx?q={1},{2},{3}"),
                      m.ImageSetType.sky,
                      // dataSetTYpe
                      m.BandPass.visible,
                      // bandPass
                      m.ProjectionType.toast,
                      // projectionType
                      100,
                      // imageSetId
                      0,
                      // baseLevel
                      12,
                      // levels
                      256,
                      // tileSize (unused)
                      180,
                      // baseTileDegrees
                      ".png",
                      // extension
                      !1,
                      // bottomsUp
                      "",
                      // quadTreeMap
                      0,
                      // centerX
                      0,
                      // centerY
                      0,
                      // rotation
                      !1,
                      // sparse
                      c.URLHelpers.singleton.coreStaticUrl("thumbnails/DSS.png"),
                      !0,
                      // defaultSet
                      !1,
                      // elevationModel
                      0,
                      // widthFactor
                      0,
                      // offsetX
                      0,
                      // offsetY
                      "",
                      // creditsText
                      "",
                      // creditsUrl
                      "",
                      // demUrl
                      "",
                      // altUrl
                      1,
                      // meanRadius
                      "Sky"
                      // referenceFrame
                    )
                  );
                }
                return e.globalRenderContext.viewCamera.lng += 0, e.globalRenderContext._initGL(), G && _.globalWWTControl.render(), _.globalScriptInterface;
              }, F._createCanvasElement = function(k) {
                var G = document.getElementById(k), j = document.createElement("canvas");
                return j.height = G.clientHeight, j.width = G.clientWidth, G.appendChild(j), j;
              }, F.useUserLocation = function() {
                navigator.geolocation.getCurrentPosition(F._getLocation, F._getLocationError);
              }, F._getLocation = function(k) {
                k.coords.latitude && T.Settings.get_globalSettings().set_locationLat(k.coords.latitude), k.coords.longitude && T.Settings.get_globalSettings().set_locationLng(k.coords.longitude), k.coords.altitude && T.Settings.get_globalSettings().set_locationAltitude(k.coords.altitude);
              }, F._getLocationError = function(k) {
                k != null && k.coords != null && (k.coords.latitude, k.coords.longitude);
              }, F.setBackgroundImageName = function(k) {
                F.imageSetName = k;
              }, F.setForegroundImageName = function(k) {
                F.imageSetName = k;
              }, F.showLayers = function(k) {
                F.showDataLayers = k;
              };
              var X = {
                _addAnnotation: function(k) {
                  this._annotations.push(k), V.Annotation.batchDirty = !0;
                },
                _removeAnnotation: function(k) {
                  t.ss.remove(this._annotations, k), V.Annotation.batchDirty = !0;
                },
                _clearAnnotations: function() {
                  this._annotations.length = 0, V.Annotation.batchDirty = !0;
                },
                _annotationclicked: function(k, G, j, ee) {
                  if (this._annotations != null && this._annotations.length > 0)
                    for (var Z = t.ss.enumerate(this._annotations); Z.moveNext(); ) {
                      var z = Z.current;
                      if (z.hitTest(this.renderContext, k, G, j, ee))
                        return _.globalScriptInterface._fireAnnotationclicked(k, G, z.get_id()), !0;
                    }
                  return !1;
                },
                _annotationHover: function(k, G, j, ee) {
                  if (this._annotations != null && this._annotations.length > 0)
                    for (var Z = t.ss.enumerate(this._annotations); Z.moveNext(); ) {
                      var z = Z.current;
                      if (z.hitTest(this.renderContext, k, G, j, ee))
                        return this._hoverText = z.get_label(), this._hoverTextPoint = g.Vector2d.create(j, ee), !0;
                    }
                  return !1;
                },
                get_zoomMax: function() {
                  return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() == m.ImageSetType.solarSystem ? this._zoomMaxSolarSystem : this._zoomMax;
                },
                set_zoomMax: function(k) {
                  return this._zoomMax = k, k;
                },
                setSolarSystemMaxZoom: function(k) {
                  this._zoomMaxSolarSystem = k;
                },
                get_zoomMin: function() {
                  return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() == m.ImageSetType.solarSystem ? this._zoomMinSolarSystem : this._zoomMin;
                },
                set_zoomMin: function(k) {
                  return this._zoomMin = k, k;
                },
                setSolarSystemMinZoom: function(k) {
                  this._zoomMinSolarSystem = k;
                },
                _notifyMoveComplete: function() {
                },
                get_crossFadeFrame: function() {
                  return this._crossFadeFrame;
                },
                set_crossFadeFrame: function(k) {
                  return k && this._crossFadeFrame !== k && (this._crossFadeTexture != null, this._crossFadeTexture = this.renderContext._getScreenTexture()), this._crossFadeFrame = k, k || this._crossFadeTexture != null && (this._crossFadeTexture = null), k;
                },
                _fadeFrame: function() {
                  if (this.renderContext.gl != null) {
                    var k = T.Settings.get_active().getSetting(17);
                    if (k.opacity > 0) {
                      var G = o.Color._fromArgbColor(255 - N.UiTools.gamma(255 - t.ss.truncate(k.opacity * 255), 0.45454545454545453), o.Colors.get_black());
                      if (k.opacity > 0 || (G = o.Color._fromArgbColor(255 - N.UiTools.gamma(255 - t.ss.truncate(k.opacity * 255), 1 / 2.2), o.Colors.get_black())), this._crossFadeFrame ? G = o.Color._fromArgbColor(N.UiTools.gamma(t.ss.truncate(k.opacity * 255), 1 / 2.2), o.Colors.get_white()) : this._crossFadeTexture != null && (this._crossFadeTexture = null), this._fadePoints == null) {
                        this._fadePoints = new Array(4);
                        for (var j = 0; j < 4; j++)
                          this._fadePoints[j] = new g.PositionColoredTextured();
                      }
                      this._fadePoints[0].position.x = -this.renderContext.width / 2, this._fadePoints[0].position.y = this.renderContext.height / 2, this._fadePoints[0].position.z = 1347, this._fadePoints[0].tu = 0, this._fadePoints[0].tv = 1, this._fadePoints[0].color = G, this._fadePoints[1].position.x = -this.renderContext.width / 2, this._fadePoints[1].position.y = -this.renderContext.height / 2, this._fadePoints[1].position.z = 1347, this._fadePoints[1].tu = 0, this._fadePoints[1].tv = 0, this._fadePoints[1].color = G, this._fadePoints[2].position.x = this.renderContext.width / 2, this._fadePoints[2].position.y = this.renderContext.height / 2, this._fadePoints[2].position.z = 1347, this._fadePoints[2].tu = 1, this._fadePoints[2].tv = 1, this._fadePoints[2].color = G, this._fadePoints[3].position.x = this.renderContext.width / 2, this._fadePoints[3].position.y = -this.renderContext.height / 2, this._fadePoints[3].position.z = 1347, this._fadePoints[3].tu = 1, this._fadePoints[3].tv = 0, this._fadePoints[3].color = G, this._sprite.draw(this.renderContext, this._fadePoints, 4, this._crossFadeTexture, !0, 1);
                    }
                  }
                },
                captureVideo: function(k, G, j, ee, Z, z) {
                  this.capturingVideo = !0, this._videoBlobReady = k, t.ss.clearKeys(this._videoBlobQueue), this._videoQueueIndex = 0, this._emptyFrames.length = 0, this.dumpFrameParams = new W.VideoOutputType(G, j, ee, z, !0), w.SpaceTimeController.frameDumping = !0, w.SpaceTimeController.framesPerSecond = ee, w.SpaceTimeController.totalFrames = Z, w.SpaceTimeController.currentFrameNumber = 0;
                },
                // To preserve semantic backwards compatibility, this function must requeue itself
                // to be called again in a timeout.
                render: function() {
                  var k = this;
                  this.renderOneFrame(), setTimeout(function() {
                    k.render();
                  }, 10);
                },
                renderOneFrame: function() {
                  this.renderContext.get_backgroundImageset() != null ? this.renderType = this.renderContext.get_backgroundImageset().get_dataSetType() : this.renderType = 2;
                  var k = !1;
                  if (this.canvas.width !== this.canvas.parentNode.clientWidth && (this.canvas.width = this.canvas.parentNode.clientWidth, k = !0), this.canvas.height !== this.canvas.parentNode.clientHeight && (this.canvas.height = this.canvas.parentNode.clientHeight, k = !0), k && this.explorer != null && this.explorer.refresh(), !(this.canvas.width < 1 || this.canvas.height < 1)) {
                    if (k && (this._crossHairs = null), R.Tile.lastDeepestLevel = R.Tile.deepestLevel, f.RenderTriangle.width = this.renderContext.width = this.canvas.width, f.RenderTriangle.height = this.renderContext.height = this.canvas.height, R.Tile.tilesInView = 0, R.Tile.tilesTouched = 0, R.Tile.deepestLevel = 0, w.SpaceTimeController.set_metaNow(t.ss.now()), this.get__mover() != null) {
                      if (w.SpaceTimeController.set_now(this.get__mover().get_currentDateTime()), K.Planets.updatePlanetLocations(this.get_solarSystemMode()), this.get__mover() != null) {
                        var G = this.get__mover().get_currentPosition();
                        if (this.renderContext.targetCamera = G.copy(), this.renderContext.viewCamera = G.copy(), this.renderContext.space && T.Settings.get_active().get_galacticMode()) {
                          var j = E.Coordinates.j2000toGalactic(G.get_RA() * 15, G.get_dec());
                          this.renderContext.targetAlt = this.renderContext.alt = j[1], this.renderContext.targetAz = this.renderContext.az = j[0];
                        } else if (this.renderContext.space && T.Settings.get_active().get_localHorizonMode()) {
                          var ee = E.Coordinates.equitorialToHorizon(E.Coordinates.fromRaDec(G.get_RA(), G.get_dec()), w.SpaceTimeController.get_location(), w.SpaceTimeController.get_now());
                          this.renderContext.targetAlt = this.renderContext.alt = ee.get_alt(), this.renderContext.targetAz = this.renderContext.az = ee.get_az();
                        }
                        this.get__mover().get_complete() && (_.globalScriptInterface._fireArrived(this.get__mover().get_currentPosition().get_RA(), this.get__mover().get_currentPosition().get_dec(), e.globalRenderContext.viewCamera.zoom), this.set__mover(null), this._notifyMoveComplete());
                      }
                    } else
                      w.SpaceTimeController.updateClock(), K.Planets.updatePlanetLocations(this.get_solarSystemMode()), this._updateViewParameters();
                    if (this.renderContext.clear(), this.renderType === 4) {
                      this._solarSystemTrack < 20 && (K.Planets.getAdjustedPlanetRadius(this._solarSystemTrack), this.renderContext.get_solarSystemCameraDistance(), this.renderContext.get_fovLocal()), this._trackingObject == null, this.renderContext.setupMatricesSolarSystem(!0);
                      var Z = this.renderContext.viewCamera.zoom, z = Math.min(1, Math.max(0, Math.log(Z) - 8.4) / 4.2), te = Math.min(1, Math.max(0, Math.log(Z) - 17.9) / 2.3), re = this.renderContext.get_world(), le = this.renderContext.get_world().clone();
                      le._multiply(g.Matrix3d._scaling(1e5, 1e5, 1e5)), le._multiply(g.Matrix3d._rotationX(23.5 / 180 * Math.PI)), le._multiply(g.Matrix3d.translation(this.renderContext.cameraPosition)), this.renderContext.set_world(le), this.renderContext.set_worldBase(le), this.renderContext.space = !0, this.renderContext.makeFrustum();
                      var ae = this.renderContext.lighting;
                      if (this.renderContext.lighting = !1, T.Settings.get_active().get_solarSystemMilkyWay() && z < 1 && (this._milkyWayBackground == null && (this._milkyWayBackground = this.getImagesetByName("Digitized Sky Survey (Color)")), this._milkyWayBackground != null)) {
                        f.RenderTriangle.cullInside = !0;
                        var oe = (1 - z) / 2;
                        this.renderContext.drawImageSet(this._milkyWayBackground, oe * 100), f.RenderTriangle.cullInside = !1;
                      }
                      this._drawSkyOverlays(), this.renderContext.lighting = ae, this.renderContext.space = !1, this.renderContext.set_world(re), this.renderContext.set_worldBase(re), this.renderContext.makeFrustum();
                      var de = this.renderContext.cameraPosition, ve = this.renderContext.get_world(), ce = this.renderContext.get_world();
                      ce._multiply(g.Matrix3d.translation(this.renderContext.viewCamera.viewTarget)), this.renderContext.cameraPosition = g.Vector3d.subtractVectors(this.renderContext.cameraPosition, this.renderContext.viewCamera.viewTarget), this.renderContext.set_world(ce), this.renderContext.makeFrustum(), T.Settings.get_active().get_solarSystemCosmos() && v.Grids.drawCosmos3D(this.renderContext, 1), T.Settings.get_active().get_solarSystemMilkyWay() && te > 0 && v.Grids.drawGalaxyImage(this.renderContext, te), T.Settings.get_active().get_solarSystemStars() && v.Grids.drawStars3D(this.renderContext, 1), ce = ve;
                      var he = this.renderContext.viewCamera.viewTarget, ye = g.Vector3d.create(-he.x, -he.y, -he.z);
                      this.renderContext.cameraPosition = de, ce._multiply(g.Matrix3d.translation(ye)), this.renderContext.set_world(ce), this.renderContext.makeFrustum(), I.LayerManager._draw(this.renderContext, 1, !0, "Sky", !0, !1), this.renderContext.set_world(ve), this.renderContext.makeFrustum(), this.renderContext.get_solarSystemCameraDistance() < 15e3 && (this.renderContext.setupMatricesSolarSystem(!1), T.Settings.get_active().get_solarSystemMinorPlanets() && L.MinorPlanets.drawMPC3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget), T.Settings.get_active().get_solarSystemPlanets() && d.Planets3d.drawPlanets3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget));
                    } else {
                      if (!this.renderType || this.renderType === 1 ? this.renderContext._setupMatricesLand3d() : this.renderContext.setupMatricesSpace3d(this.renderContext.width, this.renderContext.height), this.renderContext.drawImageSet(this.renderContext.get_backgroundImageset(), 100), this.renderContext.get_foregroundImageset() != null)
                        if (this.renderContext.get_foregroundImageset().get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType())
                          this.renderContext.set_foregroundImageset(null);
                        else if (this.renderContext.viewCamera.opacity !== 100 && this.renderContext.gl == null) {
                          (this._foregroundCanvas.width !== this.renderContext.width || this._foregroundCanvas.height !== this.renderContext.height) && (this._foregroundCanvas.width = t.ss.truncate(this.renderContext.width), this._foregroundCanvas.height = t.ss.truncate(this.renderContext.height));
                          var fe = this.renderContext.device;
                          this._fgDevice.clearRect(0, 0, this.renderContext.width, this.renderContext.height), this.renderContext.device = this._fgDevice, this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), 100), this.renderContext.device = fe, this.renderContext.device.save(), this.renderContext.device.globalAlpha = this.renderContext.viewCamera.opacity / 100, this.renderContext.device.drawImage(this._foregroundCanvas, 0, 0), this.renderContext.device.restore();
                        } else
                          this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), this.renderContext.viewCamera.opacity);
                      if (this.renderType === 2)
                        for (var Ce = t.ss.enumerate(this.renderContext.get_catalogHipsImagesets()); Ce.moveNext(); ) {
                          var Ae = Ce.current;
                          Ae.get_hipsProperties().get_catalogSpreadSheetLayer().enabled && Ae.get_hipsProperties().get_catalogSpreadSheetLayer().lastVersion === Ae.get_hipsProperties().get_catalogSpreadSheetLayer().get_version() && this.renderContext.drawImageSet(Ae, 100);
                        }
                      if (this.renderType === 2 && T.Settings.get_active().get_showSolarSystem() && (K.Planets.drawPlanets(this.renderContext, 1), this.constellation = C.Constellations.containment.findConstellationForPoint(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), this._drawSkyOverlays()), this.get_planetLike() || this.get_space()) {
                        if (this.get_space())
                          this.renderContext.set_worldBaseNonRotating(this.renderContext.get_world()), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                        else {
                          var Te = E.Coordinates.mstFromUTC2(w.SpaceTimeController.get_now(), 0) / 180 * Math.PI;
                          this.renderContext.set_worldBaseNonRotating(g.Matrix3d.multiplyMatrix(g.Matrix3d._rotationY(Te), this.renderContext.get_worldBase())), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                        }
                        var Re = this.getCurrentReferenceFrame();
                        I.LayerManager._draw(this.renderContext, 1, this.get_space(), Re, !0, this.get_space());
                      }
                    }
                    var De = this.renderContext.get_world(), Oe = this.renderContext.get_view(), Ne = this.renderContext.get_projection();
                    if (T.Settings.get_current().get_showCrosshairs() && this._drawCrosshairs(this.renderContext), this.uiController != null)
                      this.uiController.render(this.renderContext);
                    else {
                      V.Annotation.prepBatch(this.renderContext);
                      for (var Fe = t.ss.enumerate(this._annotations); Fe.moveNext(); ) {
                        var $e = Fe.current;
                        $e.draw(this.renderContext);
                      }
                      if (V.Annotation.drawBatch(this.renderContext), t.ss.now() - this._lastMouseMove > 400) {
                        var ze = this.getCoordinatesForScreenPoint(this._hoverTextPoint.x, this._hoverTextPoint.y);
                        this._annotationHover(ze.x, ze.y, this._hoverTextPoint.x, this._hoverTextPoint.y), this._lastMouseMove = new Date(2100, 1, 1);
                      }
                      t.ss.emptyString(this._hoverText) || this._drawHoverText(this.renderContext);
                    }
                    var se = !O.TileCache.get_queueCount();
                    this.renderContext.setupMatricesOverlays(), this._fadeFrame(), this._frameCount++, O.TileCache.decimateQueue(), O.TileCache.processQueue(this.renderContext), R.Tile.currentRenderGeneration++, S.TourPlayer.get_playing() || this.set_crossFadeFrame(!1), this.renderContext.set_world(De), this.renderContext.set_view(Oe), this.renderContext.set_projection(Ne);
                    var be = t.ss.now(), Pe = be - this._lastUpdate;
                    Pe > 1e3 && (this._lastUpdate = be, this._frameCount = 0, f.RenderTriangle.trianglesRendered = 0, f.RenderTriangle.trianglesCulled = 0), this.capturingVideo && (this.dumpFrameParams != null && (!this.dumpFrameParams.waitDownload || se) && (this.captureFrameForVideo(this._videoBlobReady, this.dumpFrameParams.width, this.dumpFrameParams.height, this.dumpFrameParams.format), w.SpaceTimeController.nextFrame()), w.SpaceTimeController.get_doneDumping() && (w.SpaceTimeController.frameDumping = !1, w.SpaceTimeController.cancelFrameDump = !1, this.capturingVideo = !1));
                  }
                },
                getCurrentReferenceFrame: function() {
                  if (this.renderContext.get_backgroundImageset() == null)
                    return "Sun";
                  if (!t.ss.emptyString(this.renderContext.get_backgroundImageset().get_referenceFrame()))
                    return this.renderContext.get_backgroundImageset().get_referenceFrame();
                  if (!this.renderContext.get_backgroundImageset().get_dataSetType())
                    return "Earth";
                  if (this.renderContext.get_backgroundImageset().get_name() === "Visible Imagery" && this.renderContext.get_backgroundImageset().get_url().toLowerCase().indexOf("mars") > -1)
                    return this.renderContext.get_backgroundImageset().set_referenceFrame("Mars"), this.renderContext.get_backgroundImageset().get_referenceFrame();
                  if (this.renderContext.get_backgroundImageset().get_dataSetType() === 1)
                    for (var k = t.ss.enumerate(F.solarSystemObjectsNames); k.moveNext(); ) {
                      var G = k.current;
                      if (this.renderContext.get_backgroundImageset().get_name().toLowerCase().indexOf(G.toLowerCase()) > -1)
                        return this.renderContext.get_backgroundImageset().set_referenceFrame(G), G;
                    }
                  return this.renderContext.get_backgroundImageset().get_dataSetType() === 2 ? "Sky" : "";
                },
                get_planetLike: function() {
                  return this.renderContext.get_backgroundImageset() != null ? !this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 : !0;
                },
                get_space: function() {
                  return this.renderContext.get_backgroundImageset() != null ? this.renderContext.get_backgroundImageset().get_dataSetType() === 2 : !0;
                },
                _drawSkyOverlays: function() {
                  T.Settings.get_active().get_showConstellationPictures() && !this.freestandingMode && C.Constellations.drawArtwork(this.renderContext), T.Settings.get_active().get_showConstellationFigures() && (F.constellationsFigures == null && (F.constellationsFigures = C.Constellations.create(
                    "Constellations",
                    c.URLHelpers.singleton.engineAssetUrl("figures.txt"),
                    !1,
                    // "boundry"
                    !1,
                    // "noInterpollation"
                    !1
                    // "resource"
                  )), F.constellationsFigures.draw(this.renderContext, !1, "UMA", !1)), T.Settings.get_active().get_showEclipticGrid() && (v.Grids.drawEclipticGrid(this.renderContext, 1, T.Settings.get_active().get_eclipticGridColor()), T.Settings.get_active().get_showEclipticGridText() && v.Grids.drawEclipticGridText(this.renderContext, 1, T.Settings.get_active().get_eclipticGridColor())), T.Settings.get_active().get_showGalacticGrid() && (v.Grids.drawGalacticGrid(this.renderContext, 1, T.Settings.get_active().get_galacticGridColor()), T.Settings.get_active().get_showGalacticGridText() && v.Grids.drawGalacticGridText(this.renderContext, 1, T.Settings.get_active().get_galacticGridColor())), T.Settings.get_active().get_showAltAzGrid() && (v.Grids.drawAltAzGrid(this.renderContext, 1, T.Settings.get_active().get_altAzGridColor()), T.Settings.get_active().get_showAltAzGridText() && v.Grids.drawAltAzGridText(this.renderContext, 1, T.Settings.get_active().get_altAzGridColor())), T.Settings.get_active().get_showPrecessionChart() && v.Grids.drawPrecessionChart(this.renderContext, 1, T.Settings.get_active().get_precessionChartColor()), T.Settings.get_active().get_showEcliptic() && (v.Grids.drawEcliptic(this.renderContext, 1, T.Settings.get_active().get_eclipticColor()), T.Settings.get_active().get_showEclipticOverviewText() && v.Grids.drawEclipticText(this.renderContext, 1, T.Settings.get_active().get_eclipticColor())), T.Settings.get_active().get_showGrid() && (v.Grids.drawEquitorialGrid(this.renderContext, 1, T.Settings.get_active().get_equatorialGridColor()), T.Settings.get_active().get_showEquatorialGridText() && v.Grids.drawEquitorialGridText(this.renderContext, 1, T.Settings.get_active().get_equatorialGridColor())), T.Settings.get_active().get_showConstellationBoundries() && (F.constellationsBoundries == null && (F.constellationsBoundries = C.Constellations.create(
                    "Constellations",
                    c.URLHelpers.singleton.engineAssetUrl("constellations.txt"),
                    !0,
                    // "boundry"
                    !1,
                    // "noInterpollation"
                    !1
                    // "resource"
                  )), F.constellationsBoundries.draw(this.renderContext, T.Settings.get_active().get_showConstellationSelection(), this.constellation, !1)), T.Settings.get_active().get_showConstellationLabels() && C.Constellations.drawConstellationNames(this.renderContext, 1, o.Colors.get_yellow());
                },
                _drawHoverText: function(k) {
                  if (k.gl == null) {
                    var G = k.device;
                    G.save(), G.fillStyle = "White", G.font = "15px Arial", G.fillText(this._hoverText, this._hoverTextPoint.x, this._hoverTextPoint.y), G.restore();
                  }
                },
                rAtoViewLng: function(k) {
                  return (180 - k / 24 * 360 - 180 + 540) % 360 - 180;
                },
                _updateViewParameters: function() {
                  if (this.renderContext.space && this._tracking && this._trackingObject != null)
                    if (T.Settings.get_active().get_galacticMode() && this.renderContext.space) {
                      var k = E.Coordinates.j2000toGalactic(this._trackingObject.get_RA() * 15, this._trackingObject.get_dec());
                      this.renderContext.targetAlt = this.renderContext.alt = k[1], this.renderContext.targetAz = this.renderContext.az = k[0];
                    } else if (this.renderContext.space && T.Settings.get_active().get_localHorizonMode()) {
                      var G = E.Coordinates.equitorialToHorizon(E.Coordinates.fromRaDec(this._trackingObject.get_RA(), this._trackingObject.get_dec()), w.SpaceTimeController.get_location(), w.SpaceTimeController.get_now());
                      this.renderContext.targetAlt = this.renderContext.alt = G.get_alt(), this.renderContext.targetAz = this.renderContext.az = G.get_az();
                    } else
                      this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng = this.rAtoViewLng(this._trackingObject.get_RA()), this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat = this._trackingObject.get_dec();
                  else
                    this.get_solarSystemMode() || (this._tracking = !1, this._trackingObject = null);
                  var j = 1 - 0.8, ee = 0.8;
                  if (!this._tracking) {
                    var Z = this.renderContext.viewCamera.zoom / 4e3;
                    this.renderContext.viewCamera.zoom > 360 && (Z = 360 / 4e4), this.renderContext.space && (T.Settings.get_active().get_localHorizonMode() || T.Settings.get_active().get_galacticMode()) ? (Math.abs(this.renderContext.targetAlt - this.renderContext.alt) >= Z | Math.abs(this.renderContext.targetAz - this.renderContext.az) >= Z) === 1 && (this.renderContext.alt += (this.renderContext.targetAlt - this.renderContext.alt) / 10, Math.abs(this.renderContext.targetAz - this.renderContext.az) > 170 ? this.renderContext.targetAz > this.renderContext.az ? this.renderContext.az += (this.renderContext.targetAz - (360 + this.renderContext.az)) / 10 : this.renderContext.az += (360 + this.renderContext.targetAz - this.renderContext.az) / 10 : this.renderContext.az += (this.renderContext.targetAz - this.renderContext.az) / 10, this.renderContext.az = (this.renderContext.az + 720) % 360) : (Math.abs(this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) >= Z | Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) >= Z) === 1 ? (this.renderContext.viewCamera.lat += (this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) / 10, Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) > 170 ? this.renderContext.targetCamera.lng > this.renderContext.viewCamera.lng ? this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - (360 + this.renderContext.viewCamera.lng)) / 10 : this.renderContext.viewCamera.lng += (360 + this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10 : this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10, this.renderContext.viewCamera.lng = (this.renderContext.viewCamera.lng + 720) % 360) : (this.renderContext.viewCamera.lat !== this.renderContext.targetCamera.lat || this.renderContext.viewCamera.lng !== this.renderContext.targetCamera.lng) && (this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat, this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng);
                  }
                  this.renderContext.viewCamera.zoom = ee * this.renderContext.viewCamera.zoom + j * this.renderContext.targetCamera.zoom, this.renderContext.viewCamera.rotation = ee * this.renderContext.viewCamera.rotation + j * this.renderContext.targetCamera.rotation, this.renderContext.viewCamera.angle = ee * this.renderContext.viewCamera.angle + j * this.renderContext.targetCamera.angle;
                },
                move: function(k, G) {
                  var j = Math.atan2(G, k), ee = Math.sqrt(k * k + G * G);
                  this.get_solarSystemMode() || this.get_planetLike() ? (k = Math.cos(j + this.renderContext.viewCamera.rotation) * ee, G = Math.sin(j + this.renderContext.viewCamera.rotation) * ee) : (k = Math.cos(j - this.renderContext.viewCamera.rotation) * ee, G = Math.sin(j - this.renderContext.viewCamera.rotation) * ee);
                  var Z = this.renderContext.get_fovScale() / 3600;
                  this.renderContext.get_backgroundImageset().get_dataSetType() == m.ImageSetType.solarSystem && (Z = 0.06);
                  var z = Z / Math.max(0.2, Math.cos(this.renderContext.viewCamera.lat / 180 * Math.PI));
                  (!this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 || this.renderContext.get_backgroundImageset().get_dataSetType() == m.ImageSetType.solarSystem) && (z *= 6.3, Z *= 6.3), this.renderContext.space && (T.Settings.get_active().get_galacticMode() || T.Settings.get_active().get_localHorizonMode()) ? (k = T.Settings.get_active().get_localHorizonMode() ? -k : k, this.renderContext.targetAz += k * z, this.renderContext.targetAz = (this.renderContext.targetAz + 720) % 360, this.renderContext.targetAlt += G * Z, this.renderContext.targetAlt > 90 && (this.renderContext.targetAlt = 90), this.renderContext.targetAlt < -90 && (this.renderContext.targetAlt = -90)) : (this.renderContext.targetCamera.lng -= k * z, this.renderContext.targetCamera.lng = (this.renderContext.targetCamera.lng + 720) % 360, this.renderContext.targetCamera.lat += G * Z, this.renderContext.targetCamera.lat > 90 && (this.renderContext.targetCamera.lat = 90), this.renderContext.targetCamera.lat < -90 && (this.renderContext.targetCamera.lat = -90)), T.Settings.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy()), k && G && (this._tracking = !1, this._trackingObject = null);
                },
                zoom: function(k) {
                  this.renderContext.targetCamera.zoom *= k, this.renderContext.targetCamera.zoom > this.get_zoomMax() && (this.renderContext.targetCamera.zoom = this.get_zoomMax()), T.Settings.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy());
                },
                roll: function(k) {
                  this.renderContext.targetCamera.rotation += k;
                },
                // Gesture events
                onGestureStart: function(k) {
                  this._mouseDown = !1, this._beginZoom = this.renderContext.viewCamera.zoom;
                },
                onGestureChange: function(k) {
                  var G = k;
                  this._mouseDown = !1, this.renderContext.targetCamera.zoom = this.renderContext.viewCamera.zoom = Math.min(360, this._beginZoom * (1 / G.scale));
                },
                onGestureEnd: function(k) {
                  this._mouseDown = !1;
                },
                // Touch events
                onTouchStart: function(k) {
                  var G = k;
                  if (G.preventDefault(), G.stopPropagation(), this._lastX = G.targetTouches[0].pageX, this._lastY = G.targetTouches[0].pageY, G.targetTouches.length === 2) {
                    this._hasTwoTouches = !0;
                    return;
                  }
                  if (this.uiController != null) {
                    var j = new B(this._lastX, this._lastY);
                    if (this.uiController.mouseDown(this, j)) {
                      this._mouseDown = !1, this._dragging = !1;
                      return;
                    }
                  }
                  this._mouseDown = !0;
                },
                onTouchMove: function(k) {
                  var G = k;
                  if (this._hasTwoTouches) {
                    var j = G.touches[0], ee = G.touches[1], Z = new Array(2);
                    if (Z[0] = g.Vector2d.create(j.pageX, j.pageY), Z[1] = g.Vector2d.create(ee.pageX, ee.pageY), this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
                      var z = g.Vector2d.create(this.renderContext.width / 2, this.renderContext.height / 2), te = g.Vector2d.subtract(Z[0], this._pinchingZoomRect[0]), re = g.Vector2d.subtract(Z[1], this._pinchingZoomRect[1]), le = g.Vector2d.subtract(this._pinchingZoomRect[0], z), ae = g.Vector2d.subtract(this._pinchingZoomRect[1], z);
                      le.normalize(), ae.normalize();
                      var oe = te.x * le.x + te.y * le.y, de = re.x * ae.x + re.y * ae.y, ve = g.Vector2d.create(oe * le.x, oe * le.y), ce = g.Vector2d.create(de * ae.x, de * ae.y), he = g.Vector2d.subtract(te, ve), ye = g.Vector2d.subtract(re, ce), fe = ve.get_length() + ce.get_length(), Ce = he.get_length() + ye.get_length();
                      if (fe >= Ce) {
                        var Ae = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), Te = this.getDistance(Z[0], Z[1]), Re = Ae / Te;
                        this.zoom(Re);
                      } else {
                        var De = g.Vector2d.subtract(this._pinchingZoomRect[0], z), Oe = g.Vector2d.subtract(this._pinchingZoomRect[1], z), Ne = g.Vector2d.subtract(Z[0], z), Fe = g.Vector2d.subtract(Z[1], z), $e = this.crossProductZ(De, Ne), ze = this.crossProductZ(Oe, Fe), se = Math.asin($e / (De.get_length() * Ne.get_length())), be = Math.asin(ze / (Oe.get_length() * Fe.get_length()));
                        if (se * be >= 0) {
                          var Pe = se + be;
                          (this.get_planetLike() || this.get_solarSystemMode()) && (Pe *= -1), this.roll(Pe);
                        }
                      }
                    }
                    this._pinchingZoomRect = Z, G.stopPropagation(), G.preventDefault();
                    return;
                  }
                  if (G.preventDefault(), G.stopPropagation(), this._mouseDown) {
                    this._dragging = !0;
                    var Ve = G.targetTouches[0].pageX - this._lastX, me = G.targetTouches[0].pageY - this._lastY;
                    this.move(Ve, me), this._lastX = G.targetTouches[0].pageX, this._lastY = G.targetTouches[0].pageY;
                  } else if (this.uiController != null && this.uiController.mouseMove(this, k)) {
                    k.preventDefault(), k.stopPropagation();
                    return;
                  }
                },
                onTouchEnd: function(k) {
                  var G = k;
                  if (G.preventDefault(), G.stopPropagation(), this._pinchingZoomRect[0] = null, this._pinchingZoomRect[1] = null, this._hasTwoTouches) {
                    G.touches.length < 2 && (this._hasTwoTouches = !1);
                    return;
                  }
                  if (this.uiController != null) {
                    var j = new B(this._lastX, this._lastY);
                    if (this.uiController.mouseUp(this, j)) {
                      this._mouseDown = !1, this._dragging = !1;
                      return;
                    }
                  }
                  this._mouseDown = !1, this._dragging = !1;
                },
                // Pointer events
                onPointerDown: function(k) {
                  var G = k, j = 0, ee = arguments[0], Z = arguments[0].target;
                  if (Z.setPointerCapture ? Z.setPointerCapture(ee.pointerId) : Z.msSetPointerCapture && Z.msSetPointerCapture(ee.pointerId), this._pointerIds[0] === G.pointerId)
                    j = 0;
                  else if (this._pointerIds[1] === G.pointerId)
                    j = 1;
                  else if (!this._pointerIds[0])
                    j = 0;
                  else if (!this._pointerIds[1])
                    j = 1;
                  else
                    return;
                  this._pointerIds[j] = G.pointerId, this._pinchingZoomRect[j] = g.Vector2d.create(k.offsetX, k.offsetY);
                },
                onPointerMove: function(k) {
                  var G = k, j = 0;
                  if (this._pointerIds[0] === G.pointerId)
                    j = 0;
                  else if (this._pointerIds[1] === G.pointerId)
                    j = 1;
                  else
                    return;
                  if (this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
                    var ee = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), Z = g.Vector2d.create(k.offsetX, k.offsetY), z = this.getDistance(Z, this._pinchingZoomRect[0]), te = ee / z, re = Math.abs(Math.log(te));
                    isFinite(re) || (re = 1e3);
                    var le = this.getDistance(Z, this._pinchingZoomRect[1]), ae = ee / le, oe = Math.abs(Math.log(ae));
                    isFinite(oe) || (oe = 1e3), oe < re ? (this._pinchingZoomRect[0] = Z, this.zoom(ae)) : (this._pinchingZoomRect[1] = Z, this.zoom(te));
                  } else
                    this._pinchingZoomRect[j] = g.Vector2d.create(k.offsetX, k.offsetY);
                  k.stopPropagation(), k.preventDefault();
                },
                // NOTE! As of July 2020, Chrome on Macs seems to sometimes fail to
                // deliver this event. So our pinch-detection code needs to be robust to
                // that.
                onPointerUp: function(k) {
                  var G = k;
                  this._pointerIds[0] === G.pointerId && (this._pointerIds[0] = -2, this._pinchingZoomRect[0] = null), this._pointerIds[1] === G.pointerId && (this._pointerIds[1] = -2, this._pinchingZoomRect[1] = null);
                },
                // Mouse events
                onMouseDown: function(k) {
                  document.addEventListener("mousemove", t.ss.bind("onMouseMove", this), !1), document.addEventListener("mouseup", t.ss.bind("onMouseUp", this), !1), !(this.uiController != null && this.uiController.mouseDown(this, k)) && (this._mouseDown = !0, this._lastX = l.Mouse.offsetX(this.canvas, k), this._lastY = l.Mouse.offsetY(this.canvas, k));
                },
                onMouseMove: function(k) {
                  if (this._lastMouseMove = t.ss.now(), this._hoverTextPoint = g.Vector2d.create(l.Mouse.offsetX(this.canvas, k), l.Mouse.offsetY(this.canvas, k)), this._hoverText = "", this._mouseDown)
                    k.preventDefault(), k.stopPropagation(), this._moved = !0, k.ctrlKey ? this._tilt(l.Mouse.offsetX(this.canvas, k) - this._lastX, l.Mouse.offsetY(this.canvas, k) - this._lastY) : this.move(l.Mouse.offsetX(this.canvas, k) - this._lastX, l.Mouse.offsetY(this.canvas, k) - this._lastY), this._lastX = l.Mouse.offsetX(this.canvas, k), this._lastY = l.Mouse.offsetY(this.canvas, k);
                  else if (this.uiController != null && this.uiController.mouseMove(this, k)) {
                    k.preventDefault(), k.stopPropagation();
                    return;
                  }
                },
                onMouseUp: function(k) {
                  if (document.removeEventListener("mousemove", t.ss.bind("onMouseMove", this), !1), document.removeEventListener("mouseup", t.ss.bind("onMouseUp", this), !1), this.uiController != null && this.uiController.mouseUp(this, k)) {
                    this._mouseDown = !1, k.preventDefault();
                    return;
                  }
                  if (this._mouseDown && !this._moved) {
                    var G = this.getCoordinatesForScreenPoint(l.Mouse.offsetX(this.canvas, k), l.Mouse.offsetY(this.canvas, k));
                    this._annotationclicked(G.x, G.y, l.Mouse.offsetX(this.canvas, k), l.Mouse.offsetY(this.canvas, k)) || _.globalScriptInterface._fireClick(G.x, G.y);
                  }
                  this._mouseDown = !1, this._moved = !1;
                },
                // WheelEvent is a WWT-specific name that we use to abstract across the
                // different wheel-motion events that browsers provide: "wheel",
                // "mousewheel", "DOMMouseScroll".
                onMouseWheel: function(k) {
                  var G = k, j;
                  G.deltaY ? j = -G.deltaY : G.detail ? j = G.detail * -1 : j = G.wheelDelta, j > 0 ? this.zoom(0.9) : this.zoom(1.1), k.stopPropagation(), k.preventDefault();
                },
                onDoubleClick: function(k) {
                  F.showDataLayers = !0;
                },
                onKeyDown: function(k) {
                  this.uiController != null && this.uiController.keyDown(this, k);
                },
                getDistance: function(k, G) {
                  var j, ee;
                  return j = k.x - G.x, ee = k.y - G.y, Math.sqrt(j * j + ee * ee);
                },
                crossProductZ: function(k, G) {
                  return k.x * G.y - k.y * G.x;
                },
                onContextMenu: function(k) {
                  k.preventDefault(), k.stopPropagation();
                },
                _tilt: function(k, G) {
                  this.renderContext.targetCamera.rotation += k * 1e-3, this.renderContext.targetCamera.angle += G * 1e-3, this.renderContext.targetCamera.angle < -1.52 && (this.renderContext.targetCamera.angle = -1.52), this.renderContext.targetCamera.angle > 0 && (this.renderContext.targetCamera.angle = 0);
                },
                getCoordinatesForScreenPoint: function(k, G) {
                  var j = g.Vector2d.create(k, G), ee = this.transformPickPointToWorldSpace(j, this.renderContext.width, this.renderContext.height);
                  return E.Coordinates.cartesianToSphericalSky(ee);
                },
                transformPickPointToWorldSpace: function(k, G, j) {
                  var ee = new g.Vector3d();
                  if (this.renderContext.get_projection() != null) {
                    var Z = new g.Vector3d();
                    Z.x = (2 * k.x / G - 1) / this.renderContext.get_projection().get_m11(), Z.y = (2 * k.y / j - 1) / this.renderContext.get_projection().get_m22(), Z.z = 1;
                    var z = g.Matrix3d.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
                    z.invert(), ee.x = Z.x * z.get_m11() + Z.y * z.get_m21() + Z.z * z.get_m31(), ee.y = Z.x * z.get_m12() + Z.y * z.get_m22() + Z.z * z.get_m32(), ee.z = Z.x * z.get_m13() + Z.y * z.get_m23() + Z.z * z.get_m33(), ee.normalize();
                  }
                  return ee;
                },
                transformWorldPointToPickSpace: function(k, G, j) {
                  var ee = g.Matrix3d.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
                  ee.invert();
                  var Z = new g.Vector2d(), z = k.x * ee.get_m31() + k.y * ee.get_m32() + k.z * ee.get_m33(), te = (k.x * ee.get_m11() + k.y * ee.get_m12() + k.z * ee.get_m13()) / z, re = (k.x * ee.get_m21() + k.y * ee.get_m22() + k.z * ee.get_m23()) / z;
                  return Z.x = Math.round((1 + this.renderContext.get_projection().get_m11() * te) * (G / 2)), Z.y = Math.round((1 + this.renderContext.get_projection().get_m22() * re) * (j / 2)), Z;
                },
                getScreenPointForCoordinates: function(k, G) {
                  var j = g.Vector2d.create(k, G), ee = E.Coordinates.sphericalSkyToCartesian(j), Z = this.transformWorldPointToPickSpace(ee, this.renderContext.width, this.renderContext.height);
                  return Z;
                },
                // Note that due to limitations of ScriptSharp, this method was public even
                // though it should really have been private.
                setup: function(k, G, j, ee) {
                  var Z = this;
                  window.addEventListener("contextmenu", t.ss.bind("onContextMenu", this), !1), document.body.addEventListener("keydown", t.ss.bind("onKeyDown", this), !1), k.addEventListener("dblclick", t.ss.bind("onDoubleClick", this), !1), k.addEventListener("mousedown", t.ss.bind("onMouseDown", this), !1), k.addEventListener("wheel", t.ss.bind("onMouseWheel", this), !1), k.addEventListener("mousewheel", t.ss.bind("onMouseWheel", this), !1), k.addEventListener("DOMMouseScroll", t.ss.bind("onMouseWheel", this), !1), k.addEventListener("touchstart", t.ss.bind("onTouchStart", this), !1), k.addEventListener("touchmove", t.ss.bind("onTouchMove", this), !1), k.addEventListener("touchend", t.ss.bind("onTouchEnd", this), !1), k.addEventListener("gesturechange", t.ss.bind("onGestureChange", this), !1), k.addEventListener("gesturestart", t.ss.bind("onGestureStart", this), !1), k.addEventListener("gestureend", t.ss.bind("onGestureEnd", this), !1), k.addEventListener("pointerdown", t.ss.bind("onPointerDown", this), !1), k.addEventListener("pointermove", t.ss.bind("onPointerMove", this), !1), k.addEventListener("pointerup", t.ss.bind("onPointerUp", this), !1), this.renderContext.viewCamera.lat = G, this.renderContext.viewCamera.lng = j, this.renderContext.viewCamera.zoom = ee, this.renderContext.targetCamera = this.renderContext.viewCamera.copy(), this.renderContext.gl == null && (this._foregroundCanvas = document.createElement("canvas"), this._foregroundCanvas.width = k.width, this._foregroundCanvas.height = k.height, this._fgDevice = this._foregroundCanvas.getContext("2d")), this.freestandingMode ? setTimeout(function() {
                    Z._setupComplete();
                  }, 0) : (0, _.loadWtmlFile)(c.URLHelpers.singleton.coreDynamicUrl("wwtweb/catalog.aspx?X=ImageSets6"), t.ss.bind("_setupComplete", this), !0);
                },
                _setupComplete: function() {
                  _.globalScriptInterface._fireReady();
                },
                gotoRADecZoom: function(k, G, j, ee, Z) {
                  this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(
                    !1,
                    // noZoom
                    ee,
                    this._cameraParametersFromRADecZoom(k, G, j, Z),
                    e.globalRenderContext.get_foregroundImageset(),
                    e.globalRenderContext.get_backgroundImageset()
                  );
                },
                _cameraParametersFromRADecZoom: function(k, G, j, ee) {
                  for (; k > 24; )
                    k -= 24;
                  for (; k < 0; )
                    k += 24;
                  G = g.DoubleUtilities.clamp(G, -90, 90), j = g.DoubleUtilities.clamp(j, this.get_zoomMin(), this.get_zoomMax());
                  var Z = ee ?? e.globalRenderContext.viewCamera.rotation, z = y.CameraParameters.create(G, e.globalRenderContext.rAtoViewLng(k), j, Z, e.globalRenderContext.viewCamera.angle, e.globalRenderContext.viewCamera.opacity);
                  return z;
                },
                timeToRADecZoom: function(k, G, j, ee) {
                  var Z = this._cameraParametersFromRADecZoom(k, G, j, ee);
                  return this.timeToTargetFull(Z, !1);
                },
                get_solarSystemMode: function() {
                  return this.renderContext.get_backgroundImageset() == null ? !1 : this.renderContext.get_backgroundImageset().get_dataSetType() == m.ImageSetType.solarSystem;
                },
                gotoTarget: function(k, G, j, ee) {
                  if (k != null) {
                    if (ee && this.get_solarSystemMode() && (k.get_classification() === 536870912 && k.get_type() !== 4 || k.get_classification() === 1 || k.get_classification() === 1048576 && k.get_distance() > 0)) {
                      var Z = 65536;
                      if (k.get_classification() === 1 || k.get_classification() === 1048576)
                        Z = 20;
                      else
                        try {
                          k.get_target() !== 65536 ? Z = k.get_target() : Z = K.Planets.getPlanetIDFromName(k.get_name());
                        } catch {
                        }
                      if (Z !== 65536) {
                        if (this._trackingObject = k, Z === this._solarSystemTrack && !(k.get_classification() === 1 || k.get_classification() === 1048576)) {
                          this.gotoTarget3(k.get_camParams(), G, j);
                          return;
                        }
                        var z = 4;
                        Z === 20 ? z = 17 : z += 13 * (101 - T.Settings.get_active().get_solarSystemScale()) / 100, j && (z = 1);
                        var te = this.renderContext.viewCamera.copy();
                        te.targetReferenceFrame = "", te.target = Z;
                        var re = 10;
                        if (Z === 20) {
                          k.get_classification() === A.Classification.galaxy ? re = 1404946007758 : re = 63239.6717 * 100;
                          var le = E.Coordinates.raDecTo3dAu(k.get_RA(), k.get_dec(), k.get_distance()), ae = E.Coordinates.meanObliquityOfEcliptic(w.SpaceTimeController.get_jNow()) / 180 * Math.PI;
                          le.rotateX(ae), te.viewTarget = g.Vector3d.negate(te.viewTarget);
                        } else {
                          switch (te.viewTarget = K.Planets.getPlanet3dLocationJD(Z, w.SpaceTimeController.getJNowForFutureTime(z)), Z) {
                            case 0:
                              re = 0.6;
                              break;
                            case 1:
                              re = 4e-4;
                              break;
                            case 2:
                              re = 4e-4;
                              break;
                            case 3:
                              re = 4e-4;
                              break;
                            case 4:
                              re = 7e-3;
                              break;
                            case 5:
                              re = 7e-3;
                              break;
                            case 6:
                              re = 4e-3;
                              break;
                            case 7:
                              re = 4e-3;
                              break;
                            case 8:
                              re = 4e-4;
                              break;
                            case 9:
                              re = 4e-4;
                              break;
                            case 10:
                              re = 4e-4;
                              break;
                            case 11:
                              re = 4e-4;
                              break;
                            case 12:
                              re = 4e-4;
                              break;
                            case 13:
                              re = 4e-4;
                              break;
                            case 19:
                              re = 4e-4;
                              break;
                            case 20:
                              re = 10;
                              break;
                          }
                          re = re * T.Settings.get_active().get_solarSystemScale();
                        }
                        var oe = this.renderContext.viewCamera.copy();
                        this._solarSystemTrack === 20 && !t.ss.emptyString(this.renderContext.get_trackingFrame()) && (oe = this.renderContext.customTrackingParams, this.renderContext.set_trackingFrame("")), te.zoom = re;
                        var de = te.viewTarget;
                        if (de.subtract(oe.viewTarget), k.get_classification() === 1 && (de = g.Vector3d.negate(de)), de.length()) {
                          var ve = de.toRaDec();
                          Z === 20 ? te.lat = -ve.y : te.lat = ve.y, te.lng = ve.x * 15 - 90;
                        } else
                          te.lat = this.renderContext.viewCamera.lat, te.lng = this.renderContext.viewCamera.lng;
                        Z !== y.SolarSystemObjects.custom && (te.viewTarget = K.Planets.getPlanetTargetPoint(Z, te.lat, te.lng, w.SpaceTimeController.getJNowForFutureTime(z)));
                        var ce = new $.ViewMoverKenBurnsStyle(oe, te, z, w.SpaceTimeController.get_now(), w.SpaceTimeController.getTimeForFutureTime(z), 3);
                        ce.fastDirectionMove = !0, this.set__mover(ce);
                        return;
                      }
                    }
                    this._tracking = !1, this._trackingObject = null;
                    var he = k.get_camParams().copy();
                    this.renderContext.get_backgroundImageset() != null && k.get_type() !== this.renderContext.get_backgroundImageset().get_dataSetType() ? (this.renderContext.targetCamera = k.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.set_backgroundImageset(this.getDefaultImageset(k.get_type(), 3)), j = !0) : this.get_solarSystemMode() && k.get_target() !== this._solarSystemTrack && (this.renderContext.targetCamera = k.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this._solarSystemTrack = k.get_target(), j = !0), k.get_classification() === 128 ? (he.zoom = this.get_zoomMax(), this.gotoTargetFull(!1, j, he, null, null)) : (this._solarSystemTrack = k.get_target(), this.gotoTargetFull(G, j, he, k.get_studyImageset(), k.get_backgroundImageset()), ee && (this._tracking = !0, this._trackingObject = k));
                  }
                },
                gotoTarget3: function(k, G, j) {
                  this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(G, j, k, this.renderContext.get_foregroundImageset(), this.renderContext.get_backgroundImageset());
                },
                _tooCloseForSlewMove: function(k) {
                  return Math.abs(this.renderContext.viewCamera.lat - k.lat) < 1e-12 && Math.abs(this.renderContext.viewCamera.lng - k.lng) < 1e-12 && Math.abs(this.renderContext.viewCamera.zoom - k.zoom) < 1e-12 && Math.abs(this.renderContext.viewCamera.rotation - k.rotation) < 1e-12;
                },
                gotoTargetFull: function(k, G, j, ee, Z) {
                  if (this._tracking = !1, this._trackingObject = null, this._targetStudyImageset = ee, this._targetBackgroundImageset = Z, k ? (j.zoom = this.renderContext.viewCamera.zoom, j.angle = this.renderContext.viewCamera.angle, j.rotation = this.renderContext.viewCamera.rotation) : (j.zoom === -1 || !j.zoom) && (this.renderContext.space ? j.zoom = 1.40625 : j.zoom = 0.09), G || this._tooCloseForSlewMove(j)) {
                    if (this.set__mover(null), this.renderContext.targetCamera = j.copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.space && T.Settings.get_active().get_galacticMode()) {
                      var z = E.Coordinates.j2000toGalactic(this.renderContext.viewCamera.get_RA() * 15, this.renderContext.viewCamera.get_dec());
                      this.renderContext.targetAlt = this.renderContext.alt = z[1], this.renderContext.targetAz = this.renderContext.az = z[0];
                    } else if (this.renderContext.space && T.Settings.get_active().get_localHorizonMode()) {
                      var te = E.Coordinates.equitorialToHorizon(E.Coordinates.fromRaDec(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), w.SpaceTimeController.get_location(), w.SpaceTimeController.get_now());
                      this.renderContext.targetAlt = this.renderContext.alt = te.get_alt(), this.renderContext.targetAz = this.renderContext.az = te.get_az();
                    }
                    this._mover_Midpoint();
                  } else
                    this.set__mover($.ViewMoverSlew.create(this.renderContext.viewCamera, j)), this.get__mover().set_midpoint(t.ss.bind("_mover_Midpoint", this));
                },
                _slewTimeBetweenTargets: function(k, G) {
                  var j = $.ViewMoverSlew.create(k, G);
                  return j.get_moveTime();
                },
                timeToTargetFull: function(k, G) {
                  return G && (k.zoom = this.renderContext.viewCamera.zoom, k.angle = this.renderContext.viewCamera.angle, k.rotation = this.renderContext.viewCamera.rotation), this._tooCloseForSlewMove(k) ? 0 : this._slewTimeBetweenTargets(e.globalRenderContext.viewCamera, k);
                },
                _freezeView: function() {
                  this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.set__mover(null);
                },
                get__mover: function() {
                  return this.renderContext.viewMover;
                },
                set__mover: function(k) {
                  return this.renderContext.viewMover = k, k;
                },
                fadeInImageSet: function(k) {
                  this.renderContext.get_backgroundImageset() != null && k.get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType() && (O.TileCache.purgeQueue(), O.TileCache.clearCache()), this.renderContext.set_backgroundImageset(k);
                },
                _mover_Midpoint: function() {
                  (this._targetStudyImageset != null && this.renderContext.get_foregroundImageset() == null || this.renderContext.get_foregroundImageset() != null && !this.renderContext.get_foregroundImageset().equals(this._targetStudyImageset)) && this.renderContext.set_foregroundImageset(this._targetStudyImageset), this.renderContext.get_backgroundImageset() != null && this._targetBackgroundImageset != null && !this.renderContext.get_backgroundImageset().equals(this._targetBackgroundImageset) && (this._targetBackgroundImageset != null && this._targetBackgroundImageset.get_generic() ? this.fadeInImageSet(this._getRealImagesetFromGeneric(this._targetBackgroundImageset)) : this.fadeInImageSet(this._targetBackgroundImageset));
                },
                getDefaultImageset: function(k, G) {
                  for (var j = t.ss.enumerate(F.imageSets); j.moveNext(); ) {
                    var ee = j.current;
                    if (ee.get_defaultSet() && ee.get_bandPass() === G && ee.get_dataSetType() === k)
                      return ee;
                  }
                  for (var Z = t.ss.enumerate(F.imageSets); Z.moveNext(); ) {
                    var ee = Z.current;
                    if (ee.get_bandPass() === G && ee.get_dataSetType() === k)
                      return ee;
                  }
                  for (var z = t.ss.enumerate(F.imageSets); z.moveNext(); ) {
                    var ee = z.current;
                    if (ee.get_dataSetType() === k)
                      return ee;
                  }
                  return F.imageSets[0];
                },
                _getRealImagesetFromGeneric: function(k) {
                  for (var G = t.ss.enumerate(F.imageSets); G.moveNext(); ) {
                    var j = G.current;
                    if (j.get_defaultSet() && j.get_bandPass() === k.get_bandPass() && j.get_dataSetType() === k.get_dataSetType())
                      return j;
                  }
                  for (var ee = t.ss.enumerate(F.imageSets); ee.moveNext(); ) {
                    var j = ee.current;
                    if (j.get_bandPass() === k.get_bandPass() && j.get_dataSetType() === k.get_dataSetType())
                      return j;
                  }
                  return F.imageSets[0];
                },
                _hideUI: function(k) {
                },
                createTour: function(k) {
                  if (t.ss.canCast(this.uiController, S.TourPlayer)) {
                    var G = this.uiController;
                    G.stop(!1);
                  }
                  return this.tour = new x.TourDocument(), this.tour.set_title(k), this.setupTour(), this.tour.set_editMode(!0), this.tour;
                },
                setupTour: function() {
                  this.tourEdit = new P.TourEditTab(), this.tourEdit.set_tour(this.tour), this.tour.set_currentTourstopIndex(0), this.tour.set_editMode(!1), this.uiController = this.tourEdit.tourEditorUI;
                },
                loadTour: function(k) {
                  var G = this;
                  if (t.ss.canCast(this.uiController, S.TourPlayer)) {
                    var j = this.uiController;
                    j.stop(!1);
                  }
                  this.tour = x.TourDocument.fromUrl(k, function() {
                    G.setupTour();
                    var ee = new S.TourPlayer();
                    ee.set_tour(G.tour), _.globalWWTControl.uiController = ee, _.globalScriptInterface._fireTourReady();
                  });
                },
                playTour: function(k) {
                  var G = this;
                  if (t.ss.canCast(this.uiController, S.TourPlayer)) {
                    var j = this.uiController;
                    j.stop(!1);
                  }
                  this.tour = x.TourDocument.fromUrl(k, function() {
                    G.setupTour(), G.tourEdit.playNow(!0), _.globalScriptInterface._fireTourReady();
                  });
                },
                playCurrentTour: function() {
                  if (t.ss.canCast(this.uiController, S.TourPlayer)) {
                    var k = this.uiController;
                    k.play();
                  }
                },
                pauseCurrentTour: function() {
                  if (t.ss.canCast(this.uiController, S.TourPlayer)) {
                    var k = this.uiController;
                    k.pauseTour();
                  }
                },
                stopCurrentTour: function() {
                  if (t.ss.canCast(this.uiController, S.TourPlayer)) {
                    var k = this.uiController;
                    k.stop(!1);
                  }
                },
                _closeTour: function() {
                },
                getImagesetByName: function(k) {
                  for (var G = t.ss.enumerate(F.imageSets); G.moveNext(); ) {
                    var j = G.current;
                    if (j.get_name().toLowerCase().indexOf(k.toLowerCase()) > -1)
                      return j;
                  }
                  return null;
                },
                getImageSetByUrl: function(k) {
                  for (var G = t.ss.enumerate(F.imageSets); G.moveNext(); ) {
                    var j = G.current;
                    if (j.get_url() === k)
                      return j;
                  }
                  return null;
                },
                setBackgroundImageByName: function(k) {
                  var G = this.getImagesetByName(k);
                  G != null && this.renderContext.set_backgroundImageset(G);
                },
                setForegroundImageByName: function(k) {
                  var G = this.getImagesetByName(k);
                  G != null && this.renderContext.set_foregroundImageset(G);
                },
                addCatalogHips: function(k) {
                  this.renderContext.addCatalogHips(k, null);
                },
                addCatalogHipsByName: function(k) {
                  this.addCatalogHipsByNameWithCallback(k, null);
                },
                addCatalogHipsByNameWithCallback: function(k, G) {
                  var j = this.getImagesetByName(k);
                  j != null && this.renderContext.addCatalogHips(j, G);
                },
                removeCatalogHipsByName: function(k) {
                  var G = this.getImagesetByName(k);
                  G != null && this.renderContext.removeCatalogHips(G);
                },
                getCatalogHipsByName: function(k) {
                  return this.renderContext.getCatalogHipsByName(k);
                },
                getCatalogHipsDataInView: function(k, G, j) {
                  var ee = this.getImagesetByName(k);
                  ee != null && this.renderContext.getCatalogHipsDataInView(ee, G, j);
                },
                setCutsForFits: function(k, G, j) {
                  var ee = this.getImagesetByName(k);
                  ee != null && ee.get_fitsProperties() != null ? (ee.get_fitsProperties().lowerCut = G, ee.get_fitsProperties().upperCut = j) : console.log(k + " not found");
                },
                setColorMapForFits: function(k, G) {
                  var j = this.getImagesetByName(k);
                  j != null && j.get_fitsProperties() != null ? j.get_fitsProperties().colorMapName = G : console.log(k + " not found");
                },
                setScaleTypeForFits: function(k, G) {
                  var j = this.getImagesetByName(k);
                  j != null && j.get_fitsProperties() != null ? j.get_fitsProperties().scaleType = G : console.log(k + " not found");
                },
                _drawCrosshairs: function(k) {
                  if (k.gl == null) {
                    var G = k.device;
                    G.save(), G.beginPath(), G.strokeStyle = T.Settings.get_current().get_crosshairsColor(), G.lineWidth = 2;
                    var j = k.width / 2, ee = k.height / 2, Z = 5;
                    G.moveTo(j, ee + Z), G.lineTo(j, ee - Z), G.moveTo(j + Z, ee), G.lineTo(j - Z, ee), G.stroke(), G.restore();
                  } else {
                    if (this._crossHairs == null) {
                      var z = 0.03, te = z * k.height / k.width;
                      this._crossHairs = new a.SimpleLineList(), this._crossHairs.set_depthBuffered(!1), this._crossHairs.pure2D = !0, this._crossHairs.addLine(g.Vector3d.create(-te, 0, 0), g.Vector3d.create(te, 0, 0)), this._crossHairs.addLine(g.Vector3d.create(0, -z, 0), g.Vector3d.create(0, z, 0));
                    }
                    this._crossHairs.drawLines(k, 1, o.Color.load(T.Settings.get_current().get_crosshairsColor()));
                  }
                },
                captureThumbnail: function(k) {
                  this.captureFrame(k, 96, 45, "image/jpeg", !0);
                },
                captureCurrentFrame: function(k, G, j, ee) {
                  this.captureFrame(k, G, j, ee, !1);
                },
                captureFrameForVideo: function(k, G, j, ee) {
                  var Z = this, z = w.SpaceTimeController.currentFrameNumber, te = function(re) {
                    var le;
                    if (z === Z._videoQueueIndex)
                      for (k(re), Z._videoQueueIndex += 1; (le = t.ss.keyExists(Z._videoBlobQueue, Z._videoQueueIndex)) || Z._emptyFrames.indexOf(Z._videoQueueIndex) >= 0; )
                        le ? (k(Z._videoBlobQueue[Z._videoQueueIndex]), Z._videoBlobQueue[Z._videoQueueIndex] = null) : t.ss.remove(Z._emptyFrames, Z._videoQueueIndex), Z._videoQueueIndex += 1;
                    else
                      re != null ? Z._videoBlobQueue[z] = re : Z._emptyFrames.push(z);
                    Z._videoQueueIndex >= w.SpaceTimeController.totalFrames && (Z._videoBlobReady = null, Z._videoBlobQueue = null, Z._videoQueueIndex = 0, Z._emptyFrames.length = 0);
                  };
                  this.captureCurrentFrame(te, G, j, ee);
                },
                captureFrame: function(k, G, j, ee, Z) {
                  Z && this.renderOneFrame();
                  var z = document.createElement("img");
                  z.addEventListener("load", function(te) {
                    var re = z.width / z.height, le = G / j, ae = G, oe = j;
                    re < le ? oe = t.ss.truncate(ae / re) : ae = t.ss.truncate(oe * re);
                    var de = (G - ae) / 2, ve = (j - oe) / 2, ce = document.createElement("canvas");
                    ce.height = j, ce.width = G;
                    var he = ce.getContext("2d");
                    if (he.drawImage(z, de, ve, ae, oe), typeof ce.msToBlob == "function") {
                      var ye = ce.msToBlob();
                      k(ye);
                    } else
                      ce.toBlob(k, ee);
                  }, !1), z.src = _.globalWWTControl.canvas.toDataURL();
                },
                clampZooms: function(k) {
                  k.viewCamera.zoom = g.DoubleUtilities.clamp(k.viewCamera.zoom, this.get_zoomMin(), this.get_zoomMax()), k.targetCamera.zoom = g.DoubleUtilities.clamp(k.targetCamera.zoom, this.get_zoomMin(), this.get_zoomMax());
                }
              };
              (0, n.registerType)("WWTControl", [F, X, null]);
              function Y(k) {
                this._divId = null, this._startRenderLoop = !1, this._startLat = 0, this._startLng = 0, this._startZoom = 360, this._freestandingAssetBaseurl = "", this._startMode = "", this._divId = k;
              }
              var M = {
                startRenderLoop: function(k) {
                  this._startRenderLoop = k;
                },
                initialView: function(k, G, j) {
                  this._startLat = k, this._startLng = G, this._startZoom = j;
                },
                freestandingMode: function(k) {
                  this._freestandingAssetBaseurl = k;
                },
                initialMode: function(k) {
                  this._startMode = k;
                },
                create: function() {
                  var k = !!this._freestandingAssetBaseurl, G;
                  return this._startMode ? G = this._startMode : k ? G = "black" : G = "sky", (0, _.set_freestandingMode)(k), k && c.URLHelpers.singleton.overrideAssetBaseurl(this._freestandingAssetBaseurl), F.initControl6(this._divId, this._startRenderLoop, this._startLat, this._startLng, this._startZoom, G);
                }
              };
              (0, n.registerType)("WWTControlBuilder", [Y, M, null]);
              function B(k, G) {
                this.offsetX = 0, this.offsetY = 0, this.offsetX = k, this.offsetY = G;
              }
              var D = {};
              (0, n.registerType)("WWTElementEvent", [B, D, null]);
            }
          ),
          /***/
          "../node_modules/pako/index.js": (
            /*!*************************************!*\
              !*** ../node_modules/pako/index.js ***!
              \*************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ./lib/utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ).assign, n = i(
                /*! ./lib/deflate */
                "../node_modules/pako/lib/deflate.js"
              ), e = i(
                /*! ./lib/inflate */
                "../node_modules/pako/lib/inflate.js"
              ), _ = i(
                /*! ./lib/zlib/constants */
                "../node_modules/pako/lib/zlib/constants.js"
              ), r = {};
              t(r, n, e, _), s.exports = r;
            }
          ),
          /***/
          "../node_modules/pako/lib/deflate.js": (
            /*!*******************************************!*\
              !*** ../node_modules/pako/lib/deflate.js ***!
              \*******************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ./zlib/deflate */
                "../node_modules/pako/lib/zlib/deflate.js"
              ), n = i(
                /*! ./utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ), e = i(
                /*! ./utils/strings */
                "../node_modules/pako/lib/utils/strings.js"
              ), _ = i(
                /*! ./zlib/messages */
                "../node_modules/pako/lib/zlib/messages.js"
              ), r = i(
                /*! ./zlib/zstream */
                "../node_modules/pako/lib/zlib/zstream.js"
              ), o = Object.prototype.toString, c = 0, l = 4, g = 0, a = 1, b = 2, V = -1, y = 0, C = 8;
              function E(A) {
                if (!(this instanceof E))
                  return new E(A);
                this.options = n.assign({
                  level: V,
                  method: C,
                  chunkSize: 16384,
                  windowBits: 15,
                  memLevel: 8,
                  strategy: y,
                  to: ""
                }, A || {});
                var K = this.options;
                K.raw && K.windowBits > 0 ? K.windowBits = -K.windowBits : K.gzip && K.windowBits > 0 && K.windowBits < 16 && (K.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new r(), this.strm.avail_out = 0;
                var T = t.deflateInit2(
                  this.strm,
                  K.level,
                  K.method,
                  K.windowBits,
                  K.memLevel,
                  K.strategy
                );
                if (T !== g)
                  throw new Error(_[T]);
                if (K.header && t.deflateSetHeader(this.strm, K.header), K.dictionary) {
                  var w;
                  if (typeof K.dictionary == "string" ? w = e.string2buf(K.dictionary) : o.call(K.dictionary) === "[object ArrayBuffer]" ? w = new Uint8Array(K.dictionary) : w = K.dictionary, T = t.deflateSetDictionary(this.strm, w), T !== g)
                    throw new Error(_[T]);
                  this._dict_set = !0;
                }
              }
              E.prototype.push = function(A, K) {
                var T = this.strm, w = this.options.chunkSize, f, R;
                if (this.ended)
                  return !1;
                R = K === ~~K ? K : K === !0 ? l : c, typeof A == "string" ? T.input = e.string2buf(A) : o.call(A) === "[object ArrayBuffer]" ? T.input = new Uint8Array(A) : T.input = A, T.next_in = 0, T.avail_in = T.input.length;
                do {
                  if (T.avail_out === 0 && (T.output = new n.Buf8(w), T.next_out = 0, T.avail_out = w), f = t.deflate(T, R), f !== a && f !== g)
                    return this.onEnd(f), this.ended = !0, !1;
                  (T.avail_out === 0 || T.avail_in === 0 && (R === l || R === b)) && (this.options.to === "string" ? this.onData(e.buf2binstring(n.shrinkBuf(T.output, T.next_out))) : this.onData(n.shrinkBuf(T.output, T.next_out)));
                } while ((T.avail_in > 0 || T.avail_out === 0) && f !== a);
                return R === l ? (f = t.deflateEnd(this.strm), this.onEnd(f), this.ended = !0, f === g) : (R === b && (this.onEnd(g), T.avail_out = 0), !0);
              }, E.prototype.onData = function(A) {
                this.chunks.push(A);
              }, E.prototype.onEnd = function(A) {
                A === g && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = n.flattenChunks(this.chunks)), this.chunks = [], this.err = A, this.msg = this.strm.msg;
              };
              function v(A, K) {
                var T = new E(K);
                if (T.push(A, !0), T.err)
                  throw T.msg || _[T.err];
                return T.result;
              }
              function m(A, K) {
                return K = K || {}, K.raw = !0, v(A, K);
              }
              function L(A, K) {
                return K = K || {}, K.gzip = !0, v(A, K);
              }
              u.Deflate = E, u.deflate = v, u.deflateRaw = m, u.gzip = L;
            }
          ),
          /***/
          "../node_modules/pako/lib/inflate.js": (
            /*!*******************************************!*\
              !*** ../node_modules/pako/lib/inflate.js ***!
              \*******************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ./zlib/inflate */
                "../node_modules/pako/lib/zlib/inflate.js"
              ), n = i(
                /*! ./utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ), e = i(
                /*! ./utils/strings */
                "../node_modules/pako/lib/utils/strings.js"
              ), _ = i(
                /*! ./zlib/constants */
                "../node_modules/pako/lib/zlib/constants.js"
              ), r = i(
                /*! ./zlib/messages */
                "../node_modules/pako/lib/zlib/messages.js"
              ), o = i(
                /*! ./zlib/zstream */
                "../node_modules/pako/lib/zlib/zstream.js"
              ), c = i(
                /*! ./zlib/gzheader */
                "../node_modules/pako/lib/zlib/gzheader.js"
              ), l = Object.prototype.toString;
              function g(V) {
                if (!(this instanceof g))
                  return new g(V);
                this.options = n.assign({
                  chunkSize: 16384,
                  windowBits: 0,
                  to: ""
                }, V || {});
                var y = this.options;
                y.raw && y.windowBits >= 0 && y.windowBits < 16 && (y.windowBits = -y.windowBits, y.windowBits === 0 && (y.windowBits = -15)), y.windowBits >= 0 && y.windowBits < 16 && !(V && V.windowBits) && (y.windowBits += 32), y.windowBits > 15 && y.windowBits < 48 && (y.windowBits & 15 || (y.windowBits |= 15)), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new o(), this.strm.avail_out = 0;
                var C = t.inflateInit2(
                  this.strm,
                  y.windowBits
                );
                if (C !== _.Z_OK)
                  throw new Error(r[C]);
                if (this.header = new c(), t.inflateGetHeader(this.strm, this.header), y.dictionary && (typeof y.dictionary == "string" ? y.dictionary = e.string2buf(y.dictionary) : l.call(y.dictionary) === "[object ArrayBuffer]" && (y.dictionary = new Uint8Array(y.dictionary)), y.raw && (C = t.inflateSetDictionary(this.strm, y.dictionary), C !== _.Z_OK)))
                  throw new Error(r[C]);
              }
              g.prototype.push = function(V, y) {
                var C = this.strm, E = this.options.chunkSize, v = this.options.dictionary, m, L, A, K, T, w = !1;
                if (this.ended)
                  return !1;
                L = y === ~~y ? y : y === !0 ? _.Z_FINISH : _.Z_NO_FLUSH, typeof V == "string" ? C.input = e.binstring2buf(V) : l.call(V) === "[object ArrayBuffer]" ? C.input = new Uint8Array(V) : C.input = V, C.next_in = 0, C.avail_in = C.input.length;
                do {
                  if (C.avail_out === 0 && (C.output = new n.Buf8(E), C.next_out = 0, C.avail_out = E), m = t.inflate(C, _.Z_NO_FLUSH), m === _.Z_NEED_DICT && v && (m = t.inflateSetDictionary(this.strm, v)), m === _.Z_BUF_ERROR && w === !0 && (m = _.Z_OK, w = !1), m !== _.Z_STREAM_END && m !== _.Z_OK)
                    return this.onEnd(m), this.ended = !0, !1;
                  C.next_out && (C.avail_out === 0 || m === _.Z_STREAM_END || C.avail_in === 0 && (L === _.Z_FINISH || L === _.Z_SYNC_FLUSH)) && (this.options.to === "string" ? (A = e.utf8border(C.output, C.next_out), K = C.next_out - A, T = e.buf2string(C.output, A), C.next_out = K, C.avail_out = E - K, K && n.arraySet(C.output, C.output, A, K, 0), this.onData(T)) : this.onData(n.shrinkBuf(C.output, C.next_out))), C.avail_in === 0 && C.avail_out === 0 && (w = !0);
                } while ((C.avail_in > 0 || C.avail_out === 0) && m !== _.Z_STREAM_END);
                return m === _.Z_STREAM_END && (L = _.Z_FINISH), L === _.Z_FINISH ? (m = t.inflateEnd(this.strm), this.onEnd(m), this.ended = !0, m === _.Z_OK) : (L === _.Z_SYNC_FLUSH && (this.onEnd(_.Z_OK), C.avail_out = 0), !0);
              }, g.prototype.onData = function(V) {
                this.chunks.push(V);
              }, g.prototype.onEnd = function(V) {
                V === _.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = n.flattenChunks(this.chunks)), this.chunks = [], this.err = V, this.msg = this.strm.msg;
              };
              function a(V, y) {
                var C = new g(y);
                if (C.push(V, !0), C.err)
                  throw C.msg || r[C.err];
                return C.result;
              }
              function b(V, y) {
                return y = y || {}, y.raw = !0, a(V, y);
              }
              u.Inflate = g, u.inflate = a, u.inflateRaw = b, u.ungzip = a;
            }
          ),
          /***/
          "../node_modules/pako/lib/utils/common.js": (
            /*!************************************************!*\
              !*** ../node_modules/pako/lib/utils/common.js ***!
              \************************************************/
            /***/
            (s, u) => {
              var i = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
              function t(_, r) {
                return Object.prototype.hasOwnProperty.call(_, r);
              }
              u.assign = function(_) {
                for (var r = Array.prototype.slice.call(arguments, 1); r.length; ) {
                  var o = r.shift();
                  if (o) {
                    if (typeof o != "object")
                      throw new TypeError(o + "must be non-object");
                    for (var c in o)
                      t(o, c) && (_[c] = o[c]);
                  }
                }
                return _;
              }, u.shrinkBuf = function(_, r) {
                return _.length === r ? _ : _.subarray ? _.subarray(0, r) : (_.length = r, _);
              };
              var n = {
                arraySet: function(_, r, o, c, l) {
                  if (r.subarray && _.subarray) {
                    _.set(r.subarray(o, o + c), l);
                    return;
                  }
                  for (var g = 0; g < c; g++)
                    _[l + g] = r[o + g];
                },
                // Join array of chunks to single array.
                flattenChunks: function(_) {
                  var r, o, c, l, g, a;
                  for (c = 0, r = 0, o = _.length; r < o; r++)
                    c += _[r].length;
                  for (a = new Uint8Array(c), l = 0, r = 0, o = _.length; r < o; r++)
                    g = _[r], a.set(g, l), l += g.length;
                  return a;
                }
              }, e = {
                arraySet: function(_, r, o, c, l) {
                  for (var g = 0; g < c; g++)
                    _[l + g] = r[o + g];
                },
                // Join array of chunks to single array.
                flattenChunks: function(_) {
                  return [].concat.apply([], _);
                }
              };
              u.setTyped = function(_) {
                _ ? (u.Buf8 = Uint8Array, u.Buf16 = Uint16Array, u.Buf32 = Int32Array, u.assign(u, n)) : (u.Buf8 = Array, u.Buf16 = Array, u.Buf32 = Array, u.assign(u, e));
              }, u.setTyped(i);
            }
          ),
          /***/
          "../node_modules/pako/lib/utils/strings.js": (
            /*!*************************************************!*\
              !*** ../node_modules/pako/lib/utils/strings.js ***!
              \*************************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ./common */
                "../node_modules/pako/lib/utils/common.js"
              ), n = !0, e = !0;
              try {
                String.fromCharCode.apply(null, [0]);
              } catch {
                n = !1;
              }
              try {
                String.fromCharCode.apply(null, new Uint8Array(1));
              } catch {
                e = !1;
              }
              for (var _ = new t.Buf8(256), r = 0; r < 256; r++)
                _[r] = r >= 252 ? 6 : r >= 248 ? 5 : r >= 240 ? 4 : r >= 224 ? 3 : r >= 192 ? 2 : 1;
              _[254] = _[254] = 1, u.string2buf = function(c) {
                var l, g, a, b, V, y = c.length, C = 0;
                for (b = 0; b < y; b++)
                  g = c.charCodeAt(b), (g & 64512) === 55296 && b + 1 < y && (a = c.charCodeAt(b + 1), (a & 64512) === 56320 && (g = 65536 + (g - 55296 << 10) + (a - 56320), b++)), C += g < 128 ? 1 : g < 2048 ? 2 : g < 65536 ? 3 : 4;
                for (l = new t.Buf8(C), V = 0, b = 0; V < C; b++)
                  g = c.charCodeAt(b), (g & 64512) === 55296 && b + 1 < y && (a = c.charCodeAt(b + 1), (a & 64512) === 56320 && (g = 65536 + (g - 55296 << 10) + (a - 56320), b++)), g < 128 ? l[V++] = g : g < 2048 ? (l[V++] = 192 | g >>> 6, l[V++] = 128 | g & 63) : g < 65536 ? (l[V++] = 224 | g >>> 12, l[V++] = 128 | g >>> 6 & 63, l[V++] = 128 | g & 63) : (l[V++] = 240 | g >>> 18, l[V++] = 128 | g >>> 12 & 63, l[V++] = 128 | g >>> 6 & 63, l[V++] = 128 | g & 63);
                return l;
              };
              function o(c, l) {
                if (l < 65534 && (c.subarray && e || !c.subarray && n))
                  return String.fromCharCode.apply(null, t.shrinkBuf(c, l));
                for (var g = "", a = 0; a < l; a++)
                  g += String.fromCharCode(c[a]);
                return g;
              }
              u.buf2binstring = function(c) {
                return o(c, c.length);
              }, u.binstring2buf = function(c) {
                for (var l = new t.Buf8(c.length), g = 0, a = l.length; g < a; g++)
                  l[g] = c.charCodeAt(g);
                return l;
              }, u.buf2string = function(c, l) {
                var g, a, b, V, y = l || c.length, C = new Array(y * 2);
                for (a = 0, g = 0; g < y; ) {
                  if (b = c[g++], b < 128) {
                    C[a++] = b;
                    continue;
                  }
                  if (V = _[b], V > 4) {
                    C[a++] = 65533, g += V - 1;
                    continue;
                  }
                  for (b &= V === 2 ? 31 : V === 3 ? 15 : 7; V > 1 && g < y; )
                    b = b << 6 | c[g++] & 63, V--;
                  if (V > 1) {
                    C[a++] = 65533;
                    continue;
                  }
                  b < 65536 ? C[a++] = b : (b -= 65536, C[a++] = 55296 | b >> 10 & 1023, C[a++] = 56320 | b & 1023);
                }
                return o(C, a);
              }, u.utf8border = function(c, l) {
                var g;
                for (l = l || c.length, l > c.length && (l = c.length), g = l - 1; g >= 0 && (c[g] & 192) === 128; )
                  g--;
                return g < 0 || g === 0 ? l : g + _[c[g]] > l ? g : l;
              };
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/adler32.js": (
            /*!************************************************!*\
              !*** ../node_modules/pako/lib/zlib/adler32.js ***!
              \************************************************/
            /***/
            (s) => {
              function u(i, t, n, e) {
                for (var _ = i & 65535 | 0, r = i >>> 16 & 65535 | 0, o = 0; n !== 0; ) {
                  o = n > 2e3 ? 2e3 : n, n -= o;
                  do
                    _ = _ + t[e++] | 0, r = r + _ | 0;
                  while (--o);
                  _ %= 65521, r %= 65521;
                }
                return _ | r << 16 | 0;
              }
              s.exports = u;
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/constants.js": (
            /*!**************************************************!*\
              !*** ../node_modules/pako/lib/zlib/constants.js ***!
              \**************************************************/
            /***/
            (s) => {
              s.exports = {
                /* Allowed flush values; see deflate() and inflate() below for details */
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                /* Return codes for the compression/decompression functions. Negative values
                * are errors, positive values are used for special but normal events.
                */
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                //Z_MEM_ERROR:     -4,
                Z_BUF_ERROR: -5,
                //Z_VERSION_ERROR: -6,
                /* compression levels */
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                /* Possible values of the data_type field (though see inflate()) */
                Z_BINARY: 0,
                Z_TEXT: 1,
                //Z_ASCII:                1, // = Z_TEXT (deprecated)
                Z_UNKNOWN: 2,
                /* The deflate compression method */
                Z_DEFLATED: 8
                //Z_NULL:                 null // Use -1 or null inline, depending on var type
              };
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/crc32.js": (
            /*!**********************************************!*\
              !*** ../node_modules/pako/lib/zlib/crc32.js ***!
              \**********************************************/
            /***/
            (s) => {
              function u() {
                for (var n, e = [], _ = 0; _ < 256; _++) {
                  n = _;
                  for (var r = 0; r < 8; r++)
                    n = n & 1 ? 3988292384 ^ n >>> 1 : n >>> 1;
                  e[_] = n;
                }
                return e;
              }
              var i = u();
              function t(n, e, _, r) {
                var o = i, c = r + _;
                n ^= -1;
                for (var l = r; l < c; l++)
                  n = n >>> 8 ^ o[(n ^ e[l]) & 255];
                return n ^ -1;
              }
              s.exports = t;
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/deflate.js": (
            /*!************************************************!*\
              !*** ../node_modules/pako/lib/zlib/deflate.js ***!
              \************************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ../utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ), n = i(
                /*! ./trees */
                "../node_modules/pako/lib/zlib/trees.js"
              ), e = i(
                /*! ./adler32 */
                "../node_modules/pako/lib/zlib/adler32.js"
              ), _ = i(
                /*! ./crc32 */
                "../node_modules/pako/lib/zlib/crc32.js"
              ), r = i(
                /*! ./messages */
                "../node_modules/pako/lib/zlib/messages.js"
              ), o = 0, c = 1, l = 3, g = 4, a = 5, b = 0, V = 1, y = -2, C = -3, E = -5, v = -1, m = 1, L = 2, A = 3, K = 4, T = 0, w = 2, f = 8, R = 9, O = 15, W = 8, N = 29, $ = 256, S = $ + 1 + N, I = 30, x = 19, P = 2 * S + 1, d = 15, U = 3, F = 258, X = F + U + 1, Y = 32, M = 42, B = 69, D = 73, k = 91, G = 103, j = 113, ee = 666, Z = 1, z = 2, te = 3, re = 4, le = 3;
              function ae(J, we) {
                return J.msg = r[we], we;
              }
              function oe(J) {
                return (J << 1) - (J > 4 ? 9 : 0);
              }
              function de(J) {
                for (var we = J.length; --we >= 0; )
                  J[we] = 0;
              }
              function ve(J) {
                var we = J.state, Ee = we.pending;
                Ee > J.avail_out && (Ee = J.avail_out), Ee !== 0 && (t.arraySet(J.output, we.pending_buf, we.pending_out, Ee, J.next_out), J.next_out += Ee, we.pending_out += Ee, J.total_out += Ee, J.avail_out -= Ee, we.pending -= Ee, we.pending === 0 && (we.pending_out = 0));
              }
              function ce(J, we) {
                n._tr_flush_block(J, J.block_start >= 0 ? J.block_start : -1, J.strstart - J.block_start, we), J.block_start = J.strstart, ve(J.strm);
              }
              function he(J, we) {
                J.pending_buf[J.pending++] = we;
              }
              function ye(J, we) {
                J.pending_buf[J.pending++] = we >>> 8 & 255, J.pending_buf[J.pending++] = we & 255;
              }
              function fe(J, we, Ee, ne) {
                var _e = J.avail_in;
                return _e > ne && (_e = ne), _e === 0 ? 0 : (J.avail_in -= _e, t.arraySet(we, J.input, J.next_in, _e, Ee), J.state.wrap === 1 ? J.adler = e(J.adler, we, _e, Ee) : J.state.wrap === 2 && (J.adler = _(J.adler, we, _e, Ee)), J.next_in += _e, J.total_in += _e, _e);
              }
              function Ce(J, we) {
                var Ee = J.max_chain_length, ne = J.strstart, _e, Se, ke = J.prev_length, Ue = J.nice_match, je = J.strstart > J.w_size - X ? J.strstart - (J.w_size - X) : 0, He = J.window, ct = J.w_mask, Je = J.prev, Xe = J.strstart + F, Ze = He[ne + ke - 1], tt = He[ne + ke];
                J.prev_length >= J.good_match && (Ee >>= 2), Ue > J.lookahead && (Ue = J.lookahead);
                do
                  if (_e = we, !(He[_e + ke] !== tt || He[_e + ke - 1] !== Ze || He[_e] !== He[ne] || He[++_e] !== He[ne + 1])) {
                    ne += 2, _e++;
                    do
                      ;
                    while (He[++ne] === He[++_e] && He[++ne] === He[++_e] && He[++ne] === He[++_e] && He[++ne] === He[++_e] && He[++ne] === He[++_e] && He[++ne] === He[++_e] && He[++ne] === He[++_e] && He[++ne] === He[++_e] && ne < Xe);
                    if (Se = F - (Xe - ne), ne = Xe - F, Se > ke) {
                      if (J.match_start = we, ke = Se, Se >= Ue)
                        break;
                      Ze = He[ne + ke - 1], tt = He[ne + ke];
                    }
                  }
                while ((we = Je[we & ct]) > je && --Ee !== 0);
                return ke <= J.lookahead ? ke : J.lookahead;
              }
              function Ae(J) {
                var we = J.w_size, Ee, ne, _e, Se, ke;
                do {
                  if (Se = J.window_size - J.lookahead - J.strstart, J.strstart >= we + (we - X)) {
                    t.arraySet(J.window, J.window, we, we, 0), J.match_start -= we, J.strstart -= we, J.block_start -= we, ne = J.hash_size, Ee = ne;
                    do
                      _e = J.head[--Ee], J.head[Ee] = _e >= we ? _e - we : 0;
                    while (--ne);
                    ne = we, Ee = ne;
                    do
                      _e = J.prev[--Ee], J.prev[Ee] = _e >= we ? _e - we : 0;
                    while (--ne);
                    Se += we;
                  }
                  if (J.strm.avail_in === 0)
                    break;
                  if (ne = fe(J.strm, J.window, J.strstart + J.lookahead, Se), J.lookahead += ne, J.lookahead + J.insert >= U)
                    for (ke = J.strstart - J.insert, J.ins_h = J.window[ke], J.ins_h = (J.ins_h << J.hash_shift ^ J.window[ke + 1]) & J.hash_mask; J.insert && (J.ins_h = (J.ins_h << J.hash_shift ^ J.window[ke + U - 1]) & J.hash_mask, J.prev[ke & J.w_mask] = J.head[J.ins_h], J.head[J.ins_h] = ke, ke++, J.insert--, !(J.lookahead + J.insert < U)); )
                      ;
                } while (J.lookahead < X && J.strm.avail_in !== 0);
              }
              function Te(J, we) {
                var Ee = 65535;
                for (Ee > J.pending_buf_size - 5 && (Ee = J.pending_buf_size - 5); ; ) {
                  if (J.lookahead <= 1) {
                    if (Ae(J), J.lookahead === 0 && we === o)
                      return Z;
                    if (J.lookahead === 0)
                      break;
                  }
                  J.strstart += J.lookahead, J.lookahead = 0;
                  var ne = J.block_start + Ee;
                  if ((J.strstart === 0 || J.strstart >= ne) && (J.lookahead = J.strstart - ne, J.strstart = ne, ce(J, !1), J.strm.avail_out === 0) || J.strstart - J.block_start >= J.w_size - X && (ce(J, !1), J.strm.avail_out === 0))
                    return Z;
                }
                return J.insert = 0, we === g ? (ce(J, !0), J.strm.avail_out === 0 ? te : re) : (J.strstart > J.block_start && (ce(J, !1), J.strm.avail_out === 0), Z);
              }
              function Re(J, we) {
                for (var Ee, ne; ; ) {
                  if (J.lookahead < X) {
                    if (Ae(J), J.lookahead < X && we === o)
                      return Z;
                    if (J.lookahead === 0)
                      break;
                  }
                  if (Ee = 0, J.lookahead >= U && (J.ins_h = (J.ins_h << J.hash_shift ^ J.window[J.strstart + U - 1]) & J.hash_mask, Ee = J.prev[J.strstart & J.w_mask] = J.head[J.ins_h], J.head[J.ins_h] = J.strstart), Ee !== 0 && J.strstart - Ee <= J.w_size - X && (J.match_length = Ce(J, Ee)), J.match_length >= U)
                    if (ne = n._tr_tally(J, J.strstart - J.match_start, J.match_length - U), J.lookahead -= J.match_length, J.match_length <= J.max_lazy_match && J.lookahead >= U) {
                      J.match_length--;
                      do
                        J.strstart++, J.ins_h = (J.ins_h << J.hash_shift ^ J.window[J.strstart + U - 1]) & J.hash_mask, Ee = J.prev[J.strstart & J.w_mask] = J.head[J.ins_h], J.head[J.ins_h] = J.strstart;
                      while (--J.match_length !== 0);
                      J.strstart++;
                    } else
                      J.strstart += J.match_length, J.match_length = 0, J.ins_h = J.window[J.strstart], J.ins_h = (J.ins_h << J.hash_shift ^ J.window[J.strstart + 1]) & J.hash_mask;
                  else
                    ne = n._tr_tally(J, 0, J.window[J.strstart]), J.lookahead--, J.strstart++;
                  if (ne && (ce(J, !1), J.strm.avail_out === 0))
                    return Z;
                }
                return J.insert = J.strstart < U - 1 ? J.strstart : U - 1, we === g ? (ce(J, !0), J.strm.avail_out === 0 ? te : re) : J.last_lit && (ce(J, !1), J.strm.avail_out === 0) ? Z : z;
              }
              function De(J, we) {
                for (var Ee, ne, _e; ; ) {
                  if (J.lookahead < X) {
                    if (Ae(J), J.lookahead < X && we === o)
                      return Z;
                    if (J.lookahead === 0)
                      break;
                  }
                  if (Ee = 0, J.lookahead >= U && (J.ins_h = (J.ins_h << J.hash_shift ^ J.window[J.strstart + U - 1]) & J.hash_mask, Ee = J.prev[J.strstart & J.w_mask] = J.head[J.ins_h], J.head[J.ins_h] = J.strstart), J.prev_length = J.match_length, J.prev_match = J.match_start, J.match_length = U - 1, Ee !== 0 && J.prev_length < J.max_lazy_match && J.strstart - Ee <= J.w_size - X && (J.match_length = Ce(J, Ee), J.match_length <= 5 && (J.strategy === m || J.match_length === U && J.strstart - J.match_start > 4096) && (J.match_length = U - 1)), J.prev_length >= U && J.match_length <= J.prev_length) {
                    _e = J.strstart + J.lookahead - U, ne = n._tr_tally(J, J.strstart - 1 - J.prev_match, J.prev_length - U), J.lookahead -= J.prev_length - 1, J.prev_length -= 2;
                    do
                      ++J.strstart <= _e && (J.ins_h = (J.ins_h << J.hash_shift ^ J.window[J.strstart + U - 1]) & J.hash_mask, Ee = J.prev[J.strstart & J.w_mask] = J.head[J.ins_h], J.head[J.ins_h] = J.strstart);
                    while (--J.prev_length !== 0);
                    if (J.match_available = 0, J.match_length = U - 1, J.strstart++, ne && (ce(J, !1), J.strm.avail_out === 0))
                      return Z;
                  } else if (J.match_available) {
                    if (ne = n._tr_tally(J, 0, J.window[J.strstart - 1]), ne && ce(J, !1), J.strstart++, J.lookahead--, J.strm.avail_out === 0)
                      return Z;
                  } else
                    J.match_available = 1, J.strstart++, J.lookahead--;
                }
                return J.match_available && (ne = n._tr_tally(J, 0, J.window[J.strstart - 1]), J.match_available = 0), J.insert = J.strstart < U - 1 ? J.strstart : U - 1, we === g ? (ce(J, !0), J.strm.avail_out === 0 ? te : re) : J.last_lit && (ce(J, !1), J.strm.avail_out === 0) ? Z : z;
              }
              function Oe(J, we) {
                for (var Ee, ne, _e, Se, ke = J.window; ; ) {
                  if (J.lookahead <= F) {
                    if (Ae(J), J.lookahead <= F && we === o)
                      return Z;
                    if (J.lookahead === 0)
                      break;
                  }
                  if (J.match_length = 0, J.lookahead >= U && J.strstart > 0 && (_e = J.strstart - 1, ne = ke[_e], ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e])) {
                    Se = J.strstart + F;
                    do
                      ;
                    while (ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e] && ne === ke[++_e] && _e < Se);
                    J.match_length = F - (Se - _e), J.match_length > J.lookahead && (J.match_length = J.lookahead);
                  }
                  if (J.match_length >= U ? (Ee = n._tr_tally(J, 1, J.match_length - U), J.lookahead -= J.match_length, J.strstart += J.match_length, J.match_length = 0) : (Ee = n._tr_tally(J, 0, J.window[J.strstart]), J.lookahead--, J.strstart++), Ee && (ce(J, !1), J.strm.avail_out === 0))
                    return Z;
                }
                return J.insert = 0, we === g ? (ce(J, !0), J.strm.avail_out === 0 ? te : re) : J.last_lit && (ce(J, !1), J.strm.avail_out === 0) ? Z : z;
              }
              function Ne(J, we) {
                for (var Ee; ; ) {
                  if (J.lookahead === 0 && (Ae(J), J.lookahead === 0)) {
                    if (we === o)
                      return Z;
                    break;
                  }
                  if (J.match_length = 0, Ee = n._tr_tally(J, 0, J.window[J.strstart]), J.lookahead--, J.strstart++, Ee && (ce(J, !1), J.strm.avail_out === 0))
                    return Z;
                }
                return J.insert = 0, we === g ? (ce(J, !0), J.strm.avail_out === 0 ? te : re) : J.last_lit && (ce(J, !1), J.strm.avail_out === 0) ? Z : z;
              }
              function Fe(J, we, Ee, ne, _e) {
                this.good_length = J, this.max_lazy = we, this.nice_length = Ee, this.max_chain = ne, this.func = _e;
              }
              var $e;
              $e = [
                /*      good lazy nice chain */
                new Fe(0, 0, 0, 0, Te),
                /* 0 store only */
                new Fe(4, 4, 8, 4, Re),
                /* 1 max speed, no lazy matches */
                new Fe(4, 5, 16, 8, Re),
                /* 2 */
                new Fe(4, 6, 32, 32, Re),
                /* 3 */
                new Fe(4, 4, 16, 16, De),
                /* 4 lazy matches */
                new Fe(8, 16, 32, 32, De),
                /* 5 */
                new Fe(8, 16, 128, 128, De),
                /* 6 */
                new Fe(8, 32, 128, 256, De),
                /* 7 */
                new Fe(32, 128, 258, 1024, De),
                /* 8 */
                new Fe(32, 258, 258, 4096, De)
                /* 9 max compression */
              ];
              function ze(J) {
                J.window_size = 2 * J.w_size, de(J.head), J.max_lazy_match = $e[J.level].max_lazy, J.good_match = $e[J.level].good_length, J.nice_match = $e[J.level].nice_length, J.max_chain_length = $e[J.level].max_chain, J.strstart = 0, J.block_start = 0, J.lookahead = 0, J.insert = 0, J.match_length = J.prev_length = U - 1, J.match_available = 0, J.ins_h = 0;
              }
              function se() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = f, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new t.Buf16(P * 2), this.dyn_dtree = new t.Buf16((2 * I + 1) * 2), this.bl_tree = new t.Buf16((2 * x + 1) * 2), de(this.dyn_ltree), de(this.dyn_dtree), de(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new t.Buf16(d + 1), this.heap = new t.Buf16(2 * S + 1), de(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new t.Buf16(2 * S + 1), de(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
              }
              function be(J) {
                var we;
                return !J || !J.state ? ae(J, y) : (J.total_in = J.total_out = 0, J.data_type = w, we = J.state, we.pending = 0, we.pending_out = 0, we.wrap < 0 && (we.wrap = -we.wrap), we.status = we.wrap ? M : j, J.adler = we.wrap === 2 ? 0 : 1, we.last_flush = o, n._tr_init(we), b);
              }
              function Pe(J) {
                var we = be(J);
                return we === b && ze(J.state), we;
              }
              function Ve(J, we) {
                return !J || !J.state || J.state.wrap !== 2 ? y : (J.state.gzhead = we, b);
              }
              function me(J, we, Ee, ne, _e, Se) {
                if (!J)
                  return y;
                var ke = 1;
                if (we === v && (we = 6), ne < 0 ? (ke = 0, ne = -ne) : ne > 15 && (ke = 2, ne -= 16), _e < 1 || _e > R || Ee !== f || ne < 8 || ne > 15 || we < 0 || we > 9 || Se < 0 || Se > K)
                  return ae(J, y);
                ne === 8 && (ne = 9);
                var Ue = new se();
                return J.state = Ue, Ue.strm = J, Ue.wrap = ke, Ue.gzhead = null, Ue.w_bits = ne, Ue.w_size = 1 << Ue.w_bits, Ue.w_mask = Ue.w_size - 1, Ue.hash_bits = _e + 7, Ue.hash_size = 1 << Ue.hash_bits, Ue.hash_mask = Ue.hash_size - 1, Ue.hash_shift = ~~((Ue.hash_bits + U - 1) / U), Ue.window = new t.Buf8(Ue.w_size * 2), Ue.head = new t.Buf16(Ue.hash_size), Ue.prev = new t.Buf16(Ue.w_size), Ue.lit_bufsize = 1 << _e + 6, Ue.pending_buf_size = Ue.lit_bufsize * 4, Ue.pending_buf = new t.Buf8(Ue.pending_buf_size), Ue.d_buf = 1 * Ue.lit_bufsize, Ue.l_buf = 3 * Ue.lit_bufsize, Ue.level = we, Ue.strategy = Se, Ue.method = Ee, Pe(J);
              }
              function Me(J, we) {
                return me(J, we, f, O, W, T);
              }
              function ie(J, we) {
                var Ee, ne, _e, Se;
                if (!J || !J.state || we > a || we < 0)
                  return J ? ae(J, y) : y;
                if (ne = J.state, !J.output || !J.input && J.avail_in !== 0 || ne.status === ee && we !== g)
                  return ae(J, J.avail_out === 0 ? E : y);
                if (ne.strm = J, Ee = ne.last_flush, ne.last_flush = we, ne.status === M)
                  if (ne.wrap === 2)
                    J.adler = 0, he(ne, 31), he(ne, 139), he(ne, 8), ne.gzhead ? (he(
                      ne,
                      (ne.gzhead.text ? 1 : 0) + (ne.gzhead.hcrc ? 2 : 0) + (ne.gzhead.extra ? 4 : 0) + (ne.gzhead.name ? 8 : 0) + (ne.gzhead.comment ? 16 : 0)
                    ), he(ne, ne.gzhead.time & 255), he(ne, ne.gzhead.time >> 8 & 255), he(ne, ne.gzhead.time >> 16 & 255), he(ne, ne.gzhead.time >> 24 & 255), he(ne, ne.level === 9 ? 2 : ne.strategy >= L || ne.level < 2 ? 4 : 0), he(ne, ne.gzhead.os & 255), ne.gzhead.extra && ne.gzhead.extra.length && (he(ne, ne.gzhead.extra.length & 255), he(ne, ne.gzhead.extra.length >> 8 & 255)), ne.gzhead.hcrc && (J.adler = _(J.adler, ne.pending_buf, ne.pending, 0)), ne.gzindex = 0, ne.status = B) : (he(ne, 0), he(ne, 0), he(ne, 0), he(ne, 0), he(ne, 0), he(ne, ne.level === 9 ? 2 : ne.strategy >= L || ne.level < 2 ? 4 : 0), he(ne, le), ne.status = j);
                  else {
                    var ke = f + (ne.w_bits - 8 << 4) << 8, Ue = -1;
                    ne.strategy >= L || ne.level < 2 ? Ue = 0 : ne.level < 6 ? Ue = 1 : ne.level === 6 ? Ue = 2 : Ue = 3, ke |= Ue << 6, ne.strstart !== 0 && (ke |= Y), ke += 31 - ke % 31, ne.status = j, ye(ne, ke), ne.strstart !== 0 && (ye(ne, J.adler >>> 16), ye(ne, J.adler & 65535)), J.adler = 1;
                  }
                if (ne.status === B)
                  if (ne.gzhead.extra) {
                    for (_e = ne.pending; ne.gzindex < (ne.gzhead.extra.length & 65535) && !(ne.pending === ne.pending_buf_size && (ne.gzhead.hcrc && ne.pending > _e && (J.adler = _(J.adler, ne.pending_buf, ne.pending - _e, _e)), ve(J), _e = ne.pending, ne.pending === ne.pending_buf_size)); )
                      he(ne, ne.gzhead.extra[ne.gzindex] & 255), ne.gzindex++;
                    ne.gzhead.hcrc && ne.pending > _e && (J.adler = _(J.adler, ne.pending_buf, ne.pending - _e, _e)), ne.gzindex === ne.gzhead.extra.length && (ne.gzindex = 0, ne.status = D);
                  } else
                    ne.status = D;
                if (ne.status === D)
                  if (ne.gzhead.name) {
                    _e = ne.pending;
                    do {
                      if (ne.pending === ne.pending_buf_size && (ne.gzhead.hcrc && ne.pending > _e && (J.adler = _(J.adler, ne.pending_buf, ne.pending - _e, _e)), ve(J), _e = ne.pending, ne.pending === ne.pending_buf_size)) {
                        Se = 1;
                        break;
                      }
                      ne.gzindex < ne.gzhead.name.length ? Se = ne.gzhead.name.charCodeAt(ne.gzindex++) & 255 : Se = 0, he(ne, Se);
                    } while (Se !== 0);
                    ne.gzhead.hcrc && ne.pending > _e && (J.adler = _(J.adler, ne.pending_buf, ne.pending - _e, _e)), Se === 0 && (ne.gzindex = 0, ne.status = k);
                  } else
                    ne.status = k;
                if (ne.status === k)
                  if (ne.gzhead.comment) {
                    _e = ne.pending;
                    do {
                      if (ne.pending === ne.pending_buf_size && (ne.gzhead.hcrc && ne.pending > _e && (J.adler = _(J.adler, ne.pending_buf, ne.pending - _e, _e)), ve(J), _e = ne.pending, ne.pending === ne.pending_buf_size)) {
                        Se = 1;
                        break;
                      }
                      ne.gzindex < ne.gzhead.comment.length ? Se = ne.gzhead.comment.charCodeAt(ne.gzindex++) & 255 : Se = 0, he(ne, Se);
                    } while (Se !== 0);
                    ne.gzhead.hcrc && ne.pending > _e && (J.adler = _(J.adler, ne.pending_buf, ne.pending - _e, _e)), Se === 0 && (ne.status = G);
                  } else
                    ne.status = G;
                if (ne.status === G && (ne.gzhead.hcrc ? (ne.pending + 2 > ne.pending_buf_size && ve(J), ne.pending + 2 <= ne.pending_buf_size && (he(ne, J.adler & 255), he(ne, J.adler >> 8 & 255), J.adler = 0, ne.status = j)) : ne.status = j), ne.pending !== 0) {
                  if (ve(J), J.avail_out === 0)
                    return ne.last_flush = -1, b;
                } else if (J.avail_in === 0 && oe(we) <= oe(Ee) && we !== g)
                  return ae(J, E);
                if (ne.status === ee && J.avail_in !== 0)
                  return ae(J, E);
                if (J.avail_in !== 0 || ne.lookahead !== 0 || we !== o && ne.status !== ee) {
                  var je = ne.strategy === L ? Ne(ne, we) : ne.strategy === A ? Oe(ne, we) : $e[ne.level].func(ne, we);
                  if ((je === te || je === re) && (ne.status = ee), je === Z || je === te)
                    return J.avail_out === 0 && (ne.last_flush = -1), b;
                  if (je === z && (we === c ? n._tr_align(ne) : we !== a && (n._tr_stored_block(ne, 0, 0, !1), we === l && (de(ne.head), ne.lookahead === 0 && (ne.strstart = 0, ne.block_start = 0, ne.insert = 0))), ve(J), J.avail_out === 0))
                    return ne.last_flush = -1, b;
                }
                return we !== g ? b : ne.wrap <= 0 ? V : (ne.wrap === 2 ? (he(ne, J.adler & 255), he(ne, J.adler >> 8 & 255), he(ne, J.adler >> 16 & 255), he(ne, J.adler >> 24 & 255), he(ne, J.total_in & 255), he(ne, J.total_in >> 8 & 255), he(ne, J.total_in >> 16 & 255), he(ne, J.total_in >> 24 & 255)) : (ye(ne, J.adler >>> 16), ye(ne, J.adler & 65535)), ve(J), ne.wrap > 0 && (ne.wrap = -ne.wrap), ne.pending !== 0 ? b : V);
              }
              function xe(J) {
                var we;
                return !J || !J.state ? y : (we = J.state.status, we !== M && we !== B && we !== D && we !== k && we !== G && we !== j && we !== ee ? ae(J, y) : (J.state = null, we === j ? ae(J, C) : b));
              }
              function We(J, we) {
                var Ee = we.length, ne, _e, Se, ke, Ue, je, He, ct;
                if (!J || !J.state || (ne = J.state, ke = ne.wrap, ke === 2 || ke === 1 && ne.status !== M || ne.lookahead))
                  return y;
                for (ke === 1 && (J.adler = e(J.adler, we, Ee, 0)), ne.wrap = 0, Ee >= ne.w_size && (ke === 0 && (de(ne.head), ne.strstart = 0, ne.block_start = 0, ne.insert = 0), ct = new t.Buf8(ne.w_size), t.arraySet(ct, we, Ee - ne.w_size, ne.w_size, 0), we = ct, Ee = ne.w_size), Ue = J.avail_in, je = J.next_in, He = J.input, J.avail_in = Ee, J.next_in = 0, J.input = we, Ae(ne); ne.lookahead >= U; ) {
                  _e = ne.strstart, Se = ne.lookahead - (U - 1);
                  do
                    ne.ins_h = (ne.ins_h << ne.hash_shift ^ ne.window[_e + U - 1]) & ne.hash_mask, ne.prev[_e & ne.w_mask] = ne.head[ne.ins_h], ne.head[ne.ins_h] = _e, _e++;
                  while (--Se);
                  ne.strstart = _e, ne.lookahead = U - 1, Ae(ne);
                }
                return ne.strstart += ne.lookahead, ne.block_start = ne.strstart, ne.insert = ne.lookahead, ne.lookahead = 0, ne.match_length = ne.prev_length = U - 1, ne.match_available = 0, J.next_in = je, J.input = He, J.avail_in = Ue, ne.wrap = ke, b;
              }
              u.deflateInit = Me, u.deflateInit2 = me, u.deflateReset = Pe, u.deflateResetKeep = be, u.deflateSetHeader = Ve, u.deflate = ie, u.deflateEnd = xe, u.deflateSetDictionary = We, u.deflateInfo = "pako deflate (from Nodeca project)";
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/gzheader.js": (
            /*!*************************************************!*\
              !*** ../node_modules/pako/lib/zlib/gzheader.js ***!
              \*************************************************/
            /***/
            (s) => {
              function u() {
                this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
              }
              s.exports = u;
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/inffast.js": (
            /*!************************************************!*\
              !*** ../node_modules/pako/lib/zlib/inffast.js ***!
              \************************************************/
            /***/
            (s) => {
              var u = 30, i = 12;
              s.exports = function(n, e) {
                var _, r, o, c, l, g, a, b, V, y, C, E, v, m, L, A, K, T, w, f, R, O, W, N, $;
                _ = n.state, r = n.next_in, N = n.input, o = r + (n.avail_in - 5), c = n.next_out, $ = n.output, l = c - (e - n.avail_out), g = c + (n.avail_out - 257), a = _.dmax, b = _.wsize, V = _.whave, y = _.wnext, C = _.window, E = _.hold, v = _.bits, m = _.lencode, L = _.distcode, A = (1 << _.lenbits) - 1, K = (1 << _.distbits) - 1;
                e:
                  do {
                    v < 15 && (E += N[r++] << v, v += 8, E += N[r++] << v, v += 8), T = m[E & A];
                    t:
                      for (; ; ) {
                        if (w = T >>> 24, E >>>= w, v -= w, w = T >>> 16 & 255, w === 0)
                          $[c++] = T & 65535;
                        else if (w & 16) {
                          f = T & 65535, w &= 15, w && (v < w && (E += N[r++] << v, v += 8), f += E & (1 << w) - 1, E >>>= w, v -= w), v < 15 && (E += N[r++] << v, v += 8, E += N[r++] << v, v += 8), T = L[E & K];
                          i:
                            for (; ; ) {
                              if (w = T >>> 24, E >>>= w, v -= w, w = T >>> 16 & 255, w & 16) {
                                if (R = T & 65535, w &= 15, v < w && (E += N[r++] << v, v += 8, v < w && (E += N[r++] << v, v += 8)), R += E & (1 << w) - 1, R > a) {
                                  n.msg = "invalid distance too far back", _.mode = u;
                                  break e;
                                }
                                if (E >>>= w, v -= w, w = c - l, R > w) {
                                  if (w = R - w, w > V && _.sane) {
                                    n.msg = "invalid distance too far back", _.mode = u;
                                    break e;
                                  }
                                  if (O = 0, W = C, y === 0) {
                                    if (O += b - w, w < f) {
                                      f -= w;
                                      do
                                        $[c++] = C[O++];
                                      while (--w);
                                      O = c - R, W = $;
                                    }
                                  } else if (y < w) {
                                    if (O += b + y - w, w -= y, w < f) {
                                      f -= w;
                                      do
                                        $[c++] = C[O++];
                                      while (--w);
                                      if (O = 0, y < f) {
                                        w = y, f -= w;
                                        do
                                          $[c++] = C[O++];
                                        while (--w);
                                        O = c - R, W = $;
                                      }
                                    }
                                  } else if (O += y - w, w < f) {
                                    f -= w;
                                    do
                                      $[c++] = C[O++];
                                    while (--w);
                                    O = c - R, W = $;
                                  }
                                  for (; f > 2; )
                                    $[c++] = W[O++], $[c++] = W[O++], $[c++] = W[O++], f -= 3;
                                  f && ($[c++] = W[O++], f > 1 && ($[c++] = W[O++]));
                                } else {
                                  O = c - R;
                                  do
                                    $[c++] = $[O++], $[c++] = $[O++], $[c++] = $[O++], f -= 3;
                                  while (f > 2);
                                  f && ($[c++] = $[O++], f > 1 && ($[c++] = $[O++]));
                                }
                              } else if (w & 64) {
                                n.msg = "invalid distance code", _.mode = u;
                                break e;
                              } else {
                                T = L[(T & 65535) + (E & (1 << w) - 1)];
                                continue i;
                              }
                              break;
                            }
                        } else if (w & 64)
                          if (w & 32) {
                            _.mode = i;
                            break e;
                          } else {
                            n.msg = "invalid literal/length code", _.mode = u;
                            break e;
                          }
                        else {
                          T = m[(T & 65535) + (E & (1 << w) - 1)];
                          continue t;
                        }
                        break;
                      }
                  } while (r < o && c < g);
                f = v >> 3, r -= f, v -= f << 3, E &= (1 << v) - 1, n.next_in = r, n.next_out = c, n.avail_in = r < o ? 5 + (o - r) : 5 - (r - o), n.avail_out = c < g ? 257 + (g - c) : 257 - (c - g), _.hold = E, _.bits = v;
              };
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/inflate.js": (
            /*!************************************************!*\
              !*** ../node_modules/pako/lib/zlib/inflate.js ***!
              \************************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ../utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ), n = i(
                /*! ./adler32 */
                "../node_modules/pako/lib/zlib/adler32.js"
              ), e = i(
                /*! ./crc32 */
                "../node_modules/pako/lib/zlib/crc32.js"
              ), _ = i(
                /*! ./inffast */
                "../node_modules/pako/lib/zlib/inffast.js"
              ), r = i(
                /*! ./inftrees */
                "../node_modules/pako/lib/zlib/inftrees.js"
              ), o = 0, c = 1, l = 2, g = 4, a = 5, b = 6, V = 0, y = 1, C = 2, E = -2, v = -3, m = -4, L = -5, A = 8, K = 1, T = 2, w = 3, f = 4, R = 5, O = 6, W = 7, N = 8, $ = 9, S = 10, I = 11, x = 12, P = 13, d = 14, U = 15, F = 16, X = 17, Y = 18, M = 19, B = 20, D = 21, k = 22, G = 23, j = 24, ee = 25, Z = 26, z = 27, te = 28, re = 29, le = 30, ae = 31, oe = 32, de = 852, ve = 592, ce = 15, he = ce;
              function ye(me) {
                return (me >>> 24 & 255) + (me >>> 8 & 65280) + ((me & 65280) << 8) + ((me & 255) << 24);
              }
              function fe() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new t.Buf16(320), this.work = new t.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
              }
              function Ce(me) {
                var Me;
                return !me || !me.state ? E : (Me = me.state, me.total_in = me.total_out = Me.total = 0, me.msg = "", Me.wrap && (me.adler = Me.wrap & 1), Me.mode = K, Me.last = 0, Me.havedict = 0, Me.dmax = 32768, Me.head = null, Me.hold = 0, Me.bits = 0, Me.lencode = Me.lendyn = new t.Buf32(de), Me.distcode = Me.distdyn = new t.Buf32(ve), Me.sane = 1, Me.back = -1, V);
              }
              function Ae(me) {
                var Me;
                return !me || !me.state ? E : (Me = me.state, Me.wsize = 0, Me.whave = 0, Me.wnext = 0, Ce(me));
              }
              function Te(me, Me) {
                var ie, xe;
                return !me || !me.state || (xe = me.state, Me < 0 ? (ie = 0, Me = -Me) : (ie = (Me >> 4) + 1, Me < 48 && (Me &= 15)), Me && (Me < 8 || Me > 15)) ? E : (xe.window !== null && xe.wbits !== Me && (xe.window = null), xe.wrap = ie, xe.wbits = Me, Ae(me));
              }
              function Re(me, Me) {
                var ie, xe;
                return me ? (xe = new fe(), me.state = xe, xe.window = null, ie = Te(me, Me), ie !== V && (me.state = null), ie) : E;
              }
              function De(me) {
                return Re(me, he);
              }
              var Oe = !0, Ne, Fe;
              function $e(me) {
                if (Oe) {
                  var Me;
                  for (Ne = new t.Buf32(512), Fe = new t.Buf32(32), Me = 0; Me < 144; )
                    me.lens[Me++] = 8;
                  for (; Me < 256; )
                    me.lens[Me++] = 9;
                  for (; Me < 280; )
                    me.lens[Me++] = 7;
                  for (; Me < 288; )
                    me.lens[Me++] = 8;
                  for (r(c, me.lens, 0, 288, Ne, 0, me.work, { bits: 9 }), Me = 0; Me < 32; )
                    me.lens[Me++] = 5;
                  r(l, me.lens, 0, 32, Fe, 0, me.work, { bits: 5 }), Oe = !1;
                }
                me.lencode = Ne, me.lenbits = 9, me.distcode = Fe, me.distbits = 5;
              }
              function ze(me, Me, ie, xe) {
                var We, J = me.state;
                return J.window === null && (J.wsize = 1 << J.wbits, J.wnext = 0, J.whave = 0, J.window = new t.Buf8(J.wsize)), xe >= J.wsize ? (t.arraySet(J.window, Me, ie - J.wsize, J.wsize, 0), J.wnext = 0, J.whave = J.wsize) : (We = J.wsize - J.wnext, We > xe && (We = xe), t.arraySet(J.window, Me, ie - xe, We, J.wnext), xe -= We, xe ? (t.arraySet(J.window, Me, ie - xe, xe, 0), J.wnext = xe, J.whave = J.wsize) : (J.wnext += We, J.wnext === J.wsize && (J.wnext = 0), J.whave < J.wsize && (J.whave += We))), 0;
              }
              function se(me, Me) {
                var ie, xe, We, J, we, Ee, ne, _e, Se, ke, Ue, je, He, ct, Je = 0, Xe, Ze, tt, et, _t, at, Ye, it, Qe = new t.Buf8(4), ht, qe, st = (
                  /* permutation of code lengths */
                  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
                );
                if (!me || !me.state || !me.output || !me.input && me.avail_in !== 0)
                  return E;
                ie = me.state, ie.mode === x && (ie.mode = P), we = me.next_out, We = me.output, ne = me.avail_out, J = me.next_in, xe = me.input, Ee = me.avail_in, _e = ie.hold, Se = ie.bits, ke = Ee, Ue = ne, it = V;
                e:
                  for (; ; )
                    switch (ie.mode) {
                      case K:
                        if (ie.wrap === 0) {
                          ie.mode = P;
                          break;
                        }
                        for (; Se < 16; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        if (ie.wrap & 2 && _e === 35615) {
                          ie.check = 0, Qe[0] = _e & 255, Qe[1] = _e >>> 8 & 255, ie.check = e(ie.check, Qe, 2, 0), _e = 0, Se = 0, ie.mode = T;
                          break;
                        }
                        if (ie.flags = 0, ie.head && (ie.head.done = !1), !(ie.wrap & 1) || /* check if zlib header allowed */
                        (((_e & 255) << 8) + (_e >> 8)) % 31) {
                          me.msg = "incorrect header check", ie.mode = le;
                          break;
                        }
                        if ((_e & 15) !== A) {
                          me.msg = "unknown compression method", ie.mode = le;
                          break;
                        }
                        if (_e >>>= 4, Se -= 4, Ye = (_e & 15) + 8, ie.wbits === 0)
                          ie.wbits = Ye;
                        else if (Ye > ie.wbits) {
                          me.msg = "invalid window size", ie.mode = le;
                          break;
                        }
                        ie.dmax = 1 << Ye, me.adler = ie.check = 1, ie.mode = _e & 512 ? S : x, _e = 0, Se = 0;
                        break;
                      case T:
                        for (; Se < 16; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        if (ie.flags = _e, (ie.flags & 255) !== A) {
                          me.msg = "unknown compression method", ie.mode = le;
                          break;
                        }
                        if (ie.flags & 57344) {
                          me.msg = "unknown header flags set", ie.mode = le;
                          break;
                        }
                        ie.head && (ie.head.text = _e >> 8 & 1), ie.flags & 512 && (Qe[0] = _e & 255, Qe[1] = _e >>> 8 & 255, ie.check = e(ie.check, Qe, 2, 0)), _e = 0, Se = 0, ie.mode = w;
                      case w:
                        for (; Se < 32; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        ie.head && (ie.head.time = _e), ie.flags & 512 && (Qe[0] = _e & 255, Qe[1] = _e >>> 8 & 255, Qe[2] = _e >>> 16 & 255, Qe[3] = _e >>> 24 & 255, ie.check = e(ie.check, Qe, 4, 0)), _e = 0, Se = 0, ie.mode = f;
                      case f:
                        for (; Se < 16; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        ie.head && (ie.head.xflags = _e & 255, ie.head.os = _e >> 8), ie.flags & 512 && (Qe[0] = _e & 255, Qe[1] = _e >>> 8 & 255, ie.check = e(ie.check, Qe, 2, 0)), _e = 0, Se = 0, ie.mode = R;
                      case R:
                        if (ie.flags & 1024) {
                          for (; Se < 16; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          ie.length = _e, ie.head && (ie.head.extra_len = _e), ie.flags & 512 && (Qe[0] = _e & 255, Qe[1] = _e >>> 8 & 255, ie.check = e(ie.check, Qe, 2, 0)), _e = 0, Se = 0;
                        } else
                          ie.head && (ie.head.extra = null);
                        ie.mode = O;
                      case O:
                        if (ie.flags & 1024 && (je = ie.length, je > Ee && (je = Ee), je && (ie.head && (Ye = ie.head.extra_len - ie.length, ie.head.extra || (ie.head.extra = new Array(ie.head.extra_len)), t.arraySet(
                          ie.head.extra,
                          xe,
                          J,
                          // extra field is limited to 65536 bytes
                          // - no need for additional size check
                          je,
                          /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                          Ye
                        )), ie.flags & 512 && (ie.check = e(ie.check, xe, je, J)), Ee -= je, J += je, ie.length -= je), ie.length))
                          break e;
                        ie.length = 0, ie.mode = W;
                      case W:
                        if (ie.flags & 2048) {
                          if (Ee === 0)
                            break e;
                          je = 0;
                          do
                            Ye = xe[J + je++], ie.head && Ye && ie.length < 65536 && (ie.head.name += String.fromCharCode(Ye));
                          while (Ye && je < Ee);
                          if (ie.flags & 512 && (ie.check = e(ie.check, xe, je, J)), Ee -= je, J += je, Ye)
                            break e;
                        } else
                          ie.head && (ie.head.name = null);
                        ie.length = 0, ie.mode = N;
                      case N:
                        if (ie.flags & 4096) {
                          if (Ee === 0)
                            break e;
                          je = 0;
                          do
                            Ye = xe[J + je++], ie.head && Ye && ie.length < 65536 && (ie.head.comment += String.fromCharCode(Ye));
                          while (Ye && je < Ee);
                          if (ie.flags & 512 && (ie.check = e(ie.check, xe, je, J)), Ee -= je, J += je, Ye)
                            break e;
                        } else
                          ie.head && (ie.head.comment = null);
                        ie.mode = $;
                      case $:
                        if (ie.flags & 512) {
                          for (; Se < 16; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          if (_e !== (ie.check & 65535)) {
                            me.msg = "header crc mismatch", ie.mode = le;
                            break;
                          }
                          _e = 0, Se = 0;
                        }
                        ie.head && (ie.head.hcrc = ie.flags >> 9 & 1, ie.head.done = !0), me.adler = ie.check = 0, ie.mode = x;
                        break;
                      case S:
                        for (; Se < 32; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        me.adler = ie.check = ye(_e), _e = 0, Se = 0, ie.mode = I;
                      case I:
                        if (ie.havedict === 0)
                          return me.next_out = we, me.avail_out = ne, me.next_in = J, me.avail_in = Ee, ie.hold = _e, ie.bits = Se, C;
                        me.adler = ie.check = 1, ie.mode = x;
                      case x:
                        if (Me === a || Me === b)
                          break e;
                      case P:
                        if (ie.last) {
                          _e >>>= Se & 7, Se -= Se & 7, ie.mode = z;
                          break;
                        }
                        for (; Se < 3; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        switch (ie.last = _e & 1, _e >>>= 1, Se -= 1, _e & 3) {
                          case 0:
                            ie.mode = d;
                            break;
                          case 1:
                            if ($e(ie), ie.mode = B, Me === b) {
                              _e >>>= 2, Se -= 2;
                              break e;
                            }
                            break;
                          case 2:
                            ie.mode = X;
                            break;
                          case 3:
                            me.msg = "invalid block type", ie.mode = le;
                        }
                        _e >>>= 2, Se -= 2;
                        break;
                      case d:
                        for (_e >>>= Se & 7, Se -= Se & 7; Se < 32; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        if ((_e & 65535) !== (_e >>> 16 ^ 65535)) {
                          me.msg = "invalid stored block lengths", ie.mode = le;
                          break;
                        }
                        if (ie.length = _e & 65535, _e = 0, Se = 0, ie.mode = U, Me === b)
                          break e;
                      case U:
                        ie.mode = F;
                      case F:
                        if (je = ie.length, je) {
                          if (je > Ee && (je = Ee), je > ne && (je = ne), je === 0)
                            break e;
                          t.arraySet(We, xe, J, je, we), Ee -= je, J += je, ne -= je, we += je, ie.length -= je;
                          break;
                        }
                        ie.mode = x;
                        break;
                      case X:
                        for (; Se < 14; ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        if (ie.nlen = (_e & 31) + 257, _e >>>= 5, Se -= 5, ie.ndist = (_e & 31) + 1, _e >>>= 5, Se -= 5, ie.ncode = (_e & 15) + 4, _e >>>= 4, Se -= 4, ie.nlen > 286 || ie.ndist > 30) {
                          me.msg = "too many length or distance symbols", ie.mode = le;
                          break;
                        }
                        ie.have = 0, ie.mode = Y;
                      case Y:
                        for (; ie.have < ie.ncode; ) {
                          for (; Se < 3; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          ie.lens[st[ie.have++]] = _e & 7, _e >>>= 3, Se -= 3;
                        }
                        for (; ie.have < 19; )
                          ie.lens[st[ie.have++]] = 0;
                        if (ie.lencode = ie.lendyn, ie.lenbits = 7, ht = { bits: ie.lenbits }, it = r(o, ie.lens, 0, 19, ie.lencode, 0, ie.work, ht), ie.lenbits = ht.bits, it) {
                          me.msg = "invalid code lengths set", ie.mode = le;
                          break;
                        }
                        ie.have = 0, ie.mode = M;
                      case M:
                        for (; ie.have < ie.nlen + ie.ndist; ) {
                          for (; Je = ie.lencode[_e & (1 << ie.lenbits) - 1], Xe = Je >>> 24, Ze = Je >>> 16 & 255, tt = Je & 65535, !(Xe <= Se); ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          if (tt < 16)
                            _e >>>= Xe, Se -= Xe, ie.lens[ie.have++] = tt;
                          else {
                            if (tt === 16) {
                              for (qe = Xe + 2; Se < qe; ) {
                                if (Ee === 0)
                                  break e;
                                Ee--, _e += xe[J++] << Se, Se += 8;
                              }
                              if (_e >>>= Xe, Se -= Xe, ie.have === 0) {
                                me.msg = "invalid bit length repeat", ie.mode = le;
                                break;
                              }
                              Ye = ie.lens[ie.have - 1], je = 3 + (_e & 3), _e >>>= 2, Se -= 2;
                            } else if (tt === 17) {
                              for (qe = Xe + 3; Se < qe; ) {
                                if (Ee === 0)
                                  break e;
                                Ee--, _e += xe[J++] << Se, Se += 8;
                              }
                              _e >>>= Xe, Se -= Xe, Ye = 0, je = 3 + (_e & 7), _e >>>= 3, Se -= 3;
                            } else {
                              for (qe = Xe + 7; Se < qe; ) {
                                if (Ee === 0)
                                  break e;
                                Ee--, _e += xe[J++] << Se, Se += 8;
                              }
                              _e >>>= Xe, Se -= Xe, Ye = 0, je = 11 + (_e & 127), _e >>>= 7, Se -= 7;
                            }
                            if (ie.have + je > ie.nlen + ie.ndist) {
                              me.msg = "invalid bit length repeat", ie.mode = le;
                              break;
                            }
                            for (; je--; )
                              ie.lens[ie.have++] = Ye;
                          }
                        }
                        if (ie.mode === le)
                          break;
                        if (ie.lens[256] === 0) {
                          me.msg = "invalid code -- missing end-of-block", ie.mode = le;
                          break;
                        }
                        if (ie.lenbits = 9, ht = { bits: ie.lenbits }, it = r(c, ie.lens, 0, ie.nlen, ie.lencode, 0, ie.work, ht), ie.lenbits = ht.bits, it) {
                          me.msg = "invalid literal/lengths set", ie.mode = le;
                          break;
                        }
                        if (ie.distbits = 6, ie.distcode = ie.distdyn, ht = { bits: ie.distbits }, it = r(l, ie.lens, ie.nlen, ie.ndist, ie.distcode, 0, ie.work, ht), ie.distbits = ht.bits, it) {
                          me.msg = "invalid distances set", ie.mode = le;
                          break;
                        }
                        if (ie.mode = B, Me === b)
                          break e;
                      case B:
                        ie.mode = D;
                      case D:
                        if (Ee >= 6 && ne >= 258) {
                          me.next_out = we, me.avail_out = ne, me.next_in = J, me.avail_in = Ee, ie.hold = _e, ie.bits = Se, _(me, Ue), we = me.next_out, We = me.output, ne = me.avail_out, J = me.next_in, xe = me.input, Ee = me.avail_in, _e = ie.hold, Se = ie.bits, ie.mode === x && (ie.back = -1);
                          break;
                        }
                        for (ie.back = 0; Je = ie.lencode[_e & (1 << ie.lenbits) - 1], Xe = Je >>> 24, Ze = Je >>> 16 & 255, tt = Je & 65535, !(Xe <= Se); ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        if (Ze && !(Ze & 240)) {
                          for (et = Xe, _t = Ze, at = tt; Je = ie.lencode[at + ((_e & (1 << et + _t) - 1) >> et)], Xe = Je >>> 24, Ze = Je >>> 16 & 255, tt = Je & 65535, !(et + Xe <= Se); ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          _e >>>= et, Se -= et, ie.back += et;
                        }
                        if (_e >>>= Xe, Se -= Xe, ie.back += Xe, ie.length = tt, Ze === 0) {
                          ie.mode = Z;
                          break;
                        }
                        if (Ze & 32) {
                          ie.back = -1, ie.mode = x;
                          break;
                        }
                        if (Ze & 64) {
                          me.msg = "invalid literal/length code", ie.mode = le;
                          break;
                        }
                        ie.extra = Ze & 15, ie.mode = k;
                      case k:
                        if (ie.extra) {
                          for (qe = ie.extra; Se < qe; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          ie.length += _e & (1 << ie.extra) - 1, _e >>>= ie.extra, Se -= ie.extra, ie.back += ie.extra;
                        }
                        ie.was = ie.length, ie.mode = G;
                      case G:
                        for (; Je = ie.distcode[_e & (1 << ie.distbits) - 1], Xe = Je >>> 24, Ze = Je >>> 16 & 255, tt = Je & 65535, !(Xe <= Se); ) {
                          if (Ee === 0)
                            break e;
                          Ee--, _e += xe[J++] << Se, Se += 8;
                        }
                        if (!(Ze & 240)) {
                          for (et = Xe, _t = Ze, at = tt; Je = ie.distcode[at + ((_e & (1 << et + _t) - 1) >> et)], Xe = Je >>> 24, Ze = Je >>> 16 & 255, tt = Je & 65535, !(et + Xe <= Se); ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          _e >>>= et, Se -= et, ie.back += et;
                        }
                        if (_e >>>= Xe, Se -= Xe, ie.back += Xe, Ze & 64) {
                          me.msg = "invalid distance code", ie.mode = le;
                          break;
                        }
                        ie.offset = tt, ie.extra = Ze & 15, ie.mode = j;
                      case j:
                        if (ie.extra) {
                          for (qe = ie.extra; Se < qe; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          ie.offset += _e & (1 << ie.extra) - 1, _e >>>= ie.extra, Se -= ie.extra, ie.back += ie.extra;
                        }
                        if (ie.offset > ie.dmax) {
                          me.msg = "invalid distance too far back", ie.mode = le;
                          break;
                        }
                        ie.mode = ee;
                      case ee:
                        if (ne === 0)
                          break e;
                        if (je = Ue - ne, ie.offset > je) {
                          if (je = ie.offset - je, je > ie.whave && ie.sane) {
                            me.msg = "invalid distance too far back", ie.mode = le;
                            break;
                          }
                          je > ie.wnext ? (je -= ie.wnext, He = ie.wsize - je) : He = ie.wnext - je, je > ie.length && (je = ie.length), ct = ie.window;
                        } else
                          ct = We, He = we - ie.offset, je = ie.length;
                        je > ne && (je = ne), ne -= je, ie.length -= je;
                        do
                          We[we++] = ct[He++];
                        while (--je);
                        ie.length === 0 && (ie.mode = D);
                        break;
                      case Z:
                        if (ne === 0)
                          break e;
                        We[we++] = ie.length, ne--, ie.mode = D;
                        break;
                      case z:
                        if (ie.wrap) {
                          for (; Se < 32; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e |= xe[J++] << Se, Se += 8;
                          }
                          if (Ue -= ne, me.total_out += Ue, ie.total += Ue, Ue && (me.adler = ie.check = /*UPDATE(state.check, put - _out, _out);*/
                          ie.flags ? e(ie.check, We, Ue, we - Ue) : n(ie.check, We, Ue, we - Ue)), Ue = ne, (ie.flags ? _e : ye(_e)) !== ie.check) {
                            me.msg = "incorrect data check", ie.mode = le;
                            break;
                          }
                          _e = 0, Se = 0;
                        }
                        ie.mode = te;
                      case te:
                        if (ie.wrap && ie.flags) {
                          for (; Se < 32; ) {
                            if (Ee === 0)
                              break e;
                            Ee--, _e += xe[J++] << Se, Se += 8;
                          }
                          if (_e !== (ie.total & 4294967295)) {
                            me.msg = "incorrect length check", ie.mode = le;
                            break;
                          }
                          _e = 0, Se = 0;
                        }
                        ie.mode = re;
                      case re:
                        it = y;
                        break e;
                      case le:
                        it = v;
                        break e;
                      case ae:
                        return m;
                      case oe:
                      default:
                        return E;
                    }
                return me.next_out = we, me.avail_out = ne, me.next_in = J, me.avail_in = Ee, ie.hold = _e, ie.bits = Se, (ie.wsize || Ue !== me.avail_out && ie.mode < le && (ie.mode < z || Me !== g)) && ze(me, me.output, me.next_out, Ue - me.avail_out), ke -= me.avail_in, Ue -= me.avail_out, me.total_in += ke, me.total_out += Ue, ie.total += Ue, ie.wrap && Ue && (me.adler = ie.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
                ie.flags ? e(ie.check, We, Ue, me.next_out - Ue) : n(ie.check, We, Ue, me.next_out - Ue)), me.data_type = ie.bits + (ie.last ? 64 : 0) + (ie.mode === x ? 128 : 0) + (ie.mode === B || ie.mode === U ? 256 : 0), (ke === 0 && Ue === 0 || Me === g) && it === V && (it = L), it;
              }
              function be(me) {
                if (!me || !me.state)
                  return E;
                var Me = me.state;
                return Me.window && (Me.window = null), me.state = null, V;
              }
              function Pe(me, Me) {
                var ie;
                return !me || !me.state || (ie = me.state, !(ie.wrap & 2)) ? E : (ie.head = Me, Me.done = !1, V);
              }
              function Ve(me, Me) {
                var ie = Me.length, xe, We, J;
                return !me || !me.state || (xe = me.state, xe.wrap !== 0 && xe.mode !== I) ? E : xe.mode === I && (We = 1, We = n(We, Me, ie, 0), We !== xe.check) ? v : (J = ze(me, Me, ie, ie), J ? (xe.mode = ae, m) : (xe.havedict = 1, V));
              }
              u.inflateReset = Ae, u.inflateReset2 = Te, u.inflateResetKeep = Ce, u.inflateInit = De, u.inflateInit2 = Re, u.inflate = se, u.inflateEnd = be, u.inflateGetHeader = Pe, u.inflateSetDictionary = Ve, u.inflateInfo = "pako inflate (from Nodeca project)";
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/inftrees.js": (
            /*!*************************************************!*\
              !*** ../node_modules/pako/lib/zlib/inftrees.js ***!
              \*************************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ../utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ), n = 15, e = 852, _ = 592, r = 0, o = 1, c = 2, l = [
                /* Length codes 257..285 base */
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                15,
                17,
                19,
                23,
                27,
                31,
                35,
                43,
                51,
                59,
                67,
                83,
                99,
                115,
                131,
                163,
                195,
                227,
                258,
                0,
                0
              ], g = [
                /* Length codes 257..285 extra */
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                16,
                72,
                78
              ], a = [
                /* Distance codes 0..29 base */
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577,
                0,
                0
              ], b = [
                /* Distance codes 0..29 extra */
                16,
                16,
                16,
                16,
                17,
                17,
                18,
                18,
                19,
                19,
                20,
                20,
                21,
                21,
                22,
                22,
                23,
                23,
                24,
                24,
                25,
                25,
                26,
                26,
                27,
                27,
                28,
                28,
                29,
                29,
                64,
                64
              ];
              s.exports = function(y, C, E, v, m, L, A, K) {
                var T = K.bits, w = 0, f = 0, R = 0, O = 0, W = 0, N = 0, $ = 0, S = 0, I = 0, x = 0, P, d, U, F, X, Y = null, M = 0, B, D = new t.Buf16(n + 1), k = new t.Buf16(n + 1), G = null, j = 0, ee, Z, z;
                for (w = 0; w <= n; w++)
                  D[w] = 0;
                for (f = 0; f < v; f++)
                  D[C[E + f]]++;
                for (W = T, O = n; O >= 1 && D[O] === 0; O--)
                  ;
                if (W > O && (W = O), O === 0)
                  return m[L++] = 20971520, m[L++] = 20971520, K.bits = 1, 0;
                for (R = 1; R < O && D[R] === 0; R++)
                  ;
                for (W < R && (W = R), S = 1, w = 1; w <= n; w++)
                  if (S <<= 1, S -= D[w], S < 0)
                    return -1;
                if (S > 0 && (y === r || O !== 1))
                  return -1;
                for (k[1] = 0, w = 1; w < n; w++)
                  k[w + 1] = k[w] + D[w];
                for (f = 0; f < v; f++)
                  C[E + f] !== 0 && (A[k[C[E + f]]++] = f);
                if (y === r ? (Y = G = A, B = 19) : y === o ? (Y = l, M -= 257, G = g, j -= 257, B = 256) : (Y = a, G = b, B = -1), x = 0, f = 0, w = R, X = L, N = W, $ = 0, U = -1, I = 1 << W, F = I - 1, y === o && I > e || y === c && I > _)
                  return 1;
                for (; ; ) {
                  ee = w - $, A[f] < B ? (Z = 0, z = A[f]) : A[f] > B ? (Z = G[j + A[f]], z = Y[M + A[f]]) : (Z = 96, z = 0), P = 1 << w - $, d = 1 << N, R = d;
                  do
                    d -= P, m[X + (x >> $) + d] = ee << 24 | Z << 16 | z | 0;
                  while (d !== 0);
                  for (P = 1 << w - 1; x & P; )
                    P >>= 1;
                  if (P !== 0 ? (x &= P - 1, x += P) : x = 0, f++, --D[w] === 0) {
                    if (w === O)
                      break;
                    w = C[E + A[f]];
                  }
                  if (w > W && (x & F) !== U) {
                    for ($ === 0 && ($ = W), X += R, N = w - $, S = 1 << N; N + $ < O && (S -= D[N + $], !(S <= 0)); )
                      N++, S <<= 1;
                    if (I += 1 << N, y === o && I > e || y === c && I > _)
                      return 1;
                    U = x & F, m[U] = W << 24 | N << 16 | X - L | 0;
                  }
                }
                return x !== 0 && (m[X + x] = w - $ << 24 | 4194304 | 0), K.bits = W, 0;
              };
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/messages.js": (
            /*!*************************************************!*\
              !*** ../node_modules/pako/lib/zlib/messages.js ***!
              \*************************************************/
            /***/
            (s) => {
              s.exports = {
                2: "need dictionary",
                /* Z_NEED_DICT       2  */
                1: "stream end",
                /* Z_STREAM_END      1  */
                0: "",
                /* Z_OK              0  */
                "-1": "file error",
                /* Z_ERRNO         (-1) */
                "-2": "stream error",
                /* Z_STREAM_ERROR  (-2) */
                "-3": "data error",
                /* Z_DATA_ERROR    (-3) */
                "-4": "insufficient memory",
                /* Z_MEM_ERROR     (-4) */
                "-5": "buffer error",
                /* Z_BUF_ERROR     (-5) */
                "-6": "incompatible version"
                /* Z_VERSION_ERROR (-6) */
              };
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/trees.js": (
            /*!**********************************************!*\
              !*** ../node_modules/pako/lib/zlib/trees.js ***!
              \**********************************************/
            /***/
            (s, u, i) => {
              var t = i(
                /*! ../utils/common */
                "../node_modules/pako/lib/utils/common.js"
              ), n = 4, e = 0, _ = 1, r = 2;
              function o(se) {
                for (var be = se.length; --be >= 0; )
                  se[be] = 0;
              }
              var c = 0, l = 1, g = 2, a = 3, b = 258, V = 29, y = 256, C = y + 1 + V, E = 30, v = 19, m = 2 * C + 1, L = 15, A = 16, K = 7, T = 256, w = 16, f = 17, R = 18, O = (
                /* extra bits for each length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              ), W = (
                /* extra bits for each distance code */
                [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              ), N = (
                /* extra bits for each bit length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              ), $ = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], S = 512, I = new Array((C + 2) * 2);
              o(I);
              var x = new Array(E * 2);
              o(x);
              var P = new Array(S);
              o(P);
              var d = new Array(b - a + 1);
              o(d);
              var U = new Array(V);
              o(U);
              var F = new Array(E);
              o(F);
              function X(se, be, Pe, Ve, me) {
                this.static_tree = se, this.extra_bits = be, this.extra_base = Pe, this.elems = Ve, this.max_length = me, this.has_stree = se && se.length;
              }
              var Y, M, B;
              function D(se, be) {
                this.dyn_tree = se, this.max_code = 0, this.stat_desc = be;
              }
              function k(se) {
                return se < 256 ? P[se] : P[256 + (se >>> 7)];
              }
              function G(se, be) {
                se.pending_buf[se.pending++] = be & 255, se.pending_buf[se.pending++] = be >>> 8 & 255;
              }
              function j(se, be, Pe) {
                se.bi_valid > A - Pe ? (se.bi_buf |= be << se.bi_valid & 65535, G(se, se.bi_buf), se.bi_buf = be >> A - se.bi_valid, se.bi_valid += Pe - A) : (se.bi_buf |= be << se.bi_valid & 65535, se.bi_valid += Pe);
              }
              function ee(se, be, Pe) {
                j(
                  se,
                  Pe[be * 2],
                  Pe[be * 2 + 1]
                  /*.Len*/
                );
              }
              function Z(se, be) {
                var Pe = 0;
                do
                  Pe |= se & 1, se >>>= 1, Pe <<= 1;
                while (--be > 0);
                return Pe >>> 1;
              }
              function z(se) {
                se.bi_valid === 16 ? (G(se, se.bi_buf), se.bi_buf = 0, se.bi_valid = 0) : se.bi_valid >= 8 && (se.pending_buf[se.pending++] = se.bi_buf & 255, se.bi_buf >>= 8, se.bi_valid -= 8);
              }
              function te(se, be) {
                var Pe = be.dyn_tree, Ve = be.max_code, me = be.stat_desc.static_tree, Me = be.stat_desc.has_stree, ie = be.stat_desc.extra_bits, xe = be.stat_desc.extra_base, We = be.stat_desc.max_length, J, we, Ee, ne, _e, Se, ke = 0;
                for (ne = 0; ne <= L; ne++)
                  se.bl_count[ne] = 0;
                for (Pe[se.heap[se.heap_max] * 2 + 1] = 0, J = se.heap_max + 1; J < m; J++)
                  we = se.heap[J], ne = Pe[Pe[we * 2 + 1] * 2 + 1] + 1, ne > We && (ne = We, ke++), Pe[we * 2 + 1] = ne, !(we > Ve) && (se.bl_count[ne]++, _e = 0, we >= xe && (_e = ie[we - xe]), Se = Pe[we * 2], se.opt_len += Se * (ne + _e), Me && (se.static_len += Se * (me[we * 2 + 1] + _e)));
                if (ke !== 0) {
                  do {
                    for (ne = We - 1; se.bl_count[ne] === 0; )
                      ne--;
                    se.bl_count[ne]--, se.bl_count[ne + 1] += 2, se.bl_count[We]--, ke -= 2;
                  } while (ke > 0);
                  for (ne = We; ne !== 0; ne--)
                    for (we = se.bl_count[ne]; we !== 0; )
                      Ee = se.heap[--J], !(Ee > Ve) && (Pe[Ee * 2 + 1] !== ne && (se.opt_len += (ne - Pe[Ee * 2 + 1]) * Pe[Ee * 2], Pe[Ee * 2 + 1] = ne), we--);
                }
              }
              function re(se, be, Pe) {
                var Ve = new Array(L + 1), me = 0, Me, ie;
                for (Me = 1; Me <= L; Me++)
                  Ve[Me] = me = me + Pe[Me - 1] << 1;
                for (ie = 0; ie <= be; ie++) {
                  var xe = se[ie * 2 + 1];
                  xe !== 0 && (se[ie * 2] = Z(Ve[xe]++, xe));
                }
              }
              function le() {
                var se, be, Pe, Ve, me, Me = new Array(L + 1);
                for (Pe = 0, Ve = 0; Ve < V - 1; Ve++)
                  for (U[Ve] = Pe, se = 0; se < 1 << O[Ve]; se++)
                    d[Pe++] = Ve;
                for (d[Pe - 1] = Ve, me = 0, Ve = 0; Ve < 16; Ve++)
                  for (F[Ve] = me, se = 0; se < 1 << W[Ve]; se++)
                    P[me++] = Ve;
                for (me >>= 7; Ve < E; Ve++)
                  for (F[Ve] = me << 7, se = 0; se < 1 << W[Ve] - 7; se++)
                    P[256 + me++] = Ve;
                for (be = 0; be <= L; be++)
                  Me[be] = 0;
                for (se = 0; se <= 143; )
                  I[se * 2 + 1] = 8, se++, Me[8]++;
                for (; se <= 255; )
                  I[se * 2 + 1] = 9, se++, Me[9]++;
                for (; se <= 279; )
                  I[se * 2 + 1] = 7, se++, Me[7]++;
                for (; se <= 287; )
                  I[se * 2 + 1] = 8, se++, Me[8]++;
                for (re(I, C + 1, Me), se = 0; se < E; se++)
                  x[se * 2 + 1] = 5, x[se * 2] = Z(se, 5);
                Y = new X(I, O, y + 1, C, L), M = new X(x, W, 0, E, L), B = new X(new Array(0), N, 0, v, K);
              }
              function ae(se) {
                var be;
                for (be = 0; be < C; be++)
                  se.dyn_ltree[be * 2] = 0;
                for (be = 0; be < E; be++)
                  se.dyn_dtree[be * 2] = 0;
                for (be = 0; be < v; be++)
                  se.bl_tree[be * 2] = 0;
                se.dyn_ltree[T * 2] = 1, se.opt_len = se.static_len = 0, se.last_lit = se.matches = 0;
              }
              function oe(se) {
                se.bi_valid > 8 ? G(se, se.bi_buf) : se.bi_valid > 0 && (se.pending_buf[se.pending++] = se.bi_buf), se.bi_buf = 0, se.bi_valid = 0;
              }
              function de(se, be, Pe, Ve) {
                oe(se), Ve && (G(se, Pe), G(se, ~Pe)), t.arraySet(se.pending_buf, se.window, be, Pe, se.pending), se.pending += Pe;
              }
              function ve(se, be, Pe, Ve) {
                var me = be * 2, Me = Pe * 2;
                return se[me] < se[Me] || se[me] === se[Me] && Ve[be] <= Ve[Pe];
              }
              function ce(se, be, Pe) {
                for (var Ve = se.heap[Pe], me = Pe << 1; me <= se.heap_len && (me < se.heap_len && ve(be, se.heap[me + 1], se.heap[me], se.depth) && me++, !ve(be, Ve, se.heap[me], se.depth)); )
                  se.heap[Pe] = se.heap[me], Pe = me, me <<= 1;
                se.heap[Pe] = Ve;
              }
              function he(se, be, Pe) {
                var Ve, me, Me = 0, ie, xe;
                if (se.last_lit !== 0)
                  do
                    Ve = se.pending_buf[se.d_buf + Me * 2] << 8 | se.pending_buf[se.d_buf + Me * 2 + 1], me = se.pending_buf[se.l_buf + Me], Me++, Ve === 0 ? ee(se, me, be) : (ie = d[me], ee(se, ie + y + 1, be), xe = O[ie], xe !== 0 && (me -= U[ie], j(se, me, xe)), Ve--, ie = k(Ve), ee(se, ie, Pe), xe = W[ie], xe !== 0 && (Ve -= F[ie], j(se, Ve, xe)));
                  while (Me < se.last_lit);
                ee(se, T, be);
              }
              function ye(se, be) {
                var Pe = be.dyn_tree, Ve = be.stat_desc.static_tree, me = be.stat_desc.has_stree, Me = be.stat_desc.elems, ie, xe, We = -1, J;
                for (se.heap_len = 0, se.heap_max = m, ie = 0; ie < Me; ie++)
                  Pe[ie * 2] !== 0 ? (se.heap[++se.heap_len] = We = ie, se.depth[ie] = 0) : Pe[ie * 2 + 1] = 0;
                for (; se.heap_len < 2; )
                  J = se.heap[++se.heap_len] = We < 2 ? ++We : 0, Pe[J * 2] = 1, se.depth[J] = 0, se.opt_len--, me && (se.static_len -= Ve[J * 2 + 1]);
                for (be.max_code = We, ie = se.heap_len >> 1; ie >= 1; ie--)
                  ce(se, Pe, ie);
                J = Me;
                do
                  ie = se.heap[
                    1
                    /*SMALLEST*/
                  ], se.heap[
                    1
                    /*SMALLEST*/
                  ] = se.heap[se.heap_len--], ce(
                    se,
                    Pe,
                    1
                    /*SMALLEST*/
                  ), xe = se.heap[
                    1
                    /*SMALLEST*/
                  ], se.heap[--se.heap_max] = ie, se.heap[--se.heap_max] = xe, Pe[J * 2] = Pe[ie * 2] + Pe[xe * 2], se.depth[J] = (se.depth[ie] >= se.depth[xe] ? se.depth[ie] : se.depth[xe]) + 1, Pe[ie * 2 + 1] = Pe[xe * 2 + 1] = J, se.heap[
                    1
                    /*SMALLEST*/
                  ] = J++, ce(
                    se,
                    Pe,
                    1
                    /*SMALLEST*/
                  );
                while (se.heap_len >= 2);
                se.heap[--se.heap_max] = se.heap[
                  1
                  /*SMALLEST*/
                ], te(se, be), re(Pe, We, se.bl_count);
              }
              function fe(se, be, Pe) {
                var Ve, me = -1, Me, ie = be[0 * 2 + 1], xe = 0, We = 7, J = 4;
                for (ie === 0 && (We = 138, J = 3), be[(Pe + 1) * 2 + 1] = 65535, Ve = 0; Ve <= Pe; Ve++)
                  Me = ie, ie = be[(Ve + 1) * 2 + 1], !(++xe < We && Me === ie) && (xe < J ? se.bl_tree[Me * 2] += xe : Me !== 0 ? (Me !== me && se.bl_tree[Me * 2]++, se.bl_tree[w * 2]++) : xe <= 10 ? se.bl_tree[f * 2]++ : se.bl_tree[R * 2]++, xe = 0, me = Me, ie === 0 ? (We = 138, J = 3) : Me === ie ? (We = 6, J = 3) : (We = 7, J = 4));
              }
              function Ce(se, be, Pe) {
                var Ve, me = -1, Me, ie = be[0 * 2 + 1], xe = 0, We = 7, J = 4;
                for (ie === 0 && (We = 138, J = 3), Ve = 0; Ve <= Pe; Ve++)
                  if (Me = ie, ie = be[(Ve + 1) * 2 + 1], !(++xe < We && Me === ie)) {
                    if (xe < J)
                      do
                        ee(se, Me, se.bl_tree);
                      while (--xe !== 0);
                    else
                      Me !== 0 ? (Me !== me && (ee(se, Me, se.bl_tree), xe--), ee(se, w, se.bl_tree), j(se, xe - 3, 2)) : xe <= 10 ? (ee(se, f, se.bl_tree), j(se, xe - 3, 3)) : (ee(se, R, se.bl_tree), j(se, xe - 11, 7));
                    xe = 0, me = Me, ie === 0 ? (We = 138, J = 3) : Me === ie ? (We = 6, J = 3) : (We = 7, J = 4);
                  }
              }
              function Ae(se) {
                var be;
                for (fe(se, se.dyn_ltree, se.l_desc.max_code), fe(se, se.dyn_dtree, se.d_desc.max_code), ye(se, se.bl_desc), be = v - 1; be >= 3 && se.bl_tree[$[be] * 2 + 1] === 0; be--)
                  ;
                return se.opt_len += 3 * (be + 1) + 5 + 5 + 4, be;
              }
              function Te(se, be, Pe, Ve) {
                var me;
                for (j(se, be - 257, 5), j(se, Pe - 1, 5), j(se, Ve - 4, 4), me = 0; me < Ve; me++)
                  j(se, se.bl_tree[$[me] * 2 + 1], 3);
                Ce(se, se.dyn_ltree, be - 1), Ce(se, se.dyn_dtree, Pe - 1);
              }
              function Re(se) {
                var be = 4093624447, Pe;
                for (Pe = 0; Pe <= 31; Pe++, be >>>= 1)
                  if (be & 1 && se.dyn_ltree[Pe * 2] !== 0)
                    return e;
                if (se.dyn_ltree[18] !== 0 || se.dyn_ltree[20] !== 0 || se.dyn_ltree[26] !== 0)
                  return _;
                for (Pe = 32; Pe < y; Pe++)
                  if (se.dyn_ltree[Pe * 2] !== 0)
                    return _;
                return e;
              }
              var De = !1;
              function Oe(se) {
                De || (le(), De = !0), se.l_desc = new D(se.dyn_ltree, Y), se.d_desc = new D(se.dyn_dtree, M), se.bl_desc = new D(se.bl_tree, B), se.bi_buf = 0, se.bi_valid = 0, ae(se);
              }
              function Ne(se, be, Pe, Ve) {
                j(se, (c << 1) + (Ve ? 1 : 0), 3), de(se, be, Pe, !0);
              }
              function Fe(se) {
                j(se, l << 1, 3), ee(se, T, I), z(se);
              }
              function $e(se, be, Pe, Ve) {
                var me, Me, ie = 0;
                se.level > 0 ? (se.strm.data_type === r && (se.strm.data_type = Re(se)), ye(se, se.l_desc), ye(se, se.d_desc), ie = Ae(se), me = se.opt_len + 3 + 7 >>> 3, Me = se.static_len + 3 + 7 >>> 3, Me <= me && (me = Me)) : me = Me = Pe + 5, Pe + 4 <= me && be !== -1 ? Ne(se, be, Pe, Ve) : se.strategy === n || Me === me ? (j(se, (l << 1) + (Ve ? 1 : 0), 3), he(se, I, x)) : (j(se, (g << 1) + (Ve ? 1 : 0), 3), Te(se, se.l_desc.max_code + 1, se.d_desc.max_code + 1, ie + 1), he(se, se.dyn_ltree, se.dyn_dtree)), ae(se), Ve && oe(se);
              }
              function ze(se, be, Pe) {
                return se.pending_buf[se.d_buf + se.last_lit * 2] = be >>> 8 & 255, se.pending_buf[se.d_buf + se.last_lit * 2 + 1] = be & 255, se.pending_buf[se.l_buf + se.last_lit] = Pe & 255, se.last_lit++, be === 0 ? se.dyn_ltree[Pe * 2]++ : (se.matches++, be--, se.dyn_ltree[(d[Pe] + y + 1) * 2]++, se.dyn_dtree[k(be) * 2]++), se.last_lit === se.lit_bufsize - 1;
              }
              u._tr_init = Oe, u._tr_stored_block = Ne, u._tr_flush_block = $e, u._tr_tally = ze, u._tr_align = Fe;
            }
          ),
          /***/
          "../node_modules/pako/lib/zlib/zstream.js": (
            /*!************************************************!*\
              !*** ../node_modules/pako/lib/zlib/zstream.js ***!
              \************************************************/
            /***/
            (s) => {
              function u() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
              }
              s.exports = u;
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/parse.js": (
            /*!******************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/parse.js ***!
              \******************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                default: () => e
                /* harmony export */
              });
              var t = i(
                /*! ./validate.js */
                "../node_modules/uuid/dist/esm-browser/validate.js"
              );
              function n(_) {
                if (!(0, t.default)(_))
                  throw TypeError("Invalid UUID");
                var r, o = new Uint8Array(16);
                return o[0] = (r = parseInt(_.slice(0, 8), 16)) >>> 24, o[1] = r >>> 16 & 255, o[2] = r >>> 8 & 255, o[3] = r & 255, o[4] = (r = parseInt(_.slice(9, 13), 16)) >>> 8, o[5] = r & 255, o[6] = (r = parseInt(_.slice(14, 18), 16)) >>> 8, o[7] = r & 255, o[8] = (r = parseInt(_.slice(19, 23), 16)) >>> 8, o[9] = r & 255, o[10] = (r = parseInt(_.slice(24, 36), 16)) / 1099511627776 & 255, o[11] = r / 4294967296 & 255, o[12] = r >>> 24 & 255, o[13] = r >>> 16 & 255, o[14] = r >>> 8 & 255, o[15] = r & 255, o;
              }
              const e = n;
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/regex.js": (
            /*!******************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/regex.js ***!
              \******************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                default: () => t
                /* harmony export */
              });
              const t = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/sha1.js": (
            /*!*****************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/sha1.js ***!
              \*****************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                default: () => _
                /* harmony export */
              });
              function t(r, o, c, l) {
                switch (r) {
                  case 0:
                    return o & c ^ ~o & l;
                  case 1:
                    return o ^ c ^ l;
                  case 2:
                    return o & c ^ o & l ^ c & l;
                  case 3:
                    return o ^ c ^ l;
                }
              }
              function n(r, o) {
                return r << o | r >>> 32 - o;
              }
              function e(r) {
                var o = [1518500249, 1859775393, 2400959708, 3395469782], c = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
                if (typeof r == "string") {
                  var l = unescape(encodeURIComponent(r));
                  r = [];
                  for (var g = 0; g < l.length; ++g)
                    r.push(l.charCodeAt(g));
                } else
                  Array.isArray(r) || (r = Array.prototype.slice.call(r));
                r.push(128);
                for (var a = r.length / 4 + 2, b = Math.ceil(a / 16), V = new Array(b), y = 0; y < b; ++y) {
                  for (var C = new Uint32Array(16), E = 0; E < 16; ++E)
                    C[E] = r[y * 64 + E * 4] << 24 | r[y * 64 + E * 4 + 1] << 16 | r[y * 64 + E * 4 + 2] << 8 | r[y * 64 + E * 4 + 3];
                  V[y] = C;
                }
                V[b - 1][14] = (r.length - 1) * 8 / Math.pow(2, 32), V[b - 1][14] = Math.floor(V[b - 1][14]), V[b - 1][15] = (r.length - 1) * 8 & 4294967295;
                for (var v = 0; v < b; ++v) {
                  for (var m = new Uint32Array(80), L = 0; L < 16; ++L)
                    m[L] = V[v][L];
                  for (var A = 16; A < 80; ++A)
                    m[A] = n(m[A - 3] ^ m[A - 8] ^ m[A - 14] ^ m[A - 16], 1);
                  for (var K = c[0], T = c[1], w = c[2], f = c[3], R = c[4], O = 0; O < 80; ++O) {
                    var W = Math.floor(O / 20), N = n(K, 5) + t(W, T, w, f) + R + o[W] + m[O] >>> 0;
                    R = f, f = w, w = n(T, 30) >>> 0, T = K, K = N;
                  }
                  c[0] = c[0] + K >>> 0, c[1] = c[1] + T >>> 0, c[2] = c[2] + w >>> 0, c[3] = c[3] + f >>> 0, c[4] = c[4] + R >>> 0;
                }
                return [c[0] >> 24 & 255, c[0] >> 16 & 255, c[0] >> 8 & 255, c[0] & 255, c[1] >> 24 & 255, c[1] >> 16 & 255, c[1] >> 8 & 255, c[1] & 255, c[2] >> 24 & 255, c[2] >> 16 & 255, c[2] >> 8 & 255, c[2] & 255, c[3] >> 24 & 255, c[3] >> 16 & 255, c[3] >> 8 & 255, c[3] & 255, c[4] >> 24 & 255, c[4] >> 16 & 255, c[4] >> 8 & 255, c[4] & 255];
              }
              const _ = e;
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/stringify.js": (
            /*!**********************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/stringify.js ***!
              \**********************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                default: () => r
                /* harmony export */
              });
              for (var t = i(
                /*! ./validate.js */
                "../node_modules/uuid/dist/esm-browser/validate.js"
              ), n = [], e = 0; e < 256; ++e)
                n.push((e + 256).toString(16).substr(1));
              function _(o) {
                var c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, l = (n[o[c + 0]] + n[o[c + 1]] + n[o[c + 2]] + n[o[c + 3]] + "-" + n[o[c + 4]] + n[o[c + 5]] + "-" + n[o[c + 6]] + n[o[c + 7]] + "-" + n[o[c + 8]] + n[o[c + 9]] + "-" + n[o[c + 10]] + n[o[c + 11]] + n[o[c + 12]] + n[o[c + 13]] + n[o[c + 14]] + n[o[c + 15]]).toLowerCase();
                if (!(0, t.default)(l))
                  throw TypeError("Stringified UUID is invalid");
                return l;
              }
              const r = _;
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/v35.js": (
            /*!****************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/v35.js ***!
              \****************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                DNS: () => (
                  /* binding */
                  _
                ),
                /* harmony export */
                URL: () => (
                  /* binding */
                  r
                ),
                /* harmony export */
                default: () => (
                  /* export default binding */
                  o
                )
                /* harmony export */
              });
              var t = i(
                /*! ./stringify.js */
                "../node_modules/uuid/dist/esm-browser/stringify.js"
              ), n = i(
                /*! ./parse.js */
                "../node_modules/uuid/dist/esm-browser/parse.js"
              );
              function e(c) {
                c = unescape(encodeURIComponent(c));
                for (var l = [], g = 0; g < c.length; ++g)
                  l.push(c.charCodeAt(g));
                return l;
              }
              var _ = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", r = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
              function o(c, l, g) {
                function a(b, V, y, C) {
                  if (typeof b == "string" && (b = e(b)), typeof V == "string" && (V = (0, n.default)(V)), V.length !== 16)
                    throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
                  var E = new Uint8Array(16 + b.length);
                  if (E.set(V), E.set(b, V.length), E = g(E), E[6] = E[6] & 15 | l, E[8] = E[8] & 63 | 128, y) {
                    C = C || 0;
                    for (var v = 0; v < 16; ++v)
                      y[C + v] = E[v];
                    return y;
                  }
                  return (0, t.default)(E);
                }
                try {
                  a.name = c;
                } catch {
                }
                return a.DNS = _, a.URL = r, a;
              }
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/v5.js": (
            /*!***************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/v5.js ***!
              \***************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                default: () => _
                /* harmony export */
              });
              var t = i(
                /*! ./v35.js */
                "../node_modules/uuid/dist/esm-browser/v35.js"
              ), n = i(
                /*! ./sha1.js */
                "../node_modules/uuid/dist/esm-browser/sha1.js"
              ), e = (0, t.default)("v5", 80, n.default);
              const _ = e;
            }
          ),
          /***/
          "../node_modules/uuid/dist/esm-browser/validate.js": (
            /*!*********************************************************!*\
              !*** ../node_modules/uuid/dist/esm-browser/validate.js ***!
              \*********************************************************/
            /***/
            (s, u, i) => {
              i.r(u), i.d(u, {
                /* harmony export */
                default: () => e
                /* harmony export */
              });
              var t = i(
                /*! ./regex.js */
                "../node_modules/uuid/dist/esm-browser/regex.js"
              );
              function n(_) {
                return typeof _ == "string" && t.default.test(_);
              }
              const e = n;
            }
          )
          /******/
        }, __webpack_module_cache__ = {};
        function __webpack_require__(s) {
          var u = __webpack_module_cache__[s];
          if (u !== void 0)
            return u.exports;
          var i = __webpack_module_cache__[s] = {
            /******/
            // no module.id needed
            /******/
            // no module.loaded needed
            /******/
            exports: {}
            /******/
          };
          return __webpack_modules__[s](i, i.exports, __webpack_require__), i.exports;
        }
        __webpack_require__.n = (s) => {
          var u = s && s.__esModule ? (
            /******/
            () => s.default
          ) : (
            /******/
            () => s
          );
          return __webpack_require__.d(u, { a: u }), u;
        }, __webpack_require__.d = (s, u) => {
          for (var i in u)
            __webpack_require__.o(u, i) && !__webpack_require__.o(s, i) && Object.defineProperty(s, i, { enumerable: !0, get: u[i] });
        }, __webpack_require__.o = (s, u) => Object.prototype.hasOwnProperty.call(s, u), __webpack_require__.r = (s) => {
          typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(s, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(s, "__esModule", { value: !0 });
        };
        var __webpack_exports__ = {};
        return (() => {
          /*!**********************!*\
            !*** ./esm/index.js ***!
            \**********************/
          __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            /* harmony export */
            ABR: () => (
              /* reexport safe */
              v.ABR
            ),
            /* harmony export */
            ACFT: () => (
              /* reexport safe */
              v.ACFT
            ),
            /* harmony export */
            ASEP: () => (
              /* reexport safe */
              n.ASEP
            ),
            /* harmony export */
            Alignment: () => (
              /* reexport safe */
              Je.Alignment
            ),
            /* harmony export */
            AltTypes: () => (
              /* reexport safe */
              Tt.AltTypes
            ),
            /* harmony export */
            AltUnits: () => (
              /* reexport safe */
              H.AltUnits
            ),
            /* harmony export */
            Annotation: () => (
              /* reexport safe */
              Ne.Annotation
            ),
            /* harmony export */
            AnnotationClickEventArgs: () => (
              /* reexport safe */
              xt.AnnotationClickEventArgs
            ),
            /* harmony export */
            ArrivedEventArgs: () => (
              /* reexport safe */
              xt.ArrivedEventArgs
            ),
            /* harmony export */
            AstroCalc: () => (
              /* reexport safe */
              Z.AstroCalc
            ),
            /* harmony export */
            AstroRaDec: () => (
              /* reexport safe */
              Z.AstroRaDec
            ),
            /* harmony export */
            AudioOverlay: () => (
              /* reexport safe */
              lt.AudioOverlay
            ),
            /* harmony export */
            AudioType: () => (
              /* reexport safe */
              lt.AudioType
            ),
            /* harmony export */
            BandPass: () => (
              /* reexport safe */
              je.BandPass
            ),
            /* harmony export */
            BinaryReader: () => (
              /* reexport safe */
              ce.BinaryReader
            ),
            /* harmony export */
            Bitmap: () => (
              /* reexport safe */
              de.Bitmap
            ),
            /* harmony export */
            BitmapOverlay: () => (
              /* reexport safe */
              lt.BitmapOverlay
            ),
            /* harmony export */
            BlendState: () => (
              /* reexport safe */
              D.BlendState
            ),
            /* harmony export */
            BodyAngles: () => (
              /* reexport safe */
              tt.BodyAngles
            ),
            /* harmony export */
            C3D: () => (
              /* reexport safe */
              t.C3D
            ),
            /* harmony export */
            CAAEarth: () => (
              /* reexport safe */
              e.CAAEarth
            ),
            /* harmony export */
            CAAEclipticalElementDetails: () => (
              /* reexport safe */
              L.CAAEclipticalElementDetails
            ),
            /* harmony export */
            CAAEclipticalElements: () => (
              /* reexport safe */
              L.CAAEclipticalElements
            ),
            /* harmony export */
            CAAFK5: () => (
              /* reexport safe */
              _.CAAFK5
            ),
            /* harmony export */
            CAAGlobe: () => (
              /* reexport safe */
              f.CAAGlobe
            ),
            /* harmony export */
            CAAJupiter: () => (
              /* reexport safe */
              a.CAAJupiter
            ),
            /* harmony export */
            CAAKepler: () => (
              /* reexport safe */
              E.CAAKepler
            ),
            /* harmony export */
            CAAMars: () => (
              /* reexport safe */
              g.CAAMars
            ),
            /* harmony export */
            CAAMercury: () => (
              /* reexport safe */
              c.CAAMercury
            ),
            /* harmony export */
            CAAMoon: () => (
              /* reexport safe */
              W.CAAMoon
            ),
            /* harmony export */
            CAAMoonNodes: () => (
              /* reexport safe */
              $.CAAMoonNodes
            ),
            /* harmony export */
            CAAMoonPerigeeApogee: () => (
              /* reexport safe */
              S.CAAMoonPerigeeApogee
            ),
            /* harmony export */
            CAAMoonPhases: () => (
              /* reexport safe */
              I.CAAMoonPhases
            ),
            /* harmony export */
            CAANeptune: () => (
              /* reexport safe */
              y.CAANeptune
            ),
            /* harmony export */
            CAANutation: () => (
              /* reexport safe */
              r.CAANutation
            ),
            /* harmony export */
            CAAParallax: () => (
              /* reexport safe */
              x.CAAParallax
            ),
            /* harmony export */
            CAAPhysicalJupiter: () => (
              /* reexport safe */
              d.CAAPhysicalJupiter
            ),
            /* harmony export */
            CAAPhysicalJupiterDetails: () => (
              /* reexport safe */
              d.CAAPhysicalJupiterDetails
            ),
            /* harmony export */
            CAAPhysicalMars: () => (
              /* reexport safe */
              U.CAAPhysicalMars
            ),
            /* harmony export */
            CAAPhysicalMarsDetails: () => (
              /* reexport safe */
              U.CAAPhysicalMarsDetails
            ),
            /* harmony export */
            CAAPhysicalSun: () => (
              /* reexport safe */
              F.CAAPhysicalSun
            ),
            /* harmony export */
            CAAPhysicalSunDetails: () => (
              /* reexport safe */
              F.CAAPhysicalSunDetails
            ),
            /* harmony export */
            CAAPluto: () => (
              /* reexport safe */
              C.CAAPluto
            ),
            /* harmony export */
            CAAPrecession: () => (
              /* reexport safe */
              X.CAAPrecession
            ),
            /* harmony export */
            CAARiseTransitSet: () => (
              /* reexport safe */
              Y.CAARiseTransitSet
            ),
            /* harmony export */
            CAARiseTransitSetDetails: () => (
              /* reexport safe */
              Y.CAARiseTransitSetDetails
            ),
            /* harmony export */
            CAASaturn: () => (
              /* reexport safe */
              b.CAASaturn
            ),
            /* harmony export */
            CAASaturnRingDetails: () => (
              /* reexport safe */
              M.CAASaturnRingDetails
            ),
            /* harmony export */
            CAASaturnRings: () => (
              /* reexport safe */
              M.CAASaturnRings
            ),
            /* harmony export */
            CAASidereal: () => (
              /* reexport safe */
              P.CAASidereal
            ),
            /* harmony export */
            CAAStellarMagnitudes: () => (
              /* reexport safe */
              B.CAAStellarMagnitudes
            ),
            /* harmony export */
            CAASun: () => (
              /* reexport safe */
              o.CAASun
            ),
            /* harmony export */
            CAATopocentricEclipticDetails: () => (
              /* reexport safe */
              x.CAATopocentricEclipticDetails
            ),
            /* harmony export */
            CAAUranus: () => (
              /* reexport safe */
              V.CAAUranus
            ),
            /* harmony export */
            CAAVenus: () => (
              /* reexport safe */
              l.CAAVenus
            ),
            /* harmony export */
            COR: () => (
              /* reexport safe */
              t.COR
            ),
            /* harmony export */
            CT: () => (
              /* reexport safe */
              t.CT
            ),
            /* harmony export */
            CalD: () => (
              /* reexport safe */
              i.CalD
            ),
            /* harmony export */
            CameraParameters: () => (
              /* reexport safe */
              Fe.CameraParameters
            ),
            /* harmony export */
            CatalogSpreadSheetLayer: () => (
              /* reexport safe */
              Pt.CatalogSpreadSheetLayer
            ),
            /* harmony export */
            Circle: () => (
              /* reexport safe */
              Ne.Circle
            ),
            /* harmony export */
            Classification: () => (
              /* reexport safe */
              et.Classification
            ),
            /* harmony export */
            CollectionLoadedEventArgs: () => (
              /* reexport safe */
              xt.CollectionLoadedEventArgs
            ),
            /* harmony export */
            Color: () => (
              /* reexport safe */
              k.Color
            ),
            /* harmony export */
            ColorMapContainer: () => (
              /* reexport safe */
              Ve.ColorMapContainer
            ),
            /* harmony export */
            ColorMaps: () => (
              /* reexport safe */
              Tt.ColorMaps
            ),
            /* harmony export */
            ColorPicker: () => (
              /* reexport safe */
              ut.ColorPicker
            ),
            /* harmony export */
            Colors: () => (
              /* reexport safe */
              k.Colors
            ),
            /* harmony export */
            ConstellationFilter: () => (
              /* reexport safe */
              $e.ConstellationFilter
            ),
            /* harmony export */
            Constellations: () => (
              /* reexport safe */
              Xe.Constellations
            ),
            /* harmony export */
            ContextMenuStrip: () => (
              /* reexport safe */
              ve.ContextMenuStrip
            ),
            /* harmony export */
            ConvexHull: () => (
              /* reexport safe */
              j.ConvexHull
            ),
            /* harmony export */
            Coordinates: () => (
              /* reexport safe */
              fe.Coordinates
            ),
            /* harmony export */
            CoordinatesTypes: () => (
              /* reexport safe */
              Tt.CoordinatesTypes
            ),
            /* harmony export */
            CullMode: () => (
              /* reexport safe */
              ae.CullMode
            ),
            /* harmony export */
            Cursor: () => (
              /* reexport safe */
              ee.Cursor
            ),
            /* harmony export */
            Cursors: () => (
              /* reexport safe */
              ee.Cursors
            ),
            /* harmony export */
            DAY_OF_WEEK: () => (
              /* reexport safe */
              i.DAY_OF_WEEK
            ),
            /* harmony export */
            DT: () => (
              /* reexport safe */
              i.DT
            ),
            /* harmony export */
            DYT: () => (
              /* reexport safe */
              m.DYT
            ),
            /* harmony export */
            DataItem: () => (
              /* reexport safe */
              ae.DataItem
            ),
            /* harmony export */
            DataTypes: () => (
              /* reexport safe */
              ie.DataTypes
            ),
            /* harmony export */
            DataVizWizard: () => (
              /* reexport safe */
              wt.DataVizWizard
            ),
            /* harmony export */
            Dates: () => (
              /* reexport safe */
              ae.Dates
            ),
            /* harmony export */
            Dialog: () => (
              /* reexport safe */
              Lt.Dialog
            ),
            /* harmony export */
            DialogResult: () => (
              /* reexport safe */
              ee.DialogResult
            ),
            /* harmony export */
            DomainValue: () => (
              /* reexport safe */
              H.DomainValue
            ),
            /* harmony export */
            DoubleUtilities: () => (
              /* reexport safe */
              j.DoubleUtilities
            ),
            /* harmony export */
            ELL: () => (
              /* reexport safe */
              K.ELL
            ),
            /* harmony export */
            EO: () => (
              /* reexport safe */
              K.EO
            ),
            /* harmony export */
            EOD: () => (
              /* reexport safe */
              K.EOD
            ),
            /* harmony export */
            EOE: () => (
              /* reexport safe */
              K.EOE
            ),
            /* harmony export */
            EOT: () => (
              /* reexport safe */
              T.EOT
            ),
            /* harmony export */
            EPD: () => (
              /* reexport safe */
              K.EPD
            ),
            /* harmony export */
            EPO: () => (
              /* reexport safe */
              A.EPO
            ),
            /* harmony export */
            EllipseRenderer: () => (
              /* reexport safe */
              Le.EllipseRenderer
            ),
            /* harmony export */
            EllipseShader: () => (
              /* reexport safe */
              le.EllipseShader
            ),
            /* harmony export */
            EquirectangularTile: () => (
              /* reexport safe */
              we.EquirectangularTile
            ),
            /* harmony export */
            FadeType: () => (
              /* reexport safe */
              H.FadeType
            ),
            /* harmony export */
            FastMath: () => (
              /* reexport safe */
              Ce.FastMath
            ),
            /* harmony export */
            FileCabinet: () => (
              /* reexport safe */
              rt.FileCabinet
            ),
            /* harmony export */
            FileEntry: () => (
              /* reexport safe */
              rt.FileEntry
            ),
            /* harmony export */
            FitsImage: () => (
              /* reexport safe */
              Me.FitsImage
            ),
            /* harmony export */
            FitsImageJs: () => (
              /* reexport safe */
              ie.FitsImageJs
            ),
            /* harmony export */
            FitsImageTile: () => (
              /* reexport safe */
              xe.FitsImageTile
            ),
            /* harmony export */
            FitsProperties: () => (
              /* reexport safe */
              ze.FitsProperties
            ),
            /* harmony export */
            FitsShader: () => (
              /* reexport safe */
              le.FitsShader
            ),
            /* harmony export */
            FlipbookOverlay: () => (
              /* reexport safe */
              lt.FlipbookOverlay
            ),
            /* harmony export */
            Folder: () => (
              /* reexport safe */
              ft.Folder
            ),
            /* harmony export */
            FolderBrowser: () => (
              /* reexport safe */
              yt.FolderBrowser
            ),
            /* harmony export */
            FolderDownloadAction: () => (
              /* reexport safe */
              mt.FolderDownloadAction
            ),
            /* harmony export */
            FolderGroup: () => (
              /* reexport safe */
              ft.FolderGroup
            ),
            /* harmony export */
            FolderRefreshType: () => (
              /* reexport safe */
              ft.FolderRefreshType
            ),
            /* harmony export */
            FolderType: () => (
              /* reexport safe */
              ft.FolderType
            ),
            /* harmony export */
            FolderUp: () => (
              /* reexport safe */
              _t.FolderUp
            ),
            /* harmony export */
            Formatting: () => (
              /* reexport safe */
              ye.Formatting
            ),
            /* harmony export */
            FrameTarget: () => (
              /* reexport safe */
              Et.FrameTarget
            ),
            /* harmony export */
            FrameWizard: () => (
              /* reexport safe */
              wt.FrameWizard
            ),
            /* harmony export */
            Fxyf: () => (
              /* reexport safe */
              De.Fxyf
            ),
            /* harmony export */
            GFX: () => (
              /* binding */
              Rt
            ),
            /* harmony export */
            GM: () => (
              /* reexport safe */
              w.GM
            ),
            /* harmony export */
            GMD: () => (
              /* reexport safe */
              w.GMD
            ),
            /* harmony export */
            GMDS: () => (
              /* reexport safe */
              w.GMDS
            ),
            /* harmony export */
            Galaxy: () => (
              /* reexport safe */
              se.Galaxy
            ),
            /* harmony export */
            GlyphCache: () => (
              /* reexport safe */
              Je.GlyphCache
            ),
            /* harmony export */
            GlyphItem: () => (
              /* reexport safe */
              Je.GlyphItem
            ),
            /* harmony export */
            GreatCircleDialog: () => (
              /* reexport safe */
              wt.GreatCircleDialog
            ),
            /* harmony export */
            GreatCirlceRouteLayer: () => (
              /* reexport safe */
              q.GreatCirlceRouteLayer
            ),
            /* harmony export */
            GridLayer: () => (
              /* reexport safe */
              ue.GridLayer
            ),
            /* harmony export */
            Grids: () => (
              /* reexport safe */
              at.Grids
            ),
            /* harmony export */
            GroundOverlayLayer: () => (
              /* reexport safe */
              Et.GroundOverlayLayer
            ),
            /* harmony export */
            Group: () => (
              /* reexport safe */
              ge.Group
            ),
            /* harmony export */
            Guid: () => (
              /* reexport safe */
              ee.Guid
            ),
            /* harmony export */
            HealpixTables: () => (
              /* reexport safe */
              Ae.HealpixTables
            ),
            /* harmony export */
            HealpixTile: () => (
              /* reexport safe */
              Ee.HealpixTile
            ),
            /* harmony export */
            HealpixUtils: () => (
              /* reexport safe */
              Te.HealpixUtils
            ),
            /* harmony export */
            HipsProperties: () => (
              /* reexport safe */
              At.HipsProperties
            ),
            /* harmony export */
            Histogram: () => (
              /* reexport safe */
              vt.Histogram
            ),
            /* harmony export */
            HistogramEqualization: () => (
              /* reexport safe */
              ie.HistogramEqualization
            ),
            /* harmony export */
            Hploc: () => (
              /* reexport safe */
              Re.Hploc
            ),
            /* harmony export */
            IFR: () => (
              /* reexport safe */
              R.IFR
            ),
            /* harmony export */
            INTP: () => (
              /* reexport safe */
              O.INTP
            ),
            /* harmony export */
            IPlace: () => (
              /* reexport safe */
              Oe.IPlace
            ),
            /* harmony export */
            ISSLayer: () => (
              /* reexport safe */
              Dt.ISSLayer
            ),
            /* harmony export */
            ISettings: () => (
              /* reexport safe */
              Oe.ISettings
            ),
            /* harmony export */
            IThumbnail: () => (
              /* reexport safe */
              Oe.IThumbnail
            ),
            /* harmony export */
            IUIServicesCallbacks: () => (
              /* reexport safe */
              Oe.IUIServicesCallbacks
            ),
            /* harmony export */
            IUiController: () => (
              /* reexport safe */
              Oe.IUiController
            ),
            /* harmony export */
            IUndoStep: () => (
              /* reexport safe */
              Oe.IUndoStep
            ),
            /* harmony export */
            IViewMover: () => (
              /* reexport safe */
              Oe.IViewMover
            ),
            /* harmony export */
            ImageSetLayer: () => (
              /* reexport safe */
              pe.ImageSetLayer
            ),
            /* harmony export */
            ImageSetType: () => (
              /* reexport safe */
              je.ImageSetType
            ),
            /* harmony export */
            ImageShader: () => (
              /* reexport safe */
              le.ImageShader
            ),
            /* harmony export */
            ImageShader2: () => (
              /* reexport safe */
              le.ImageShader2
            ),
            /* harmony export */
            Imageset: () => (
              /* reexport safe */
              je.Imageset
            ),
            /* harmony export */
            InViewReturnMessage: () => (
              /* reexport safe */
              It.InViewReturnMessage
            ),
            /* harmony export */
            IndexBuffer: () => (
              /* reexport safe */
              z.IndexBuffer
            ),
            /* harmony export */
            InterpolationType: () => (
              /* reexport safe */
              Fe.InterpolationType
            ),
            /* harmony export */
            KeplerPointSpriteShader: () => (
              /* reexport safe */
              le.KeplerPointSpriteShader
            ),
            /* harmony export */
            KeplerVertex: () => (
              /* reexport safe */
              Ye.KeplerVertex
            ),
            /* harmony export */
            KeplerianElements: () => (
              /* reexport safe */
              tt.KeplerianElements
            ),
            /* harmony export */
            Keys: () => (
              /* reexport safe */
              ee.Keys
            ),
            /* harmony export */
            KmlCoordinate: () => (
              /* reexport safe */
              Pt.KmlCoordinate
            ),
            /* harmony export */
            KmlLineList: () => (
              /* reexport safe */
              Pt.KmlLineList
            ),
            /* harmony export */
            Language: () => (
              /* reexport safe */
              ee.Language
            ),
            /* harmony export */
            LatLngEdges: () => (
              /* reexport safe */
              Se.LatLngEdges
            ),
            /* harmony export */
            Layer: () => (
              /* reexport safe */
              H.Layer
            ),
            /* harmony export */
            LayerInfo: () => (
              /* reexport safe */
              pt.LayerInfo
            ),
            /* harmony export */
            LayerManager: () => (
              /* reexport safe */
              Et.LayerManager
            ),
            /* harmony export */
            LayerMap: () => (
              /* reexport safe */
              Et.LayerMap
            ),
            /* harmony export */
            LayerUI: () => (
              /* reexport safe */
              Q.LayerUI
            ),
            /* harmony export */
            LayerUIMenuItem: () => (
              /* reexport safe */
              Q.LayerUIMenuItem
            ),
            /* harmony export */
            LayerUITreeNode: () => (
              /* reexport safe */
              Q.LayerUITreeNode
            ),
            /* harmony export */
            LineList: () => (
              /* reexport safe */
              ae.LineList
            ),
            /* harmony export */
            LineShaderNormalDates: () => (
              /* reexport safe */
              le.LineShaderNormalDates
            ),
            /* harmony export */
            Linepoint: () => (
              /* reexport safe */
              Xe.Linepoint
            ),
            /* harmony export */
            Lineset: () => (
              /* reexport safe */
              Xe.Lineset
            ),
            /* harmony export */
            LocationHint: () => (
              /* reexport safe */
              j.LocationHint
            ),
            /* harmony export */
            LoopTypes: () => (
              /* reexport safe */
              lt.LoopTypes
            ),
            /* harmony export */
            MIFR: () => (
              /* reexport safe */
              N.MIFR
            ),
            /* harmony export */
            MPAC: () => (
              /* reexport safe */
              S.MPAC
            ),
            /* harmony export */
            MarkerMixes: () => (
              /* reexport safe */
              Tt.MarkerMixes
            ),
            /* harmony export */
            MarkerScales: () => (
              /* reexport safe */
              Tt.MarkerScales
            ),
            /* harmony export */
            MasterTime: () => (
              /* reexport safe */
              Mt.MasterTime
            ),
            /* harmony export */
            Material: () => (
              /* reexport safe */
              ge.Material
            ),
            /* harmony export */
            Matrix2d: () => (
              /* reexport safe */
              j.Matrix2d
            ),
            /* harmony export */
            Matrix3d: () => (
              /* reexport safe */
              j.Matrix3d
            ),
            /* harmony export */
            MercatorTile: () => (
              /* reexport safe */
              ne.MercatorTile
            ),
            /* harmony export */
            Mesh: () => (
              /* reexport safe */
              ge.Mesh
            ),
            /* harmony export */
            ModelShader: () => (
              /* reexport safe */
              le.ModelShader
            ),
            /* harmony export */
            ModelShaderTan: () => (
              /* reexport safe */
              le.ModelShaderTan
            ),
            /* harmony export */
            MoonCoefficient1: () => (
              /* reexport safe */
              W.MoonCoefficient1
            ),
            /* harmony export */
            MoonCoefficient2: () => (
              /* reexport safe */
              W.MoonCoefficient2
            ),
            /* harmony export */
            Mouse: () => (
              /* reexport safe */
              ee.Mouse
            ),
            /* harmony export */
            NUC: () => (
              /* reexport safe */
              r.NUC
            ),
            /* harmony export */
            Object3d: () => (
              /* reexport safe */
              ge.Object3d
            ),
            /* harmony export */
            Object3dLayer: () => (
              /* reexport safe */
              ge.Object3dLayer
            ),
            /* harmony export */
            Object3dLayerUI: () => (
              /* reexport safe */
              ge.Object3dLayerUI
            ),
            /* harmony export */
            ObjectNode: () => (
              /* reexport safe */
              ge.ObjectNode
            ),
            /* harmony export */
            Orbit: () => (
              /* reexport safe */
              Le.Orbit
            ),
            /* harmony export */
            OrbitLayer: () => (
              /* reexport safe */
              Ge.OrbitLayer
            ),
            /* harmony export */
            OrbitLayerUI: () => (
              /* reexport safe */
              Ge.OrbitLayerUI
            ),
            /* harmony export */
            OrbitLineList: () => (
              /* reexport safe */
              ae.OrbitLineList
            ),
            /* harmony export */
            OrbitLineShader: () => (
              /* reexport safe */
              le.OrbitLineShader
            ),
            /* harmony export */
            Overlay: () => (
              /* reexport safe */
              lt.Overlay
            ),
            /* harmony export */
            OverlayAnchor: () => (
              /* reexport safe */
              lt.OverlayAnchor
            ),
            /* harmony export */
            OverlayList: () => (
              /* reexport safe */
              St.OverlayList
            ),
            /* harmony export */
            OverlayProperties: () => (
              /* reexport safe */
              ee.OverlayProperties
            ),
            /* harmony export */
            Place: () => (
              /* reexport safe */
              et.Place
            ),
            /* harmony export */
            PlaneD: () => (
              /* reexport safe */
              j.PlaneD
            ),
            /* harmony export */
            Planets: () => (
              /* reexport safe */
              tt.Planets
            ),
            /* harmony export */
            PlotTile: () => (
              /* reexport safe */
              _e.PlotTile
            ),
            /* harmony export */
            PlotTypes: () => (
              /* reexport safe */
              Tt.PlotTypes
            ),
            /* harmony export */
            PlutoCoefficient1: () => (
              /* reexport safe */
              C.PlutoCoefficient1
            ),
            /* harmony export */
            PlutoCoefficient2: () => (
              /* reexport safe */
              C.PlutoCoefficient2
            ),
            /* harmony export */
            PointList: () => (
              /* reexport safe */
              ae.PointList
            ),
            /* harmony export */
            PointScaleTypes: () => (
              /* reexport safe */
              ae.PointScaleTypes
            ),
            /* harmony export */
            PointType: () => (
              /* reexport safe */
              Xe.PointType
            ),
            /* harmony export */
            Pointing: () => (
              /* reexport safe */
              it.Pointing
            ),
            /* harmony export */
            Poly: () => (
              /* reexport safe */
              Ne.Poly
            ),
            /* harmony export */
            PolyLine: () => (
              /* reexport safe */
              Ne.PolyLine
            ),
            /* harmony export */
            PopupColorPicker: () => (
              /* reexport safe */
              ee.PopupColorPicker
            ),
            /* harmony export */
            PopupVolume: () => (
              /* reexport safe */
              ee.PopupVolume
            ),
            /* harmony export */
            PositionColored: () => (
              /* reexport safe */
              j.PositionColored
            ),
            /* harmony export */
            PositionColoredTextured: () => (
              /* reexport safe */
              j.PositionColoredTextured
            ),
            /* harmony export */
            PositionNormalTextured: () => (
              /* reexport safe */
              j.PositionNormalTextured
            ),
            /* harmony export */
            PositionNormalTexturedTangent: () => (
              /* reexport safe */
              j.PositionNormalTexturedTangent
            ),
            /* harmony export */
            PositionNormalTexturedTangentVertexBuffer: () => (
              /* reexport safe */
              z.PositionNormalTexturedTangentVertexBuffer
            ),
            /* harmony export */
            PositionNormalTexturedVertexBuffer: () => (
              /* reexport safe */
              z.PositionNormalTexturedVertexBuffer
            ),
            /* harmony export */
            PositionNormalTexturedX2: () => (
              /* reexport safe */
              j.PositionNormalTexturedX2
            ),
            /* harmony export */
            PositionTexture: () => (
              /* reexport safe */
              j.PositionTexture
            ),
            /* harmony export */
            PositionVertexBuffer: () => (
              /* reexport safe */
              z.PositionVertexBuffer
            ),
            /* harmony export */
            Primitives: () => (
              /* reexport safe */
              Ke.Primitives
            ),
            /* harmony export */
            ProjectionType: () => (
              /* reexport safe */
              je.ProjectionType
            ),
            /* harmony export */
            PushPin: () => (
              /* reexport safe */
              Pt.PushPin
            ),
            /* harmony export */
            RAUnits: () => (
              /* reexport safe */
              Tt.RAUnits
            ),
            /* harmony export */
            Rectangle: () => (
              /* reexport safe */
              ee.Rectangle
            ),
            /* harmony export */
            ReferenceFrame: () => (
              /* reexport safe */
              Ie.ReferenceFrame
            ),
            /* harmony export */
            ReferenceFrameProps: () => (
              /* reexport safe */
              wt.ReferenceFrameProps
            ),
            /* harmony export */
            ReferenceFrameTypes: () => (
              /* reexport safe */
              Ie.ReferenceFrameTypes
            ),
            /* harmony export */
            ReferenceFrames: () => (
              /* reexport safe */
              Et.ReferenceFrames
            ),
            /* harmony export */
            RenderContext: () => (
              /* reexport safe */
              It.RenderContext
            ),
            /* harmony export */
            RenderTriangle: () => (
              /* reexport safe */
              J.RenderTriangle
            ),
            /* harmony export */
            RiseSetDetails: () => (
              /* reexport safe */
              Z.RiseSetDetails
            ),
            /* harmony export */
            ScaleLinear: () => (
              /* reexport safe */
              ie.ScaleLinear
            ),
            /* harmony export */
            ScaleLog: () => (
              /* reexport safe */
              ie.ScaleLog
            ),
            /* harmony export */
            ScaleMap: () => (
              /* reexport safe */
              ie.ScaleMap
            ),
            /* harmony export */
            ScalePow: () => (
              /* reexport safe */
              ie.ScalePow
            ),
            /* harmony export */
            ScaleSqrt: () => (
              /* reexport safe */
              ie.ScaleSqrt
            ),
            /* harmony export */
            ScaleTypes: () => (
              /* reexport safe */
              ze.ScaleTypes
            ),
            /* harmony export */
            ScriptInterface: () => (
              /* reexport safe */
              xt.ScriptInterface
            ),
            /* harmony export */
            SelectLink: () => (
              /* reexport safe */
              ee.SelectLink
            ),
            /* harmony export */
            Selection: () => (
              /* reexport safe */
              dt.Selection
            ),
            /* harmony export */
            SelectionAnchor: () => (
              /* reexport safe */
              dt.SelectionAnchor
            ),
            /* harmony export */
            SettingParameter: () => (
              /* reexport safe */
              He.SettingParameter
            ),
            /* harmony export */
            Settings: () => (
              /* reexport safe */
              He.Settings
            ),
            /* harmony export */
            ShapeOverlay: () => (
              /* reexport safe */
              lt.ShapeOverlay
            ),
            /* harmony export */
            ShapeSpriteShader: () => (
              /* reexport safe */
              le.ShapeSpriteShader
            ),
            /* harmony export */
            ShapeType: () => (
              /* reexport safe */
              lt.ShapeType
            ),
            /* harmony export */
            ShortIndexBuffer: () => (
              /* reexport safe */
              z.ShortIndexBuffer
            ),
            /* harmony export */
            SimpleInput: () => (
              /* reexport safe */
              he.SimpleInput
            ),
            /* harmony export */
            SimpleLineList: () => (
              /* reexport safe */
              ae.SimpleLineList
            ),
            /* harmony export */
            SimpleLineShader: () => (
              /* reexport safe */
              le.SimpleLineShader
            ),
            /* harmony export */
            SimpleLineShader2D: () => (
              /* reexport safe */
              le.SimpleLineShader2D
            ),
            /* harmony export */
            SkyImageTile: () => (
              /* reexport safe */
              ke.SkyImageTile
            ),
            /* harmony export */
            SkyOverlays: () => (
              /* reexport safe */
              Et.SkyOverlays
            ),
            /* harmony export */
            SlideChangedEventArgs: () => (
              /* reexport safe */
              xt.SlideChangedEventArgs
            ),
            /* harmony export */
            SolarSystemObjects: () => (
              /* reexport safe */
              Fe.SolarSystemObjects
            ),
            /* harmony export */
            SoundEditor: () => (
              /* reexport safe */
              St.SoundEditor
            ),
            /* harmony export */
            SpaceTimeController: () => (
              /* reexport safe */
              Ze.SpaceTimeController
            ),
            /* harmony export */
            SphereHull: () => (
              /* reexport safe */
              j.SphereHull
            ),
            /* harmony export */
            SpreadSheetLayer: () => (
              /* reexport safe */
              Pt.SpreadSheetLayer
            ),
            /* harmony export */
            SpriteShader: () => (
              /* reexport safe */
              le.SpriteShader
            ),
            /* harmony export */
            Star: () => (
              /* reexport safe */
              se.Star
            ),
            /* harmony export */
            StateType: () => (
              /* reexport safe */
              Pe.StateType
            ),
            /* harmony export */
            StockSkyOverlayTypes: () => (
              /* reexport safe */
              He.StockSkyOverlayTypes
            ),
            /* harmony export */
            Table: () => (
              /* reexport safe */
              Be.Table
            ),
            /* harmony export */
            TagMe: () => (
              /* reexport safe */
              ve.TagMe
            ),
            /* harmony export */
            TangentTile: () => (
              /* reexport safe */
              Se.TangentTile
            ),
            /* harmony export */
            Tessellator: () => (
              /* reexport safe */
              re.Tessellator
            ),
            /* harmony export */
            Text3d: () => (
              /* reexport safe */
              Je.Text3d
            ),
            /* harmony export */
            Text3dBatch: () => (
              /* reexport safe */
              Je.Text3dBatch
            ),
            /* harmony export */
            TextBorderStyle: () => (
              /* reexport safe */
              ct.TextBorderStyle
            ),
            /* harmony export */
            TextObject: () => (
              /* reexport safe */
              ct.TextObject
            ),
            /* harmony export */
            TextOverlay: () => (
              /* reexport safe */
              lt.TextOverlay
            ),
            /* harmony export */
            TextShader: () => (
              /* reexport safe */
              le.TextShader
            ),
            /* harmony export */
            Texture: () => (
              /* reexport safe */
              te.Texture
            ),
            /* harmony export */
            ThumbnailSize: () => (
              /* reexport safe */
              yt.ThumbnailSize
            ),
            /* harmony export */
            Tile: () => (
              /* reexport safe */
              We.Tile
            ),
            /* harmony export */
            TileShader: () => (
              /* reexport safe */
              le.TileShader
            ),
            /* harmony export */
            TimeLine: () => (
              /* reexport safe */
              St.TimeLine
            ),
            /* harmony export */
            TimeSeriesLayer: () => (
              /* reexport safe */
              Tt.TimeSeriesLayer
            ),
            /* harmony export */
            TimeSeriesLineVertex: () => (
              /* reexport safe */
              ae.TimeSeriesLineVertex
            ),
            /* harmony export */
            TimeSeriesPointSpriteShader: () => (
              /* reexport safe */
              le.TimeSeriesPointSpriteShader
            ),
            /* harmony export */
            TimeSeriesPointVertex: () => (
              /* reexport safe */
              ae.TimeSeriesPointVertex
            ),
            /* harmony export */
            ToastTile: () => (
              /* reexport safe */
              Ue.ToastTile
            ),
            /* harmony export */
            ToolStripMenuItem: () => (
              /* reexport safe */
              ve.ToolStripMenuItem
            ),
            /* harmony export */
            ToolStripSeparator: () => (
              /* reexport safe */
              ve.ToolStripSeparator
            ),
            /* harmony export */
            Tour: () => (
              /* reexport safe */
              Qe.Tour
            ),
            /* harmony export */
            TourDocument: () => (
              /* reexport safe */
              ot.TourDocument
            ),
            /* harmony export */
            TourEdit: () => (
              /* reexport safe */
              St.TourEdit
            ),
            /* harmony export */
            TourEditTab: () => (
              /* reexport safe */
              nt.TourEditTab
            ),
            /* harmony export */
            TourEditor: () => (
              /* reexport safe */
              St.TourEditor
            ),
            /* harmony export */
            TourPlayer: () => (
              /* reexport safe */
              Mt.TourPlayer
            ),
            /* harmony export */
            TourStop: () => (
              /* reexport safe */
              pt.TourStop
            ),
            /* harmony export */
            TourStopList: () => (
              /* reexport safe */
              St.TourStopList
            ),
            /* harmony export */
            TransitionType: () => (
              /* reexport safe */
              pt.TransitionType
            ),
            /* harmony export */
            TriangleFanList: () => (
              /* reexport safe */
              ae.TriangleFanList
            ),
            /* harmony export */
            TriangleList: () => (
              /* reexport safe */
              ae.TriangleList
            ),
            /* harmony export */
            URLHelpers: () => (
              /* reexport safe */
              G.URLHelpers
            ),
            /* harmony export */
            URLRewriteMode: () => (
              /* reexport safe */
              G.URLRewriteMode
            ),
            /* harmony export */
            UiTools: () => (
              /* reexport safe */
              be.UiTools
            ),
            /* harmony export */
            Undo: () => (
              /* reexport safe */
              bt.Undo
            ),
            /* harmony export */
            UndoStep: () => (
              /* reexport safe */
              bt.UndoStep
            ),
            /* harmony export */
            UndoTourPropertiesChange: () => (
              /* reexport safe */
              bt.UndoTourPropertiesChange
            ),
            /* harmony export */
            UndoTourSlidelistChange: () => (
              /* reexport safe */
              bt.UndoTourSlidelistChange
            ),
            /* harmony export */
            UndoTourStopChange: () => (
              /* reexport safe */
              pt.UndoTourStopChange
            ),
            /* harmony export */
            UserLevel: () => (
              /* reexport safe */
              ot.UserLevel
            ),
            /* harmony export */
            Util: () => (
              /* reexport safe */
              u.Util
            ),
            /* harmony export */
            VSC: () => (
              /* reexport safe */
              e.VSC
            ),
            /* harmony export */
            Vector2d: () => (
              /* reexport safe */
              j.Vector2d
            ),
            /* harmony export */
            Vector3d: () => (
              /* reexport safe */
              j.Vector3d
            ),
            /* harmony export */
            Vector4d: () => (
              /* reexport safe */
              j.Vector4d
            ),
            /* harmony export */
            VertexBufferBase: () => (
              /* reexport safe */
              z.VertexBufferBase
            ),
            /* harmony export */
            VideoOutputType: () => (
              /* reexport safe */
              ht.VideoOutputType
            ),
            /* harmony export */
            ViewMoverKenBurnsStyle: () => (
              /* reexport safe */
              qe.ViewMoverKenBurnsStyle
            ),
            /* harmony export */
            VizLayer: () => (
              /* reexport safe */
              st.VizLayer
            ),
            /* harmony export */
            VoColumn: () => (
              /* reexport safe */
              Ke.VoColumn
            ),
            /* harmony export */
            VoRow: () => (
              /* reexport safe */
              Ke.VoRow
            ),
            /* harmony export */
            VoTable: () => (
              /* reexport safe */
              Ke.VoTable
            ),
            /* harmony export */
            VoTableLayer: () => (
              /* reexport safe */
              Ct.VoTableLayer
            ),
            /* harmony export */
            WWTControl: () => (
              /* reexport safe */
              gt.WWTControl
            ),
            /* harmony export */
            WWTControlBuilder: () => (
              /* reexport safe */
              gt.WWTControlBuilder
            ),
            /* harmony export */
            WWTElementEvent: () => (
              /* reexport safe */
              gt.WWTElementEvent
            ),
            /* harmony export */
            WcsImage: () => (
              /* reexport safe */
              me.WcsImage
            ),
            /* harmony export */
            WebFile: () => (
              /* reexport safe */
              Pe.WebFile
            ),
            /* harmony export */
            Wtml: () => (
              /* reexport safe */
              mt.Wtml
            ),
            /* harmony export */
            XmlTextWriter: () => (
              /* reexport safe */
              ye.XmlTextWriter
            ),
            /* harmony export */
            Xyf: () => (
              /* reexport safe */
              Ee.Xyf
            ),
            /* harmony export */
            set_tilePrepDevice: () => (
              /* reexport safe */
              oe.set_tilePrepDevice
            ),
            /* harmony export */
            set_useGlVersion2: () => (
              /* reexport safe */
              oe.set_useGlVersion2
            ),
            /* harmony export */
            ss: () => (
              /* reexport safe */
              s.ss
            )
            /* harmony export */
          });
          var s = __webpack_require__(
            /*! ./ss.js */
            "./esm/ss.js"
          ), u = __webpack_require__(
            /*! ./baseutil.js */
            "./esm/baseutil.js"
          ), i = __webpack_require__(
            /*! ./astrocalc/date.js */
            "./esm/astrocalc/date.js"
          ), t = __webpack_require__(
            /*! ./astrocalc/coordinate_transformation.js */
            "./esm/astrocalc/coordinate_transformation.js"
          ), n = __webpack_require__(
            /*! ./astrocalc/angular_separation.js */
            "./esm/astrocalc/angular_separation.js"
          ), e = __webpack_require__(
            /*! ./astrocalc/earth.js */
            "./esm/astrocalc/earth.js"
          ), _ = __webpack_require__(
            /*! ./astrocalc/fk5.js */
            "./esm/astrocalc/fk5.js"
          ), r = __webpack_require__(
            /*! ./astrocalc/nutation.js */
            "./esm/astrocalc/nutation.js"
          ), o = __webpack_require__(
            /*! ./astrocalc/sun.js */
            "./esm/astrocalc/sun.js"
          ), c = __webpack_require__(
            /*! ./astrocalc/mercury.js */
            "./esm/astrocalc/mercury.js"
          ), l = __webpack_require__(
            /*! ./astrocalc/venus.js */
            "./esm/astrocalc/venus.js"
          ), g = __webpack_require__(
            /*! ./astrocalc/mars.js */
            "./esm/astrocalc/mars.js"
          ), a = __webpack_require__(
            /*! ./astrocalc/jupiter.js */
            "./esm/astrocalc/jupiter.js"
          ), b = __webpack_require__(
            /*! ./astrocalc/saturn.js */
            "./esm/astrocalc/saturn.js"
          ), V = __webpack_require__(
            /*! ./astrocalc/uranus.js */
            "./esm/astrocalc/uranus.js"
          ), y = __webpack_require__(
            /*! ./astrocalc/neptune.js */
            "./esm/astrocalc/neptune.js"
          ), C = __webpack_require__(
            /*! ./astrocalc/pluto.js */
            "./esm/astrocalc/pluto.js"
          ), E = __webpack_require__(
            /*! ./astrocalc/kepler.js */
            "./esm/astrocalc/kepler.js"
          ), v = __webpack_require__(
            /*! ./astrocalc/aberration.js */
            "./esm/astrocalc/aberration.js"
          ), m = __webpack_require__(
            /*! ./astrocalc/dynamical_time.js */
            "./esm/astrocalc/dynamical_time.js"
          ), L = __webpack_require__(
            /*! ./astrocalc/ecliptical_elements.js */
            "./esm/astrocalc/ecliptical_elements.js"
          ), A = __webpack_require__(
            /*! ./astrocalc/elements_planetary_orbit.js */
            "./esm/astrocalc/elements_planetary_orbit.js"
          ), K = __webpack_require__(
            /*! ./astrocalc/elliptical.js */
            "./esm/astrocalc/elliptical.js"
          ), T = __webpack_require__(
            /*! ./astrocalc/equation_of_time.js */
            "./esm/astrocalc/equation_of_time.js"
          ), w = __webpack_require__(
            /*! ./astrocalc/galilean_moons.js */
            "./esm/astrocalc/galilean_moons.js"
          ), f = __webpack_require__(
            /*! ./astrocalc/globe.js */
            "./esm/astrocalc/globe.js"
          ), R = __webpack_require__(
            /*! ./astrocalc/illuminated_fraction.js */
            "./esm/astrocalc/illuminated_fraction.js"
          ), O = __webpack_require__(
            /*! ./astrocalc/interpolate.js */
            "./esm/astrocalc/interpolate.js"
          ), W = __webpack_require__(
            /*! ./astrocalc/moon.js */
            "./esm/astrocalc/moon.js"
          ), N = __webpack_require__(
            /*! ./astrocalc/moon_illuminated_fraction.js */
            "./esm/astrocalc/moon_illuminated_fraction.js"
          ), $ = __webpack_require__(
            /*! ./astrocalc/moon_nodes.js */
            "./esm/astrocalc/moon_nodes.js"
          ), S = __webpack_require__(
            /*! ./astrocalc/moon_perigee_apogee.js */
            "./esm/astrocalc/moon_perigee_apogee.js"
          ), I = __webpack_require__(
            /*! ./astrocalc/moon_phases.js */
            "./esm/astrocalc/moon_phases.js"
          ), x = __webpack_require__(
            /*! ./astrocalc/parallax.js */
            "./esm/astrocalc/parallax.js"
          ), P = __webpack_require__(
            /*! ./astrocalc/sidereal.js */
            "./esm/astrocalc/sidereal.js"
          ), d = __webpack_require__(
            /*! ./astrocalc/physical_jupiter.js */
            "./esm/astrocalc/physical_jupiter.js"
          ), U = __webpack_require__(
            /*! ./astrocalc/physical_mars.js */
            "./esm/astrocalc/physical_mars.js"
          ), F = __webpack_require__(
            /*! ./astrocalc/physical_sun.js */
            "./esm/astrocalc/physical_sun.js"
          ), X = __webpack_require__(
            /*! ./astrocalc/precession.js */
            "./esm/astrocalc/precession.js"
          ), Y = __webpack_require__(
            /*! ./astrocalc/rise_transit_set.js */
            "./esm/astrocalc/rise_transit_set.js"
          ), M = __webpack_require__(
            /*! ./astrocalc/saturn_rings.js */
            "./esm/astrocalc/saturn_rings.js"
          ), B = __webpack_require__(
            /*! ./astrocalc/stellar_magnitudes.js */
            "./esm/astrocalc/stellar_magnitudes.js"
          ), D = __webpack_require__(
            /*! ./blend_state.js */
            "./esm/blend_state.js"
          ), k = __webpack_require__(
            /*! ./color.js */
            "./esm/color.js"
          ), G = __webpack_require__(
            /*! ./url_helpers.js */
            "./esm/url_helpers.js"
          ), j = __webpack_require__(
            /*! ./double3d.js */
            "./esm/double3d.js"
          ), ee = __webpack_require__(
            /*! ./util.js */
            "./esm/util.js"
          ), Z = __webpack_require__(
            /*! ./astrocalc.js */
            "./esm/astrocalc.js"
          ), z = __webpack_require__(
            /*! ./graphics/gl_buffers.js */
            "./esm/graphics/gl_buffers.js"
          ), te = __webpack_require__(
            /*! ./graphics/texture.js */
            "./esm/graphics/texture.js"
          ), re = __webpack_require__(
            /*! ./graphics/tessellator.js */
            "./esm/graphics/tessellator.js"
          ), le = __webpack_require__(
            /*! ./graphics/shaders.js */
            "./esm/graphics/shaders.js"
          ), ae = __webpack_require__(
            /*! ./graphics/primitives3d.js */
            "./esm/graphics/primitives3d.js"
          ), oe = __webpack_require__(
            /*! ./render_globals.js */
            "./esm/render_globals.js"
          ), de = __webpack_require__(
            /*! ./utilities/bitmap.js */
            "./esm/utilities/bitmap.js"
          ), ve = __webpack_require__(
            /*! ./utilities/context_menu_strip.js */
            "./esm/utilities/context_menu_strip.js"
          ), ce = __webpack_require__(
            /*! ./utilities/binary_reader.js */
            "./esm/utilities/binary_reader.js"
          ), he = __webpack_require__(
            /*! ./utilities/simple_input.js */
            "./esm/utilities/simple_input.js"
          ), ye = __webpack_require__(
            /*! ./utilities/xml_text_writer.js */
            "./esm/utilities/xml_text_writer.js"
          ), fe = __webpack_require__(
            /*! ./coordinates.js */
            "./esm/coordinates.js"
          ), Ce = __webpack_require__(
            /*! ./fast_math.js */
            "./esm/fast_math.js"
          ), Ae = __webpack_require__(
            /*! ./healpix_tables.js */
            "./esm/healpix_tables.js"
          ), Te = __webpack_require__(
            /*! ./healpix_utils.js */
            "./esm/healpix_utils.js"
          ), Re = __webpack_require__(
            /*! ./hploc.js */
            "./esm/hploc.js"
          ), De = __webpack_require__(
            /*! ./fxyf.js */
            "./esm/fxyf.js"
          ), Oe = __webpack_require__(
            /*! ./interfaces.js */
            "./esm/interfaces.js"
          ), Ne = __webpack_require__(
            /*! ./annotation.js */
            "./esm/annotation.js"
          ), Fe = __webpack_require__(
            /*! ./camera_parameters.js */
            "./esm/camera_parameters.js"
          ), $e = __webpack_require__(
            /*! ./constellation_filter.js */
            "./esm/constellation_filter.js"
          ), ze = __webpack_require__(
            /*! ./fits_properties.js */
            "./esm/fits_properties.js"
          ), se = __webpack_require__(
            /*! ./star.js */
            "./esm/star.js"
          ), be = __webpack_require__(
            /*! ./ui_tools.js */
            "./esm/ui_tools.js"
          ), Pe = __webpack_require__(
            /*! ./web_file.js */
            "./esm/web_file.js"
          ), Ve = __webpack_require__(
            /*! ./layers/color_map_container.js */
            "./esm/layers/color_map_container.js"
          ), me = __webpack_require__(
            /*! ./layers/wcs_image.js */
            "./esm/layers/wcs_image.js"
          ), Me = __webpack_require__(
            /*! ./layers/fits_image.js */
            "./esm/layers/fits_image.js"
          ), ie = __webpack_require__(
            /*! ./layers/fits_image_js.js */
            "./esm/layers/fits_image_js.js"
          ), xe = __webpack_require__(
            /*! ./layers/fits_image_tile.js */
            "./esm/layers/fits_image_tile.js"
          ), We = __webpack_require__(
            /*! ./tile.js */
            "./esm/tile.js"
          ), J = __webpack_require__(
            /*! ./render_triangle.js */
            "./esm/render_triangle.js"
          ), we = __webpack_require__(
            /*! ./equirectangular_tile.js */
            "./esm/equirectangular_tile.js"
          ), Ee = __webpack_require__(
            /*! ./healpix_tile.js */
            "./esm/healpix_tile.js"
          ), ne = __webpack_require__(
            /*! ./mercator_tile.js */
            "./esm/mercator_tile.js"
          ), _e = __webpack_require__(
            /*! ./plot_tile.js */
            "./esm/plot_tile.js"
          ), Se = __webpack_require__(
            /*! ./tangent_tile.js */
            "./esm/tangent_tile.js"
          ), ke = __webpack_require__(
            /*! ./sky_image_tile.js */
            "./esm/sky_image_tile.js"
          ), Ue = __webpack_require__(
            /*! ./toast_tile.js */
            "./esm/toast_tile.js"
          ), je = __webpack_require__(
            /*! ./imageset.js */
            "./esm/imageset.js"
          ), He = __webpack_require__(
            /*! ./settings.js */
            "./esm/settings.js"
          ), ct = __webpack_require__(
            /*! ./tours/text_object.js */
            "./esm/tours/text_object.js"
          ), Je = __webpack_require__(
            /*! ./sky_text.js */
            "./esm/sky_text.js"
          ), Xe = __webpack_require__(
            /*! ./constellations.js */
            "./esm/constellations.js"
          ), Ze = __webpack_require__(
            /*! ./space_time_controller.js */
            "./esm/space_time_controller.js"
          ), tt = __webpack_require__(
            /*! ./planets.js */
            "./esm/planets.js"
          ), et = __webpack_require__(
            /*! ./place.js */
            "./esm/place.js"
          ), _t = __webpack_require__(
            /*! ./folder_up.js */
            "./esm/folder_up.js"
          ), at = __webpack_require__(
            /*! ./grids.js */
            "./esm/grids.js"
          ), Ye = __webpack_require__(
            /*! ./kepler_vertex.js */
            "./esm/kepler_vertex.js"
          ), it = __webpack_require__(
            /*! ./pointing.js */
            "./esm/pointing.js"
          ), Qe = __webpack_require__(
            /*! ./tour.js */
            "./esm/tour.js"
          ), ht = __webpack_require__(
            /*! ./video_output_type.js */
            "./esm/video_output_type.js"
          ), qe = __webpack_require__(
            /*! ./view_mover.js */
            "./esm/view_mover.js"
          ), st = __webpack_require__(
            /*! ./viz_layer.js */
            "./esm/viz_layer.js"
          ), ut = __webpack_require__(
            /*! ./utilities/color_picker.js */
            "./esm/utilities/color_picker.js"
          ), Lt = __webpack_require__(
            /*! ./utilities/dialog.js */
            "./esm/utilities/dialog.js"
          ), vt = __webpack_require__(
            /*! ./utilities/histogram.js */
            "./esm/utilities/histogram.js"
          ), H = __webpack_require__(
            /*! ./layers/layer.js */
            "./esm/layers/layer.js"
          ), Q = __webpack_require__(
            /*! ./layers/layer_ui.js */
            "./esm/layers/layer_ui.js"
          ), q = __webpack_require__(
            /*! ./layers/great_circle_route_layer.js */
            "./esm/layers/great_circle_route_layer.js"
          ), ue = __webpack_require__(
            /*! ./layers/grid_layer.js */
            "./esm/layers/grid_layer.js"
          ), pe = __webpack_require__(
            /*! ./layers/imageset_layer.js */
            "./esm/layers/imageset_layer.js"
          ), ge = __webpack_require__(
            /*! ./layers/object3d.js */
            "./esm/layers/object3d.js"
          ), Le = __webpack_require__(
            /*! ./layers/orbit.js */
            "./esm/layers/orbit.js"
          ), Ie = __webpack_require__(
            /*! ./layers/reference_frame.js */
            "./esm/layers/reference_frame.js"
          ), Ge = __webpack_require__(
            /*! ./layers/orbit_layer.js */
            "./esm/layers/orbit_layer.js"
          ), Be = __webpack_require__(
            /*! ./layers/table.js */
            "./esm/layers/table.js"
          ), Ke = __webpack_require__(
            /*! ./layers/vo_table.js */
            "./esm/layers/vo_table.js"
          ), rt = __webpack_require__(
            /*! ./tours/file_cabinet.js */
            "./esm/tours/file_cabinet.js"
          ), lt = __webpack_require__(
            /*! ./tours/overlay.js */
            "./esm/tours/overlay.js"
          ), dt = __webpack_require__(
            /*! ./tours/selection.js */
            "./esm/tours/selection.js"
          ), pt = __webpack_require__(
            /*! ./tours/tour_stop.js */
            "./esm/tours/tour_stop.js"
          ), bt = __webpack_require__(
            /*! ./tours/undo.js */
            "./esm/tours/undo.js"
          ), St = __webpack_require__(
            /*! ./tours/tour_editor.js */
            "./esm/tours/tour_editor.js"
          ), Mt = __webpack_require__(
            /*! ./tours/tour_player.js */
            "./esm/tours/tour_player.js"
          ), Dt = __webpack_require__(
            /*! ./layers/iss_layer.js */
            "./esm/layers/iss_layer.js"
          ), Tt = __webpack_require__(
            /*! ./layers/time_series_layer.js */
            "./esm/layers/time_series_layer.js"
          ), Pt = __webpack_require__(
            /*! ./layers/spreadsheet_layer.js */
            "./esm/layers/spreadsheet_layer.js"
          ), Ct = __webpack_require__(
            /*! ./layers/vo_table_layer.js */
            "./esm/layers/vo_table_layer.js"
          ), Et = __webpack_require__(
            /*! ./layers/layer_manager.js */
            "./esm/layers/layer_manager.js"
          );
          __webpack_require__(
            /*! ./layers/from_xml.js */
            "./esm/layers/from_xml.js"
          );
          var wt = __webpack_require__(
            /*! ./layers/manager_dialogs.js */
            "./esm/layers/manager_dialogs.js"
          ), ot = __webpack_require__(
            /*! ./tours/tour_document.js */
            "./esm/tours/tour_document.js"
          ), nt = __webpack_require__(
            /*! ./tours/tour_edit.js */
            "./esm/tours/tour_edit.js"
          ), ft = __webpack_require__(
            /*! ./folder.js */
            "./esm/folder.js"
          ), yt = __webpack_require__(
            /*! ./folder_browser.js */
            "./esm/folder_browser.js"
          ), At = __webpack_require__(
            /*! ./hips_properties.js */
            "./esm/hips_properties.js"
          ), It = __webpack_require__(
            /*! ./render_context.js */
            "./esm/render_context.js"
          ), xt = __webpack_require__(
            /*! ./script_interface.js */
            "./esm/script_interface.js"
          ), gt = __webpack_require__(
            /*! ./wwt_control.js */
            "./esm/wwt_control.js"
          ), mt = __webpack_require__(
            /*! ./wtml.js */
            "./esm/wtml.js"
          ), Vt = __webpack_require__(
            /*! ./typesystem.js */
            "./esm/typesystem.js"
          ), Ot = __webpack_require__(
            /*! ./data_globals.js */
            "./esm/data_globals.js"
          );
          function Rt() {
          }
          (0, Vt.registerType)("GFX", [Rt, null, null]), gt.WWTControl.exploreRoot = new ft.Folder(), gt.WWTControl.singleton = new gt.WWTControl(), gt.WWTControl.singleton.renderContext = new It.RenderContext(), (0, Ot.set_globalWWTControl)(gt.WWTControl.singleton), (0, oe.set_globalRenderContext)(gt.WWTControl.singleton.renderContext), Ze.SpaceTimeController._metaNow = s.ss.now(), Ze.SpaceTimeController._now = s.ss.now(), Ze.SpaceTimeController.last = Ze.SpaceTimeController.get_metaNow(), Ze.SpaceTimeController.updateClock(), Ye.KeplerVertex.baseDate = s.ss.truncate(Ze.SpaceTimeController.utcToJulian(s.ss.now()));
        })(), __webpack_exports__;
      })()
    ));
  }(src)), src.exports;
}
const require$$1 = /* @__PURE__ */ getAugmentedNamespace(vue_runtime_esmBundler);
(function(s, u) {
  (function(t, n) {
    s.exports = n(requireSrc(), require$$1);
  })(typeof self < "u" ? self : commonjsGlobal, (i, t) => (
    /******/
    (() => {
      var n = {
        /***/
        959: (
          /***/
          (o, c) => {
            c.Z = (l, g) => {
              const a = l.__vccOpts || l;
              for (const [b, V] of g)
                a[b] = V;
              return a;
            };
          }
        ),
        /***/
        415: (
          /***/
          (o) => {
            o.exports = i;
          }
        ),
        /***/
        203: (
          /***/
          (o) => {
            o.exports = t;
          }
        )
        /******/
      }, e = {};
      function _(o) {
        var c = e[o];
        if (c !== void 0)
          return c.exports;
        var l = e[o] = {
          /******/
          // no module.id needed
          /******/
          // no module.loaded needed
          /******/
          exports: {}
          /******/
        };
        return n[o](l, l.exports, _), l.exports;
      }
      _.d = (o, c) => {
        for (var l in c)
          _.o(c, l) && !_.o(o, l) && Object.defineProperty(o, l, { enumerable: !0, get: c[l] });
      }, _.g = function() {
        if (typeof globalThis == "object")
          return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object")
            return window;
        }
      }(), _.o = (o, c) => Object.prototype.hasOwnProperty.call(o, c), _.r = (o) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
      }, _.p = "";
      var r = {};
      return (() => {
        if (_.r(r), _.d(r, {
          ImageSetLayerState: () => (
            /* reexport */
            tt
          ),
          ImagesetInfo: () => (
            /* reexport */
            Xe
          ),
          SpreadSheetLayerInfo: () => (
            /* reexport */
            Ze
          ),
          WWTAwareComponent: () => (
            /* reexport */
            Ye
          ),
          WWTComponent: () => (
            /* reexport */
            Lt
          ),
          engineStore: () => (
            /* reexport */
            at
          ),
          wwtPinia: () => (
            /* reexport */
            vt
          )
        }), typeof window < "u") {
          var o = window.document.currentScript, c = o && o.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
          c && (_.p = c[1]);
        }
        var l = _(203), g = !1;
        /*!
         * pinia v2.1.6
         * (c) 2023 Eduardo San Martin Morote
         * @license MIT
         */
        let a;
        const b = (H) => a = H, V = (
          /* istanbul ignore next */
          Symbol()
        );
        function y(H) {
          return H && typeof H == "object" && Object.prototype.toString.call(H) === "[object Object]" && typeof H.toJSON != "function";
        }
        var C;
        (function(H) {
          H.direct = "direct", H.patchObject = "patch object", H.patchFunction = "patch function";
        })(C || (C = {}));
        function E() {
          const H = (0, l.effectScope)(!0), Q = H.run(() => (0, l.ref)({}));
          let q = [], ue = [];
          const pe = (0, l.markRaw)({
            install(ge) {
              b(pe), pe._a = ge, ge.provide(V, pe), ge.config.globalProperties.$pinia = pe, ue.forEach((Le) => q.push(Le)), ue = [];
            },
            use(ge) {
              return !this._a && !g ? ue.push(ge) : q.push(ge), this;
            },
            _p: q,
            // it's actually undefined here
            // @ts-expect-error
            _a: null,
            _e: H,
            _s: /* @__PURE__ */ new Map(),
            state: Q
          });
          return pe;
        }
        const v = () => {
        };
        function m(H, Q, q, ue = v) {
          H.push(Q);
          const pe = () => {
            const ge = H.indexOf(Q);
            ge > -1 && (H.splice(ge, 1), ue());
          };
          return !q && (0, l.getCurrentScope)() && (0, l.onScopeDispose)(pe), pe;
        }
        function L(H, ...Q) {
          H.slice().forEach((q) => {
            q(...Q);
          });
        }
        const A = (H) => H();
        function K(H, Q) {
          H instanceof Map && Q instanceof Map && Q.forEach((q, ue) => H.set(ue, q)), H instanceof Set && Q instanceof Set && Q.forEach(H.add, H);
          for (const q in Q) {
            if (!Q.hasOwnProperty(q))
              continue;
            const ue = Q[q], pe = H[q];
            y(pe) && y(ue) && H.hasOwnProperty(q) && !(0, l.isRef)(ue) && !(0, l.isReactive)(ue) ? H[q] = K(pe, ue) : H[q] = ue;
          }
          return H;
        }
        const T = (
          /* istanbul ignore next */
          Symbol()
        );
        function w(H) {
          return !y(H) || !H.hasOwnProperty(T);
        }
        const { assign: f } = Object;
        function R(H) {
          return !!((0, l.isRef)(H) && H.effect);
        }
        function O(H, Q, q, ue) {
          const { state: pe, actions: ge, getters: Le } = Q, Ie = q.state.value[H];
          let Ge;
          function Be() {
            Ie || (q.state.value[H] = pe ? pe() : {});
            const Ke = (0, l.toRefs)(q.state.value[H]);
            return f(Ke, ge, Object.keys(Le || {}).reduce((rt, lt) => (rt[lt] = (0, l.markRaw)((0, l.computed)(() => {
              b(q);
              const dt = q._s.get(H);
              return Le[lt].call(dt, dt);
            })), rt), {}));
          }
          return Ge = W(H, Be, Q, q, ue, !0), Ge;
        }
        function W(H, Q, q = {}, ue, pe, ge) {
          let Le;
          const Ie = f({ actions: {} }, q), Ge = {
            deep: !0
            // flush: 'post',
          };
          let Be, Ke, rt = [], lt = [], dt;
          const pt = ue.state.value[H];
          !ge && !pt && (ue.state.value[H] = {}), (0, l.ref)({});
          let bt;
          function St(ot) {
            let nt;
            Be = Ke = !1, typeof ot == "function" ? (ot(ue.state.value[H]), nt = {
              type: C.patchFunction,
              storeId: H,
              events: dt
            }) : (K(ue.state.value[H], ot), nt = {
              type: C.patchObject,
              payload: ot,
              storeId: H,
              events: dt
            });
            const ft = bt = Symbol();
            (0, l.nextTick)().then(() => {
              bt === ft && (Be = !0);
            }), Ke = !0, L(rt, nt, ue.state.value[H]);
          }
          const Mt = ge ? function() {
            const { state: nt } = q, ft = nt ? nt() : {};
            this.$patch((yt) => {
              f(yt, ft);
            });
          } : (
            /* istanbul ignore next */
            v
          );
          function Dt() {
            Le.stop(), rt = [], lt = [], ue._s.delete(H);
          }
          function Tt(ot, nt) {
            return function() {
              b(ue);
              const ft = Array.from(arguments), yt = [], At = [];
              function It(mt) {
                yt.push(mt);
              }
              function xt(mt) {
                At.push(mt);
              }
              L(lt, {
                args: ft,
                name: ot,
                store: Ct,
                after: It,
                onError: xt
              });
              let gt;
              try {
                gt = nt.apply(this && this.$id === H ? this : Ct, ft);
              } catch (mt) {
                throw L(At, mt), mt;
              }
              return gt instanceof Promise ? gt.then((mt) => (L(yt, mt), mt)).catch((mt) => (L(At, mt), Promise.reject(mt))) : (L(yt, gt), gt);
            };
          }
          const Pt = {
            _p: ue,
            // _s: scope,
            $id: H,
            $onAction: m.bind(null, lt),
            $patch: St,
            $reset: Mt,
            $subscribe(ot, nt = {}) {
              const ft = m(rt, ot, nt.detached, () => yt()), yt = Le.run(() => (0, l.watch)(() => ue.state.value[H], (At) => {
                (nt.flush === "sync" ? Ke : Be) && ot({
                  storeId: H,
                  type: C.direct,
                  events: dt
                }, At);
              }, f({}, Ge, nt)));
              return ft;
            },
            $dispose: Dt
          }, Ct = (0, l.reactive)(Pt);
          ue._s.set(H, Ct);
          const Et = ue._a && ue._a.runWithContext || A, wt = ue._e.run(() => (Le = (0, l.effectScope)(), Et(() => Le.run(Q))));
          for (const ot in wt) {
            const nt = wt[ot];
            if ((0, l.isRef)(nt) && !R(nt) || (0, l.isReactive)(nt))
              ge || (pt && w(nt) && ((0, l.isRef)(nt) ? nt.value = pt[ot] : K(nt, pt[ot])), ue.state.value[H][ot] = nt);
            else if (typeof nt == "function") {
              const ft = Tt(ot, nt);
              wt[ot] = ft, Ie.actions[ot] = nt;
            }
          }
          return f(Ct, wt), f((0, l.toRaw)(Ct), wt), Object.defineProperty(Ct, "$state", {
            get: () => ue.state.value[H],
            set: (ot) => {
              St((nt) => {
                f(nt, ot);
              });
            }
          }), ue._p.forEach((ot) => {
            f(Ct, Le.run(() => ot({
              store: Ct,
              app: ue._a,
              pinia: ue,
              options: Ie
            })));
          }), pt && ge && q.hydrate && q.hydrate(Ct.$state, pt), Be = !0, Ke = !0, Ct;
        }
        function N(H, Q, q) {
          let ue, pe;
          const ge = typeof Q == "function";
          typeof H == "string" ? (ue = H, pe = ge ? q : Q) : (pe = H, ue = H.id);
          function Le(Ie, Ge) {
            const Be = (0, l.hasInjectionContext)();
            return Ie = // in test mode, ignore the argument provided as we can always retrieve a
            // pinia instance with getActivePinia()
            Ie || (Be ? (0, l.inject)(V, null) : null), Ie && b(Ie), Ie = a, Ie._s.has(ue) || (ge ? W(ue, Q, pe, Ie) : O(ue, pe, Ie)), Ie._s.get(ue);
          }
          return Le.$id = ue, Le;
        }
        function $(H, Q) {
          return Array.isArray(Q) ? Q.reduce((q, ue) => (q[ue] = function() {
            return H(this.$pinia)[ue];
          }, q), {}) : Object.keys(Q).reduce((q, ue) => (q[ue] = function() {
            const pe = H(this.$pinia), ge = Q[ue];
            return typeof ge == "function" ? ge.call(this, pe) : pe[ge];
          }, q), {});
        }
        function S(H, Q) {
          return Array.isArray(Q) ? Q.reduce((q, ue) => (q[ue] = function(...pe) {
            return H(this.$pinia)[ue](...pe);
          }, q), {}) : Object.keys(Q).reduce((q, ue) => (q[ue] = function(...pe) {
            return H(this.$pinia)[Q[ue]](...pe);
          }, q), {});
        }
        var I = function(H, Q) {
          return I = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(q, ue) {
            q.__proto__ = ue;
          } || function(q, ue) {
            for (var pe in ue)
              Object.prototype.hasOwnProperty.call(ue, pe) && (q[pe] = ue[pe]);
          }, I(H, Q);
        };
        function x(H, Q) {
          if (typeof Q != "function" && Q !== null)
            throw new TypeError("Class extends value " + String(Q) + " is not a constructor or null");
          I(H, Q);
          function q() {
            this.constructor = H;
          }
          H.prototype = Q === null ? Object.create(Q) : (q.prototype = Q.prototype, new q());
        }
        var P = function() {
          return P = Object.assign || function(Q) {
            for (var q, ue = 1, pe = arguments.length; ue < pe; ue++) {
              q = arguments[ue];
              for (var ge in q)
                Object.prototype.hasOwnProperty.call(q, ge) && (Q[ge] = q[ge]);
            }
            return Q;
          }, P.apply(this, arguments);
        };
        function d(H, Q, q, ue) {
          function pe(ge) {
            return ge instanceof q ? ge : new q(function(Le) {
              Le(ge);
            });
          }
          return new (q || (q = Promise))(function(ge, Le) {
            function Ie(Ke) {
              try {
                Be(ue.next(Ke));
              } catch (rt) {
                Le(rt);
              }
            }
            function Ge(Ke) {
              try {
                Be(ue.throw(Ke));
              } catch (rt) {
                Le(rt);
              }
            }
            function Be(Ke) {
              Ke.done ? ge(Ke.value) : pe(Ke.value).then(Ie, Ge);
            }
            Be((ue = ue.apply(H, Q || [])).next());
          });
        }
        function U(H, Q) {
          var q = { label: 0, sent: function() {
            if (ge[0] & 1)
              throw ge[1];
            return ge[1];
          }, trys: [], ops: [] }, ue, pe, ge, Le;
          return Le = { next: Ie(0), throw: Ie(1), return: Ie(2) }, typeof Symbol == "function" && (Le[Symbol.iterator] = function() {
            return this;
          }), Le;
          function Ie(Be) {
            return function(Ke) {
              return Ge([Be, Ke]);
            };
          }
          function Ge(Be) {
            if (ue)
              throw new TypeError("Generator is already executing.");
            for (; Le && (Le = 0, Be[0] && (q = 0)), q; )
              try {
                if (ue = 1, pe && (ge = Be[0] & 2 ? pe.return : Be[0] ? pe.throw || ((ge = pe.return) && ge.call(pe), 0) : pe.next) && !(ge = ge.call(pe, Be[1])).done)
                  return ge;
                switch (pe = 0, ge && (Be = [Be[0] & 2, ge.value]), Be[0]) {
                  case 0:
                  case 1:
                    ge = Be;
                    break;
                  case 4:
                    return q.label++, { value: Be[1], done: !1 };
                  case 5:
                    q.label++, pe = Be[1], Be = [0];
                    continue;
                  case 7:
                    Be = q.ops.pop(), q.trys.pop();
                    continue;
                  default:
                    if (ge = q.trys, !(ge = ge.length > 0 && ge[ge.length - 1]) && (Be[0] === 6 || Be[0] === 2)) {
                      q = 0;
                      continue;
                    }
                    if (Be[0] === 3 && (!ge || Be[1] > ge[0] && Be[1] < ge[3])) {
                      q.label = Be[1];
                      break;
                    }
                    if (Be[0] === 6 && q.label < ge[1]) {
                      q.label = ge[1], ge = Be;
                      break;
                    }
                    if (ge && q.label < ge[2]) {
                      q.label = ge[2], q.ops.push(Be);
                      break;
                    }
                    ge[2] && q.ops.pop(), q.trys.pop();
                    continue;
                }
                Be = Q.call(H, q);
              } catch (Ke) {
                Be = [6, Ke], pe = 0;
              } finally {
                ue = ge = 0;
              }
            if (Be[0] & 5)
              throw Be[1];
            return { value: Be[0] ? Be[1] : void 0, done: !0 };
          }
        }
        function F(H) {
          var Q = typeof Symbol == "function" && Symbol.iterator, q = Q && H[Q], ue = 0;
          if (q)
            return q.call(H);
          if (H && typeof H.length == "number")
            return {
              next: function() {
                return H && ue >= H.length && (H = void 0), { value: H && H[ue++], done: !H };
              }
            };
          throw new TypeError(Q ? "Object is not iterable." : "Symbol.iterator is not defined.");
        }
        function X(H, Q) {
          var q = typeof Symbol == "function" && H[Symbol.iterator];
          if (!q)
            return H;
          var ue = q.call(H), pe, ge = [], Le;
          try {
            for (; (Q === void 0 || Q-- > 0) && !(pe = ue.next()).done; )
              ge.push(pe.value);
          } catch (Ie) {
            Le = { error: Ie };
          } finally {
            try {
              pe && !pe.done && (q = ue.return) && q.call(ue);
            } finally {
              if (Le)
                throw Le.error;
            }
          }
          return ge;
        }
        typeof SuppressedError == "function" && SuppressedError;
        var Y = 3.14159265358979, M = 180 / Y, B = Y / 180, D = 12 / Y, k = Y / 12, G = 12 / 180, j;
        (function(H) {
          H[H.depth = 0] = "depth", H[H.altitude = 1] = "altitude", H[H.distance = 2] = "distance", H[H.seaLevel = 3] = "seaLevel", H[H.terrain = 4] = "terrain";
        })(j || (j = {}));
        var ee;
        (function(H) {
          H[H.meters = 1] = "meters", H[H.feet = 2] = "feet", H[H.inches = 3] = "inches", H[H.miles = 4] = "miles", H[H.kilometers = 5] = "kilometers", H[H.astronomicalUnits = 6] = "astronomicalUnits", H[H.lightYears = 7] = "lightYears", H[H.parsecs = 8] = "parsecs", H[H.megaParsecs = 9] = "megaParsecs", H[H.custom = 10] = "custom";
        })(ee || (ee = {}));
        var Z;
        (function(H) {
          H[H.gamma = 0] = "gamma", H[H.xRay = 1] = "xRay", H[H.ultraviolet = 2] = "ultraviolet", H[H.visible = 3] = "visible", H[H.hydrogenAlpha = 4] = "hydrogenAlpha", H[H.IR = 4] = "IR", H[H.microwave = 5] = "microwave", H[H.radio = 6] = "radio", H[H.visibleNight = 6] = "visibleNight";
        })(Z || (Z = {}));
        var z;
        (function(H) {
          H[H.star = 1] = "star", H[H.supernova = 2] = "supernova", H[H.blackHole = 4] = "blackHole", H[H.neutronStar = 8] = "neutronStar", H[H.doubleStar = 16] = "doubleStar", H[H.multipleStars = 32] = "multipleStars", H[H.asterism = 64] = "asterism", H[H.constellation = 128] = "constellation", H[H.openCluster = 256] = "openCluster", H[H.globularCluster = 512] = "globularCluster", H[H.nebulousCluster = 1024] = "nebulousCluster", H[H.nebula = 2048] = "nebula", H[H.emissionNebula = 4096] = "emissionNebula", H[H.planetaryNebula = 8192] = "planetaryNebula", H[H.reflectionNebula = 16384] = "reflectionNebula", H[H.darkNebula = 32768] = "darkNebula", H[H.giantMolecularCloud = 65536] = "giantMolecularCloud", H[H.supernovaRemnant = 131072] = "supernovaRemnant", H[H.interstellarDust = 262144] = "interstellarDust", H[H.quasar = 524288] = "quasar", H[H.galaxy = 1048576] = "galaxy", H[H.spiralGalaxy = 2097152] = "spiralGalaxy", H[H.irregularGalaxy = 4194304] = "irregularGalaxy", H[H.ellipticalGalaxy = 8388608] = "ellipticalGalaxy", H[H.knot = 16777216] = "knot", H[H.plateDefect = 33554432] = "plateDefect", H[H.clusterOfGalaxies = 67108864] = "clusterOfGalaxies", H[H.otherNGC = 134217728] = "otherNGC", H[H.unidentified = 268435456] = "unidentified", H[H.solarSystem = 536870912] = "solarSystem", H[H.unfiltered = 1073741823] = "unfiltered", H[H.stellar = 63] = "stellar", H[H.stellarGroupings = 2032] = "stellarGroupings", H[H.nebulae = 523264] = "nebulae", H[H.galactic = 133693440] = "galactic", H[H.other = 436207616] = "other";
        })(z || (z = {}));
        var te;
        (function(H) {
          H[H.spherical = 0] = "spherical", H[H.rectangular = 1] = "rectangular", H[H.orbital = 2] = "orbital";
        })(te || (te = {}));
        var re;
        (function(H) {
          H[H.byteT = 0] = "byteT", H[H.int16T = 1] = "int16T", H[H.int32T = 2] = "int32T", H[H.floatT = 3] = "floatT", H[H.doubleT = 4] = "doubleT", H[H.none = 5] = "none";
        })(re || (re = {}));
        var le;
        (function(H) {
          H[H.fadeIn = 1] = "fadeIn", H[H.fadeOut = 2] = "fadeOut", H[H.both = 3] = "both", H[H.none = 4] = "none";
        })(le || (le = {}));
        var ae;
        (function(H) {
          H[H.explorer = 0] = "explorer", H[H.tour = 1] = "tour", H[H.search = 2] = "search", H[H.constellation = 3] = "constellation", H[H.view = 4] = "view", H[H.goTo = 5] = "goTo", H[H.community = 6] = "community", H[H.context = 7] = "context", H[H.voTable = 8] = "voTable", H[H.imageStack = 9] = "imageStack";
        })(ae || (ae = {}));
        var oe;
        (function(H) {
          H[H.interval = 0] = "interval", H[H.conditionalGet = 1] = "conditionalGet", H[H.viewChange = 2] = "viewChange";
        })(oe || (oe = {}));
        var de;
        (function(H) {
          H[H.earth = 0] = "earth", H[H.planet = 1] = "planet", H[H.sky = 2] = "sky", H[H.panorama = 3] = "panorama";
        })(de || (de = {}));
        var ve;
        (function(H) {
          H[H.earth = 0] = "earth", H[H.planet = 1] = "planet", H[H.sky = 2] = "sky", H[H.panorama = 3] = "panorama", H[H.solarSystem = 4] = "solarSystem", H[H.sandbox = 5] = "sandbox";
        })(ve || (ve = {}));
        var ce;
        (function(H) {
          H[H.screen = 0] = "screen", H[H.world = 1] = "world";
        })(ce || (ce = {}));
        var he;
        (function(H) {
          H[H.gaussian = 0] = "gaussian", H[H.point = 1] = "point", H[H.circle = 2] = "circle", H[H.square = 3] = "square", H[H.pushPin = 4] = "pushPin", H[H.custom = 5] = "custom";
        })(he || (he = {}));
        var ye;
        (function(H) {
          H[H.linear = 0] = "linear", H[H.power = 1] = "power", H[H.log = 2] = "log", H[H.constant = 3] = "constant", H[H.stellarMagnitude = 4] = "stellarMagnitude";
        })(ye || (ye = {}));
        var fe;
        (function(H) {
          H[H.mercator = 0] = "mercator", H[H.equirectangular = 1] = "equirectangular", H[H.tangent = 2] = "tangent", H[H.tan = 2] = "tan", H[H.toast = 3] = "toast", H[H.spherical = 4] = "spherical", H[H.skyImage = 5] = "skyImage", H[H.plotted = 6] = "plotted";
        })(fe || (fe = {}));
        var Ce;
        (function(H) {
          H[H.hours = 0] = "hours", H[H.degrees = 1] = "degrees";
        })(Ce || (Ce = {}));
        var Ae;
        (function(H) {
          H[H.sky = 0] = "sky", H[H.ecliptic = 1] = "ecliptic", H[H.galactic = 2] = "galactic", H[H.sun = 3] = "sun", H[H.mercury = 4] = "mercury", H[H.venus = 5] = "venus", H[H.earth = 6] = "earth", H[H.mars = 7] = "mars", H[H.jupiter = 8] = "jupiter", H[H.saturn = 9] = "saturn", H[H.uranus = 10] = "uranus", H[H.neptune = 11] = "neptune", H[H.pluto = 12] = "pluto", H[H.moon = 13] = "moon", H[H.io = 14] = "io", H[H.europa = 15] = "europa", H[H.ganymede = 16] = "ganymede", H[H.callisto = 17] = "callisto", H[H.custom = 18] = "custom", H[H.identity = 19] = "identity", H[H.sandbox = 20] = "sandbox";
        })(Ae || (Ae = {}));
        var Te;
        (function(H) {
          H[H.fixedSherical = 0] = "fixedSherical", H[H.orbital = 1] = "orbital", H[H.trajectory = 2] = "trajectory", H[H.synodic = 3] = "synodic";
        })(Te || (Te = {}));
        var Re;
        (function(H) {
          H[H.linear = 0] = "linear", H[H.log = 1] = "log", H[H.power = 2] = "power", H[H.squareRoot = 3] = "squareRoot", H[H.histogramEqualization = 4] = "histogramEqualization";
        })(Re || (Re = {}));
        var De;
        (function(H) {
          H[H.sun = 0] = "sun", H[H.mercury = 1] = "mercury", H[H.venus = 2] = "venus", H[H.mars = 3] = "mars", H[H.jupiter = 4] = "jupiter", H[H.saturn = 5] = "saturn", H[H.uranus = 6] = "uranus", H[H.neptune = 7] = "neptune", H[H.pluto = 8] = "pluto", H[H.moon = 9] = "moon", H[H.io = 10] = "io", H[H.europa = 11] = "europa", H[H.ganymede = 12] = "ganymede", H[H.callisto = 13] = "callisto", H[H.ioShadow = 14] = "ioShadow", H[H.europaShadow = 15] = "europaShadow", H[H.ganymedeShadow = 16] = "ganymedeShadow", H[H.callistoShadow = 17] = "callistoShadow", H[H.sunEclipsed = 18] = "sunEclipsed", H[H.earth = 19] = "earth", H[H.custom = 20] = "custom", H[H.undefined = 65536] = "undefined";
        })(De || (De = {}));
        var Oe = _(415), Ne = [
          "astronomical",
          "color",
          "enabled",
          "fadeSpan",
          "name",
          "opacity",
          "opened",
          "referenceFrame",
          "version"
        ];
        function Fe(H, Q) {
          var q, ue;
          try {
            for (var pe = F(Ne), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        var $e = (
          /** @class */
          function() {
            function H(Q) {
              Fe(Q, this);
            }
            return H.prototype.get_astronomical = function() {
              return this.astronomical;
            }, H.prototype.set_astronomical = function(Q) {
              return this.astronomical = Q, Q;
            }, H.prototype.get_color = function() {
              return this.color;
            }, H.prototype.set_color = function(Q) {
              return this.color = Q, Q;
            }, H.prototype.get_enabled = function() {
              return this.enabled;
            }, H.prototype.set_enabled = function(Q) {
              return this.enabled = Q, Q;
            }, H.prototype.get_endTime = function() {
              return this.endTime;
            }, H.prototype.set_endTime = function(Q) {
              return this.endTime = Q, Q;
            }, H.prototype.get_fadeSpan = function() {
              return this.fadeSpan;
            }, H.prototype.set_fadeSpan = function(Q) {
              return this.fadeSpan = Q, Q;
            }, H.prototype.get_fadeType = function() {
              return this.fadeType;
            }, H.prototype.set_fadeType = function(Q) {
              return this.fadeType = Q, Q;
            }, H.prototype.get_name = function() {
              return this.name;
            }, H.prototype.set_name = function(Q) {
              return this.name = Q, Q;
            }, H.prototype.get_opacity = function() {
              return this.opacity;
            }, H.prototype.set_opacity = function(Q) {
              return this.opacity = Q, Q;
            }, H.prototype.get_opened = function() {
              return this.opened;
            }, H.prototype.set_opened = function(Q) {
              return this.opened = Q, Q;
            }, H.prototype.get_referenceFrame = function() {
              return this.referenceFrame;
            }, H.prototype.set_referenceFrame = function(Q) {
              return this.referenceFrame = Q, Q;
            }, H.prototype.get_startTime = function() {
              return this.startTime;
            }, H.prototype.set_startTime = function(Q) {
              return this.startTime = Q, Q;
            }, H.prototype.get_version = function() {
              return this.version;
            }, H.prototype.set_version = function(Q) {
              return this.version = Q, Q;
            }, H;
          }()
        ), ze = [
          "colorMapperName",
          "overrideDefaultLayer"
        ];
        Ne.concat(ze);
        function se(H, Q) {
          var q = "set_" + Q[0], ue = Q[1];
          H[q](ue);
        }
        function be(H, Q) {
          var q, ue;
          Fe(H, Q);
          try {
            for (var pe = F(ze), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        var Pe = (
          /** @class */
          function(H) {
            x(Q, H);
            function Q(q) {
              var ue = (
                // Here we redundantly copy the generic Layer settings, but TypeScript
                // requires the super() call. Oh well.
                H.call(this, q) || this
              );
              return be(q, ue), ue;
            }
            return Q.prototype.get_colorMapperName = function() {
              return this.colorMapperName;
            }, Q.prototype.set_colorMapperName = function(q) {
              return this.colorMapperName = q, q;
            }, Q.prototype.get_overrideDefaultLayer = function() {
              return this.overrideDefaultLayer;
            }, Q.prototype.set_overrideDefaultLayer = function(q) {
              return this.overrideDefaultLayer = q, q;
            }, Q;
          }($e)
        ), Ve = [
          "altColumn",
          "altType",
          "altUnit",
          "barChartBitmask",
          "beginRange",
          "cartesianCustomScale",
          "cartesianScale",
          "colorMapColumn",
          "colorMapperName",
          "coordinatesType",
          "decay",
          "dynamicColor",
          "dynamicData",
          "endDateColumn",
          "endRange",
          "geometryColumn",
          "hyperlinkColumn",
          "hyperlinkFormat",
          "latColumn",
          "lngColumn",
          "markerColumn",
          "markerIndex",
          "markerScale",
          "nameColumn",
          "normalizeColorMap",
          "normalizeColorMapMax",
          "normalizeColorMapMin",
          "normalizeSize",
          "normalizeSizeClip",
          "normalizeSizeMax",
          "normalizeSizeMin",
          "plotType",
          "pointScaleType",
          "raUnits",
          "scaleFactor",
          "showFarSide",
          "sizeColumn",
          "startDateColumn",
          "timeSeries",
          "xAxisColumn",
          "xAxisReverse",
          "yAxisColumn",
          "yAxisReverse",
          "zAxisColumn",
          "zAxisReverse"
        ];
        Ne.concat(Ve);
        function me(H, Q) {
          var q = "set_" + Q[0], ue = Q[1];
          H[q](ue);
        }
        function Me(H, Q) {
          var q, ue;
          Fe(H, Q);
          try {
            for (var pe = F(Ve), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        var ie = (
          /** @class */
          function(H) {
            x(Q, H);
            function Q(q) {
              var ue = (
                // Here we redundantly copy the generic Layer settings, but TypeScript
                // requires the super() call. Oh well.
                H.call(this, q) || this
              );
              return Me(q, ue), ue;
            }
            return Q.prototype.get_altColumn = function() {
              return this.altColumn;
            }, Q.prototype.set_altColumn = function(q) {
              return this.altColumn = q, q;
            }, Q.prototype.get_altType = function() {
              return this.altType;
            }, Q.prototype.set_altType = function(q) {
              return this.altType = q, q;
            }, Q.prototype.get_altUnit = function() {
              return this.altUnit;
            }, Q.prototype.set_altUnit = function(q) {
              return this.altUnit = q, q;
            }, Q.prototype.get_barChartBitmask = function() {
              return this.barChartBitmask;
            }, Q.prototype.set_barChartBitmask = function(q) {
              return this.barChartBitmask = q, q;
            }, Q.prototype.get_beginRange = function() {
              return this.beginRange;
            }, Q.prototype.set_beginRange = function(q) {
              return this.beginRange = q, q;
            }, Q.prototype.get_cartesianCustomScale = function() {
              return this.cartesianCustomScale;
            }, Q.prototype.set_cartesianCustomScale = function(q) {
              return this.cartesianCustomScale = q, q;
            }, Q.prototype.get_cartesianScale = function() {
              return this.cartesianScale;
            }, Q.prototype.set_cartesianScale = function(q) {
              return this.cartesianScale = q, q;
            }, Q.prototype.get_colorMapColumn = function() {
              return this.colorMapColumn;
            }, Q.prototype.set_colorMapColumn = function(q) {
              return this.colorMapColumn = q, q;
            }, Q.prototype.get_colorMapperName = function() {
              return this.colorMapperName;
            }, Q.prototype.set_colorMapperName = function(q) {
              return this.colorMapperName = q, q;
            }, Q.prototype.get_coordinatesType = function() {
              return this.coordinatesType;
            }, Q.prototype.set_coordinatesType = function(q) {
              return this.coordinatesType = q, q;
            }, Q.prototype.get_decay = function() {
              return this.decay;
            }, Q.prototype.set_decay = function(q) {
              return this.decay = q, q;
            }, Q.prototype.get_dynamicColor = function() {
              return this.dynamicColor;
            }, Q.prototype.set_dynamicColor = function(q) {
              return this.dynamicColor = q, q;
            }, Q.prototype.get_dynamicData = function() {
              return this.dynamicData;
            }, Q.prototype.set_dynamicData = function(q) {
              return this.dynamicData = q, q;
            }, Q.prototype.get_endDateColumn = function() {
              return this.endDateColumn;
            }, Q.prototype.set_endDateColumn = function(q) {
              return this.endDateColumn = q, q;
            }, Q.prototype.get_endRange = function() {
              return this.endRange;
            }, Q.prototype.set_endRange = function(q) {
              return this.endRange = q, q;
            }, Q.prototype.get_geometryColumn = function() {
              return this.geometryColumn;
            }, Q.prototype.set_geometryColumn = function(q) {
              return this.geometryColumn = q, q;
            }, Q.prototype.get_hyperlinkColumn = function() {
              return this.hyperlinkColumn;
            }, Q.prototype.set_hyperlinkColumn = function(q) {
              return this.hyperlinkColumn = q, q;
            }, Q.prototype.get_hyperlinkFormat = function() {
              return this.hyperlinkFormat;
            }, Q.prototype.set_hyperlinkFormat = function(q) {
              return this.hyperlinkFormat = q, q;
            }, Q.prototype.get_latColumn = function() {
              return this.latColumn;
            }, Q.prototype.set_latColumn = function(q) {
              return this.latColumn = q, q;
            }, Q.prototype.get_lngColumn = function() {
              return this.lngColumn;
            }, Q.prototype.set_lngColumn = function(q) {
              return this.lngColumn = q, q;
            }, Q.prototype.get_markerColumn = function() {
              return this.markerColumn;
            }, Q.prototype.set_markerColumn = function(q) {
              return this.markerColumn = q, q;
            }, Q.prototype.get_markerIndex = function() {
              return this.markerIndex;
            }, Q.prototype.set_markerIndex = function(q) {
              return this.markerIndex = q, q;
            }, Q.prototype.get_markerScale = function() {
              return this.markerScale;
            }, Q.prototype.set_markerScale = function(q) {
              return this.markerScale = q, q;
            }, Q.prototype.get_nameColumn = function() {
              return this.nameColumn;
            }, Q.prototype.set_nameColumn = function(q) {
              return this.nameColumn = q, q;
            }, Q.prototype.get_normalizeColorMap = function() {
              return this.normalizeColorMap;
            }, Q.prototype.set_normalizeColorMap = function(q) {
              return this.normalizeColorMap = q, q;
            }, Q.prototype.get_normalizeColorMapMax = function() {
              return this.normalizeColorMapMax;
            }, Q.prototype.set_normalizeColorMapMax = function(q) {
              return this.normalizeColorMapMax = q, q;
            }, Q.prototype.get_normalizeColorMapMin = function() {
              return this.normalizeColorMapMin;
            }, Q.prototype.set_normalizeColorMapMin = function(q) {
              return this.normalizeColorMapMin = q, q;
            }, Q.prototype.get_normalizeSize = function() {
              return this.normalizeSize;
            }, Q.prototype.set_normalizeSize = function(q) {
              return this.normalizeSize = q, q;
            }, Q.prototype.get_normalizeSizeClip = function() {
              return this.normalizeSizeClip;
            }, Q.prototype.set_normalizeSizeClip = function(q) {
              return this.normalizeSizeClip = q, q;
            }, Q.prototype.get_normalizeSizeMax = function() {
              return this.normalizeSizeMax;
            }, Q.prototype.set_normalizeSizeMax = function(q) {
              return this.normalizeSizeMax = q, q;
            }, Q.prototype.get_normalizeSizeMin = function() {
              return this.normalizeSizeMin;
            }, Q.prototype.set_normalizeSizeMin = function(q) {
              return this.normalizeSizeMin = q, q;
            }, Q.prototype.get_plotType = function() {
              return this.plotType;
            }, Q.prototype.set_plotType = function(q) {
              return this.plotType = q, q;
            }, Q.prototype.get_pointScaleType = function() {
              return this.pointScaleType;
            }, Q.prototype.set_pointScaleType = function(q) {
              return this.pointScaleType = q, q;
            }, Q.prototype.get_raUnits = function() {
              return this.raUnits;
            }, Q.prototype.set_raUnits = function(q) {
              return this.raUnits = q, q;
            }, Q.prototype.get_scaleFactor = function() {
              return this.scaleFactor;
            }, Q.prototype.set_scaleFactor = function(q) {
              return this.scaleFactor = q, q;
            }, Q.prototype.get_showFarSide = function() {
              return this.showFarSide;
            }, Q.prototype.set_showFarSide = function(q) {
              return this.showFarSide = q, q;
            }, Q.prototype.get_sizeColumn = function() {
              return this.sizeColumn;
            }, Q.prototype.set_sizeColumn = function(q) {
              return this.sizeColumn = q, q;
            }, Q.prototype.get_startDateColumn = function() {
              return this.startDateColumn;
            }, Q.prototype.set_startDateColumn = function(q) {
              return this.startDateColumn = q, q;
            }, Q.prototype.get_timeSeries = function() {
              return this.timeSeries;
            }, Q.prototype.set_timeSeries = function(q) {
              return this.timeSeries = q, q;
            }, Q.prototype.get_xAxisColumn = function() {
              return this.xAxisColumn;
            }, Q.prototype.set_xAxisColumn = function(q) {
              return this.xAxisColumn = q, q;
            }, Q.prototype.get_xAxisReverse = function() {
              return this.xAxisReverse;
            }, Q.prototype.set_xAxisReverse = function(q) {
              return this.xAxisReverse = q, q;
            }, Q.prototype.get_yAxisColumn = function() {
              return this.yAxisColumn;
            }, Q.prototype.set_yAxisColumn = function(q) {
              return this.yAxisColumn = q, q;
            }, Q.prototype.get_yAxisReverse = function() {
              return this.yAxisReverse;
            }, Q.prototype.set_yAxisReverse = function(q) {
              return this.yAxisReverse = q, q;
            }, Q.prototype.get_zAxisColumn = function() {
              return this.zAxisColumn;
            }, Q.prototype.set_zAxisColumn = function(q) {
              return this.zAxisColumn = q, q;
            }, Q.prototype.get_zAxisReverse = function() {
              return this.zAxisReverse;
            }, Q.prototype.set_zAxisReverse = function(q) {
              return this.zAxisReverse = q, q;
            }, Q;
          }($e)
        ), xe = [
          "id",
          "label",
          "opacity",
          "showHoverLabel",
          "tag"
        ];
        function We(H, Q) {
          var q, ue;
          try {
            for (var pe = F(xe), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        var J = (
          /** @class */
          function() {
            function H(Q) {
              We(Q, this);
            }
            return H.prototype.get_id = function() {
              return this.id;
            }, H.prototype.set_id = function(Q) {
              return this.id = Q, Q;
            }, H.prototype.get_label = function() {
              return this.label;
            }, H.prototype.set_label = function(Q) {
              return this.label = Q, Q;
            }, H.prototype.get_opacity = function() {
              return this.opacity;
            }, H.prototype.set_opacity = function(Q) {
              return this.opacity = Q, Q;
            }, H.prototype.get_showHoverLabel = function() {
              return this.showHoverLabel;
            }, H.prototype.set_showHoverLabel = function(Q) {
              return this.showHoverLabel = Q, Q;
            }, H.prototype.get_tag = function() {
              return this.tag;
            }, H.prototype.set_tag = function(Q) {
              return this.tag = Q, Q;
            }, H;
          }()
        ), we = [
          "fill",
          "fillColor",
          "lineColor",
          "lineWidth",
          "radius",
          "skyRelative"
        ];
        xe.concat(we);
        function Ee(H, Q) {
          var q, ue;
          We(H, Q);
          try {
            for (var pe = F(we), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        (function(H) {
          x(Q, H);
          function Q(q) {
            var ue = H.call(this, q) || this;
            return Ee(q, ue), ue;
          }
          return Q.prototype.get_fill = function() {
            return this.fill;
          }, Q.prototype.set_fill = function(q) {
            return this.fill = q, q;
          }, Q.prototype.get_fillColor = function() {
            return this.fillColor;
          }, Q.prototype.set_fillColor = function(q) {
            return this.fillColor = q, q;
          }, Q.prototype.get_lineColor = function() {
            return this.lineColor;
          }, Q.prototype.set_lineColor = function(q) {
            return this.lineColor = q, q;
          }, Q.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, Q.prototype.set_lineWidth = function(q) {
            return this.lineWidth = q, q;
          }, Q.prototype.get_radius = function() {
            return this.radius;
          }, Q.prototype.set_radius = function(q) {
            return this.radius = q, q;
          }, Q.prototype.get_skyRelative = function() {
            return this.skyRelative;
          }, Q.prototype.set_skyRelative = function(q) {
            return this.skyRelative = q, q;
          }, Q;
        })(J);
        var ne = [
          "fill",
          "fillColor",
          "lineColor",
          "lineWidth"
        ];
        xe.concat(ne);
        function _e(H, Q) {
          var q, ue;
          We(H, Q);
          try {
            for (var pe = F(ne), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        (function(H) {
          x(Q, H);
          function Q(q) {
            var ue = H.call(this, q) || this;
            return _e(q, ue), ue;
          }
          return Q.prototype.get_fill = function() {
            return this.fill;
          }, Q.prototype.set_fill = function(q) {
            return this.fill = q, q;
          }, Q.prototype.get_fillColor = function() {
            return this.fillColor;
          }, Q.prototype.set_fillColor = function(q) {
            return this.fillColor = q, q;
          }, Q.prototype.get_lineColor = function() {
            return this.lineColor;
          }, Q.prototype.set_lineColor = function(q) {
            return this.lineColor = q, q;
          }, Q.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, Q.prototype.set_lineWidth = function(q) {
            return this.lineWidth = q, q;
          }, Q;
        })(J);
        var Se = [
          "lineColor",
          "lineWidth"
        ];
        xe.concat(Se);
        function ke(H, Q) {
          var q, ue;
          We(H, Q);
          try {
            for (var pe = F(Se), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        (function(H) {
          x(Q, H);
          function Q(q) {
            var ue = H.call(this, q) || this;
            return ke(q, ue), ue;
          }
          return Q.prototype.get_lineColor = function() {
            return this.lineColor;
          }, Q.prototype.set_lineColor = function(q) {
            return this.lineColor = q, q;
          }, Q.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, Q.prototype.set_lineWidth = function(q) {
            return this.lineWidth = q, q;
          }, Q;
        })(J);
        var Ue = [
          "altColumn",
          "altType",
          "altUnit",
          "autoUpdate",
          "beginRange",
          "cartesianCustomScale",
          "cartesianScale",
          "colorMapColumn",
          "coordinatesType",
          "dataSourceUrl",
          "decay",
          "dynamicData",
          "endDateColumn",
          "endRange",
          "hyperlinkColumn",
          "hyperlinkFormat",
          "latColumn",
          "lngColumn",
          "markerColumn",
          "markerIndex",
          "markerScale",
          "nameColumn",
          "plotType",
          "pointScaleType",
          "raUnits",
          "scaleFactor",
          "showFarSide",
          "sizeColumn",
          "startDateColumn",
          "timeSeries",
          "xAxisColumn",
          "xAxisReverse",
          "yAxisColumn",
          "yAxisReverse",
          "zAxisColumn",
          "zAxisReverse"
        ];
        Ne.concat(Ue);
        function je(H, Q) {
          var q, ue;
          Fe(H, Q);
          try {
            for (var pe = F(Ue), ge = pe.next(); !ge.done; ge = pe.next()) {
              var Le = ge.value;
              Q["set_" + Le](H["get_" + Le]());
            }
          } catch (Ie) {
            q = { error: Ie };
          } finally {
            try {
              ge && !ge.done && (ue = pe.return) && ue.call(pe);
            } finally {
              if (q)
                throw q.error;
            }
          }
        }
        (function(H) {
          x(Q, H);
          function Q(q) {
            var ue = (
              // Here we redundantly copy the generic Layer settings, but TypeScript
              // requires the super() call. Oh well.
              H.call(this, q) || this
            );
            return je(q, ue), ue;
          }
          return Q.prototype.get_altColumn = function() {
            return this.altColumn;
          }, Q.prototype.set_altColumn = function(q) {
            return this.altColumn = q, q;
          }, Q.prototype.get_altType = function() {
            return this.altType;
          }, Q.prototype.set_altType = function(q) {
            return this.altType = q, q;
          }, Q.prototype.get_altUnit = function() {
            return this.altUnit;
          }, Q.prototype.set_altUnit = function(q) {
            return this.altUnit = q, q;
          }, Q.prototype.get_autoUpdate = function() {
            return this.autoUpdate;
          }, Q.prototype.set_autoUpdate = function(q) {
            return this.autoUpdate = q, q;
          }, Q.prototype.get_beginRange = function() {
            return this.beginRange;
          }, Q.prototype.set_beginRange = function(q) {
            return this.beginRange = q, q;
          }, Q.prototype.get_cartesianCustomScale = function() {
            return this.cartesianCustomScale;
          }, Q.prototype.set_cartesianCustomScale = function(q) {
            return this.cartesianCustomScale = q, q;
          }, Q.prototype.get_cartesianScale = function() {
            return this.cartesianScale;
          }, Q.prototype.set_cartesianScale = function(q) {
            return this.cartesianScale = q, q;
          }, Q.prototype.get_colorMapColumn = function() {
            return this.colorMapColumn;
          }, Q.prototype.set_colorMapColumn = function(q) {
            return this.colorMapColumn = q, q;
          }, Q.prototype.get_coordinatesType = function() {
            return this.coordinatesType;
          }, Q.prototype.set_coordinatesType = function(q) {
            return this.coordinatesType = q, q;
          }, Q.prototype.get_dataSourceUrl = function() {
            return this.dataSourceUrl;
          }, Q.prototype.set_dataSourceUrl = function(q) {
            return this.dataSourceUrl = q, q;
          }, Q.prototype.get_decay = function() {
            return this.decay;
          }, Q.prototype.set_decay = function(q) {
            return this.decay = q, q;
          }, Q.prototype.get_dynamicData = function() {
            return this.dynamicData;
          }, Q.prototype.set_dynamicData = function(q) {
            return this.dynamicData = q, q;
          }, Q.prototype.get_endDateColumn = function() {
            return this.endDateColumn;
          }, Q.prototype.set_endDateColumn = function(q) {
            return this.endDateColumn = q, q;
          }, Q.prototype.get_endRange = function() {
            return this.endRange;
          }, Q.prototype.set_endRange = function(q) {
            return this.endRange = q, q;
          }, Q.prototype.get_hyperlinkColumn = function() {
            return this.hyperlinkColumn;
          }, Q.prototype.set_hyperlinkColumn = function(q) {
            return this.hyperlinkColumn = q, q;
          }, Q.prototype.get_hyperlinkFormat = function() {
            return this.hyperlinkFormat;
          }, Q.prototype.set_hyperlinkFormat = function(q) {
            return this.hyperlinkFormat = q, q;
          }, Q.prototype.get_latColumn = function() {
            return this.latColumn;
          }, Q.prototype.set_latColumn = function(q) {
            return this.latColumn = q, q;
          }, Q.prototype.get_lngColumn = function() {
            return this.lngColumn;
          }, Q.prototype.set_lngColumn = function(q) {
            return this.lngColumn = q, q;
          }, Q.prototype.get_markerColumn = function() {
            return this.markerColumn;
          }, Q.prototype.set_markerColumn = function(q) {
            return this.markerColumn = q, q;
          }, Q.prototype.get_markerIndex = function() {
            return this.markerIndex;
          }, Q.prototype.set_markerIndex = function(q) {
            return this.markerIndex = q, q;
          }, Q.prototype.get_markerScale = function() {
            return this.markerScale;
          }, Q.prototype.set_markerScale = function(q) {
            return this.markerScale = q, q;
          }, Q.prototype.get_nameColumn = function() {
            return this.nameColumn;
          }, Q.prototype.set_nameColumn = function(q) {
            return this.nameColumn = q, q;
          }, Q.prototype.get_plotType = function() {
            return this.plotType;
          }, Q.prototype.set_plotType = function(q) {
            return this.plotType = q, q;
          }, Q.prototype.get_pointScaleType = function() {
            return this.pointScaleType;
          }, Q.prototype.set_pointScaleType = function(q) {
            return this.pointScaleType = q, q;
          }, Q.prototype.get_raUnits = function() {
            return this.raUnits;
          }, Q.prototype.set_raUnits = function(q) {
            return this.raUnits = q, q;
          }, Q.prototype.get_scaleFactor = function() {
            return this.scaleFactor;
          }, Q.prototype.set_scaleFactor = function(q) {
            return this.scaleFactor = q, q;
          }, Q.prototype.get_showFarSide = function() {
            return this.showFarSide;
          }, Q.prototype.set_showFarSide = function(q) {
            return this.showFarSide = q, q;
          }, Q.prototype.get_sizeColumn = function() {
            return this.sizeColumn;
          }, Q.prototype.set_sizeColumn = function(q) {
            return this.sizeColumn = q, q;
          }, Q.prototype.get_startDateColumn = function() {
            return this.startDateColumn;
          }, Q.prototype.set_startDateColumn = function(q) {
            return this.startDateColumn = q, q;
          }, Q.prototype.get_timeSeries = function() {
            return this.timeSeries;
          }, Q.prototype.set_timeSeries = function(q) {
            return this.timeSeries = q, q;
          }, Q.prototype.get_xAxisColumn = function() {
            return this.xAxisColumn;
          }, Q.prototype.set_xAxisColumn = function(q) {
            return this.xAxisColumn = q, q;
          }, Q.prototype.get_xAxisReverse = function() {
            return this.xAxisReverse;
          }, Q.prototype.set_xAxisReverse = function(q) {
            return this.xAxisReverse = q, q;
          }, Q.prototype.get_yAxisColumn = function() {
            return this.yAxisColumn;
          }, Q.prototype.set_yAxisColumn = function(q) {
            return this.yAxisColumn = q, q;
          }, Q.prototype.get_yAxisReverse = function() {
            return this.yAxisReverse;
          }, Q.prototype.set_yAxisReverse = function(q) {
            return this.yAxisReverse = q, q;
          }, Q.prototype.get_zAxisColumn = function() {
            return this.zAxisColumn;
          }, Q.prototype.set_zAxisColumn = function(q) {
            return this.zAxisColumn = q, q;
          }, Q.prototype.get_zAxisReverse = function() {
            return this.zAxisReverse;
          }, Q.prototype.set_zAxisReverse = function(q) {
            return this.zAxisReverse = q, q;
          }, Q;
        })($e);
        var He = (
          /** @class */
          function() {
            function H(Q, q, ue) {
              this.payload = Q, this.resolve = q, this.reject = ue;
            }
            return H;
          }()
        ), ct = (
          /** @class */
          function() {
            function H(Q) {
              Q === void 0 && (Q = {});
              var q = this;
              this.readyPromises = [], this.readyFired = !1, this.arrivePromises = [], this.arriveSeqnum = 0, this.collectionLoadedPromises = [], this.collectionRequests = /* @__PURE__ */ new Map(), this.tourReadyPromises = [], this.tourReadySeqnum = 0, this.tourEndedCallback = null;
              var ue = new Oe.WWTControlBuilder(Q.elId || "wwt");
              if (Q.startInternalRenderLoop !== void 0 && ue.startRenderLoop(Q.startInternalRenderLoop), Q.freestandingAssetBaseurl !== void 0 && ue.freestandingMode(Q.freestandingAssetBaseurl), Q.startLatDeg !== void 0 && Q.startLngDeg !== void 0) {
                var pe = Q.startZoomDeg || 360;
                ue.initialView(Q.startLatDeg, Q.startLngDeg, pe);
              }
              Q.startMode !== void 0 && ue.initialMode(Q.startMode), this.si = ue.create(), this.ctl = Oe.WWTControl.singleton, this.lm = Oe.LayerManager, this.stc = Oe.SpaceTimeController, this.applySetting(["showConstellationBoundries", !1]), this.applySetting(["showConstellationFigures", !1]), this.applySetting(["showConstellationSelection", !1]), this.applySetting(["showCrosshairs", !1]), this.si.add_ready(function(ge) {
                var Le, Ie;
                try {
                  for (var Ge = F(q.readyPromises), Be = Ge.next(); !Be.done; Be = Ge.next()) {
                    var Ke = Be.value;
                    Ke.resolve();
                  }
                } catch (rt) {
                  Le = { error: rt };
                } finally {
                  try {
                    Be && !Be.done && (Ie = Ge.return) && Ie.call(Ge);
                  } finally {
                    if (Le)
                      throw Le.error;
                  }
                }
                q.readyFired = !0, q.readyPromises = [];
              }), this.si.add_arrived(function(ge, Le) {
                var Ie, Ge;
                try {
                  for (var Be = F(q.arrivePromises), Ke = Be.next(); !Ke.done; Ke = Be.next()) {
                    var rt = Ke.value;
                    rt.payload < q.arriveSeqnum ? rt.reject("superseded") : rt.resolve();
                  }
                } catch (lt) {
                  Ie = { error: lt };
                } finally {
                  try {
                    Ke && !Ke.done && (Ge = Be.return) && Ge.call(Be);
                  } finally {
                    if (Ie)
                      throw Ie.error;
                  }
                }
                q.arrivePromises = [];
              }), this.si.add_tourReady(function(ge) {
                var Le, Ie;
                try {
                  for (var Ge = F(q.tourReadyPromises), Be = Ge.next(); !Be.done; Be = Ge.next()) {
                    var Ke = Be.value;
                    Ke.payload < q.tourReadySeqnum ? Ke.reject("superseded") : Ke.resolve();
                  }
                } catch (rt) {
                  Le = { error: rt };
                } finally {
                  try {
                    Be && !Be.done && (Ie = Ge.return) && Ie.call(Ge);
                  } finally {
                    if (Le)
                      throw Le.error;
                  }
                }
                q.tourReadyPromises = [];
              }), Oe.TourPlayer.add_tourEnded(function(ge) {
                var Le = q.getActiveTourPlayer();
                Le !== null && q.tourEndedCallback !== null && q.tourEndedCallback(Le);
              });
            }
            return H.prototype.waitForReady = function() {
              return d(this, void 0, void 0, function() {
                var Q = this;
                return U(this, function(q) {
                  return [2, new Promise(function(ue, pe) {
                    Q.readyFired ? ue() : Q.readyPromises.push(new He(null, ue, pe));
                  })];
                });
              });
            }, H.prototype.makeArrivePromise = function(Q) {
              var q, ue, pe = this;
              this.arriveSeqnum += 1;
              var ge = this.arriveSeqnum;
              try {
                for (var Le = F(this.arrivePromises), Ie = Le.next(); !Ie.done; Ie = Le.next()) {
                  var Ge = Ie.value;
                  Ge.reject("superseded");
                }
              } catch (Be) {
                q = { error: Be };
              } finally {
                try {
                  Ie && !Ie.done && (ue = Le.return) && ue.call(Le);
                } finally {
                  if (q)
                    throw q.error;
                }
              }
              return this.arrivePromises = [], new Promise(function(Be, Ke) {
                pe.arriveSeqnum > ge ? Ke("superseded") : Q ? Be() : pe.arrivePromises.push(new He(ge, Be, Ke));
              });
            }, H.prototype.gotoRADecZoom = function(Q, q, ue, pe, ge) {
              return d(this, void 0, void 0, function() {
                return U(this, function(Le) {
                  return this.ctl.gotoRADecZoom(Q * D, q * M, ue, pe, ge), [2, this.makeArrivePromise(pe)];
                });
              });
            }, H.prototype.timeToRADecZoom = function(Q, q, ue, pe) {
              var ge = this.ctl.timeToRADecZoom(Q * D, q * M, ue, pe);
              return ge;
            }, H.prototype.gotoTarget = function(Q) {
              return d(this, void 0, void 0, function() {
                return U(this, function(q) {
                  return this.ctl.gotoTarget(Q.place, Q.noZoom, Q.instant, Q.trackObject), [2, this.makeArrivePromise(Q.instant)];
                });
              });
            }, H.prototype.addImagesetToRepository = function(Q) {
              return Oe.WWTControl.addImageSetToRepository(Q);
            }, H.prototype.loadImageCollection = function(Q, q) {
              return d(this, void 0, void 0, function() {
                var ue, pe, ge = this;
                return U(this, function(Le) {
                  return ue = this.collectionRequests.get(Q), ue != null ? [2, Promise.resolve(ue)] : (ue === void 0 && (this.collectionRequests.set(Q, null), pe = { f: null }, q === void 0 && (q = !1), pe.f = Oe.Wtml.getWtmlFile(Q, function() {
                    var Ie = pe.f;
                    ge.collectionRequests.set(Q, Ie), ge.collectionLoadedPromises = ge.collectionLoadedPromises.filter(function(Ge) {
                      return Ge.payload == Q ? (Ge.resolve(Ie), !1) : !0;
                    });
                  }, q)), [2, new Promise(function(Ie, Ge) {
                    var Be = ge.collectionRequests.get(Q);
                    Be != null ? Ie(Be) : ge.collectionLoadedPromises.push(new He(Q, Ie, Ge));
                  })]);
                });
              });
            }, H.prototype.addImageSetLayer = function(Q) {
              return d(this, void 0, void 0, function() {
                var q = this;
                return U(this, function(ue) {
                  return [2, new Promise(function(pe, ge) {
                    q.si.addImageSetLayer(Q.url, Q.mode, Q.name, Q.goto, function(Le) {
                      pe(Le);
                    });
                  })];
                });
              });
            }, H.prototype.setImageSetLayerOrder = function(Q) {
              this.si.setImageSetLayerOrder(Q.id, Q.order);
            }, H.prototype.stretchFitsLayer = function(Q) {
              var q = this.lm.get_layerList()[Q.id];
              if (q && q instanceof Oe.ImageSetLayer) {
                q.setImageScalePhysical(Q.stretch, Q.vmin, Q.vmax);
                var ue = q.getFitsImage();
                ue !== null && (q.get_imageSet().get_fitsProperties().transparentBlack = !1);
              }
            }, H.prototype.setFitsLayerColormap = function(Q) {
              var q = this.lm.get_layerList()[Q.id];
              q && q instanceof Oe.ImageSetLayer && q.set_colorMapperName(Q.name);
            }, H.prototype.applyFitsLayerSettings = function(Q) {
              var q, ue, pe = this.lm.get_layerList()[Q.id];
              if (pe && pe instanceof Oe.ImageSetLayer)
                try {
                  for (var ge = F(Q.settings), Le = ge.next(); !Le.done; Le = ge.next()) {
                    var Ie = Le.value;
                    se(pe, Ie);
                  }
                } catch (Ge) {
                  q = { error: Ge };
                } finally {
                  try {
                    Le && !Le.done && (ue = ge.return) && ue.call(ge);
                  } finally {
                    if (q)
                      throw q.error;
                  }
                }
            }, H.prototype.updateTableLayer = function(Q) {
              var q = this.lm.get_layerList()[Q.id];
              q && q instanceof Oe.SpreadSheetLayer && q.updateData(Q.dataCsv, !0, !0, !0);
            }, H.prototype.applyTableLayerSettings = function(Q) {
              var q, ue, pe = this.lm.get_layerList()[Q.id];
              if (pe && pe instanceof Oe.SpreadSheetLayer)
                try {
                  for (var ge = F(Q.settings), Le = ge.next(); !Le.done; Le = ge.next()) {
                    var Ie = Le.value;
                    me(pe, Ie);
                  }
                } catch (Ge) {
                  q = { error: Ge };
                } finally {
                  try {
                    Le && !Le.done && (ue = ge.return) && ue.call(ge);
                  } finally {
                    if (q)
                      throw q.error;
                  }
                }
            }, H.prototype.addCatalogHipsByName = function(Q) {
              return d(this, void 0, void 0, function() {
                var q = this;
                return U(this, function(ue) {
                  return [2, new Promise(function(pe, ge) {
                    var Le = q.ctl.getImagesetByName(Q.name);
                    Le === null ? ge() : q.ctl.renderContext.addCatalogHips(Le, function() {
                      pe(Le);
                    });
                  })];
                });
              });
            }, H.prototype.getCatalogHipsDataInView = function(Q) {
              return d(this, void 0, void 0, function() {
                var q = this;
                return U(this, function(ue) {
                  return [2, new Promise(function(pe, ge) {
                    q.ctl.renderContext.getCatalogHipsDataInView(Q.imageset, Q.limit, function(Le) {
                      pe(Le);
                    });
                  })];
                });
              });
            }, H.prototype.applySetting = function(Q) {
              var q = "set_" + Q[0], ue = Q[1];
              this.si.settings[q](ue);
            }, H.prototype.setBackgroundImageByName = function(Q) {
              this.ctl.setBackgroundImageByName(Q);
            }, H.prototype.setForegroundImageByName = function(Q) {
              this.ctl.setForegroundImageByName(Q);
            }, H.prototype.setForegroundOpacity = function(Q) {
              this.si.setForegroundOpacity(Q);
            }, H.prototype.setupForImageset = function(Q) {
              var q;
              Q.background ? q = Q.background : q = this.ctl.getDefaultImageset(Q.foreground.get_dataSetType(), Q.foreground.get_bandPass());
              var ue;
              Q.foreground.get_levels() > 0 ? ue = Q.foreground.get_baseTileDegrees() : ue = Q.foreground.get_baseTileDegrees() * Q.foreground.get_offsetY() * 2;
              var pe = new Oe.Place();
              pe.set_type(Q.foreground.get_dataSetType()), pe.set_backgroundImageset(q), pe.set_studyImageset(Q.foreground);
              var ge = !1;
              switch (Q.foreground.get_dataSetType()) {
                case ve.sky:
                  ue == 180 ? ge = !0 : (pe.set_RA(Q.foreground.get_centerX() * G), pe.set_dec(Q.foreground.get_centerY()), pe.set_zoomLevel(ue * 6));
                  break;
                case ve.earth:
                case ve.planet:
                  pe.set_zoomLevel(120), ue != 180 && (pe.set_lng(Q.foreground.get_centerX()), pe.set_lat(Q.foreground.get_centerY()));
                  break;
                default:
                  pe.set_zoomLevel(360);
                  break;
              }
              this.ctl.renderContext.set_backgroundImageset(q), this.ctl.gotoTarget(
                pe,
                ge,
                !0,
                // instant
                !0
                // trackObject
              );
            }, H.prototype.getActiveTourPlayer = function() {
              return this.ctl.uiController === null ? null : this.ctl.uiController instanceof Oe.TourPlayer ? this.ctl.uiController : null;
            }, H.prototype.getIsTourPlaying = function(Q) {
              return Oe.TourPlayer.get_playing();
            }, H.prototype.loadTour = function(Q) {
              return d(this, void 0, void 0, function() {
                var q, ue, pe, ge, Le, Ie, Ge = this;
                return U(this, function(Be) {
                  this.ctl.loadTour(Q), this.tourReadySeqnum += 1, q = this.tourReadySeqnum;
                  try {
                    for (ue = F(this.tourReadyPromises), pe = ue.next(); !pe.done; pe = ue.next())
                      ge = pe.value, ge.reject("superseded");
                  } catch (Ke) {
                    Le = { error: Ke };
                  } finally {
                    try {
                      pe && !pe.done && (Ie = ue.return) && Ie.call(ue);
                    } finally {
                      if (Le)
                        throw Le.error;
                    }
                  }
                  return this.tourReadyPromises = [], [2, new Promise(function(Ke, rt) {
                    Ge.tourReadySeqnum > q ? rt("superseded") : Ge.tourReadyPromises.push(new He(q, Ke, rt));
                  })];
                });
              });
            }, H.prototype.loadAndPlayTour = function(Q) {
              return d(this, void 0, void 0, function() {
                var q, ue, pe, ge, Le, Ie, Ge = this;
                return U(this, function(Be) {
                  this.ctl.playTour(Q), this.tourReadySeqnum += 1, q = this.tourReadySeqnum;
                  try {
                    for (ue = F(this.tourReadyPromises), pe = ue.next(); !pe.done; pe = ue.next())
                      ge = pe.value, ge.reject("superseded");
                  } catch (Ke) {
                    Le = { error: Ke };
                  } finally {
                    try {
                      pe && !pe.done && (Ie = ue.return) && Ie.call(ue);
                    } finally {
                      if (Le)
                        throw Le.error;
                    }
                  }
                  return this.tourReadyPromises = [], [2, new Promise(function(Ke, rt) {
                    Ge.tourReadySeqnum > q ? rt("superseded") : Ge.tourReadyPromises.push(new He(q, Ke, rt));
                  })];
                });
              });
            }, H.prototype.getEffectiveTourTimecode = function() {
              var Q = this.getActiveTourPlayer();
              if (Q === null)
                return 0;
              var q = Q.get_tour();
              if (q === null)
                return 0;
              var ue = q.get_currentTourstopIndex();
              if (ue < 0)
                return 0;
              var pe = q.elapsedTimeTillTourstop(ue), ge = q.get_tourStops()[ue], Le = ge.get_tweenPosition() * ge.get_duration() * 1e-3, Ie = pe + Le;
              if (Ie < 0)
                return 0;
              var Ge = q.get_runTime() * 1e-3;
              return Ie > Ge ? Ge : Ie;
            }, H.prototype.seekToTourTimecode = function(Q) {
              var q = this.getActiveTourPlayer();
              if (q !== null) {
                var ue = q.get_tour();
                if (ue !== null) {
                  for (var pe = ue.get_tourStops(), ge = pe.length - 1, Le = 0; Le < pe.length; Le++) {
                    var Ie = ue.elapsedTimeTillTourstop(Le);
                    if (Ie >= Q) {
                      ge = Le - 1;
                      break;
                    }
                  }
                  ge < 0 && (ge = 0), q.playFromTourstop(pe[ge]);
                }
              }
            }, H.prototype.captureFrame = function(Q) {
              var q = this;
              return new Promise(function(ue, pe) {
                q.ctl.captureFrame(function(ge) {
                  return ue(ge);
                }, Q.width, Q.height, Q.format);
              });
            }, H.prototype.captureVideo = function(Q) {
              var q = this.ctl, ue = new ReadableStream({
                start: function(pe) {
                  function ge() {
                    var Le = 0;
                    q.captureVideo(function(Ie) {
                      Le++, pe.enqueue(Ie), Le >= Q.totalFrames && pe.close();
                    }, Q.width, Q.height, Q.framesPerSecond, Q.totalFrames, Q.format);
                  }
                  return ge();
                }
              });
              return ue;
            }, H;
          }()
        ), Je = (
          /** @class */
          function() {
            function H() {
              this.inst = null, this.onLinkedCallbacks = [];
            }
            return H.prototype.link = function(Q) {
              var q, ue;
              if (this.inst !== null)
                throw new Error("must unlink WWT Pinia global state before relinking");
              this.inst = Q;
              try {
                for (var pe = F(this.onLinkedCallbacks), ge = pe.next(); !ge.done; ge = pe.next()) {
                  var Le = ge.value;
                  Le();
                }
              } catch (Ie) {
                q = { error: Ie };
              } finally {
                try {
                  ge && !ge.done && (ue = pe.return) && ue.call(pe);
                } finally {
                  if (q)
                    throw q.error;
                }
              }
              this.onLinkedCallbacks = [];
            }, H.prototype.unlink = function() {
              this.inst = null;
            }, H;
          }()
        ), Xe = (
          /** @class */
          function() {
            function H(Q, q, ue, pe, ge, Le) {
              Le === void 0 && (Le = null), this.url = Q, this.name = q, this.type = ue, this.description = pe, this.extension = ge, this.id = Le;
            }
            return H.fromImageset = function(Q) {
              var q, ue;
              return new H(Q.get_url(), Q.get_name(), Q.get_dataSetType(), Q.get_creditsText(), Q.get_extension(), (ue = (q = Q.get_hipsProperties()) === null || q === void 0 ? void 0 : q.get_catalogSpreadSheetLayer().id.toString()) !== null && ue !== void 0 ? ue : null);
            }, H;
          }()
        ), Ze = (
          /** @class */
          function() {
            function H(Q, q, ue) {
              this.id = Q, this.referenceFrame = q, this.name = ue ?? Q;
            }
            return H.prototype.setName = function(Q) {
              this.name = Q;
            }, H;
          }()
        ), tt = (
          /** @class */
          function() {
            function H(Q) {
              this.guidText = Q.id.toString(), this.settings = new Pe(Q);
              var q = Q.get_imageSet().get_fitsProperties();
              this.scaleType = q.scaleType, this.vmin = q.lowerCut, this.vmax = q.upperCut, this.colormapName = q.colorMapName;
            }
            return H.prototype.getGuid = function() {
              return this.guidText;
            }, H;
          }()
        );
        function et(H) {
          if (H.inst === null)
            throw new Error("cannot get activeLayersList without linking to WWTInstance");
          var Q = [];
          function q(pe) {
            var ge, Le, Ie, Ge;
            try {
              for (var Be = F(pe.layers), Ke = Be.next(); !Ke.done; Ke = Be.next()) {
                var rt = Ke.value;
                Q.push(rt.id.toString());
              }
            } catch (Mt) {
              ge = { error: Mt };
            } finally {
              try {
                Ke && !Ke.done && (Le = Be.return) && Le.call(Be);
              } finally {
                if (ge)
                  throw ge.error;
              }
            }
            try {
              for (var lt = F(Object.entries(pe.childMaps)), dt = lt.next(); !dt.done; dt = lt.next()) {
                var pt = X(dt.value, 2), bt = pt[0], St = pt[1];
                q(St);
              }
            } catch (Mt) {
              Ie = { error: Mt };
            } finally {
              try {
                dt && !dt.done && (Ge = lt.return) && Ge.call(lt);
              } finally {
                if (Ie)
                  throw Ie.error;
              }
            }
          }
          var ue = H.inst.lm.get_allMaps()[H.inst.ctl.getCurrentReferenceFrame()];
          return ue && q(ue), Q;
        }
        function _t() {
          return Oe.WWTControl.getImageSets().map(Xe.fromImageset);
        }
        var at = N("wwt-engine", {
          // NOTE: We were originally alphabetizing these all, but now I think it will be
          // better to group topically related fields.
          state: function() {
            return {
              activeLayers: [],
              availableImagesets: [],
              backgroundImageset: null,
              clockDiscontinuities: 0,
              clockRate: 1,
              currentTime: /* @__PURE__ */ new Date(),
              decRad: 0,
              foregroundImageset: null,
              foregroundOpacity: 100,
              imagesetLayers: {},
              isTourPlayerActive: !1,
              isTourPlaying: !1,
              raRad: 0,
              renderType: ve.sky,
              rollRad: 0,
              spreadSheetLayers: {},
              timeAtStartup: Date.now(),
              tourCompletions: 0,
              tourRunTime: null,
              tourStopStartTimes: [],
              tourTimecode: 0,
              showWebGl2Warning: !1,
              zoomDeg: 0
            };
          },
          getters: {
            lookupImageset: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot lookupImageset without linking to WWTInstance");
                return Q.$wwt.inst.ctl.getImagesetByName(q);
              };
            },
            findRADecForScreenPoint: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot findRADecForScreenPoint without linking to WWTInstance");
                var ue = Q.$wwt.inst.ctl.getCoordinatesForScreenPoint(q.x, q.y);
                return { ra: (15 * ue.x + 720) % 360, dec: ue.y };
              };
            },
            findScreenPointForRADec: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot findScreenPointForRADec without linking to WWTInstance");
                return Q.$wwt.inst.ctl.getScreenPointForCoordinates(q.ra / 15, q.dec);
              };
            },
            imagesetStateForLayer: function(H) {
              return function(Q) {
                return H.imagesetLayers[Q] || null;
              };
            },
            activeImagesetLayerStates: function() {
              var H, Q, q = [];
              try {
                for (var ue = F(this.activeLayers), pe = ue.next(); !pe.done; pe = ue.next()) {
                  var ge = pe.value, Le = this.imagesetLayers[ge];
                  Le && q.push(Le);
                }
              } catch (Ie) {
                H = { error: Ie };
              } finally {
                try {
                  pe && !pe.done && (Q = ue.return) && Q.call(ue);
                } finally {
                  if (H)
                    throw H.error;
                }
              }
              return q;
            },
            catalogLayerKey: function(H) {
              return function(Q) {
                var q;
                return (q = Q.id) !== null && q !== void 0 ? q : "";
              };
            },
            imagesetForLayer: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get imagesetForLayer without linking to WWTInstance");
                var ue = Q.$wwt.inst.lm.get_layerList()[q];
                return ue !== null && ue instanceof Oe.ImageSetLayer ? ue.get_imageSet() : null;
              };
            },
            imagesetLayerById: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get imagesetLayerById without linking to WWTInstance");
                var ue = Q.layerById(q);
                return ue !== null && ue instanceof Oe.ImageSetLayer ? ue : null;
              };
            },
            layerForHipsCatalog: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get layerForHipsCatalog without linking to WWTInstance");
                var ue = Oe.Guid.createFrom(q).toString();
                return Q.spreadSheetLayerById(ue);
              };
            },
            layerById: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get layerById without linking to WWTInstance");
                return Q.$wwt.inst.lm.get_layerList()[q];
              };
            },
            spreadsheetStateForHipsCatalog: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get spreadsheetStateForHipsCatalog without linking to WWTInstance");
                var ue = Oe.Guid.createFrom(q).toString();
                return H.spreadSheetLayers[ue] || null;
              };
            },
            spreadSheetLayerById: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get spreadsheetLayerById without linking to WWTInstance");
                var ue = Q.layerById(q);
                return ue !== null && ue instanceof Oe.SpreadSheetLayer ? ue : null;
              };
            },
            spreadsheetStateById: function(H) {
              return function(Q) {
                return H.spreadSheetLayers[Q] || null;
              };
            },
            spreadSheetLayer: function(H) {
              var Q = this;
              return function(q) {
                if (Q.$wwt.inst === null)
                  throw new Error("cannot get spreadSheetLayer without linking to WWTInstance");
                var ue = Q.catalogLayerKey(q);
                return Q.spreadSheetLayerById(ue);
              };
            },
            spreadsheetState: function(H) {
              var Q = this;
              return function(q) {
                var ue = Q.catalogLayerKey(q);
                return H.spreadSheetLayers[ue] || null;
              };
            }
          },
          actions: {
            internalLinkToInstance: function(H) {
              this.$wwt.link(H);
            },
            internalUnlinkFromInstance: function() {
              this.$wwt.unlink();
            },
            internalUpdate: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot internalUpdate without linking to WWTInstance");
              var H = this.$wwt.inst, Q = H.si.getRA() * k;
              this.raRad != Q && (this.raRad = Q);
              var q = H.si.getDec() * B;
              this.decRad != q && (this.decRad = q);
              var ue = H.ctl.renderContext.viewCamera.zoom;
              this.zoomDeg != ue && (this.zoomDeg = ue);
              var pe = H.ctl.renderContext.viewCamera.rotation;
              this.rollRad != pe && (this.rollRad = pe);
              var ge = H.ctl.renderContext.get_backgroundImageset() || null;
              this.backgroundImageset != ge && (this.backgroundImageset = ge);
              var Le = H.stc.get_now();
              this.currentTime != Le && (this.currentTime = Le);
              var Ie = H.ctl.renderContext.get_foregroundImageset() || null;
              this.foregroundImageset != Ie && (this.foregroundImageset = Ie), this.foregroundOpacity != H.ctl.renderContext.viewCamera.opacity && (this.foregroundOpacity = H.ctl.renderContext.viewCamera.opacity), this.renderType != H.ctl.renderType && (this.renderType = H.ctl.renderType);
              var Ge = H.getActiveTourPlayer();
              this.tourTimecode = H.getEffectiveTourTimecode(), Ge !== null ? (this.isTourPlayerActive = !0, this.isTourPlaying = H.getIsTourPlaying(Ge)) : (this.isTourPlayerActive = !1, this.isTourPlaying = !1);
              var Be = !H.si.isUsingWebGl2() && Date.now() - this.timeAtStartup < 15e3;
              this.showWebGl2Warning != Be && (this.showWebGl2Warning = Be);
            },
            internalIncrementTourCompletions: function() {
              this.tourCompletions += 1;
            },
            applySetting: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot applySetting without linking to WWTInstance");
              this.$wwt.inst.applySetting(H);
            },
            setBackgroundImageByName: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setBackgroundImageByName without linking to WWTInstance");
              this.$wwt.inst.setBackgroundImageByName(H);
            },
            setForegroundImageByName: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setForegroundImageByName without linking to WWTInstance");
              this.$wwt.inst.setForegroundImageByName(H);
            },
            setForegroundOpacity: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setForegroundOpacity without linking to WWTInstance");
              this.$wwt.inst.setForegroundOpacity(H), this.foregroundOpacity = H;
            },
            setupForImageset: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setupForImageset without linking to WWTInstance");
              this.$wwt.inst.setupForImageset(H);
            },
            zoom: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot zoom without linking to WWTInstance");
              this.$wwt.inst.ctl.zoom(H);
            },
            move: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot move without linking to WWTInstance");
              this.$wwt.inst.ctl.move(H.x, H.y);
            },
            tilt: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot tilt without linking to WWTInstance");
              this.$wwt.inst.ctl._tilt(H.x, H.y);
            },
            setTime: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTime without linking to WWTInstance");
              this.$wwt.inst.stc.set_now(H), this.clockDiscontinuities += 1;
            },
            setClockRate: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setClockRate without linking to WWTInstance");
              this.$wwt.inst.stc.get_timeRate() != H && (this.$wwt.inst.stc.set_timeRate(H), this.clockRate = H, this.clockDiscontinuities += 1);
            },
            setClockSync: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setClockSync without linking to WWTInstance");
              this.$wwt.inst.stc.get_syncToClock() != H && (this.$wwt.inst.stc.set_syncToClock(H), H ? this.clockRate = this.$wwt.inst.stc.get_timeRate() : this.clockRate = 0, this.clockDiscontinuities += 1);
            },
            startTour: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot start tour without linking to WWTInstance");
              var H = this.$wwt.inst.getActiveTourPlayer();
              if (H === null)
                throw new Error("no tour to start");
              H.play();
            },
            toggleTourPlayPauseState: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot play/pause tour without linking to WWTInstance");
              var H = this.$wwt.inst.getActiveTourPlayer();
              if (H === null)
                throw new Error("no tour to play/pause");
              H.pauseTour();
            },
            setTourPlayerLeaveSettingsWhenStopped: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTourPlayerLeaveSettingsWhenStopped without linking to WWTInstance");
              var Q = this.$wwt.inst.getActiveTourPlayer();
              if (Q === null)
                throw new Error("no tour player to control");
              Q.set_leaveSettingsWhenStopped(H);
            },
            seekToTourTimecode: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot seekToTourTimecode without linking to WWTInstance");
              this.$wwt.inst.seekToTourTimecode(H);
            },
            viewAsTourXml: function(H) {
              return d(this, void 0, void 0, function() {
                var Q, q, ue, pe, ge;
                return U(this, function(Le) {
                  return Oe.WWTControl.singleton.createTour(H || ""), Q = Oe.WWTControl.singleton.tourEdit, Q.addSlide(!1), q = Q.get_tour(), q === null ? [2, Promise.resolve(null)] : (ue = q.saveToBlob(), pe = new FileReader(), pe.readAsText(ue), ge = "", [2, new Promise(function(Ie, Ge) {
                    pe.onloadend = function() {
                      ge += pe.result, Ie(ge);
                    };
                  })]);
                });
              });
            },
            waitForReady: function() {
              return d(this, void 0, void 0, function() {
                var H = this;
                return U(this, function(Q) {
                  return this.$wwt.inst !== null ? [2, this.$wwt.inst.waitForReady()] : [2, new Promise(function(q, ue) {
                    var pe = function() {
                      H.$wwt.inst.waitForReady().then(q);
                    };
                    H.$wwt.inst !== null ? pe() : H.$wwt.onLinkedCallbacks.push(pe);
                  })];
                });
              });
            },
            gotoRADecZoom: function(H) {
              var Q = H.raRad, q = H.decRad, ue = H.zoomDeg, pe = H.instant, ge = H.rollRad;
              return d(this, void 0, void 0, function() {
                return U(this, function(Le) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot gotoRADecZoom without linking to WWTInstance");
                  return [2, this.$wwt.inst.gotoRADecZoom(Q, q, ue, pe, ge)];
                });
              });
            },
            timeToRADecZoom: function(H) {
              var Q = H.raRad, q = H.decRad, ue = H.zoomDeg, pe = H.rollRad;
              if (this.$wwt.inst === null)
                throw new Error("cannot get timeToRADecZoom without linking to WWTInstance");
              return this.$wwt.inst.timeToRADecZoom(Q, q, ue, pe);
            },
            gotoTarget: function(H) {
              return d(this, void 0, void 0, function() {
                return U(this, function(Q) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot gotoTarget without linking to WWTInstance");
                  return [2, this.$wwt.inst.gotoTarget(H)];
                });
              });
            },
            setTrackedObject: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTrackedObject without linking to WWTInstance");
              this.$wwt.inst.ctl.renderContext.set_solarSystemTrack(H);
            },
            loadTour: function(H) {
              var Q = H.url, q = H.play;
              return d(this, void 0, void 0, function() {
                var ue, pe, ge, Le, Ie, Ge;
                return U(this, function(Be) {
                  switch (Be.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot loadTour without linking to WWTInstance");
                      return q ? [4, this.$wwt.inst.loadAndPlayTour(Q)] : [3, 2];
                    case 1:
                      return Be.sent(), [3, 4];
                    case 2:
                      return [4, this.$wwt.inst.loadTour(Q)];
                    case 3:
                      Be.sent(), Be.label = 4;
                    case 4:
                      if (ue = null, pe = [], ge = this.$wwt.inst.getActiveTourPlayer(), ge !== null && (Le = ge.get_tour(), Le !== null))
                        for (ue = Le.get_runTime() * 1e-3, Ie = Le.get_tourStops().length, Ge = 0; Ge < Ie; Ge++)
                          pe.push(Le.elapsedTimeTillTourstop(Ge));
                      return [2, { tourRunTime: ue, tourStopStartTimes: pe }];
                  }
                });
              });
            },
            loadImageCollection: function(H) {
              var Q = H.url, q = H.loadChildFolders;
              return d(this, void 0, void 0, function() {
                var ue;
                return U(this, function(pe) {
                  switch (pe.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot loadImageCollection without linking to WWTInstance");
                      return [4, this.$wwt.inst.loadImageCollection(Q, q)];
                    case 1:
                      return ue = pe.sent(), this.availableImagesets = _t(), [2, ue];
                  }
                });
              });
            },
            addImagesetToRepository: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot addImagesetToRepository without linking to WWTInstance");
              return this.$wwt.inst.addImagesetToRepository(H);
            },
            // General layers
            deleteLayer: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot deleteLayer without linking to WWTInstance");
              var Q = "";
              if (typeof H == "string") {
                Q = H;
                var q = Oe.Guid.fromString(H);
                this.$wwt.inst.lm.deleteLayerByID(q, !0, !0);
              } else
                Q = H.toString(), this.$wwt.inst.lm.deleteLayerByID(H, !0, !0);
              delete this.imagesetLayers[Q], delete this.spreadSheetLayers[Q], this.activeLayers = et(this.$wwt);
            },
            // Imageset layers, including FITS layers
            addImageSetLayer: function(H) {
              return d(this, void 0, void 0, function() {
                var Q, q;
                return U(this, function(ue) {
                  switch (ue.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot addImageSetLayer without linking to WWTInstance");
                      return [4, this.$wwt.inst.addImageSetLayer(H)];
                    case 1:
                      return Q = ue.sent(), q = Q.id.toString(), this.imagesetLayers[q] = new tt(Q), this.activeLayers = et(this.$wwt), [2, Q];
                  }
                });
              });
            },
            // deprecated, but maintained for compatibility:
            loadFitsLayer: function(H) {
              return d(this, void 0, void 0, function() {
                var Q;
                return U(this, function(q) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot loadFitsLayer without linking to WWTInstance");
                  return Q = {
                    url: H.url,
                    mode: "fits",
                    name: H.name,
                    goto: H.gotoTarget
                  }, [2, this.$wwt.inst.addImageSetLayer(Q)];
                });
              });
            },
            setImageSetLayerOrder: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setImageSetLayerOrder without linking to WWTInstance");
              this.$wwt.inst.setImageSetLayerOrder(H), this.activeLayers = et(this.$wwt);
            },
            stretchFitsLayer: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot stretchFitsLayer without linking to WWTInstance");
              this.$wwt.inst.stretchFitsLayer(H);
              var Q = this.imagesetLayers[H.id];
              Q && (Q.scaleType = H.stretch, Q.vmin = H.vmin, Q.vmax = H.vmax);
            },
            setFitsLayerColormap: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setFitsLayerColormap without linking to WWTInstance");
              this.$wwt.inst.setFitsLayerColormap(H);
              var Q = this.imagesetLayers[H.id];
              Q && (Q.colormapName = H.name);
            },
            applyFitsLayerSettings: function(H) {
              var Q, q;
              if (this.$wwt.inst === null)
                throw new Error("cannot applyFitsLayerSettings without linking to WWTInstance");
              this.$wwt.inst.applyFitsLayerSettings(H);
              var ue = this.imagesetLayers[H.id];
              if (ue)
                try {
                  for (var pe = F(H.settings), ge = pe.next(); !ge.done; ge = pe.next()) {
                    var Le = ge.value;
                    se(ue.settings, Le);
                  }
                } catch (Ie) {
                  Q = { error: Ie };
                } finally {
                  try {
                    ge && !ge.done && (q = pe.return) && q.call(pe);
                  } finally {
                    if (Q)
                      throw Q.error;
                  }
                }
            },
            // Spreadsheet layers
            createTableLayer: function(H) {
              return d(this, void 0, void 0, function() {
                var Q, q, ue, pe;
                return U(this, function(ge) {
                  switch (ge.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot createTableLayer without linking to WWTInstance");
                      return Q = this.$wwt.inst.lm.createSpreadsheetLayer(H.referenceFrame, H.name, H.dataCsv), Q.set_lngColumn(-1), Q.set_latColumn(-1), Q.set_altColumn(-1), Q.set_sizeColumn(-1), Q.set_colorMapColumn(-1), Q.set_startDateColumn(-1), Q.set_endDateColumn(-1), Q.set_xAxisColumn(-1), Q.set_yAxisColumn(-1), Q.set_zAxisColumn(-1), Q.set_altUnit(ee.meters), Q.set_referenceFrame(H.referenceFrame), H.referenceFrame == "Sky" && Q.set_astronomical(!0), q = Promise.resolve(Q), [4, q];
                    case 1:
                      return ue = ge.sent(), pe = ue.id.toString(), this.spreadSheetLayers[pe] = new ie(ue), this.activeLayers = et(this.$wwt), [2, ue];
                  }
                });
              });
            },
            applyTableLayerSettings: function(H) {
              var Q, q;
              if (this.$wwt.inst === null)
                throw new Error("cannot applyTableLayerSettings without linking to WWTInstance");
              this.$wwt.inst.applyTableLayerSettings(H);
              var ue = this.spreadSheetLayers[H.id];
              if (ue !== void 0)
                try {
                  for (var pe = F(H.settings), ge = pe.next(); !ge.done; ge = pe.next()) {
                    var Le = ge.value;
                    me(ue, Le);
                  }
                } catch (Ie) {
                  Q = { error: Ie };
                } finally {
                  try {
                    ge && !ge.done && (q = pe.return) && q.call(pe);
                  } finally {
                    if (Q)
                      throw Q.error;
                  }
                }
            },
            updateTableLayer: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot updateTableLayer without linking to WWTInstance");
              this.$wwt.inst.updateTableLayer(H);
            },
            // Progressive HiPS catalogs.
            //
            // These have some characteristics of imagesets, and some characteristics
            // of spreadsheet layers.
            addCatalogHipsByName: function(H) {
              return d(this, void 0, void 0, function() {
                var Q, q, ue, pe, ge;
                return U(this, function(Le) {
                  switch (Le.label) {
                    case 0:
                      if (this.$wwt.inst == null)
                        throw new Error("cannot addCatalogHipsByName without linking to WWTInstance");
                      return [4, this.$wwt.inst.addCatalogHipsByName(H)];
                    case 1:
                      return Q = Le.sent(), q = Q.get_hipsProperties(), q !== null && (ue = q.get_catalogSpreadSheetLayer(), pe = ue.id.toString(), this.spreadSheetLayers[pe] = new ie(ue), ge = _t().find(function(Ie) {
                        return Ie.name === H.name;
                      }), ge !== void 0 && (ge.id = pe)), this.activeLayers = et(this.$wwt), [2, Q];
                  }
                });
              });
            },
            getCatalogHipsDataInView: function(H) {
              if (this.$wwt.inst == null)
                throw new Error("cannot getCatalogHipsDataInView without linking to WWTInstance");
              return this.$wwt.inst.getCatalogHipsDataInView(H);
            },
            removeCatalogHipsByName: function(H) {
              if (this.$wwt.inst == null)
                throw new Error("cannot removeCatalogHipsByName without linking to WWTInstance");
              this.$wwt.inst.ctl.removeCatalogHipsByName(H);
              var Q = Oe.Guid.createFrom(H).toString();
              delete this.spreadSheetLayers[Q], this.activeLayers = et(this.$wwt);
            },
            // Annotations
            addAnnotation: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot addAnnotation without linking to WWTInstance");
              this.$wwt.inst.si.addAnnotation(H);
            },
            removeAnnotation: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot removeAnnotation without linking to WWTInstance");
              this.$wwt.inst.si.removeAnnotation(H);
            },
            clearAnnotations: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot clearAnnotations without linking to WWTInstance");
              this.$wwt.inst.si.clearAnnotations();
            },
            // Capturing the current display
            captureFrame: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot captureThumbnail without linking to WWTInstance");
              return this.$wwt.inst.captureFrame(H);
            },
            // Capturing a video as a readable stream
            captureVideo: function(H) {
              if (this.$wwt.inst === null)
                throw new Error("cannot captureVideo without linking to WWTInstance");
              return this.$wwt.inst.captureVideo(H);
            }
          }
        }), Ye = (0, l.defineComponent)({
          props: {
            /** The namespace of the Pinia module used to track the WWT component’s state.
             * This prop should have the same value in all components in the app that
             * reference WWT.
             */
            wwtNamespace: { type: String, default: "wwt", required: !0 },
            wwtFreestandingAssetBaseurl: String
          },
          computed: P(P({}, $(at, {
            /** The GUIDs of all rendered layers, in their draw order.
             *
             * This list gives the GUIDs of the layers that are currently candidates for
             * rendering. This list is determined by the hierarchy of "layer maps"
             * registered with the engine and its current rendering mode. Layers in this
             * list might not be actually rendered if their `enabled` flag is false, if
             * they are fully transparent, and so on.
             **/
            wwtActiveLayers: "activeLayers",
            /** Information about the imagesets that are available to be used as a background.
               *
               * The info includes the name, which can then be used to set the background image
               * via the [[setBackgroundImageByName]] mutation.
               */
            wwtAvailableImagesets: "availableImagesets",
            /** The current background [Imageset](../../engine/classes/imageset.html), or
             * null if it is undefined.
             *
             * You can cause this state variable to change using the
             * [[setBackgroundImageByName]] mutation.
             * **/
            wwtBackgroundImageset: "backgroundImageset",
            /** The current time of WWT internal clock. In normal operation this variable
             * will change with every rendered WWT frame, or every 30 ms or so.
             */
            wwtCurrentTime: "currentTime",
            /** The number of times that the progression of the WWT internal clock has
             * been changed discontinuously.
             *
             * The main use of this state variable is that you can
             * [watch](https://vuejs.org/api/reactivity-core.html#watch) for changes to it and be alerted
             * when the clock has been altered. */
            wwtClockDiscontinuities: "clockDiscontinuities",
            /** The rate at which the WWT internal clock progresses compared to real time.
             * If the WWT clock is paused, this will be zero. Negative and fractional
             * values are both possible. */
            wwtClockRate: "clockRate",
            /** The current declination of the center of the WWT view, in radians.
             *
             * TODO: define the meaning here for view modes other than "sky."
             */
            wwtDecRad: "decRad",
            /** The current foreground [Imageset](../../engine/classes/imageset.html), or
             * null if it is undefined.
             *
             * You can cause this state variable to change using the
             * [[setForegroundImageByName]] mutation.
             * **/
            wwtForegroundImageset: "foregroundImageset",
            /** The opacity of the foreground imageset. Values range between 0 (invisible)
              * and 100 (fully opaque). */
            wwtForegroundOpacity: "foregroundOpacity",
            /** A table of activated imageset layers.
             *
             * Use [[imagesetStateForLayer]] to access information about a particular
             * layer.
             */
            wwtImagesetLayers: "imagesetLayers",
            /** Whether a tour has been loaded up and is available for playback. */
            wwtIsTourPlayerActive: "isTourPlayerActive",
            /** Whether a tour is actively playing back right now. This can spontaneously become
              * false if the tour completes playing. */
            wwtIsTourPlaying: "isTourPlaying",
            /** The current right ascension of the center of the WWT view, in radians.
             *
             * TODO: define the meaning here for view modes other than "sky."
             */
            wwtRARad: "raRad",
            /** The current mode of the WWT renderer.
             *
             * This is derived from the "type" of the active background imageset. To
             * change the mode, change the background imageset with
             * [[setBackgroundImageByName]].
             */
            wwtRenderType: "renderType",
            /** The current roll of the view camera, in radians */
            wwtRollRad: "rollRad",
            /** Whether or not to show a warning about recommending WebGL 2 */
            wwtShowWebGl2Warning: "showWebGl2Warning",
            /** A table of activated imageset layers.
             *
             * Use [[imagesetStateForLayer]] to access information about a particular
             * layer.
             */
            wwtSpreadSheetLayers: "spreadSheetLayers",
            /** The number of times that a WWT tour has completed playing.
             *
             * The main use of this state variable is that you can
             * [watch](https://vuejs.org/api/reactivity-core.html#watch) for changes to it and be alerted
             * when a tour finishes. Watching [[wwtIsTourPlaying]] doesn't suffice because
             * that will trigger when a tour is paused. */
            wwtTourCompletions: "tourCompletions",
            /** The total runtime of the current tour, in seconds, if there is one. */
            wwtTourRunTime: "tourRunTime",
            /** The timecodes at which the current tour’s "stops" begin, in seconds.
             *
             * Each WWT tour is composed of one or more "stops", each of which has a fixed
             * wall-clock duration. This variable gives the start times of the stops under
             * the assumption that they all follow one another in sequence. It is possible
             * to have nonlinear flow from one stop to the next.
             *
             * If no tour is loaded, this is an empty array.
             */
            wwtTourStopStartTimes: "tourStopStartTimes",
            /** The "timecode" of the current tour playback progression.
             *
             * The "timecode" is approximately the number of seconds elapsed since tour
             * playback began. More precisely, however, it is the start time of the
             * current tour stop, plus however much wall-clock time has elapsed while at
             * that stop. Because it is possible for stops to link to each other
             * non-linearly, it is also possible for the timecode to progress non-linearly
             * even when the tour plays back without user interaction.
             *
             * In combination with [[wwtTourStopStartTimes]], you can use this value to
             * determine the index number of the currently active tour stop.
             *
             * If no tour is loaded, this is zero.
             */
            wwtTourTimecode: "tourTimecode",
            /** The WWT zoom level, in degrees.
             *
             * TODO: define the semantics here in 3D and other modes.
             *
             * In 2D sky mode, the zoom level is the angular height of the viewport,
             * *times six*.
             */
            wwtZoomDeg: "zoomDeg"
          })), $(at, [
            /** Get the reactive state for the active imageset layers
             *
             * These layers are created using the [[addImageSetLayer]] action. The state
             * structures returned by this function are part of the reactive store, so
             * you can wire them up to your UI and they will update correctly. The list is
             * returned in the engine's render order.
             *
             * @returns The layer states
             */
            "activeImagesetLayerStates",
            /** Get the right ascension and declination, in degrees, for x, y coordinates on the screen */
            "findRADecForScreenPoint",
            /** Given an RA and Dec position, return the x, y coordinates of the screen point */
            "findScreenPointForRADec",
            /** Look up the WWT engine object for an active imageset layer.
             *
             * This getter gets the WWT `Imageset` object associated with an imageset
             * layer. The returned object is *not* part of the Vue(x) reactivity system,
             * so you shouldn't use it to set up UI elements, but you can obtain more
             * detailed information about the imageset than is stored in the state
             * management system. For UI purposes, use [[imagesetStateForLayer]].
             *
             * @param guidtext The GUID of the layer to query, as a string
             * @returns The layer's underlying imageset, or null if the GUID is
             * unrecognized
             */
            "imagesetForLayer",
            /** Look up the reactive state for an active imageset layer.
             *
             * These layers are created using the [[addImageSetLayer]] action. The state
             * returned by this function is part of the reactive store, so you can
             * wire it up to your UI and it will update as the layer settings are changed.
             * If you need "runtime" state not captured in the reactivity system, you may
             * need to use [[imagesetForLayer]] instead.
             *
             * @param guidtext The GUID of the layer to query, as a string
             * @returns The layer state, or null if the GUID is unrecognized
             */
            "imagesetStateForLayer",
            /** Get the actual WWT `SpreadSheetLayer` for the named HiPS catalog.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetStateForHipsCatalog]] instead.
             *
             * @param name The `datasetName` of the HiPS catalog
             */
            "layerForHipsCatalog",
            /** Look up an [Imageset](../../engine/classes/imageset.html) in the engine’s
             * table of ones with registered names.
             *
             * This delegates to
             * [WWTControl.getImagesetByName()](../../engine/wwtcontrol.html#getimagesetbyname),
             * which has very eager name-matching rules. But if nothing matches, null is
             * returned.
             *
             * Imagesets are not added to the engine’s list of names automatically. In
             * order for an imageset to be findable by this function, its containing
             * folder must have been loaded using the [[loadImageCollection]] action.
             */
            "lookupImageset",
            /** Get the actual WWT `SpreadSheetLayer` for the table layer with the given ID.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetState]] instead.
             *
             * @param id The table layer's identifier.
             */
            "spreadSheetLayerById",
            /** Get the actual WWT `SpreadSheetLayer` for the table layer corresponding
             * to the given CatalogLayerInfo.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetState]] instead.
             *
             * @param id The table layer's identifier.
             */
            "spreadSheetLayer",
            /** Get reactive `SpreadSheetLayer` settings for the table layer corresponding to
             * the given CatalogLayerInfo.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param catalog A CatalogLayerInfo object corresponding to the layer.
             */
            "spreadsheetState",
            /** Get reactive `SpreadSheetLayer` settings for the table layer with the given ID.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param id The identifier of the table layer.
             */
            "spreadsheetStateById",
            /** Get reactive `SpreadSheetLayer` settings for the named HiPS catalog.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param name The `datasetName` of the HiPS catalog
             */
            "spreadsheetStateForHipsCatalog"
          ])),
          methods: P({}, S(at, [
            /** Add a "catalog HiPS" dataset to the current view, by name.
             *
             * If the catalog name is not in the engine's registry, the promise rejects.
             */
            "addCatalogHipsByName",
            /** Request the creation of a tabular data layer.
             *
             * The action resolves to a new [SpreadSheetLayer](../../engine/classes/spreadsheetlayer.html) instance.
             */
            "createTableLayer",
            /** Request an export of the catalog HiPS data within the current viewport. */
            "getCatalogHipsDataInView",
            /** Command the view to steer to a specific configuration.
             *
             * The async action completes when the view arrives, or when
             * a subsequent view command overrides this one.
             *
             * TODO: document semantics when not in 2D sky mode!
             */
            "gotoRADecZoom",
            /** Returns the time it would take, in seconds, to navigate to the given target. */
            "timeToRADecZoom",
            /** Command the view to steer as specified in
             * [the options](../../engine-helpers/interfaces/gototargetoptions.html).
             *
             * The async action completes when the view arrives, or when
             * a subsequent view command overrides this one.
             */
            "gotoTarget",
            /** Request the engine to load the specified image collection.
             *
             * The image collection is a [WTML file](https://docs.worldwidetelescope.org/data-guide/1/data-file-formats/collections/)
             * Images in collections loaded this way become usable for name-based lookup
             * by interfaces such as [[setForegroundImageByName]].
             *
             * The action resolves to a [Folder](../../engine/classes/folder.html) instance.
             * It’s asynchronous because the specified WTML file has to be downloaded.
             */
            "loadImageCollection",
            /** Add an imageset directly into the engine's database.
             *
             * If an imageset with the same URL has already been loaded, this is a
             * no-op.
             *
             * This returns the imageset that ultimately resides in the engine's
             * database. It could either be the input argument, if it was newly added,
             * or a pre-existing imageset in the no-op condition.
             */
            "addImagesetToRepository",
            /** Deprecated. Use addImageSetLayer instead.
             * Request the creation of a FITS image layer.
             *
             * The action resolves to a new [ImageSetLayer](../../engine/classes/imagesetlayer.html) instance.
             * It’s asynchronous because the requested FITS file has to be downloaded.
             */
            "loadFitsLayer",
            /** Request the creation of a image layer. Either a single FITS or an image set.
             *
             * The action resolves to a new [ImageSetLayer](../../engine/classes/imagesetlayer.html) instance.
             * It’s asynchronous because the requested url has to be downloaded.
             */
            "addImageSetLayer",
            /** Request the engine to load a tour file.
             *
             * The action resolves when the load is complete. It’s asynchronous because
             * the full WTT tour file has to be downloaded.
            */
            "loadTour",
            /** Get the current view as a one-slide tour, serialized to XML */
            "viewAsTourXml",
            /** Wait for the WWT engine to become ready for usage.
             *
             * You should invoke this action and wait for is completion before trying to
             * do anything else with a WWT-aware component. The action resolves when the
             * WWT engine has completed its initialization, which involes the download of
             * some supporting data files.
             */
            "waitForReady",
            // Formerly mutations
            // TODO: Alphabetize this into one big list
            /** Add an [Annotation](../../engine/classes/annotation.html) to the view. */
            "addAnnotation",
            /** Alter one or more settings of the specified FITS image layer as specified
             * in [the options](../../engine-helpers/interfaces/applyfitslayersettingsoptions.html).
             */
            "applyFitsLayerSettings",
            /** Alter one or more settings of the specified tabular data layers as specified
             * in [the options](../../engine-helpers/interfaces/applytablelayersettingsoptions.html).
             */
            "applyTableLayerSettings",
            /** Alter one [WWT engine setting](../../engine/modules.html#enginesetting). */
            "applySetting",
            /** Capture the current frame as an image `Blob` with the desired width, height, and format.
             * The first argument is a callback function to execute on the created `Blob`. */
            "captureFrame",
            /** Capture a video as a stream of image `Blob`s with the desired width, height and format.
             * The number of frames per second and total frame count are specified as well. */
            "captureVideo",
            /** Clear all [Annotations](../../engine/classes/annotation.html) from the view. */
            "clearAnnotations",
            /** Delete the specified layer from the layer manager.
             *
             * A layer may be identified by either its name or its [id](../../engine/classes/layer.html#id).
             */
            "deleteLayer",
            /** Remove the specified [Annotation](../../engine/classes/annotation.html) from the view. */
            "removeAnnotation",
            /** Remove a "catalog HiPS" dataset to the current view, by name. */
            "removeCatalogHipsByName",
            /** Seek tour playback to the specified timecode.
             *
             * See [[wwtTourTimecode]] for a definition of the tour timecode.
             *
             * An important limitation is that the engine can only seek to the very
             * beginning of a tour stop. If you request a timecode in the middle of a
             * slide, the seek will actually occur to the start time of that slide.
             */
            "seekToTourTimecode",
            /** Set the current background [Imageset](../../engine/classes/imageset.html)
             * based on its name.
             *
             * The name lookup here is effectively done using [[lookupImageset]]. If
             * the name is not found, the current background imageset remains unchanged.
             *
             * Changing the background imageset may change the value of [[wwtRenderType]],
             * and the overall "mode" of the WWT renderer.
             */
            "setBackgroundImageByName",
            /** Set the rate at which the WWT clock progresses compared to wall-clock time.
             *
             * A value of 10 means that the WWT clock progresses ten times faster than
             * real time. A value of -0.1 means that the WWT clock moves backwards, ten
             * times slower than real time.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setClockRate",
            /** Set whether the WWT clock should progress with real time.
             *
             * See
             * [SpaceTimeController.set_syncToClock()](../../engine/modules/spacetimecontroller.html#set_synctoclock).
             * This interface effectively allows you to pause the WWT clock.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setClockSync",
            /** Set the colormap used for a FITS image layer according to
             * [the options](../../engine-helpers/interfaces/setfitslayercolormapoptions.html).
             */
            "setFitsLayerColormap",
            /** Set the current foreground [Imageset](../../engine/classes/imageset.html)
             * based on its name.
             *
             * The name lookup here is effectively done using [[lookupImageset]]. If
             * the name is not found, the current foreground imageset remains unchanged.
             */
            "setForegroundImageByName",
            /** Set the opacity of the foreground imageset.
             *
             * Valid values are between 0 (invisible) and 100 (fully opaque).
             */
            "setForegroundOpacity",
            /** Change the [ImageSetLayer](../../engine/classes/imagesetlayer.html)
             * position in the draw cycle.
             */
            "setImageSetLayerOrder",
            /** Set whether the renderer settings of tours should remain applied after
             * those tours finish playing back.
             *
             * This specialized option helps avoid jarring visual effects when tours
             * finish playing. If a tour activates a renderer option like "local horizon
             * mode", by default that option will turn off when the tour finishes, causing
             * the view to suddenly change. If this option is set to True, that setting
             * will remain active, preventing the sudden change.
             */
            "setTourPlayerLeaveSettingsWhenStopped",
            /** Set the current time of WWT's internal clock.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setTime",
            /** Set the "tracked object" in the 3D solar system view.
             *
             * Allowed values are
             * [defined in @wwtelescope/engine-types](../../engine-types/enums/solarsystemobjects.html).
             */
            "setTrackedObject",
            /** Set up the background and foreground imagesets according to
             * [the options](../../engine-helpers/interfaces/setupforimagesetoptions.html)
             *
             * The main use of this interface is that it provides a mechanism to guess
             * the appropriate background imageset given a foreground imageset that you
             * want to show.
             */
            "setupForImageset",
            /** Start playback of the currently loaded tour.
             *
             * Nothing happens if no tour is loaded.
             */
            "startTour",
            /** Alter the "stretch" of a FITS image layer according to
             * [the options](../../engine-helpers/interfaces/stretchfitslayeroptions.html).
             */
            "stretchFitsLayer",
            /** Toggle the play/pause state of the current tour.
             *
             * Nothing happens if no tour is loaded.
             */
            "toggleTourPlayPauseState",
            /** Update the contents of a tabular data layer according to
             * [the options](../../engine-helpers/interfaces/updatetablelayeroptions.html).
             */
            "updateTableLayer",
            //"updateAvailableImagesets",
            /** Set the zoom level of the view.
             *
             * This action may result in an action that takes a perceptible amount of
             * time to resolve, if the "smooth pan" renderer option is enabled. To have
             * proper asynchronous feedback about when the zoom operation completes, use
             * [[gotoRADecZoom]].
             */
            "zoom",
            /** Moves the position of the view */
            "move",
            /** Tilts the position of the view */
            "tilt"
          ]))
        }), it = ["id"];
        function Qe(H, Q, q, ue, pe, ge) {
          return (0, l.openBlock)(), (0, l.createElementBlock)("div", {
            id: H.uniqueId,
            class: "wwtelescope-component"
          }, null, 8, it);
        }
        var ht = 0;
        const qe = (0, l.defineComponent)({
          props: {
            wwtNamespace: { type: String, default: "wwt", required: !0 },
            wwtFreestandingAssetBaseurl: String,
            customId: String
          },
          data: function() {
            return {
              uniqueId: "",
              wwt: void 0,
              renderLoopId: void 0
            };
          },
          methods: P({}, S(at, [
            "internalIncrementTourCompletions",
            "internalLinkToInstance",
            "internalUnlinkFromInstance",
            "internalUpdate",
            "waitForReady"
          ])),
          created: function() {
            var H = this.customId === void 0 ? "wwtcmpt".concat(ht) : this.customId;
            Object.defineProperties(this, {
              uniqueId: { get: function() {
                return H;
              } }
            }), ht += 1;
          },
          mounted: function() {
            var H = this;
            this.wwt = (0, l.markRaw)(new ct({
              elId: this.uniqueId,
              startInternalRenderLoop: !1,
              // Start at the Galactic Center by default. RA of the GC ~= 266.4 deg; in WWT, lng = 360 - RA.
              startLatDeg: -28.9,
              startLngDeg: 93.6,
              freestandingAssetBaseurl: this.wwtFreestandingAssetBaseurl
            })), this.internalLinkToInstance(this.wwt);
            var Q = function() {
              var q = H.wwt;
              H.renderLoopId = window.requestAnimationFrame(Q), q.ctl.renderOneFrame(), H.internalUpdate();
            };
            this.waitForReady().then(function() {
              (0, l.nextTick)().then(function() {
                H.renderLoopId = window.requestAnimationFrame(Q);
              });
            }), this.wwt.tourEndedCallback = function(q) {
              H.internalIncrementTourCompletions();
            };
          },
          unmounted: function() {
            this.renderLoopId !== void 0 && (window.cancelAnimationFrame(this.renderLoopId), this.renderLoopId = void 0), this.wwt !== void 0 && (this.wwt.tourEndedCallback = null), this.internalUnlinkFromInstance();
          }
        });
        var st = _(959);
        const Lt = /* @__PURE__ */ (0, st.Z)(qe, [["render", Qe]]);
        var vt = E();
        vt.use(function(H) {
          var Q = H.store;
          Q.$wwt = new Je();
        });
      })(), r;
    })()
  ));
})(index_umd);
var index_umdExports = index_umd.exports;
let getRandomValues;
const rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues && (getRandomValues = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !getRandomValues))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return getRandomValues(rnds8);
}
const byteToHex = [];
for (let s = 0; s < 256; ++s)
  byteToHex.push((s + 256).toString(16).slice(1));
function unsafeStringify(s, u = 0) {
  return byteToHex[s[u + 0]] + byteToHex[s[u + 1]] + byteToHex[s[u + 2]] + byteToHex[s[u + 3]] + "-" + byteToHex[s[u + 4]] + byteToHex[s[u + 5]] + "-" + byteToHex[s[u + 6]] + byteToHex[s[u + 7]] + "-" + byteToHex[s[u + 8]] + byteToHex[s[u + 9]] + "-" + byteToHex[s[u + 10]] + byteToHex[s[u + 11]] + byteToHex[s[u + 12]] + byteToHex[s[u + 13]] + byteToHex[s[u + 14]] + byteToHex[s[u + 15]];
}
const randomUUID = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), native = {
  randomUUID
};
function v4(s, u, i) {
  if (native.randomUUID && !u && !s)
    return native.randomUUID();
  s = s || {};
  const t = s.random || (s.rng || rng)();
  if (t[6] = t[6] & 15 | 64, t[8] = t[8] & 63 | 128, u) {
    i = i || 0;
    for (let n = 0; n < 16; ++n)
      u[i + n] = t[n];
    return u;
  }
  return unsafeStringify(t);
}
const _export_sfc = (s, u) => {
  const i = s.__vccOpts || s;
  for (const [t, n] of u)
    i[t] = n;
  return i;
}, _sfc_main$1 = {
  extends: index_umdExports.WWTComponent,
  data() {
    return {
      customId: `${v4()}`
    };
  }
  // created() {
  //   console.log("Created")
  //   // Create a globally unique ID for the div that the WWT engine can latch onto.
  //   const uid = `${uuidv4()}`;
  //   // const uid = `wwtcmpt${idCounter}`;
  //   Object.defineProperties(this, {
  //     uniqueId: { get() { return uid; } },
  //   });
  //   // this.uniqueId = uid;
  //   // idCounter += 1;
  // }
}, _hoisted_1$1 = ["id"];
function _sfc_render$1(s, u, i, t, n, e) {
  return openBlock(), createElementBlock("div", {
    id: n.customId,
    class: "wwtelescope-component"
  }, null, 8, _hoisted_1$1);
}
const UniqueWWTComponent = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1]]);
var PI = 3.14159265358979, TWOPI = 2 * PI, R2D = 180 / PI, R2H = 12 / PI;
function angnorm(s) {
  for (; s < 0; )
    s += TWOPI;
  for (; s >= TWOPI; )
    s -= TWOPI;
  return s;
}
function _formatSexagesimal(s, u, i, t, n, e) {
  var _ = "";
  s < 0 ? (s = -s, _ = "-") : u && (_ = "+");
  var r = Math.floor(s);
  s = (s - r) * 60;
  var o = Math.floor(s);
  s = (s - o) * 60;
  var c = Math.floor(s), l = s - c, g = String(r).padStart(i, "0"), a = String(o).padStart(2, "0"), b = String(c).padStart(2, "0"), V = l.toFixed(e).slice(1);
  return "".concat(_).concat(g).concat(t).concat(a).concat(n).concat(b).concat(V);
}
function fmtHours(s, u, i, t) {
  return u === void 0 && (u = ":"), i === void 0 && (i = ":"), t === void 0 && (t = 0), _formatSexagesimal(angnorm(s) * R2H, !1, 2, u, i, t);
}
function fmtDegLat(s, u, i, t) {
  return u === void 0 && (u = ":"), i === void 0 && (i = ":"), t === void 0 && (t = 0), s < -PI || s > PI ? " ??".concat(u, "??").concat(i, "??") : _formatSexagesimal(s * R2D, !0, 2, u, i, t);
}
const App_vue_vue_type_style_index_0_lang = "", _sfc_main = {
  extends: index_umdExports.WWTAwareComponent,
  data() {
    return {
      show: !1
    };
  },
  computed: {
    coordText() {
      return `${fmtHours(this.wwtRARad)} ${fmtDegLat(this.wwtDecRad)}`;
    }
  },
  mounted() {
    setTimeout(() => {
      this.show = !0;
    }, 1e3);
  }
}, _hoisted_1 = { class: "wwt-app" }, _hoisted_2 = { class: "coord-overlay" };
function _sfc_render(s, u, i, t, n, e) {
  const _ = resolveComponent("WorldWideTelescope");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    n.show ? (openBlock(), createBlock(_, {
      key: 0,
      "wwt-namespace": "mywwt"
    })) : createCommentVNode("", !0),
    createBaseVNode("p", _hoisted_2, toDisplayString(e.coordText), 1)
  ]);
}
const App = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]), app = createApp(App, {
  wwtNamespace: `wwt-${v4()}`
});
app.use(index_umdExports.wwtPinia);
app.component("WorldWideTelescope", UniqueWWTComponent);
function render({ model: s, el: u }) {
  return app.mount(u), () => app.unmount();
}
export {
  render
};
