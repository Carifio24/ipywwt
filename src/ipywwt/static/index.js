function _mergeNamespaces(r, u) {
  for (var d = 0; d < u.length; d++) {
    const v = u[d];
    if (typeof v != "string" && !Array.isArray(v)) {
      for (const w in v)
        if (w !== "default" && !(w in r)) {
          const C = Object.getOwnPropertyDescriptor(v, w);
          C && Object.defineProperty(r, w, C.get ? C : {
            enumerable: !0,
            get: () => v[w]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(r, Symbol.toStringTag, { value: "Module" }));
}
function makeMap(r, u) {
  const d = /* @__PURE__ */ Object.create(null), v = r.split(",");
  for (let w = 0; w < v.length; w++)
    d[v[w]] = !0;
  return u ? (w) => !!d[w.toLowerCase()] : (w) => !!d[w];
}
const EMPTY_OBJ = {}, EMPTY_ARR = [], NOOP = () => {
}, NO = () => !1, onRE = /^on[^a-z]/, isOn = (r) => onRE.test(r), isModelListener = (r) => r.startsWith("onUpdate:"), extend = Object.assign, remove = (r, u) => {
  const d = r.indexOf(u);
  d > -1 && r.splice(d, 1);
}, hasOwnProperty$1 = Object.prototype.hasOwnProperty, hasOwn = (r, u) => hasOwnProperty$1.call(r, u), isArray = Array.isArray, isMap = (r) => toTypeString(r) === "[object Map]", isSet = (r) => toTypeString(r) === "[object Set]", isDate = (r) => toTypeString(r) === "[object Date]", isRegExp = (r) => toTypeString(r) === "[object RegExp]", isFunction = (r) => typeof r == "function", isString = (r) => typeof r == "string", isSymbol = (r) => typeof r == "symbol", isObject = (r) => r !== null && typeof r == "object", isPromise = (r) => isObject(r) && isFunction(r.then) && isFunction(r.catch), objectToString = Object.prototype.toString, toTypeString = (r) => objectToString.call(r), toRawType = (r) => toTypeString(r).slice(8, -1), isPlainObject = (r) => toTypeString(r) === "[object Object]", isIntegerKey = (r) => isString(r) && r !== "NaN" && r[0] !== "-" && "" + parseInt(r, 10) === r, isReservedProp = /* @__PURE__ */ makeMap(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
), cacheStringFunction = (r) => {
  const u = /* @__PURE__ */ Object.create(null);
  return (d) => u[d] || (u[d] = r(d));
}, camelizeRE = /-(\w)/g, camelize = cacheStringFunction((r) => r.replace(camelizeRE, (u, d) => d ? d.toUpperCase() : "")), hyphenateRE = /\B([A-Z])/g, hyphenate = cacheStringFunction(
  (r) => r.replace(hyphenateRE, "-$1").toLowerCase()
), capitalize = cacheStringFunction(
  (r) => r.charAt(0).toUpperCase() + r.slice(1)
), toHandlerKey = cacheStringFunction(
  (r) => r ? `on${capitalize(r)}` : ""
), hasChanged = (r, u) => !Object.is(r, u), invokeArrayFns = (r, u) => {
  for (let d = 0; d < r.length; d++)
    r[d](u);
}, def = (r, u, d) => {
  Object.defineProperty(r, u, {
    configurable: !0,
    enumerable: !1,
    value: d
  });
}, looseToNumber = (r) => {
  const u = parseFloat(r);
  return isNaN(u) ? r : u;
}, toNumber = (r) => {
  const u = isString(r) ? Number(r) : NaN;
  return isNaN(u) ? r : u;
};
let _globalThis;
const getGlobalThis = () => _globalThis || (_globalThis = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {}), GLOBALS_WHITE_LISTED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console", isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);
function normalizeStyle(r) {
  if (isArray(r)) {
    const u = {};
    for (let d = 0; d < r.length; d++) {
      const v = r[d], w = isString(v) ? parseStringStyle(v) : normalizeStyle(v);
      if (w)
        for (const C in w)
          u[C] = w[C];
    }
    return u;
  } else {
    if (isString(r))
      return r;
    if (isObject(r))
      return r;
  }
}
const listDelimiterRE = /;(?![^(]*\))/g, propertyDelimiterRE = /:([^]+)/, styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(r) {
  const u = {};
  return r.replace(styleCommentRE, "").split(listDelimiterRE).forEach((d) => {
    if (d) {
      const v = d.split(propertyDelimiterRE);
      v.length > 1 && (u[v[0].trim()] = v[1].trim());
    }
  }), u;
}
function normalizeClass(r) {
  let u = "";
  if (isString(r))
    u = r;
  else if (isArray(r))
    for (let d = 0; d < r.length; d++) {
      const v = normalizeClass(r[d]);
      v && (u += v + " ");
    }
  else if (isObject(r))
    for (const d in r)
      r[d] && (u += d + " ");
  return u.trim();
}
function normalizeProps(r) {
  if (!r)
    return null;
  let { class: u, style: d } = r;
  return u && !isString(u) && (r.class = normalizeClass(u)), d && (r.style = normalizeStyle(d)), r;
}
const specialBooleanAttrs = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly", isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
function includeBooleanAttr(r) {
  return !!r || r === "";
}
function looseCompareArrays(r, u) {
  if (r.length !== u.length)
    return !1;
  let d = !0;
  for (let v = 0; d && v < r.length; v++)
    d = looseEqual(r[v], u[v]);
  return d;
}
function looseEqual(r, u) {
  if (r === u)
    return !0;
  let d = isDate(r), v = isDate(u);
  if (d || v)
    return d && v ? r.getTime() === u.getTime() : !1;
  if (d = isSymbol(r), v = isSymbol(u), d || v)
    return r === u;
  if (d = isArray(r), v = isArray(u), d || v)
    return d && v ? looseCompareArrays(r, u) : !1;
  if (d = isObject(r), v = isObject(u), d || v) {
    if (!d || !v)
      return !1;
    const w = Object.keys(r).length, C = Object.keys(u).length;
    if (w !== C)
      return !1;
    for (const L in r) {
      const E = r.hasOwnProperty(L), V = u.hasOwnProperty(L);
      if (E && !V || !E && V || !looseEqual(r[L], u[L]))
        return !1;
    }
  }
  return String(r) === String(u);
}
function looseIndexOf(r, u) {
  return r.findIndex((d) => looseEqual(d, u));
}
const toDisplayString = (r) => isString(r) ? r : r == null ? "" : isArray(r) || isObject(r) && (r.toString === objectToString || !isFunction(r.toString)) ? JSON.stringify(r, replacer, 2) : String(r), replacer = (r, u) => u && u.__v_isRef ? replacer(r, u.value) : isMap(u) ? {
  [`Map(${u.size})`]: [...u.entries()].reduce((d, [v, w]) => (d[`${v} =>`] = w, d), {})
} : isSet(u) ? {
  [`Set(${u.size})`]: [...u.values()]
} : isObject(u) && !isArray(u) && !isPlainObject(u) ? String(u) : u;
let activeEffectScope;
class EffectScope {
  constructor(u = !1) {
    this.detached = u, this._active = !0, this.effects = [], this.cleanups = [], this.parent = activeEffectScope, !u && activeEffectScope && (this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
      this
    ) - 1);
  }
  get active() {
    return this._active;
  }
  run(u) {
    if (this._active) {
      const d = activeEffectScope;
      try {
        return activeEffectScope = this, u();
      } finally {
        activeEffectScope = d;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    activeEffectScope = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    activeEffectScope = this.parent;
  }
  stop(u) {
    if (this._active) {
      let d, v;
      for (d = 0, v = this.effects.length; d < v; d++)
        this.effects[d].stop();
      for (d = 0, v = this.cleanups.length; d < v; d++)
        this.cleanups[d]();
      if (this.scopes)
        for (d = 0, v = this.scopes.length; d < v; d++)
          this.scopes[d].stop(!0);
      if (!this.detached && this.parent && !u) {
        const w = this.parent.scopes.pop();
        w && w !== this && (this.parent.scopes[this.index] = w, w.index = this.index);
      }
      this.parent = void 0, this._active = !1;
    }
  }
}
function effectScope(r) {
  return new EffectScope(r);
}
function recordEffectScope(r, u = activeEffectScope) {
  u && u.active && u.effects.push(r);
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(r) {
  activeEffectScope && activeEffectScope.cleanups.push(r);
}
const createDep = (r) => {
  const u = new Set(r);
  return u.w = 0, u.n = 0, u;
}, wasTracked = (r) => (r.w & trackOpBit) > 0, newTracked = (r) => (r.n & trackOpBit) > 0, initDepMarkers = ({ deps: r }) => {
  if (r.length)
    for (let u = 0; u < r.length; u++)
      r[u].w |= trackOpBit;
}, finalizeDepMarkers = (r) => {
  const { deps: u } = r;
  if (u.length) {
    let d = 0;
    for (let v = 0; v < u.length; v++) {
      const w = u[v];
      wasTracked(w) && !newTracked(w) ? w.delete(r) : u[d++] = w, w.w &= ~trackOpBit, w.n &= ~trackOpBit;
    }
    u.length = d;
  }
}, targetMap = /* @__PURE__ */ new WeakMap();
let effectTrackDepth = 0, trackOpBit = 1;
const maxMarkerBits = 30;
let activeEffect;
const ITERATE_KEY = Symbol(""), MAP_KEY_ITERATE_KEY = Symbol("");
class ReactiveEffect {
  constructor(u, d = null, v) {
    this.fn = u, this.scheduler = d, this.active = !0, this.deps = [], this.parent = void 0, recordEffectScope(this, v);
  }
  run() {
    if (!this.active)
      return this.fn();
    let u = activeEffect, d = shouldTrack;
    for (; u; ) {
      if (u === this)
        return;
      u = u.parent;
    }
    try {
      return this.parent = activeEffect, activeEffect = this, shouldTrack = !0, trackOpBit = 1 << ++effectTrackDepth, effectTrackDepth <= maxMarkerBits ? initDepMarkers(this) : cleanupEffect(this), this.fn();
    } finally {
      effectTrackDepth <= maxMarkerBits && finalizeDepMarkers(this), trackOpBit = 1 << --effectTrackDepth, activeEffect = this.parent, shouldTrack = d, this.parent = void 0, this.deferStop && this.stop();
    }
  }
  stop() {
    activeEffect === this ? this.deferStop = !0 : this.active && (cleanupEffect(this), this.onStop && this.onStop(), this.active = !1);
  }
}
function cleanupEffect(r) {
  const { deps: u } = r;
  if (u.length) {
    for (let d = 0; d < u.length; d++)
      u[d].delete(r);
    u.length = 0;
  }
}
function effect(r, u) {
  r.effect && (r = r.effect.fn);
  const d = new ReactiveEffect(r);
  u && (extend(d, u), u.scope && recordEffectScope(d, u.scope)), (!u || !u.lazy) && d.run();
  const v = d.run.bind(d);
  return v.effect = d, v;
}
function stop(r) {
  r.effect.stop();
}
let shouldTrack = !0;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack), shouldTrack = !1;
}
function resetTracking() {
  const r = trackStack.pop();
  shouldTrack = r === void 0 ? !0 : r;
}
function track(r, u, d) {
  if (shouldTrack && activeEffect) {
    let v = targetMap.get(r);
    v || targetMap.set(r, v = /* @__PURE__ */ new Map());
    let w = v.get(d);
    w || v.set(d, w = createDep()), trackEffects(w);
  }
}
function trackEffects(r, u) {
  let d = !1;
  effectTrackDepth <= maxMarkerBits ? newTracked(r) || (r.n |= trackOpBit, d = !wasTracked(r)) : d = !r.has(activeEffect), d && (r.add(activeEffect), activeEffect.deps.push(r));
}
function trigger(r, u, d, v, w, C) {
  const L = targetMap.get(r);
  if (!L)
    return;
  let E = [];
  if (u === "clear")
    E = [...L.values()];
  else if (d === "length" && isArray(r)) {
    const V = Number(v);
    L.forEach((N, z) => {
      (z === "length" || z >= V) && E.push(N);
    });
  } else
    switch (d !== void 0 && E.push(L.get(d)), u) {
      case "add":
        isArray(r) ? isIntegerKey(d) && E.push(L.get("length")) : (E.push(L.get(ITERATE_KEY)), isMap(r) && E.push(L.get(MAP_KEY_ITERATE_KEY)));
        break;
      case "delete":
        isArray(r) || (E.push(L.get(ITERATE_KEY)), isMap(r) && E.push(L.get(MAP_KEY_ITERATE_KEY)));
        break;
      case "set":
        isMap(r) && E.push(L.get(ITERATE_KEY));
        break;
    }
  if (E.length === 1)
    E[0] && triggerEffects(E[0]);
  else {
    const V = [];
    for (const N of E)
      N && V.push(...N);
    triggerEffects(createDep(V));
  }
}
function triggerEffects(r, u) {
  const d = isArray(r) ? r : [...r];
  for (const v of d)
    v.computed && triggerEffect(v);
  for (const v of d)
    v.computed || triggerEffect(v);
}
function triggerEffect(r, u) {
  (r !== activeEffect || r.allowRecurse) && (r.scheduler ? r.scheduler() : r.run());
}
function getDepFromReactive(r, u) {
  var d;
  return (d = targetMap.get(r)) == null ? void 0 : d.get(u);
}
const isNonTrackableKeys = /* @__PURE__ */ makeMap("__proto__,__v_isRef,__isVue"), builtInSymbols = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((r) => r !== "arguments" && r !== "caller").map((r) => Symbol[r]).filter(isSymbol)
), get$1 = /* @__PURE__ */ createGetter(), shallowGet = /* @__PURE__ */ createGetter(!1, !0), readonlyGet = /* @__PURE__ */ createGetter(!0), shallowReadonlyGet = /* @__PURE__ */ createGetter(!0, !0), arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();
function createArrayInstrumentations() {
  const r = {};
  return ["includes", "indexOf", "lastIndexOf"].forEach((u) => {
    r[u] = function(...d) {
      const v = toRaw(this);
      for (let C = 0, L = this.length; C < L; C++)
        track(v, "get", C + "");
      const w = v[u](...d);
      return w === -1 || w === !1 ? v[u](...d.map(toRaw)) : w;
    };
  }), ["push", "pop", "shift", "unshift", "splice"].forEach((u) => {
    r[u] = function(...d) {
      pauseTracking();
      const v = toRaw(this)[u].apply(this, d);
      return resetTracking(), v;
    };
  }), r;
}
function hasOwnProperty(r) {
  const u = toRaw(this);
  return track(u, "has", r), u.hasOwnProperty(r);
}
function createGetter(r = !1, u = !1) {
  return function(v, w, C) {
    if (w === "__v_isReactive")
      return !r;
    if (w === "__v_isReadonly")
      return r;
    if (w === "__v_isShallow")
      return u;
    if (w === "__v_raw" && C === (r ? u ? shallowReadonlyMap : readonlyMap : u ? shallowReactiveMap : reactiveMap).get(v))
      return v;
    const L = isArray(v);
    if (!r) {
      if (L && hasOwn(arrayInstrumentations, w))
        return Reflect.get(arrayInstrumentations, w, C);
      if (w === "hasOwnProperty")
        return hasOwnProperty;
    }
    const E = Reflect.get(v, w, C);
    return (isSymbol(w) ? builtInSymbols.has(w) : isNonTrackableKeys(w)) || (r || track(v, "get", w), u) ? E : isRef(E) ? L && isIntegerKey(w) ? E : E.value : isObject(E) ? r ? readonly(E) : reactive(E) : E;
  };
}
const set$1 = /* @__PURE__ */ createSetter(), shallowSet = /* @__PURE__ */ createSetter(!0);
function createSetter(r = !1) {
  return function(d, v, w, C) {
    let L = d[v];
    if (isReadonly(L) && isRef(L) && !isRef(w))
      return !1;
    if (!r && (!isShallow(w) && !isReadonly(w) && (L = toRaw(L), w = toRaw(w)), !isArray(d) && isRef(L) && !isRef(w)))
      return L.value = w, !0;
    const E = isArray(d) && isIntegerKey(v) ? Number(v) < d.length : hasOwn(d, v), V = Reflect.set(d, v, w, C);
    return d === toRaw(C) && (E ? hasChanged(w, L) && trigger(d, "set", v, w) : trigger(d, "add", v, w)), V;
  };
}
function deleteProperty(r, u) {
  const d = hasOwn(r, u);
  r[u];
  const v = Reflect.deleteProperty(r, u);
  return v && d && trigger(r, "delete", u, void 0), v;
}
function has$1(r, u) {
  const d = Reflect.has(r, u);
  return (!isSymbol(u) || !builtInSymbols.has(u)) && track(r, "has", u), d;
}
function ownKeys(r) {
  return track(r, "iterate", isArray(r) ? "length" : ITERATE_KEY), Reflect.ownKeys(r);
}
const mutableHandlers = {
  get: get$1,
  set: set$1,
  deleteProperty,
  has: has$1,
  ownKeys
}, readonlyHandlers = {
  get: readonlyGet,
  set(r, u) {
    return !0;
  },
  deleteProperty(r, u) {
    return !0;
  }
}, shallowReactiveHandlers = /* @__PURE__ */ extend(
  {},
  mutableHandlers,
  {
    get: shallowGet,
    set: shallowSet
  }
), shallowReadonlyHandlers = /* @__PURE__ */ extend(
  {},
  readonlyHandlers,
  {
    get: shallowReadonlyGet
  }
), toShallow = (r) => r, getProto = (r) => Reflect.getPrototypeOf(r);
function get(r, u, d = !1, v = !1) {
  r = r.__v_raw;
  const w = toRaw(r), C = toRaw(u);
  d || (u !== C && track(w, "get", u), track(w, "get", C));
  const { has: L } = getProto(w), E = v ? toShallow : d ? toReadonly : toReactive;
  if (L.call(w, u))
    return E(r.get(u));
  if (L.call(w, C))
    return E(r.get(C));
  r !== w && r.get(u);
}
function has(r, u = !1) {
  const d = this.__v_raw, v = toRaw(d), w = toRaw(r);
  return u || (r !== w && track(v, "has", r), track(v, "has", w)), r === w ? d.has(r) : d.has(r) || d.has(w);
}
function size(r, u = !1) {
  return r = r.__v_raw, !u && track(toRaw(r), "iterate", ITERATE_KEY), Reflect.get(r, "size", r);
}
function add(r) {
  r = toRaw(r);
  const u = toRaw(this);
  return getProto(u).has.call(u, r) || (u.add(r), trigger(u, "add", r, r)), this;
}
function set(r, u) {
  u = toRaw(u);
  const d = toRaw(this), { has: v, get: w } = getProto(d);
  let C = v.call(d, r);
  C || (r = toRaw(r), C = v.call(d, r));
  const L = w.call(d, r);
  return d.set(r, u), C ? hasChanged(u, L) && trigger(d, "set", r, u) : trigger(d, "add", r, u), this;
}
function deleteEntry(r) {
  const u = toRaw(this), { has: d, get: v } = getProto(u);
  let w = d.call(u, r);
  w || (r = toRaw(r), w = d.call(u, r)), v && v.call(u, r);
  const C = u.delete(r);
  return w && trigger(u, "delete", r, void 0), C;
}
function clear() {
  const r = toRaw(this), u = r.size !== 0, d = r.clear();
  return u && trigger(r, "clear", void 0, void 0), d;
}
function createForEach(r, u) {
  return function(v, w) {
    const C = this, L = C.__v_raw, E = toRaw(L), V = u ? toShallow : r ? toReadonly : toReactive;
    return !r && track(E, "iterate", ITERATE_KEY), L.forEach((N, z) => v.call(w, V(N), V(z), C));
  };
}
function createIterableMethod(r, u, d) {
  return function(...v) {
    const w = this.__v_raw, C = toRaw(w), L = isMap(C), E = r === "entries" || r === Symbol.iterator && L, V = r === "keys" && L, N = w[r](...v), z = d ? toShallow : u ? toReadonly : toReactive;
    return !u && track(
      C,
      "iterate",
      V ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    ), {
      // iterator protocol
      next() {
        const { value: st, done: et } = N.next();
        return et ? { value: st, done: et } : {
          value: E ? [z(st[0]), z(st[1])] : z(st),
          done: et
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(r) {
  return function(...u) {
    return r === "delete" ? !1 : this;
  };
}
function createInstrumentations() {
  const r = {
    get(C) {
      return get(this, C);
    },
    get size() {
      return size(this);
    },
    has,
    add,
    set,
    delete: deleteEntry,
    clear,
    forEach: createForEach(!1, !1)
  }, u = {
    get(C) {
      return get(this, C, !1, !0);
    },
    get size() {
      return size(this);
    },
    has,
    add,
    set,
    delete: deleteEntry,
    clear,
    forEach: createForEach(!1, !0)
  }, d = {
    get(C) {
      return get(this, C, !0);
    },
    get size() {
      return size(this, !0);
    },
    has(C) {
      return has.call(this, C, !0);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(!0, !1)
  }, v = {
    get(C) {
      return get(this, C, !0, !0);
    },
    get size() {
      return size(this, !0);
    },
    has(C) {
      return has.call(this, C, !0);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(!0, !0)
  };
  return ["keys", "values", "entries", Symbol.iterator].forEach((C) => {
    r[C] = createIterableMethod(
      C,
      !1,
      !1
    ), d[C] = createIterableMethod(
      C,
      !0,
      !1
    ), u[C] = createIterableMethod(
      C,
      !1,
      !0
    ), v[C] = createIterableMethod(
      C,
      !0,
      !0
    );
  }), [
    r,
    d,
    u,
    v
  ];
}
const [
  mutableInstrumentations,
  readonlyInstrumentations,
  shallowInstrumentations,
  shallowReadonlyInstrumentations
] = /* @__PURE__ */ createInstrumentations();
function createInstrumentationGetter(r, u) {
  const d = u ? r ? shallowReadonlyInstrumentations : shallowInstrumentations : r ? readonlyInstrumentations : mutableInstrumentations;
  return (v, w, C) => w === "__v_isReactive" ? !r : w === "__v_isReadonly" ? r : w === "__v_raw" ? v : Reflect.get(
    hasOwn(d, w) && w in v ? d : v,
    w,
    C
  );
}
const mutableCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!1, !1)
}, shallowCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!1, !0)
}, readonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!0, !1)
}, shallowReadonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!0, !0)
}, reactiveMap = /* @__PURE__ */ new WeakMap(), shallowReactiveMap = /* @__PURE__ */ new WeakMap(), readonlyMap = /* @__PURE__ */ new WeakMap(), shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(r) {
  switch (r) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(r) {
  return r.__v_skip || !Object.isExtensible(r) ? 0 : targetTypeMap(toRawType(r));
}
function reactive(r) {
  return isReadonly(r) ? r : createReactiveObject(
    r,
    !1,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function shallowReactive(r) {
  return createReactiveObject(
    r,
    !1,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(r) {
  return createReactiveObject(
    r,
    !0,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(r) {
  return createReactiveObject(
    r,
    !0,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(r, u, d, v, w) {
  if (!isObject(r) || r.__v_raw && !(u && r.__v_isReactive))
    return r;
  const C = w.get(r);
  if (C)
    return C;
  const L = getTargetType(r);
  if (L === 0)
    return r;
  const E = new Proxy(
    r,
    L === 2 ? v : d
  );
  return w.set(r, E), E;
}
function isReactive(r) {
  return isReadonly(r) ? isReactive(r.__v_raw) : !!(r && r.__v_isReactive);
}
function isReadonly(r) {
  return !!(r && r.__v_isReadonly);
}
function isShallow(r) {
  return !!(r && r.__v_isShallow);
}
function isProxy(r) {
  return isReactive(r) || isReadonly(r);
}
function toRaw(r) {
  const u = r && r.__v_raw;
  return u ? toRaw(u) : r;
}
function markRaw(r) {
  return def(r, "__v_skip", !0), r;
}
const toReactive = (r) => isObject(r) ? reactive(r) : r, toReadonly = (r) => isObject(r) ? readonly(r) : r;
function trackRefValue(r) {
  shouldTrack && activeEffect && (r = toRaw(r), trackEffects(r.dep || (r.dep = createDep())));
}
function triggerRefValue(r, u) {
  r = toRaw(r);
  const d = r.dep;
  d && triggerEffects(d);
}
function isRef(r) {
  return !!(r && r.__v_isRef === !0);
}
function ref(r) {
  return createRef(r, !1);
}
function shallowRef(r) {
  return createRef(r, !0);
}
function createRef(r, u) {
  return isRef(r) ? r : new RefImpl(r, u);
}
class RefImpl {
  constructor(u, d) {
    this.__v_isShallow = d, this.dep = void 0, this.__v_isRef = !0, this._rawValue = d ? u : toRaw(u), this._value = d ? u : toReactive(u);
  }
  get value() {
    return trackRefValue(this), this._value;
  }
  set value(u) {
    const d = this.__v_isShallow || isShallow(u) || isReadonly(u);
    u = d ? u : toRaw(u), hasChanged(u, this._rawValue) && (this._rawValue = u, this._value = d ? u : toReactive(u), triggerRefValue(this));
  }
}
function triggerRef(r) {
  triggerRefValue(r);
}
function unref(r) {
  return isRef(r) ? r.value : r;
}
function toValue(r) {
  return isFunction(r) ? r() : unref(r);
}
const shallowUnwrapHandlers = {
  get: (r, u, d) => unref(Reflect.get(r, u, d)),
  set: (r, u, d, v) => {
    const w = r[u];
    return isRef(w) && !isRef(d) ? (w.value = d, !0) : Reflect.set(r, u, d, v);
  }
};
function proxyRefs(r) {
  return isReactive(r) ? r : new Proxy(r, shallowUnwrapHandlers);
}
class CustomRefImpl {
  constructor(u) {
    this.dep = void 0, this.__v_isRef = !0;
    const { get: d, set: v } = u(
      () => trackRefValue(this),
      () => triggerRefValue(this)
    );
    this._get = d, this._set = v;
  }
  get value() {
    return this._get();
  }
  set value(u) {
    this._set(u);
  }
}
function customRef(r) {
  return new CustomRefImpl(r);
}
function toRefs(r) {
  const u = isArray(r) ? new Array(r.length) : {};
  for (const d in r)
    u[d] = propertyToRef(r, d);
  return u;
}
class ObjectRefImpl {
  constructor(u, d, v) {
    this._object = u, this._key = d, this._defaultValue = v, this.__v_isRef = !0;
  }
  get value() {
    const u = this._object[this._key];
    return u === void 0 ? this._defaultValue : u;
  }
  set value(u) {
    this._object[this._key] = u;
  }
  get dep() {
    return getDepFromReactive(toRaw(this._object), this._key);
  }
}
class GetterRefImpl {
  constructor(u) {
    this._getter = u, this.__v_isRef = !0, this.__v_isReadonly = !0;
  }
  get value() {
    return this._getter();
  }
}
function toRef(r, u, d) {
  return isRef(r) ? r : isFunction(r) ? new GetterRefImpl(r) : isObject(r) && arguments.length > 1 ? propertyToRef(r, u, d) : ref(r);
}
function propertyToRef(r, u, d) {
  const v = r[u];
  return isRef(v) ? v : new ObjectRefImpl(
    r,
    u,
    d
  );
}
class ComputedRefImpl {
  constructor(u, d, v, w) {
    this._setter = d, this.dep = void 0, this.__v_isRef = !0, this.__v_isReadonly = !1, this._dirty = !0, this.effect = new ReactiveEffect(u, () => {
      this._dirty || (this._dirty = !0, triggerRefValue(this));
    }), this.effect.computed = this, this.effect.active = this._cacheable = !w, this.__v_isReadonly = v;
  }
  get value() {
    const u = toRaw(this);
    return trackRefValue(u), (u._dirty || !u._cacheable) && (u._dirty = !1, u._value = u.effect.run()), u._value;
  }
  set value(u) {
    this._setter(u);
  }
}
function computed$1(r, u, d = !1) {
  let v, w;
  const C = isFunction(r);
  return C ? (v = r, w = NOOP) : (v = r.get, w = r.set), new ComputedRefImpl(v, w, C || !w, d);
}
function warn(r, ...u) {
}
function assertNumber(r, u) {
}
function callWithErrorHandling(r, u, d, v) {
  let w;
  try {
    w = v ? r(...v) : r();
  } catch (C) {
    handleError(C, u, d);
  }
  return w;
}
function callWithAsyncErrorHandling(r, u, d, v) {
  if (isFunction(r)) {
    const C = callWithErrorHandling(r, u, d, v);
    return C && isPromise(C) && C.catch((L) => {
      handleError(L, u, d);
    }), C;
  }
  const w = [];
  for (let C = 0; C < r.length; C++)
    w.push(callWithAsyncErrorHandling(r[C], u, d, v));
  return w;
}
function handleError(r, u, d, v = !0) {
  const w = u ? u.vnode : null;
  if (u) {
    let C = u.parent;
    const L = u.proxy, E = d;
    for (; C; ) {
      const N = C.ec;
      if (N) {
        for (let z = 0; z < N.length; z++)
          if (N[z](r, L, E) === !1)
            return;
      }
      C = C.parent;
    }
    const V = u.appContext.config.errorHandler;
    if (V) {
      callWithErrorHandling(
        V,
        null,
        10,
        [r, L, E]
      );
      return;
    }
  }
  logError(r, d, w, v);
}
function logError(r, u, d, v = !0) {
  console.error(r);
}
let isFlushing = !1, isFlushPending = !1;
const queue = [];
let flushIndex = 0;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null, postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
function nextTick(r) {
  const u = currentFlushPromise || resolvedPromise;
  return r ? u.then(this ? r.bind(this) : r) : u;
}
function findInsertionIndex(r) {
  let u = flushIndex + 1, d = queue.length;
  for (; u < d; ) {
    const v = u + d >>> 1;
    getId(queue[v]) < r ? u = v + 1 : d = v;
  }
  return u;
}
function queueJob(r) {
  (!queue.length || !queue.includes(
    r,
    isFlushing && r.allowRecurse ? flushIndex + 1 : flushIndex
  )) && (r.id == null ? queue.push(r) : queue.splice(findInsertionIndex(r.id), 0, r), queueFlush());
}
function queueFlush() {
  !isFlushing && !isFlushPending && (isFlushPending = !0, currentFlushPromise = resolvedPromise.then(flushJobs));
}
function invalidateJob(r) {
  const u = queue.indexOf(r);
  u > flushIndex && queue.splice(u, 1);
}
function queuePostFlushCb(r) {
  isArray(r) ? pendingPostFlushCbs.push(...r) : (!activePostFlushCbs || !activePostFlushCbs.includes(
    r,
    r.allowRecurse ? postFlushIndex + 1 : postFlushIndex
  )) && pendingPostFlushCbs.push(r), queueFlush();
}
function flushPreFlushCbs(r, u = isFlushing ? flushIndex + 1 : 0) {
  for (; u < queue.length; u++) {
    const d = queue[u];
    d && d.pre && (queue.splice(u, 1), u--, d());
  }
}
function flushPostFlushCbs(r) {
  if (pendingPostFlushCbs.length) {
    const u = [...new Set(pendingPostFlushCbs)];
    if (pendingPostFlushCbs.length = 0, activePostFlushCbs) {
      activePostFlushCbs.push(...u);
      return;
    }
    for (activePostFlushCbs = u, activePostFlushCbs.sort((d, v) => getId(d) - getId(v)), postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++)
      activePostFlushCbs[postFlushIndex]();
    activePostFlushCbs = null, postFlushIndex = 0;
  }
}
const getId = (r) => r.id == null ? 1 / 0 : r.id, comparator = (r, u) => {
  const d = getId(r) - getId(u);
  if (d === 0) {
    if (r.pre && !u.pre)
      return -1;
    if (u.pre && !r.pre)
      return 1;
  }
  return d;
};
function flushJobs(r) {
  isFlushPending = !1, isFlushing = !0, queue.sort(comparator);
  const u = NOOP;
  try {
    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
      const d = queue[flushIndex];
      d && d.active !== !1 && callWithErrorHandling(d, null, 14);
    }
  } finally {
    flushIndex = 0, queue.length = 0, flushPostFlushCbs(), isFlushing = !1, currentFlushPromise = null, (queue.length || pendingPostFlushCbs.length) && flushJobs();
  }
}
let devtools, buffer = [];
function setDevtoolsHook(r, u) {
  var d, v;
  devtools = r, devtools ? (devtools.enabled = !0, buffer.forEach(({ event: w, args: C }) => devtools.emit(w, ...C)), buffer = []) : /* handle late devtools injection - only do this if we are in an actual */ /* browser environment to avoid the timer handle stalling test runner exit */ /* (#4815) */ typeof window < "u" && // some envs mock window but not fully
  window.HTMLElement && // also exclude jsdom
  !((v = (d = window.navigator) == null ? void 0 : d.userAgent) != null && v.includes("jsdom")) ? ((u.__VUE_DEVTOOLS_HOOK_REPLAY__ = u.__VUE_DEVTOOLS_HOOK_REPLAY__ || []).push((C) => {
    setDevtoolsHook(C, u);
  }), setTimeout(() => {
    devtools || (u.__VUE_DEVTOOLS_HOOK_REPLAY__ = null, buffer = []);
  }, 3e3)) : buffer = [];
}
function emit(r, u, ...d) {
  if (r.isUnmounted)
    return;
  const v = r.vnode.props || EMPTY_OBJ;
  let w = d;
  const C = u.startsWith("update:"), L = C && u.slice(7);
  if (L && L in v) {
    const z = `${L === "modelValue" ? "model" : L}Modifiers`, { number: st, trim: et } = v[z] || EMPTY_OBJ;
    et && (w = d.map((ct) => isString(ct) ? ct.trim() : ct)), st && (w = d.map(looseToNumber));
  }
  let E, V = v[E = toHandlerKey(u)] || // also try camelCase event handler (#2249)
  v[E = toHandlerKey(camelize(u))];
  !V && C && (V = v[E = toHandlerKey(hyphenate(u))]), V && callWithAsyncErrorHandling(
    V,
    r,
    6,
    w
  );
  const N = v[E + "Once"];
  if (N) {
    if (!r.emitted)
      r.emitted = {};
    else if (r.emitted[E])
      return;
    r.emitted[E] = !0, callWithAsyncErrorHandling(
      N,
      r,
      6,
      w
    );
  }
}
function normalizeEmitsOptions(r, u, d = !1) {
  const v = u.emitsCache, w = v.get(r);
  if (w !== void 0)
    return w;
  const C = r.emits;
  let L = {}, E = !1;
  if (!isFunction(r)) {
    const V = (N) => {
      const z = normalizeEmitsOptions(N, u, !0);
      z && (E = !0, extend(L, z));
    };
    !d && u.mixins.length && u.mixins.forEach(V), r.extends && V(r.extends), r.mixins && r.mixins.forEach(V);
  }
  return !C && !E ? (isObject(r) && v.set(r, null), null) : (isArray(C) ? C.forEach((V) => L[V] = null) : extend(L, C), isObject(r) && v.set(r, L), L);
}
function isEmitListener(r, u) {
  return !r || !isOn(u) ? !1 : (u = u.slice(2).replace(/Once$/, ""), hasOwn(r, u[0].toLowerCase() + u.slice(1)) || hasOwn(r, hyphenate(u)) || hasOwn(r, u));
}
let currentRenderingInstance = null, currentScopeId = null;
function setCurrentRenderingInstance(r) {
  const u = currentRenderingInstance;
  return currentRenderingInstance = r, currentScopeId = r && r.type.__scopeId || null, u;
}
function pushScopeId(r) {
  currentScopeId = r;
}
function popScopeId() {
  currentScopeId = null;
}
const withScopeId = (r) => withCtx;
function withCtx(r, u = currentRenderingInstance, d) {
  if (!u || r._n)
    return r;
  const v = (...w) => {
    v._d && setBlockTracking(-1);
    const C = setCurrentRenderingInstance(u);
    let L;
    try {
      L = r(...w);
    } finally {
      setCurrentRenderingInstance(C), v._d && setBlockTracking(1);
    }
    return L;
  };
  return v._n = !0, v._c = !0, v._d = !0, v;
}
function markAttrsAccessed() {
}
function renderComponentRoot(r) {
  const {
    type: u,
    vnode: d,
    proxy: v,
    withProxy: w,
    props: C,
    propsOptions: [L],
    slots: E,
    attrs: V,
    emit: N,
    render: z,
    renderCache: st,
    data: et,
    setupState: ct,
    ctx: Ct,
    inheritAttrs: At
  } = r;
  let qt, vt;
  const _t = setCurrentRenderingInstance(r);
  try {
    if (d.shapeFlag & 4) {
      const ft = w || v;
      qt = normalizeVNode(
        z.call(
          ft,
          ft,
          st,
          C,
          ct,
          et,
          Ct
        )
      ), vt = V;
    } else {
      const ft = u;
      qt = normalizeVNode(
        ft.length > 1 ? ft(
          C,
          { attrs: V, slots: E, emit: N }
        ) : ft(
          C,
          null
          /* we know it doesn't need it */
        )
      ), vt = u.props ? V : getFunctionalFallthrough(V);
    }
  } catch (ft) {
    blockStack.length = 0, handleError(ft, r, 1), qt = createVNode(Comment);
  }
  let Et = qt;
  if (vt && At !== !1) {
    const ft = Object.keys(vt), { shapeFlag: wt } = Et;
    ft.length && wt & 7 && (L && ft.some(isModelListener) && (vt = filterModelListeners(
      vt,
      L
    )), Et = cloneVNode(Et, vt));
  }
  return d.dirs && (Et = cloneVNode(Et), Et.dirs = Et.dirs ? Et.dirs.concat(d.dirs) : d.dirs), d.transition && (Et.transition = d.transition), qt = Et, setCurrentRenderingInstance(_t), qt;
}
function filterSingleRoot(r) {
  let u;
  for (let d = 0; d < r.length; d++) {
    const v = r[d];
    if (isVNode(v)) {
      if (v.type !== Comment || v.children === "v-if") {
        if (u)
          return;
        u = v;
      }
    } else
      return;
  }
  return u;
}
const getFunctionalFallthrough = (r) => {
  let u;
  for (const d in r)
    (d === "class" || d === "style" || isOn(d)) && ((u || (u = {}))[d] = r[d]);
  return u;
}, filterModelListeners = (r, u) => {
  const d = {};
  for (const v in r)
    (!isModelListener(v) || !(v.slice(9) in u)) && (d[v] = r[v]);
  return d;
};
function shouldUpdateComponent(r, u, d) {
  const { props: v, children: w, component: C } = r, { props: L, children: E, patchFlag: V } = u, N = C.emitsOptions;
  if (u.dirs || u.transition)
    return !0;
  if (d && V >= 0) {
    if (V & 1024)
      return !0;
    if (V & 16)
      return v ? hasPropsChanged(v, L, N) : !!L;
    if (V & 8) {
      const z = u.dynamicProps;
      for (let st = 0; st < z.length; st++) {
        const et = z[st];
        if (L[et] !== v[et] && !isEmitListener(N, et))
          return !0;
      }
    }
  } else
    return (w || E) && (!E || !E.$stable) ? !0 : v === L ? !1 : v ? L ? hasPropsChanged(v, L, N) : !0 : !!L;
  return !1;
}
function hasPropsChanged(r, u, d) {
  const v = Object.keys(u);
  if (v.length !== Object.keys(r).length)
    return !0;
  for (let w = 0; w < v.length; w++) {
    const C = v[w];
    if (u[C] !== r[C] && !isEmitListener(d, C))
      return !0;
  }
  return !1;
}
function updateHOCHostEl({ vnode: r, parent: u }, d) {
  for (; u && u.subTree === r; )
    (r = u.vnode).el = d, u = u.parent;
}
const isSuspense = (r) => r.__isSuspense, SuspenseImpl = {
  name: "Suspense",
  // In order to make Suspense tree-shakable, we need to avoid importing it
  // directly in the renderer. The renderer checks for the __isSuspense flag
  // on a vnode's type and calls the `process` method, passing in renderer
  // internals.
  __isSuspense: !0,
  process(r, u, d, v, w, C, L, E, V, N) {
    r == null ? mountSuspense(
      u,
      d,
      v,
      w,
      C,
      L,
      E,
      V,
      N
    ) : patchSuspense(
      r,
      u,
      d,
      v,
      w,
      L,
      E,
      V,
      N
    );
  },
  hydrate: hydrateSuspense,
  create: createSuspenseBoundary,
  normalize: normalizeSuspenseChildren
}, Suspense = SuspenseImpl;
function triggerEvent(r, u) {
  const d = r.props && r.props[u];
  isFunction(d) && d();
}
function mountSuspense(r, u, d, v, w, C, L, E, V) {
  const {
    p: N,
    o: { createElement: z }
  } = V, st = z("div"), et = r.suspense = createSuspenseBoundary(
    r,
    w,
    v,
    u,
    st,
    d,
    C,
    L,
    E,
    V
  );
  N(
    null,
    et.pendingBranch = r.ssContent,
    st,
    null,
    v,
    et,
    C,
    L
  ), et.deps > 0 ? (triggerEvent(r, "onPending"), triggerEvent(r, "onFallback"), N(
    null,
    r.ssFallback,
    u,
    d,
    v,
    null,
    // fallback tree will not have suspense context
    C,
    L
  ), setActiveBranch(et, r.ssFallback)) : et.resolve(!1, !0);
}
function patchSuspense(r, u, d, v, w, C, L, E, { p: V, um: N, o: { createElement: z } }) {
  const st = u.suspense = r.suspense;
  st.vnode = u, u.el = r.el;
  const et = u.ssContent, ct = u.ssFallback, { activeBranch: Ct, pendingBranch: At, isInFallback: qt, isHydrating: vt } = st;
  if (At)
    st.pendingBranch = et, isSameVNodeType(et, At) ? (V(
      At,
      et,
      st.hiddenContainer,
      null,
      w,
      st,
      C,
      L,
      E
    ), st.deps <= 0 ? st.resolve() : qt && (V(
      Ct,
      ct,
      d,
      v,
      w,
      null,
      // fallback tree will not have suspense context
      C,
      L,
      E
    ), setActiveBranch(st, ct))) : (st.pendingId++, vt ? (st.isHydrating = !1, st.activeBranch = At) : N(At, w, st), st.deps = 0, st.effects.length = 0, st.hiddenContainer = z("div"), qt ? (V(
      null,
      et,
      st.hiddenContainer,
      null,
      w,
      st,
      C,
      L,
      E
    ), st.deps <= 0 ? st.resolve() : (V(
      Ct,
      ct,
      d,
      v,
      w,
      null,
      // fallback tree will not have suspense context
      C,
      L,
      E
    ), setActiveBranch(st, ct))) : Ct && isSameVNodeType(et, Ct) ? (V(
      Ct,
      et,
      d,
      v,
      w,
      st,
      C,
      L,
      E
    ), st.resolve(!0)) : (V(
      null,
      et,
      st.hiddenContainer,
      null,
      w,
      st,
      C,
      L,
      E
    ), st.deps <= 0 && st.resolve()));
  else if (Ct && isSameVNodeType(et, Ct))
    V(
      Ct,
      et,
      d,
      v,
      w,
      st,
      C,
      L,
      E
    ), setActiveBranch(st, et);
  else if (triggerEvent(u, "onPending"), st.pendingBranch = et, st.pendingId++, V(
    null,
    et,
    st.hiddenContainer,
    null,
    w,
    st,
    C,
    L,
    E
  ), st.deps <= 0)
    st.resolve();
  else {
    const { timeout: _t, pendingId: Et } = st;
    _t > 0 ? setTimeout(() => {
      st.pendingId === Et && st.fallback(ct);
    }, _t) : _t === 0 && st.fallback(ct);
  }
}
function createSuspenseBoundary(r, u, d, v, w, C, L, E, V, N, z = !1) {
  const {
    p: st,
    m: et,
    um: ct,
    n: Ct,
    o: { parentNode: At, remove: qt }
  } = N;
  let vt;
  const _t = isVNodeSuspensible(r);
  _t && u != null && u.pendingBranch && (vt = u.pendingId, u.deps++);
  const Et = r.props ? toNumber(r.props.timeout) : void 0, ft = {
    vnode: r,
    parent: u,
    parentComponent: d,
    isSVG: L,
    container: v,
    hiddenContainer: w,
    anchor: C,
    deps: 0,
    pendingId: 0,
    timeout: typeof Et == "number" ? Et : -1,
    activeBranch: null,
    pendingBranch: null,
    isInFallback: !0,
    isHydrating: z,
    isUnmounted: !1,
    effects: [],
    resolve(wt = !1, Zt = !1) {
      const {
        vnode: Ot,
        activeBranch: bt,
        pendingBranch: Xt,
        pendingId: ie,
        effects: Yt,
        parentComponent: ae,
        container: Re
      } = ft;
      if (ft.isHydrating)
        ft.isHydrating = !1;
      else if (!wt) {
        const ei = bt && Xt.transition && Xt.transition.mode === "out-in";
        ei && (bt.transition.afterLeave = () => {
          ie === ft.pendingId && et(Xt, Re, si, 0);
        });
        let { anchor: si } = ft;
        bt && (si = Ct(bt), ct(bt, ae, ft, !0)), ei || et(Xt, Re, si, 0);
      }
      setActiveBranch(ft, Xt), ft.pendingBranch = null, ft.isInFallback = !1;
      let me = ft.parent, Fi = !1;
      for (; me; ) {
        if (me.pendingBranch) {
          me.effects.push(...Yt), Fi = !0;
          break;
        }
        me = me.parent;
      }
      Fi || queuePostFlushCb(Yt), ft.effects = [], _t && u && u.pendingBranch && vt === u.pendingId && (u.deps--, u.deps === 0 && !Zt && u.resolve()), triggerEvent(Ot, "onResolve");
    },
    fallback(wt) {
      if (!ft.pendingBranch)
        return;
      const { vnode: Zt, activeBranch: Ot, parentComponent: bt, container: Xt, isSVG: ie } = ft;
      triggerEvent(Zt, "onFallback");
      const Yt = Ct(Ot), ae = () => {
        ft.isInFallback && (st(
          null,
          wt,
          Xt,
          Yt,
          bt,
          null,
          // fallback tree will not have suspense context
          ie,
          E,
          V
        ), setActiveBranch(ft, wt));
      }, Re = wt.transition && wt.transition.mode === "out-in";
      Re && (Ot.transition.afterLeave = ae), ft.isInFallback = !0, ct(
        Ot,
        bt,
        null,
        // no suspense so unmount hooks fire now
        !0
        // shouldRemove
      ), Re || ae();
    },
    move(wt, Zt, Ot) {
      ft.activeBranch && et(ft.activeBranch, wt, Zt, Ot), ft.container = wt;
    },
    next() {
      return ft.activeBranch && Ct(ft.activeBranch);
    },
    registerDep(wt, Zt) {
      const Ot = !!ft.pendingBranch;
      Ot && ft.deps++;
      const bt = wt.vnode.el;
      wt.asyncDep.catch((Xt) => {
        handleError(Xt, wt, 0);
      }).then((Xt) => {
        if (wt.isUnmounted || ft.isUnmounted || ft.pendingId !== wt.suspenseId)
          return;
        wt.asyncResolved = !0;
        const { vnode: ie } = wt;
        handleSetupResult(wt, Xt, !1), bt && (ie.el = bt);
        const Yt = !bt && wt.subTree.el;
        Zt(
          wt,
          ie,
          // component may have been moved before resolve.
          // if this is not a hydration, instance.subTree will be the comment
          // placeholder.
          At(bt || wt.subTree.el),
          // anchor will not be used if this is hydration, so only need to
          // consider the comment placeholder case.
          bt ? null : Ct(wt.subTree),
          ft,
          L,
          V
        ), Yt && qt(Yt), updateHOCHostEl(wt, ie.el), Ot && --ft.deps === 0 && ft.resolve();
      });
    },
    unmount(wt, Zt) {
      ft.isUnmounted = !0, ft.activeBranch && ct(
        ft.activeBranch,
        d,
        wt,
        Zt
      ), ft.pendingBranch && ct(
        ft.pendingBranch,
        d,
        wt,
        Zt
      );
    }
  };
  return ft;
}
function hydrateSuspense(r, u, d, v, w, C, L, E, V) {
  const N = u.suspense = createSuspenseBoundary(
    u,
    v,
    d,
    r.parentNode,
    document.createElement("div"),
    null,
    w,
    C,
    L,
    E,
    !0
    /* hydrating */
  ), z = V(
    r,
    N.pendingBranch = u.ssContent,
    d,
    N,
    C,
    L
  );
  return N.deps === 0 && N.resolve(!1, !0), z;
}
function normalizeSuspenseChildren(r) {
  const { shapeFlag: u, children: d } = r, v = u & 32;
  r.ssContent = normalizeSuspenseSlot(
    v ? d.default : d
  ), r.ssFallback = v ? normalizeSuspenseSlot(d.fallback) : createVNode(Comment);
}
function normalizeSuspenseSlot(r) {
  let u;
  if (isFunction(r)) {
    const d = isBlockTreeEnabled && r._c;
    d && (r._d = !1, openBlock()), r = r(), d && (r._d = !0, u = currentBlock, closeBlock());
  }
  return isArray(r) && (r = filterSingleRoot(r)), r = normalizeVNode(r), u && !r.dynamicChildren && (r.dynamicChildren = u.filter((d) => d !== r)), r;
}
function queueEffectWithSuspense(r, u) {
  u && u.pendingBranch ? isArray(r) ? u.effects.push(...r) : u.effects.push(r) : queuePostFlushCb(r);
}
function setActiveBranch(r, u) {
  r.activeBranch = u;
  const { vnode: d, parentComponent: v } = r, w = d.el = u.el;
  v && v.subTree === d && (v.vnode.el = w, updateHOCHostEl(v, w));
}
function isVNodeSuspensible(r) {
  var u;
  return ((u = r.props) == null ? void 0 : u.suspensible) != null && r.props.suspensible !== !1;
}
function watchEffect(r, u) {
  return doWatch(r, null, u);
}
function watchPostEffect(r, u) {
  return doWatch(
    r,
    null,
    { flush: "post" }
  );
}
function watchSyncEffect(r, u) {
  return doWatch(
    r,
    null,
    { flush: "sync" }
  );
}
const INITIAL_WATCHER_VALUE = {};
function watch(r, u, d) {
  return doWatch(r, u, d);
}
function doWatch(r, u, { immediate: d, deep: v, flush: w, onTrack: C, onTrigger: L } = EMPTY_OBJ) {
  var E;
  const V = getCurrentScope() === ((E = currentInstance) == null ? void 0 : E.scope) ? currentInstance : null;
  let N, z = !1, st = !1;
  if (isRef(r) ? (N = () => r.value, z = isShallow(r)) : isReactive(r) ? (N = () => r, v = !0) : isArray(r) ? (st = !0, z = r.some((ft) => isReactive(ft) || isShallow(ft)), N = () => r.map((ft) => {
    if (isRef(ft))
      return ft.value;
    if (isReactive(ft))
      return traverse(ft);
    if (isFunction(ft))
      return callWithErrorHandling(ft, V, 2);
  })) : isFunction(r) ? u ? N = () => callWithErrorHandling(r, V, 2) : N = () => {
    if (!(V && V.isUnmounted))
      return et && et(), callWithAsyncErrorHandling(
        r,
        V,
        3,
        [ct]
      );
  } : N = NOOP, u && v) {
    const ft = N;
    N = () => traverse(ft());
  }
  let et, ct = (ft) => {
    et = _t.onStop = () => {
      callWithErrorHandling(ft, V, 4);
    };
  }, Ct;
  if (isInSSRComponentSetup)
    if (ct = NOOP, u ? d && callWithAsyncErrorHandling(u, V, 3, [
      N(),
      st ? [] : void 0,
      ct
    ]) : N(), w === "sync") {
      const ft = useSSRContext();
      Ct = ft.__watcherHandles || (ft.__watcherHandles = []);
    } else
      return NOOP;
  let At = st ? new Array(r.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const qt = () => {
    if (_t.active)
      if (u) {
        const ft = _t.run();
        (v || z || (st ? ft.some(
          (wt, Zt) => hasChanged(wt, At[Zt])
        ) : hasChanged(ft, At))) && (et && et(), callWithAsyncErrorHandling(u, V, 3, [
          ft,
          // pass undefined as the old value when it's changed for the first time
          At === INITIAL_WATCHER_VALUE ? void 0 : st && At[0] === INITIAL_WATCHER_VALUE ? [] : At,
          ct
        ]), At = ft);
      } else
        _t.run();
  };
  qt.allowRecurse = !!u;
  let vt;
  w === "sync" ? vt = qt : w === "post" ? vt = () => queuePostRenderEffect(qt, V && V.suspense) : (qt.pre = !0, V && (qt.id = V.uid), vt = () => queueJob(qt));
  const _t = new ReactiveEffect(N, vt);
  u ? d ? qt() : At = _t.run() : w === "post" ? queuePostRenderEffect(
    _t.run.bind(_t),
    V && V.suspense
  ) : _t.run();
  const Et = () => {
    _t.stop(), V && V.scope && remove(V.scope.effects, _t);
  };
  return Ct && Ct.push(Et), Et;
}
function instanceWatch(r, u, d) {
  const v = this.proxy, w = isString(r) ? r.includes(".") ? createPathGetter(v, r) : () => v[r] : r.bind(v, v);
  let C;
  isFunction(u) ? C = u : (C = u.handler, d = u);
  const L = currentInstance;
  setCurrentInstance(this);
  const E = doWatch(w, C.bind(v), d);
  return L ? setCurrentInstance(L) : unsetCurrentInstance(), E;
}
function createPathGetter(r, u) {
  const d = u.split(".");
  return () => {
    let v = r;
    for (let w = 0; w < d.length && v; w++)
      v = v[d[w]];
    return v;
  };
}
function traverse(r, u) {
  if (!isObject(r) || r.__v_skip || (u = u || /* @__PURE__ */ new Set(), u.has(r)))
    return r;
  if (u.add(r), isRef(r))
    traverse(r.value, u);
  else if (isArray(r))
    for (let d = 0; d < r.length; d++)
      traverse(r[d], u);
  else if (isSet(r) || isMap(r))
    r.forEach((d) => {
      traverse(d, u);
    });
  else if (isPlainObject(r))
    for (const d in r)
      traverse(r[d], u);
  return r;
}
function withDirectives(r, u) {
  const d = currentRenderingInstance;
  if (d === null)
    return r;
  const v = getExposeProxy(d) || d.proxy, w = r.dirs || (r.dirs = []);
  for (let C = 0; C < u.length; C++) {
    let [L, E, V, N = EMPTY_OBJ] = u[C];
    L && (isFunction(L) && (L = {
      mounted: L,
      updated: L
    }), L.deep && traverse(E), w.push({
      dir: L,
      instance: v,
      value: E,
      oldValue: void 0,
      arg: V,
      modifiers: N
    }));
  }
  return r;
}
function invokeDirectiveHook(r, u, d, v) {
  const w = r.dirs, C = u && u.dirs;
  for (let L = 0; L < w.length; L++) {
    const E = w[L];
    C && (E.oldValue = C[L].value);
    let V = E.dir[v];
    V && (pauseTracking(), callWithAsyncErrorHandling(V, d, 8, [
      r.el,
      E,
      r,
      u
    ]), resetTracking());
  }
}
function useTransitionState() {
  const r = {
    isMounted: !1,
    isLeaving: !1,
    isUnmounting: !1,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  return onMounted(() => {
    r.isMounted = !0;
  }), onBeforeUnmount(() => {
    r.isUnmounting = !0;
  }), r;
}
const TransitionHookValidator = [Function, Array], BaseTransitionPropsValidators = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: TransitionHookValidator,
  onEnter: TransitionHookValidator,
  onAfterEnter: TransitionHookValidator,
  onEnterCancelled: TransitionHookValidator,
  // leave
  onBeforeLeave: TransitionHookValidator,
  onLeave: TransitionHookValidator,
  onAfterLeave: TransitionHookValidator,
  onLeaveCancelled: TransitionHookValidator,
  // appear
  onBeforeAppear: TransitionHookValidator,
  onAppear: TransitionHookValidator,
  onAfterAppear: TransitionHookValidator,
  onAppearCancelled: TransitionHookValidator
}, BaseTransitionImpl = {
  name: "BaseTransition",
  props: BaseTransitionPropsValidators,
  setup(r, { slots: u }) {
    const d = getCurrentInstance(), v = useTransitionState();
    let w;
    return () => {
      const C = u.default && getTransitionRawChildren(u.default(), !0);
      if (!C || !C.length)
        return;
      let L = C[0];
      if (C.length > 1) {
        for (const At of C)
          if (At.type !== Comment) {
            L = At;
            break;
          }
      }
      const E = toRaw(r), { mode: V } = E;
      if (v.isLeaving)
        return emptyPlaceholder(L);
      const N = getKeepAliveChild(L);
      if (!N)
        return emptyPlaceholder(L);
      const z = resolveTransitionHooks(
        N,
        E,
        v,
        d
      );
      setTransitionHooks(N, z);
      const st = d.subTree, et = st && getKeepAliveChild(st);
      let ct = !1;
      const { getTransitionKey: Ct } = N.type;
      if (Ct) {
        const At = Ct();
        w === void 0 ? w = At : At !== w && (w = At, ct = !0);
      }
      if (et && et.type !== Comment && (!isSameVNodeType(N, et) || ct)) {
        const At = resolveTransitionHooks(
          et,
          E,
          v,
          d
        );
        if (setTransitionHooks(et, At), V === "out-in")
          return v.isLeaving = !0, At.afterLeave = () => {
            v.isLeaving = !1, d.update.active !== !1 && d.update();
          }, emptyPlaceholder(L);
        V === "in-out" && N.type !== Comment && (At.delayLeave = (qt, vt, _t) => {
          const Et = getLeavingNodesForType(
            v,
            et
          );
          Et[String(et.key)] = et, qt._leaveCb = () => {
            vt(), qt._leaveCb = void 0, delete z.delayedLeave;
          }, z.delayedLeave = _t;
        });
      }
      return L;
    };
  }
}, BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(r, u) {
  const { leavingVNodes: d } = r;
  let v = d.get(u.type);
  return v || (v = /* @__PURE__ */ Object.create(null), d.set(u.type, v)), v;
}
function resolveTransitionHooks(r, u, d, v) {
  const {
    appear: w,
    mode: C,
    persisted: L = !1,
    onBeforeEnter: E,
    onEnter: V,
    onAfterEnter: N,
    onEnterCancelled: z,
    onBeforeLeave: st,
    onLeave: et,
    onAfterLeave: ct,
    onLeaveCancelled: Ct,
    onBeforeAppear: At,
    onAppear: qt,
    onAfterAppear: vt,
    onAppearCancelled: _t
  } = u, Et = String(r.key), ft = getLeavingNodesForType(d, r), wt = (bt, Xt) => {
    bt && callWithAsyncErrorHandling(
      bt,
      v,
      9,
      Xt
    );
  }, Zt = (bt, Xt) => {
    const ie = Xt[1];
    wt(bt, Xt), isArray(bt) ? bt.every((Yt) => Yt.length <= 1) && ie() : bt.length <= 1 && ie();
  }, Ot = {
    mode: C,
    persisted: L,
    beforeEnter(bt) {
      let Xt = E;
      if (!d.isMounted)
        if (w)
          Xt = At || E;
        else
          return;
      bt._leaveCb && bt._leaveCb(
        !0
        /* cancelled */
      );
      const ie = ft[Et];
      ie && isSameVNodeType(r, ie) && ie.el._leaveCb && ie.el._leaveCb(), wt(Xt, [bt]);
    },
    enter(bt) {
      let Xt = V, ie = N, Yt = z;
      if (!d.isMounted)
        if (w)
          Xt = qt || V, ie = vt || N, Yt = _t || z;
        else
          return;
      let ae = !1;
      const Re = bt._enterCb = (me) => {
        ae || (ae = !0, me ? wt(Yt, [bt]) : wt(ie, [bt]), Ot.delayedLeave && Ot.delayedLeave(), bt._enterCb = void 0);
      };
      Xt ? Zt(Xt, [bt, Re]) : Re();
    },
    leave(bt, Xt) {
      const ie = String(r.key);
      if (bt._enterCb && bt._enterCb(
        !0
        /* cancelled */
      ), d.isUnmounting)
        return Xt();
      wt(st, [bt]);
      let Yt = !1;
      const ae = bt._leaveCb = (Re) => {
        Yt || (Yt = !0, Xt(), Re ? wt(Ct, [bt]) : wt(ct, [bt]), bt._leaveCb = void 0, ft[ie] === r && delete ft[ie]);
      };
      ft[ie] = r, et ? Zt(et, [bt, ae]) : ae();
    },
    clone(bt) {
      return resolveTransitionHooks(bt, u, d, v);
    }
  };
  return Ot;
}
function emptyPlaceholder(r) {
  if (isKeepAlive(r))
    return r = cloneVNode(r), r.children = null, r;
}
function getKeepAliveChild(r) {
  return isKeepAlive(r) ? r.children ? r.children[0] : void 0 : r;
}
function setTransitionHooks(r, u) {
  r.shapeFlag & 6 && r.component ? setTransitionHooks(r.component.subTree, u) : r.shapeFlag & 128 ? (r.ssContent.transition = u.clone(r.ssContent), r.ssFallback.transition = u.clone(r.ssFallback)) : r.transition = u;
}
function getTransitionRawChildren(r, u = !1, d) {
  let v = [], w = 0;
  for (let C = 0; C < r.length; C++) {
    let L = r[C];
    const E = d == null ? L.key : String(d) + String(L.key != null ? L.key : C);
    L.type === Fragment ? (L.patchFlag & 128 && w++, v = v.concat(
      getTransitionRawChildren(L.children, u, E)
    )) : (u || L.type !== Comment) && v.push(E != null ? cloneVNode(L, { key: E }) : L);
  }
  if (w > 1)
    for (let C = 0; C < v.length; C++)
      v[C].patchFlag = -2;
  return v;
}
function defineComponent(r, u) {
  return isFunction(r) ? (
    // #8326: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    /* @__PURE__ */ (() => extend({ name: r.name }, u, { setup: r }))()
  ) : r;
}
const isAsyncWrapper = (r) => !!r.type.__asyncLoader;
function defineAsyncComponent(r) {
  isFunction(r) && (r = { loader: r });
  const {
    loader: u,
    loadingComponent: d,
    errorComponent: v,
    delay: w = 200,
    timeout: C,
    // undefined = never times out
    suspensible: L = !0,
    onError: E
  } = r;
  let V = null, N, z = 0;
  const st = () => (z++, V = null, et()), et = () => {
    let ct;
    return V || (ct = V = u().catch((Ct) => {
      if (Ct = Ct instanceof Error ? Ct : new Error(String(Ct)), E)
        return new Promise((At, qt) => {
          E(Ct, () => At(st()), () => qt(Ct), z + 1);
        });
      throw Ct;
    }).then((Ct) => ct !== V && V ? V : (Ct && (Ct.__esModule || Ct[Symbol.toStringTag] === "Module") && (Ct = Ct.default), N = Ct, Ct)));
  };
  return defineComponent({
    name: "AsyncComponentWrapper",
    __asyncLoader: et,
    get __asyncResolved() {
      return N;
    },
    setup() {
      const ct = currentInstance;
      if (N)
        return () => createInnerComp(N, ct);
      const Ct = (_t) => {
        V = null, handleError(
          _t,
          ct,
          13,
          !v
          /* do not throw in dev if user provided error component */
        );
      };
      if (L && ct.suspense || isInSSRComponentSetup)
        return et().then((_t) => () => createInnerComp(_t, ct)).catch((_t) => (Ct(_t), () => v ? createVNode(v, {
          error: _t
        }) : null));
      const At = ref(!1), qt = ref(), vt = ref(!!w);
      return w && setTimeout(() => {
        vt.value = !1;
      }, w), C != null && setTimeout(() => {
        if (!At.value && !qt.value) {
          const _t = new Error(
            `Async component timed out after ${C}ms.`
          );
          Ct(_t), qt.value = _t;
        }
      }, C), et().then(() => {
        At.value = !0, ct.parent && isKeepAlive(ct.parent.vnode) && queueJob(ct.parent.update);
      }).catch((_t) => {
        Ct(_t), qt.value = _t;
      }), () => {
        if (At.value && N)
          return createInnerComp(N, ct);
        if (qt.value && v)
          return createVNode(v, {
            error: qt.value
          });
        if (d && !vt.value)
          return createVNode(d);
      };
    }
  });
}
function createInnerComp(r, u) {
  const { ref: d, props: v, children: w, ce: C } = u.vnode, L = createVNode(r, v, w);
  return L.ref = d, L.ce = C, delete u.vnode.ce, L;
}
const isKeepAlive = (r) => r.type.__isKeepAlive, KeepAliveImpl = {
  name: "KeepAlive",
  // Marker for special handling inside the renderer. We are not using a ===
  // check directly on KeepAlive in the renderer, because importing it directly
  // would prevent it from being tree-shaken.
  __isKeepAlive: !0,
  props: {
    include: [String, RegExp, Array],
    exclude: [String, RegExp, Array],
    max: [String, Number]
  },
  setup(r, { slots: u }) {
    const d = getCurrentInstance(), v = d.ctx;
    if (!v.renderer)
      return () => {
        const _t = u.default && u.default();
        return _t && _t.length === 1 ? _t[0] : _t;
      };
    const w = /* @__PURE__ */ new Map(), C = /* @__PURE__ */ new Set();
    let L = null;
    const E = d.suspense, {
      renderer: {
        p: V,
        m: N,
        um: z,
        o: { createElement: st }
      }
    } = v, et = st("div");
    v.activate = (_t, Et, ft, wt, Zt) => {
      const Ot = _t.component;
      N(_t, Et, ft, 0, E), V(
        Ot.vnode,
        _t,
        Et,
        ft,
        Ot,
        E,
        wt,
        _t.slotScopeIds,
        Zt
      ), queuePostRenderEffect(() => {
        Ot.isDeactivated = !1, Ot.a && invokeArrayFns(Ot.a);
        const bt = _t.props && _t.props.onVnodeMounted;
        bt && invokeVNodeHook(bt, Ot.parent, _t);
      }, E);
    }, v.deactivate = (_t) => {
      const Et = _t.component;
      N(_t, et, null, 1, E), queuePostRenderEffect(() => {
        Et.da && invokeArrayFns(Et.da);
        const ft = _t.props && _t.props.onVnodeUnmounted;
        ft && invokeVNodeHook(ft, Et.parent, _t), Et.isDeactivated = !0;
      }, E);
    };
    function ct(_t) {
      resetShapeFlag(_t), z(_t, d, E, !0);
    }
    function Ct(_t) {
      w.forEach((Et, ft) => {
        const wt = getComponentName(Et.type);
        wt && (!_t || !_t(wt)) && At(ft);
      });
    }
    function At(_t) {
      const Et = w.get(_t);
      !L || !isSameVNodeType(Et, L) ? ct(Et) : L && resetShapeFlag(L), w.delete(_t), C.delete(_t);
    }
    watch(
      () => [r.include, r.exclude],
      ([_t, Et]) => {
        _t && Ct((ft) => matches(_t, ft)), Et && Ct((ft) => !matches(Et, ft));
      },
      // prune post-render after `current` has been updated
      { flush: "post", deep: !0 }
    );
    let qt = null;
    const vt = () => {
      qt != null && w.set(qt, getInnerChild(d.subTree));
    };
    return onMounted(vt), onUpdated(vt), onBeforeUnmount(() => {
      w.forEach((_t) => {
        const { subTree: Et, suspense: ft } = d, wt = getInnerChild(Et);
        if (_t.type === wt.type && _t.key === wt.key) {
          resetShapeFlag(wt);
          const Zt = wt.component.da;
          Zt && queuePostRenderEffect(Zt, ft);
          return;
        }
        ct(_t);
      });
    }), () => {
      if (qt = null, !u.default)
        return null;
      const _t = u.default(), Et = _t[0];
      if (_t.length > 1)
        return L = null, _t;
      if (!isVNode(Et) || !(Et.shapeFlag & 4) && !(Et.shapeFlag & 128))
        return L = null, Et;
      let ft = getInnerChild(Et);
      const wt = ft.type, Zt = getComponentName(
        isAsyncWrapper(ft) ? ft.type.__asyncResolved || {} : wt
      ), { include: Ot, exclude: bt, max: Xt } = r;
      if (Ot && (!Zt || !matches(Ot, Zt)) || bt && Zt && matches(bt, Zt))
        return L = ft, Et;
      const ie = ft.key == null ? wt : ft.key, Yt = w.get(ie);
      return ft.el && (ft = cloneVNode(ft), Et.shapeFlag & 128 && (Et.ssContent = ft)), qt = ie, Yt ? (ft.el = Yt.el, ft.component = Yt.component, ft.transition && setTransitionHooks(ft, ft.transition), ft.shapeFlag |= 512, C.delete(ie), C.add(ie)) : (C.add(ie), Xt && C.size > parseInt(Xt, 10) && At(C.values().next().value)), ft.shapeFlag |= 256, L = ft, isSuspense(Et.type) ? Et : ft;
    };
  }
}, KeepAlive = KeepAliveImpl;
function matches(r, u) {
  return isArray(r) ? r.some((d) => matches(d, u)) : isString(r) ? r.split(",").includes(u) : isRegExp(r) ? r.test(u) : !1;
}
function onActivated(r, u) {
  registerKeepAliveHook(r, "a", u);
}
function onDeactivated(r, u) {
  registerKeepAliveHook(r, "da", u);
}
function registerKeepAliveHook(r, u, d = currentInstance) {
  const v = r.__wdc || (r.__wdc = () => {
    let w = d;
    for (; w; ) {
      if (w.isDeactivated)
        return;
      w = w.parent;
    }
    return r();
  });
  if (injectHook(u, v, d), d) {
    let w = d.parent;
    for (; w && w.parent; )
      isKeepAlive(w.parent.vnode) && injectToKeepAliveRoot(v, u, d, w), w = w.parent;
  }
}
function injectToKeepAliveRoot(r, u, d, v) {
  const w = injectHook(
    u,
    r,
    v,
    !0
    /* prepend */
  );
  onUnmounted(() => {
    remove(v[u], w);
  }, d);
}
function resetShapeFlag(r) {
  r.shapeFlag &= -257, r.shapeFlag &= -513;
}
function getInnerChild(r) {
  return r.shapeFlag & 128 ? r.ssContent : r;
}
function injectHook(r, u, d = currentInstance, v = !1) {
  if (d) {
    const w = d[r] || (d[r] = []), C = u.__weh || (u.__weh = (...L) => {
      if (d.isUnmounted)
        return;
      pauseTracking(), setCurrentInstance(d);
      const E = callWithAsyncErrorHandling(u, d, r, L);
      return unsetCurrentInstance(), resetTracking(), E;
    });
    return v ? w.unshift(C) : w.push(C), C;
  }
}
const createHook = (r) => (u, d = currentInstance) => (
  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)
  (!isInSSRComponentSetup || r === "sp") && injectHook(r, (...v) => u(...v), d)
), onBeforeMount = createHook("bm"), onMounted = createHook("m"), onBeforeUpdate = createHook("bu"), onUpdated = createHook("u"), onBeforeUnmount = createHook("bum"), onUnmounted = createHook("um"), onServerPrefetch = createHook("sp"), onRenderTriggered = createHook(
  "rtg"
), onRenderTracked = createHook(
  "rtc"
);
function onErrorCaptured(r, u = currentInstance) {
  injectHook("ec", r, u);
}
const COMPONENTS = "components", DIRECTIVES = "directives";
function resolveComponent(r, u) {
  return resolveAsset(COMPONENTS, r, !0, u) || r;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(r) {
  return isString(r) ? resolveAsset(COMPONENTS, r, !1) || r : r || NULL_DYNAMIC_COMPONENT;
}
function resolveDirective(r) {
  return resolveAsset(DIRECTIVES, r);
}
function resolveAsset(r, u, d = !0, v = !1) {
  const w = currentRenderingInstance || currentInstance;
  if (w) {
    const C = w.type;
    if (r === COMPONENTS) {
      const E = getComponentName(
        C,
        !1
        /* do not include inferred name to avoid breaking existing code */
      );
      if (E && (E === u || E === camelize(u) || E === capitalize(camelize(u))))
        return C;
    }
    const L = (
      // local registration
      // check instance[type] first which is resolved for options API
      resolve(w[r] || C[r], u) || // global registration
      resolve(w.appContext[r], u)
    );
    return !L && v ? C : L;
  }
}
function resolve(r, u) {
  return r && (r[u] || r[camelize(u)] || r[capitalize(camelize(u))]);
}
function renderList(r, u, d, v) {
  let w;
  const C = d && d[v];
  if (isArray(r) || isString(r)) {
    w = new Array(r.length);
    for (let L = 0, E = r.length; L < E; L++)
      w[L] = u(r[L], L, void 0, C && C[L]);
  } else if (typeof r == "number") {
    w = new Array(r);
    for (let L = 0; L < r; L++)
      w[L] = u(L + 1, L, void 0, C && C[L]);
  } else if (isObject(r))
    if (r[Symbol.iterator])
      w = Array.from(
        r,
        (L, E) => u(L, E, void 0, C && C[E])
      );
    else {
      const L = Object.keys(r);
      w = new Array(L.length);
      for (let E = 0, V = L.length; E < V; E++) {
        const N = L[E];
        w[E] = u(r[N], N, E, C && C[E]);
      }
    }
  else
    w = [];
  return d && (d[v] = w), w;
}
function createSlots(r, u) {
  for (let d = 0; d < u.length; d++) {
    const v = u[d];
    if (isArray(v))
      for (let w = 0; w < v.length; w++)
        r[v[w].name] = v[w].fn;
    else
      v && (r[v.name] = v.key ? (...w) => {
        const C = v.fn(...w);
        return C && (C.key = v.key), C;
      } : v.fn);
  }
  return r;
}
function renderSlot(r, u, d = {}, v, w) {
  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE)
    return u !== "default" && (d.name = u), createVNode("slot", d, v && v());
  let C = r[u];
  C && C._c && (C._d = !1), openBlock();
  const L = C && ensureValidVNode(C(d)), E = createBlock(
    Fragment,
    {
      key: d.key || // slot content array of a dynamic conditional slot may have a branch
      // key attached in the `createSlots` helper, respect that
      L && L.key || `_${u}`
    },
    L || (v ? v() : []),
    L && r._ === 1 ? 64 : -2
  );
  return !w && E.scopeId && (E.slotScopeIds = [E.scopeId + "-s"]), C && C._c && (C._d = !0), E;
}
function ensureValidVNode(r) {
  return r.some((u) => isVNode(u) ? !(u.type === Comment || u.type === Fragment && !ensureValidVNode(u.children)) : !0) ? r : null;
}
function toHandlers(r, u) {
  const d = {};
  for (const v in r)
    d[u && /[A-Z]/.test(v) ? `on:${v}` : toHandlerKey(v)] = r[v];
  return d;
}
const getPublicInstance = (r) => r ? isStatefulComponent(r) ? getExposeProxy(r) || r.proxy : getPublicInstance(r.parent) : null, publicPropertiesMap = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {
    $: (r) => r,
    $el: (r) => r.vnode.el,
    $data: (r) => r.data,
    $props: (r) => r.props,
    $attrs: (r) => r.attrs,
    $slots: (r) => r.slots,
    $refs: (r) => r.refs,
    $parent: (r) => getPublicInstance(r.parent),
    $root: (r) => getPublicInstance(r.root),
    $emit: (r) => r.emit,
    $options: (r) => resolveMergedOptions(r),
    $forceUpdate: (r) => r.f || (r.f = () => queueJob(r.update)),
    $nextTick: (r) => r.n || (r.n = nextTick.bind(r.proxy)),
    $watch: (r) => instanceWatch.bind(r)
  })
), hasSetupBinding = (r, u) => r !== EMPTY_OBJ && !r.__isScriptSetup && hasOwn(r, u), PublicInstanceProxyHandlers = {
  get({ _: r }, u) {
    const { ctx: d, setupState: v, data: w, props: C, accessCache: L, type: E, appContext: V } = r;
    let N;
    if (u[0] !== "$") {
      const ct = L[u];
      if (ct !== void 0)
        switch (ct) {
          case 1:
            return v[u];
          case 2:
            return w[u];
          case 4:
            return d[u];
          case 3:
            return C[u];
        }
      else {
        if (hasSetupBinding(v, u))
          return L[u] = 1, v[u];
        if (w !== EMPTY_OBJ && hasOwn(w, u))
          return L[u] = 2, w[u];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (N = r.propsOptions[0]) && hasOwn(N, u)
        )
          return L[u] = 3, C[u];
        if (d !== EMPTY_OBJ && hasOwn(d, u))
          return L[u] = 4, d[u];
        shouldCacheAccess && (L[u] = 0);
      }
    }
    const z = publicPropertiesMap[u];
    let st, et;
    if (z)
      return u === "$attrs" && track(r, "get", u), z(r);
    if (
      // css module (injected by vue-loader)
      (st = E.__cssModules) && (st = st[u])
    )
      return st;
    if (d !== EMPTY_OBJ && hasOwn(d, u))
      return L[u] = 4, d[u];
    if (
      // global properties
      et = V.config.globalProperties, hasOwn(et, u)
    )
      return et[u];
  },
  set({ _: r }, u, d) {
    const { data: v, setupState: w, ctx: C } = r;
    return hasSetupBinding(w, u) ? (w[u] = d, !0) : v !== EMPTY_OBJ && hasOwn(v, u) ? (v[u] = d, !0) : hasOwn(r.props, u) || u[0] === "$" && u.slice(1) in r ? !1 : (C[u] = d, !0);
  },
  has({
    _: { data: r, setupState: u, accessCache: d, ctx: v, appContext: w, propsOptions: C }
  }, L) {
    let E;
    return !!d[L] || r !== EMPTY_OBJ && hasOwn(r, L) || hasSetupBinding(u, L) || (E = C[0]) && hasOwn(E, L) || hasOwn(v, L) || hasOwn(publicPropertiesMap, L) || hasOwn(w.config.globalProperties, L);
  },
  defineProperty(r, u, d) {
    return d.get != null ? r._.accessCache[u] = 0 : hasOwn(d, "value") && this.set(r, u, d.value, null), Reflect.defineProperty(r, u, d);
  }
}, RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend(
  {},
  PublicInstanceProxyHandlers,
  {
    get(r, u) {
      if (u !== Symbol.unscopables)
        return PublicInstanceProxyHandlers.get(r, u, r);
    },
    has(r, u) {
      return u[0] !== "_" && !isGloballyWhitelisted(u);
    }
  }
);
function defineProps() {
  return null;
}
function defineEmits() {
  return null;
}
function defineExpose(r) {
}
function defineOptions(r) {
}
function defineSlots() {
  return null;
}
function defineModel() {
}
function withDefaults(r, u) {
  return null;
}
function useSlots() {
  return getContext().slots;
}
function useAttrs() {
  return getContext().attrs;
}
function useModel(r, u, d) {
  const v = getCurrentInstance();
  if (d && d.local) {
    const w = ref(r[u]);
    return watch(
      () => r[u],
      (C) => w.value = C
    ), watch(w, (C) => {
      C !== r[u] && v.emit(`update:${u}`, C);
    }), w;
  } else
    return {
      __v_isRef: !0,
      get value() {
        return r[u];
      },
      set value(w) {
        v.emit(`update:${u}`, w);
      }
    };
}
function getContext() {
  const r = getCurrentInstance();
  return r.setupContext || (r.setupContext = createSetupContext(r));
}
function normalizePropsOrEmits(r) {
  return isArray(r) ? r.reduce(
    (u, d) => (u[d] = null, u),
    {}
  ) : r;
}
function mergeDefaults(r, u) {
  const d = normalizePropsOrEmits(r);
  for (const v in u) {
    if (v.startsWith("__skip"))
      continue;
    let w = d[v];
    w ? isArray(w) || isFunction(w) ? w = d[v] = { type: w, default: u[v] } : w.default = u[v] : w === null && (w = d[v] = { default: u[v] }), w && u[`__skip_${v}`] && (w.skipFactory = !0);
  }
  return d;
}
function mergeModels(r, u) {
  return !r || !u ? r || u : isArray(r) && isArray(u) ? r.concat(u) : extend({}, normalizePropsOrEmits(r), normalizePropsOrEmits(u));
}
function createPropsRestProxy(r, u) {
  const d = {};
  for (const v in r)
    u.includes(v) || Object.defineProperty(d, v, {
      enumerable: !0,
      get: () => r[v]
    });
  return d;
}
function withAsyncContext(r) {
  const u = getCurrentInstance();
  let d = r();
  return unsetCurrentInstance(), isPromise(d) && (d = d.catch((v) => {
    throw setCurrentInstance(u), v;
  })), [d, () => setCurrentInstance(u)];
}
let shouldCacheAccess = !0;
function applyOptions(r) {
  const u = resolveMergedOptions(r), d = r.proxy, v = r.ctx;
  shouldCacheAccess = !1, u.beforeCreate && callHook$1(u.beforeCreate, r, "bc");
  const {
    // state
    data: w,
    computed: C,
    methods: L,
    watch: E,
    provide: V,
    inject: N,
    // lifecycle
    created: z,
    beforeMount: st,
    mounted: et,
    beforeUpdate: ct,
    updated: Ct,
    activated: At,
    deactivated: qt,
    beforeDestroy: vt,
    beforeUnmount: _t,
    destroyed: Et,
    unmounted: ft,
    render: wt,
    renderTracked: Zt,
    renderTriggered: Ot,
    errorCaptured: bt,
    serverPrefetch: Xt,
    // public API
    expose: ie,
    inheritAttrs: Yt,
    // assets
    components: ae,
    directives: Re,
    filters: me
  } = u;
  if (N && resolveInjections(N, v, null), L)
    for (const si in L) {
      const $e = L[si];
      isFunction($e) && (v[si] = $e.bind(d));
    }
  if (w) {
    const si = w.call(d, d);
    isObject(si) && (r.data = reactive(si));
  }
  if (shouldCacheAccess = !0, C)
    for (const si in C) {
      const $e = C[si], Ai = isFunction($e) ? $e.bind(d, d) : isFunction($e.get) ? $e.get.bind(d, d) : NOOP, ki = !isFunction($e) && isFunction($e.set) ? $e.set.bind(d) : NOOP, Hr = computed({
        get: Ai,
        set: ki
      });
      Object.defineProperty(v, si, {
        enumerable: !0,
        configurable: !0,
        get: () => Hr.value,
        set: (gr) => Hr.value = gr
      });
    }
  if (E)
    for (const si in E)
      createWatcher(E[si], v, d, si);
  if (V) {
    const si = isFunction(V) ? V.call(d) : V;
    Reflect.ownKeys(si).forEach(($e) => {
      provide($e, si[$e]);
    });
  }
  z && callHook$1(z, r, "c");
  function ei(si, $e) {
    isArray($e) ? $e.forEach((Ai) => si(Ai.bind(d))) : $e && si($e.bind(d));
  }
  if (ei(onBeforeMount, st), ei(onMounted, et), ei(onBeforeUpdate, ct), ei(onUpdated, Ct), ei(onActivated, At), ei(onDeactivated, qt), ei(onErrorCaptured, bt), ei(onRenderTracked, Zt), ei(onRenderTriggered, Ot), ei(onBeforeUnmount, _t), ei(onUnmounted, ft), ei(onServerPrefetch, Xt), isArray(ie))
    if (ie.length) {
      const si = r.exposed || (r.exposed = {});
      ie.forEach(($e) => {
        Object.defineProperty(si, $e, {
          get: () => d[$e],
          set: (Ai) => d[$e] = Ai
        });
      });
    } else
      r.exposed || (r.exposed = {});
  wt && r.render === NOOP && (r.render = wt), Yt != null && (r.inheritAttrs = Yt), ae && (r.components = ae), Re && (r.directives = Re);
}
function resolveInjections(r, u, d = NOOP) {
  isArray(r) && (r = normalizeInject(r));
  for (const v in r) {
    const w = r[v];
    let C;
    isObject(w) ? "default" in w ? C = inject(
      w.from || v,
      w.default,
      !0
      /* treat default function as factory */
    ) : C = inject(w.from || v) : C = inject(w), isRef(C) ? Object.defineProperty(u, v, {
      enumerable: !0,
      configurable: !0,
      get: () => C.value,
      set: (L) => C.value = L
    }) : u[v] = C;
  }
}
function callHook$1(r, u, d) {
  callWithAsyncErrorHandling(
    isArray(r) ? r.map((v) => v.bind(u.proxy)) : r.bind(u.proxy),
    u,
    d
  );
}
function createWatcher(r, u, d, v) {
  const w = v.includes(".") ? createPathGetter(d, v) : () => d[v];
  if (isString(r)) {
    const C = u[r];
    isFunction(C) && watch(w, C);
  } else if (isFunction(r))
    watch(w, r.bind(d));
  else if (isObject(r))
    if (isArray(r))
      r.forEach((C) => createWatcher(C, u, d, v));
    else {
      const C = isFunction(r.handler) ? r.handler.bind(d) : u[r.handler];
      isFunction(C) && watch(w, C, r);
    }
}
function resolveMergedOptions(r) {
  const u = r.type, { mixins: d, extends: v } = u, {
    mixins: w,
    optionsCache: C,
    config: { optionMergeStrategies: L }
  } = r.appContext, E = C.get(u);
  let V;
  return E ? V = E : !w.length && !d && !v ? V = u : (V = {}, w.length && w.forEach(
    (N) => mergeOptions(V, N, L, !0)
  ), mergeOptions(V, u, L)), isObject(u) && C.set(u, V), V;
}
function mergeOptions(r, u, d, v = !1) {
  const { mixins: w, extends: C } = u;
  C && mergeOptions(r, C, d, !0), w && w.forEach(
    (L) => mergeOptions(r, L, d, !0)
  );
  for (const L in u)
    if (!(v && L === "expose")) {
      const E = internalOptionMergeStrats[L] || d && d[L];
      r[L] = E ? E(r[L], u[L]) : u[L];
    }
  return r;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  // objects
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  // lifecycle
  beforeCreate: mergeAsArray,
  created: mergeAsArray,
  beforeMount: mergeAsArray,
  mounted: mergeAsArray,
  beforeUpdate: mergeAsArray,
  updated: mergeAsArray,
  beforeDestroy: mergeAsArray,
  beforeUnmount: mergeAsArray,
  destroyed: mergeAsArray,
  unmounted: mergeAsArray,
  activated: mergeAsArray,
  deactivated: mergeAsArray,
  errorCaptured: mergeAsArray,
  serverPrefetch: mergeAsArray,
  // assets
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  // watch
  watch: mergeWatchOptions,
  // provide / inject
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(r, u) {
  return u ? r ? function() {
    return extend(
      isFunction(r) ? r.call(this, this) : r,
      isFunction(u) ? u.call(this, this) : u
    );
  } : u : r;
}
function mergeInject(r, u) {
  return mergeObjectOptions(normalizeInject(r), normalizeInject(u));
}
function normalizeInject(r) {
  if (isArray(r)) {
    const u = {};
    for (let d = 0; d < r.length; d++)
      u[r[d]] = r[d];
    return u;
  }
  return r;
}
function mergeAsArray(r, u) {
  return r ? [...new Set([].concat(r, u))] : u;
}
function mergeObjectOptions(r, u) {
  return r ? extend(/* @__PURE__ */ Object.create(null), r, u) : u;
}
function mergeEmitsOrPropsOptions(r, u) {
  return r ? isArray(r) && isArray(u) ? [.../* @__PURE__ */ new Set([...r, ...u])] : extend(
    /* @__PURE__ */ Object.create(null),
    normalizePropsOrEmits(r),
    normalizePropsOrEmits(u ?? {})
  ) : u;
}
function mergeWatchOptions(r, u) {
  if (!r)
    return u;
  if (!u)
    return r;
  const d = extend(/* @__PURE__ */ Object.create(null), r);
  for (const v in u)
    d[v] = mergeAsArray(r[v], u[v]);
  return d;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let uid$1 = 0;
function createAppAPI(r, u) {
  return function(v, w = null) {
    isFunction(v) || (v = extend({}, v)), w != null && !isObject(w) && (w = null);
    const C = createAppContext(), L = /* @__PURE__ */ new Set();
    let E = !1;
    const V = C.app = {
      _uid: uid$1++,
      _component: v,
      _props: w,
      _container: null,
      _context: C,
      _instance: null,
      version: version$1,
      get config() {
        return C.config;
      },
      set config(N) {
      },
      use(N, ...z) {
        return L.has(N) || (N && isFunction(N.install) ? (L.add(N), N.install(V, ...z)) : isFunction(N) && (L.add(N), N(V, ...z))), V;
      },
      mixin(N) {
        return C.mixins.includes(N) || C.mixins.push(N), V;
      },
      component(N, z) {
        return z ? (C.components[N] = z, V) : C.components[N];
      },
      directive(N, z) {
        return z ? (C.directives[N] = z, V) : C.directives[N];
      },
      mount(N, z, st) {
        if (!E) {
          const et = createVNode(
            v,
            w
          );
          return et.appContext = C, z && u ? u(et, N) : r(et, N, st), E = !0, V._container = N, N.__vue_app__ = V, getExposeProxy(et.component) || et.component.proxy;
        }
      },
      unmount() {
        E && (r(null, V._container), delete V._container.__vue_app__);
      },
      provide(N, z) {
        return C.provides[N] = z, V;
      },
      runWithContext(N) {
        currentApp = V;
        try {
          return N();
        } finally {
          currentApp = null;
        }
      }
    };
    return V;
  };
}
let currentApp = null;
function provide(r, u) {
  if (currentInstance) {
    let d = currentInstance.provides;
    const v = currentInstance.parent && currentInstance.parent.provides;
    v === d && (d = currentInstance.provides = Object.create(v)), d[r] = u;
  }
}
function inject(r, u, d = !1) {
  const v = currentInstance || currentRenderingInstance;
  if (v || currentApp) {
    const w = v ? v.parent == null ? v.vnode.appContext && v.vnode.appContext.provides : v.parent.provides : currentApp._context.provides;
    if (w && r in w)
      return w[r];
    if (arguments.length > 1)
      return d && isFunction(u) ? u.call(v && v.proxy) : u;
  }
}
function hasInjectionContext() {
  return !!(currentInstance || currentRenderingInstance || currentApp);
}
function initProps(r, u, d, v = !1) {
  const w = {}, C = {};
  def(C, InternalObjectKey, 1), r.propsDefaults = /* @__PURE__ */ Object.create(null), setFullProps(r, u, w, C);
  for (const L in r.propsOptions[0])
    L in w || (w[L] = void 0);
  d ? r.props = v ? w : shallowReactive(w) : r.type.props ? r.props = w : r.props = C, r.attrs = C;
}
function updateProps(r, u, d, v) {
  const {
    props: w,
    attrs: C,
    vnode: { patchFlag: L }
  } = r, E = toRaw(w), [V] = r.propsOptions;
  let N = !1;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (v || L > 0) && !(L & 16)
  ) {
    if (L & 8) {
      const z = r.vnode.dynamicProps;
      for (let st = 0; st < z.length; st++) {
        let et = z[st];
        if (isEmitListener(r.emitsOptions, et))
          continue;
        const ct = u[et];
        if (V)
          if (hasOwn(C, et))
            ct !== C[et] && (C[et] = ct, N = !0);
          else {
            const Ct = camelize(et);
            w[Ct] = resolvePropValue(
              V,
              E,
              Ct,
              ct,
              r,
              !1
              /* isAbsent */
            );
          }
        else
          ct !== C[et] && (C[et] = ct, N = !0);
      }
    }
  } else {
    setFullProps(r, u, w, C) && (N = !0);
    let z;
    for (const st in E)
      (!u || // for camelCase
      !hasOwn(u, st) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((z = hyphenate(st)) === st || !hasOwn(u, z))) && (V ? d && // for camelCase
      (d[st] !== void 0 || // for kebab-case
      d[z] !== void 0) && (w[st] = resolvePropValue(
        V,
        E,
        st,
        void 0,
        r,
        !0
        /* isAbsent */
      )) : delete w[st]);
    if (C !== E)
      for (const st in C)
        (!u || !hasOwn(u, st)) && (delete C[st], N = !0);
  }
  N && trigger(r, "set", "$attrs");
}
function setFullProps(r, u, d, v) {
  const [w, C] = r.propsOptions;
  let L = !1, E;
  if (u)
    for (let V in u) {
      if (isReservedProp(V))
        continue;
      const N = u[V];
      let z;
      w && hasOwn(w, z = camelize(V)) ? !C || !C.includes(z) ? d[z] = N : (E || (E = {}))[z] = N : isEmitListener(r.emitsOptions, V) || (!(V in v) || N !== v[V]) && (v[V] = N, L = !0);
    }
  if (C) {
    const V = toRaw(d), N = E || EMPTY_OBJ;
    for (let z = 0; z < C.length; z++) {
      const st = C[z];
      d[st] = resolvePropValue(
        w,
        V,
        st,
        N[st],
        r,
        !hasOwn(N, st)
      );
    }
  }
  return L;
}
function resolvePropValue(r, u, d, v, w, C) {
  const L = r[d];
  if (L != null) {
    const E = hasOwn(L, "default");
    if (E && v === void 0) {
      const V = L.default;
      if (L.type !== Function && !L.skipFactory && isFunction(V)) {
        const { propsDefaults: N } = w;
        d in N ? v = N[d] : (setCurrentInstance(w), v = N[d] = V.call(
          null,
          u
        ), unsetCurrentInstance());
      } else
        v = V;
    }
    L[
      0
      /* shouldCast */
    ] && (C && !E ? v = !1 : L[
      1
      /* shouldCastTrue */
    ] && (v === "" || v === hyphenate(d)) && (v = !0));
  }
  return v;
}
function normalizePropsOptions(r, u, d = !1) {
  const v = u.propsCache, w = v.get(r);
  if (w)
    return w;
  const C = r.props, L = {}, E = [];
  let V = !1;
  if (!isFunction(r)) {
    const z = (st) => {
      V = !0;
      const [et, ct] = normalizePropsOptions(st, u, !0);
      extend(L, et), ct && E.push(...ct);
    };
    !d && u.mixins.length && u.mixins.forEach(z), r.extends && z(r.extends), r.mixins && r.mixins.forEach(z);
  }
  if (!C && !V)
    return isObject(r) && v.set(r, EMPTY_ARR), EMPTY_ARR;
  if (isArray(C))
    for (let z = 0; z < C.length; z++) {
      const st = camelize(C[z]);
      validatePropName(st) && (L[st] = EMPTY_OBJ);
    }
  else if (C)
    for (const z in C) {
      const st = camelize(z);
      if (validatePropName(st)) {
        const et = C[z], ct = L[st] = isArray(et) || isFunction(et) ? { type: et } : extend({}, et);
        if (ct) {
          const Ct = getTypeIndex(Boolean, ct.type), At = getTypeIndex(String, ct.type);
          ct[
            0
            /* shouldCast */
          ] = Ct > -1, ct[
            1
            /* shouldCastTrue */
          ] = At < 0 || Ct < At, (Ct > -1 || hasOwn(ct, "default")) && E.push(st);
        }
      }
    }
  const N = [L, E];
  return isObject(r) && v.set(r, N), N;
}
function validatePropName(r) {
  return r[0] !== "$";
}
function getType(r) {
  const u = r && r.toString().match(/^\s*(function|class) (\w+)/);
  return u ? u[2] : r === null ? "null" : "";
}
function isSameType(r, u) {
  return getType(r) === getType(u);
}
function getTypeIndex(r, u) {
  return isArray(u) ? u.findIndex((d) => isSameType(d, r)) : isFunction(u) && isSameType(u, r) ? 0 : -1;
}
const isInternalKey = (r) => r[0] === "_" || r === "$stable", normalizeSlotValue = (r) => isArray(r) ? r.map(normalizeVNode) : [normalizeVNode(r)], normalizeSlot = (r, u, d) => {
  if (u._n)
    return u;
  const v = withCtx((...w) => normalizeSlotValue(u(...w)), d);
  return v._c = !1, v;
}, normalizeObjectSlots = (r, u, d) => {
  const v = r._ctx;
  for (const w in r) {
    if (isInternalKey(w))
      continue;
    const C = r[w];
    if (isFunction(C))
      u[w] = normalizeSlot(w, C, v);
    else if (C != null) {
      const L = normalizeSlotValue(C);
      u[w] = () => L;
    }
  }
}, normalizeVNodeSlots = (r, u) => {
  const d = normalizeSlotValue(u);
  r.slots.default = () => d;
}, initSlots = (r, u) => {
  if (r.vnode.shapeFlag & 32) {
    const d = u._;
    d ? (r.slots = toRaw(u), def(u, "_", d)) : normalizeObjectSlots(
      u,
      r.slots = {}
    );
  } else
    r.slots = {}, u && normalizeVNodeSlots(r, u);
  def(r.slots, InternalObjectKey, 1);
}, updateSlots = (r, u, d) => {
  const { vnode: v, slots: w } = r;
  let C = !0, L = EMPTY_OBJ;
  if (v.shapeFlag & 32) {
    const E = u._;
    E ? d && E === 1 ? C = !1 : (extend(w, u), !d && E === 1 && delete w._) : (C = !u.$stable, normalizeObjectSlots(u, w)), L = u;
  } else
    u && (normalizeVNodeSlots(r, u), L = { default: 1 });
  if (C)
    for (const E in w)
      !isInternalKey(E) && !(E in L) && delete w[E];
};
function setRef(r, u, d, v, w = !1) {
  if (isArray(r)) {
    r.forEach(
      (et, ct) => setRef(
        et,
        u && (isArray(u) ? u[ct] : u),
        d,
        v,
        w
      )
    );
    return;
  }
  if (isAsyncWrapper(v) && !w)
    return;
  const C = v.shapeFlag & 4 ? getExposeProxy(v.component) || v.component.proxy : v.el, L = w ? null : C, { i: E, r: V } = r, N = u && u.r, z = E.refs === EMPTY_OBJ ? E.refs = {} : E.refs, st = E.setupState;
  if (N != null && N !== V && (isString(N) ? (z[N] = null, hasOwn(st, N) && (st[N] = null)) : isRef(N) && (N.value = null)), isFunction(V))
    callWithErrorHandling(V, E, 12, [L, z]);
  else {
    const et = isString(V), ct = isRef(V);
    if (et || ct) {
      const Ct = () => {
        if (r.f) {
          const At = et ? hasOwn(st, V) ? st[V] : z[V] : V.value;
          w ? isArray(At) && remove(At, C) : isArray(At) ? At.includes(C) || At.push(C) : et ? (z[V] = [C], hasOwn(st, V) && (st[V] = z[V])) : (V.value = [C], r.k && (z[r.k] = V.value));
        } else
          et ? (z[V] = L, hasOwn(st, V) && (st[V] = L)) : ct && (V.value = L, r.k && (z[r.k] = L));
      };
      L ? (Ct.id = -1, queuePostRenderEffect(Ct, d)) : Ct();
    }
  }
}
let hasMismatch = !1;
const isSVGContainer = (r) => /svg/.test(r.namespaceURI) && r.tagName !== "foreignObject", isComment = (r) => r.nodeType === 8;
function createHydrationFunctions(r) {
  const {
    mt: u,
    p: d,
    o: {
      patchProp: v,
      createText: w,
      nextSibling: C,
      parentNode: L,
      remove: E,
      insert: V,
      createComment: N
    }
  } = r, z = (vt, _t) => {
    if (!_t.hasChildNodes()) {
      d(null, vt, _t), flushPostFlushCbs(), _t._vnode = vt;
      return;
    }
    hasMismatch = !1, st(_t.firstChild, vt, null, null, null), flushPostFlushCbs(), _t._vnode = vt, hasMismatch && console.error("Hydration completed but contains mismatches.");
  }, st = (vt, _t, Et, ft, wt, Zt = !1) => {
    const Ot = isComment(vt) && vt.data === "[", bt = () => At(
      vt,
      _t,
      Et,
      ft,
      wt,
      Ot
    ), { type: Xt, ref: ie, shapeFlag: Yt, patchFlag: ae } = _t;
    let Re = vt.nodeType;
    _t.el = vt, ae === -2 && (Zt = !1, _t.dynamicChildren = null);
    let me = null;
    switch (Xt) {
      case Text:
        Re !== 3 ? _t.children === "" ? (V(_t.el = w(""), L(vt), vt), me = vt) : me = bt() : (vt.data !== _t.children && (hasMismatch = !0, vt.data = _t.children), me = C(vt));
        break;
      case Comment:
        Re !== 8 || Ot ? me = bt() : me = C(vt);
        break;
      case Static:
        if (Ot && (vt = C(vt), Re = vt.nodeType), Re === 1 || Re === 3) {
          me = vt;
          const Fi = !_t.children.length;
          for (let ei = 0; ei < _t.staticCount; ei++)
            Fi && (_t.children += me.nodeType === 1 ? me.outerHTML : me.data), ei === _t.staticCount - 1 && (_t.anchor = me), me = C(me);
          return Ot ? C(me) : me;
        } else
          bt();
        break;
      case Fragment:
        Ot ? me = Ct(
          vt,
          _t,
          Et,
          ft,
          wt,
          Zt
        ) : me = bt();
        break;
      default:
        if (Yt & 1)
          Re !== 1 || _t.type.toLowerCase() !== vt.tagName.toLowerCase() ? me = bt() : me = et(
            vt,
            _t,
            Et,
            ft,
            wt,
            Zt
          );
        else if (Yt & 6) {
          _t.slotScopeIds = wt;
          const Fi = L(vt);
          if (u(
            _t,
            Fi,
            null,
            Et,
            ft,
            isSVGContainer(Fi),
            Zt
          ), me = Ot ? qt(vt) : C(vt), me && isComment(me) && me.data === "teleport end" && (me = C(me)), isAsyncWrapper(_t)) {
            let ei;
            Ot ? (ei = createVNode(Fragment), ei.anchor = me ? me.previousSibling : Fi.lastChild) : ei = vt.nodeType === 3 ? createTextVNode("") : createVNode("div"), ei.el = vt, _t.component.subTree = ei;
          }
        } else
          Yt & 64 ? Re !== 8 ? me = bt() : me = _t.type.hydrate(
            vt,
            _t,
            Et,
            ft,
            wt,
            Zt,
            r,
            ct
          ) : Yt & 128 && (me = _t.type.hydrate(
            vt,
            _t,
            Et,
            ft,
            isSVGContainer(L(vt)),
            wt,
            Zt,
            r,
            st
          ));
    }
    return ie != null && setRef(ie, null, ft, _t), me;
  }, et = (vt, _t, Et, ft, wt, Zt) => {
    Zt = Zt || !!_t.dynamicChildren;
    const { type: Ot, props: bt, patchFlag: Xt, shapeFlag: ie, dirs: Yt } = _t, ae = Ot === "input" && Yt || Ot === "option";
    if (ae || Xt !== -1) {
      if (Yt && invokeDirectiveHook(_t, null, Et, "created"), bt)
        if (ae || !Zt || Xt & 48)
          for (const me in bt)
            (ae && me.endsWith("value") || isOn(me) && !isReservedProp(me)) && v(
              vt,
              me,
              null,
              bt[me],
              !1,
              void 0,
              Et
            );
        else
          bt.onClick && v(
            vt,
            "onClick",
            null,
            bt.onClick,
            !1,
            void 0,
            Et
          );
      let Re;
      if ((Re = bt && bt.onVnodeBeforeMount) && invokeVNodeHook(Re, Et, _t), Yt && invokeDirectiveHook(_t, null, Et, "beforeMount"), ((Re = bt && bt.onVnodeMounted) || Yt) && queueEffectWithSuspense(() => {
        Re && invokeVNodeHook(Re, Et, _t), Yt && invokeDirectiveHook(_t, null, Et, "mounted");
      }, ft), ie & 16 && // skip if element has innerHTML / textContent
      !(bt && (bt.innerHTML || bt.textContent))) {
        let me = ct(
          vt.firstChild,
          _t,
          vt,
          Et,
          ft,
          wt,
          Zt
        );
        for (; me; ) {
          hasMismatch = !0;
          const Fi = me;
          me = me.nextSibling, E(Fi);
        }
      } else
        ie & 8 && vt.textContent !== _t.children && (hasMismatch = !0, vt.textContent = _t.children);
    }
    return vt.nextSibling;
  }, ct = (vt, _t, Et, ft, wt, Zt, Ot) => {
    Ot = Ot || !!_t.dynamicChildren;
    const bt = _t.children, Xt = bt.length;
    for (let ie = 0; ie < Xt; ie++) {
      const Yt = Ot ? bt[ie] : bt[ie] = normalizeVNode(bt[ie]);
      if (vt)
        vt = st(
          vt,
          Yt,
          ft,
          wt,
          Zt,
          Ot
        );
      else {
        if (Yt.type === Text && !Yt.children)
          continue;
        hasMismatch = !0, d(
          null,
          Yt,
          Et,
          null,
          ft,
          wt,
          isSVGContainer(Et),
          Zt
        );
      }
    }
    return vt;
  }, Ct = (vt, _t, Et, ft, wt, Zt) => {
    const { slotScopeIds: Ot } = _t;
    Ot && (wt = wt ? wt.concat(Ot) : Ot);
    const bt = L(vt), Xt = ct(
      C(vt),
      _t,
      bt,
      Et,
      ft,
      wt,
      Zt
    );
    return Xt && isComment(Xt) && Xt.data === "]" ? C(_t.anchor = Xt) : (hasMismatch = !0, V(_t.anchor = N("]"), bt, Xt), Xt);
  }, At = (vt, _t, Et, ft, wt, Zt) => {
    if (hasMismatch = !0, _t.el = null, Zt) {
      const Xt = qt(vt);
      for (; ; ) {
        const ie = C(vt);
        if (ie && ie !== Xt)
          E(ie);
        else
          break;
      }
    }
    const Ot = C(vt), bt = L(vt);
    return E(vt), d(
      null,
      _t,
      bt,
      Ot,
      Et,
      ft,
      isSVGContainer(bt),
      wt
    ), Ot;
  }, qt = (vt) => {
    let _t = 0;
    for (; vt; )
      if (vt = C(vt), vt && isComment(vt) && (vt.data === "[" && _t++, vt.data === "]")) {
        if (_t === 0)
          return C(vt);
        _t--;
      }
    return vt;
  };
  return [z, st];
}
const queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(r) {
  return baseCreateRenderer(r);
}
function createHydrationRenderer(r) {
  return baseCreateRenderer(r, createHydrationFunctions);
}
function baseCreateRenderer(r, u) {
  const d = getGlobalThis();
  d.__VUE__ = !0;
  const {
    insert: v,
    remove: w,
    patchProp: C,
    createElement: L,
    createText: E,
    createComment: V,
    setText: N,
    setElementText: z,
    parentNode: st,
    nextSibling: et,
    setScopeId: ct = NOOP,
    insertStaticContent: Ct
  } = r, At = (rt, ht, It, Bt = null, Nt = null, Jt = null, le = !1, S = null, te = !!ht.dynamicChildren) => {
    if (rt === ht)
      return;
    rt && !isSameVNodeType(rt, ht) && (Bt = Mn(rt), gr(rt, Nt, Jt, !0), rt = null), ht.patchFlag === -2 && (te = !1, ht.dynamicChildren = null);
    const { type: Vt, ref: Kt, shapeFlag: be } = ht;
    switch (Vt) {
      case Text:
        qt(rt, ht, It, Bt);
        break;
      case Comment:
        vt(rt, ht, It, Bt);
        break;
      case Static:
        rt == null && _t(ht, It, Bt, le);
        break;
      case Fragment:
        ae(
          rt,
          ht,
          It,
          Bt,
          Nt,
          Jt,
          le,
          S,
          te
        );
        break;
      default:
        be & 1 ? wt(
          rt,
          ht,
          It,
          Bt,
          Nt,
          Jt,
          le,
          S,
          te
        ) : be & 6 ? Re(
          rt,
          ht,
          It,
          Bt,
          Nt,
          Jt,
          le,
          S,
          te
        ) : (be & 64 || be & 128) && Vt.process(
          rt,
          ht,
          It,
          Bt,
          Nt,
          Jt,
          le,
          S,
          te,
          Or
        );
    }
    Kt != null && Nt && setRef(Kt, rt && rt.ref, Jt, ht || rt, !ht);
  }, qt = (rt, ht, It, Bt) => {
    if (rt == null)
      v(
        ht.el = E(ht.children),
        It,
        Bt
      );
    else {
      const Nt = ht.el = rt.el;
      ht.children !== rt.children && N(Nt, ht.children);
    }
  }, vt = (rt, ht, It, Bt) => {
    rt == null ? v(
      ht.el = V(ht.children || ""),
      It,
      Bt
    ) : ht.el = rt.el;
  }, _t = (rt, ht, It, Bt) => {
    [rt.el, rt.anchor] = Ct(
      rt.children,
      ht,
      It,
      Bt,
      rt.el,
      rt.anchor
    );
  }, Et = ({ el: rt, anchor: ht }, It, Bt) => {
    let Nt;
    for (; rt && rt !== ht; )
      Nt = et(rt), v(rt, It, Bt), rt = Nt;
    v(ht, It, Bt);
  }, ft = ({ el: rt, anchor: ht }) => {
    let It;
    for (; rt && rt !== ht; )
      It = et(rt), w(rt), rt = It;
    w(ht);
  }, wt = (rt, ht, It, Bt, Nt, Jt, le, S, te) => {
    le = le || ht.type === "svg", rt == null ? Zt(
      ht,
      It,
      Bt,
      Nt,
      Jt,
      le,
      S,
      te
    ) : Xt(
      rt,
      ht,
      Nt,
      Jt,
      le,
      S,
      te
    );
  }, Zt = (rt, ht, It, Bt, Nt, Jt, le, S) => {
    let te, Vt;
    const { type: Kt, props: be, shapeFlag: Te, transition: Ue, dirs: Le } = rt;
    if (te = rt.el = L(
      rt.type,
      Jt,
      be && be.is,
      be
    ), Te & 8 ? z(te, rt.children) : Te & 16 && bt(
      rt.children,
      te,
      null,
      Bt,
      Nt,
      Jt && Kt !== "foreignObject",
      le,
      S
    ), Le && invokeDirectiveHook(rt, null, Bt, "created"), Ot(te, rt, rt.scopeId, le, Bt), be) {
      for (const pe in be)
        pe !== "value" && !isReservedProp(pe) && C(
          te,
          pe,
          null,
          be[pe],
          Jt,
          rt.children,
          Bt,
          Nt,
          Rr
        );
      "value" in be && C(te, "value", null, be.value), (Vt = be.onVnodeBeforeMount) && invokeVNodeHook(Vt, Bt, rt);
    }
    Le && invokeDirectiveHook(rt, null, Bt, "beforeMount");
    const Ci = (!Nt || Nt && !Nt.pendingBranch) && Ue && !Ue.persisted;
    Ci && Ue.beforeEnter(te), v(te, ht, It), ((Vt = be && be.onVnodeMounted) || Ci || Le) && queuePostRenderEffect(() => {
      Vt && invokeVNodeHook(Vt, Bt, rt), Ci && Ue.enter(te), Le && invokeDirectiveHook(rt, null, Bt, "mounted");
    }, Nt);
  }, Ot = (rt, ht, It, Bt, Nt) => {
    if (It && ct(rt, It), Bt)
      for (let Jt = 0; Jt < Bt.length; Jt++)
        ct(rt, Bt[Jt]);
    if (Nt) {
      let Jt = Nt.subTree;
      if (ht === Jt) {
        const le = Nt.vnode;
        Ot(
          rt,
          le,
          le.scopeId,
          le.slotScopeIds,
          Nt.parent
        );
      }
    }
  }, bt = (rt, ht, It, Bt, Nt, Jt, le, S, te = 0) => {
    for (let Vt = te; Vt < rt.length; Vt++) {
      const Kt = rt[Vt] = S ? cloneIfMounted(rt[Vt]) : normalizeVNode(rt[Vt]);
      At(
        null,
        Kt,
        ht,
        It,
        Bt,
        Nt,
        Jt,
        le,
        S
      );
    }
  }, Xt = (rt, ht, It, Bt, Nt, Jt, le) => {
    const S = ht.el = rt.el;
    let { patchFlag: te, dynamicChildren: Vt, dirs: Kt } = ht;
    te |= rt.patchFlag & 16;
    const be = rt.props || EMPTY_OBJ, Te = ht.props || EMPTY_OBJ;
    let Ue;
    It && toggleRecurse(It, !1), (Ue = Te.onVnodeBeforeUpdate) && invokeVNodeHook(Ue, It, ht, rt), Kt && invokeDirectiveHook(ht, rt, It, "beforeUpdate"), It && toggleRecurse(It, !0);
    const Le = Nt && ht.type !== "foreignObject";
    if (Vt ? ie(
      rt.dynamicChildren,
      Vt,
      S,
      It,
      Bt,
      Le,
      Jt
    ) : le || $e(
      rt,
      ht,
      S,
      null,
      It,
      Bt,
      Le,
      Jt,
      !1
    ), te > 0) {
      if (te & 16)
        Yt(
          S,
          ht,
          be,
          Te,
          It,
          Bt,
          Nt
        );
      else if (te & 2 && be.class !== Te.class && C(S, "class", null, Te.class, Nt), te & 4 && C(S, "style", be.style, Te.style, Nt), te & 8) {
        const Ci = ht.dynamicProps;
        for (let pe = 0; pe < Ci.length; pe++) {
          const Ri = Ci[pe], x = be[Ri], Vr = Te[Ri];
          (Vr !== x || Ri === "value") && C(
            S,
            Ri,
            x,
            Vr,
            Nt,
            rt.children,
            It,
            Bt,
            Rr
          );
        }
      }
      te & 1 && rt.children !== ht.children && z(S, ht.children);
    } else
      !le && Vt == null && Yt(
        S,
        ht,
        be,
        Te,
        It,
        Bt,
        Nt
      );
    ((Ue = Te.onVnodeUpdated) || Kt) && queuePostRenderEffect(() => {
      Ue && invokeVNodeHook(Ue, It, ht, rt), Kt && invokeDirectiveHook(ht, rt, It, "updated");
    }, Bt);
  }, ie = (rt, ht, It, Bt, Nt, Jt, le) => {
    for (let S = 0; S < ht.length; S++) {
      const te = rt[S], Vt = ht[S], Kt = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        te.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (te.type === Fragment || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !isSameVNodeType(te, Vt) || // - In the case of a component, it could contain anything.
        te.shapeFlag & 70) ? st(te.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          It
        )
      );
      At(
        te,
        Vt,
        Kt,
        null,
        Bt,
        Nt,
        Jt,
        le,
        !0
      );
    }
  }, Yt = (rt, ht, It, Bt, Nt, Jt, le) => {
    if (It !== Bt) {
      if (It !== EMPTY_OBJ)
        for (const S in It)
          !isReservedProp(S) && !(S in Bt) && C(
            rt,
            S,
            It[S],
            null,
            le,
            ht.children,
            Nt,
            Jt,
            Rr
          );
      for (const S in Bt) {
        if (isReservedProp(S))
          continue;
        const te = Bt[S], Vt = It[S];
        te !== Vt && S !== "value" && C(
          rt,
          S,
          Vt,
          te,
          le,
          ht.children,
          Nt,
          Jt,
          Rr
        );
      }
      "value" in Bt && C(rt, "value", It.value, Bt.value);
    }
  }, ae = (rt, ht, It, Bt, Nt, Jt, le, S, te) => {
    const Vt = ht.el = rt ? rt.el : E(""), Kt = ht.anchor = rt ? rt.anchor : E("");
    let { patchFlag: be, dynamicChildren: Te, slotScopeIds: Ue } = ht;
    Ue && (S = S ? S.concat(Ue) : Ue), rt == null ? (v(Vt, It, Bt), v(Kt, It, Bt), bt(
      ht.children,
      It,
      Kt,
      Nt,
      Jt,
      le,
      S,
      te
    )) : be > 0 && be & 64 && Te && // #2715 the previous fragment could've been a BAILed one as a result
    // of renderSlot() with no valid children
    rt.dynamicChildren ? (ie(
      rt.dynamicChildren,
      Te,
      It,
      Nt,
      Jt,
      le,
      S
    ), // #2080 if the stable fragment has a key, it's a <template v-for> that may
    //  get moved around. Make sure all root level vnodes inherit el.
    // #2134 or if it's a component root, it may also get moved around
    // as the component is being moved.
    (ht.key != null || Nt && ht === Nt.subTree) && traverseStaticChildren(
      rt,
      ht,
      !0
      /* shallow */
    )) : $e(
      rt,
      ht,
      It,
      Kt,
      Nt,
      Jt,
      le,
      S,
      te
    );
  }, Re = (rt, ht, It, Bt, Nt, Jt, le, S, te) => {
    ht.slotScopeIds = S, rt == null ? ht.shapeFlag & 512 ? Nt.ctx.activate(
      ht,
      It,
      Bt,
      le,
      te
    ) : me(
      ht,
      It,
      Bt,
      Nt,
      Jt,
      le,
      te
    ) : Fi(rt, ht, te);
  }, me = (rt, ht, It, Bt, Nt, Jt, le) => {
    const S = rt.component = createComponentInstance(
      rt,
      Bt,
      Nt
    );
    if (isKeepAlive(rt) && (S.ctx.renderer = Or), setupComponent(S), S.asyncDep) {
      if (Nt && Nt.registerDep(S, ei), !rt.el) {
        const te = S.subTree = createVNode(Comment);
        vt(null, te, ht, It);
      }
      return;
    }
    ei(
      S,
      rt,
      ht,
      It,
      Nt,
      Jt,
      le
    );
  }, Fi = (rt, ht, It) => {
    const Bt = ht.component = rt.component;
    if (shouldUpdateComponent(rt, ht, It))
      if (Bt.asyncDep && !Bt.asyncResolved) {
        si(Bt, ht, It);
        return;
      } else
        Bt.next = ht, invalidateJob(Bt.update), Bt.update();
    else
      ht.el = rt.el, Bt.vnode = ht;
  }, ei = (rt, ht, It, Bt, Nt, Jt, le) => {
    const S = () => {
      if (rt.isMounted) {
        let { next: Kt, bu: be, u: Te, parent: Ue, vnode: Le } = rt, Ci = Kt, pe;
        toggleRecurse(rt, !1), Kt ? (Kt.el = Le.el, si(rt, Kt, le)) : Kt = Le, be && invokeArrayFns(be), (pe = Kt.props && Kt.props.onVnodeBeforeUpdate) && invokeVNodeHook(pe, Ue, Kt, Le), toggleRecurse(rt, !0);
        const Ri = renderComponentRoot(rt), x = rt.subTree;
        rt.subTree = Ri, At(
          x,
          Ri,
          // parent may have changed if it's in a teleport
          st(x.el),
          // anchor may have changed if it's in a fragment
          Mn(x),
          rt,
          Nt,
          Jt
        ), Kt.el = Ri.el, Ci === null && updateHOCHostEl(rt, Ri.el), Te && queuePostRenderEffect(Te, Nt), (pe = Kt.props && Kt.props.onVnodeUpdated) && queuePostRenderEffect(
          () => invokeVNodeHook(pe, Ue, Kt, Le),
          Nt
        );
      } else {
        let Kt;
        const { el: be, props: Te } = ht, { bm: Ue, m: Le, parent: Ci } = rt, pe = isAsyncWrapper(ht);
        if (toggleRecurse(rt, !1), Ue && invokeArrayFns(Ue), !pe && (Kt = Te && Te.onVnodeBeforeMount) && invokeVNodeHook(Kt, Ci, ht), toggleRecurse(rt, !0), be && $r) {
          const Ri = () => {
            rt.subTree = renderComponentRoot(rt), $r(
              be,
              rt.subTree,
              rt,
              Nt,
              null
            );
          };
          pe ? ht.type.__asyncLoader().then(
            // note: we are moving the render call into an async callback,
            // which means it won't track dependencies - but it's ok because
            // a server-rendered async wrapper is already in resolved state
            // and it will never need to change.
            () => !rt.isUnmounted && Ri()
          ) : Ri();
        } else {
          const Ri = rt.subTree = renderComponentRoot(rt);
          At(
            null,
            Ri,
            It,
            Bt,
            rt,
            Nt,
            Jt
          ), ht.el = Ri.el;
        }
        if (Le && queuePostRenderEffect(Le, Nt), !pe && (Kt = Te && Te.onVnodeMounted)) {
          const Ri = ht;
          queuePostRenderEffect(
            () => invokeVNodeHook(Kt, Ci, Ri),
            Nt
          );
        }
        (ht.shapeFlag & 256 || Ci && isAsyncWrapper(Ci.vnode) && Ci.vnode.shapeFlag & 256) && rt.a && queuePostRenderEffect(rt.a, Nt), rt.isMounted = !0, ht = It = Bt = null;
      }
    }, te = rt.effect = new ReactiveEffect(
      S,
      () => queueJob(Vt),
      rt.scope
      // track it in component's effect scope
    ), Vt = rt.update = () => te.run();
    Vt.id = rt.uid, toggleRecurse(rt, !0), Vt();
  }, si = (rt, ht, It) => {
    ht.component = rt;
    const Bt = rt.vnode.props;
    rt.vnode = ht, rt.next = null, updateProps(rt, ht.props, Bt, It), updateSlots(rt, ht.children, It), pauseTracking(), flushPreFlushCbs(), resetTracking();
  }, $e = (rt, ht, It, Bt, Nt, Jt, le, S, te = !1) => {
    const Vt = rt && rt.children, Kt = rt ? rt.shapeFlag : 0, be = ht.children, { patchFlag: Te, shapeFlag: Ue } = ht;
    if (Te > 0) {
      if (Te & 128) {
        ki(
          Vt,
          be,
          It,
          Bt,
          Nt,
          Jt,
          le,
          S,
          te
        );
        return;
      } else if (Te & 256) {
        Ai(
          Vt,
          be,
          It,
          Bt,
          Nt,
          Jt,
          le,
          S,
          te
        );
        return;
      }
    }
    Ue & 8 ? (Kt & 16 && Rr(Vt, Nt, Jt), be !== Vt && z(It, be)) : Kt & 16 ? Ue & 16 ? ki(
      Vt,
      be,
      It,
      Bt,
      Nt,
      Jt,
      le,
      S,
      te
    ) : Rr(Vt, Nt, Jt, !0) : (Kt & 8 && z(It, ""), Ue & 16 && bt(
      be,
      It,
      Bt,
      Nt,
      Jt,
      le,
      S,
      te
    ));
  }, Ai = (rt, ht, It, Bt, Nt, Jt, le, S, te) => {
    rt = rt || EMPTY_ARR, ht = ht || EMPTY_ARR;
    const Vt = rt.length, Kt = ht.length, be = Math.min(Vt, Kt);
    let Te;
    for (Te = 0; Te < be; Te++) {
      const Ue = ht[Te] = te ? cloneIfMounted(ht[Te]) : normalizeVNode(ht[Te]);
      At(
        rt[Te],
        Ue,
        It,
        null,
        Nt,
        Jt,
        le,
        S,
        te
      );
    }
    Vt > Kt ? Rr(
      rt,
      Nt,
      Jt,
      !0,
      !1,
      be
    ) : bt(
      ht,
      It,
      Bt,
      Nt,
      Jt,
      le,
      S,
      te,
      be
    );
  }, ki = (rt, ht, It, Bt, Nt, Jt, le, S, te) => {
    let Vt = 0;
    const Kt = ht.length;
    let be = rt.length - 1, Te = Kt - 1;
    for (; Vt <= be && Vt <= Te; ) {
      const Ue = rt[Vt], Le = ht[Vt] = te ? cloneIfMounted(ht[Vt]) : normalizeVNode(ht[Vt]);
      if (isSameVNodeType(Ue, Le))
        At(
          Ue,
          Le,
          It,
          null,
          Nt,
          Jt,
          le,
          S,
          te
        );
      else
        break;
      Vt++;
    }
    for (; Vt <= be && Vt <= Te; ) {
      const Ue = rt[be], Le = ht[Te] = te ? cloneIfMounted(ht[Te]) : normalizeVNode(ht[Te]);
      if (isSameVNodeType(Ue, Le))
        At(
          Ue,
          Le,
          It,
          null,
          Nt,
          Jt,
          le,
          S,
          te
        );
      else
        break;
      be--, Te--;
    }
    if (Vt > be) {
      if (Vt <= Te) {
        const Ue = Te + 1, Le = Ue < Kt ? ht[Ue].el : Bt;
        for (; Vt <= Te; )
          At(
            null,
            ht[Vt] = te ? cloneIfMounted(ht[Vt]) : normalizeVNode(ht[Vt]),
            It,
            Le,
            Nt,
            Jt,
            le,
            S,
            te
          ), Vt++;
      }
    } else if (Vt > Te)
      for (; Vt <= be; )
        gr(rt[Vt], Nt, Jt, !0), Vt++;
    else {
      const Ue = Vt, Le = Vt, Ci = /* @__PURE__ */ new Map();
      for (Vt = Le; Vt <= Te; Vt++) {
        const mr = ht[Vt] = te ? cloneIfMounted(ht[Vt]) : normalizeVNode(ht[Vt]);
        mr.key != null && Ci.set(mr.key, Vt);
      }
      let pe, Ri = 0;
      const x = Te - Le + 1;
      let Vr = !1, dn = 0;
      const Jr = new Array(x);
      for (Vt = 0; Vt < x; Vt++)
        Jr[Vt] = 0;
      for (Vt = Ue; Vt <= be; Vt++) {
        const mr = rt[Vt];
        if (Ri >= x) {
          gr(mr, Nt, Jt, !0);
          continue;
        }
        let pr;
        if (mr.key != null)
          pr = Ci.get(mr.key);
        else
          for (pe = Le; pe <= Te; pe++)
            if (Jr[pe - Le] === 0 && isSameVNodeType(mr, ht[pe])) {
              pr = pe;
              break;
            }
        pr === void 0 ? gr(mr, Nt, Jt, !0) : (Jr[pr - Le] = Vt + 1, pr >= dn ? dn = pr : Vr = !0, At(
          mr,
          ht[pr],
          It,
          null,
          Nt,
          Jt,
          le,
          S,
          te
        ), Ri++);
      }
      const ui = Vr ? getSequence(Jr) : EMPTY_ARR;
      for (pe = ui.length - 1, Vt = x - 1; Vt >= 0; Vt--) {
        const mr = Le + Vt, pr = ht[mr], zn = mr + 1 < Kt ? ht[mr + 1].el : Bt;
        Jr[Vt] === 0 ? At(
          null,
          pr,
          It,
          zn,
          Nt,
          Jt,
          le,
          S,
          te
        ) : Vr && (pe < 0 || Vt !== ui[pe] ? Hr(pr, It, zn, 2) : pe--);
      }
    }
  }, Hr = (rt, ht, It, Bt, Nt = null) => {
    const { el: Jt, type: le, transition: S, children: te, shapeFlag: Vt } = rt;
    if (Vt & 6) {
      Hr(rt.component.subTree, ht, It, Bt);
      return;
    }
    if (Vt & 128) {
      rt.suspense.move(ht, It, Bt);
      return;
    }
    if (Vt & 64) {
      le.move(rt, ht, It, Or);
      return;
    }
    if (le === Fragment) {
      v(Jt, ht, It);
      for (let be = 0; be < te.length; be++)
        Hr(te[be], ht, It, Bt);
      v(rt.anchor, ht, It);
      return;
    }
    if (le === Static) {
      Et(rt, ht, It);
      return;
    }
    if (Bt !== 2 && Vt & 1 && S)
      if (Bt === 0)
        S.beforeEnter(Jt), v(Jt, ht, It), queuePostRenderEffect(() => S.enter(Jt), Nt);
      else {
        const { leave: be, delayLeave: Te, afterLeave: Ue } = S, Le = () => v(Jt, ht, It), Ci = () => {
          be(Jt, () => {
            Le(), Ue && Ue();
          });
        };
        Te ? Te(Jt, Le, Ci) : Ci();
      }
    else
      v(Jt, ht, It);
  }, gr = (rt, ht, It, Bt = !1, Nt = !1) => {
    const {
      type: Jt,
      props: le,
      ref: S,
      children: te,
      dynamicChildren: Vt,
      shapeFlag: Kt,
      patchFlag: be,
      dirs: Te
    } = rt;
    if (S != null && setRef(S, null, It, rt, !0), Kt & 256) {
      ht.ctx.deactivate(rt);
      return;
    }
    const Ue = Kt & 1 && Te, Le = !isAsyncWrapper(rt);
    let Ci;
    if (Le && (Ci = le && le.onVnodeBeforeUnmount) && invokeVNodeHook(Ci, ht, rt), Kt & 6)
      la(rt.component, It, Bt);
    else {
      if (Kt & 128) {
        rt.suspense.unmount(It, Bt);
        return;
      }
      Ue && invokeDirectiveHook(rt, null, ht, "beforeUnmount"), Kt & 64 ? rt.type.remove(
        rt,
        ht,
        It,
        Nt,
        Or,
        Bt
      ) : Vt && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (Jt !== Fragment || be > 0 && be & 64) ? Rr(
        Vt,
        ht,
        It,
        !1,
        !0
      ) : (Jt === Fragment && be & 384 || !Nt && Kt & 16) && Rr(te, ht, It), Bt && Fn(rt);
    }
    (Le && (Ci = le && le.onVnodeUnmounted) || Ue) && queuePostRenderEffect(() => {
      Ci && invokeVNodeHook(Ci, ht, rt), Ue && invokeDirectiveHook(rt, null, ht, "unmounted");
    }, It);
  }, Fn = (rt) => {
    const { type: ht, el: It, anchor: Bt, transition: Nt } = rt;
    if (ht === Fragment) {
      Ca(It, Bt);
      return;
    }
    if (ht === Static) {
      ft(rt);
      return;
    }
    const Jt = () => {
      w(It), Nt && !Nt.persisted && Nt.afterLeave && Nt.afterLeave();
    };
    if (rt.shapeFlag & 1 && Nt && !Nt.persisted) {
      const { leave: le, delayLeave: S } = Nt, te = () => le(It, Jt);
      S ? S(rt.el, Jt, te) : te();
    } else
      Jt();
  }, Ca = (rt, ht) => {
    let It;
    for (; rt !== ht; )
      It = et(rt), w(rt), rt = It;
    w(ht);
  }, la = (rt, ht, It) => {
    const { bum: Bt, scope: Nt, update: Jt, subTree: le, um: S } = rt;
    Bt && invokeArrayFns(Bt), Nt.stop(), Jt && (Jt.active = !1, gr(le, rt, ht, It)), S && queuePostRenderEffect(S, ht), queuePostRenderEffect(() => {
      rt.isUnmounted = !0;
    }, ht), ht && ht.pendingBranch && !ht.isUnmounted && rt.asyncDep && !rt.asyncResolved && rt.suspenseId === ht.pendingId && (ht.deps--, ht.deps === 0 && ht.resolve());
  }, Rr = (rt, ht, It, Bt = !1, Nt = !1, Jt = 0) => {
    for (let le = Jt; le < rt.length; le++)
      gr(rt[le], ht, It, Bt, Nt);
  }, Mn = (rt) => rt.shapeFlag & 6 ? Mn(rt.component.subTree) : rt.shapeFlag & 128 ? rt.suspense.next() : et(rt.anchor || rt.el), Bn = (rt, ht, It) => {
    rt == null ? ht._vnode && gr(ht._vnode, null, null, !0) : At(ht._vnode || null, rt, ht, null, null, null, It), flushPreFlushCbs(), flushPostFlushCbs(), ht._vnode = rt;
  }, Or = {
    p: At,
    um: gr,
    m: Hr,
    r: Fn,
    mt: me,
    mc: bt,
    pc: $e,
    pbc: ie,
    n: Mn,
    o: r
  };
  let xn, $r;
  return u && ([xn, $r] = u(
    Or
  )), {
    render: Bn,
    hydrate: xn,
    createApp: createAppAPI(Bn, xn)
  };
}
function toggleRecurse({ effect: r, update: u }, d) {
  r.allowRecurse = u.allowRecurse = d;
}
function traverseStaticChildren(r, u, d = !1) {
  const v = r.children, w = u.children;
  if (isArray(v) && isArray(w))
    for (let C = 0; C < v.length; C++) {
      const L = v[C];
      let E = w[C];
      E.shapeFlag & 1 && !E.dynamicChildren && ((E.patchFlag <= 0 || E.patchFlag === 32) && (E = w[C] = cloneIfMounted(w[C]), E.el = L.el), d || traverseStaticChildren(L, E)), E.type === Text && (E.el = L.el);
    }
}
function getSequence(r) {
  const u = r.slice(), d = [0];
  let v, w, C, L, E;
  const V = r.length;
  for (v = 0; v < V; v++) {
    const N = r[v];
    if (N !== 0) {
      if (w = d[d.length - 1], r[w] < N) {
        u[v] = w, d.push(v);
        continue;
      }
      for (C = 0, L = d.length - 1; C < L; )
        E = C + L >> 1, r[d[E]] < N ? C = E + 1 : L = E;
      N < r[d[C]] && (C > 0 && (u[v] = d[C - 1]), d[C] = v);
    }
  }
  for (C = d.length, L = d[C - 1]; C-- > 0; )
    d[C] = L, L = u[L];
  return d;
}
const isTeleport = (r) => r.__isTeleport, isTeleportDisabled = (r) => r && (r.disabled || r.disabled === ""), isTargetSVG = (r) => typeof SVGElement < "u" && r instanceof SVGElement, resolveTarget = (r, u) => {
  const d = r && r.to;
  return isString(d) ? u ? u(d) : null : d;
}, TeleportImpl = {
  __isTeleport: !0,
  process(r, u, d, v, w, C, L, E, V, N) {
    const {
      mc: z,
      pc: st,
      pbc: et,
      o: { insert: ct, querySelector: Ct, createText: At, createComment: qt }
    } = N, vt = isTeleportDisabled(u.props);
    let { shapeFlag: _t, children: Et, dynamicChildren: ft } = u;
    if (r == null) {
      const wt = u.el = At(""), Zt = u.anchor = At("");
      ct(wt, d, v), ct(Zt, d, v);
      const Ot = u.target = resolveTarget(u.props, Ct), bt = u.targetAnchor = At("");
      Ot && (ct(bt, Ot), L = L || isTargetSVG(Ot));
      const Xt = (ie, Yt) => {
        _t & 16 && z(
          Et,
          ie,
          Yt,
          w,
          C,
          L,
          E,
          V
        );
      };
      vt ? Xt(d, Zt) : Ot && Xt(Ot, bt);
    } else {
      u.el = r.el;
      const wt = u.anchor = r.anchor, Zt = u.target = r.target, Ot = u.targetAnchor = r.targetAnchor, bt = isTeleportDisabled(r.props), Xt = bt ? d : Zt, ie = bt ? wt : Ot;
      if (L = L || isTargetSVG(Zt), ft ? (et(
        r.dynamicChildren,
        ft,
        Xt,
        w,
        C,
        L,
        E
      ), traverseStaticChildren(r, u, !0)) : V || st(
        r,
        u,
        Xt,
        ie,
        w,
        C,
        L,
        E,
        !1
      ), vt)
        bt || moveTeleport(
          u,
          d,
          wt,
          N,
          1
        );
      else if ((u.props && u.props.to) !== (r.props && r.props.to)) {
        const Yt = u.target = resolveTarget(
          u.props,
          Ct
        );
        Yt && moveTeleport(
          u,
          Yt,
          null,
          N,
          0
        );
      } else
        bt && moveTeleport(
          u,
          Zt,
          Ot,
          N,
          1
        );
    }
    updateCssVars(u);
  },
  remove(r, u, d, v, { um: w, o: { remove: C } }, L) {
    const { shapeFlag: E, children: V, anchor: N, targetAnchor: z, target: st, props: et } = r;
    if (st && C(z), (L || !isTeleportDisabled(et)) && (C(N), E & 16))
      for (let ct = 0; ct < V.length; ct++) {
        const Ct = V[ct];
        w(
          Ct,
          u,
          d,
          !0,
          !!Ct.dynamicChildren
        );
      }
  },
  move: moveTeleport,
  hydrate: hydrateTeleport
};
function moveTeleport(r, u, d, { o: { insert: v }, m: w }, C = 2) {
  C === 0 && v(r.targetAnchor, u, d);
  const { el: L, anchor: E, shapeFlag: V, children: N, props: z } = r, st = C === 2;
  if (st && v(L, u, d), (!st || isTeleportDisabled(z)) && V & 16)
    for (let et = 0; et < N.length; et++)
      w(
        N[et],
        u,
        d,
        2
      );
  st && v(E, u, d);
}
function hydrateTeleport(r, u, d, v, w, C, {
  o: { nextSibling: L, parentNode: E, querySelector: V }
}, N) {
  const z = u.target = resolveTarget(
    u.props,
    V
  );
  if (z) {
    const st = z._lpa || z.firstChild;
    if (u.shapeFlag & 16)
      if (isTeleportDisabled(u.props))
        u.anchor = N(
          L(r),
          u,
          E(r),
          d,
          v,
          w,
          C
        ), u.targetAnchor = st;
      else {
        u.anchor = L(r);
        let et = st;
        for (; et; )
          if (et = L(et), et && et.nodeType === 8 && et.data === "teleport anchor") {
            u.targetAnchor = et, z._lpa = u.targetAnchor && L(u.targetAnchor);
            break;
          }
        N(
          st,
          u,
          z,
          d,
          v,
          w,
          C
        );
      }
    updateCssVars(u);
  }
  return u.anchor && L(u.anchor);
}
const Teleport = TeleportImpl;
function updateCssVars(r) {
  const u = r.ctx;
  if (u && u.ut) {
    let d = r.children[0].el;
    for (; d !== r.targetAnchor; )
      d.nodeType === 1 && d.setAttribute("data-v-owner", u.uid), d = d.nextSibling;
    u.ut();
  }
}
const Fragment = Symbol.for("v-fgt"), Text = Symbol.for("v-txt"), Comment = Symbol.for("v-cmt"), Static = Symbol.for("v-stc"), blockStack = [];
let currentBlock = null;
function openBlock(r = !1) {
  blockStack.push(currentBlock = r ? null : []);
}
function closeBlock() {
  blockStack.pop(), currentBlock = blockStack[blockStack.length - 1] || null;
}
let isBlockTreeEnabled = 1;
function setBlockTracking(r) {
  isBlockTreeEnabled += r;
}
function setupBlock(r) {
  return r.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null, closeBlock(), isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(r), r;
}
function createElementBlock(r, u, d, v, w, C) {
  return setupBlock(
    createBaseVNode(
      r,
      u,
      d,
      v,
      w,
      C,
      !0
      /* isBlock */
    )
  );
}
function createBlock(r, u, d, v, w) {
  return setupBlock(
    createVNode(
      r,
      u,
      d,
      v,
      w,
      !0
      /* isBlock: prevent a block from tracking itself */
    )
  );
}
function isVNode(r) {
  return r ? r.__v_isVNode === !0 : !1;
}
function isSameVNodeType(r, u) {
  return r.type === u.type && r.key === u.key;
}
function transformVNodeArgs(r) {
}
const InternalObjectKey = "__vInternal", normalizeKey = ({ key: r }) => r ?? null, normalizeRef = ({
  ref: r,
  ref_key: u,
  ref_for: d
}) => (typeof r == "number" && (r = "" + r), r != null ? isString(r) || isRef(r) || isFunction(r) ? { i: currentRenderingInstance, r, k: u, f: !!d } : r : null);
function createBaseVNode(r, u = null, d = null, v = 0, w = null, C = r === Fragment ? 0 : 1, L = !1, E = !1) {
  const V = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: r,
    props: u,
    key: u && normalizeKey(u),
    ref: u && normalizeRef(u),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children: d,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: C,
    patchFlag: v,
    dynamicProps: w,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance
  };
  return E ? (normalizeChildren(V, d), C & 128 && r.normalize(V)) : d && (V.shapeFlag |= isString(d) ? 8 : 16), isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
  !L && // has current parent block
  currentBlock && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (V.patchFlag > 0 || C & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  V.patchFlag !== 32 && currentBlock.push(V), V;
}
const createVNode = _createVNode;
function _createVNode(r, u = null, d = null, v = 0, w = null, C = !1) {
  if ((!r || r === NULL_DYNAMIC_COMPONENT) && (r = Comment), isVNode(r)) {
    const E = cloneVNode(
      r,
      u,
      !0
      /* mergeRef: true */
    );
    return d && normalizeChildren(E, d), isBlockTreeEnabled > 0 && !C && currentBlock && (E.shapeFlag & 6 ? currentBlock[currentBlock.indexOf(r)] = E : currentBlock.push(E)), E.patchFlag |= -2, E;
  }
  if (isClassComponent(r) && (r = r.__vccOpts), u) {
    u = guardReactiveProps(u);
    let { class: E, style: V } = u;
    E && !isString(E) && (u.class = normalizeClass(E)), isObject(V) && (isProxy(V) && !isArray(V) && (V = extend({}, V)), u.style = normalizeStyle(V));
  }
  const L = isString(r) ? 1 : isSuspense(r) ? 128 : isTeleport(r) ? 64 : isObject(r) ? 4 : isFunction(r) ? 2 : 0;
  return createBaseVNode(
    r,
    u,
    d,
    v,
    w,
    L,
    C,
    !0
  );
}
function guardReactiveProps(r) {
  return r ? isProxy(r) || InternalObjectKey in r ? extend({}, r) : r : null;
}
function cloneVNode(r, u, d = !1) {
  const { props: v, ref: w, patchFlag: C, children: L } = r, E = u ? mergeProps(v || {}, u) : v;
  return {
    __v_isVNode: !0,
    __v_skip: !0,
    type: r.type,
    props: E,
    key: E && normalizeKey(E),
    ref: u && u.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      d && w ? isArray(w) ? w.concat(normalizeRef(u)) : [w, normalizeRef(u)] : normalizeRef(u)
    ) : w,
    scopeId: r.scopeId,
    slotScopeIds: r.slotScopeIds,
    children: L,
    target: r.target,
    targetAnchor: r.targetAnchor,
    staticCount: r.staticCount,
    shapeFlag: r.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: u && r.type !== Fragment ? C === -1 ? 16 : C | 16 : C,
    dynamicProps: r.dynamicProps,
    dynamicChildren: r.dynamicChildren,
    appContext: r.appContext,
    dirs: r.dirs,
    transition: r.transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: r.component,
    suspense: r.suspense,
    ssContent: r.ssContent && cloneVNode(r.ssContent),
    ssFallback: r.ssFallback && cloneVNode(r.ssFallback),
    el: r.el,
    anchor: r.anchor,
    ctx: r.ctx,
    ce: r.ce
  };
}
function createTextVNode(r = " ", u = 0) {
  return createVNode(Text, null, r, u);
}
function createStaticVNode(r, u) {
  const d = createVNode(Static, null, r);
  return d.staticCount = u, d;
}
function createCommentVNode(r = "", u = !1) {
  return u ? (openBlock(), createBlock(Comment, null, r)) : createVNode(Comment, null, r);
}
function normalizeVNode(r) {
  return r == null || typeof r == "boolean" ? createVNode(Comment) : isArray(r) ? createVNode(
    Fragment,
    null,
    // #3666, avoid reference pollution when reusing vnode
    r.slice()
  ) : typeof r == "object" ? cloneIfMounted(r) : createVNode(Text, null, String(r));
}
function cloneIfMounted(r) {
  return r.el === null && r.patchFlag !== -1 || r.memo ? r : cloneVNode(r);
}
function normalizeChildren(r, u) {
  let d = 0;
  const { shapeFlag: v } = r;
  if (u == null)
    u = null;
  else if (isArray(u))
    d = 16;
  else if (typeof u == "object")
    if (v & 65) {
      const w = u.default;
      w && (w._c && (w._d = !1), normalizeChildren(r, w()), w._c && (w._d = !0));
      return;
    } else {
      d = 32;
      const w = u._;
      !w && !(InternalObjectKey in u) ? u._ctx = currentRenderingInstance : w === 3 && currentRenderingInstance && (currentRenderingInstance.slots._ === 1 ? u._ = 1 : (u._ = 2, r.patchFlag |= 1024));
    }
  else
    isFunction(u) ? (u = { default: u, _ctx: currentRenderingInstance }, d = 32) : (u = String(u), v & 64 ? (d = 16, u = [createTextVNode(u)]) : d = 8);
  r.children = u, r.shapeFlag |= d;
}
function mergeProps(...r) {
  const u = {};
  for (let d = 0; d < r.length; d++) {
    const v = r[d];
    for (const w in v)
      if (w === "class")
        u.class !== v.class && (u.class = normalizeClass([u.class, v.class]));
      else if (w === "style")
        u.style = normalizeStyle([u.style, v.style]);
      else if (isOn(w)) {
        const C = u[w], L = v[w];
        L && C !== L && !(isArray(C) && C.includes(L)) && (u[w] = C ? [].concat(C, L) : L);
      } else
        w !== "" && (u[w] = v[w]);
  }
  return u;
}
function invokeVNodeHook(r, u, d, v = null) {
  callWithAsyncErrorHandling(r, u, 7, [
    d,
    v
  ]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(r, u, d) {
  const v = r.type, w = (u ? u.appContext : r.appContext) || emptyAppContext, C = {
    uid: uid++,
    vnode: r,
    type: v,
    parent: u,
    appContext: w,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    scope: new EffectScope(
      !0
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: u ? u.provides : Object.create(w.provides),
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: normalizePropsOptions(v, w),
    emitsOptions: normalizeEmitsOptions(v, w),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: EMPTY_OBJ,
    // inheritAttrs
    inheritAttrs: v.inheritAttrs,
    // state
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    attrsProxy: null,
    slotsProxy: null,
    // suspense related
    suspense: d,
    suspenseId: d ? d.pendingId : 0,
    asyncDep: null,
    asyncResolved: !1,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: !1,
    isUnmounted: !1,
    isDeactivated: !1,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  return C.ctx = { _: C }, C.root = u ? u.root : C, C.emit = emit.bind(null, C), r.ce && r.ce(C), C;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
let internalSetCurrentInstance, globalCurrentInstanceSetters, settersKey = "__VUE_INSTANCE_SETTERS__";
(globalCurrentInstanceSetters = getGlobalThis()[settersKey]) || (globalCurrentInstanceSetters = getGlobalThis()[settersKey] = []), globalCurrentInstanceSetters.push((r) => currentInstance = r), internalSetCurrentInstance = (r) => {
  globalCurrentInstanceSetters.length > 1 ? globalCurrentInstanceSetters.forEach((u) => u(r)) : globalCurrentInstanceSetters[0](r);
};
const setCurrentInstance = (r) => {
  internalSetCurrentInstance(r), r.scope.on();
}, unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off(), internalSetCurrentInstance(null);
};
function isStatefulComponent(r) {
  return r.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = !1;
function setupComponent(r, u = !1) {
  isInSSRComponentSetup = u;
  const { props: d, children: v } = r.vnode, w = isStatefulComponent(r);
  initProps(r, d, w, u), initSlots(r, v);
  const C = w ? setupStatefulComponent(r, u) : void 0;
  return isInSSRComponentSetup = !1, C;
}
function setupStatefulComponent(r, u) {
  const d = r.type;
  r.accessCache = /* @__PURE__ */ Object.create(null), r.proxy = markRaw(new Proxy(r.ctx, PublicInstanceProxyHandlers));
  const { setup: v } = d;
  if (v) {
    const w = r.setupContext = v.length > 1 ? createSetupContext(r) : null;
    setCurrentInstance(r), pauseTracking();
    const C = callWithErrorHandling(
      v,
      r,
      0,
      [r.props, w]
    );
    if (resetTracking(), unsetCurrentInstance(), isPromise(C)) {
      if (C.then(unsetCurrentInstance, unsetCurrentInstance), u)
        return C.then((L) => {
          handleSetupResult(r, L, u);
        }).catch((L) => {
          handleError(L, r, 0);
        });
      r.asyncDep = C;
    } else
      handleSetupResult(r, C, u);
  } else
    finishComponentSetup(r, u);
}
function handleSetupResult(r, u, d) {
  isFunction(u) ? r.type.__ssrInlineRender ? r.ssrRender = u : r.render = u : isObject(u) && (r.setupState = proxyRefs(u)), finishComponentSetup(r, d);
}
let compile$1, installWithProxy;
function registerRuntimeCompiler(r) {
  compile$1 = r, installWithProxy = (u) => {
    u.render._rc && (u.withProxy = new Proxy(u.ctx, RuntimeCompiledPublicInstanceProxyHandlers));
  };
}
const isRuntimeOnly = () => !compile$1;
function finishComponentSetup(r, u, d) {
  const v = r.type;
  if (!r.render) {
    if (!u && compile$1 && !v.render) {
      const w = v.template || resolveMergedOptions(r).template;
      if (w) {
        const { isCustomElement: C, compilerOptions: L } = r.appContext.config, { delimiters: E, compilerOptions: V } = v, N = extend(
          extend(
            {
              isCustomElement: C,
              delimiters: E
            },
            L
          ),
          V
        );
        v.render = compile$1(w, N);
      }
    }
    r.render = v.render || NOOP, installWithProxy && installWithProxy(r);
  }
  setCurrentInstance(r), pauseTracking(), applyOptions(r), resetTracking(), unsetCurrentInstance();
}
function getAttrsProxy(r) {
  return r.attrsProxy || (r.attrsProxy = new Proxy(
    r.attrs,
    {
      get(u, d) {
        return track(r, "get", "$attrs"), u[d];
      }
    }
  ));
}
function createSetupContext(r) {
  const u = (d) => {
    r.exposed = d || {};
  };
  return {
    get attrs() {
      return getAttrsProxy(r);
    },
    slots: r.slots,
    emit: r.emit,
    expose: u
  };
}
function getExposeProxy(r) {
  if (r.exposed)
    return r.exposeProxy || (r.exposeProxy = new Proxy(proxyRefs(markRaw(r.exposed)), {
      get(u, d) {
        if (d in u)
          return u[d];
        if (d in publicPropertiesMap)
          return publicPropertiesMap[d](r);
      },
      has(u, d) {
        return d in u || d in publicPropertiesMap;
      }
    }));
}
function getComponentName(r, u = !0) {
  return isFunction(r) ? r.displayName || r.name : r.name || u && r.__name;
}
function isClassComponent(r) {
  return isFunction(r) && "__vccOpts" in r;
}
const computed = (r, u) => computed$1(r, u, isInSSRComponentSetup);
function h(r, u, d) {
  const v = arguments.length;
  return v === 2 ? isObject(u) && !isArray(u) ? isVNode(u) ? createVNode(r, null, [u]) : createVNode(r, u) : createVNode(r, null, u) : (v > 3 ? d = Array.prototype.slice.call(arguments, 2) : v === 3 && isVNode(d) && (d = [d]), createVNode(r, u, d));
}
const ssrContextKey = Symbol.for("v-scx"), useSSRContext = () => inject(ssrContextKey);
function initCustomFormatter() {
}
function withMemo(r, u, d, v) {
  const w = d[v];
  if (w && isMemoSame(w, r))
    return w;
  const C = u();
  return C.memo = r.slice(), d[v] = C;
}
function isMemoSame(r, u) {
  const d = r.memo;
  if (d.length != u.length)
    return !1;
  for (let v = 0; v < d.length; v++)
    if (hasChanged(d[v], u[v]))
      return !1;
  return isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(r), !0;
}
const version$1 = "3.3.4", _ssrUtils = {
  createComponentInstance,
  setupComponent,
  renderComponentRoot,
  setCurrentRenderingInstance,
  isVNode,
  normalizeVNode
}, ssrUtils = _ssrUtils, resolveFilter = null, compatUtils = null, svgNS = "http://www.w3.org/2000/svg", doc = typeof document < "u" ? document : null, templateContainer = doc && /* @__PURE__ */ doc.createElement("template"), nodeOps = {
  insert: (r, u, d) => {
    u.insertBefore(r, d || null);
  },
  remove: (r) => {
    const u = r.parentNode;
    u && u.removeChild(r);
  },
  createElement: (r, u, d, v) => {
    const w = u ? doc.createElementNS(svgNS, r) : doc.createElement(r, d ? { is: d } : void 0);
    return r === "select" && v && v.multiple != null && w.setAttribute("multiple", v.multiple), w;
  },
  createText: (r) => doc.createTextNode(r),
  createComment: (r) => doc.createComment(r),
  setText: (r, u) => {
    r.nodeValue = u;
  },
  setElementText: (r, u) => {
    r.textContent = u;
  },
  parentNode: (r) => r.parentNode,
  nextSibling: (r) => r.nextSibling,
  querySelector: (r) => doc.querySelector(r),
  setScopeId(r, u) {
    r.setAttribute(u, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(r, u, d, v, w, C) {
    const L = d ? d.previousSibling : u.lastChild;
    if (w && (w === C || w.nextSibling))
      for (; u.insertBefore(w.cloneNode(!0), d), !(w === C || !(w = w.nextSibling)); )
        ;
    else {
      templateContainer.innerHTML = v ? `<svg>${r}</svg>` : r;
      const E = templateContainer.content;
      if (v) {
        const V = E.firstChild;
        for (; V.firstChild; )
          E.appendChild(V.firstChild);
        E.removeChild(V);
      }
      u.insertBefore(E, d);
    }
    return [
      // first
      L ? L.nextSibling : u.firstChild,
      // last
      d ? d.previousSibling : u.lastChild
    ];
  }
};
function patchClass(r, u, d) {
  const v = r._vtc;
  v && (u = (u ? [u, ...v] : [...v]).join(" ")), u == null ? r.removeAttribute("class") : d ? r.setAttribute("class", u) : r.className = u;
}
function patchStyle(r, u, d) {
  const v = r.style, w = isString(d);
  if (d && !w) {
    if (u && !isString(u))
      for (const C in u)
        d[C] == null && setStyle(v, C, "");
    for (const C in d)
      setStyle(v, C, d[C]);
  } else {
    const C = v.display;
    w ? u !== d && (v.cssText = d) : u && r.removeAttribute("style"), "_vod" in r && (v.display = C);
  }
}
const importantRE = /\s*!important$/;
function setStyle(r, u, d) {
  if (isArray(d))
    d.forEach((v) => setStyle(r, u, v));
  else if (d == null && (d = ""), u.startsWith("--"))
    r.setProperty(u, d);
  else {
    const v = autoPrefix(r, u);
    importantRE.test(d) ? r.setProperty(
      hyphenate(v),
      d.replace(importantRE, ""),
      "important"
    ) : r[v] = d;
  }
}
const prefixes = ["Webkit", "Moz", "ms"], prefixCache = {};
function autoPrefix(r, u) {
  const d = prefixCache[u];
  if (d)
    return d;
  let v = camelize(u);
  if (v !== "filter" && v in r)
    return prefixCache[u] = v;
  v = capitalize(v);
  for (let w = 0; w < prefixes.length; w++) {
    const C = prefixes[w] + v;
    if (C in r)
      return prefixCache[u] = C;
  }
  return u;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(r, u, d, v, w) {
  if (v && u.startsWith("xlink:"))
    d == null ? r.removeAttributeNS(xlinkNS, u.slice(6, u.length)) : r.setAttributeNS(xlinkNS, u, d);
  else {
    const C = isSpecialBooleanAttr(u);
    d == null || C && !includeBooleanAttr(d) ? r.removeAttribute(u) : r.setAttribute(u, C ? "" : d);
  }
}
function patchDOMProp(r, u, d, v, w, C, L) {
  if (u === "innerHTML" || u === "textContent") {
    v && L(v, w, C), r[u] = d ?? "";
    return;
  }
  const E = r.tagName;
  if (u === "value" && E !== "PROGRESS" && // custom elements may use _value internally
  !E.includes("-")) {
    r._value = d;
    const N = E === "OPTION" ? r.getAttribute("value") : r.value, z = d ?? "";
    N !== z && (r.value = z), d == null && r.removeAttribute(u);
    return;
  }
  let V = !1;
  if (d === "" || d == null) {
    const N = typeof r[u];
    N === "boolean" ? d = includeBooleanAttr(d) : d == null && N === "string" ? (d = "", V = !0) : N === "number" && (d = 0, V = !0);
  }
  try {
    r[u] = d;
  } catch {
  }
  V && r.removeAttribute(u);
}
function addEventListener(r, u, d, v) {
  r.addEventListener(u, d, v);
}
function removeEventListener(r, u, d, v) {
  r.removeEventListener(u, d, v);
}
function patchEvent(r, u, d, v, w = null) {
  const C = r._vei || (r._vei = {}), L = C[u];
  if (v && L)
    L.value = v;
  else {
    const [E, V] = parseName(u);
    if (v) {
      const N = C[u] = createInvoker(v, w);
      addEventListener(r, E, N, V);
    } else
      L && (removeEventListener(r, E, L, V), C[u] = void 0);
  }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(r) {
  let u;
  if (optionsModifierRE.test(r)) {
    u = {};
    let v;
    for (; v = r.match(optionsModifierRE); )
      r = r.slice(0, r.length - v[0].length), u[v[0].toLowerCase()] = !0;
  }
  return [r[2] === ":" ? r.slice(3) : hyphenate(r.slice(2)), u];
}
let cachedNow = 0;
const p = /* @__PURE__ */ Promise.resolve(), getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());
function createInvoker(r, u) {
  const d = (v) => {
    if (!v._vts)
      v._vts = Date.now();
    else if (v._vts <= d.attached)
      return;
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(v, d.value),
      u,
      5,
      [v]
    );
  };
  return d.value = r, d.attached = getNow(), d;
}
function patchStopImmediatePropagation(r, u) {
  if (isArray(u)) {
    const d = r.stopImmediatePropagation;
    return r.stopImmediatePropagation = () => {
      d.call(r), r._stopped = !0;
    }, u.map((v) => (w) => !w._stopped && v && v(w));
  } else
    return u;
}
const nativeOnRE = /^on[a-z]/, patchProp = (r, u, d, v, w = !1, C, L, E, V) => {
  u === "class" ? patchClass(r, v, w) : u === "style" ? patchStyle(r, d, v) : isOn(u) ? isModelListener(u) || patchEvent(r, u, d, v, L) : (u[0] === "." ? (u = u.slice(1), !0) : u[0] === "^" ? (u = u.slice(1), !1) : shouldSetAsProp(r, u, v, w)) ? patchDOMProp(
    r,
    u,
    v,
    C,
    L,
    E,
    V
  ) : (u === "true-value" ? r._trueValue = v : u === "false-value" && (r._falseValue = v), patchAttr(r, u, v, w));
};
function shouldSetAsProp(r, u, d, v) {
  return v ? !!(u === "innerHTML" || u === "textContent" || u in r && nativeOnRE.test(u) && isFunction(d)) : u === "spellcheck" || u === "draggable" || u === "translate" || u === "form" || u === "list" && r.tagName === "INPUT" || u === "type" && r.tagName === "TEXTAREA" || nativeOnRE.test(u) && isString(d) ? !1 : u in r;
}
function defineCustomElement(r, u) {
  const d = defineComponent(r);
  class v extends VueElement {
    constructor(C) {
      super(d, C, u);
    }
  }
  return v.def = d, v;
}
const defineSSRCustomElement = (r) => defineCustomElement(r, hydrate), BaseClass = typeof HTMLElement < "u" ? HTMLElement : class {
};
class VueElement extends BaseClass {
  constructor(u, d = {}, v) {
    super(), this._def = u, this._props = d, this._instance = null, this._connected = !1, this._resolved = !1, this._numberProps = null, this.shadowRoot && v ? v(this._createVNode(), this.shadowRoot) : (this.attachShadow({ mode: "open" }), this._def.__asyncLoader || this._resolveProps(this._def));
  }
  connectedCallback() {
    this._connected = !0, this._instance || (this._resolved ? this._update() : this._resolveDef());
  }
  disconnectedCallback() {
    this._connected = !1, nextTick(() => {
      this._connected || (render$1(null, this.shadowRoot), this._instance = null);
    });
  }
  /**
   * resolve inner component definition (handle possible async component)
   */
  _resolveDef() {
    this._resolved = !0;
    for (let v = 0; v < this.attributes.length; v++)
      this._setAttr(this.attributes[v].name);
    new MutationObserver((v) => {
      for (const w of v)
        this._setAttr(w.attributeName);
    }).observe(this, { attributes: !0 });
    const u = (v, w = !1) => {
      const { props: C, styles: L } = v;
      let E;
      if (C && !isArray(C))
        for (const V in C) {
          const N = C[V];
          (N === Number || N && N.type === Number) && (V in this._props && (this._props[V] = toNumber(this._props[V])), (E || (E = /* @__PURE__ */ Object.create(null)))[camelize(V)] = !0);
        }
      this._numberProps = E, w && this._resolveProps(v), this._applyStyles(L), this._update();
    }, d = this._def.__asyncLoader;
    d ? d().then((v) => u(v, !0)) : u(this._def);
  }
  _resolveProps(u) {
    const { props: d } = u, v = isArray(d) ? d : Object.keys(d || {});
    for (const w of Object.keys(this))
      w[0] !== "_" && v.includes(w) && this._setProp(w, this[w], !0, !1);
    for (const w of v.map(camelize))
      Object.defineProperty(this, w, {
        get() {
          return this._getProp(w);
        },
        set(C) {
          this._setProp(w, C);
        }
      });
  }
  _setAttr(u) {
    let d = this.getAttribute(u);
    const v = camelize(u);
    this._numberProps && this._numberProps[v] && (d = toNumber(d)), this._setProp(v, d, !1);
  }
  /**
   * @internal
   */
  _getProp(u) {
    return this._props[u];
  }
  /**
   * @internal
   */
  _setProp(u, d, v = !0, w = !0) {
    d !== this._props[u] && (this._props[u] = d, w && this._instance && this._update(), v && (d === !0 ? this.setAttribute(hyphenate(u), "") : typeof d == "string" || typeof d == "number" ? this.setAttribute(hyphenate(u), d + "") : d || this.removeAttribute(hyphenate(u))));
  }
  _update() {
    render$1(this._createVNode(), this.shadowRoot);
  }
  _createVNode() {
    const u = createVNode(this._def, extend({}, this._props));
    return this._instance || (u.ce = (d) => {
      this._instance = d, d.isCE = !0;
      const v = (C, L) => {
        this.dispatchEvent(
          new CustomEvent(C, {
            detail: L
          })
        );
      };
      d.emit = (C, ...L) => {
        v(C, L), hyphenate(C) !== C && v(hyphenate(C), L);
      };
      let w = this;
      for (; w = w && (w.parentNode || w.host); )
        if (w instanceof VueElement) {
          d.parent = w._instance, d.provides = w._instance.provides;
          break;
        }
    }), u;
  }
  _applyStyles(u) {
    u && u.forEach((d) => {
      const v = document.createElement("style");
      v.textContent = d, this.shadowRoot.appendChild(v);
    });
  }
}
function useCssModule(r = "$style") {
  {
    const u = getCurrentInstance();
    if (!u)
      return EMPTY_OBJ;
    const d = u.type.__cssModules;
    if (!d)
      return EMPTY_OBJ;
    const v = d[r];
    return v || EMPTY_OBJ;
  }
}
function useCssVars(r) {
  const u = getCurrentInstance();
  if (!u)
    return;
  const d = u.ut = (w = r(u.proxy)) => {
    Array.from(
      document.querySelectorAll(`[data-v-owner="${u.uid}"]`)
    ).forEach((C) => setVarsOnNode(C, w));
  }, v = () => {
    const w = r(u.proxy);
    setVarsOnVNode(u.subTree, w), d(w);
  };
  watchPostEffect(v), onMounted(() => {
    const w = new MutationObserver(v);
    w.observe(u.subTree.el.parentNode, { childList: !0 }), onUnmounted(() => w.disconnect());
  });
}
function setVarsOnVNode(r, u) {
  if (r.shapeFlag & 128) {
    const d = r.suspense;
    r = d.activeBranch, d.pendingBranch && !d.isHydrating && d.effects.push(() => {
      setVarsOnVNode(d.activeBranch, u);
    });
  }
  for (; r.component; )
    r = r.component.subTree;
  if (r.shapeFlag & 1 && r.el)
    setVarsOnNode(r.el, u);
  else if (r.type === Fragment)
    r.children.forEach((d) => setVarsOnVNode(d, u));
  else if (r.type === Static) {
    let { el: d, anchor: v } = r;
    for (; d && (setVarsOnNode(d, u), d !== v); )
      d = d.nextSibling;
  }
}
function setVarsOnNode(r, u) {
  if (r.nodeType === 1) {
    const d = r.style;
    for (const v in u)
      d.setProperty(`--${v}`, u[v]);
  }
}
const TRANSITION = "transition", ANIMATION = "animation", Transition = (r, { slots: u }) => h(BaseTransition, resolveTransitionProps(r), u);
Transition.displayName = "Transition";
const DOMTransitionPropsValidators = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: !0
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
}, TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend(
  {},
  BaseTransitionPropsValidators,
  DOMTransitionPropsValidators
), callHook = (r, u = []) => {
  isArray(r) ? r.forEach((d) => d(...u)) : r && r(...u);
}, hasExplicitCallback = (r) => r ? isArray(r) ? r.some((u) => u.length > 1) : r.length > 1 : !1;
function resolveTransitionProps(r) {
  const u = {};
  for (const ae in r)
    ae in DOMTransitionPropsValidators || (u[ae] = r[ae]);
  if (r.css === !1)
    return u;
  const {
    name: d = "v",
    type: v,
    duration: w,
    enterFromClass: C = `${d}-enter-from`,
    enterActiveClass: L = `${d}-enter-active`,
    enterToClass: E = `${d}-enter-to`,
    appearFromClass: V = C,
    appearActiveClass: N = L,
    appearToClass: z = E,
    leaveFromClass: st = `${d}-leave-from`,
    leaveActiveClass: et = `${d}-leave-active`,
    leaveToClass: ct = `${d}-leave-to`
  } = r, Ct = normalizeDuration(w), At = Ct && Ct[0], qt = Ct && Ct[1], {
    onBeforeEnter: vt,
    onEnter: _t,
    onEnterCancelled: Et,
    onLeave: ft,
    onLeaveCancelled: wt,
    onBeforeAppear: Zt = vt,
    onAppear: Ot = _t,
    onAppearCancelled: bt = Et
  } = u, Xt = (ae, Re, me) => {
    removeTransitionClass(ae, Re ? z : E), removeTransitionClass(ae, Re ? N : L), me && me();
  }, ie = (ae, Re) => {
    ae._isLeaving = !1, removeTransitionClass(ae, st), removeTransitionClass(ae, ct), removeTransitionClass(ae, et), Re && Re();
  }, Yt = (ae) => (Re, me) => {
    const Fi = ae ? Ot : _t, ei = () => Xt(Re, ae, me);
    callHook(Fi, [Re, ei]), nextFrame(() => {
      removeTransitionClass(Re, ae ? V : C), addTransitionClass(Re, ae ? z : E), hasExplicitCallback(Fi) || whenTransitionEnds(Re, v, At, ei);
    });
  };
  return extend(u, {
    onBeforeEnter(ae) {
      callHook(vt, [ae]), addTransitionClass(ae, C), addTransitionClass(ae, L);
    },
    onBeforeAppear(ae) {
      callHook(Zt, [ae]), addTransitionClass(ae, V), addTransitionClass(ae, N);
    },
    onEnter: Yt(!1),
    onAppear: Yt(!0),
    onLeave(ae, Re) {
      ae._isLeaving = !0;
      const me = () => ie(ae, Re);
      addTransitionClass(ae, st), forceReflow(), addTransitionClass(ae, et), nextFrame(() => {
        ae._isLeaving && (removeTransitionClass(ae, st), addTransitionClass(ae, ct), hasExplicitCallback(ft) || whenTransitionEnds(ae, v, qt, me));
      }), callHook(ft, [ae, me]);
    },
    onEnterCancelled(ae) {
      Xt(ae, !1), callHook(Et, [ae]);
    },
    onAppearCancelled(ae) {
      Xt(ae, !0), callHook(bt, [ae]);
    },
    onLeaveCancelled(ae) {
      ie(ae), callHook(wt, [ae]);
    }
  });
}
function normalizeDuration(r) {
  if (r == null)
    return null;
  if (isObject(r))
    return [NumberOf(r.enter), NumberOf(r.leave)];
  {
    const u = NumberOf(r);
    return [u, u];
  }
}
function NumberOf(r) {
  return toNumber(r);
}
function addTransitionClass(r, u) {
  u.split(/\s+/).forEach((d) => d && r.classList.add(d)), (r._vtc || (r._vtc = /* @__PURE__ */ new Set())).add(u);
}
function removeTransitionClass(r, u) {
  u.split(/\s+/).forEach((v) => v && r.classList.remove(v));
  const { _vtc: d } = r;
  d && (d.delete(u), d.size || (r._vtc = void 0));
}
function nextFrame(r) {
  requestAnimationFrame(() => {
    requestAnimationFrame(r);
  });
}
let endId = 0;
function whenTransitionEnds(r, u, d, v) {
  const w = r._endId = ++endId, C = () => {
    w === r._endId && v();
  };
  if (d)
    return setTimeout(C, d);
  const { type: L, timeout: E, propCount: V } = getTransitionInfo(r, u);
  if (!L)
    return v();
  const N = L + "end";
  let z = 0;
  const st = () => {
    r.removeEventListener(N, et), C();
  }, et = (ct) => {
    ct.target === r && ++z >= V && st();
  };
  setTimeout(() => {
    z < V && st();
  }, E + 1), r.addEventListener(N, et);
}
function getTransitionInfo(r, u) {
  const d = window.getComputedStyle(r), v = (Ct) => (d[Ct] || "").split(", "), w = v(`${TRANSITION}Delay`), C = v(`${TRANSITION}Duration`), L = getTimeout(w, C), E = v(`${ANIMATION}Delay`), V = v(`${ANIMATION}Duration`), N = getTimeout(E, V);
  let z = null, st = 0, et = 0;
  u === TRANSITION ? L > 0 && (z = TRANSITION, st = L, et = C.length) : u === ANIMATION ? N > 0 && (z = ANIMATION, st = N, et = V.length) : (st = Math.max(L, N), z = st > 0 ? L > N ? TRANSITION : ANIMATION : null, et = z ? z === TRANSITION ? C.length : V.length : 0);
  const ct = z === TRANSITION && /\b(transform|all)(,|$)/.test(
    v(`${TRANSITION}Property`).toString()
  );
  return {
    type: z,
    timeout: st,
    propCount: et,
    hasTransform: ct
  };
}
function getTimeout(r, u) {
  for (; r.length < u.length; )
    r = r.concat(r);
  return Math.max(...u.map((d, v) => toMs(d) + toMs(r[v])));
}
function toMs(r) {
  return Number(r.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
  return document.body.offsetHeight;
}
const positionMap = /* @__PURE__ */ new WeakMap(), newPositionMap = /* @__PURE__ */ new WeakMap(), TransitionGroupImpl = {
  name: "TransitionGroup",
  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {
    tag: String,
    moveClass: String
  }),
  setup(r, { slots: u }) {
    const d = getCurrentInstance(), v = useTransitionState();
    let w, C;
    return onUpdated(() => {
      if (!w.length)
        return;
      const L = r.moveClass || `${r.name || "v"}-move`;
      if (!hasCSSTransform(
        w[0].el,
        d.vnode.el,
        L
      ))
        return;
      w.forEach(callPendingCbs), w.forEach(recordPosition);
      const E = w.filter(applyTranslation);
      forceReflow(), E.forEach((V) => {
        const N = V.el, z = N.style;
        addTransitionClass(N, L), z.transform = z.webkitTransform = z.transitionDuration = "";
        const st = N._moveCb = (et) => {
          et && et.target !== N || (!et || /transform$/.test(et.propertyName)) && (N.removeEventListener("transitionend", st), N._moveCb = null, removeTransitionClass(N, L));
        };
        N.addEventListener("transitionend", st);
      });
    }), () => {
      const L = toRaw(r), E = resolveTransitionProps(L);
      let V = L.tag || Fragment;
      w = C, C = u.default ? getTransitionRawChildren(u.default()) : [];
      for (let N = 0; N < C.length; N++) {
        const z = C[N];
        z.key != null && setTransitionHooks(
          z,
          resolveTransitionHooks(z, E, v, d)
        );
      }
      if (w)
        for (let N = 0; N < w.length; N++) {
          const z = w[N];
          setTransitionHooks(
            z,
            resolveTransitionHooks(z, E, v, d)
          ), positionMap.set(z, z.el.getBoundingClientRect());
        }
      return createVNode(V, null, C);
    };
  }
}, removeMode = (r) => delete r.mode;
TransitionGroupImpl.props;
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(r) {
  const u = r.el;
  u._moveCb && u._moveCb(), u._enterCb && u._enterCb();
}
function recordPosition(r) {
  newPositionMap.set(r, r.el.getBoundingClientRect());
}
function applyTranslation(r) {
  const u = positionMap.get(r), d = newPositionMap.get(r), v = u.left - d.left, w = u.top - d.top;
  if (v || w) {
    const C = r.el.style;
    return C.transform = C.webkitTransform = `translate(${v}px,${w}px)`, C.transitionDuration = "0s", r;
  }
}
function hasCSSTransform(r, u, d) {
  const v = r.cloneNode();
  r._vtc && r._vtc.forEach((L) => {
    L.split(/\s+/).forEach((E) => E && v.classList.remove(E));
  }), d.split(/\s+/).forEach((L) => L && v.classList.add(L)), v.style.display = "none";
  const w = u.nodeType === 1 ? u : u.parentNode;
  w.appendChild(v);
  const { hasTransform: C } = getTransitionInfo(v);
  return w.removeChild(v), C;
}
const getModelAssigner = (r) => {
  const u = r.props["onUpdate:modelValue"] || !1;
  return isArray(u) ? (d) => invokeArrayFns(u, d) : u;
};
function onCompositionStart(r) {
  r.target.composing = !0;
}
function onCompositionEnd(r) {
  const u = r.target;
  u.composing && (u.composing = !1, u.dispatchEvent(new Event("input")));
}
const vModelText = {
  created(r, { modifiers: { lazy: u, trim: d, number: v } }, w) {
    r._assign = getModelAssigner(w);
    const C = v || w.props && w.props.type === "number";
    addEventListener(r, u ? "change" : "input", (L) => {
      if (L.target.composing)
        return;
      let E = r.value;
      d && (E = E.trim()), C && (E = looseToNumber(E)), r._assign(E);
    }), d && addEventListener(r, "change", () => {
      r.value = r.value.trim();
    }), u || (addEventListener(r, "compositionstart", onCompositionStart), addEventListener(r, "compositionend", onCompositionEnd), addEventListener(r, "change", onCompositionEnd));
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(r, { value: u }) {
    r.value = u ?? "";
  },
  beforeUpdate(r, { value: u, modifiers: { lazy: d, trim: v, number: w } }, C) {
    if (r._assign = getModelAssigner(C), r.composing || document.activeElement === r && r.type !== "range" && (d || v && r.value.trim() === u || (w || r.type === "number") && looseToNumber(r.value) === u))
      return;
    const L = u ?? "";
    r.value !== L && (r.value = L);
  }
}, vModelCheckbox = {
  // #4096 array checkboxes need to be deep traversed
  deep: !0,
  created(r, u, d) {
    r._assign = getModelAssigner(d), addEventListener(r, "change", () => {
      const v = r._modelValue, w = getValue(r), C = r.checked, L = r._assign;
      if (isArray(v)) {
        const E = looseIndexOf(v, w), V = E !== -1;
        if (C && !V)
          L(v.concat(w));
        else if (!C && V) {
          const N = [...v];
          N.splice(E, 1), L(N);
        }
      } else if (isSet(v)) {
        const E = new Set(v);
        C ? E.add(w) : E.delete(w), L(E);
      } else
        L(getCheckboxValue(r, C));
    });
  },
  // set initial checked on mount to wait for true-value/false-value
  mounted: setChecked,
  beforeUpdate(r, u, d) {
    r._assign = getModelAssigner(d), setChecked(r, u, d);
  }
};
function setChecked(r, { value: u, oldValue: d }, v) {
  r._modelValue = u, isArray(u) ? r.checked = looseIndexOf(u, v.props.value) > -1 : isSet(u) ? r.checked = u.has(v.props.value) : u !== d && (r.checked = looseEqual(u, getCheckboxValue(r, !0)));
}
const vModelRadio = {
  created(r, { value: u }, d) {
    r.checked = looseEqual(u, d.props.value), r._assign = getModelAssigner(d), addEventListener(r, "change", () => {
      r._assign(getValue(r));
    });
  },
  beforeUpdate(r, { value: u, oldValue: d }, v) {
    r._assign = getModelAssigner(v), u !== d && (r.checked = looseEqual(u, v.props.value));
  }
}, vModelSelect = {
  // <select multiple> value need to be deep traversed
  deep: !0,
  created(r, { value: u, modifiers: { number: d } }, v) {
    const w = isSet(u);
    addEventListener(r, "change", () => {
      const C = Array.prototype.filter.call(r.options, (L) => L.selected).map(
        (L) => d ? looseToNumber(getValue(L)) : getValue(L)
      );
      r._assign(
        r.multiple ? w ? new Set(C) : C : C[0]
      );
    }), r._assign = getModelAssigner(v);
  },
  // set value in mounted & updated because <select> relies on its children
  // <option>s.
  mounted(r, { value: u }) {
    setSelected(r, u);
  },
  beforeUpdate(r, u, d) {
    r._assign = getModelAssigner(d);
  },
  updated(r, { value: u }) {
    setSelected(r, u);
  }
};
function setSelected(r, u) {
  const d = r.multiple;
  if (!(d && !isArray(u) && !isSet(u))) {
    for (let v = 0, w = r.options.length; v < w; v++) {
      const C = r.options[v], L = getValue(C);
      if (d)
        isArray(u) ? C.selected = looseIndexOf(u, L) > -1 : C.selected = u.has(L);
      else if (looseEqual(getValue(C), u)) {
        r.selectedIndex !== v && (r.selectedIndex = v);
        return;
      }
    }
    !d && r.selectedIndex !== -1 && (r.selectedIndex = -1);
  }
}
function getValue(r) {
  return "_value" in r ? r._value : r.value;
}
function getCheckboxValue(r, u) {
  const d = u ? "_trueValue" : "_falseValue";
  return d in r ? r[d] : u;
}
const vModelDynamic = {
  created(r, u, d) {
    callModelHook(r, u, d, null, "created");
  },
  mounted(r, u, d) {
    callModelHook(r, u, d, null, "mounted");
  },
  beforeUpdate(r, u, d, v) {
    callModelHook(r, u, d, v, "beforeUpdate");
  },
  updated(r, u, d, v) {
    callModelHook(r, u, d, v, "updated");
  }
};
function resolveDynamicModel(r, u) {
  switch (r) {
    case "SELECT":
      return vModelSelect;
    case "TEXTAREA":
      return vModelText;
    default:
      switch (u) {
        case "checkbox":
          return vModelCheckbox;
        case "radio":
          return vModelRadio;
        default:
          return vModelText;
      }
  }
}
function callModelHook(r, u, d, v, w) {
  const L = resolveDynamicModel(
    r.tagName,
    d.props && d.props.type
  )[w];
  L && L(r, u, d, v);
}
function initVModelForSSR() {
  vModelText.getSSRProps = ({ value: r }) => ({ value: r }), vModelRadio.getSSRProps = ({ value: r }, u) => {
    if (u.props && looseEqual(u.props.value, r))
      return { checked: !0 };
  }, vModelCheckbox.getSSRProps = ({ value: r }, u) => {
    if (isArray(r)) {
      if (u.props && looseIndexOf(r, u.props.value) > -1)
        return { checked: !0 };
    } else if (isSet(r)) {
      if (u.props && r.has(u.props.value))
        return { checked: !0 };
    } else if (r)
      return { checked: !0 };
  }, vModelDynamic.getSSRProps = (r, u) => {
    if (typeof u.type != "string")
      return;
    const d = resolveDynamicModel(
      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
      u.type.toUpperCase(),
      u.props && u.props.type
    );
    if (d.getSSRProps)
      return d.getSSRProps(r, u);
  };
}
const systemModifiers = ["ctrl", "shift", "alt", "meta"], modifierGuards = {
  stop: (r) => r.stopPropagation(),
  prevent: (r) => r.preventDefault(),
  self: (r) => r.target !== r.currentTarget,
  ctrl: (r) => !r.ctrlKey,
  shift: (r) => !r.shiftKey,
  alt: (r) => !r.altKey,
  meta: (r) => !r.metaKey,
  left: (r) => "button" in r && r.button !== 0,
  middle: (r) => "button" in r && r.button !== 1,
  right: (r) => "button" in r && r.button !== 2,
  exact: (r, u) => systemModifiers.some((d) => r[`${d}Key`] && !u.includes(d))
}, withModifiers = (r, u) => (d, ...v) => {
  for (let w = 0; w < u.length; w++) {
    const C = modifierGuards[u[w]];
    if (C && C(d, u))
      return;
  }
  return r(d, ...v);
}, keyNames = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
}, withKeys = (r, u) => (d) => {
  if (!("key" in d))
    return;
  const v = hyphenate(d.key);
  if (u.some((w) => w === v || keyNames[w] === v))
    return r(d);
}, vShow = {
  beforeMount(r, { value: u }, { transition: d }) {
    r._vod = r.style.display === "none" ? "" : r.style.display, d && u ? d.beforeEnter(r) : setDisplay(r, u);
  },
  mounted(r, { value: u }, { transition: d }) {
    d && u && d.enter(r);
  },
  updated(r, { value: u, oldValue: d }, { transition: v }) {
    !u != !d && (v ? u ? (v.beforeEnter(r), setDisplay(r, !0), v.enter(r)) : v.leave(r, () => {
      setDisplay(r, !1);
    }) : setDisplay(r, u));
  },
  beforeUnmount(r, { value: u }) {
    setDisplay(r, u);
  }
};
function setDisplay(r, u) {
  r.style.display = u ? r._vod : "none";
}
function initVShowForSSR() {
  vShow.getSSRProps = ({ value: r }) => {
    if (!r)
      return { style: { display: "none" } };
  };
}
const rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);
let renderer, enabledHydration = !1;
function ensureRenderer() {
  return renderer || (renderer = createRenderer(rendererOptions));
}
function ensureHydrationRenderer() {
  return renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions), enabledHydration = !0, renderer;
}
const render$1 = (...r) => {
  ensureRenderer().render(...r);
}, hydrate = (...r) => {
  ensureHydrationRenderer().hydrate(...r);
}, createApp = (...r) => {
  const u = ensureRenderer().createApp(...r), { mount: d } = u;
  return u.mount = (v) => {
    const w = normalizeContainer(v);
    if (!w)
      return;
    const C = u._component;
    !isFunction(C) && !C.render && !C.template && (C.template = w.innerHTML), w.innerHTML = "";
    const L = d(w, !1, w instanceof SVGElement);
    return w instanceof Element && (w.removeAttribute("v-cloak"), w.setAttribute("data-v-app", "")), L;
  }, u;
}, createSSRApp = (...r) => {
  const u = ensureHydrationRenderer().createApp(...r), { mount: d } = u;
  return u.mount = (v) => {
    const w = normalizeContainer(v);
    if (w)
      return d(w, !0, w instanceof SVGElement);
  }, u;
};
function normalizeContainer(r) {
  return isString(r) ? document.querySelector(r) : r;
}
let ssrDirectiveInitialized = !1;
const initDirectivesForSSR = () => {
  ssrDirectiveInitialized || (ssrDirectiveInitialized = !0, initVModelForSSR(), initVShowForSSR());
}, compile = () => {
}, vue_runtime_esmBundler = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseTransition,
  BaseTransitionPropsValidators,
  Comment,
  EffectScope,
  Fragment,
  KeepAlive,
  ReactiveEffect,
  Static,
  Suspense,
  Teleport,
  Text,
  Transition,
  TransitionGroup,
  VueElement,
  assertNumber,
  callWithAsyncErrorHandling,
  callWithErrorHandling,
  camelize,
  capitalize,
  cloneVNode,
  compatUtils,
  compile,
  computed,
  createApp,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createElementVNode: createBaseVNode,
  createHydrationRenderer,
  createPropsRestProxy,
  createRenderer,
  createSSRApp,
  createSlots,
  createStaticVNode,
  createTextVNode,
  createVNode,
  customRef,
  defineAsyncComponent,
  defineComponent,
  defineCustomElement,
  defineEmits,
  defineExpose,
  defineModel,
  defineOptions,
  defineProps,
  defineSSRCustomElement,
  defineSlots,
  get devtools() {
    return devtools;
  },
  effect,
  effectScope,
  getCurrentInstance,
  getCurrentScope,
  getTransitionRawChildren,
  guardReactiveProps,
  h,
  handleError,
  hasInjectionContext,
  hydrate,
  initCustomFormatter,
  initDirectivesForSSR,
  inject,
  isMemoSame,
  isProxy,
  isReactive,
  isReadonly,
  isRef,
  isRuntimeOnly,
  isShallow,
  isVNode,
  markRaw,
  mergeDefaults,
  mergeModels,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onActivated,
  onBeforeMount,
  onBeforeUnmount,
  onBeforeUpdate,
  onDeactivated,
  onErrorCaptured,
  onMounted,
  onRenderTracked,
  onRenderTriggered,
  onScopeDispose,
  onServerPrefetch,
  onUnmounted,
  onUpdated,
  openBlock,
  popScopeId,
  provide,
  proxyRefs,
  pushScopeId,
  queuePostFlushCb,
  reactive,
  readonly,
  ref,
  registerRuntimeCompiler,
  render: render$1,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDirective,
  resolveDynamicComponent,
  resolveFilter,
  resolveTransitionHooks,
  setBlockTracking,
  setDevtoolsHook,
  setTransitionHooks,
  shallowReactive,
  shallowReadonly,
  shallowRef,
  ssrContextKey,
  ssrUtils,
  stop,
  toDisplayString,
  toHandlerKey,
  toHandlers,
  toRaw,
  toRef,
  toRefs,
  toValue,
  transformVNodeArgs,
  triggerRef,
  unref,
  useAttrs,
  useCssModule,
  useCssVars,
  useModel,
  useSSRContext,
  useSlots,
  useTransitionState,
  vModelCheckbox,
  vModelDynamic,
  vModelRadio,
  vModelSelect,
  vModelText,
  vShow,
  version: version$1,
  warn,
  watch,
  watchEffect,
  watchPostEffect,
  watchSyncEffect,
  withAsyncContext,
  withCtx,
  withDefaults,
  withDirectives,
  withKeys,
  withMemo,
  withModifiers,
  withScopeId
}, Symbol.toStringTag, { value: "Module" }));
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(r) {
  return r && r.__esModule && Object.prototype.hasOwnProperty.call(r, "default") ? r.default : r;
}
function getAugmentedNamespace(r) {
  if (r.__esModule)
    return r;
  var u = r.default;
  if (typeof u == "function") {
    var d = function v() {
      return this instanceof v ? Reflect.construct(u, arguments, this.constructor) : u.apply(this, arguments);
    };
    d.prototype = u.prototype;
  } else
    d = {};
  return Object.defineProperty(d, "__esModule", { value: !0 }), Object.keys(r).forEach(function(v) {
    var w = Object.getOwnPropertyDescriptor(r, v);
    Object.defineProperty(d, v, w.get ? w : {
      enumerable: !0,
      get: function() {
        return r[v];
      }
    });
  }), d;
}
var index_umd = { exports: {} }, src = { exports: {} }, hasRequiredSrc;
function requireSrc() {
  return hasRequiredSrc || (hasRequiredSrc = 1, function(module) {
    (function(r, u) {
      module.exports ? module.exports = u() : r.wwtlib = u();
    })(typeof self < "u" ? self : commonjsGlobal, function() {
      /*! Script# Runtime
       * Designed and licensed for use and distribution with Script#-generated scripts.
       * Copyright (c) 2012, Nikhil Kothari, and the Script# Project.
       * More information at http://scriptsharp.com
       */
      function _ss() {
        function _nop() {
        }
        function isValue(r) {
          return r != null;
        }
        function _value(r) {
          for (var u = 2, d = r.length; u < d; u++)
            if (isValue(r[u]))
              return r[u];
          return null;
        }
        function value(r, u) {
          return isValue(r) ? r : isValue(u) ? u : _value(arguments);
        }
        function extend(r, u) {
          for (var d in u)
            r[d] = u[d];
          return r;
        }
        function parseBoolean(r) {
          return r.toLowerCase() == "true";
        }
        function parseRegExp(r) {
          if (r[0] == "/") {
            var u = r.lastIndexOf("/");
            if (u > 1) {
              var d = r.substring(1, u), v = r.substr(u + 1);
              return new RegExp(d, v);
            }
          }
          return null;
        }
        function parseNumber(r) {
          return !r || !r.length ? 0 : r.indexOf(".") >= 0 || r.indexOf("e") >= 0 || endsWith(r, "f") || endsWith(r, "F") ? parseFloat(r) : parseInt(r, 10);
        }
        function parseDate(r) {
          var u = Date.parse(r);
          return isNaN(u) ? void 0 : new Date(u);
        }
        function truncate(r) {
          return r >= 0 ? Math.floor(r) : Math.ceil(r);
        }
        function now() {
          return /* @__PURE__ */ new Date();
        }
        function today() {
          var r = /* @__PURE__ */ new Date();
          return new Date(r.getFullYear(), r.getMonth(), r.getDate());
        }
        function compareDates(r, u) {
          return r === u ? !0 : isValue(r) && isValue(u) ? r.getTime() == u.getTime() : !1;
        }
        function _popStackFrame(r) {
          if (!(!isValue(r.stack) || !isValue(r.fileName) || !isValue(r.lineNumber))) {
            for (var u = r.stack.split(`
`), d = u[0], v = r.fileName + ":" + r.lineNumber; isValue(d) && d.indexOf(v) === -1; )
              u.shift(), d = u[0];
            var w = u[1];
            if (isValue(w)) {
              var C = w.match(/@(.*):(\d+)$/);
              isValue(C) && (u.shift(), r.stack = u.join(`
`), r.fileName = C[1], r.lineNumber = parseInt(C[2], 10));
            }
          }
        }
        function error(r, u, d) {
          var v = new Error(r);
          if (u)
            for (var w in u)
              v[w] = u[w];
          return d && (v.innerException = d), _popStackFrame(v), v;
        }
        function fail(message) {
          console.assert(!1, message), commonjsGlobal.navigator && eval("debugger;");
        }
        function toArray(r) {
          return r ? typeof r == "string" ? JSON.parse("(" + r + ")") : Array.prototype.slice.call(r) : null;
        }
        function removeItem(r, u) {
          var d = r.indexOf(u);
          return d >= 0 ? (r.splice(d, 1), !0) : !1;
        }
        function clearKeys(r) {
          for (var u in r)
            delete r[u];
        }
        function keyExists(r, u) {
          return r[u] !== void 0;
        }
        function keys(r) {
          if (Object.keys)
            return Object.keys(r);
          var u = [];
          for (var d in r)
            u.push(d);
          return u;
        }
        function keyCount(r) {
          return keys(r).length;
        }
        function Enumerator(r, u) {
          var d = -1, v = u ? u.length : r.length, w = u ? function() {
            return { key: u[d], value: r[u[d]] };
          } : function() {
            return r[d];
          };
          this.current = null, this.moveNext = function() {
            return d++, this.current = w(), d < v;
          }, this.reset = function() {
            d = -1, this.current = null;
          };
        }
        var _nopEnumerator = {
          current: null,
          moveNext: function() {
            return !1;
          },
          reset: _nop
        };
        function enumerate(r) {
          return isValue(r) ? r.getEnumerator ? r.getEnumerator() : r.length !== void 0 ? new Enumerator(r) : new Enumerator(r, keys(r)) : _nopEnumerator;
        }
        function Stack() {
          this.count = 0, this._items = [];
        }
        var Stack$ = {
          clear: function() {
            this._items.length = 0, this.count = 0;
          },
          contains: function(r) {
            for (var u = this.count - 1; u >= 0; u--)
              if (this._items[u] === r)
                return !0;
            return !1;
          },
          getEnumerator: function() {
            return new Enumerator(this._items.reverse());
          },
          peek: function() {
            return this._items[this.count - 1];
          },
          push: function(r) {
            this._items.push(r), this.count++;
          },
          pop: function() {
            if (this.count)
              return this.count--, this._items.pop();
          }
        };
        function Queue() {
          this.count = 0, this._items = [], this._offset = 0;
        }
        function _cleanQueue(r) {
          r._items = r._items.slice(r._offset), r._offset = 0;
        }
        var Queue$ = {
          clear: function() {
            this._items.length = 0, this._offset = 0, this.count = 0;
          },
          contains: function(r) {
            for (var u = this._offset, d = this._items.length; u <= d; u++)
              if (this._items[u] === r)
                return !0;
            return !1;
          },
          dequeue: function() {
            if (this.count) {
              var r = this._items[this._offset];
              return ++this._offset * 2 >= this._items.length && _cleanQueue(this), this.count--, r;
            }
          },
          enqueue: function(r) {
            this._items.push(r), this.count++;
          },
          getEnumerator: function() {
            return this._offset != 0 && _cleanQueue(this), new Enumerator(this._items);
          },
          peek: function() {
            return this._items.length ? this._items[this._offset] : void 0;
          }
        };
        function string(r, u) {
          return typeof u == "number" ? u > 1 ? new Array(u + 1).join(r) : r : Array.prototype.join.call(arguments, "");
        }
        function emptyString(r) {
          return !r || !r.length;
        }
        function whitespace(r) {
          return emptyString(r) || !r.replace(/^\s*/, "").length;
        }
        function compareStrings(r, u, d) {
          return r = r || "", u = u || "", d && (r = r.toUpperCase(), u = u.toUpperCase()), r === u ? 0 : r < u ? -1 : 1;
        }
        var _formatPlaceHolderRE = /(\{[^\}^\{]+\})/g, _formatters = {};
        function format(r) {
          var u = neutralCulture, d = r, v = Array.prototype.slice.call(arguments, 1);
          return r.constructor != String && (u = r, d = v[0], v = v.slice(1)), d.replace(
            _formatPlaceHolderRE,
            function(w, C) {
              var L = parseInt(C.substr(1), 10), E = v[L];
              if (!isValue(E))
                return "";
              var V = _formatters[typeName(E)];
              if (V) {
                var N = "", z = C.indexOf(":");
                if (z > 0 && (N = C.substring(z + 1, C.length - 1)), N && N != "i")
                  return V(E, N, u);
              }
              return u == neutralCulture ? E.toString() : E.toLocaleString();
            }
          );
        }
        function trim(r, u) {
          if (u || !String.prototype.trim) {
            u = u ? u.join("") : null;
            var d = u ? new RegExp("^[" + u + "]+|[" + u + "]+$", "g") : /^\s+|\s+$/g;
            return r.replace(d, "");
          }
          return r.trim();
        }
        function trimStart(r, u) {
          var d = u ? new RegExp("^[" + u.join("") + "]+") : /^\s+/;
          return r.replace(d, "");
        }
        function trimEnd(r, u) {
          var d = u ? new RegExp("[" + u.join("") + "]+$") : /\s+$/;
          return r.replace(d, "");
        }
        function startsWith(r, u) {
          return emptyString(u) ? !0 : emptyString(r) || u.length > r.length ? !1 : r.substr(0, u.length) == u;
        }
        function endsWith(r, u) {
          return emptyString(u) ? !0 : emptyString(r) || u.length > r.length ? !1 : r.substr(-u.length) == u;
        }
        function padLeft(r, u, d) {
          return r.length < u ? string(d || " ", u - r.length) + r : r;
        }
        function padRight(r, u, d) {
          return r.length < u ? r + string(d || " ", u - r.length) : r;
        }
        function removeString(r, u, d) {
          return !d || u + d > r.length ? r.substr(0, u) : r.substr(0, u) + r.substr(u + d);
        }
        function insertString(r, u, d) {
          return d ? u ? r.substr(0, u) + d + r.substr(u) : d + r : r;
        }
        function replaceString(r, u, d) {
          return r.split(u).join(d || "");
        }
        function _bindList(r) {
          var u = function() {
            for (var d = arguments, v = null, w = 0, C = r.length; w < C; w++)
              v = d.length ? r[w].apply(null, d) : r[w].call(null);
            return v;
          };
          return u._fnList = r, u;
        }
        function bind(r, u) {
          if (!u)
            return r;
          var d = null;
          r = typeof r == "string" ? u[d = r] : r;
          var v = d ? u.$$b || (u.$$b = {}) : null, w = v ? v[d] : null;
          return w || (w = function() {
            return r.apply(u, arguments);
          }, v && (v[d] = w)), w;
        }
        function bindAdd(r, u) {
          if (!r)
            return u;
          if (!u)
            return r;
          var d = [].concat(r._fnList || r, u);
          return _bindList(d);
        }
        function bindSub(r, u) {
          if (!r)
            return null;
          if (!u)
            return r;
          var d = r._fnList || [r], v = d.indexOf(u);
          return v >= 0 ? d.length == 1 ? null : (d = v ? d.slice(0, v).concat(d.slice(v + 1)) : d.slice(1), _bindList(d)) : r;
        }
        function bindExport(r, u, d, v) {
          d = d || "__" + (/* @__PURE__ */ new Date()).valueOf(), v = v || commonjsGlobal;
          var w = {
            name: d,
            detach: function() {
              v[d] = _nop;
            },
            dispose: function() {
              try {
                delete v[d];
              } catch {
                v[d] = void 0;
              }
            }
          };
          return v[d] = u ? r : function() {
            return w.dispose(), r.apply(null, arguments);
          }, w;
        }
        function EventArgs() {
        }
        EventArgs.Empty = new EventArgs();
        function CancelEventArgs() {
          this.cancel = !1;
        }
        function IDisposable() {
        }
        function IEnumerable() {
        }
        function IEnumerator() {
        }
        function IObserver() {
        }
        function IApplication() {
        }
        function IContainer() {
        }
        function IObjectFactory() {
        }
        function IEventManager() {
        }
        function IInitializable() {
        }
        function StringBuilder(r) {
          this._parts = isValue(r) && r !== "" ? [r] : [], this.isEmpty = this._parts.length == 0;
        }
        var StringBuilder$ = {
          append: function(r) {
            return isValue(r) && r !== "" && (this._parts.push(r), this.isEmpty = !1), this;
          },
          appendLine: function(r) {
            return this.append(r), this.append(`\r
`), this.isEmpty = !1, this;
          },
          clear: function() {
            this._parts = [], this.isEmpty = !0;
          },
          toString: function(r) {
            return this._parts.join(r || "");
          }
        }, _observerStack = [], _observerRegistration = {
          dispose: function() {
            _observerStack.pop();
          }
        };
        function _captureObservers(r) {
          var u = _observerStack, d = u.length;
          if (d) {
            r = r || [];
            for (var v = 0; v < d; v++) {
              var w = u[v];
              r.indexOf(w) < 0 && r.push(w);
            }
            return r;
          }
          return null;
        }
        function _invalidateObservers(r) {
          for (var u = 0, d = r.length; u < d; u++)
            r[u].invalidateObserver();
        }
        function Observable(r) {
          this._v = r, this._observers = null;
        }
        var Observable$ = {
          getValue: function() {
            return this._observers = _captureObservers(this._observers), this._v;
          },
          setValue: function(r) {
            if (this._v !== r) {
              this._v = r;
              var u = this._observers;
              u && (this._observers = null, _invalidateObservers(u));
            }
          }
        };
        Observable.registerObserver = function(r) {
          return _observerStack.push(r), _observerRegistration;
        };
        function ObservableCollection(r) {
          this._items = r || [], this._observers = null;
        }
        var ObservableCollection$ = {
          get_item: function(r) {
            return this._observers = _captureObservers(this._observers), this._items[r];
          },
          set_item: function(r, u) {
            this._items[r] = u, this._updated();
          },
          get_length: function() {
            return this._observers = _captureObservers(this._observers), this._items.length;
          },
          add: function(r) {
            this._items.push(r), this._updated();
          },
          clear: function() {
            this._items.clear(), this._updated();
          },
          contains: function(r) {
            return this._items.indexOf(r) >= 0;
          },
          getEnumerator: function() {
            return this._observers = _captureObservers(this._observers), this._items.getEnumerator();
          },
          indexOf: function(r) {
            return this._items.indexOf(r);
          },
          insert: function(r, u) {
            this._items.insert(r, u), this._updated();
          },
          remove: function(r) {
            return this._items.remove(r) ? (this._updated(), !0) : !1;
          },
          removeAt: function(r) {
            this._items.splice(r, 1), this._updated();
          },
          toArray: function() {
            return this._items;
          },
          _updated: function() {
            var r = this._observers;
            r && (this._observers = null, _invalidateObservers(r));
          }
        };
        function Task(r) {
          this._continuations = r !== void 0 ? (this.status = "done", null) : (this.status = "pending", []), this.result = r, this.error = null;
        }
        var Task$ = {
          get_completed: function() {
            return this.status != "pending";
          },
          changeWith: function(r) {
            var u = new Task();
            return this.continueWith(function(d) {
              var v = d.error, w;
              if (!v)
                try {
                  w = r(d);
                } catch (C) {
                  v = C;
                }
              _updateTask(u, w, v);
            }), u;
          },
          continueWith: function(r) {
            if (this._continuations)
              this._continuations.push(r);
            else {
              var u = this;
              setTimeout(function() {
                r(u);
              }, 0);
            }
            return this;
          },
          done: function(r) {
            return this.continueWith(function(u) {
              u.status == "done" && r(u.result);
            });
          },
          fail: function(r) {
            return this.continueWith(function(u) {
              u.status == "failed" && r(u.error);
            });
          },
          then: function(r, u) {
            return this.continueWith(function(d) {
              d.status == "done" ? r(d.result) : u(d.error);
            });
          }
        };
        function _updateTask(r, u, d) {
          if (r.status == "pending") {
            d ? (r.error = d, r.status = "failed") : (r.result = u, r.status = "done");
            var v = r._continuations;
            r._continuations = null;
            for (var w = 0, C = v.length; w < C; w++)
              v[w](r);
          }
        }
        function _joinTasks(r, u) {
          r = toArray(r);
          var d = r.length, v = 0;
          d > 1 && typeof r[0] == "number" && (v = r[0], r = r.slice(1), d--), Array.isArray(r[0]) && (r = r[0], d = r.length);
          var w = new Task(), C = 0;
          function L(N) {
            w.status == "pending" && (C++, u ? _updateTask(w, N) : C == d && _updateTask(w, !0));
          }
          function E() {
            w.status == "pending" && (u ? _updateTask(w, null) : _updateTask(w, !1));
          }
          v != 0 && setTimeout(E, v);
          for (var V = 0; V < d; V++)
            r[V].continueWith(L);
          return w;
        }
        Task.all = function() {
          return _joinTasks(arguments, !1);
        }, Task.any = function() {
          return _joinTasks(arguments, !0);
        }, Task.delay = function(r) {
          var u = new Task();
          return setTimeout(function() {
            _updateTask(u, !0);
          }, r), u;
        };
        function deferred(r) {
          var u = new Task(r);
          return {
            task: u,
            resolve: function(d) {
              _updateTask(u, d);
            },
            reject: function(d) {
              _updateTask(u, null, d || new Error());
            }
          };
        }
        var neutralCulture = {
          name: "",
          // numberFormat
          nf: {
            nan: "NaN",
            // naNSymbol
            neg: "-",
            // negativeSign
            pos: "+",
            // positiveSign
            negInf: "-Infinity",
            // negativeInfinityText
            posInf: "Infinity",
            // positiveInfinityText
            gw: [3],
            // numberGroupSizes
            dd: 2,
            // numberDecimalDigits
            ds: ".",
            // numberDecimalSeparator
            gs: ",",
            // numberGroupSeparator
            per: "%",
            // percentSymbol
            perGW: [3],
            // percentGroupSizes
            perDD: 2,
            // percentDecimalDigits
            perDS: ".",
            // percentDecimalSeparator
            perGS: ",",
            // percentGroupSeparator
            perPP: "{0} %",
            // percentPositivePattern
            perNP: "-{0} %",
            // percentNegativePattern
            cur: "$",
            // currencySymbol
            curGW: [3],
            // currencyGroupSizes
            curDD: 2,
            // currencyDecimalDigits
            curDS: ".",
            // currencyDecimalSeparator
            curGS: ",",
            // currencyGroupSeparator
            curNP: "(${0})",
            // currencyNegativePattern
            curPP: "${0}"
            // currencyPositivePattern
          },
          // dateFormat
          dtf: {
            am: "AM",
            // amDesignator
            pm: "PM",
            // pmDesignator
            ds: "/",
            // dateSeparator
            ts: ":",
            // timeSeparator
            gmt: "ddd, dd MMM yyyy HH:mm:ss 'GMT'",
            // gmtDateTimePattern
            uni: "yyyy-MM-dd HH:mm:ssZ",
            // universalDateTimePattern
            sort: "yyyy-MM-ddTHH:mm:ss",
            // sortableDateTimePattern
            dt: "dddd, MMMM dd, yyyy h:mm:ss tt",
            // dateTimePattern
            ld: "dddd, MMMM dd, yyyy",
            // longDatePattern
            sd: "M/d/yyyy",
            // shortDatePattern
            lt: "h:mm:ss tt",
            // longTimePattern
            st: "h:mm tt",
            // shortTimePattern
            day0: 0,
            // firstDayOfWeek
            day: [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            // dayNames
            sday: [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat"
            ],
            // shortDayNames
            mday: [
              "Su",
              "Mo",
              "Tu",
              "We",
              "Th",
              "Fr",
              "Sa"
            ],
            // minimizedDayNames
            mon: [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
              ""
            ],
            // monthNames
            smon: [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
              ""
            ]
            // shortMonthNames
          }
        }, currentCulture = { name: "en-us", dtf: neutralCulture.dtf, nf: neutralCulture.nf };
        function _commaFormatNumber(r, u, d, v) {
          var w = null, C = r.indexOf(d);
          C > 0 && (w = r.substr(C), r = r.substr(0, C));
          var L = r.startsWith("-");
          L && (r = r.substr(1));
          var E = 0, V = u[E];
          if (r.length < V)
            return w ? r + w : r;
          for (var N = r.length, z = "", st = !1; !st; ) {
            var et = V, ct = N - et;
            if (ct < 0 && (V += ct, et += ct, ct = 0, st = !0), !et)
              break;
            var Ct = r.substr(ct, et);
            z.length ? z = Ct + v + z : z = Ct, N -= et, E < u.length - 1 && (E++, V = u[E]);
          }
          return L && (z = "-" + z), w ? z + w : z;
        }
        _formatters.Number = function(r, u, d) {
          var v = d.nf, w = "", C = -1;
          u.length > 1 && (C = parseInt(u.substr(1)));
          var L = u.charAt(0);
          switch (L) {
            case "d":
            case "D":
              w = parseInt(Math.abs(r)).toString(), C != -1 && (w = padLeft(w, C, "0")), r < 0 && (w = "-" + w);
              break;
            case "x":
            case "X":
              w = parseInt(Math.abs(r)).toString(16), L == "X" && (w = w.toUpperCase()), C != -1 && (w = padLeft(w, C, "0"));
              break;
            case "e":
            case "E":
              C == -1 ? w = r.toExponential() : w = r.toExponential(C), L == "E" && (w = w.toUpperCase());
              break;
            case "f":
            case "F":
            case "n":
            case "N":
              if (C == -1 && (C = v.dd), w = r.toFixed(C).toString(), C && v.ds != ".") {
                var E = w.indexOf(".");
                w = w.substr(0, E) + v.ds + w.substr(E + 1);
              }
              (L == "n" || L == "N") && (w = _commaFormatNumber(w, v.gw, v.ds, v.gs));
              break;
            case "c":
            case "C":
              if (C == -1 && (C = v.curDD), w = Math.abs(r).toFixed(C).toString(), C && v.curDS != ".") {
                var E = w.indexOf(".");
                w = w.substr(0, E) + v.curDS + w.substr(E + 1);
              }
              w = _commaFormatNumber(w, v.curGW, v.curDS, v.curGS), r < 0 ? w = String.format(d, v.curNP, w) : w = String.format(d, v.curPP, w);
              break;
            case "p":
            case "P":
              if (C == -1 && (C = v.perDD), w = (Math.abs(r) * 100).toFixed(C).toString(), C && v.perDS != ".") {
                var E = w.indexOf(".");
                w = w.substr(0, E) + v.perDS + w.substr(E + 1);
              }
              w = _commaFormatNumber(w, v.perGW, v.perDS, v.perGS), r < 0 ? w = String.format(d, v.perNP, w) : w = String.format(d, v.perPP, w);
              break;
          }
          return w;
        };
        var _dateFormatRE = /'.*?[^\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
        _formatters.Date = function(r, u, d) {
          if (u == "iso")
            return r.toISOString();
          if (u.charAt(0) == "i") {
            var v = "String";
            switch (u) {
              case "id":
                v = "DateString";
                break;
              case "it":
                v = "TimeString";
                break;
            }
            return d == neutralCulture ? r["to" + v]() : r["toLocale" + v]();
          }
          var w = d.dtf;
          if (u.length == 1)
            switch (u) {
              case "f":
                u = w.ld + " " + w.st;
                break;
              case "F":
                u = w.dt;
                break;
              case "d":
                u = w.sd;
                break;
              case "D":
                u = w.ld;
                break;
              case "t":
                u = w.st;
                break;
              case "T":
                u = w.lt;
                break;
              case "g":
                u = w.sd + " " + w.st;
                break;
              case "G":
                u = w.sd + " " + w.lt;
                break;
              case "R":
              case "r":
                w = neutralCulture.dtf, u = w.gmt;
                break;
              case "u":
                u = w.uni;
                break;
              case "U":
                u = w.dt, r = new Date(
                  r.getUTCFullYear(),
                  r.getUTCMonth(),
                  r.getUTCDate(),
                  r.getUTCHours(),
                  r.getUTCMinutes(),
                  r.getUTCSeconds(),
                  r.getUTCMilliseconds()
                );
                break;
              case "s":
                u = w.sort;
                break;
            }
          u.charAt(0) == "%" && (u = u.substr(1));
          var C = new StringBuilder();
          for (_dateFormatRE.lastIndex = 0; ; ) {
            var L = _dateFormatRE.lastIndex, E = _dateFormatRE.exec(u);
            if (C.append(u.slice(L, E ? E.index : u.length)), !E)
              break;
            var V = E[0], N = V;
            switch (V) {
              case "dddd":
                N = w.day[r.getDay()];
                break;
              case "ddd":
                N = w.sday[r.getDay()];
                break;
              case "dd":
                N = padLeft(r.getDate().toString(), 2, "0");
                break;
              case "d":
                N = r.getDate();
                break;
              case "MMMM":
                N = w.mon[r.getMonth()];
                break;
              case "MMM":
                N = w.smon[r.getMonth()];
                break;
              case "MM":
                N = padLeft((r.getMonth() + 1).toString(), 2, "0");
                break;
              case "M":
                N = r.getMonth() + 1;
                break;
              case "yyyy":
                N = r.getFullYear();
                break;
              case "yy":
                N = padLeft((r.getFullYear() % 100).toString(), 2, "0");
                break;
              case "y":
                N = r.getFullYear() % 100;
                break;
              case "h":
              case "hh":
                N = r.getHours() % 12, N ? V == "hh" && (N = padLeft(N.toString(), 2, "0")) : N = "12";
                break;
              case "HH":
                N = padLeft(r.getHours().toString(), 2, "0");
                break;
              case "H":
                N = r.getHours();
                break;
              case "mm":
                N = padLeft(r.getMinutes().toString(), 2, "0");
                break;
              case "m":
                N = r.getMinutes();
                break;
              case "ss":
                N = padLeft(r.getSeconds().toString(), 2, "0");
                break;
              case "s":
                N = r.getSeconds();
                break;
              case "t":
              case "tt":
                N = r.getHours() < 12 ? w.am : w.pm, V == "t" && (N = N.charAt(0));
                break;
              case "fff":
                N = padLeft(r.getMilliseconds().toString(), 3, "0");
                break;
              case "ff":
                N = padLeft(r.getMilliseconds().toString(), 3).substr(0, 2);
                break;
              case "f":
                N = padLeft(r.getMilliseconds().toString(), 3).charAt(0);
                break;
              case "z":
                N = r.getTimezoneOffset() / 60, N = (N >= 0 ? "-" : "+") + Math.floor(Math.abs(N));
                break;
              case "zz":
              case "zzz":
                N = r.getTimezoneOffset() / 60, N = (N >= 0 ? "-" : "+") + padLeft(Math.floor(Math.abs(N)).toString(), 2, "0"), V == "zzz" && (N += w.ts + padLeft(Math.abs(r.getTimezoneOffset() % 60).toString(), 2, "0"));
                break;
              default:
                N.charAt(0) == "'" && (N = N.substr(1, N.length - 2).replace(/\\'/g, "'"));
                break;
            }
            C.append(N);
          }
          return C.toString();
        };
        var _modules = {}, _classMarker = "class", _interfaceMarker = "interface";
        function createType(r, u, d) {
          if (Array.isArray(u)) {
            var v = u[0];
            if (u.length >= 2) {
              var w = u[2];
              if (w) {
                var C = function() {
                };
                C.prototype = w.prototype, v.prototype = new C(), v.prototype.constructor = v;
              }
              u[1] && extend(v.prototype, u[1]), v.$base = w || Object, v.$interfaces = u.slice(3), v.$type = _classMarker;
            } else
              v.$type = _interfaceMarker;
            return v.$name = r, d[r] = v;
          }
          return u;
        }
        function isClass(r) {
          return r.$type == _classMarker;
        }
        function isInterface(r) {
          return r.$type == _interfaceMarker;
        }
        function typeOf(r) {
          var u;
          try {
            u = r.constructor;
          } catch {
          }
          return u || Object;
        }
        function type(r) {
          var u = r.indexOf("."), d = u > 0 ? _modules[r.substr(0, u)] : commonjsGlobal, v = u > 0 ? r.substr(u + 1) : r;
          return d ? d[v] : null;
        }
        var _typeNames = [
          Number,
          "Number",
          String,
          "String",
          Boolean,
          "Boolean",
          Array,
          "Array",
          Date,
          "Date",
          RegExp,
          "RegExp",
          Function,
          "Function"
        ];
        function typeName(r) {
          if (r instanceof Function || (r = r.constructor), r.$name)
            return r.$name;
          if (r.name)
            return r.name;
          for (var u = 0, d = _typeNames.length; u < d; u += 2)
            if (r == _typeNames[u])
              return _typeNames[u + 1];
          return "Object";
        }
        function canAssign(r, u) {
          if (r == Object || r == u)
            return !0;
          if (r.$type == _classMarker)
            for (var d = u.$base; d; ) {
              if (r == d)
                return !0;
              d = d.$base;
            }
          else if (r.$type == _interfaceMarker)
            for (var d = u; d; ) {
              var v = d.$interfaces;
              if (v && v.indexOf(r) >= 0)
                return !0;
              d = d.$base;
            }
          return !1;
        }
        function instanceOf(r, u) {
          if (!isValue(u))
            return !1;
          if (r == Object || u instanceof r)
            return !0;
          var d = typeOf(u);
          return canAssign(r, d);
        }
        function canCast(r, u) {
          return instanceOf(u, r);
        }
        function safeCast(r, u) {
          return instanceOf(u, r) ? r : null;
        }
        function ss_module(r, u, d) {
          var v = _modules[r] = { $name: r };
          if (u)
            for (var w in u)
              createType(w, u[w], v);
          var C = {};
          if (d)
            for (var w in d)
              C[w] = createType(w, d[w], v);
          return C;
        }
        return extend(ss_module("ss", null, {
          IDisposable: [IDisposable],
          IEnumerable: [IEnumerable],
          IEnumerator: [IEnumerator],
          IObserver: [IObserver],
          IApplication: [IApplication],
          IContainer: [IContainer],
          IObjectFactory: [IObjectFactory],
          IEventManager: [IEventManager],
          IInitializable: [IInitializable],
          EventArgs: [EventArgs, {}],
          CancelEventArgs: [CancelEventArgs, {}, EventArgs],
          StringBuilder: [StringBuilder, StringBuilder$],
          Stack: [Stack, Stack$],
          Queue: [Queue, Queue$],
          Observable: [Observable, Observable$],
          ObservableCollection: [ObservableCollection, ObservableCollection$, null, IEnumerable],
          Task: [Task, Task$]
        }), {
          version: "0.8",
          isValue,
          value,
          extend,
          keys,
          keyCount,
          keyExists,
          clearKeys,
          enumerate,
          array: toArray,
          remove: removeItem,
          boolean: parseBoolean,
          regexp: parseRegExp,
          number: parseNumber,
          date: parseDate,
          truncate,
          now,
          today,
          compareDates,
          error,
          string,
          emptyString,
          whitespace,
          format,
          compareStrings,
          startsWith,
          endsWith,
          padLeft,
          padRight,
          trim,
          trimStart,
          trimEnd,
          insertString,
          removeString,
          replaceString,
          bind,
          bindAdd,
          bindSub,
          bindExport,
          deferred,
          module: ss_module,
          modules: _modules,
          isClass,
          isInterface,
          typeOf,
          type,
          typeName,
          canCast,
          safeCast,
          canAssign,
          instanceOf,
          culture: {
            neutral: neutralCulture,
            current: currentCulture
          },
          fail
        });
      }
      var ss = _ss(), _exports_object = null;
      function define(r, u, d) {
        _exports_object = d(ss), _exports_object.ss = ss, _exports_object.Enums._wwtlib = _exports_object;
      }
      return define("wwtlib", ["ss"], function(r) {
        var u = {
          SUNDAY: 0,
          MONDAY: 1,
          TUESDAY: 2,
          WEDNESDAY: 3,
          THURSDAY: 4,
          FRIDAY: 5,
          SATURDAY: 6
        }, d = {
          SUN: 0,
          MERCURY: 1,
          VENUS: 2,
          MARS: 3,
          JUPITER: 4,
          SATURN: 5,
          URANUS: 6,
          NEPTUNE: 7,
          PLUTO: 8
        }, v = {
          linear: 0,
          log: 1,
          power: 2,
          squareRoot: 3,
          histogramEqualization: 4
        }, w = {
          asIfAbsolute: 0,
          originRelative: 1
        }, C = {
          sun: 0,
          mercury: 1,
          venus: 2,
          mars: 3,
          jupiter: 4,
          saturn: 5,
          uranus: 6,
          neptune: 7,
          pluto: 8,
          moon: 9,
          io: 10,
          europa: 11,
          ganymede: 12,
          callisto: 13,
          ioShadow: 14,
          europaShadow: 15,
          ganymedeShadow: 16,
          callistoShadow: 17,
          sunEclipsed: 18,
          earth: 19,
          custom: 20,
          undefined: 65536
        }, L = {
          linear: 0,
          easeIn: 1,
          easeOut: 2,
          easeInOut: 3,
          exponential: 4,
          defaultV: 5
        }, E = {
          move: 0,
          line: 1,
          dash: 2,
          start: 3
        }, V = {
          slash: 0,
          backslash: 1,
          top: 2
        }, N = {
          explorer: 0,
          tour: 1,
          search: 2,
          constellation: 3,
          view: 4,
          goTo: 5,
          community: 6,
          context: 7,
          voTable: 8,
          imageStack: 9
        }, z = {
          interval: 0,
          conditionalGet: 1,
          viewChange: 2
        }, st = {
          earth: 0,
          planet: 1,
          sky: 2,
          panorama: 3
        }, et = {
          small: 0,
          big: 1
        }, ct = {
          none: 0,
          counterClockwise: 2,
          clockwise: 1
        }, Ct = {
          linear: 0,
          power: 1,
          log: 2,
          constant: 3,
          stellarMagnitude: 4
        }, At = {
          mercator: 0,
          equirectangular: 1,
          tangent: 2,
          tan: 2,
          toast: 3,
          spherical: 4,
          skyImage: 5,
          plotted: 6,
          healpix: 7
        }, qt = {
          earth: 0,
          planet: 1,
          sky: 2,
          panorama: 3,
          solarSystem: 4,
          sandbox: 5
        }, vt = {
          gamma: 0,
          xRay: 1,
          ultraviolet: 2,
          visible: 3,
          hydrogenAlpha: 4,
          IR: 4,
          microwave: 5,
          radio: 6,
          visibleNight: 6
        }, _t = {
          star: 1,
          supernova: 2,
          blackHole: 4,
          neutronStar: 8,
          doubleStar: 16,
          multipleStars: 32,
          asterism: 64,
          constellation: 128,
          openCluster: 256,
          globularCluster: 512,
          nebulousCluster: 1024,
          nebula: 2048,
          emissionNebula: 4096,
          planetaryNebula: 8192,
          reflectionNebula: 16384,
          darkNebula: 32768,
          giantMolecularCloud: 65536,
          supernovaRemnant: 131072,
          interstellarDust: 262144,
          quasar: 524288,
          galaxy: 1048576,
          spiralGalaxy: 2097152,
          irregularGalaxy: 4194304,
          ellipticalGalaxy: 8388608,
          knot: 16777216,
          plateDefect: 33554432,
          clusterOfGalaxies: 67108864,
          otherNGC: 134217728,
          unidentified: 268435456,
          solarSystem: 536870912,
          unfiltered: 1073741823,
          stellar: 63,
          stellarGroupings: 2032,
          nebulae: 523264,
          galactic: 133693440,
          other: 436207616
        }, Et = {
          byteT: 0,
          int16T: 1,
          int32T: 2,
          floatT: 3,
          doubleT: 4,
          none: 5
        }, ft = {
          meters: 1,
          feet: 2,
          inches: 3,
          miles: 4,
          kilometers: 5,
          astronomicalUnits: 6,
          lightYears: 7,
          parsecs: 8,
          megaParsecs: 9,
          custom: 10
        }, wt = {
          fadeIn: 1,
          fadeOut: 2,
          both: 3,
          none: 4
        }, Zt = {
          sky: 0,
          ecliptic: 1,
          galactic: 2,
          sun: 3,
          mercury: 4,
          venus: 5,
          earth: 6,
          mars: 7,
          jupiter: 8,
          saturn: 9,
          uranus: 10,
          neptune: 11,
          pluto: 12,
          moon: 13,
          io: 14,
          europa: 15,
          ganymede: 16,
          callisto: 17,
          custom: 18,
          identity: 19,
          sandbox: 20
        }, Ot = {
          fixedSherical: 0,
          orbital: 1,
          trajectory: 2,
          synodic: 3
        }, bt = {
          spherical: 0,
          rectangular: 1,
          orbital: 2
        }, Xt = {
          depth: 0,
          altitude: 1,
          distance: 2,
          seaLevel: 3,
          terrain: 4
        }, ie = {
          same_For_All: 0
        }, Yt = {
          same_For_All: 0,
          group_by_Values: 2,
          per_Column_Literal: 3
        }, ae = {
          gaussian: 0,
          point: 1,
          circle: 2,
          square: 3,
          pushPin: 4,
          custom: 5
        }, Re = {
          screen: 0,
          world: 1
        }, me = {
          hours: 0,
          degrees: 1
        }, Fi = {
          voBoolean: 1,
          voBit: 2,
          voUnsignedByte: 3,
          voShort: 4,
          voInt: 5,
          voLong: 6,
          voChar: 7,
          voUnicodeChar: 8,
          voFloat: 9,
          voDouble: 10,
          voFloatComplex: 11,
          voDoubleComplex: 12,
          voUndefined: 13
        }, ei = {
          center: 0,
          left: 1
        }, si = {
          empty: 0,
          equatorialGrid: 1,
          equatorialGridText: 2,
          galacticGrid: 3,
          galacticGridText: 4,
          eclipticGrid: 5,
          eclipticGridText: 6,
          eclipticOverview: 7,
          eclipticOverviewText: 8,
          precessionChart: 9,
          altAzGrid: 10,
          altAzGridText: 11,
          constellationFigures: 12,
          constellationBoundaries: 13,
          constellationFocusedOnly: 14,
          constellationNames: 15,
          constellationPictures: 16,
          fadeToBlack: 17,
          fadeToLogo: 18,
          fadeToGradient: 19,
          screenBroadcast: 20,
          fadeRemoteOnly: 21,
          skyGrids: 22,
          constellations: 23,
          solarSystemStars: 24,
          solarSystemMilkyWay: 25,
          solarSystemCosmos: 26,
          solarSystemOrbits: 27,
          solarSystemPlanets: 28,
          solarSystemAsteroids: 29,
          solarSystemLighting: 30,
          solarSystemMinorOrbits: 31,
          showEarthCloudLayer: 32,
          showElevationModel: 33,
          showAtmosphere: 34,
          multiResSolarSystemBodies: 35,
          auroraBorialis: 36,
          earthCutAway: 37,
          showSolarSystem: 38,
          clouds8k: 39,
          filedOfView: 40,
          showISSModel: 41,
          solarSystemCMB: 42,
          mpcZone1: 43,
          mpcZone2: 44,
          mpcZone3: 45,
          mpcZone4: 46,
          mpcZone5: 47,
          mpcZone6: 48,
          mpcZone7: 49,
          orbitFilters: 50
        }, $e = {
          sky: 0,
          screen: 1
        }, Ai = {
          music: 0,
          voice: 1
        }, ki = {
          circle: 0,
          rectagle: 1,
          star: 2,
          donut: 3,
          arrow: 4,
          line: 5,
          openRectagle: 6
        }, Hr = {
          loop: 0,
          upDown: 1,
          down: 2,
          upDownOnce: 3,
          once: 4,
          begin: 5,
          end: 6
        }, gr = {
          topLeft: 0,
          top: 1,
          topRight: 2,
          right: 3,
          bottomRight: 4,
          bottom: 5,
          bottomLeft: 6,
          left: 7,
          rotate: 8,
          move: 9,
          center: 10,
          none: 11
        }, Fn = {
          none: 0,
          tight: 1,
          small: 2,
          medium: 3,
          large: 4
        }, Ca = {
          beginner: 0,
          intermediate: 1,
          advanced: 2,
          educator: 3,
          professional: 4
        }, la = {
          slew: 0,
          crossFade: 1,
          crossCut: 2,
          fadeOutIn: 3,
          fadeIn: 4,
          fadeOut: 5
        }, Rr = {
          modifiers: -65536,
          none: 0,
          lButton: 1,
          rButton: 2,
          cancel: 3,
          mButton: 4,
          xButton1: 5,
          xButton2: 6,
          back: 8,
          tab: 9,
          lineFeed: 10,
          clearKey: 12,
          returnKey: 13,
          enter: 13,
          shiftKey: 16,
          controlKey: 17,
          menu: 18,
          pause: 19,
          capital: 20,
          capsLock: 20,
          kanaMode: 21,
          hanguelMode: 21,
          hangulMode: 21,
          junjaMode: 23,
          finalMode: 24,
          hanjaMode: 25,
          kanjiMode: 25,
          escape: 27,
          imeConvert: 28,
          imeNonconvert: 29,
          imeAccept: 30,
          imeAceept: 30,
          imeModeChange: 31,
          space: 32,
          prior: 33,
          pageUp: 33,
          next: 34,
          pageDown: 34,
          end: 35,
          home: 36,
          left: 37,
          up: 38,
          right: 39,
          down: 40,
          select: 41,
          print: 42,
          execute: 43,
          snapshot: 44,
          printScreen: 44,
          insertKey: 45,
          deleteKey: 46,
          help: 47,
          d0: 48,
          d1: 49,
          d2: 50,
          d3: 51,
          d4: 52,
          d5: 53,
          d6: 54,
          d7: 55,
          d8: 56,
          d9: 57,
          a: 65,
          b: 66,
          c: 67,
          d: 68,
          e: 69,
          f: 70,
          g: 71,
          h: 72,
          i: 73,
          j: 74,
          k: 75,
          l: 76,
          m: 77,
          n: 78,
          o: 79,
          p: 80,
          q: 81,
          r: 82,
          s: 83,
          t: 84,
          u: 85,
          v: 86,
          w: 87,
          x: 88,
          y: 89,
          z: 90,
          lWin: 91,
          rWin: 92,
          apps: 93,
          sleep: 95,
          numPad0: 96,
          numPad1: 97,
          numPad2: 98,
          numPad3: 99,
          numPad4: 100,
          numPad5: 101,
          numPad6: 102,
          numPad7: 103,
          numPad8: 104,
          numPad9: 105,
          multiply: 106,
          add: 107,
          separator: 108,
          subtract: 109,
          decimal: 110,
          divide: 111,
          f1: 112,
          f2: 113,
          f3: 114,
          f4: 115,
          f5: 116,
          f6: 117,
          f7: 118,
          f8: 119,
          f9: 120,
          f10: 121,
          f11: 122,
          f12: 123,
          f13: 124,
          f14: 125,
          f15: 126,
          f16: 127,
          f17: 128,
          f18: 129,
          f19: 130,
          f20: 131,
          f21: 132,
          f22: 133,
          f23: 134,
          f24: 135,
          numLock: 144,
          scroll: 145,
          lShiftKey: 160,
          rShiftKey: 161,
          lControlKey: 162,
          rControlKey: 163,
          lMenu: 164,
          rMenu: 165,
          browserBack: 166,
          browserForward: 167,
          browserRefresh: 168,
          browserStop: 169,
          browserSearch: 170,
          browserFavorites: 171,
          browserHome: 172,
          volumeMute: 173,
          volumeDown: 174,
          volumeUp: 175,
          mediaNextTrack: 176,
          mediaPreviousTrack: 177,
          mediaStop: 178,
          mediaPlayPause: 179,
          launchMail: 180,
          selectMedia: 181,
          launchApplication1: 182,
          launchApplication2: 183,
          oemSemicolon: 186,
          oem1: 186,
          oemplus: 187,
          oemcomma: 188,
          oemMinus: 189,
          oemPeriod: 190,
          oemQuestion: 191,
          oem2: 191,
          oemtilde: 192,
          oem3: 192,
          oemOpenBrackets: 219,
          oem4: 219,
          oemPipe: 220,
          oem5: 220,
          oemCloseBrackets: 221,
          oem6: 221,
          oemQuotes: 222,
          oem7: 222,
          oem8: 223,
          oemBackslash: 226,
          oem102: 226,
          processKey: 229,
          packet: 231,
          attn: 246,
          crsel: 247,
          exsel: 248,
          eraseEof: 249,
          play: 250,
          zoom: 251,
          noName: 252,
          pa1: 253,
          oemClear: 254,
          keyCode: 65535,
          shift: 65536,
          control: 131072,
          alt: 262144
        }, Mn = {
          OK: 1
        }, Bn = {
          indented: 1
        }, Or = {
          pending: 0,
          received: 1,
          error: 2
        };
        function xn() {
        }
        function $r() {
        }
        function rt() {
        }
        function ht() {
        }
        function It() {
        }
        function Bt() {
        }
        function Nt() {
        }
        function Jt() {
        }
        function le() {
        }
        function S() {
        }
        function te() {
        }
        te.earthVelocity = function(t) {
          for (var e = (t - 2451545) / 36525, n = 3.1761467 + 1021.3285546 * e, a = 1.7534703 + 628.3075849 * e, s = 6.2034809 + 334.0612431 * e, l = 0.5995465 + 52.9690965 * e, g = 0.8740168 + 21.3299095 * e, _ = 5.4812939 + 7.4781599 * e, m = 5.3118863 + 3.8133036 * e, b = 3.8103444 + 8399.6847337 * e, y = 5.1984667 + 7771.3771486 * e, M = 2.3555559 + 8328.6914289 * e, A = 1.6279052 + 8433.4661601 * e, R = new pe(), F = S.g_ACft.length, O = 0; O < F; O++) {
            var B = S.g_ACft[O].l2 * n + S.g_ACft[O].l3 * a + S.g_ACft[O].l4 * s + S.g_ACft[O].l5 * l + S.g_ACft[O].l6 * g + S.g_ACft[O].l7 * _ + S.g_ACft[O].l8 * m + S.g_ACft[O].ldash * b + S.g_ACft[O].d * y + S.g_ACft[O].mdash * M + S.g_ACft[O].f * A;
            R.x += (S.g_ACft[O].xsin + S.g_ACft[O].xsint * e) * Math.sin(B), R.x += (S.g_ACft[O].xcos + S.g_ACft[O].xcost * e) * Math.cos(B), R.y += (S.g_ACft[O].ysin + S.g_ACft[O].ysint * e) * Math.sin(B), R.y += (S.g_ACft[O].ycos + S.g_ACft[O].ycost * e) * Math.cos(B), R.z += (S.g_ACft[O].zsin + S.g_ACft[O].zsint * e) * Math.sin(B), R.z += (S.g_ACft[O].zcos + S.g_ACft[O].zcost * e) * Math.cos(B);
          }
          return R;
        }, te.eclipticAberration = function(t, e, n) {
          var a = new Le(), s = (n - 2451545) / 36525, l = s * s, g = 0.016708634 - 42037e-9 * s - 1267e-10 * l, _ = 102.93735 + 1.71946 * s + 46e-5 * l, m = 20.49552, b = fi.geometricEclipticLongitude(n);
          return _ = x.d2R(_), t = x.d2R(t), e = x.d2R(e), b = x.d2R(b), a.x = (-m * Math.cos(b - t) + g * m * Math.cos(_ - t)) / Math.cos(e) / 3600, a.y = -m * Math.sin(e) * (Math.sin(b - t) - g * Math.sin(_ - t)) / 3600, a;
        }, te.equatorialAberration = function(t, e, n) {
          t = x.d2R(t * 15), e = x.d2R(e);
          var a = Math.cos(t), s = Math.sin(t), l = Math.cos(e), g = Math.sin(e), _ = te.earthVelocity(n), m = new Le();
          return m.x = x.r2H((_.y * a - _.x * s) / (17314463350 * l)), m.y = x.r2D(-(((_.x * a + _.y * s) * g - _.z * l) / 17314463350)), m;
        };
        var Vt = {};
        function Kt(t, e, n, a, s, l, g, _, m, b, y, M, A, R, F, O, B, H, K, J, it, ot, lt) {
          this.l2 = 0, this.l3 = 0, this.l4 = 0, this.l5 = 0, this.l6 = 0, this.l7 = 0, this.l8 = 0, this.ldash = 0, this.d = 0, this.mdash = 0, this.f = 0, this.xsin = 0, this.xsint = 0, this.xcos = 0, this.xcost = 0, this.ysin = 0, this.ysint = 0, this.ycos = 0, this.ycost = 0, this.zsin = 0, this.zsint = 0, this.zcos = 0, this.zcost = 0, this.l2 = t, this.l3 = e, this.l4 = n, this.l5 = a, this.l6 = s, this.l7 = l, this.l8 = g, this.ldash = _, this.d = m, this.mdash = b, this.f = y, this.xsin = M, this.xsint = A, this.xcos = R, this.xcost = F, this.ysin = O, this.ysint = B, this.ycos = H, this.ycost = K, this.zsin = J, this.zsint = it, this.zcos = ot, this.zcost = lt;
        }
        var be = {};
        function Te() {
        }
        Te.separation = function(t, e, n, a) {
          e = x.d2R(e), a = x.d2R(a), t = x.h2R(t), n = x.h2R(n);
          var s = Math.cos(e) * Math.sin(a) - Math.sin(e) * Math.cos(a) * Math.cos(n - t), l = Math.cos(a) * Math.sin(n - t), g = Math.sin(e) * Math.sin(a) + Math.cos(e) * Math.cos(a) * Math.cos(n - t), _ = Math.atan2(Math.sqrt(s * s + l * l), g);
          return _ = x.r2D(_), _ < 0 && (_ += 180), _;
        }, Te.positionAngle = function(t, e, n, a) {
          var s, l, g, _;
          l = x.d2R(e), _ = x.d2R(a), s = x.h2R(t), g = x.h2R(n);
          var m = s - g, b = Math.cos(_) * Math.tan(l) - Math.sin(_) * Math.cos(m), y = Math.sin(m), M = Math.atan2(y, b);
          return M = x.r2D(M), M;
        }, Te.distanceFromGreatArc = function(t, e, n, a, s, l) {
          e = x.d2R(e), a = x.d2R(a), l = x.d2R(l), t = x.h2R(t), n = x.h2R(n), s = x.h2R(s);
          var g = Math.cos(e) * Math.cos(t), _ = Math.cos(a) * Math.cos(n), m = Math.cos(e) * Math.sin(t), b = Math.cos(a) * Math.sin(n), y = Math.sin(e), M = Math.sin(a), A = m * M - y * b, R = y * _ - g * M, F = g * b - m * _, O = Math.tan(s), B = Math.tan(l) / Math.cos(s), H = Math.asin((A + R * O + F * B) / (Math.sqrt(A * A + R * R + F * F) * Math.sqrt(1 + O * O + B * B)));
          return H = x.r2D(H), H < 0 && (H = Math.abs(H)), H;
        };
        var Ue = {};
        function Le() {
          this.x = 0, this.y = 0, this.x = 0, this.y = 0;
        }
        Le.create = function(t, e) {
          var n = new Le();
          return n.x = t, n.y = e, n;
        };
        var Ci = {};
        function pe() {
          this.x = 0, this.y = 0, this.z = 0, this.x = 0, this.y = 0, this.z = 0;
        }
        pe.create = function(t, e, n) {
          var a = new pe();
          return a.x = t, a.y = e, a.z = n, a;
        };
        var Ri = {};
        function x() {
        }
        x.eq2Ec = function(t, e, n) {
          t = x.h2R(t), e = x.d2R(e), n = x.d2R(n);
          var a = new Le();
          return a.x = x.r2D(Math.atan2(Math.sin(t) * Math.cos(n) + Math.tan(e) * Math.sin(n), Math.cos(t))), a.x < 0 && (a.x += 360), a.y = x.r2D(Math.asin(Math.sin(e) * Math.cos(n) - Math.cos(e) * Math.sin(n) * Math.sin(t))), a;
        }, x.ec2Eq = function(t, e, n) {
          t = x.d2R(t), e = x.d2R(e), n = x.d2R(n);
          var a = new Le();
          return a.x = x.r2H(Math.atan2(Math.sin(t) * Math.cos(n) - Math.tan(e) * Math.sin(n), Math.cos(t))), a.x < 0 && (a.x += 24), a.y = x.r2D(Math.asin(Math.sin(e) * Math.cos(n) + Math.cos(e) * Math.sin(n) * Math.sin(t))), a;
        }, x.eq2H = function(t, e, n) {
          t = x.h2R(t), e = x.d2R(e), n = x.d2R(n);
          var a = new Le();
          return a.x = x.r2D(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(n) - Math.tan(e) * Math.cos(n))), a.x < 0 && (a.x += 360), a.y = x.r2D(Math.asin(Math.sin(n) * Math.sin(e) + Math.cos(n) * Math.cos(e) * Math.cos(t))), a;
        }, x.h2Eq = function(t, e, n) {
          t = x.d2R(t), e = x.d2R(e), n = x.d2R(n);
          var a = new Le();
          return a.x = x.r2H(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(n) + Math.tan(e) * Math.cos(n))), a.x < 0 && (a.x += 24), a.y = x.r2D(Math.asin(Math.sin(n) * Math.sin(e) - Math.cos(n) * Math.cos(e) * Math.cos(t))), a;
        }, x.eq2G = function(t, e) {
          t = 192.25 - x.h2D(t), t = x.d2R(t), e = x.d2R(e);
          var n = new Le();
          return n.x = x.r2D(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(x.d2R(27.4)) - Math.tan(e) * Math.cos(x.d2R(27.4)))), n.x = 303 - n.x, n.x >= 360 && (n.x -= 360), n.y = x.r2D(Math.asin(Math.sin(e) * Math.sin(x.d2R(27.4)) + Math.cos(e) * Math.cos(x.d2R(27.4)) * Math.cos(t))), n;
        }, x.g2Eq = function(t, e) {
          t -= 123, t = x.d2R(t), e = x.d2R(e);
          var n = new Le();
          return n.x = x.r2D(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(x.d2R(27.4)) - Math.tan(e) * Math.cos(x.d2R(27.4)))), n.x += 12.25, n.x < 0 && (n.x += 360), n.x = x.d2H(n.x), n.y = x.r2D(Math.asin(Math.sin(e) * Math.sin(x.d2R(27.4)) + Math.cos(e) * Math.cos(x.d2R(27.4)) * Math.cos(t))), n;
        }, x.d2R = function(t) {
          return t * 0.0174532925199433;
        }, x.r2D = function(t) {
          return t * 57.2957795130823;
        }, x.r2H = function(t) {
          return t * 3.81971863420549;
        }, x.h2R = function(t) {
          return t * 0.261799387799149;
        }, x.h2D = function(t) {
          return t * 15;
        }, x.d2H = function(t) {
          return t / 15;
        }, x.PI = function() {
          return 3.14159265358979;
        }, x.m360 = function(t) {
          return t - Math.floor(t / 360) * 360;
        }, x.m24 = function(t) {
          return t - Math.floor(t / 24) * 24;
        }, x.dmS2D = function(t, e, n) {
          return x.dmS2Dp(t, e, n, !0);
        }, x.dmS2Dp = function(t, e, n, a) {
          return a || (console.assert(t >= 0), console.assert(e >= 0), console.assert(n >= 0)), a ? t + e / 60 + n / 3600 : -t - e / 60 - n / 3600;
        };
        var Vr = {};
        function dn() {
          this.year = 0, this.month = 0, this.day = 0, this.year = 0, this.month = 0, this.day = 0;
        }
        dn.create = function(t, e, n) {
          var a = new dn();
          return a.year = t, a.month = e, a.day = n, a;
        };
        var Jr = {};
        function ui() {
          this.m_dblJulian = 0, this.m_bGregorianCalendar = !1, this.m_dblJulian = 0, this.m_bGregorianCalendar = !1;
        }
        ui.create = function(t, e, n, a) {
          var s = new ui();
          return s.set(t, e, n, 0, 0, 0, a), s;
        }, ui.createHMS = function(t, e, n, a, s, l, g) {
          var _ = new ui();
          return _.set(t, e, n, a, s, l, g), _;
        }, ui.createJD = function(t, e) {
          var n = new ui();
          return n.setJD(t, e), n;
        }, ui.dateToJD = function(t, e, n, a) {
          var s = t, l = e;
          l < 3 && (s = s - 1, l = l + 12);
          var g = 0, _ = 0;
          return a && (g = r.truncate(s / 100), _ = 2 - g + r.truncate(g / 4)), r.truncate(365.25 * (s + 4716)) + r.truncate(30.6001 * (l + 1)) + n + _ - 1524.5;
        }, ui.isLeap = function(t, e) {
          return e ? t % 100 ? !(t % 4) : !(t % 400) : !(t % 4);
        }, ui.afterPapalReform = function(t, e, n) {
          return t > 1582 || t === 1582 && e > 10 || t === 1582 && e === 10 && n >= 15;
        }, ui.afterPapalReformJD = function(t) {
          return t >= 22991605e-1;
        }, ui.dayOfYearJD = function(t, e, n) {
          return t - ui.dateToJD(e, 1, 1, n) + 1;
        }, ui.daysInMonthForMonth = function(t, e) {
          console.assert(t >= 1 && t <= 12);
          var n = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0];
          return e && n[1]++, n[t - 1];
        }, ui.INT = function(t) {
          return t >= 0 ? r.truncate(t) : r.truncate(t - 1);
        };
        var mr = {
          julian: function() {
            return this.m_dblJulian;
          },
          day: function() {
            var t = this.get();
            return r.truncate(t[2]);
          },
          month: function() {
            var t = this.get();
            return r.truncate(t[1]);
          },
          year: function() {
            var t = this.get();
            return r.truncate(t[0]);
          },
          hour: function() {
            var t = this.get();
            return r.truncate(t[3]);
          },
          minute: function() {
            var t = this.get();
            return r.truncate(t[4]);
          },
          second: function() {
            var t = this.get();
            return r.truncate(t[5]);
          },
          set: function(t, e, n, a, s, l, g) {
            var _ = n + a / 24 + s / 1440 + l / 86400;
            this.setJD(ui.dateToJD(t, e, _, g), g);
          },
          setJD: function(t, e) {
            this.m_dblJulian = t, this.setInGregorianCalendar(e);
          },
          setInGregorianCalendar: function(t) {
            var e = this.m_dblJulian >= 22991605e-1;
            this.m_bGregorianCalendar = t && e;
          },
          get: function() {
            var t, e, n, a, s, l, g = this.m_dblJulian + 0.5, _ = Math.floor(g), m = g - _, b = r.truncate(_), y;
            if (this.m_bGregorianCalendar) {
              var M = r.truncate((b - 186721625e-2) / 36524.25);
              y = b + 1 + M - r.truncate(M / 4);
            } else
              y = b;
            var A = y + 1524, R = r.truncate((A - 122.1) / 365.25), F = r.truncate(365.25 * R), O = r.truncate((A - F) / 30.6001), B = A - F - r.truncate(30.6001 * O) + m;
            return n = r.truncate(B), O < 14 ? e = O - 1 : e = O - 13, e > 2 ? t = R - 4716 : t = R - 4715, _ = Math.floor(B), m = B - _, a = r.truncate(m * 24), s = r.truncate((m - a / 24) * 1440), l = (m - a / 24 - s / 1440) * 86400, [t, e, n, a, s, l];
          },
          dayOfWeek: function() {
            return r.truncate(this.m_dblJulian + 1.5) % 7;
          },
          dayOfYear: function() {
            var t = r.truncate(this.get()[0]);
            return ui.dayOfYearJD(this.m_dblJulian, t, ui.afterPapalReform(t, 1, 1));
          },
          daysInMonth: function() {
            var t = this.get(), e = r.truncate(t[0]), n = r.truncate(t[1]);
            return ui.daysInMonthForMonth(n, ui.isLeap(e, this.m_bGregorianCalendar));
          },
          daysInYear: function() {
            var t = this.get(), e = r.truncate(t[0]);
            return ui.isLeap(e, this.m_bGregorianCalendar) ? 366 : 365;
          },
          leap: function() {
            return ui.isLeap(this.year(), this.m_bGregorianCalendar);
          },
          inGregorianCalendar: function() {
            return this.m_bGregorianCalendar;
          },
          fractionalYear: function() {
            var t = this.get(), e = r.truncate(t[0]);
            r.truncate(t[1]), r.truncate(t[2]), r.truncate(t[3]), r.truncate(t[4]), t[5];
            var n;
            return ui.isLeap(e, this.m_bGregorianCalendar) ? n = 366 : n = 365, e + (this.m_dblJulian - ui.dateToJD(e, 1, 1, ui.afterPapalReform(e, 1, 1))) / n;
          }
        };
        function pr() {
        }
        pr.deltaT = function(t) {
          var e = ui.createJD(t, ui.afterPapalReformJD(t)), n = e.fractionalYear(), a = (n - 2e3) / 100, s;
          if (n < 948)
            s = 2177 + 497 * a + 44.1 * a * a;
          else if (n < 1620)
            s = 102 + 102 * a + 25.3 * a * a;
          else if (n < 1998) {
            var l = r.truncate((n - 1620) / 2);
            console.assert(l < S.deltaTTable.length), n = n / 2 - l - 810, s = S.deltaTTable[l] + (S.deltaTTable[l + 1] - S.deltaTTable[l]) * n;
          } else if (n <= 2e3) {
            var g = S.deltaTTable.length;
            s = S.deltaTTable[g - 1];
          } else
            n < 2100 ? s = 102 + 102 * a + 25.3 * a * a + 0.37 * (n - 2100) : s = 102 + 102 * a + 25.3 * a * a;
          return s;
        };
        var zn = {};
        function ii() {
        }
        ii.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_L0EarthCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_L0EarthCoefficients[m].a * Math.cos(S.g_L0EarthCoefficients[m].b + S.g_L0EarthCoefficients[m].c * e);
          var b = S.g_L1EarthCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_L1EarthCoefficients[m].a * Math.cos(S.g_L1EarthCoefficients[m].b + S.g_L1EarthCoefficients[m].c * e);
          var M = S.g_L2EarthCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_L2EarthCoefficients[m].a * Math.cos(S.g_L2EarthCoefficients[m].b + S.g_L2EarthCoefficients[m].c * e);
          var R = S.g_L3EarthCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_L3EarthCoefficients[m].a * Math.cos(S.g_L3EarthCoefficients[m].b + S.g_L3EarthCoefficients[m].c * e);
          var O = S.g_L4EarthCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_L4EarthCoefficients[m].a * Math.cos(S.g_L4EarthCoefficients[m].b + S.g_L4EarthCoefficients[m].c * e);
          var H = S.g_L5EarthCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_L5EarthCoefficients[m].a * Math.cos(S.g_L5EarthCoefficients[m].b + S.g_L5EarthCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.m360(x.r2D(J)), J;
        }, ii.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0EarthCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0EarthCoefficients[_].a * Math.cos(S.g_B0EarthCoefficients[_].b + S.g_B0EarthCoefficients[_].c * e);
          var m = S.g_B1EarthCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1EarthCoefficients[_].a * Math.cos(S.g_B1EarthCoefficients[_].b + S.g_B1EarthCoefficients[_].c * e);
          var y = S.g_B2EarthCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2EarthCoefficients[_].a * Math.cos(S.g_B2EarthCoefficients[_].b + S.g_B2EarthCoefficients[_].c * e);
          var A = S.g_B3EarthCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3EarthCoefficients[_].a * Math.cos(S.g_B3EarthCoefficients[_].b + S.g_B3EarthCoefficients[_].c * e);
          var F = S.g_B4EarthCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4EarthCoefficients[_].a * Math.cos(S.g_B4EarthCoefficients[_].b + S.g_B4EarthCoefficients[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        }, ii.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_R0EarthCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_R0EarthCoefficients[_].a * Math.cos(S.g_R0EarthCoefficients[_].b + S.g_R0EarthCoefficients[_].c * e);
          var m = S.g_R1EarthCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_R1EarthCoefficients[_].a * Math.cos(S.g_R1EarthCoefficients[_].b + S.g_R1EarthCoefficients[_].c * e);
          var y = S.g_R2EarthCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_R2EarthCoefficients[_].a * Math.cos(S.g_R2EarthCoefficients[_].b + S.g_R2EarthCoefficients[_].c * e);
          var A = S.g_R3EarthCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_R3EarthCoefficients[_].a * Math.cos(S.g_R3EarthCoefficients[_].b + S.g_R3EarthCoefficients[_].c * e);
          var F = S.g_R4EarthCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_R4EarthCoefficients[_].a * Math.cos(S.g_R4EarthCoefficients[_].b + S.g_R4EarthCoefficients[_].c * e);
          return (g + b * e + M * n + R * a + O * s) / 1e8;
        }, ii.sunMeanAnomaly = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(357.5291092 + 35999.0502909 * e - 1536e-7 * n + a / 2449e4);
        }, ii.eccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e;
          return 1 - 2516e-6 * e - 74e-7 * n;
        }, ii.eclipticLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_L0EarthCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_L0EarthCoefficients[_].a * Math.cos(S.g_L0EarthCoefficients[_].b + S.g_L0EarthCoefficients[_].c * e);
          var m = S.g_L1EarthCoefficientsJ2000.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_L1EarthCoefficientsJ2000[_].a * Math.cos(S.g_L1EarthCoefficientsJ2000[_].b + S.g_L1EarthCoefficientsJ2000[_].c * e);
          var y = S.g_L2EarthCoefficientsJ2000.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_L2EarthCoefficientsJ2000[_].a * Math.cos(S.g_L2EarthCoefficientsJ2000[_].b + S.g_L2EarthCoefficientsJ2000[_].c * e);
          var A = S.g_L3EarthCoefficientsJ2000.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_L3EarthCoefficientsJ2000[_].a * Math.cos(S.g_L3EarthCoefficientsJ2000[_].b + S.g_L3EarthCoefficientsJ2000[_].c * e);
          var F = S.g_L4EarthCoefficientsJ2000.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_L4EarthCoefficientsJ2000[_].a * Math.cos(S.g_L4EarthCoefficientsJ2000[_].b + S.g_L4EarthCoefficientsJ2000[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.m360(x.r2D(B)), B;
        }, ii.eclipticLatitudeJ2000 = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0EarthCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0EarthCoefficients[_].a * Math.cos(S.g_B0EarthCoefficients[_].b + S.g_B0EarthCoefficients[_].c * e);
          var m = S.g_B1EarthCoefficientsJ2000.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1EarthCoefficientsJ2000[_].a * Math.cos(S.g_B1EarthCoefficientsJ2000[_].b + S.g_B1EarthCoefficientsJ2000[_].c * e);
          var y = S.g_B2EarthCoefficientsJ2000.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2EarthCoefficientsJ2000[_].a * Math.cos(S.g_B2EarthCoefficientsJ2000[_].b + S.g_B2EarthCoefficientsJ2000[_].c * e);
          var A = S.g_B3EarthCoefficientsJ2000.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3EarthCoefficientsJ2000[_].a * Math.cos(S.g_B3EarthCoefficientsJ2000[_].b + S.g_B3EarthCoefficientsJ2000[_].c * e);
          var F = S.g_B4EarthCoefficientsJ2000.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4EarthCoefficientsJ2000[_].a * Math.cos(S.g_B4EarthCoefficientsJ2000[_].b + S.g_B4EarthCoefficientsJ2000[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        };
        var Ga = {};
        function o(t, e, n) {
          this.a = 0, this.b = 0, this.c = 0, this.a = t, this.b = e, this.c = n;
        }
        var ua = {};
        function On() {
          this.i = 0, this.w = 0, this.omega = 0, this.i = 0, this.w = 0, this.omega = 0;
        }
        var qa = {};
        function Ta() {
        }
        Ta.calculate = function(t, e, n, a, s) {
          var l = (a - 2451545) / 36525, g = l * l, _ = (s - a) / 36525, m = _ * _, b = m * _, y = x.d2R(t), M = x.d2R(n), A = (47.0029 - 0.06603 * l + 598e-6 * g) * _ + (-0.03302 + 598e-6 * l) * m + 6e-5 * b;
          A = x.d2R(x.dmS2D(0, 0, A));
          var R = 174.876384 * 3600 + 3289.4789 * l + 0.60622 * g - (869.8089 + 0.50491 * l) * _ + 0.03536 * m;
          R = x.d2R(x.dmS2D(0, 0, R));
          var F = (5029.0966 + 2.22226 * l - 42e-6 * g) * _ + (1.11113 - 42e-6 * l) * m - 6e-6 * b;
          F = x.d2R(x.dmS2D(0, 0, F));
          var O = Math.sin(y), B = Math.cos(y), H = Math.sin(M - R), K = Math.cos(M - R), J = Math.sin(A), it = Math.cos(A), ot = O * H, lt = -J * B + it * O * K, gt = Math.asin(Math.sqrt(ot * ot + lt * lt)), ut = new On();
          ut.i = x.r2D(gt);
          var St = B * it + O * J * K;
          St < 0 && (ut.i = 180 - ut.i);
          var mt = R + F;
          ut.omega = x.m360(x.r2D(Math.atan2(ot, lt) + mt)), ot = -J * H, lt = O * it - B * J * K;
          var Dt = x.r2D(Math.atan2(ot, lt));
          return ut.w = x.m360(e + Dt), ut;
        }, Ta.fK4B1950ToFK5J2000 = function(t, e, n) {
          var a = x.d2R(5.19856209), s = x.d2R(651966e-8), l = x.d2R(t), g = x.d2R(n), _ = Math.sin(l), m = Math.cos(l), b = Math.cos(s), y = Math.sin(s), M = a + g, A = Math.cos(M), R = Math.sin(M), F = y * R, O = _ * b + m * y * A, B = new On();
          B.i = x.r2D(Math.asin(Math.sqrt(F * F + O * O)));
          var H = m * b - _ * y * A;
          return H < 0 && (B.i = 180 - B.i), B.w = x.m360(e + x.r2D(Math.atan2(F, O))), B.omega = x.m360(x.r2D(Math.atan2(_ * R, m * y + _ * b * A)) - 4.50001688), B;
        };
        var Xa = {};
        function re() {
        }
        re.mercuryMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(252.250906 + 149474.0722491 * e + 3035e-7 * n + 18e-9 * a);
        }, re.mercurySemimajorAxis = function(t) {
          return 0.38709831;
        }, re.mercuryEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.20563175 + 20407e-9 * e - 283e-10 * n - 18e-11 * a;
        }, re.mercuryInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(7.004986 + 18215e-7 * e - 181e-7 * n + 56e-9 * a);
        }, re.mercuryLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(48.330893 + 1.1861883 * e + 17542e-8 * n + 215e-9 * a);
        }, re.mercuryLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(77.456119 + 1.5564776 * e + 29544e-8 * n + 9e-9 * a);
        }, re.venusMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(181.979801 + 58519.2130302 * e + 31014e-8 * n + 15e-9 * a);
        }, re.venusSemimajorAxis = function(t) {
          return 0.72332982;
        }, re.venusEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 677192e-8 - 47765e-9 * e + 981e-10 * n + 46e-11 * a;
        }, re.venusInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(3.394662 + 10037e-7 * e - 88e-8 * n - 7e-9 * a);
        }, re.venusLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(76.67992 + 0.9011206 * e + 40618e-8 * n - 93e-9 * a);
        }, re.venusLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(131.563703 + 1.4022288 * e - 107618e-8 * n - 5678e-9 * a);
        }, re.earthMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(100.466457 + 36000.7698278 * e + 30322e-8 * n + 2e-8 * a);
        }, re.earthSemimajorAxis = function(t) {
          return 1.000001018;
        }, re.earthEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.01670863 - 42037e-9 * e - 1267e-10 * n + 14e-11 * a;
        }, re.earthInclination = function(t) {
          return 0;
        }, re.earthLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(102.937348 + 1.17195366 * e + 45688e-8 * n - 18e-9 * a);
        }, re.marsMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(355.433 + 19141.6964471 * e + 31052e-8 * n + 16e-9 * a);
        }, re.marsSemimajorAxis = function(t) {
          return 1.523679342;
        }, re.marsEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.09340065 + 90484e-9 * e - 806e-10 * n - 25e-11 * a;
        }, re.marsInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(1.849726 - 6011e-7 * e + 1276e-8 * n - 7e-9 * a);
        }, re.marsLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(49.588093 + 0.7720959 * e + 1557e-8 * n + 2267e-9 * a);
        }, re.marsLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(336.060234 + 1.8410449 * e + 13477e-8 * n + 536e-9 * a);
        }, re.jupiterMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(34.351519 + 3036.3027748 * e + 2233e-7 * n + 37e-9 * a);
        }, re.jupiterSemimajorAxis = function(t) {
          var e = (t - 2451545) / 36525;
          return 5.202603209 + 1913e-10 * e;
        }, re.jupiterEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.04849793 + 163225e-9 * e - 4714e-10 * n - 201e-11 * a;
        }, re.jupiterInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(1.303267 - 54965e-7 * e + 466e-8 * n - 2e-9 * a);
        }, re.jupiterLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(100.464407 + 1.0209774 * e + 40315e-8 * n + 404e-9 * a);
        }, re.jupiterLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(14.331207 + 1.6126352 * e + 103042e-8 * n - 4464e-9 * a);
        }, re.saturnMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(50.077444 + 1223.5110686 * e + 51908e-8 * n - 3e-8 * a);
        }, re.saturnSemimajorAxis = function(t) {
          var e = (t - 2451545) / 36525, n = e * e;
          return 9.554909192 - 2139e-9 * e + 4e-9 * n;
        }, re.saturnEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.05554814 - 3446641e-10 * e - 6436e-10 * n + 34e-10 * a;
        }, re.saturnInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(2.488879 - 37362e-7 * e - 1519e-8 * n + 87e-9 * a);
        }, re.saturnLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(113.665503 + 0.877088 * e - 12176e-8 * n - 2249e-9 * a);
        }, re.saturnLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(93.057237 + 1.19637613 * e + 83753e-8 * n + 4928e-9 * a);
        }, re.uranusMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(314.055005 + 429.8640561 * e + 3039e-7 * n + 26e-9 * a);
        }, re.uranusSemimajorAxis = function(t) {
          var e = (t - 2451545) / 36525, n = e * e;
          return 19.218446062 - 372e-10 * e + 98e-11 * n;
        }, re.uranusEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.04638122 - 27293e-9 * e + 789e-10 * n + 24e-11 * a;
        }, re.uranusInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(0.773197 + 7744e-7 * e + 3749e-8 * n - 92e-9 * a);
        }, re.uranusLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(74.005957 + 0.5211278 * e + 133947e-8 * n + 18484e-9 * a);
        }, re.uranusLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(173.005291 + 1.486379 * e + 21406e-8 * n + 434e-9 * a);
        }, re.neptuneMeanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(304.348665 + 219.8833092 * e + 30882e-8 * n + 18e-9 * a);
        }, re.neptuneSemimajorAxis = function(t) {
          var e = (t - 2451545) / 36525, n = e * e;
          return 30.110386869 - 1663e-10 * e + 69e-11 * n;
        }, re.neptuneEccentricity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e * e;
          return 945575e-8 + 6033e-9 * e - 5e-11 * n;
        }, re.neptuneInclination = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(1.769953 - 93082e-7 * e - 708e-8 * n + 27e-9 * a);
        }, re.neptuneLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(131.784057 + 1.1022039 * e + 25952e-8 * n - 637e-9 * a);
        }, re.neptuneLongitudePerihelion = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(48.120276 + 1.4262957 * e + 38434e-8 * n + 2e-8 * a);
        }, re.mercuryMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(252.250906 + 149472.6746358 * e - 536e-8 * n + 2e-9 * a);
        }, re.mercuryInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(7.004986 - 59516e-7 * e + 8e-7 * n + 43e-9 * a);
        }, re.mercuryLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(48.330893 - 0.1254227 * e - 8833e-8 * n - 2e-7 * a);
        }, re.mercuryLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(77.456119 + 0.1588643 * e - 1342e-8 * n - 7e-9 * a);
        }, re.venusMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(181.979801 + 58517.815676 * e + 165e-8 * n - 2e-9 * a);
        }, re.venusInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(3.394662 - 8568e-7 * e - 3244e-8 * n + 9e-9 * a);
        }, re.venusLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(76.67992 - 0.2780134 * e - 14257e-8 * n - 164e-9 * a);
        }, re.venusLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(131.563703 + 48746e-7 * e - 138467e-8 * n - 5695e-9 * a);
        }, re.earthMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(100.466457 + 35999.3728565 * e - 568e-8 * n - 1e-9 * a);
        }, re.earthInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return 0.0130548 * e - 931e-8 * n - 34e-9 * a;
        }, re.earthLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(174.873176 - 0.241098 * e + 4262e-8 * n + 1e-9 * a);
        }, re.earthLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(102.937348 + 0.3225654 * e + 14799e-8 * n - 39e-9 * a);
        }, re.marsMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(355.433 + 19140.2993039 * e + 262e-8 * n - 3e-9 * a);
        }, re.marsInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(1.849726 - 81477e-7 * e - 2255e-8 * n - 29e-9 * a);
        }, re.marsLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(49.588093 - 0.295025 * e - 64048e-8 * n - 1964e-9 * a);
        }, re.marsLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(336.060234 + 0.4439016 * e - 17313e-8 * n + 518e-9 * a);
        }, re.jupiterMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(34.351519 + 3034.9056606 * e - 8501e-8 * n + 16e-9 * a);
        }, re.jupiterInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(1.303267 - 19877e-7 * e + 332e-7 * n + 97e-9 * a);
        }, re.jupiterLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(100.464407 + 0.1767232 * e + 907e-6 * n - 7272e-9 * a);
        }, re.jupiterLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(14.331207 + 0.2155209 * e + 72211e-8 * n - 4485e-9 * a);
        }, re.saturnMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(50.077444 + 1222.1138488 * e + 21004e-8 * n - 46e-9 * a);
        }, re.saturnInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(2.488879 + 25514e-7 * e - 4906e-8 * n + 17e-9 * a);
        }, re.saturnLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(113.665503 - 0.2566722 * e - 18399e-8 * n + 48e-8 * a);
        }, re.saturnLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(93.057237 + 0.5665415 * e + 5285e-7 * n + 4912e-9 * a);
        }, re.uranusMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(314.055005 + 428.4669983 * e - 486e-8 * n + 6e-9 * a);
        }, re.uranusInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(0.773197 - 16869e-7 * e + 349e-8 * n + 16e-9 * a);
        }, re.uranusLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(74.005957 + 0.0741431 * e + 40539e-8 * n + 119e-9 * a);
        }, re.uranusLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(173.005291 + 0.0893212 * e - 947e-7 * n + 414e-9 * a);
        }, re.neptuneMeanLongitudeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(304.348665 + 218.4862002 * e + 59e-8 * n - 2e-9 * a);
        }, re.neptuneInclinationJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e;
          return x.m360(1.769953 + 2256e-7 * e + 23e-8 * n);
        }, re.neptuneLongitudeAscendingNodeJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e;
          return x.m360(131.784057 - 61651e-7 * e - 219e-8 * n - 78e-9 * a);
        }, re.neptuneLongitudePerihelionJ2000 = function(t) {
          var e = (t - 2451545) / 36525, n = e * e;
          return x.m360(48.120276 + 0.0291866 * e + 761e-7 * n);
        };
        var Ya = {};
        function Vn() {
          this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0, this.n = 0, this.meanAnnomolyOut = 0, this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0;
        }
        Vn._create = function(t) {
          var e = new Vn();
          return e.a = t.readSingle(), e.e = t.readSingle(), e.i = t.readSingle(), e.w = t.readSingle(), e.omega = t.readSingle(), e.jdEquinox = t.readSingle(), e.t = t.readSingle(), e;
        };
        var ja = {};
        function Ma() {
          this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0, this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0;
        }
        var Un = {};
        function Za() {
          this.heliocentricRectangularEquatorial = new pe(), this.heliocentricRectangularEcliptical = new pe(), this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0, this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0;
        }
        var bs = {};
        function hi() {
        }
        hi.distanceToLightTime = function(t) {
          return t * 0.0057755183;
        }, hi.calculate = function(t, e) {
          var n = new Ma(), a = t, s = 0, l = 0, g = 0, _ = 0;
          e && (s = ii.eclipticLongitude(a), l = ii.eclipticLatitude(a), g = ii.radiusVector(a), s = x.d2R(s), l = x.d2R(l), _ = Math.cos(l));
          for (var m = 0, b = 0, y = 0, M, A, R, F, O, B, H, K = !0, J = !0, it = 0, ot = 0, lt = 0; K; ) {
            switch (e) {
              case 0:
                m = fi.geometricEclipticLongitude(a), b = fi.geometricEclipticLatitude(a), y = ii.radiusVector(a);
                break;
              case 1:
                m = Wt.eclipticLongitude(a), b = Wt.eclipticLatitude(a), y = Wt.radiusVector(a);
                break;
              case 2:
                m = en.eclipticLongitude(a), b = en.eclipticLatitude(a), y = en.radiusVector(a);
                break;
              case 3:
                m = Rt.eclipticLongitude(a), b = Rt.eclipticLatitude(a), y = Rt.radiusVector(a);
                break;
              case 4:
                m = Y.eclipticLongitude(a), b = Y.eclipticLatitude(a), y = Y.radiusVector(a);
                break;
              case 5:
                m = Nr.eclipticLongitude(a), b = Nr.eclipticLatitude(a), y = Nr.radiusVector(a);
                break;
              case 6:
                m = tn.eclipticLongitude(a), b = tn.eclipticLatitude(a), y = tn.radiusVector(a);
                break;
              case 7:
                m = br.eclipticLongitude(a), b = br.eclipticLatitude(a), y = br.radiusVector(a);
                break;
              case 8:
                m = Qr.eclipticLongitude(a), b = Qr.eclipticLatitude(a), y = Qr.radiusVector(a);
                break;
              default:
                console.assert(!1);
                break;
            }
            if (J ? J = !1 : (K = Math.abs(m - it) > 1e-5 || Math.abs(b - ot) > 1e-5 || Math.abs(y - lt) > 1e-6, it = m, ot = b, lt = y), K) {
              var gt = 0;
              e ? (M = x.d2R(m), A = x.d2R(b), R = Math.cos(A), F = Math.cos(M), O = y * R * F - g * _ * Math.cos(s), B = y * R * Math.sin(M) - g * _ * Math.sin(s), H = y * Math.sin(A) - g * Math.sin(l), gt = Math.sqrt(O * O + B * B + H * H)) : gt = y, a = t - hi.distanceToLightTime(gt);
            }
          }
          M = x.d2R(m), A = x.d2R(b), R = Math.cos(A), F = Math.cos(M), O = y * R * F - g * _ * Math.cos(s), B = y * R * Math.sin(M) - g * _ * Math.sin(s), H = y * Math.sin(A) - g * Math.sin(l);
          var ut = O * O, St = B * B;
          n.apparentGeocentricLatitude = x.r2D(Math.atan2(H, Math.sqrt(ut + St))), n.apparentGeocentricDistance = Math.sqrt(ut + St + H * H), n.apparentGeocentricLongitude = x.m360(x.r2D(Math.atan2(B, O))), n.apparentLightTime = hi.distanceToLightTime(n.apparentGeocentricDistance);
          var mt = te.eclipticAberration(n.apparentGeocentricLongitude, n.apparentGeocentricLatitude, t);
          n.apparentGeocentricLongitude += mt.x, n.apparentGeocentricLatitude += mt.y;
          var Dt = tr.correctionInLongitude(n.apparentGeocentricLongitude, n.apparentGeocentricLatitude, t);
          n.apparentGeocentricLatitude += tr.correctionInLatitude(n.apparentGeocentricLongitude, t), n.apparentGeocentricLongitude += Dt;
          var yt = ci.nutationInLongitude(t), ue = ci.trueObliquityOfEcliptic(t);
          n.apparentGeocentricLongitude += x.dmS2D(0, 0, yt);
          var _e = x.ec2Eq(n.apparentGeocentricLongitude, n.apparentGeocentricLatitude, ue);
          return n.apparentGeocentricRA = _e.x, n.apparentGeocentricDeclination = _e.y, n;
        }, hi.semiMajorAxisFromPerihelionDistance = function(t, e) {
          return t / (1 - e);
        }, hi.meanMotionFromSemiMajorAxis = function(t) {
          return 0.9856076686 / (t * Math.sqrt(t));
        }, hi.calculateRectangularJD = function(t, e) {
          var n = t, a = x.d2R(e.omega), s = x.d2R(e.w), l = x.d2R(e.i), g = 0, _ = 1, m = Math.sin(a), b = Math.cos(a), y = Math.cos(l), M = Math.sin(l), A = b, R = m * _, F = m * g, O = -m * y, B = b * y * _ - M * g, H = b * y * g + M * _, K = Math.sqrt(A * A + O * O), J = Math.sqrt(R * R + B * B), it = Math.sqrt(F * F + H * H), ot = Math.atan2(A, O), lt = Math.atan2(R, B), gt = Math.atan2(F, H), ut = e.n * (n - e.t);
          e.meanAnnomolyOut = ut;
          var St = nt.calculate(ut, e.e);
          St = x.d2R(St);
          var mt = 2 * Math.atan(Math.sqrt((1 + e.e) / (1 - e.e)) * Math.tan(St / 2)), Dt = e.a * (1 - e.e * Math.cos(St)), yt = Dt * K * Math.sin(ot + s + mt), ue = Dt * J * Math.sin(lt + s + mt), _e = Dt * it * Math.sin(gt + s + mt);
          return $.create(yt, _e, ue);
        }, hi.calculateRectangular = function(t, e) {
          var n = x.d2R(t.omega), a = x.d2R(t.w), s = x.d2R(t.i), l = 0, g = 1, _ = Math.sin(n), m = Math.cos(n), b = Math.cos(s), y = Math.sin(s), M = m, A = _ * g, R = _ * l, F = -_ * b, O = m * b * g - y * l, B = m * b * l + y * g, H = Math.sqrt(M * M + F * F), K = Math.sqrt(A * A + O * O), J = Math.sqrt(R * R + B * B), it = Math.atan2(M, F), ot = Math.atan2(A, O), lt = Math.atan2(R, B);
          t.n;
          var gt = e, ut = nt.calculate(gt, t.e);
          ut = x.d2R(ut);
          var St = 2 * Math.atan(Math.sqrt((1 + t.e) / (1 - t.e)) * Math.tan(ut / 2)), mt = t.a * (1 - t.e * Math.cos(ut)), Dt = mt * H * Math.sin(it + a + St), yt = mt * K * Math.sin(ot + a + St), ue = mt * J * Math.sin(lt + a + St);
          return $.create(Dt, ue, yt);
        }, hi.calculateElements = function(t, e) {
          var n = ci.meanObliquityOfEcliptic(e.jdEquinox), a = t, s = new Za();
          n = x.d2R(n);
          for (var l = x.d2R(e.omega), g = x.d2R(e.w), _ = x.d2R(e.i), m = Math.sin(n), b = Math.cos(n), y = Math.sin(l), M = Math.cos(l), A = Math.cos(_), R = Math.sin(_), F = M, O = y * b, B = y * m, H = -y * A, K = M * A * b - R * m, J = M * A * m + R * b, it = Math.sqrt(F * F + H * H), ot = Math.sqrt(O * O + K * K), lt = Math.sqrt(B * B + J * J), gt = Math.atan2(F, H), ut = Math.atan2(O, K), St = Math.atan2(B, J), mt = hi.meanMotionFromSemiMajorAxis(e.a), Dt = fi.equatorialRectangularCoordinatesAnyEquinox(t, e.jdEquinox), yt = 0; yt < 2; yt++) {
            var ue = mt * (a - e.t), _e = nt.calculate(ue, e.e);
            _e = x.d2R(_e);
            var Qt = 2 * Math.atan(Math.sqrt((1 + e.e) / (1 - e.e)) * Math.tan(_e / 2)), Ft = e.a * (1 - e.e * Math.cos(_e)), vi = Ft * it * Math.sin(gt + g + Qt), Ei = Ft * ot * Math.sin(ut + g + Qt), Li = Ft * lt * Math.sin(St + g + Qt);
            if (!yt) {
              s.heliocentricRectangularEquatorial.x = vi, s.heliocentricRectangularEquatorial.y = Ei, s.heliocentricRectangularEquatorial.z = Li;
              var ri = l + Qt, Si = Math.cos(ri), Je = Math.sin(ri);
              s.heliocentricRectangularEcliptical.x = Ft * (M * Si - y * Je * A), s.heliocentricRectangularEcliptical.y = Ft * (y * Si + M * Je * A), s.heliocentricRectangularEcliptical.z = Ft * R * Je, s.heliocentricEclipticLongitude = Math.atan2(Ei, vi), s.heliocentricEclipticLongitude = x.m24(x.r2D(s.heliocentricEclipticLongitude) / 15), s.heliocentricEclipticLatitude = Math.asin(Li / Ft), s.heliocentricEclipticLatitude = x.r2D(s.heliocentricEclipticLatitude);
            }
            var Xi = Dt.x + vi, Ee = Dt.y + Ei, Yi = Dt.z + Li, Ni = Math.atan2(Ee, Xi);
            Ni = x.r2D(Ni);
            var he = Math.atan2(Yi, Math.sqrt(Xi * Xi + Ee * Ee));
            he = x.r2D(he);
            var ee = Math.sqrt(Xi * Xi + Ee * Ee + Yi * Yi);
            if (!yt)
              s.trueGeocentricRA = x.m24(Ni / 15), s.trueGeocentricDeclination = he, s.trueGeocentricDistance = ee, s.trueGeocentricLightTime = hi.distanceToLightTime(ee);
            else {
              s.astrometricGeocenticRA = x.m24(Ni / 15), s.astrometricGeocentricDeclination = he, s.astrometricGeocentricDistance = ee, s.astrometricGeocentricLightTime = hi.distanceToLightTime(ee);
              var Xe = Math.sqrt(Dt.x * Dt.x + Dt.y * Dt.y + Dt.z * Dt.z);
              s.elongation = Math.acos((Xe * Xe + ee * ee - Ft * Ft) / (2 * Xe * ee)), s.elongation = x.r2D(s.elongation), s.phaseAngle = Math.acos((Ft * Ft + ee * ee - Xe * Xe) / (2 * Ft * ee)), s.phaseAngle = x.r2D(s.phaseAngle);
            }
            yt || (a = t - s.trueGeocentricLightTime);
          }
          return s;
        }, hi.instantaneousVelocity = function(t, e) {
          return 42.1219 * Math.sqrt(1 / t - 1 / (2 * e));
        }, hi.velocityAtPerihelion = function(t, e) {
          return 29.7847 / Math.sqrt(e) * Math.sqrt((1 + t) / (1 - t));
        }, hi.velocityAtAphelion = function(t, e) {
          return 29.7847 / Math.sqrt(e) * Math.sqrt((1 - t) / (1 + t));
        }, hi.lengthOfEllipse = function(t, e) {
          var n = e * Math.sqrt(1 - t * t);
          return x.PI() * (3 * (e + n) - Math.sqrt((e + 3 * n) * (3 * e + n)));
        }, hi.cometMagnitude = function(t, e, n, a) {
          return t + 5 * xt.log10(e) + n * xt.log10(a);
        }, hi.minorPlanetMagnitude = function(t, e, n, a, s) {
          s = x.d2R(s);
          var l = Math.exp(-3.33 * Math.pow(Math.tan(s / 2), 0.63)), g = Math.exp(-1.87 * Math.pow(Math.tan(s / 2), 1.22));
          return t + 5 * xt.log10(a * e) - 2.5 * xt.log10((1 - n) * l + n * g);
        };
        var ys = {};
        function xa() {
        }
        xa.calculate = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = x.m360(280.4664567 + 360007.6982779 * e + 0.03032028 * n + a / 49931 - s / 15300 - l / 2e6), _ = fi.apparentEclipticLongitude(t), m = fi.apparentEclipticLatitude(t), b = ci.trueObliquityOfEcliptic(t), y = x.ec2Eq(_, m, b);
          b = x.d2R(b);
          var M = g - 57183e-7 - y.x * 15 + x.dmS2D(0, 0, ci.nutationInLongitude(t)) * Math.cos(b);
          return M > 180 && (M = -(360 - M)), M *= 4, M;
        };
        var Ln = {};
        function tr() {
        }
        tr.correctionInLongitude = function(t, e, n) {
          var a = (n - 2451545) / 36525, s = t - 1.397 * a - 31e-5 * a * a;
          s = x.d2R(s), t = x.d2R(t), e = x.d2R(e);
          var l = -0.09033 + 0.03916 * (Math.cos(s) + Math.sin(s)) * Math.tan(e);
          return x.dmS2D(0, 0, l);
        }, tr.correctionInLatitude = function(t, e) {
          var n = (e - 2451545) / 36525, a = t - 1.397 * n - 31e-5 * n * n;
          a = x.d2R(a), t = x.d2R(t);
          var s = 0.03916 * (Math.cos(a) - Math.sin(a));
          return x.dmS2D(0, 0, s);
        }, tr.convertVSOPToFK5J2000 = function(t) {
          var e = new pe();
          return e.x = t.x + 44036e-11 * t.y - 190919e-12 * t.z, e.y = -479966e-12 * t.x + 0.917482137087 * t.y - 0.397776982902 * t.z, e.z = 0.397776982902 * t.y + 0.917482137087 * t.z, e;
        }, tr.convertVSOPToFK5B1950 = function(t) {
          var e = new pe();
          return e.x = 0.999925702634 * t.x + 0.012189716217 * t.y + 11134016e-12 * t.z, e.y = -0.011179418036 * t.x + 0.917413998946 * t.y - 0.397777041885 * t.z, e.z = -0.004859003787 * t.x + 0.397747363646 * t.y + 0.917482111428 * t.z, e;
        }, tr.convertVSOPToFK5AnyEquinox = function(t, e) {
          var n = (e - 2451545) / 36525, a = n * n, s = a * n, l = 2306.2181 * n + 0.30188 * a + 0.017988 * s;
          l = x.d2R(x.dmS2D(0, 0, l));
          var g = 2306.2181 * n + 1.09468 * a + 0.018203 * s;
          g = x.d2R(x.dmS2D(0, 0, g));
          var _ = 2004.3109 * n - 0.42665 * a - 0.041833 * s;
          _ = x.d2R(x.dmS2D(0, 0, _));
          var m = Math.cos(l), b = Math.cos(g), y = Math.cos(_), M = Math.sin(l), A = Math.sin(g), R = Math.sin(_), F = m * b * y - M * A, O = M * b + m * A * y, B = m * R, H = -m * A - M * b * y, K = m * b - M * A * y, J = -M * R, it = -b * R, ot = -A * R, lt = y, gt = new pe();
          return gt.x = F * t.x + H * t.y + it * t.z, gt.y = O * t.x + K * t.y + ot * t.z, gt.z = B * t.x + J * t.y + lt * t.z, gt;
        };
        var Hn = {};
        function Gn() {
          this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.eclipticRectangularCoordinates = new pe(), this.trueRectangularCoordinates = new pe(), this.apparentRectangularCoordinates = new pe(), this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1, this.apparentShadowRectangularCoordinates = new pe(), this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1;
        }
        var Ss = {};
        function La() {
          this.satellite1 = new Gn(), this.satellite2 = new Gn(), this.satellite3 = new Gn(), this.satellite4 = new Gn();
        }
        var Ka = {};
        function $i() {
        }
        $i.calculate = function(t) {
          for (var e = fi.geometricEclipticLongitude(t), n = x.d2R(e), a = fi.geometricEclipticLatitude(t), s = x.d2R(a), l = ii.radiusVector(t), g = 5, _ = 0, m = hi.distanceToLightTime(g), b = t - m, y = !0, M = 0, A = 0, R = 0, F = 0, O = 0, B = 0, H = 0, K = 0; y; )
            F = Y.eclipticLongitude(b), O = x.d2R(F), B = Y.eclipticLatitude(b), H = x.d2R(B), K = Y.radiusVector(b), M = K * Math.cos(H) * Math.cos(O) + l * Math.cos(n), A = K * Math.cos(H) * Math.sin(O) + l * Math.sin(n), R = K * Math.sin(H) + l * Math.sin(s), g = Math.sqrt(M * M + A * A + R * R), m = hi.distanceToLightTime(g), y = Math.abs(m - _) > 2e-6, y && (b = t - m, _ = m);
          var J = $i.calculateHelper(t, n, s, l);
          $i.fillInPhenomenaDetails(J.satellite1), $i.fillInPhenomenaDetails(J.satellite2), $i.fillInPhenomenaDetails(J.satellite3), $i.fillInPhenomenaDetails(J.satellite4), b = t - m, F = Y.eclipticLongitude(b), O = x.d2R(F), B = Y.eclipticLatitude(b), H = x.d2R(B), K = Y.radiusVector(b), M = K * Math.cos(H) * Math.cos(O), A = K * Math.cos(H) * Math.sin(O), R = K * Math.sin(H), g = Math.sqrt(M * M + A * A + R * R);
          var it = hi.distanceToLightTime(g), ot = $i.calculateHelper(t + it - m, n, s, 0);
          return $i.fillInPhenomenaDetails(ot.satellite1), $i.fillInPhenomenaDetails(ot.satellite2), $i.fillInPhenomenaDetails(ot.satellite3), $i.fillInPhenomenaDetails(ot.satellite4), J.satellite1.bInEclipse = ot.satellite1.bInOccultation, J.satellite2.bInEclipse = ot.satellite2.bInOccultation, J.satellite3.bInEclipse = ot.satellite3.bInOccultation, J.satellite4.bInEclipse = ot.satellite4.bInOccultation, J.satellite1.bInShadowTransit = ot.satellite1.bInTransit, J.satellite2.bInShadowTransit = ot.satellite2.bInTransit, J.satellite3.bInShadowTransit = ot.satellite3.bInTransit, J.satellite4.bInShadowTransit = ot.satellite4.bInTransit, J.satellite1.apparentShadowRectangularCoordinates = ot.satellite1.apparentRectangularCoordinates, J.satellite2.apparentShadowRectangularCoordinates = ot.satellite2.apparentRectangularCoordinates, J.satellite3.apparentShadowRectangularCoordinates = ot.satellite3.apparentRectangularCoordinates, J.satellite4.apparentShadowRectangularCoordinates = ot.satellite4.apparentRectangularCoordinates, J;
        }, $i.calculateHelper = function(t, e, n, a) {
          for (var s = new La(), l = 5, g = 0, _ = hi.distanceToLightTime(l), m = 0, b = 0, y = 0, M = 0, A = 0, R = 0, F = 0, O = 0, B = t - _, H = !0; H; )
            M = Y.eclipticLongitude(B), A = x.d2R(M), R = Y.eclipticLatitude(B), F = x.d2R(R), O = Y.radiusVector(B), m = O * Math.cos(F) * Math.cos(A) + a * Math.cos(e), b = O * Math.cos(F) * Math.sin(A) + a * Math.sin(e), y = O * Math.sin(F) + a * Math.sin(n), l = Math.sqrt(m * m + b * b + y * y), _ = hi.distanceToLightTime(l), H = Math.abs(_ - g) > 2e-6, H && (B = t - _, g = _);
          var K = Math.atan2(b, m), J = Math.atan(y / Math.sqrt(m * m + b * b)), it = t - 24430005e-1 - _, ot = 106.07719 + 203.48895579 * it, lt = x.d2R(ot), gt = 175.73161 + 101.374724735 * it, ut = x.d2R(gt), St = 120.55883 + 50.317609207 * it, mt = x.d2R(St), Dt = 84.44459 + 21.571071177 * it, yt = x.d2R(Dt), ue = x.d2R(x.m360(97.0881 + 0.16138586 * it)), _e = x.d2R(x.m360(154.8663 + 0.04726307 * it)), Qt = x.d2R(x.m360(188.184 + 712734e-8 * it)), Ft = x.d2R(x.m360(335.2868 + 184e-5 * it)), vi = 312.3346 - 0.13279386 * it, Ei = x.d2R(vi), Li = 100.4411 - 0.03263064 * it, ri = x.d2R(Li), Si = 119.1942 - 717703e-8 * it, Je = x.d2R(Si), Xi = 322.6186 - 175934e-8 * it, Ee = x.d2R(Xi), Yi = 0.33033 * Math.sin(x.d2R(163.679 + 10512e-7 * it)) + 0.03439 * Math.sin(x.d2R(34.486 - 0.0161731 * it)), Ni = x.d2R(199.6766 + 0.1737919 * it), he = x.d2R(316.5182 - 208e-8 * it), ee = x.d2R(30.23756 + 0.0830925701 * it + Yi), Xe = x.d2R(31.97853 + 0.0334597339 * it), xe = x.d2R(13.469942), Ir = 0.47259 * Math.sin(2 * (lt - ut)) + -0.03478 * Math.sin(Qt - Ft) + 0.01081 * Math.sin(ut - 2 * mt + Qt) + 738e-5 * Math.sin(Ni) + 713e-5 * Math.sin(ut - 2 * mt + _e) + -674e-5 * Math.sin(ue + Qt - 2 * xe - 2 * ee) + 666e-5 * Math.sin(ut - 2 * mt + Ft) + 445e-5 * Math.sin(lt - Qt) + -354e-5 * Math.sin(lt - ut) + -317e-5 * Math.sin(2 * he - 2 * xe) + 265e-5 * Math.sin(lt - Ft) + -186e-5 * Math.sin(ee) + 162e-5 * Math.sin(_e - Qt) + 158e-5 * Math.sin(4 * (lt - ut)) + -155e-5 * Math.sin(lt - mt) + -138e-5 * Math.sin(he + Je - 2 * xe - 2 * ee) + -115e-5 * Math.sin(2 * (lt - 2 * ut + ri)) + 89e-5 * Math.sin(_e - Ft) + 85e-5 * Math.sin(lt + Qt - 2 * xe - 2 * ee) + 83e-5 * Math.sin(ri - Je) + 53e-5 * Math.sin(he - ri), or = 1.06476 * Math.sin(2 * (ut - mt)) + 0.04256 * Math.sin(lt - 2 * ut + Qt) + 0.03581 * Math.sin(ut - Qt) + 0.02395 * Math.sin(lt - 2 * ut + Ft) + 0.01984 * Math.sin(ut - Ft) + -0.01778 * Math.sin(Ni) + 0.01654 * Math.sin(ut - _e) + 0.01334 * Math.sin(ut - 2 * mt + _e) + 0.01294 * Math.sin(Qt - Ft) + -0.01142 * Math.sin(ut - mt) + -0.01057 * Math.sin(ee) + -775e-5 * Math.sin(2 * (he - xe)) + 524e-5 * Math.sin(2 * (lt - ut)) + -46e-4 * Math.sin(lt - mt) + 316e-5 * Math.sin(he - 2 * ee + Je - 2 * xe) + -203e-5 * Math.sin(ue + Qt - 2 * xe - 2 * ee) + 146e-5 * Math.sin(he - Je) + -145e-5 * Math.sin(2 * ee) + 125e-5 * Math.sin(he - Ee) + -115e-5 * Math.sin(lt - 2 * mt + Qt) + -94e-5 * Math.sin(2 * (ut - ri)) + 86e-5 * Math.sin(2 * (lt - 2 * ut + ri)) + -86e-5 * Math.sin(5 * Xe - 2 * ee + x.d2R(52.225)) + -78e-5 * Math.sin(ut - yt) + -64e-5 * Math.sin(3 * mt - 7 * yt + 4 * Ft) + 64e-5 * Math.sin(ue - Ft) + -63e-5 * Math.sin(lt - 2 * mt + Ft) + 58e-5 * Math.sin(Je - Ee) + 56e-5 * Math.sin(2 * (he - xe - ee)) + 56e-5 * Math.sin(2 * (ut - yt)) + 55e-5 * Math.sin(2 * (lt - mt)) + 52e-5 * Math.sin(3 * mt - 7 * yt + Qt + 3 * Ft) + -43e-5 * Math.sin(lt - Qt) + 41e-5 * Math.sin(5 * (ut - mt)) + 41e-5 * Math.sin(Ft - xe) + 32e-5 * Math.sin(ri - Je) + 32e-5 * Math.sin(2 * (mt - ee - xe)), Hi = 0.1649 * Math.sin(mt - Qt) + 0.09081 * Math.sin(mt - Ft) + -0.06907 * Math.sin(ut - mt) + 0.03784 * Math.sin(Qt - Ft) + 0.01846 * Math.sin(2 * (mt - yt)) + -0.0134 * Math.sin(ee) + -0.01014 * Math.sin(2 * (he - xe)) + 704e-5 * Math.sin(ut - 2 * mt + Qt) + -62e-4 * Math.sin(ut - 2 * mt + _e) + -541e-5 * Math.sin(mt - yt) + 381e-5 * Math.sin(ut - 2 * mt + Ft) + 235e-5 * Math.sin(he - Je) + 198e-5 * Math.sin(he - Ee) + 176e-5 * Math.sin(Ni) + 13e-4 * Math.sin(3 * (mt - yt)) + 125e-5 * Math.sin(lt - mt) + -119e-5 * Math.sin(5 * Xe - 2 * ee + x.d2R(52.225)) + 109e-5 * Math.sin(lt - ut) + -1e-3 * Math.sin(3 * mt - 7 * yt + 4 * Ft) + 91e-5 * Math.sin(Je - Ee) + 8e-4 * Math.sin(3 * mt - 7 * yt + Qt + 3 * Ft) + -75e-5 * Math.sin(2 * ut - 3 * mt + Qt) + 72e-5 * Math.sin(ue + Qt - 2 * xe - 2 * ee) + 69e-5 * Math.sin(Ft - xe) + -58e-5 * Math.sin(2 * mt - 3 * yt + Ft) + -57e-5 * Math.sin(mt - 2 * yt + Ft) + 56e-5 * Math.sin(mt + Qt - 2 * xe - 2 * ee) + -52e-5 * Math.sin(ut - 2 * mt + ue) + -5e-4 * Math.sin(_e - Qt) + 48e-5 * Math.sin(mt - 2 * yt + Qt) + -45e-5 * Math.sin(2 * ut - 3 * mt + Ft) + -41e-5 * Math.sin(_e - Ft) + -38e-5 * Math.sin(2 * ee) + -37e-5 * Math.sin(Qt - Ft + Je - Ee) + -32e-5 * Math.sin(3 * mt - 7 * yt + 2 * Qt + 2 * Ft) + 3e-4 * Math.sin(4 * (mt - yt)) + 29e-5 * Math.sin(mt + Ft - 2 * xe - 2 * ee) + -28e-5 * Math.sin(Je + he - 2 * xe - 2 * ee) + 26e-5 * Math.sin(mt - xe - ee) + 24e-5 * Math.sin(ut - 3 * mt + 2 * yt) + 21e-5 * Math.sin(mt - xe - ee) + -21e-5 * Math.sin(mt - _e) + 17e-5 * Math.sin(2 * (mt - Qt)), yn = 0.84287 * Math.sin(yt - Ft) + 0.03431 * Math.sin(Ft - Qt) + -0.03305 * Math.sin(2 * (he - xe)) + -0.03211 * Math.sin(ee) + -0.01862 * Math.sin(yt - Qt) + 0.01186 * Math.sin(he - Ee) + 623e-5 * Math.sin(yt + Ft - 2 * ee - 2 * xe) + 387e-5 * Math.sin(2 * (yt - Ft)) + -284e-5 * Math.sin(5 * Xe - 2 * ee + x.d2R(52.225)) + -234e-5 * Math.sin(2 * (he - Ft)) + -223e-5 * Math.sin(mt - yt) + -208e-5 * Math.sin(yt - xe) + 178e-5 * Math.sin(he + Ee - 2 * Ft) + 134e-5 * Math.sin(Ft - xe) + 125e-5 * Math.sin(2 * (yt - ee - xe)) + -117e-5 * Math.sin(2 * ee) + -112e-5 * Math.sin(2 * (mt - yt)) + 107e-5 * Math.sin(3 * mt - 7 * yt + 4 * Ft) + 102e-5 * Math.sin(yt - ee - xe) + 96e-5 * Math.sin(2 * yt - he - Ee) + 87e-5 * Math.sin(2 * (he - Ee)) + -85e-5 * Math.sin(3 * mt - 7 * yt + Qt + 3 * Ft) + 85e-5 * Math.sin(mt - 2 * yt + Ft) + -81e-5 * Math.sin(2 * (yt - he)) + 71e-5 * Math.sin(yt + Ft - 2 * xe - 3 * ee) + 61e-5 * Math.sin(lt - yt) + -56e-5 * Math.sin(he - Je) + -54e-5 * Math.sin(mt - 2 * yt + Qt) + 51e-5 * Math.sin(ut - yt) + 42e-5 * Math.sin(2 * (he - ee - xe)) + 39e-5 * Math.sin(2 * (Ft - Ee)) + 36e-5 * Math.sin(he + xe - Ft - Ee) + 35e-5 * Math.sin(2 * Xe - ee + x.d2R(188.37)) + -35e-5 * Math.sin(yt - Ft + 2 * xe - 2 * he) + -32e-5 * Math.sin(yt + Ft - 2 * xe - ee) + 3e-4 * Math.sin(2 * Xe - 2 * ee + x.d2R(149.15)) + 29e-5 * Math.sin(3 * mt - 7 * yt + 2 * Qt + 2 * Ft) + 28e-5 * Math.sin(yt - Ft + 2 * he - 2 * xe) + -28e-5 * Math.sin(2 * (yt - Ee)) + -27e-5 * Math.sin(Qt - Ft + Je - Ee) + -26e-5 * Math.sin(5 * Xe - 3 * ee + x.d2R(188.37)) + 25e-5 * Math.sin(Ee - Je) + -25e-5 * Math.sin(ut - 3 * mt + 2 * yt) + -23e-5 * Math.sin(3 * (mt - yt)) + 21e-5 * Math.sin(2 * yt - 2 * xe - 3 * ee) + -21e-5 * Math.sin(2 * mt - 3 * yt + Ft) + 19e-5 * Math.sin(yt - Ft - ee) + -19e-5 * Math.sin(2 * yt - Qt - Ft) + -18e-5 * Math.sin(yt - Ft + ee) + -16e-5 * Math.sin(yt + Qt - 2 * xe - 2 * ee);
          s.satellite1.meanLongitude = x.m360(ot), s.satellite1.trueLongitude = x.m360(ot + Ir);
          var yr = x.d2R(s.satellite1.trueLongitude);
          s.satellite2.meanLongitude = x.m360(gt), s.satellite2.trueLongitude = x.m360(gt + or);
          var dr = x.d2R(s.satellite2.trueLongitude);
          s.satellite3.meanLongitude = x.m360(St), s.satellite3.trueLongitude = x.m360(St + Hi);
          var ji = x.d2R(s.satellite3.trueLongitude);
          s.satellite4.meanLongitude = x.m360(Dt), s.satellite4.trueLongitude = x.m360(Dt + yn);
          var wr = x.d2R(s.satellite4.trueLongitude), zr = Math.atan(6393e-7 * Math.sin(yr - Ei) + 1825e-7 * Math.sin(yr - ri) + 329e-7 * Math.sin(yr - Je) + -311e-7 * Math.sin(yr - he) + 93e-7 * Math.sin(yr - Ee) + 75e-7 * Math.sin(3 * yr - 4 * ut - 1.9927 * Ir + ri) + 46e-7 * Math.sin(yr + he - 2 * xe - 2 * ee));
          s.satellite1.equatorialLatitude = x.r2D(zr);
          var Sn = Math.atan(81004e-7 * Math.sin(dr - ri) + 4512e-7 * Math.sin(dr - Je) + -3284e-7 * Math.sin(dr - he) + 116e-6 * Math.sin(dr - Ee) + 272e-7 * Math.sin(lt - 2 * mt + 1.0146 * or + ri) + -144e-7 * Math.sin(dr - Ei) + 143e-7 * Math.sin(dr + he - 2 * xe - 2 * ee) + 35e-7 * Math.sin(dr - he + ee) + -28e-7 * Math.sin(lt - 2 * mt + 1.0146 * or + Je));
          s.satellite2.equatorialLatitude = x.r2D(Sn);
          var xr = Math.atan(32402e-7 * Math.sin(ji - Je) + -16911e-7 * Math.sin(ji - he) + 6847e-7 * Math.sin(ji - Ee) + -2797e-7 * Math.sin(ji - ri) + 321e-7 * Math.sin(ji + he - 2 * xe - 2 * ee) + 51e-7 * Math.sin(ji - he + ee) + -45e-7 * Math.sin(ji - he - ee) + -45e-7 * Math.sin(ji + he - 2 * xe) + 37e-7 * Math.sin(ji + he - 2 * xe - 3 * ee) + 3e-6 * Math.sin(2 * ut - 3 * ji + 4.03 * Hi + ri) + -21e-7 * Math.sin(2 * ut - 3 * ji + 4.03 * Hi + Je));
          s.satellite3.equatorialLatitude = x.r2D(xr);
          var Lr = Math.atan(-76579e-7 * Math.sin(wr - he) + 44134e-7 * Math.sin(wr - Ee) + -5112e-7 * Math.sin(wr - Je) + 773e-7 * Math.sin(wr + he - 2 * xe - 2 * ee) + 104e-7 * Math.sin(wr - he + ee) + -102e-7 * Math.sin(wr - he - ee) + 88e-7 * Math.sin(wr + he - 2 * xe - 3 * ee) + -38e-7 * Math.sin(wr + he - 2 * xe - ee));
          s.satellite4.equatorialLatitude = x.r2D(Lr), s.satellite1.r = 5.90569 * (1 + (-41339e-7 * Math.cos(2 * (lt - ut)) + -387e-7 * Math.cos(lt - Qt) + -214e-7 * Math.cos(lt - Ft) + 17e-6 * Math.cos(lt - ut) + -131e-7 * Math.cos(4 * (lt - ut)) + 106e-7 * Math.cos(lt - mt) + -66e-7 * Math.cos(lt + Qt - 2 * xe - 2 * ee))), s.satellite2.r = 9.39657 * (1 + (93848e-7 * Math.cos(lt - ut) + -3116e-7 * Math.cos(ut - Qt) + -1744e-7 * Math.cos(ut - Ft) + -1442e-7 * Math.cos(ut - _e) + 553e-7 * Math.cos(ut - mt) + 523e-7 * Math.cos(lt - mt) + -29e-6 * Math.cos(2 * (lt - ut)) + 164e-7 * Math.cos(2 * (ut - ri)) + 107e-7 * Math.cos(lt - 2 * mt + Qt) + -102e-7 * Math.cos(ut - ue) + -91e-7 * Math.cos(2 * (lt - mt)))), s.satellite3.r = 14.98832 * (1 + (-14388e-7 * Math.cos(mt - Qt) + -7919e-7 * Math.cos(mt - Ft) + 6342e-7 * Math.cos(ut - mt) + -1761e-7 * Math.cos(2 * (mt - yt)) + 294e-7 * Math.cos(mt - yt) + -156e-7 * Math.cos(3 * (mt - yt)) + 156e-7 * Math.cos(lt - mt) + -153e-7 * Math.cos(lt - ut) + 7e-6 * Math.cos(2 * ut - 3 * mt + Qt) + -51e-7 * Math.cos(mt + Qt - 2 * xe - 2 * ee))), s.satellite4.r = 26.36273 * (1 + (-73546e-7 * Math.cos(yt - Ft) + 1621e-7 * Math.cos(yt - Qt) + 974e-7 * Math.cos(mt - yt) + -543e-7 * Math.cos(yt + Ft - 2 * xe - 2 * ee) + -271e-7 * Math.cos(2 * (yt - Ft)) + 182e-7 * Math.cos(yt - xe) + 177e-7 * Math.cos(2 * (mt - yt)) + -167e-7 * Math.cos(2 * yt - he - Ee) + 167e-7 * Math.cos(he - Ee) + -155e-7 * Math.cos(2 * (yt - xe - ee)) + 142e-7 * Math.cos(2 * (yt - he)) + 105e-7 * Math.cos(lt - yt) + 92e-7 * Math.cos(ut - yt) + -89e-7 * Math.cos(yt - xe - ee) + -62e-7 * Math.cos(yt + Ft - 2 * xe - 3 * ee) + 48e-7 * Math.cos(2 * (yt - Ee))));
          var cn = (t - 2433282423e-3) / 36525, Dn = x.d2R(1.3966626 * cn + 3088e-7 * cn * cn);
          yr += Dn, s.satellite1.tropicalLongitude = x.m360(x.r2D(yr)), dr += Dn, s.satellite2.tropicalLongitude = x.m360(x.r2D(dr)), ji += Dn, s.satellite3.tropicalLongitude = x.m360(x.r2D(ji)), wr += Dn, s.satellite4.tropicalLongitude = x.m360(x.r2D(wr)), he += Dn;
          var hn = (t - 24150205e-1) / 36525, ds = 3.120262 + 6e-4 * hn, sa = x.d2R(ds), eo = s.satellite1.r * Math.cos(yr - he) * Math.cos(zr), gs = s.satellite2.r * Math.cos(dr - he) * Math.cos(Sn), Va = s.satellite3.r * Math.cos(ji - he) * Math.cos(xr), ya = s.satellite4.r * Math.cos(wr - he) * Math.cos(Lr), fn = 0, Ua = s.satellite1.r * Math.sin(yr - he) * Math.cos(zr), _n = s.satellite2.r * Math.sin(dr - he) * Math.cos(Sn), Sa = s.satellite3.r * Math.sin(ji - he) * Math.cos(xr), Cn = s.satellite4.r * Math.sin(wr - he) * Math.cos(Lr), ms = 0, ps = s.satellite1.r * Math.sin(zr), Ha = s.satellite2.r * Math.sin(Sn), io = s.satellite3.r * Math.sin(xr), vs = s.satellite4.r * Math.sin(Lr), ws = 1, oa = x.d2R(re.jupiterLongitudeAscendingNode(t)), Nn = x.d2R(re.jupiterInclination(t)), Pr = 0, Tn = 0, Er = 0, e_ = new pe(), lr = $i.rotations(fn, ms, ws, sa, he, Nn, oa, K, J, e_);
          Pr = lr[0], Tn = lr[1], Er = lr[2];
          var Sr = Math.atan2(Pr, Er);
          lr = $i.rotations(eo, Ua, ps, sa, he, Nn, oa, K, J, s.satellite1.eclipticRectangularCoordinates), Pr = lr[0], Tn = lr[1], Er = lr[2], s.satellite1.trueRectangularCoordinates.x = Pr * Math.cos(Sr) - Er * Math.sin(Sr), s.satellite1.trueRectangularCoordinates.y = Pr * Math.sin(Sr) + Er * Math.cos(Sr), s.satellite1.trueRectangularCoordinates.z = Tn, lr = $i.rotations(gs, _n, Ha, sa, he, Nn, oa, K, J, s.satellite2.eclipticRectangularCoordinates), Pr = lr[0], Tn = lr[1], Er = lr[2], s.satellite2.trueRectangularCoordinates.x = Pr * Math.cos(Sr) - Er * Math.sin(Sr), s.satellite2.trueRectangularCoordinates.y = Pr * Math.sin(Sr) + Er * Math.cos(Sr), s.satellite2.trueRectangularCoordinates.z = Tn, lr = $i.rotations(Va, Sa, io, sa, he, Nn, oa, K, J, s.satellite3.eclipticRectangularCoordinates), Pr = lr[0], Tn = lr[1], Er = lr[2], s.satellite3.trueRectangularCoordinates.x = Pr * Math.cos(Sr) - Er * Math.sin(Sr), s.satellite3.trueRectangularCoordinates.y = Pr * Math.sin(Sr) + Er * Math.cos(Sr), s.satellite3.trueRectangularCoordinates.z = Tn, lr = $i.rotations(ya, Cn, vs, sa, he, Nn, oa, K, J, s.satellite4.eclipticRectangularCoordinates), Pr = lr[0], Tn = lr[1], Er = lr[2], s.satellite4.trueRectangularCoordinates.x = Pr * Math.cos(Sr) - Er * Math.sin(Sr), s.satellite4.trueRectangularCoordinates.y = Pr * Math.sin(Sr) + Er * Math.cos(Sr), s.satellite4.trueRectangularCoordinates.z = Tn, s.satellite1.apparentRectangularCoordinates.x = s.satellite1.trueRectangularCoordinates.x + Math.abs(s.satellite1.trueRectangularCoordinates.z) / 17295 * Math.sqrt(1 - s.satellite1.trueRectangularCoordinates.x / s.satellite1.r * (s.satellite1.trueRectangularCoordinates.x / s.satellite1.r)), s.satellite1.apparentRectangularCoordinates.y = s.satellite1.trueRectangularCoordinates.y, s.satellite1.apparentRectangularCoordinates.z = s.satellite1.trueRectangularCoordinates.z, s.satellite2.apparentRectangularCoordinates.x = s.satellite2.trueRectangularCoordinates.x + Math.abs(s.satellite2.trueRectangularCoordinates.z) / 21819 * Math.sqrt(1 - s.satellite2.trueRectangularCoordinates.x / s.satellite2.r * (s.satellite2.trueRectangularCoordinates.x / s.satellite2.r)), s.satellite2.apparentRectangularCoordinates.y = s.satellite2.trueRectangularCoordinates.y, s.satellite2.apparentRectangularCoordinates.z = s.satellite2.trueRectangularCoordinates.z, s.satellite3.apparentRectangularCoordinates.x = s.satellite3.trueRectangularCoordinates.x + Math.abs(s.satellite3.trueRectangularCoordinates.z) / 27558 * Math.sqrt(1 - s.satellite3.trueRectangularCoordinates.x / s.satellite3.r * (s.satellite3.trueRectangularCoordinates.x / s.satellite3.r)), s.satellite3.apparentRectangularCoordinates.y = s.satellite3.trueRectangularCoordinates.y, s.satellite3.apparentRectangularCoordinates.z = s.satellite3.trueRectangularCoordinates.z, s.satellite4.apparentRectangularCoordinates.x = s.satellite4.trueRectangularCoordinates.x + Math.abs(s.satellite4.trueRectangularCoordinates.z) / 36548 * Math.sqrt(1 - s.satellite4.trueRectangularCoordinates.x / s.satellite4.r * (s.satellite4.trueRectangularCoordinates.x / s.satellite4.r)), s.satellite4.apparentRectangularCoordinates.y = s.satellite4.trueRectangularCoordinates.y, s.satellite4.apparentRectangularCoordinates.z = s.satellite4.trueRectangularCoordinates.z;
          var Wr = l / (l + s.satellite1.trueRectangularCoordinates.z / 2095);
          return s.satellite1.apparentRectangularCoordinates.x *= Wr, s.satellite1.apparentRectangularCoordinates.y *= Wr, Wr = l / (l + s.satellite2.trueRectangularCoordinates.z / 2095), s.satellite2.apparentRectangularCoordinates.x *= Wr, s.satellite2.apparentRectangularCoordinates.y *= Wr, Wr = l / (l + s.satellite3.trueRectangularCoordinates.z / 2095), s.satellite3.apparentRectangularCoordinates.x *= Wr, s.satellite3.apparentRectangularCoordinates.y *= Wr, Wr = l / (l + s.satellite4.trueRectangularCoordinates.z / 2095), s.satellite4.apparentRectangularCoordinates.x *= Wr, s.satellite4.apparentRectangularCoordinates.y *= Wr, s;
        }, $i.rotations = function(t, e, n, a, s, l, g, _, m, b) {
          var y, M, A, R = s - g, F = t, O = e * Math.cos(a) - n * Math.sin(a), B = e * Math.sin(a) + n * Math.cos(a), H = F * Math.cos(R) - O * Math.sin(R), K = F * Math.sin(R) + O * Math.cos(R), J = B, it = H, ot = K * Math.cos(l) - J * Math.sin(l), lt = K * Math.sin(l) + J * Math.cos(l), gt = it * Math.cos(g) - ot * Math.sin(g), ut = it * Math.sin(g) + ot * Math.cos(g), St = lt, mt = 1 / 2095;
          b.x = gt * mt, b.y = ut * mt, b.z = St * mt;
          var Dt = gt * Math.sin(_) - ut * Math.cos(_), yt = gt * Math.cos(_) + ut * Math.sin(_), ue = St;
          return y = Dt, M = ue * Math.sin(m) + yt * Math.cos(m), A = ue * Math.cos(m) - yt * Math.sin(m), [y, M, A];
        }, $i.fillInPhenomenaDetails = function(t) {
          var e = 1.071374 * t.apparentRectangularCoordinates.y, n = e * e + t.apparentRectangularCoordinates.x * t.apparentRectangularCoordinates.x;
          n < 1 ? t.apparentRectangularCoordinates.z < 0 ? (t.bInTransit = !0, t.bInOccultation = !1) : (t.bInTransit = !1, t.bInOccultation = !0) : (t.bInTransit = !1, t.bInOccultation = !1);
        };
        var Cs = {};
        function Dr() {
        }
        Dr.rhoSinThetaPrime = function(t, e) {
          t = x.d2R(t);
          var n = Math.atan(0.99664719 * Math.tan(t));
          return 0.99664719 * Math.sin(n) + e / 6378149 * Math.sin(t);
        }, Dr.rhoCosThetaPrime = function(t, e) {
          t = x.d2R(t);
          var n = Math.atan(0.99664719 * Math.tan(t));
          return Math.cos(n) + e / 6378149 * Math.cos(t);
        }, Dr.radiusOfParallelOfLatitude = function(t) {
          t = x.d2R(t);
          var e = Math.sin(t);
          return 6378.14 * Math.cos(t) / Math.sqrt(1 - 0.0066943847614084 * e * e);
        }, Dr.radiusOfCurvature = function(t) {
          t = x.d2R(t);
          var e = Math.sin(t);
          return 6378.14 * (1 - 0.0066943847614084) / Math.pow(1 - 0.0066943847614084 * e * e, 1.5);
        }, Dr.distanceBetweenPoints = function(t, e, n, a) {
          t = x.d2R(t), n = x.d2R(n), e = x.d2R(e), a = x.d2R(a);
          var s = (t + n) / 2, l = (t - n) / 2, g = (e - a) / 2, _ = Math.sin(l), m = Math.cos(l), b = Math.cos(s), y = Math.sin(s), M = Math.sin(g), A = Math.cos(g), R = _ * _ * A * A + b * b * M * M, F = m * m * A * A + y * y * M * M, O = Math.atan(Math.sqrt(R / F)), B = Math.sqrt(R * F) / O, H = 2 * O * 6378.14, K = (3 * B - 1) / (2 * F), J = (3 * B + 1) / (2 * R), it = 0.00335281317789691;
          return H * (1 + it * K * y * y * m * m - it * J * b * b * _ * _);
        };
        var Ts = {};
        function Bi() {
        }
        Bi.phaseAngle = function(t, e, n) {
          return x.m360(x.r2D(Math.acos((t * t + n * n - e * e) / (2 * t * n))));
        }, Bi.phaseAngle2 = function(t, e, n, a, s, l) {
          return n = x.d2R(n), a = x.d2R(a), s = x.d2R(s), x.m360(x.r2D(Math.acos((t - e * Math.cos(n) * Math.cos(a - s)) / l)));
        }, Bi.phaseAngleRectangular = function(t, e, n, a, s, l) {
          a = x.d2R(a), s = x.d2R(s);
          var g = Math.cos(a);
          return x.m360(x.r2D(Math.acos((t * g * Math.cos(s) + e * g * Math.sin(s) + n * Math.sin(a)) / l)));
        }, Bi.illuminatedFraction = function(t) {
          return t = x.d2R(t), (1 + Math.cos(t)) / 2;
        }, Bi.illuminatedFraction2 = function(t, e, n) {
          return ((t + n) * (t + n) - e * e) / (4 * t * n);
        }, Bi.mercuryMagnitudeMuller = function(t, e, n) {
          var a = n - 50;
          return 1.16 + 5 * xt.log10(t * e) + 0.02838 * a + 1023e-7 * a * a;
        }, Bi.venusMagnitudeMuller = function(t, e, n) {
          return -4 + 5 * xt.log10(t * e) + 0.01322 * n + 4247e-10 * n * n * n;
        }, Bi.marsMagnitudeMuller = function(t, e, n) {
          return -1.3 + 5 * xt.log10(t * e) + 0.01486 * n;
        }, Bi.jupiterMagnitudeMuller = function(t, e) {
          return -8.93 + 5 * xt.log10(t * e);
        }, Bi.saturnMagnitudeMuller = function(t, e, n, a) {
          a = x.d2R(a);
          var s = Math.sin(a);
          return -8.68 + 5 * xt.log10(t * e) + 0.044 * Math.abs(n) - 2.6 * Math.sin(Math.abs(a)) + 1.25 * s * s;
        }, Bi.uranusMagnitudeMuller = function(t, e) {
          return -6.85 + 5 * xt.log10(t * e);
        }, Bi.neptuneMagnitudeMuller = function(t, e) {
          return -7.05 + 5 * xt.log10(t * e);
        }, Bi.mercuryMagnitudeAA = function(t, e, n) {
          var a = n * n, s = a * n;
          return -0.42 + 5 * xt.log10(t * e) + 0.038 * n - 273e-6 * a + 2e-6 * s;
        }, Bi.venusMagnitudeAA = function(t, e, n) {
          var a = n * n, s = a * n;
          return -4.4 + 5 * xt.log10(t * e) + 9e-4 * n + 239e-6 * a - 65e-8 * s;
        }, Bi.marsMagnitudeAA = function(t, e, n) {
          return -1.52 + 5 * xt.log10(t * e) + 0.016 * n;
        }, Bi.jupiterMagnitudeAA = function(t, e, n) {
          return -9.4 + 5 * xt.log10(t * e) + 5e-3 * n;
        }, Bi.saturnMagnitudeAA = function(t, e, n, a) {
          a = x.d2R(a);
          var s = Math.sin(a);
          return -8.88 + 5 * xt.log10(t * e) + 0.044 * Math.abs(n) - 2.6 * Math.sin(Math.abs(a)) + 1.25 * s * s;
        }, Bi.uranusMagnitudeAA = function(t, e) {
          return -7.19 + 5 * xt.log10(t * e);
        }, Bi.neptuneMagnitudeAA = function(t, e) {
          return -6.87 + 5 * xt.log10(t * e);
        }, Bi.plutoMagnitudeAA = function(t, e) {
          return -1 + 5 * xt.log10(t * e);
        };
        var T = {};
        function k() {
        }
        k.interpolate = function(t, e, n, a) {
          var s = n - e, l = a - n, g = e + a - 2 * n;
          return n + t / 2 * (s + l + t * g);
        }, k.interpolate2 = function(t, e, n, a, s, l) {
          var g = n - e, _ = a - n, m = s - a, b = l - s, y = _ - g, M = m - _, A = b - m, R = M - y, F = A - M, O = F - R, B = t * t, H = B * t, K = H * t;
          return a + t * ((_ + m) / 2 - (R + F) / 12) + B * (M / 2 - O / 24) + H * ((R + F) / 12) + K * (O / 24);
        }, k.interpolateToHalves = function(t, e, n, a) {
          return (9 * (e + n) - t - a) / 16;
        }, k.lagrangeInterpolate = function(t, e, n, a) {
          for (var s = 0, l = 1; l <= e; l++) {
            for (var g = 1, _ = 1; _ <= e; _++)
              _ !== l && (g = g * (t - n[_ - 1]) / (n[l - 1] - n[_ - 1]));
            s += g * a[l - 1];
          }
          return s;
        }, k.zero = function(t, e, n) {
          for (var a = e - t, s = n - e, l = t + n - 2 * e, g = !0, _ = 0, m = _; g; )
            m = -2 * e / (a + s + l * _), g = Math.abs(m - _) > 1e-12, g && (_ = m);
          return m;
        }, k.zeroB = function(t, e, n, a, s) {
          for (var l = e - t, g = n - e, _ = a - n, m = s - a, b = g - l, y = _ - g, M = m - _, A = y - b, R = M - y, F = R - A, O = !0, B = 0, H = B; O; ) {
            var K = B * B, J = K * B, it = J * B;
            H = (-24 * n + K * (F - 12 * y) - 2 * J * (A + R) - it * F) / (2 * (6 * g + 6 * _ - A - R)), O = Math.abs(H - B) > 1e-12, O && (B = H);
          }
          return H;
        }, k.zero2 = function(t, e, n) {
          for (var a = e - t, s = n - e, l = t + n - 2 * e, g = !0, _ = 0, m = _; g; ) {
            var b = -(2 * e + _ * (a + s + l * _)) / (a + s + 2 * l * _);
            m = _ + b, g = Math.abs(b) > 1e-12, g && (_ = m);
          }
          return m;
        }, k.zero2B = function(t, e, n, a, s) {
          for (var l = e - t, g = n - e, _ = a - n, m = s - a, b = g - l, y = _ - g, M = m - _, A = y - b, R = M - y, F = R - A, O = F / 24, B = (A + R) / 12, H = y / 2 - O, K = (g + _) / 2 - B, J = !0, it = 0, ot = it; J; ) {
            var lt = it * it, gt = lt * it, ut = gt * it, St = -(O * ut + B * gt + H * lt + K * it + n) / (4 * O * gt + 3 * B * lt + 2 * H * it + K);
            ot = it + St, J = Math.abs(St) > 1e-12, J && (it = ot);
          }
          return ot;
        };
        var I = {};
        function Y() {
        }
        Y.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_L0JupiterCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_L0JupiterCoefficients[m].a * Math.cos(S.g_L0JupiterCoefficients[m].b + S.g_L0JupiterCoefficients[m].c * e);
          var b = S.g_L1JupiterCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_L1JupiterCoefficients[m].a * Math.cos(S.g_L1JupiterCoefficients[m].b + S.g_L1JupiterCoefficients[m].c * e);
          var M = S.g_L2JupiterCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_L2JupiterCoefficients[m].a * Math.cos(S.g_L2JupiterCoefficients[m].b + S.g_L2JupiterCoefficients[m].c * e);
          var R = S.g_L3JupiterCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_L3JupiterCoefficients[m].a * Math.cos(S.g_L3JupiterCoefficients[m].b + S.g_L3JupiterCoefficients[m].c * e);
          var O = S.g_L4JupiterCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_L4JupiterCoefficients[m].a * Math.cos(S.g_L4JupiterCoefficients[m].b + S.g_L4JupiterCoefficients[m].c * e);
          var H = S.g_L5JupiterCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_L5JupiterCoefficients[m].a * Math.cos(S.g_L5JupiterCoefficients[m].b + S.g_L5JupiterCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.m360(x.r2D(J)), J;
        }, Y.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_B0JupiterCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_B0JupiterCoefficients[m].a * Math.cos(S.g_B0JupiterCoefficients[m].b + S.g_B0JupiterCoefficients[m].c * e);
          var b = S.g_B1JupiterCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_B1JupiterCoefficients[m].a * Math.cos(S.g_B1JupiterCoefficients[m].b + S.g_B1JupiterCoefficients[m].c * e);
          var M = S.g_B2JupiterCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_B2JupiterCoefficients[m].a * Math.cos(S.g_B2JupiterCoefficients[m].b + S.g_B2JupiterCoefficients[m].c * e);
          var R = S.g_B3JupiterCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_B3JupiterCoefficients[m].a * Math.cos(S.g_B3JupiterCoefficients[m].b + S.g_B3JupiterCoefficients[m].c * e);
          var O = S.g_B4JupiterCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_B4JupiterCoefficients[m].a * Math.cos(S.g_B4JupiterCoefficients[m].b + S.g_B4JupiterCoefficients[m].c * e);
          var H = S.g_B5JupiterCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_B5JupiterCoefficients[m].a * Math.cos(S.g_B5JupiterCoefficients[m].b + S.g_B5JupiterCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.r2D(J), J;
        }, Y.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_R0JupiterCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_R0JupiterCoefficients[m].a * Math.cos(S.g_R0JupiterCoefficients[m].b + S.g_R0JupiterCoefficients[m].c * e);
          var b = S.g_R1JupiterCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_R1JupiterCoefficients[m].a * Math.cos(S.g_R1JupiterCoefficients[m].b + S.g_R1JupiterCoefficients[m].c * e);
          var M = S.g_R2JupiterCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_R2JupiterCoefficients[m].a * Math.cos(S.g_R2JupiterCoefficients[m].b + S.g_R2JupiterCoefficients[m].c * e);
          var R = S.g_R3JupiterCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_R3JupiterCoefficients[m].a * Math.cos(S.g_R3JupiterCoefficients[m].b + S.g_R3JupiterCoefficients[m].c * e);
          var O = S.g_R4JupiterCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_R4JupiterCoefficients[m].a * Math.cos(S.g_R4JupiterCoefficients[m].b + S.g_R4JupiterCoefficients[m].c * e);
          var H = S.g_R5JupiterCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_R5JupiterCoefficients[m].a * Math.cos(S.g_R5JupiterCoefficients[m].b + S.g_R5JupiterCoefficients[m].c * e);
          return (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
        };
        var at = {};
        function nt() {
        }
        nt.calculate = function(t, e) {
          return nt.calculateIter(t, e, 53);
        }, nt.calculateIter = function(t, e, n) {
          t = x.d2R(t);
          var a = x.PI(), s = 1;
          t < 0 && (s = -1), t = Math.abs(t) / (2 * a), t = (t - r.truncate(t)) * 2 * a * s, t < 0 && (t += 2 * a), s = 1, t > a && (s = -1), t > a && (t = 2 * a - t);
          for (var l = a / 2, g = a / 4, _ = 0; _ < n; _++) {
            var m = l - e * Math.sin(l);
            t > m ? l += g : l -= g, g /= 2;
          }
          return x.r2D(l) * s;
        };
        var Tt = {};
        function Rt() {
        }
        Rt.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_L0MarsCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_L0MarsCoefficients[m].a * Math.cos(S.g_L0MarsCoefficients[m].b + S.g_L0MarsCoefficients[m].c * e);
          var b = S.g_L1MarsCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_L1MarsCoefficients[m].a * Math.cos(S.g_L1MarsCoefficients[m].b + S.g_L1MarsCoefficients[m].c * e);
          var M = S.g_L2MarsCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_L2MarsCoefficients[m].a * Math.cos(S.g_L2MarsCoefficients[m].b + S.g_L2MarsCoefficients[m].c * e);
          var R = S.g_L3MarsCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_L3MarsCoefficients[m].a * Math.cos(S.g_L3MarsCoefficients[m].b + S.g_L3MarsCoefficients[m].c * e);
          var O = S.g_L4MarsCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_L4MarsCoefficients[m].a * Math.cos(S.g_L4MarsCoefficients[m].b + S.g_L4MarsCoefficients[m].c * e);
          var H = S.g_L5MarsCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_L5MarsCoefficients[m].a * Math.cos(S.g_L5MarsCoefficients[m].b + S.g_L5MarsCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.m360(x.r2D(J)), J;
        }, Rt.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0MarsCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0MarsCoefficients[_].a * Math.cos(S.g_B0MarsCoefficients[_].b + S.g_B0MarsCoefficients[_].c * e);
          var m = S.g_B1MarsCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1MarsCoefficients[_].a * Math.cos(S.g_B1MarsCoefficients[_].b + S.g_B1MarsCoefficients[_].c * e);
          var y = S.g_B2MarsCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2MarsCoefficients[_].a * Math.cos(S.g_B2MarsCoefficients[_].b + S.g_B2MarsCoefficients[_].c * e);
          var A = S.g_B3MarsCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3MarsCoefficients[_].a * Math.cos(S.g_B3MarsCoefficients[_].b + S.g_B3MarsCoefficients[_].c * e);
          var F = S.g_B4MarsCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4MarsCoefficients[_].a * Math.cos(S.g_B4MarsCoefficients[_].b + S.g_B4MarsCoefficients[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        }, Rt.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_R0MarsCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_R0MarsCoefficients[_].a * Math.cos(S.g_R0MarsCoefficients[_].b + S.g_R0MarsCoefficients[_].c * e);
          var m = S.g_R1MarsCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_R1MarsCoefficients[_].a * Math.cos(S.g_R1MarsCoefficients[_].b + S.g_R1MarsCoefficients[_].c * e);
          var y = S.g_R2MarsCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_R2MarsCoefficients[_].a * Math.cos(S.g_R2MarsCoefficients[_].b + S.g_R2MarsCoefficients[_].c * e);
          var A = S.g_R3MarsCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_R3MarsCoefficients[_].a * Math.cos(S.g_R3MarsCoefficients[_].b + S.g_R3MarsCoefficients[_].c * e);
          var F = S.g_R4MarsCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_R4MarsCoefficients[_].a * Math.cos(S.g_R4MarsCoefficients[_].b + S.g_R4MarsCoefficients[_].c * e);
          return (g + b * e + M * n + R * a + O * s) / 1e8;
        };
        var Ae = {};
        function Wt() {
        }
        Wt.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_L0MercuryCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_L0MercuryCoefficients[m].a * Math.cos(S.g_L0MercuryCoefficients[m].b + S.g_L0MercuryCoefficients[m].c * e);
          var b = S.g_L1MercuryCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_L1MercuryCoefficients[m].a * Math.cos(S.g_L1MercuryCoefficients[m].b + S.g_L1MercuryCoefficients[m].c * e);
          var M = S.g_L2MercuryCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_L2MercuryCoefficients[m].a * Math.cos(S.g_L2MercuryCoefficients[m].b + S.g_L2MercuryCoefficients[m].c * e);
          var R = S.g_L3MercuryCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_L3MercuryCoefficients[m].a * Math.cos(S.g_L3MercuryCoefficients[m].b + S.g_L3MercuryCoefficients[m].c * e);
          var O = S.g_L4MercuryCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_L4MercuryCoefficients[m].a * Math.cos(S.g_L4MercuryCoefficients[m].b + S.g_L4MercuryCoefficients[m].c * e);
          var H = S.g_L5MercuryCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_L5MercuryCoefficients[m].a * Math.cos(S.g_L5MercuryCoefficients[m].b + S.g_L5MercuryCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.m360(x.r2D(J)), J;
        }, Wt.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0MercuryCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0MercuryCoefficients[_].a * Math.cos(S.g_B0MercuryCoefficients[_].b + S.g_B0MercuryCoefficients[_].c * e);
          var m = S.g_B1MercuryCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1MercuryCoefficients[_].a * Math.cos(S.g_B1MercuryCoefficients[_].b + S.g_B1MercuryCoefficients[_].c * e);
          var y = S.g_B2MercuryCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2MercuryCoefficients[_].a * Math.cos(S.g_B2MercuryCoefficients[_].b + S.g_B2MercuryCoefficients[_].c * e);
          var A = S.g_B3MercuryCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3MercuryCoefficients[_].a * Math.cos(S.g_B3MercuryCoefficients[_].b + S.g_B3MercuryCoefficients[_].c * e);
          var F = S.g_B4MercuryCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4MercuryCoefficients[_].a * Math.cos(S.g_B4MercuryCoefficients[_].b + S.g_B4MercuryCoefficients[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        }, Wt.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = S.g_R0MercuryCoefficients.length, l = 0, g;
          for (g = 0; g < s; g++)
            l += S.g_R0MercuryCoefficients[g].a * Math.cos(S.g_R0MercuryCoefficients[g].b + S.g_R0MercuryCoefficients[g].c * e);
          var _ = S.g_R1MercuryCoefficients.length, m = 0;
          for (g = 0; g < _; g++)
            m += S.g_R1MercuryCoefficients[g].a * Math.cos(S.g_R1MercuryCoefficients[g].b + S.g_R1MercuryCoefficients[g].c * e);
          var b = S.g_R2MercuryCoefficients.length, y = 0;
          for (g = 0; g < b; g++)
            y += S.g_R2MercuryCoefficients[g].a * Math.cos(S.g_R2MercuryCoefficients[g].b + S.g_R2MercuryCoefficients[g].c * e);
          var M = S.g_R3MercuryCoefficients.length, A = 0;
          for (g = 0; g < M; g++)
            A += S.g_R3MercuryCoefficients[g].a * Math.cos(S.g_R3MercuryCoefficients[g].b + S.g_R3MercuryCoefficients[g].c * e);
          return (l + m * e + y * n + A * a) / 1e8;
        };
        var Fe = {};
        function Se() {
        }
        Se.meanLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = a * e;
          return x.m360(218.3164477 + 481267.88123421 * e - 15786e-7 * n + a / 538841 - s / 65194e3);
        }, Se.meanElongation = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = a * e;
          return x.m360(297.8501921 + 445267.1114034 * e - 18819e-7 * n + a / 545868 - s / 113065e3);
        }, Se.meanAnomaly = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = a * e;
          return x.m360(134.9633964 + 477198.8675055 * e + 87414e-7 * n + a / 69699 - s / 14712e3);
        }, Se.argumentOfLatitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = a * e;
          return x.m360(93.272095 + 483202.0175233 * e - 36539e-7 * n - a / 3526e3 + s / 86331e4);
        }, Se.meanLongitudeAscendingNode = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = a * e;
          return x.m360(125.0445479 - 1934.1362891 * e + 20754e-7 * n + a / 467441 - s / 60616e3);
        }, Se.meanLongitudePerigee = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = a * e;
          return x.m360(83.3532465 + 4069.0137287 * e - 0.01032 * n - a / 80053 + s / 18999e3);
        }, Se.trueLongitudeAscendingNode = function(t) {
          var e = Se.meanLongitudeAscendingNode(t), n = Se.meanElongation(t);
          n = x.d2R(n);
          var a = ii.sunMeanAnomaly(t);
          a = x.d2R(a);
          var s = Se.meanAnomaly(t);
          s = x.d2R(s);
          var l = Se.argumentOfLatitude(t);
          return l = x.d2R(l), e -= 1.4979 * Math.sin(2 * (n - l)), e -= 0.15 * Math.sin(a), e -= 0.1226 * Math.sin(2 * n), e += 0.1176 * Math.sin(2 * l), e -= 0.0801 * Math.sin(2 * (s - l)), x.m360(e);
        }, Se.eclipticLongitude = function(t) {
          var e = Se.meanLongitude(t), n = e;
          e = x.d2R(e);
          var a = Se.meanElongation(t);
          a = x.d2R(a);
          var s = ii.sunMeanAnomaly(t);
          s = x.d2R(s);
          var l = Se.meanAnomaly(t);
          l = x.d2R(l);
          var g = Se.argumentOfLatitude(t);
          g = x.d2R(g);
          var _ = ii.eccentricity(t), m = (t - 2451545) / 36525, b = x.m360(119.75 + 131.849 * m);
          b = x.d2R(b);
          var y = x.m360(53.09 + 479264.29 * m);
          y = x.d2R(y);
          var M = x.m360(313.45 + 481266.484 * m);
          M = x.d2R(M);
          var A = S.g_MoonCoefficients1.length;
          console.assert(S.g_MoonCoefficients2.length === A);
          for (var R = 0, F = 0; F < A; F++) {
            var O = S.g_MoonCoefficients2[F].a * Math.sin(S.g_MoonCoefficients1[F].d * a + S.g_MoonCoefficients1[F].m * s + S.g_MoonCoefficients1[F].mdash * l + S.g_MoonCoefficients1[F].f * g);
            S.g_MoonCoefficients1[F].m && (O *= _), R += O;
          }
          R += 3958 * Math.sin(b), R += 1962 * Math.sin(e - g), R += 318 * Math.sin(y);
          var B = ci.nutationInLongitude(t);
          return x.m360(n + R / 1e6 + B / 3600);
        }, Se.eclipticLatitude = function(t) {
          var e = Se.meanLongitude(t);
          e = x.d2R(e);
          var n = Se.meanElongation(t);
          n = x.d2R(n);
          var a = ii.sunMeanAnomaly(t);
          a = x.d2R(a);
          var s = Se.meanAnomaly(t);
          s = x.d2R(s);
          var l = Se.argumentOfLatitude(t);
          l = x.d2R(l);
          var g = ii.eccentricity(t), _ = (t - 2451545) / 36525, m = x.m360(119.75 + 131.849 * _);
          m = x.d2R(m);
          var b = x.m360(53.09 + 479264.29 * _);
          b = x.d2R(b);
          var y = x.m360(313.45 + 481266.484 * _);
          y = x.d2R(y);
          var M = S.g_MoonCoefficients3.length;
          console.assert(S.g_MoonCoefficients4.length === M);
          for (var A = 0, R = 0; R < M; R++) {
            var F = S.g_MoonCoefficients4[R] * Math.sin(S.g_MoonCoefficients3[R].d * n + S.g_MoonCoefficients3[R].m * a + S.g_MoonCoefficients3[R].mdash * s + S.g_MoonCoefficients3[R].f * l);
            S.g_MoonCoefficients3[R].m && (F *= g), A += F;
          }
          return A -= 2235 * Math.sin(e), A += 382 * Math.sin(y), A += 175 * Math.sin(m - l), A += 175 * Math.sin(m + l), A += 127 * Math.sin(e - s), A -= 115 * Math.sin(e + s), A / 1e6;
        }, Se.radiusVector = function(t) {
          var e = Se.meanLongitude(t);
          e = x.d2R(e);
          var n = Se.meanElongation(t);
          n = x.d2R(n);
          var a = ii.sunMeanAnomaly(t);
          a = x.d2R(a);
          var s = Se.meanAnomaly(t);
          s = x.d2R(s);
          var l = Se.argumentOfLatitude(t);
          l = x.d2R(l);
          var g = ii.eccentricity(t), _ = (t - 2451545) / 36525, m = x.m360(119.75 + 131.849 * _);
          m = x.d2R(m);
          var b = x.m360(53.09 + 479264.29 * _);
          b = x.d2R(b);
          var y = x.m360(313.45 + 481266.484 * _);
          y = x.d2R(y);
          var M = S.g_MoonCoefficients1.length;
          console.assert(S.g_MoonCoefficients2.length === M);
          for (var A = 0, R = 0; R < M; R++) {
            var F = S.g_MoonCoefficients2[R].b * Math.cos(S.g_MoonCoefficients1[R].d * n + S.g_MoonCoefficients1[R].m * a + S.g_MoonCoefficients1[R].mdash * s + S.g_MoonCoefficients1[R].f * l);
            S.g_MoonCoefficients1[R].m && (F *= g), A += F;
          }
          return 385000.56 + A / 1e3;
        }, Se.radiusVectorToHorizontalParallax = function(t) {
          return x.r2D(Math.asin(6378.14 / t));
        }, Se.horizontalParallaxToRadiusVector = function(t) {
          return 6378.14 / Math.sin(x.d2R(t));
        };
        var vr = {};
        function Lt(t, e, n, a) {
          this.d = 0, this.m = 0, this.mdash = 0, this.f = 0, this.d = t, this.m = e, this.mdash = n, this.f = a;
        }
        var Gr = {};
        function ye(t, e) {
          this.a = 0, this.b = 0, this.a = t, this.b = e;
        }
        var ca = {};
        function Ur() {
        }
        Ur.geocentricElongation = function(t, e, n, a) {
          return t = x.d2R(t * 15), n = x.d2R(n * 15), e = x.d2R(e), a = x.d2R(a), x.r2D(Math.acos(Math.sin(a) * Math.sin(e) + Math.cos(a) * Math.cos(e) * Math.cos(n - t)));
        }, Ur.phaseAngle = function(t, e, n) {
          return t = x.d2R(t), x.m360(x.r2D(Math.atan2(n * Math.sin(t), e - n * Math.cos(t))));
        }, Ur.illuminatedFraction = function(t) {
          return t = x.d2R(t), (1 + Math.cos(t)) / 2;
        }, Ur.positionAngle = function(t, e, n, a) {
          return t = x.h2R(t), n = x.h2R(n), e = x.d2R(e), a = x.d2R(a), x.m360(x.r2D(Math.atan2(Math.cos(e) * Math.sin(t - n), Math.sin(e) * Math.cos(a) - Math.cos(e) * Math.sin(a) * Math.cos(t - n))));
        };
        var Ms = {};
        function Aa() {
        }
        Aa.k = function(t) {
          return 13.4223 * (t - 2000.05);
        }, Aa.passageThroNode = function(t) {
          var e = t / 1342.23, n = e * e, a = n * e, s = a * e, l = x.m360(183.638 + 331.73735682 * t + 14852e-7 * n + 209e-8 * a - 1e-8 * s), g = x.m360(17.4006 + 26.8203725 * t + 1186e-7 * n + 6e-8 * a), _ = x.m360(38.3776 + 355.52747313 * t + 0.0123499 * n + 14627e-9 * a - 69e-9 * s), m = x.m360(123.9767 - 1.44098956 * t + 20608e-7 * n + 214e-8 * a - 16e-9 * s), b = x.m360(299.75 + 132.85 * e - 9173e-6 * n), y = x.m360(m + 272.75 - 2.3 * e), M = 1 - 2516e-6 * e - 74e-7 * n;
          l = x.d2R(l);
          var A = 2 * l, R = A * A;
          g = x.d2R(g), _ = x.d2R(_);
          var F = 2 * _;
          m = x.d2R(m), b = x.d2R(b), y = x.d2R(y);
          var O = 24515651619e-4 + 27.212220817 * t + 2762e-7 * n + 21e-9 * a - 88e-12 * s - 0.4721 * Math.sin(_) - 0.1649 * Math.sin(A) - 0.0868 * Math.sin(A - _) + 84e-4 * Math.sin(A + _) - M * 83e-4 * Math.sin(A - g) - M * 39e-4 * Math.sin(A - g - _) + 34e-4 * Math.sin(F) - 31e-4 * Math.sin(A - F) + M * 3e-3 * Math.sin(A + g) + M * 28e-4 * Math.sin(g - _) + M * 26e-4 * Math.sin(g) + 25e-4 * Math.sin(R) + 24e-4 * Math.sin(l) + M * 22e-4 * Math.sin(g + _) + 17e-4 * Math.sin(m) + 14e-4 * Math.sin(R - _) + M * 5e-4 * Math.sin(A + g - _) + M * 4e-4 * Math.sin(A - g + _) - M * 3e-4 * Math.sin(A - g * g) + M * 3e-4 * Math.sin(R - g) + 3e-4 * Math.sin(b) + 3e-4 * Math.sin(y);
          return O;
        };
        var xs = {};
        function Gi() {
        }
        Gi.k = function(t) {
          return 13.2555 * (t - 1999.97);
        }, Gi.meanPerigee = function(t) {
          var e = t / 1325.55, n = e * e, a = n * e, s = a * e;
          return 24515346698e-4 + 27.55454989 * t - 6691e-7 * n - 1098e-9 * a + 52e-10 * s;
        }, Gi.meanApogee = function(t) {
          return Gi.meanPerigee(t);
        }, Gi.truePerigee = function(t) {
          var e = Gi.meanPerigee(t), n = t / 1325.55, a = n * n, s = a * n, l = s * n, g = x.m360(171.9179 + 335.9106046 * t - 0.0100383 * a - 1156e-8 * s + 55e-9 * l);
          g = x.d2R(g);
          var _ = x.m360(347.3477 + 27.1577721 * t - 813e-6 * a - 1e-6 * s);
          _ = x.d2R(_);
          var m = x.m360(316.6109 + 364.5287911 * t - 0.0125053 * a - 148e-7 * s);
          m = x.d2R(m);
          for (var b = S.g_MoonPerigeeApogeeCoefficients1.length, y = 0, M = 0; M < b; M++)
            y += S.g_MoonPerigeeApogeeCoefficients1[M].c * Math.sin(g * S.g_MoonPerigeeApogeeCoefficients1[M].d + _ * S.g_MoonPerigeeApogeeCoefficients1[M].m + m * S.g_MoonPerigeeApogeeCoefficients1[M].f + n * S.g_MoonPerigeeApogeeCoefficients1[M].t);
          return e + y;
        }, Gi.trueApogee = function(t) {
          var e = Gi.meanApogee(t), n = t / 1325.55, a = n * n, s = a * n, l = s * n, g = x.m360(171.9179 + 335.9106046 * t - 0.0100383 * a - 1156e-8 * s + 55e-9 * l);
          g = x.d2R(g);
          var _ = x.m360(347.3477 + 27.1577721 * t - 813e-6 * a - 1e-6 * s);
          _ = x.d2R(_);
          var m = x.m360(316.6109 + 364.5287911 * t - 0.0125053 * a - 148e-7 * s);
          m = x.d2R(m);
          for (var b = S.g_MoonPerigeeApogeeCoefficients2.length, y = 0, M = 0; M < b; M++)
            y += (S.g_MoonPerigeeApogeeCoefficients2[M].c + n * S.g_MoonPerigeeApogeeCoefficients2[M].t) * Math.sin(g * S.g_MoonPerigeeApogeeCoefficients2[M].d + _ * S.g_MoonPerigeeApogeeCoefficients2[M].m + m * S.g_MoonPerigeeApogeeCoefficients2[M].f);
          return e + y;
        }, Gi.perigeeParallax = function(t) {
          var e = t / 1325.55, n = e * e, a = n * e, s = a * e, l = x.m360(171.9179 + 335.9106046 * t - 0.0100383 * n - 1156e-8 * a + 55e-9 * s);
          l = x.d2R(l);
          var g = x.m360(347.3477 + 27.1577721 * t - 813e-6 * n - 1e-6 * a);
          g = x.d2R(g);
          var _ = x.m360(316.6109 + 364.5287911 * t - 0.0125053 * n - 148e-7 * a);
          _ = x.d2R(_);
          for (var m = S.g_MoonPerigeeApogeeCoefficients3.length, b = 3629.215, y = 0; y < m; y++)
            b += (S.g_MoonPerigeeApogeeCoefficients3[y].c + e * S.g_MoonPerigeeApogeeCoefficients3[y].t) * Math.cos(l * S.g_MoonPerigeeApogeeCoefficients3[y].d + g * S.g_MoonPerigeeApogeeCoefficients3[y].m + _ * S.g_MoonPerigeeApogeeCoefficients3[y].f);
          return b / 3600;
        }, Gi.apogeeParallax = function(t) {
          var e = t / 1325.55, n = e * e, a = n * e, s = a * e, l = x.m360(171.9179 + 335.9106046 * t - 0.0100383 * n - 1156e-8 * a + 55e-9 * s);
          l = x.d2R(l);
          var g = x.m360(347.3477 + 27.1577721 * t - 813e-6 * n - 1e-6 * a);
          g = x.d2R(g);
          var _ = x.m360(316.6109 + 364.5287911 * t - 0.0125053 * n - 148e-7 * a);
          _ = x.d2R(_);
          for (var m = S.g_MoonPerigeeApogeeCoefficients4.length, b = 3245.251, y = 0; y < m; y++)
            b += (S.g_MoonPerigeeApogeeCoefficients4[y].c + e * S.g_MoonPerigeeApogeeCoefficients4[y].t) * Math.cos(l * S.g_MoonPerigeeApogeeCoefficients4[y].d + g * S.g_MoonPerigeeApogeeCoefficients4[y].m + _ * S.g_MoonPerigeeApogeeCoefficients4[y].f);
          return b / 3600;
        };
        var qn = {};
        function dt(t, e, n, a, s) {
          this.d = 0, this.m = 0, this.f = 0, this.c = 0, this.t = 0, this.d = t, this.m = e, this.f = n, this.c = a, this.t = s;
        }
        var zi = {};
        function Ar() {
        }
        Ar.k = function(t) {
          return 12.3685 * (t - 2e3);
        }, Ar.meanPhase = function(t) {
          var e = t / 1236.85, n = e * e, a = n * e, s = a * e;
          return 245155009766e-5 + 29.530588861 * t + 15437e-8 * n - 15e-8 * a + 73e-11 * s;
        }, Ar.truePhase = function(t) {
          var e = Ar.meanPhase(t), n = t / 1236.85, a = n * n, s = a * n, l = s * n, g = 1 - 2516e-6 * n - 74e-7 * a, _ = g * g, m = x.m360(2.5534 + 29.1053567 * t - 14e-7 * a - 11e-8 * s);
          m = x.d2R(m);
          var b = x.m360(201.5643 + 385.81693528 * t + 0.0107582 * a + 1238e-8 * s - 58e-9 * l);
          b = x.d2R(b);
          var y = x.m360(160.7108 + 390.67050284 * t - 16118e-7 * a - 227e-8 * s + 1e-8 * l);
          y = x.d2R(y);
          var M = x.m360(124.7746 - 1.56375588 * t + 20672e-7 * a + 215e-8 * s);
          M = x.d2R(M);
          var A = x.m360(299.77 + 0.107408 * t - 9173e-6 * a);
          A = x.d2R(A);
          var R = x.m360(251.88 + 0.016321 * t);
          R = x.d2R(R);
          var F = x.m360(251.83 + 26.651886 * t);
          F = x.d2R(F);
          var O = x.m360(349.42 + 36.412478 * t);
          O = x.d2R(O);
          var B = x.m360(84.66 + 18.206239 * t);
          B = x.d2R(B);
          var H = x.m360(141.74 + 53.303771 * t);
          H = x.d2R(H);
          var K = x.m360(207.14 + 2.453732 * t);
          K = x.d2R(K);
          var J = x.m360(154.84 + 7.30686 * t);
          J = x.d2R(J);
          var it = x.m360(34.52 + 27.261239 * t);
          it = x.d2R(it);
          var ot = x.m360(207.19 + 0.121824 * t);
          ot = x.d2R(ot);
          var lt = x.m360(291.34 + 1.844379 * t);
          lt = x.d2R(lt);
          var gt = x.m360(161.72 + 24.198154 * t);
          gt = x.d2R(gt);
          var ut = x.m360(239.56 + 25.513099 * t);
          ut = x.d2R(ut);
          var St = x.m360(331.55 + 3.592518 * t);
          St = x.d2R(St);
          var mt = Math.floor(t), Dt = t - mt;
          if (Dt < 0 && (Dt = 1 + Dt), Dt)
            if (Dt === 0.25 || Dt === 0.75) {
              var yt = -0.62801 * Math.sin(b) + 0.17172 * g * Math.sin(m) + -0.01183 * g * Math.sin(b + m) + 862e-5 * Math.sin(2 * b) + 804e-5 * Math.sin(2 * y) + 454e-5 * g * Math.sin(b - m) + 204e-5 * _ * Math.sin(2 * m) + -18e-4 * Math.sin(b - 2 * y) + -7e-4 * Math.sin(b + 2 * y) + -4e-4 * Math.sin(3 * b) + -34e-5 * g * Math.sin(2 * b - m) + 32e-5 * g * Math.sin(m + 2 * y) + 32e-5 * g * Math.sin(m - 2 * y) + -28e-5 * _ * Math.sin(b + 2 * m) + 27e-5 * g * Math.sin(2 * b + m) + -17e-5 * Math.sin(M) + -5e-5 * Math.sin(b - m - 2 * y) + 4e-5 * Math.sin(2 * b + 2 * y) + -4e-5 * Math.sin(b + m + 2 * y) + 4e-5 * Math.sin(b - 2 * m) + 3e-5 * Math.sin(b + m - 2 * y) + 3e-5 * Math.sin(3 * m) + 2e-5 * Math.sin(2 * b - 2 * y) + 2e-5 * Math.sin(b - m + 2 * y) + -2e-5 * Math.sin(3 * b + m);
              e += yt;
              var ue = 306e-5 - 38e-5 * g * Math.cos(m) + 26e-5 * Math.cos(b) - 2e-5 * Math.cos(b - m) + 2e-5 * Math.cos(b + m) + 2e-5 * Math.cos(2 * y);
              Dt === 0.25 ? e += ue : e -= ue;
            } else if (Dt === 0.5) {
              var yt = -0.40614 * Math.sin(b) + 0.17302 * g * Math.sin(m) + 0.01614 * Math.sin(2 * b) + 0.01043 * Math.sin(2 * y) + 734e-5 * g * Math.sin(b - m) + -514e-5 * g * Math.sin(b + m) + 209e-5 * _ * Math.sin(2 * m) + -111e-5 * Math.sin(b - 2 * y) + -57e-5 * Math.sin(b + 2 * y) + 56e-5 * g * Math.sin(2 * b + m) + -42e-5 * Math.sin(3 * b) + 42e-5 * g * Math.sin(m + 2 * y) + 38e-5 * g * Math.sin(m - 2 * y) + -24e-5 * g * Math.sin(2 * b - m) + -17e-5 * Math.sin(M) + -7e-5 * Math.sin(b + 2 * m) + 4e-5 * Math.sin(2 * b - 2 * y) + 4e-5 * Math.sin(3 * m) + 3e-5 * Math.sin(b + m - 2 * y) + 3e-5 * Math.sin(2 * b + 2 * y) + -3e-5 * Math.sin(b + m + 2 * y) + 3e-5 * Math.sin(b - m + 2 * y) + -2e-5 * Math.sin(b - m - 2 * y) + -2e-5 * Math.sin(3 * b + m) + 2e-5 * Math.sin(4 * b);
              e += yt;
            } else
              console.assert(!1);
          else {
            var yt = -0.4072 * Math.sin(b) + 0.17241 * g * Math.sin(m) + 0.01608 * Math.sin(2 * b) + 0.01039 * Math.sin(2 * y) + 739e-5 * g * Math.sin(b - m) + -514e-5 * g * Math.sin(b + m) + 208e-5 * _ * Math.sin(2 * m) + -111e-5 * Math.sin(b - 2 * y) + -57e-5 * Math.sin(b + 2 * y) + 56e-5 * g * Math.sin(2 * b + m) + -42e-5 * Math.sin(3 * b) + 42e-5 * g * Math.sin(m + 2 * y) + 38e-5 * g * Math.sin(m - 2 * y) + -24e-5 * g * Math.sin(2 * b - m) + -17e-5 * Math.sin(M) + -7e-5 * Math.sin(b + 2 * m) + 4e-5 * Math.sin(2 * b - 2 * y) + 4e-5 * Math.sin(3 * m) + 3e-5 * Math.sin(b + m - 2 * y) + 3e-5 * Math.sin(2 * b + 2 * y) + -3e-5 * Math.sin(b + m + 2 * y) + 3e-5 * Math.sin(b - m + 2 * y) + -2e-5 * Math.sin(b - m - 2 * y) + -2e-5 * Math.sin(3 * b + m) + 2e-5 * Math.sin(4 * b);
            e += yt;
          }
          var _e = 325e-6 * Math.sin(A) + 165e-6 * Math.sin(R) + 164e-6 * Math.sin(F) + 126e-6 * Math.sin(O) + 11e-5 * Math.sin(B) + 62e-6 * Math.sin(H) + 6e-5 * Math.sin(K) + 56e-6 * Math.sin(J) + 47e-6 * Math.sin(it) + 42e-6 * Math.sin(ot) + 4e-5 * Math.sin(lt) + 37e-6 * Math.sin(gt) + 35e-6 * Math.sin(ut) + 23e-6 * Math.sin(St);
          return e += _e, e;
        };
        var Xn = {};
        function br() {
        }
        br.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_L0NC.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_L0NC[_].a * Math.cos(S.g_L0NC[_].b + S.g_L0NC[_].c * e);
          var m = S.g_L1NC.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_L1NC[_].a * Math.cos(S.g_L1NC[_].b + S.g_L1NC[_].c * e);
          var y = S.g_L2NC.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_L2NC[_].a * Math.cos(S.g_L2NC[_].b + S.g_L2NC[_].c * e);
          var A = S.g_L3NC.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_L3NC[_].a * Math.cos(S.g_L3NC[_].b + S.g_L3NC[_].c * e);
          var F = S.g_L4NC.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_L4NC[_].a * Math.cos(S.g_L4NC[_].b + S.g_L4NC[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.m360(x.r2D(B)), B;
        }, br.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0NC.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0NC[_].a * Math.cos(S.g_B0NC[_].b + S.g_B0NC[_].c * e);
          var m = S.g_B1NC.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1NC[_].a * Math.cos(S.g_B1NC[_].b + S.g_B1NC[_].c * e);
          var y = S.g_B2NC.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2NC[_].a * Math.cos(S.g_B2NC[_].b + S.g_B2NC[_].c * e);
          var A = S.g_B3NC.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3NC[_].a * Math.cos(S.g_B3NC[_].b + S.g_B3NC[_].c * e);
          var F = S.g_B4NC.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4NC[_].a * Math.cos(S.g_B4NC[_].b + S.g_B4NC[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        }, br.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = S.g_R0NC.length, l = 0, g;
          for (g = 0; g < s; g++)
            l += S.g_R0NC[g].a * Math.cos(S.g_R0NC[g].b + S.g_R0NC[g].c * e);
          var _ = S.g_R1NC.length, m = 0;
          for (g = 0; g < _; g++)
            m += S.g_R1NC[g].a * Math.cos(S.g_R1NC[g].b + S.g_R1NC[g].c * e);
          var b = S.g_R2NC.length, y = 0;
          for (g = 0; g < b; g++)
            y += S.g_R2NC[g].a * Math.cos(S.g_R2NC[g].b + S.g_R2NC[g].c * e);
          var M = S.g_R3NC.length, A = 0;
          for (g = 0; g < M; g++)
            A += S.g_R3NC[g].a * Math.cos(S.g_R3NC[g].b + S.g_R3NC[g].c * e);
          return (l + m * e + y * n + A * a) / 1e8;
        };
        var Ls = {};
        function ci() {
        }
        ci.nutationInLongitude = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = 297.85036 + 445267.11148 * e - 19142e-7 * n + a / 189474;
          s = x.m360(s);
          var l = 357.52772 + 35999.05034 * e - 1603e-7 * n - a / 3e5;
          l = x.m360(l);
          var g = 134.96298 + 477198.867398 * e + 86972e-7 * n + a / 56250;
          g = x.m360(g);
          var _ = 93.27191 + 483202.017538 * e - 36825e-7 * n + a / 327270;
          _ = x.m360(_);
          var m = 125.04452 - 1934.136261 * e + 20708e-7 * n + a / 45e4;
          m = x.m360(m);
          for (var b = S.g_NuC.length, y = 0, M = 0; M < b; M++) {
            var A = S.g_NuC[M].d * s + S.g_NuC[M].m * l + S.g_NuC[M].mprime * g + S.g_NuC[M].f * _ + S.g_NuC[M].omega * m, R = x.d2R(A);
            y += (S.g_NuC[M].sincoeff1 + S.g_NuC[M].sincoeff2 * e) * Math.sin(R) * 1e-4;
          }
          return y;
        }, ci.nutationInObliquity = function(t) {
          var e = (t - 2451545) / 36525, n = e * e, a = n * e, s = 297.85036 + 445267.11148 * e - 19142e-7 * n + a / 189474;
          s = x.m360(s);
          var l = 357.52772 + 35999.05034 * e - 1603e-7 * n - a / 3e5;
          l = x.m360(l);
          var g = 134.96298 + 477198.867398 * e + 86972e-7 * n + a / 56250;
          g = x.m360(g);
          var _ = 93.27191 + 483202.017538 * e - 36825e-7 * n + a / 327270;
          _ = x.m360(_);
          var m = 125.04452 - 1934.136261 * e + 20708e-7 * n + a / 45e4;
          m = x.m360(m);
          for (var b = S.g_NuC.length, y = 0, M = 0; M < b; M++) {
            var A = S.g_NuC[M].d * s + S.g_NuC[M].m * l + S.g_NuC[M].mprime * g + S.g_NuC[M].f * _ + S.g_NuC[M].omega * m, R = x.d2R(A);
            y += (S.g_NuC[M].coscoeff1 + S.g_NuC[M].coscoeff2 * e) * Math.cos(R) * 1e-4;
          }
          return y;
        }, ci.nutationInRightAscension = function(t, e, n, a, s) {
          return t = x.h2R(t), e = x.d2R(e), n = x.d2R(n), (Math.cos(n) + Math.sin(n) * Math.sin(t) * Math.tan(e)) * a - Math.cos(t) * Math.tan(e) * s;
        }, ci.nutationInDeclination = function(t, e, n, a, s) {
          return t = x.h2R(t), e = x.d2R(e), n = x.d2R(n), Math.sin(n) * Math.cos(t) * a + Math.sin(t) * s;
        }, ci.meanObliquityOfEcliptic = function(t) {
          var e = (t - 2451545) / 3652500, n = e * e, a = n * e, s = a * e, l = s * e, g = l * e, _ = g * e, m = _ * e, b = m * e, y = b * e;
          return x.dmS2D(23, 26, 21.448) - x.dmS2D(0, 0, 4680.93) * e - x.dmS2D(0, 0, 1.55) * n + x.dmS2D(0, 0, 1999.25) * a - x.dmS2D(0, 0, 51.38) * s - x.dmS2D(0, 0, 249.67) * l - x.dmS2D(0, 0, 39.05) * g + x.dmS2D(0, 0, 7.12) * _ + x.dmS2D(0, 0, 27.87) * m + x.dmS2D(0, 0, 5.79) * b + x.dmS2D(0, 0, 2.45) * y;
        }, ci.trueObliquityOfEcliptic = function(t) {
          return ci.meanObliquityOfEcliptic(t) + x.dmS2D(0, 0, ci.nutationInObliquity(t));
        };
        var Yn = {};
        function fe(t, e, n, a, s, l, g, _, m) {
          this.d = 0, this.m = 0, this.mprime = 0, this.f = 0, this.omega = 0, this.sincoeff1 = 0, this.sincoeff2 = 0, this.coscoeff1 = 0, this.coscoeff2 = 0, this.d = t, this.m = e, this.mprime = n, this.f = a, this.omega = s, this.sincoeff1 = l, this.sincoeff2 = g, this.coscoeff1 = _, this.coscoeff2 = m;
        }
        var Qo = {};
        function ro() {
          this.lambda = 0, this.beta = 0, this.semidiameter = 0, this.lambda = 0, this.beta = 0, this.semidiameter = 0;
        }
        var tl = {};
        function gn() {
        }
        gn.equatorial2TopocentricDelta = function(t, e, n, a, s, l, g) {
          var _ = Dr.rhoSinThetaPrime(s, l), m = Dr.rhoCosThetaPrime(s, l), b = An.apparentGreenwichSiderealTime(g);
          e = x.d2R(e);
          var y = Math.cos(e), M = Math.asin(S.g_AAParallax_C1 / n), A = x.h2R(b - a / 15 - t), R = Math.cos(A), F = Math.sin(A), O = new Le();
          return O.x = x.r2H(-M * m * F / y), O.y = x.r2D(-M * (_ * y - m * R * Math.sin(e))), O;
        }, gn.equatorial2Topocentric = function(t, e, n, a, s, l, g) {
          var _ = Dr.rhoSinThetaPrime(s, l), m = Dr.rhoCosThetaPrime(s, l), b = An.apparentGreenwichSiderealTime(g);
          e = x.d2R(e);
          var y = Math.cos(e), M = Math.asin(S.g_AAParallax_C1 / n), A = Math.sin(M), R = x.h2R(b - a / 15 - t), F = Math.cos(R), O = Math.sin(R), B = Math.atan2(-m * A * O, y - m * A * F), H = new Le();
          return H.x = x.m24(t + x.r2H(B)), H.y = x.r2D(Math.atan2((Math.sin(e) - _ * A) * Math.cos(B), y - m * A * F)), H;
        }, gn.ecliptic2Topocentric = function(t, e, n, a, s, l, g, _, m) {
          var b = Dr.rhoSinThetaPrime(g, _), y = Dr.rhoCosThetaPrime(g, _);
          t = x.d2R(t), e = x.d2R(e), s = x.d2R(s), l = x.d2R(l), g = x.d2R(g), n = x.d2R(n);
          var M = Math.sin(s), A = Math.cos(s), R = Math.cos(e), F = Math.sin(e), O = An.apparentGreenwichSiderealTime(m);
          O = x.h2R(O);
          var B = Math.sin(O), H = Math.asin(S.g_AAParallax_C1 / a), K = Math.sin(H), J = Math.cos(t) * R - y * K * Math.cos(O), it = new ro();
          it.lambda = Math.atan2(Math.sin(t) * R - K * (b * M + y * A * B), J);
          var ot = Math.cos(it.lambda);
          return it.beta = Math.atan(ot * (F - K * (b * A - y * M * B)) / J), it.semidiameter = Math.asin(ot * Math.cos(it.beta) * Math.sin(n) / J), it.semidiameter = x.r2D(it.semidiameter), it.lambda = x.m360(x.r2D(it.lambda)), it.beta = x.r2D(it.beta), it;
        }, gn.parallaxToDistance = function(t) {
          return S.g_AAParallax_C1 / Math.sin(x.d2R(t));
        }, gn.distanceToParallax = function(t) {
          var e = Math.asin(S.g_AAParallax_C1 / t);
          return x.r2D(e);
        };
        var el = {};
        function As() {
          this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0, this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0;
        }
        var il = {};
        function ks() {
        }
        ks.calculate = function(t) {
          var e = new As(), n = t - 24332825e-1, a = n / 36525, s = 268 + 0.1061 * a, l = x.d2R(s), g = 64.5 - 0.0164 * a, _ = x.d2R(g), m = x.m360(17.71 + 877.90003539 * n), b = x.m360(16.838 + 870.27003539 * n), y = ii.eclipticLongitude(t), M = x.d2R(y), A = ii.eclipticLatitude(t), R = x.d2R(A), F = ii.radiusVector(t), O = Y.eclipticLongitude(t), B = x.d2R(O), H = Y.eclipticLatitude(t), K = x.d2R(H), J = Y.radiusVector(t), it = J * Math.cos(K) * Math.cos(B) - F * Math.cos(M), ot = J * Math.cos(K) * Math.sin(B) - F * Math.sin(M), lt = J * Math.sin(K) - F * Math.sin(R), gt = Math.sqrt(it * it + ot * ot + lt * lt);
          O -= 0.01299 * gt / (J * J), B = x.d2R(O), it = J * Math.cos(K) * Math.cos(B) - F * Math.cos(M), ot = J * Math.cos(K) * Math.sin(B) - F * Math.sin(M), lt = J * Math.sin(K) - F * Math.sin(R), gt = Math.sqrt(it * it + ot * ot + lt * lt);
          var ut = ci.meanObliquityOfEcliptic(t), St = x.d2R(ut), mt = Math.atan2(Math.cos(St) * Math.sin(B) - Math.sin(St) * Math.tan(K), Math.cos(B)), Dt = Math.asin(Math.cos(St) * Math.sin(K) + Math.sin(St) * Math.cos(K) * Math.sin(B));
          e.DS = x.r2D(Math.asin(-Math.sin(_) * Math.sin(Dt) - Math.cos(_) * Math.cos(Dt) * Math.cos(l - mt)));
          var yt = ot * Math.cos(St) - lt * Math.sin(St), ue = ot * Math.sin(St) + lt * Math.cos(St), _e = Math.atan2(yt, it), Qt = x.r2D(_e), Ft = Math.atan2(ue, Math.sqrt(it * it + yt * yt)), vi = x.r2D(Ft), Ei = Math.atan2(Math.sin(_) * Math.cos(Ft) * Math.cos(l - _e) - Math.sin(Ft) * Math.cos(_), Math.cos(Ft) * Math.sin(l - _e));
          e.DE = x.r2D(Math.asin(-Math.sin(_) * Math.sin(Ft) - Math.cos(_) * Math.cos(Ft) * Math.cos(l - _e))), e.geometricw1 = x.m360(m - x.r2D(Ei) - 5.07033 * gt), e.geometricw2 = x.m360(b - x.r2D(Ei) - 5.02626 * gt);
          var Li = 57.2958 * (2 * J * gt + F * F - J * J - gt * gt) / (4 * J * gt);
          Math.sin(B - M) > 0 ? (e.apparentw1 = x.m360(e.geometricw1 + Li), e.apparentw2 = x.m360(e.geometricw2 + Li)) : (e.apparentw1 = x.m360(e.geometricw1 - Li), e.apparentw2 = x.m360(e.geometricw2 - Li));
          var ri = ci.nutationInLongitude(t), Si = ci.nutationInObliquity(t);
          ut += Si / 3600, St = x.d2R(ut), Qt += 5693e-6 * (Math.cos(_e) * Math.cos(M) * Math.cos(St) + Math.sin(_e) * Math.sin(M)) / Math.cos(Ft), Qt = x.m360(Qt), _e = x.d2R(Qt), vi += 5693e-6 * (Math.cos(M) * Math.cos(St) * (Math.tan(St) * Math.cos(Ft) - Math.sin(_e) * Math.sin(Ft)) + Math.cos(_e) * Math.sin(Ft) * Math.sin(M)), Ft = x.d2R(vi);
          var Je = ci.nutationInRightAscension(Qt / 15, vi, ut, ri, Si), Xi = Qt + Je / 3600, Ee = x.d2R(Xi), Yi = ci.nutationInDeclination(Qt / 15, vi, ut, ri, Si), Ni = vi + Yi / 3600, he = x.d2R(Ni);
          Je = ci.nutationInRightAscension(s / 15, g, ut, ri, Si);
          var ee = s + Je / 3600, Xe = x.d2R(ee);
          Yi = ci.nutationInDeclination(s / 15, g, ut, ri, Si);
          var xe = g + Yi / 3600, Ir = x.d2R(xe);
          return e.p = x.m360(x.r2D(Math.atan2(Math.cos(Ir) * Math.sin(Xe - Ee), Math.sin(Ir) * Math.cos(he) - Math.cos(Ir) * Math.sin(he) * Math.cos(Xe - Ee)))), e;
        };
        var rl = {};
        function no() {
          this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0, this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0;
        }
        var nl = {};
        function ao() {
        }
        ao.calculate = function(t) {
          for (var e = new no(), n = (t - 2451545) / 36525, a = 352.9065 + 1.1733 * n, s = x.d2R(a), l = 63.2818 - 394e-5 * n, g = x.d2R(l), _ = ii.eclipticLongitude(t), m = x.d2R(_), b = ii.eclipticLatitude(t), y = x.d2R(b), M = ii.radiusVector(t), A = 0, R = 0, F = 0, O = 0, B = 0, H = !0, K = 0, J = 0, it = 0, ot = 0, lt = 0, gt = 0; H; ) {
            var ut = t - R;
            J = Rt.eclipticLongitude(ut), it = x.d2R(J), ot = Rt.eclipticLatitude(ut), lt = x.d2R(ot), gt = Rt.radiusVector(ut), F = gt * Math.cos(lt) * Math.cos(it) - M * Math.cos(m), O = gt * Math.cos(lt) * Math.sin(it) - M * Math.sin(m), B = gt * Math.sin(lt) - M * Math.sin(y), K = Math.sqrt(F * F + O * O + B * B), R = hi.distanceToLightTime(K), H = Math.abs(R - A) > 2e-6, H && (A = R);
          }
          var St = Math.atan2(O, F), mt = x.r2D(St), Dt = Math.atan2(B, Math.sqrt(F * F + O * O)), yt = x.r2D(Dt);
          e.DE = x.r2D(Math.asin(-Math.sin(g) * Math.sin(Dt) - Math.cos(g) * Math.cos(Dt) * Math.cos(s - St)));
          var ue = 49.5581 + 0.7721 * n, _e = x.d2R(ue), Qt = J - 697e-5 / gt, Ft = x.d2R(Qt), vi = ot - 225e-6 * (Math.cos(it - _e) / gt), Ei = x.d2R(vi);
          e.DS = x.r2D(Math.asin(-Math.sin(g) * Math.sin(Ei) - Math.cos(g) * Math.cos(Ei) * Math.cos(s - Ft)));
          var Li = x.m360(11.504 + 350.89200025 * (t - R - 24332825e-1)), ri = ci.meanObliquityOfEcliptic(t), Si = x.d2R(ri), Je = x.ec2Eq(a, l, ri), Xi = x.h2R(Je.x), Ee = x.d2R(Je.y), Yi = O * Math.cos(Si) - B * Math.sin(Si), Ni = O * Math.sin(Si) + B * Math.cos(Si), he = Math.atan2(Yi, F), ee = x.r2H(he), Xe = Math.atan2(Ni, Math.sqrt(F * F + Yi * Yi)), xe = x.r2D(Xe), Ir = Math.atan2(Math.sin(Ee) * Math.cos(Xe) * Math.cos(Xi - he) - Math.sin(Xe) * Math.cos(Ee), Math.cos(Xe) * Math.sin(Xi - he));
          e.w = x.m360(Li - x.r2D(Ir));
          var or = ci.nutationInLongitude(t), Hi = ci.nutationInObliquity(t);
          mt += 5693e-6 * Math.cos(m - St) / Math.cos(Dt), yt += 5693e-6 * Math.sin(m - St) * Math.sin(Dt), a += or / 3600, s = x.d2R(a), mt += or / 3600, St = x.d2R(mt), ri += Hi / 3600, Si = x.d2R(Si);
          var yn = x.ec2Eq(a, l, ri), yr = x.h2R(yn.x), dr = x.d2R(yn.y), ji = x.ec2Eq(mt, yt, ri), wr = x.h2R(ji.x), zr = x.d2R(ji.y);
          e.p = x.m360(x.r2D(Math.atan2(Math.cos(dr) * Math.sin(yr - wr), Math.sin(dr) * Math.cos(zr) - Math.cos(dr) * Math.sin(zr) * Math.cos(yr - wr))));
          var Sn = fi.geometricEclipticLongitude(t), xr = fi.geometricEclipticLatitude(t), Lr = x.ec2Eq(Sn, xr, ri);
          return e.x = Ur.positionAngle(Lr.x, Lr.y, ee, xe), e.d = 9.36 / K, e.k = Bi.illuminatedFraction2(gt, M, K), e.q = (1 - e.k) * e.d, e;
        };
        var al = {};
        function so() {
          this.p = 0, this.b0 = 0, this.l0 = 0, this.p = 0, this.b0 = 0, this.l0 = 0;
        }
        var sl = {};
        function Is() {
        }
        Is.calculate = function(t) {
          var e = x.m360((t - 2398220) * 360 / 25.38), n = 7.25, a = 73.6667 + 1.3958333 * (t - 2396758) / 36525, s = ii.eclipticLongitude(t), l = ii.radiusVector(t), g = s + 180 - x.dmS2D(0, 0, 20.4898 / l), _ = g + x.dmS2D(0, 0, ci.nutationInLongitude(t)), m = ci.trueObliquityOfEcliptic(t);
          m = x.d2R(m), g = x.d2R(g), _ = x.d2R(_), a = x.d2R(a), n = x.d2R(n), e = x.d2R(e);
          var b = Math.atan(-Math.cos(g) * Math.tan(m)), y = Math.atan(-Math.cos(g - a) * Math.tan(n)), M = new so();
          M.p = x.r2D(b + y), M.b0 = x.r2D(Math.asin(Math.sin(g - a) * Math.sin(n)));
          var A = Math.atan(Math.tan(g - a) * Math.cos(n));
          return M.l0 = x.m360(x.r2D(A - e)), M;
        }, Is.timeOfStartOfRotation = function(t) {
          var e = 2398140227e-3 + 27.2752316 * t, n = x.m360(281.96 + 26.882476 * t);
          return n = x.d2R(n), e += 0.1454 * Math.sin(n) - 85e-4 * Math.sin(2 * n) - 0.0141 * Math.cos(2 * n), e;
        };
        var ol = {};
        function Qr() {
        }
        Qr.eclipticLongitude = function(t) {
          for (var e = (t - 2451545) / 36525, n = 34.35 + 3034.9057 * e, a = 50.08 + 1222.1138 * e, s = 238.96 + 144.96 * e, l = 0, g = S.g_PlutoArgumentCoefficients.length, _ = 0; _ < g; _++) {
            var m = S.g_PlutoArgumentCoefficients[_].j * n + S.g_PlutoArgumentCoefficients[_].s * a + S.g_PlutoArgumentCoefficients[_].p * s;
            m = x.d2R(m), l += S.g_PlutoLongitudeCoefficients[_].a * Math.sin(m) + S.g_PlutoLongitudeCoefficients[_].b * Math.cos(m);
          }
          return l = l / 1e6, l += 238.958116 + 144.96 * e, l = x.m360(l), l;
        }, Qr.eclipticLatitude = function(t) {
          for (var e = (t - 2451545) / 36525, n = 34.35 + 3034.9057 * e, a = 50.08 + 1222.1138 * e, s = 238.96 + 144.96 * e, l = 0, g = S.g_PlutoArgumentCoefficients.length, _ = 0; _ < g; _++) {
            var m = S.g_PlutoArgumentCoefficients[_].j * n + S.g_PlutoArgumentCoefficients[_].s * a + S.g_PlutoArgumentCoefficients[_].p * s;
            m = x.d2R(m), l += S.g_PlutoLatitudeCoefficients[_].a * Math.sin(m) + S.g_PlutoLatitudeCoefficients[_].b * Math.cos(m);
          }
          return l = l / 1e6, l += -3.908239, l;
        }, Qr.radiusVector = function(t) {
          for (var e = (t - 2451545) / 36525, n = 34.35 + 3034.9057 * e, a = 50.08 + 1222.1138 * e, s = 238.96 + 144.96 * e, l = 0, g = S.g_PlutoArgumentCoefficients.length, _ = 0; _ < g; _++) {
            var m = S.g_PlutoArgumentCoefficients[_].j * n + S.g_PlutoArgumentCoefficients[_].s * a + S.g_PlutoArgumentCoefficients[_].p * s;
            m = x.d2R(m), l += S.g_PlutoRadiusCoefficients[_].a * Math.sin(m) + S.g_PlutoRadiusCoefficients[_].b * Math.cos(m);
          }
          return l = l / 1e7, l += 40.7241346, l;
        };
        var ll = {};
        function Qe(t, e, n) {
          this.j = 0, this.s = 0, this.p = 0, this.j = t, this.s = e, this.p = n;
        }
        var ul = {};
        function kt(t, e) {
          this.a = 0, this.b = 0, this.a = t, this.b = e;
        }
        var cl = {};
        function jn() {
        }
        jn.precessEquatorial = function(t, e, n, a) {
          var s = (n - 2451545) / 36525, l = s * s, g = (a - n) / 36525, _ = g * g, m = _ * g;
          t = x.h2R(t), e = x.d2R(e);
          var b = (2306.2181 + 1.39656 * s - 139e-6 * l) * g + (0.30188 - 344e-7 * s) * _ + 0.017988 * m;
          b = x.d2R(x.dmS2D(0, 0, b));
          var y = (2306.2181 + 1.39656 * s - 138e-6 * l) * g + (1.09468 + 66e-6 * s) * _ + 0.018203 * m;
          y = x.d2R(x.dmS2D(0, 0, y));
          var M = (2004.3109 - 0.8533 * s - 217e-6 * l) * g - (0.42665 + 217e-6 * s) * _ - 0.041833 * m;
          M = x.d2R(x.dmS2D(0, 0, M));
          var A = Math.cos(e) * Math.sin(t + b), R = Math.cos(M) * Math.cos(e) * Math.cos(t + b) - Math.sin(M) * Math.sin(e), F = Math.sin(M) * Math.cos(e) * Math.cos(t + b) + Math.cos(M) * Math.sin(e), O = new Le();
          return O.x = x.r2H(Math.atan2(A, R) + y), O.x < 0 && (O.x += 24), O.y = x.r2D(Math.asin(F)), O;
        }, jn.precessEquatorialFK4 = function(t, e, n, a) {
          var s = (n - 24150203135e-4) / 36524.2199, l = (a - n) / 36524.2199, g = l * l, _ = g * l;
          t = x.h2R(t), e = x.d2R(e);
          var m = (2304.25 + 1.396 * s) * l + 0.302 * g + 0.018 * _;
          m = x.d2R(x.dmS2D(0, 0, m));
          var b = 0.791 * g + 1e-3 * _;
          b = x.d2R(x.dmS2D(0, 0, b)), b += m;
          var y = (2004.682 - 0.853 * s) * l - 0.426 * g - 0.042 * _;
          y = x.d2R(x.dmS2D(0, 0, y));
          var M = Math.cos(e) * Math.sin(t + m), A = Math.cos(y) * Math.cos(e) * Math.cos(t + m) - Math.sin(y) * Math.sin(e), R = Math.sin(y) * Math.cos(e) * Math.cos(t + m) + Math.cos(y) * Math.sin(e), F = new Le();
          return F.x = x.r2H(Math.atan2(M, A) + b), F.x < 0 && (F.x += 24), F.y = x.r2D(Math.asin(R)), F;
        }, jn.precessEcliptic = function(t, e, n, a) {
          var s = (n - 2451545) / 36525, l = s * s, g = (a - n) / 36525, _ = g * g, m = _ * g;
          t = x.d2R(t), e = x.d2R(e);
          var b = (47.0029 - 0.06603 * s + 598e-6 * l) * g + (-0.03302 + 598e-6 * s) * _ + 6e-5 * m;
          b = x.d2R(x.dmS2D(0, 0, b));
          var y = 174.876384 * 3600 + 3289.4789 * s + 0.60622 * l - (869.8089 + 0.50491 * s) * g + 0.03536 * _;
          y = x.d2R(x.dmS2D(0, 0, y));
          var M = (5029.0966 + 2.22226 * s - 42e-6 * l) * g + (1.11113 - 42e-6 * s) * _ - 6e-6 * m;
          M = x.d2R(x.dmS2D(0, 0, M));
          var A = Math.cos(b) * Math.cos(e) * Math.sin(y - t) - Math.sin(b) * Math.sin(e), R = Math.cos(e) * Math.cos(y - t), F = Math.cos(b) * Math.sin(e) + Math.sin(b) * Math.cos(e) * Math.sin(y - t), O = new Le();
          return O.x = x.r2D(M + y - Math.atan2(A, R)), O.x < 0 && (O.x += 360), O.y = x.r2D(Math.asin(F)), O;
        }, jn.equatorialPMToEcliptic = function(t, e, n, a, s, l) {
          l = x.d2R(l), t = x.h2R(t), e = x.d2R(e), n = x.d2R(n);
          var g = Math.cos(n), _ = Math.sin(l), m = new Le();
          return m.x = (s * _ * Math.cos(t) + a * Math.cos(e) * (Math.cos(l) * Math.cos(e) + _ * Math.sin(e) * Math.sin(t))) / (g * g), m.y = (s * (Math.cos(l) * Math.cos(e) + _ * Math.sin(e) * Math.sin(t)) - a * _ * Math.cos(t) * Math.cos(e)) / g, m;
        }, jn.adjustPositionUsingUniformProperMotion = function(t, e, n, a, s) {
          var l = new Le();
          return l.x = e + a * t / 3600, l.y = n + s * t / 3600, l;
        }, jn.adjustPositionUsingMotionInSpace = function(t, e, n, a, s, l, g) {
          e /= 977792, l /= 13751, g /= 206265, a = x.h2R(a), s = x.d2R(s);
          var _ = t * Math.cos(s) * Math.cos(a), m = t * Math.cos(s) * Math.sin(a), b = t * Math.sin(s), y = _ / t * e - b * g * Math.cos(a) - m * l, M = m / t * e - b * g * Math.sin(a) + _ * l, A = b / t * e + t * g * Math.cos(s);
          _ += n * y, m += n * M, b += n * A;
          var R = new Le();
          return R.x = x.r2H(Math.atan2(m, _)), R.x < 0 && (R.x += 24), R.y = x.r2D(Math.atan2(b, Math.sqrt(_ * _ + m * m))), R;
        };
        var hl = {};
        function oo() {
          this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0;
        }
        var fl = {};
        function Ps() {
        }
        Ps.rise = function(t, e, n, a, s, l, g, _, m, b) {
          var y = new oo();
          y.bValid = !1;
          var M = An.apparentGreenwichSiderealTime(t);
          M *= 15;
          var A = pr.deltaT(t), R = x.d2R(s), F = x.d2R(m), O = x.d2R(b), B = (Math.sin(O) - Math.sin(F) * Math.sin(R)) / (Math.cos(F) * Math.cos(R));
          if (B > 1 || B < -1)
            return y;
          var H = Math.acos(B);
          H = x.r2D(H);
          var K = (a * 15 + _ - M) / 360, J = K - H / 360, it = K + H / 360;
          K > 1 ? K -= 1 : K < 0 && (K += 1), J > 1 ? J -= 1 : J < 0 && (J += 1), it > 1 ? it -= 1 : it < 0 && (it += 1);
          for (var ot = 0; ot < 2; ot++) {
            var lt = M + 360.985647 * J;
            lt = x.m360(lt);
            var gt = J + A / 86400, ut = k.interpolate(gt, e, a, l), St = k.interpolate(gt, n, s, g), mt = lt - _ - ut * 15, Dt = x.eq2H(mt / 15, St, m), yt = (Dt.y - b) / (360 * Math.cos(x.d2R(St)) * Math.cos(F) * Math.sin(x.d2R(mt)));
            J += yt, lt = M + 360.985647 * K, lt = x.m360(lt), gt = K + A / 86400, ut = k.interpolate(gt, e, a, l), mt = lt - _ - ut * 15, mt < -180 && (mt += 360), yt = -mt / 360, K += yt, lt = M + 360.985647 * it, lt = x.m360(lt), gt = it + A / 86400, ut = k.interpolate(gt, e, a, l), St = k.interpolate(gt, n, s, g), mt = lt - _ - ut * 15, Dt = x.eq2H(mt / 15, St, m), yt = (Dt.y - b) / (360 * Math.cos(x.d2R(St)) * Math.cos(F) * Math.sin(x.d2R(mt))), it += yt;
          }
          return y.bValid = !0, y.rise = J * 24, y.set = it * 24, y.transit = K * 24, y;
        };
        var _l = {};
        function Nr() {
        }
        Nr.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_L0SaturnCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_L0SaturnCoefficients[m].a * Math.cos(S.g_L0SaturnCoefficients[m].b + S.g_L0SaturnCoefficients[m].c * e);
          var b = S.g_L1SaturnCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_L1SaturnCoefficients[m].a * Math.cos(S.g_L1SaturnCoefficients[m].b + S.g_L1SaturnCoefficients[m].c * e);
          var M = S.g_L2SaturnCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_L2SaturnCoefficients[m].a * Math.cos(S.g_L2SaturnCoefficients[m].b + S.g_L2SaturnCoefficients[m].c * e);
          var R = S.g_L3SaturnCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_L3SaturnCoefficients[m].a * Math.cos(S.g_L3SaturnCoefficients[m].b + S.g_L3SaturnCoefficients[m].c * e);
          var O = S.g_L4SaturnCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_L4SaturnCoefficients[m].a * Math.cos(S.g_L4SaturnCoefficients[m].b + S.g_L4SaturnCoefficients[m].c * e);
          var H = S.g_L5SaturnCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_L5SaturnCoefficients[m].a * Math.cos(S.g_L5SaturnCoefficients[m].b + S.g_L5SaturnCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.m360(x.r2D(J)), J;
        }, Nr.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_B0SaturnCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_B0SaturnCoefficients[m].a * Math.cos(S.g_B0SaturnCoefficients[m].b + S.g_B0SaturnCoefficients[m].c * e);
          var b = S.g_B1SaturnCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_B1SaturnCoefficients[m].a * Math.cos(S.g_B1SaturnCoefficients[m].b + S.g_B1SaturnCoefficients[m].c * e);
          var M = S.g_B2SaturnCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_B2SaturnCoefficients[m].a * Math.cos(S.g_B2SaturnCoefficients[m].b + S.g_B2SaturnCoefficients[m].c * e);
          var R = S.g_B3SaturnCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_B3SaturnCoefficients[m].a * Math.cos(S.g_B3SaturnCoefficients[m].b + S.g_B3SaturnCoefficients[m].c * e);
          var O = S.g_B4SaturnCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_B4SaturnCoefficients[m].a * Math.cos(S.g_B4SaturnCoefficients[m].b + S.g_B4SaturnCoefficients[m].c * e);
          var H = S.g_B5SaturnCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_B5SaturnCoefficients[m].a * Math.cos(S.g_B5SaturnCoefficients[m].b + S.g_B5SaturnCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.r2D(J), J;
        }, Nr.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_R0SaturnCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_R0SaturnCoefficients[m].a * Math.cos(S.g_R0SaturnCoefficients[m].b + S.g_R0SaturnCoefficients[m].c * e);
          var b = S.g_R1SaturnCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_R1SaturnCoefficients[m].a * Math.cos(S.g_R1SaturnCoefficients[m].b + S.g_R1SaturnCoefficients[m].c * e);
          var M = S.g_R2SaturnCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_R2SaturnCoefficients[m].a * Math.cos(S.g_R2SaturnCoefficients[m].b + S.g_R2SaturnCoefficients[m].c * e);
          var R = S.g_R3SaturnCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_R3SaturnCoefficients[m].a * Math.cos(S.g_R3SaturnCoefficients[m].b + S.g_R3SaturnCoefficients[m].c * e);
          var O = S.g_R4SaturnCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_R4SaturnCoefficients[m].a * Math.cos(S.g_R4SaturnCoefficients[m].b + S.g_R4SaturnCoefficients[m].c * e);
          var H = S.g_R5SaturnCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_R5SaturnCoefficients[m].a * Math.cos(S.g_R5SaturnCoefficients[m].b + S.g_R5SaturnCoefficients[m].c * e);
          return (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
        };
        var dl = {};
        function lo() {
          this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0, this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0;
        }
        var gl = {};
        function uo() {
        }
        uo.calculate = function(t) {
          var e = new lo(), n = (t - 2451545) / 36525, a = n * n, s = 28.075216 - 0.012998 * n + 4e-6 * a, l = x.d2R(s), g = 169.50847 + 1.394681 * n + 412e-6 * a, _ = x.d2R(g), m = ii.eclipticLongitude(t), b = ii.eclipticLatitude(t);
          m += tr.correctionInLongitude(m, b, t);
          var y = x.d2R(m);
          b += tr.correctionInLatitude(m, t);
          for (var M = x.d2R(b), A = ii.radiusVector(t), R = 9, F = 0, O = hi.distanceToLightTime(R), B = t - O, H = !0, K = 0, J = 0, it = 0, ot = 0, lt = 0, gt = 0; H; ) {
            ot = Nr.eclipticLongitude(B), lt = Nr.eclipticLatitude(B), ot += tr.correctionInLongitude(ot, lt, B), lt += tr.correctionInLatitude(ot, B);
            var ut = x.d2R(ot), St = x.d2R(lt);
            gt = Nr.radiusVector(B), K = gt * Math.cos(St) * Math.cos(ut) - A * Math.cos(y), J = gt * Math.cos(St) * Math.sin(ut) - A * Math.sin(y), it = gt * Math.sin(St) - A * Math.sin(M), R = Math.sqrt(K * K + J * J + it * it), O = hi.distanceToLightTime(R), H = Math.abs(O - F) > 2e-6, H && (B = t - O, F = O);
          }
          var mt = Math.atan2(J, K), Dt = Math.atan2(it, Math.sqrt(K * K + J * J));
          e.b = Math.asin(Math.sin(l) * Math.cos(Dt) * Math.sin(mt - _) - Math.cos(l) * Math.sin(Dt)), e.a = 375.35 / R, e.b = e.a * Math.sin(Math.abs(e.b)), e.b = x.r2D(e.b);
          var yt = 113.6655 + 0.8771 * n, ue = x.d2R(yt), _e = ot - 0.01759 / gt, Qt = x.d2R(_e), Ft = lt - 764e-6 * Math.cos(Qt - ue) / gt, vi = x.d2R(Ft);
          e.bdash = x.r2D(Math.asin(Math.sin(l) * Math.cos(vi) * Math.sin(Qt - _) - Math.cos(l) * Math.sin(vi)));
          var Ei = Math.atan2(Math.sin(l) * Math.sin(vi) + Math.cos(l) * Math.cos(vi) * Math.sin(Qt - _), Math.cos(vi) * Math.cos(Qt - _)), Li = Math.atan2(Math.sin(l) * Math.sin(Dt) + Math.cos(l) * Math.cos(Dt) * Math.sin(mt - _), Math.cos(Dt) * Math.cos(mt - _));
          e.deltaU = x.r2D(Math.abs(Ei - Li));
          var ri = ci.trueObliquityOfEcliptic(t), Si = ci.nutationInLongitude(t), Je = g - 90, Xi = 90 - s;
          mt += x.d2R(5693e-6 * Math.cos(y - mt) / Math.cos(Dt)), Dt += x.d2R(5693e-6 * Math.sin(y - mt) * Math.sin(Dt)), mt = x.r2D(mt), mt += Si / 3600, mt = x.m360(mt), Je += Si / 3600, Je = x.m360(Je), Dt = x.r2D(Dt);
          var Ee = x.ec2Eq(mt, Dt, ri), Yi = x.h2R(Ee.x), Ni = x.d2R(Ee.y), he = x.ec2Eq(Je, Xi, ri), ee = x.h2R(he.x), Xe = x.d2R(he.y);
          return e.p = x.r2D(Math.atan2(Math.cos(Xe) * Math.sin(ee - Yi), Math.sin(Xe) * Math.cos(Ni) - Math.cos(Xe) * Math.sin(Ni) * Math.cos(ee - Yi))), e;
        };
        var ml = {};
        function An() {
        }
        An.meanGreenwichSiderealTime = function(t) {
          var e = new ui();
          e.setJD(t, ui.afterPapalReformJD(t));
          var n = e.get(), a = r.truncate(n[0]), s = r.truncate(n[1]), l = r.truncate(n[2]), g = r.truncate(n[3]), _ = r.truncate(n[4]), m = n[5];
          e.set(a, s, l, 0, 0, 0, e.inGregorianCalendar());
          var b = e.julian(), y = (b - 2451545) / 36525, M = y * y, A = M * y, R = 100.46061837 + 36000.770053608 * y + 387933e-9 * M - A / 3871e4;
          return R += (g * 15 + _ * 0.25 + m * 0.00416666666666667) * 1.00273790935, R = x.d2H(R), x.m24(R);
        }, An.apparentGreenwichSiderealTime = function(t) {
          var e = ci.meanObliquityOfEcliptic(t), n = e + ci.nutationInObliquity(t) / 3600, a = ci.nutationInLongitude(t), s = An.meanGreenwichSiderealTime(t) + a * Math.cos(x.d2R(n)) / 54e3;
          return x.m24(s);
        };
        var pl = {};
        function ka() {
        }
        ka.combinedMagnitude = function(t, e) {
          var n = 0.4 * (e - t);
          return e - 2.5 * xt.log10(Math.pow(10, n) + 1);
        }, ka.combinedMagnitude2 = function(t, e) {
          for (var n = 0, a = 0; a < t; a++)
            n += Math.pow(10, -0.4 * e[a]);
          return -2.5 * xt.log10(n);
        }, ka.brightnessRatio = function(t, e) {
          var n = 0.4 * (e - t);
          return Math.pow(10, n);
        }, ka.magnitudeDifference = function(t) {
          return 2.5 * xt.log10(t);
        };
        var vl = {};
        function fi() {
        }
        fi.geometricEclipticLongitude = function(t) {
          return x.m360(ii.eclipticLongitude(t) + 180);
        }, fi.geometricEclipticLatitude = function(t) {
          return -ii.eclipticLatitude(t);
        }, fi.geometricEclipticLongitudeJ2000 = function(t) {
          return x.m360(ii.eclipticLongitudeJ2000(t) + 180);
        }, fi.geometricEclipticLatitudeJ2000 = function(t) {
          return -ii.eclipticLatitudeJ2000(t);
        }, fi.geometricFK5EclipticLongitude = function(t) {
          var e = fi.geometricEclipticLongitude(t), n = fi.geometricEclipticLatitude(t);
          return e += tr.correctionInLongitude(e, n, t), e;
        }, fi.geometricFK5EclipticLatitude = function(t) {
          var e = fi.geometricEclipticLongitude(t), n = fi.geometricEclipticLatitude(t), a = tr.correctionInLatitude(e, t);
          return n += a, n;
        }, fi.apparentEclipticLongitude = function(t) {
          var e = fi.geometricFK5EclipticLongitude(t);
          e += x.dmS2D(0, 0, ci.nutationInLongitude(t));
          var n = ii.radiusVector(t);
          return e -= x.dmS2D(0, 0, 20.4898 / n), e;
        }, fi.apparentEclipticLatitude = function(t) {
          return fi.geometricFK5EclipticLatitude(t);
        }, fi.eclipticRectangularCoordinatesMeanEquinox = function(t) {
          var e = x.d2R(fi.geometricFK5EclipticLongitude(t)), n = x.d2R(fi.geometricFK5EclipticLatitude(t)), a = ii.radiusVector(t), s = x.d2R(ci.meanObliquityOfEcliptic(t)), l = new pe();
          return l.x = a * Math.cos(n) * Math.cos(e), l.y = a * (Math.cos(n) * Math.sin(e) * Math.cos(s) - Math.sin(n) * Math.sin(s)), l.z = a * (Math.cos(n) * Math.sin(e) * Math.sin(s) + Math.sin(n) * Math.cos(s)), l;
        }, fi.eclipticRectangularCoordinatesJ2000 = function(t) {
          var e = fi.geometricEclipticLongitudeJ2000(t);
          e = x.d2R(e);
          var n = fi.geometricEclipticLatitudeJ2000(t);
          n = x.d2R(n);
          var a = ii.radiusVector(t), s = new pe(), l = Math.cos(n);
          return s.x = a * l * Math.cos(e), s.y = a * l * Math.sin(e), s.z = a * Math.sin(n), s;
        }, fi.equatorialRectangularCoordinatesJ2000 = function(t) {
          var e = fi.eclipticRectangularCoordinatesJ2000(t);
          return e = tr.convertVSOPToFK5J2000(e), e;
        }, fi.equatorialRectangularCoordinatesB1950 = function(t) {
          var e = fi.eclipticRectangularCoordinatesJ2000(t);
          return e = tr.convertVSOPToFK5B1950(e), e;
        }, fi.equatorialRectangularCoordinatesAnyEquinox = function(t, e) {
          var n = fi.equatorialRectangularCoordinatesJ2000(t);
          return n = tr.convertVSOPToFK5AnyEquinox(n, e), n;
        };
        var wl = {};
        function tn() {
        }
        tn.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_L0UranusCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_L0UranusCoefficients[_].a * Math.cos(S.g_L0UranusCoefficients[_].b + S.g_L0UranusCoefficients[_].c * e);
          var m = S.g_L1UranusCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_L1UranusCoefficients[_].a * Math.cos(S.g_L1UranusCoefficients[_].b + S.g_L1UranusCoefficients[_].c * e);
          var y = S.g_L2UranusCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_L2UranusCoefficients[_].a * Math.cos(S.g_L2UranusCoefficients[_].b + S.g_L2UranusCoefficients[_].c * e);
          var A = S.g_L3UranusCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_L3UranusCoefficients[_].a * Math.cos(S.g_L3UranusCoefficients[_].b + S.g_L3UranusCoefficients[_].c * e);
          var F = S.g_L4UranusCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_L4UranusCoefficients[_].a * Math.cos(S.g_L4UranusCoefficients[_].b + S.g_L4UranusCoefficients[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.m360(x.r2D(B)), B;
        }, tn.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0UranusCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0UranusCoefficients[_].a * Math.cos(S.g_B0UranusCoefficients[_].b + S.g_B0UranusCoefficients[_].c * e);
          var m = S.g_B1UranusCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1UranusCoefficients[_].a * Math.cos(S.g_B1UranusCoefficients[_].b + S.g_B1UranusCoefficients[_].c * e);
          var y = S.g_B2UranusCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2UranusCoefficients[_].a * Math.cos(S.g_B2UranusCoefficients[_].b + S.g_B2UranusCoefficients[_].c * e);
          var A = S.g_B3UranusCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3UranusCoefficients[_].a * Math.cos(S.g_B3UranusCoefficients[_].b + S.g_B3UranusCoefficients[_].c * e);
          var F = S.g_B4UranusCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4UranusCoefficients[_].a * Math.cos(S.g_B4UranusCoefficients[_].b + S.g_B4UranusCoefficients[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        }, tn.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_R0UranusCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_R0UranusCoefficients[_].a * Math.cos(S.g_R0UranusCoefficients[_].b + S.g_R0UranusCoefficients[_].c * e);
          var m = S.g_R1UranusCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_R1UranusCoefficients[_].a * Math.cos(S.g_R1UranusCoefficients[_].b + S.g_R1UranusCoefficients[_].c * e);
          var y = S.g_R2UranusCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_R2UranusCoefficients[_].a * Math.cos(S.g_R2UranusCoefficients[_].b + S.g_R2UranusCoefficients[_].c * e);
          var A = S.g_R3UranusCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_R3UranusCoefficients[_].a * Math.cos(S.g_R3UranusCoefficients[_].b + S.g_R3UranusCoefficients[_].c * e);
          var F = S.g_R4UranusCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_R4UranusCoefficients[_].a * Math.cos(S.g_R4UranusCoefficients[_].b + S.g_R4UranusCoefficients[_].c * e);
          return (g + b * e + M * n + R * a + O * s) / 1e8;
        };
        var bl = {};
        function en() {
        }
        en.eclipticLongitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = s * e, g = S.g_L0VenusCoefficients.length, _ = 0, m;
          for (m = 0; m < g; m++)
            _ += S.g_L0VenusCoefficients[m].a * Math.cos(S.g_L0VenusCoefficients[m].b + S.g_L0VenusCoefficients[m].c * e);
          var b = S.g_L1VenusCoefficients.length, y = 0;
          for (m = 0; m < b; m++)
            y += S.g_L1VenusCoefficients[m].a * Math.cos(S.g_L1VenusCoefficients[m].b + S.g_L1VenusCoefficients[m].c * e);
          var M = S.g_L2VenusCoefficients.length, A = 0;
          for (m = 0; m < M; m++)
            A += S.g_L2VenusCoefficients[m].a * Math.cos(S.g_L2VenusCoefficients[m].b + S.g_L2VenusCoefficients[m].c * e);
          var R = S.g_L3VenusCoefficients.length, F = 0;
          for (m = 0; m < R; m++)
            F += S.g_L3VenusCoefficients[m].a * Math.cos(S.g_L3VenusCoefficients[m].b + S.g_L3VenusCoefficients[m].c * e);
          var O = S.g_L4VenusCoefficients.length, B = 0;
          for (m = 0; m < O; m++)
            B += S.g_L4VenusCoefficients[m].a * Math.cos(S.g_L4VenusCoefficients[m].b + S.g_L4VenusCoefficients[m].c * e);
          var H = S.g_L5VenusCoefficients.length, K = 0;
          for (m = 0; m < H; m++)
            K += S.g_L5VenusCoefficients[m].a * Math.cos(S.g_L5VenusCoefficients[m].b + S.g_L5VenusCoefficients[m].c * e);
          var J = (_ + y * e + A * n + F * a + B * s + K * l) / 1e8;
          return J = x.m360(x.r2D(J)), J;
        }, en.eclipticLatitude = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_B0VenusCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_B0VenusCoefficients[_].a * Math.cos(S.g_B0VenusCoefficients[_].b + S.g_B0VenusCoefficients[_].c * e);
          var m = S.g_B1VenusCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_B1VenusCoefficients[_].a * Math.cos(S.g_B1VenusCoefficients[_].b + S.g_B1VenusCoefficients[_].c * e);
          var y = S.g_B2VenusCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_B2VenusCoefficients[_].a * Math.cos(S.g_B2VenusCoefficients[_].b + S.g_B2VenusCoefficients[_].c * e);
          var A = S.g_B3VenusCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_B3VenusCoefficients[_].a * Math.cos(S.g_B3VenusCoefficients[_].b + S.g_B3VenusCoefficients[_].c * e);
          var F = S.g_B4VenusCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_B4VenusCoefficients[_].a * Math.cos(S.g_B4VenusCoefficients[_].b + S.g_B4VenusCoefficients[_].c * e);
          var B = (g + b * e + M * n + R * a + O * s) / 1e8;
          return B = x.r2D(B), B;
        }, en.radiusVector = function(t) {
          var e = (t - 2451545) / 365250, n = e * e, a = n * e, s = a * e, l = S.g_R0VenusCoefficients.length, g = 0, _;
          for (_ = 0; _ < l; _++)
            g += S.g_R0VenusCoefficients[_].a * Math.cos(S.g_R0VenusCoefficients[_].b + S.g_R0VenusCoefficients[_].c * e);
          var m = S.g_R1VenusCoefficients.length, b = 0;
          for (_ = 0; _ < m; _++)
            b += S.g_R1VenusCoefficients[_].a * Math.cos(S.g_R1VenusCoefficients[_].b + S.g_R1VenusCoefficients[_].c * e);
          var y = S.g_R2VenusCoefficients.length, M = 0;
          for (_ = 0; _ < y; _++)
            M += S.g_R2VenusCoefficients[_].a * Math.cos(S.g_R2VenusCoefficients[_].b + S.g_R2VenusCoefficients[_].c * e);
          var A = S.g_R3VenusCoefficients.length, R = 0;
          for (_ = 0; _ < A; _++)
            R += S.g_R3VenusCoefficients[_].a * Math.cos(S.g_R3VenusCoefficients[_].b + S.g_R3VenusCoefficients[_].c * e);
          var F = S.g_R4VenusCoefficients.length, O = 0;
          for (_ = 0; _ < F; _++)
            O += S.g_R4VenusCoefficients[_].a * Math.cos(S.g_R4VenusCoefficients[_].b + S.g_R4VenusCoefficients[_].c * e);
          return (g + b * e + M * n + R * a + O * s) / 1e8;
        };
        var yl = {};
        function co(t, e, n, a, s) {
          this.fps = 0, this.width = 0, this.height = 0, this.totalFrames = 0, this.waitDownload = !1, this.format = "image/jpeg", this.width = t, this.height = e, this.fps = n, this.format = a, this.waitDownload = s;
        }
        var Sl = {};
        function ho() {
          this.bZero = 0, this.bScale = 1, this.containsBlanks = !1, this.blankValue = Number.MIN_VALUE, this.maxVal = Number.MIN_VALUE, this.minVal = Number.MAX_VALUE, this.upperCut = Number.MIN_VALUE, this.lowerCut = Number.MAX_VALUE, this.transparentBlack = !1, this.colorMapName = "viridis", this.scaleType = 0, this.onMainImageLoaded = null, this.mainImageLoadedEventHasFired = !1;
        }
        var Cl = {
          _fireMainImageLoaded: function(t) {
            this.onMainImageLoaded != null && !this.mainImageLoadedEventHasFired && (this.mainImageLoadedEventHasFired = !0, this.onMainImageLoaded(t));
          }
        };
        function Wa(t) {
          this._properties = {}, this._catalogColumnInfo = null, this._catalogSpreadSheetLayer = new Ws(), this._downloadComplete = !1, this.dataset = t, this._datasetName = t.get_name(), this._url = t.get_url(), this._url.toLowerCase().indexOf("norder") > -1 && (this._url = this._url.substring(0, this._url.toLowerCase().indexOf("norder"))), this._url += "properties", this._download();
        }
        var Tl = {
          get_properties: function() {
            return this._properties;
          },
          get_catalogSpreadSheetLayer: function() {
            return this._catalogSpreadSheetLayer;
          },
          set_catalogSpreadSheetLayer: function(t) {
            return this._catalogSpreadSheetLayer = t, t;
          },
          get_catalogColumnInfo: function() {
            return this._catalogColumnInfo;
          },
          set_catalogColumnInfo: function(t) {
            return this._catalogColumnInfo = t, t;
          },
          get_downloadComplete: function() {
            return this._downloadComplete;
          },
          _download: function() {
            this._webFile = new _r(this._url), this._webFile.onStateChange = r.bind("_onPropertiesDownloadComplete", this), this._webFile.send();
          },
          _onPropertiesDownloadComplete: function() {
            if (this._webFile.get_state() === 1)
              if (this._parseProperties(this._webFile.getText()), r.keyExists(this.get_properties(), "dataproduct_type") && this.get_properties().dataproduct_type.toLowerCase() === "catalog")
                this._catalogColumnInfo = Jn.loadFromUrl(r.replaceString(this._url, "/properties", "/metadata.xml"), r.bind("_onCatalogMetadataDownloadComplete", this));
              else {
                if (r.keyExists(this.get_properties(), "hips_data_range")) {
                  var t = this.get_properties().hips_data_range;
                  this.dataset.get_fitsProperties().minVal = parseFloat(t.split(" ")[0]), this.dataset.get_fitsProperties().maxVal = parseFloat(t.split(" ")[1]), this.dataset.get_fitsProperties().lowerCut = this.dataset.get_fitsProperties().minVal, this.dataset.get_fitsProperties().upperCut = this.dataset.get_fitsProperties().maxVal;
                }
                if (r.keyExists(this.get_properties(), "hips_pixel_cut")) {
                  var e = this.get_properties().hips_pixel_cut;
                  this.dataset.get_fitsProperties().lowerCut = parseFloat(e.split(" ")[0]), this.dataset.get_fitsProperties().upperCut = parseFloat(e.split(" ")[1]), r.keyExists(this.get_properties(), "hips_data_range") || (this.dataset.get_fitsProperties().minVal = this.dataset.get_fitsProperties().lowerCut, this.dataset.get_fitsProperties().maxVal = this.dataset.get_fitsProperties().upperCut);
                }
                this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
              }
          },
          _onCatalogMetadataDownloadComplete: function() {
            this._catalogSpreadSheetLayer.useHeadersFromVoTable(this._catalogColumnInfo), this._catalogSpreadSheetLayer.set_name(this._datasetName), this._catalogSpreadSheetLayer.id = er.createFrom(this._datasetName), P.addSpreadsheetLayer(this.get_catalogSpreadSheetLayer(), "Sky"), this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
          },
          setDownloadCompleteListener: function(t) {
            this._onDownloadComplete = t;
          },
          _parseProperties: function(t) {
            for (var e = t.split(`
`), n = r.enumerate(e); n.moveNext(); ) {
              var a = n.current;
              if (!r.whitespace(a) && !r.startsWith(a, "#")) {
                var s = a.split("=");
                if (s.length === 2) {
                  var l = r.trim(s[0]), g = r.trim(s[1]);
                  !r.whitespace(l) && !r.whitespace(g) && (this.get_properties()[l] = g);
                }
              }
            }
          }
        };
        function Be() {
        }
        Be._mulsign = function(t, e) {
          return Be._sign(e) * t;
        }, Be._isnan = function(t) {
          return t !== t;
        }, Be._isinf = function(t) {
          return Math.abs(t) === Number.POSITIVE_INFINITY;
        }, Be._sign = function(t) {
          return t ? t > 0 ? 1 : -1 : 0;
        }, Be._atanhelper = function(t) {
          var e = t * t, n = -188796008463073e-19;
          return n = n * e + 209850076645817e-18, n = n * e + -0.00110611831486672, n = n * e + 0.00370026744188713, n = n * e + -0.00889896195887655, n = n * e + 0.0165993297735292, n = n * e + -0.0254517624932313, n = n * e + 0.0337852580001353, n = n * e + -0.0407629191276837, n = n * e + 0.0466667150077841, n = n * e + -0.0523674852303482, n = n * e + 0.0587666392926674, n = n * e + -0.0666573579361081, n = n * e + 0.076921953831177, n = n * e + -0.090908995008245, n = n * e + 0.111111105648261, n = n * e + -0.142857142667713, n = n * e + 0.199999999996591, n = n * e + -0.333333333333311, n * e * t + t;
        }, Be._atan2k = function(t, e) {
          var n = 0;
          if (e < 0 && (e = -e, n = -2), t > e) {
            var a = e;
            e = t, t = -a, n += 1;
          }
          return Be._atanhelper(t / e) + n * (Math.PI / 2);
        }, Be.atan2 = function(t, e) {
          var n = Be._atan2k(Math.abs(t), e);
          return n = Be._mulsign(n, e), (Be._isinf(e) || !e) && (n = Math.PI / 2 - (Be._isinf(e) ? Be._sign(e) * (Math.PI / 2) : 0)), Be._isinf(t) && (n = Math.PI / 2 - (Be._isinf(e) ? Be._sign(e) * (Math.PI * 1 / 4) : 0)), t || (n = Be._sign(e) === -1 ? Math.PI : 0), Be._isnan(e) || Be._isnan(t) ? Number.NaN : Be._mulsign(n, t);
        }, Be.asin = function(t) {
          return Be._mulsign(Be._atan2k(Math.abs(t), Math.sqrt((1 + t) * (1 - t))), t);
        }, Be.acos = function(t) {
          return Be._mulsign(Be._atan2k(Math.sqrt((1 + t) * (1 - t)), Math.abs(t)), t) + (t < 0 ? Math.PI : 0);
        }, Be.atan = function(t) {
          var e = 0;
          t < 0 && (t = -t, e = 2), t > 1 && (t = 1 / t, e |= 1);
          var n = Be._atanhelper(t);
          return e & 1 && (n = 1.5707963267949 - n), e & 2 && (n = -n), n;
        }, Be._sincoshelper = function(t) {
          var e = t * t, n = -797255955009038e-32;
          return n = n * e + 281009972710863e-29, n = n * e - 764712219118159e-27, n = n * e + 160590430605665e-24, n = n * e - 250521083763502e-22, n = n * e + 275573192239199e-20, n = n * e - 198412698412696e-18, n = n * e + 0.00833333333333333, n = n * e - 0.166666666666667, e * n * t + t;
        }, Be.sin = function(t) {
          var e = t * Be._m_1_PI, n = Math.floor(e < 0 ? e - 0.5 : e + 0.5), a = 4 * n;
          return t -= a * Be._pI4_A, t -= a * Be._pI4_B, t -= a * Be._pI4_C, n & 1 && (t = -t), Be._sincoshelper(t);
        }, Be.cos = function(t) {
          var e = t * Be._m_1_PI - 0.5, n = 1 + 2 * Math.floor(e < 0 ? e - 0.5 : e + 0.5), a = 2 * n;
          return t -= a * Be._pI4_A, t -= a * Be._pI4_B, t -= a * Be._pI4_C, n & 2 || (t = -t), Be._sincoshelper(t);
        };
        var Ml = {};
        function qr() {
        }
        var xl = {};
        function Ia() {
          this.ix = 0, this.iy = 0, this.face = 0;
        }
        Ia.create = function(t, e, n) {
          var a = new Ia();
          return a.ix = t, a.iy = e, a.face = n, a;
        };
        var Ll = {};
        function rn() {
        }
        rn.check = function(t, e) {
          if (!t)
            throw new Error(e);
        }, rn.isqrt = function(t) {
          var e = Math.sqrt(t + 0.5);
          return t < 1 << 50 || (e * e > t ? --e : (e + 1) * (e + 1) <= t && ++e), e;
        }, rn.cosdist_zphi = function(t, e, n, a) {
          return t * n + Be.cos(e - a) * Math.sqrt((1 - t * t) * (1 - n * n));
        }, rn.fmodulo = function(t, e) {
          if (t >= 0)
            return t < e ? t : t % e;
          var n = t % e + e;
          return n === e ? 0 : n;
        };
        var Al = {};
        function Pa() {
          this.z = 0, this.phi = 0, this.sth = 0, this.have_sth = !1;
        }
        Pa.create = function(t) {
          var e = new Pa(), n = 1 / t.length();
          return e.z = t.z * n, e.phi = Be.atan2(t.y, t.x), Math.abs(e.z) > 0.99 && (e.sth = Math.sqrt(t.x * t.x + t.y * t.y) * n, e.have_sth = !0), e;
        };
        var kl = {
          toVec3: function() {
            var t;
            this.have_sth ? t = this.sth : t = Math.sqrt((1 - this.z) * (1 + this.z));
            var e = t * Be.cos(this.phi), n = t * Be.sin(this.phi);
            return $.create(e, this.z, n);
          }
        };
        function Es() {
          this.theta = 0, this.phi = 0;
        }
        Es.create = function(t, e) {
          var n = new Es();
          return n.theta = t, n.phi = e, n;
        };
        var Il = {
          normalizeTheta: function() {
            this.theta = rn.fmodulo(this.theta, 2 * Math.PI), this.theta > Math.PI && (this.phi += Math.PI, this.theta = 2 * Math.PI - this.theta);
          },
          normalize: function() {
            this.normalizeTheta(), this.phi = rn.fmodulo(this.phi, 2 * Math.PI);
          },
          toString: function() {
            var t = new r.StringBuilder();
            return t.append("ptg("), t.append(this.theta), t.append(","), t.append(this.phi), t.append(")"), t.toString();
          }
        };
        function ze() {
          switch (this._force_https = !1, this._origin_protocol = typeof window > "u" ? "https:" : window.location.protocol, this._origin_domain = typeof window > "u" ? "" : window.location.hostname, this._force_https = this._origin_protocol === "https:", this._domain_handling = {}, this._domain_handling["worldwidetelescope.org"] = 0, this._domain_handling["www.worldwidetelescope.org"] = 0, this._domain_handling["cdn.worldwidetelescope.org"] = 0, this._domain_handling["content.worldwidetelescope.org"] = 0, this._domain_handling["beta.worldwidetelescope.org"] = 0, this._domain_handling["beta-cdn.worldwidetelescope.org"] = 0, this._domain_handling["wwtstaging.azurewebsites.net"] = 0, this._domain_handling["wwtfiles.blob.core.windows.net"] = 2, this._domain_handling["wwttiles.blob.core.windows.net"] = 2, this._domain_handling["web.wwtassets.org"] = 2, this._domain_handling["data1.wwtassets.org"] = 2, this._domain_handling.localhost = 1, this._domain_handling["127.0.0.1"] = 1, this._origin_domain) {
            case "worldwidetelescope.org":
            case "www.worldwidetelescope.org":
            case "cdn.worldwidetelescope.org":
              this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
              break;
            case "beta.worldwidetelescope.org":
            case "beta-cdn.worldwidetelescope.org":
              this._core_static_baseurl = this._origin_protocol + "//beta-cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//beta.worldwidetelescope.org";
              break;
            default:
              this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
              break;
          }
          this._engine_asset_baseurl = this._origin_protocol + "//web.wwtassets.org/engine/assets", this._flagship_static_lcpaths = {}, this._flagship_static_lcpaths["/wwtweb/2massoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dembath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dss.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dusttoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthmerbath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/fixedaltitudedemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/g360.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4far.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4near.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galextoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettour.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettourfile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettours.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/glimpse.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/halphatoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem3.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/jupiter.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel1.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marshirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsmoc.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mipsgal.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moondem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moonoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoastdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/rasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/thumbnail.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tilesthumb.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/twomasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tychooct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/veblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/vlsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmap.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmsmoon.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmstoast.aspx"] = !0;
        }
        var Pl = {
          overrideAssetBaseurl: function(t) {
            this._engine_asset_baseurl = t;
          },
          rewrite: function(t, e) {
            var n = t.toLowerCase(), a, s;
            if (r.startsWith(n, "http://"))
              a = "http:", s = t.substring(7);
            else if (r.startsWith(n, "https://"))
              a = "https:", s = t.substring(8);
            else if (r.startsWith(n, "//"))
              a = "", s = t.substring(2);
            else {
              if (r.startsWith(n, "blob:"))
                return t;
              switch (e) {
                case 0:
                default:
                  a = "", s = t;
                  break;
                case 1:
                  return t = new URL(t, window.location.href).toString(), this.rewrite(t, 0);
              }
            }
            if (Z.singleton.freestandingMode)
              return t;
            var l, g, _ = s.indexOf("/");
            _ < 0 ? (l = s, g = "/") : (l = s.substring(0, _), g = s.substring(_));
            var m = l.toLowerCase(), b = g.toLowerCase().split("?")[0];
            r.keyExists(this._domain_handling, m) || (r.startsWith(m, "localhost:") || r.startsWith(m, "127.0.0.1:") ? this._domain_handling[m] = 1 : this._domain_handling[m] = 3);
            var y = this._domain_handling[m];
            switch (y) {
              case 1:
                return t;
              case 2:
              case 3:
              default:
                return this._force_https && a !== "https:" ? "https://" + l + g : t;
              case 4:
                return a || (t = "http://" + t), t = r.replaceString(r.replaceString(encodeURIComponent(t), "%7B", "{"), "%7D", "}"), this._core_dynamic_baseurl + "/webserviceproxy.aspx?targeturl=" + t;
              case 0:
                var M = !1;
                return (r.startsWith(b, "/data/") || r.keyExists(this._flagship_static_lcpaths, b) || r.startsWith(b, "/content/") || r.startsWith(b, "/engine/assets/")) && (M = !0), M ? this._core_static_baseurl + g : this._core_dynamic_baseurl + g;
            }
          },
          activateProxy: function(t) {
            if (Z.singleton.freestandingMode)
              return null;
            var e = t.toLowerCase(), n;
            r.startsWith(e, "http://") ? n = t.substring(7) : r.startsWith(e, "https://") ? n = t.substring(8) : r.startsWith(e, "//") ? n = t.substring(2) : n = t;
            var a, s = n.indexOf("/");
            s < 0 ? a = n : a = n.substring(0, s).toLowerCase(), r.keyExists(this._domain_handling, a) || (r.startsWith(a, "localhost:") || r.startsWith(a, "127.0.0.1:") ? this._domain_handling[a] = 1 : this._domain_handling[a] = 3);
            var l = this._domain_handling[a];
            return !l || l === 2 || l === 1 ? null : (this._domain_handling[a] = 4, this.rewrite(t, 0));
          },
          engineAssetUrl: function(t) {
            return r.format("{0}/{1}", this._engine_asset_baseurl, t);
          },
          coreDynamicUrl: function(t) {
            return r.format("{0}/{1}", this._core_dynamic_baseurl, t);
          },
          coreStaticUrl: function(t) {
            return r.format("{0}/{1}", this._core_static_baseurl, t);
          }
        };
        function ve() {
          this.addedToPrimitives = !1, this.annotationDirty = !0, this._opacity = 1, this._showHoverLabel = !1;
        }
        ve.prepBatch = function(t) {
          (ve.pointList == null || ve.batchDirty) && (ve.pointList = new Xr(t), ve.lineList = new fa(), ve.triangleFanPointList = new wo(), ve.triangleList = new In(), ve.lineList.set_depthBuffered(!1), ve.triangleList.depthBuffered = !1);
        }, ve.drawBatch = function(t) {
          ve.batchDirty = !1, t.gl != null && (ve.pointList != null && ve.pointList.draw(t, 1, !1), ve.lineList != null && ve.lineList.drawLines(t, 1), ve.triangleFanPointList != null && ve.triangleFanPointList.draw(t, 1), ve.triangleList != null && ve.triangleList.draw(t, 1, 0));
        }, ve.separation = function(t, e, n, a) {
          e = e / 180 * Math.PI, a = a / 180 * Math.PI, t = t / 12 * Math.PI, n = n / 12 * Math.PI;
          var s = Math.cos(e) * Math.sin(a) - Math.sin(e) * Math.cos(a) * Math.cos(n - t), l = Math.cos(a) * Math.sin(n - t), g = Math.sin(e) * Math.sin(a) + Math.cos(e) * Math.cos(a) * Math.cos(n - t), _ = Math.atan2(Math.sqrt(s * s + l * l), g);
          return _ = _ / Math.PI * 180, _ < 0 && (_ += 180), _;
        }, ve.colorToUint = function(t) {
          return t.a << 24 | t.r << 16 | t.g << 8 | t.b;
        }, ve.colorToUintAlpha = function(t, e) {
          return e << 24 | t.r << 16 | t.g << 8 | t.b;
        };
        var El = {
          draw: function(t) {
          },
          get_opacity: function() {
            return this._opacity;
          },
          set_opacity: function(t) {
            return ve.batchDirty = !0, this._opacity = t, t;
          },
          get_id: function() {
            return this._id;
          },
          set_id: function(t) {
            return this._id = t, t;
          },
          get_tag: function() {
            return this._tag;
          },
          set_tag: function(t) {
            return this._tag = t, t;
          },
          get_label: function() {
            return this._label;
          },
          set_label: function(t) {
            return this._label = t, t;
          },
          get_showHoverLabel: function() {
            return this._showHoverLabel;
          },
          set_showHoverLabel: function(t) {
            return this._showHoverLabel = t, t;
          },
          hitTest: function(t, e, n, a, s) {
            return !1;
          },
          get_center: function() {
            return this.center;
          },
          set_center: function(t) {
            return this.center = t, t;
          }
        };
        function Zn(t, e, n, a, s) {
          this.RA = 0, this.dec = 0, this.distance = 0, this.shadow = !1, this.eclipsed = !1, this.RA = t, this.dec = e, this.distance = n, this.shadow = a, this.eclipsed = s;
        }
        var Rl = {};
        function fo(t, e, n, a, s) {
          this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bNeverRises = !1, this.bValid = t, this.rise = e, this.transit = n, this.set = a, this.bNeverRises = s;
        }
        var $l = {};
        function ge() {
        }
        ge.getPlanet = function(t, e, n, a, s) {
          var l = e;
          if (a = -a, l < 9) {
            var g = hi.calculate(t, e), _ = gn.equatorial2Topocentric(g.apparentGeocentricRA, g.apparentGeocentricDeclination, g.apparentGeocentricDistance, a, n, s, t);
            return new Zn(_.x, _.y, g.apparentGeocentricDistance, !1, !1);
          } else if (l === 9) {
            var m = Se.eclipticLatitude(t), b = Se.eclipticLongitude(t), y = Se.radiusVector(t) / 149598e3, M = ci.trueObliquityOfEcliptic(t), A = x.ec2Eq(b, m, M), _ = gn.equatorial2Topocentric(A.x, A.y, y, a, n, s, t);
            return new Zn(_.x, _.y, y, !1, !1);
          } else {
            if (t !== ge._jDateLast) {
              ge._jupDetails = hi.calculate(t, 4), ge._jupPhisical = ks.calculate(t);
              var _ = gn.equatorial2Topocentric(ge._jupDetails.apparentGeocentricRA, ge._jupDetails.apparentGeocentricDeclination, ge._jupDetails.apparentGeocentricDistance, a, n, s, t);
              ge._jupDetails.apparentGeocentricRA = _.x, ge._jupDetails.apparentGeocentricDeclination = _.y, ge._galDetails = $i.calculate(t), ge._jDateLast = t;
            }
            var R = 954501e-9, F = Math.atan(0.5 * (R / ge._jupDetails.apparentGeocentricDistance)) / 3.1415927 * 180, O = F / Math.cos(ge._jupDetails.apparentGeocentricDeclination / 180 * 3.1415927) / 15, B = 0, H = 0, K = 0, J = !1, it = !1;
            switch (l) {
              case 10:
                B = ge._galDetails.satellite1.apparentRectangularCoordinates.x, H = ge._galDetails.satellite1.apparentRectangularCoordinates.y, K = ge._galDetails.satellite1.apparentRectangularCoordinates.z, it = ge._galDetails.satellite1.bInEclipse, J = ge._galDetails.satellite1.bInShadowTransit;
                break;
              case 11:
                B = ge._galDetails.satellite2.apparentRectangularCoordinates.x, H = ge._galDetails.satellite2.apparentRectangularCoordinates.y, K = ge._galDetails.satellite2.apparentRectangularCoordinates.z, it = ge._galDetails.satellite2.bInEclipse, J = ge._galDetails.satellite2.bInShadowTransit;
                break;
              case 12:
                B = ge._galDetails.satellite3.apparentRectangularCoordinates.x, H = ge._galDetails.satellite3.apparentRectangularCoordinates.y, K = ge._galDetails.satellite3.apparentRectangularCoordinates.z, it = ge._galDetails.satellite3.bInEclipse, J = ge._galDetails.satellite3.bInShadowTransit;
                break;
              case 13:
                B = ge._galDetails.satellite4.apparentRectangularCoordinates.x, H = ge._galDetails.satellite4.apparentRectangularCoordinates.y, K = ge._galDetails.satellite4.apparentRectangularCoordinates.z, it = ge._galDetails.satellite4.bInEclipse, J = ge._galDetails.satellite4.bInShadowTransit;
                break;
              case 14:
                B = ge._galDetails.satellite1.apparentShadowRectangularCoordinates.x, H = ge._galDetails.satellite1.apparentShadowRectangularCoordinates.y, K = ge._galDetails.satellite1.apparentShadowRectangularCoordinates.z * 0.9, J = ge._galDetails.satellite1.bInShadowTransit;
                break;
              case 15:
                B = ge._galDetails.satellite2.apparentShadowRectangularCoordinates.x, H = ge._galDetails.satellite2.apparentShadowRectangularCoordinates.y, K = ge._galDetails.satellite2.apparentShadowRectangularCoordinates.z * 0.9, J = ge._galDetails.satellite2.bInShadowTransit;
                break;
              case 16:
                B = ge._galDetails.satellite3.apparentShadowRectangularCoordinates.x, H = ge._galDetails.satellite3.apparentShadowRectangularCoordinates.y, K = ge._galDetails.satellite3.apparentShadowRectangularCoordinates.z * 0.9, J = ge._galDetails.satellite3.bInShadowTransit;
                break;
              case 17:
                B = ge._galDetails.satellite4.apparentShadowRectangularCoordinates.x, H = ge._galDetails.satellite4.apparentShadowRectangularCoordinates.y, K = ge._galDetails.satellite4.apparentShadowRectangularCoordinates.z * 0.9, J = ge._galDetails.satellite4.bInShadowTransit;
                break;
            }
            var ot, lt, gt = ge._jupPhisical.p / 180 * 3.1415927;
            return ot = B * Math.cos(gt) - H * Math.sin(gt), lt = B * Math.sin(gt) + H * Math.cos(gt), B = ot, H = lt, new Zn(ge._jupDetails.apparentGeocentricRA - B * O, ge._jupDetails.apparentGeocentricDeclination + H * F, ge._jupDetails.apparentGeocentricDistance + K * R / 2, J, it);
          }
        }, ge.getJulianDay = function(t, e, n) {
          return ui.dateToJD(r.truncate(t), r.truncate(e), n, !0);
        }, ge.eclipticToJ2000 = function(t, e, n) {
          var a = x.ec2Eq(t, e, ci.trueObliquityOfEcliptic(n));
          return new Zn(a.x, a.y, 0, !1, !1);
        }, ge.galacticToJ2000 = function(t, e) {
          var n = x.g2Eq(t, e);
          return new Zn(n.x, n.y, 0, !1, !1);
        }, ge.j2000ToGalactic = function(t, e) {
          var n = x.eq2G(t, e);
          return new Zn(n.x, n.y, 0, !1, !1);
        }, ge.getRiseTrinsitSet = function(t, e, n, a, s, l, g, _, m, b) {
          var y = -0.5667;
          switch (b) {
            case 0:
              y = -0.5667;
              break;
            case 1:
              y = -0.8333;
              break;
            case 2:
              y = 0.125;
              break;
          }
          var M = Ps.rise(t, a, s, l, g, _, m, n, e, y), A = !1;
          return M.bValid || (A = xt.sign(e) !== xt.sign(g)), new fo(M.bValid, M.rise, M.transit, M.set, A);
        };
        var Dl = {};
        function mn() {
          this._state = !1, this._targetState = !1, this._delayTime = 0, this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = !1, this._targetState = this._state, this._delayTime = 1e3;
        }
        mn.create = function(t, e) {
          var n = new mn();
          return n._state = t, n._targetState = t, n._delayTime = e, n;
        };
        var Nl = {
          get_state: function() {
            if (this._targetState !== this._state) {
              var t = r.now() - this._switchedTime;
              return t > this._delayTime && (this._state = this._targetState), !0;
            }
            return this._state;
          },
          set_state: function(t) {
            return this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = t, this._targetState = this._state, t;
          },
          get_targetState: function() {
            return this._targetState;
          },
          set_targetState: function(t) {
            return this._targetState !== t && (this._switchedTime = r.now(), this._targetState = t), t;
          },
          get_opacity: function() {
            if (this._targetState !== this._state) {
              var t = r.now() - this._switchedTime;
              if (t > this._delayTime)
                this._state = this._targetState;
              else {
                var e = t / this._delayTime;
                return this._targetState ? e : 1 - e;
              }
            }
            return this._state ? 1 : 0;
          },
          get_delayTime: function() {
            return this._delayTime;
          },
          set_delayTime: function(t) {
            return this._delayTime = t, t;
          }
        };
        function _i() {
          this.lat = 0, this.lng = 0, this.zoom = 0, this.rotation = 0, this.angle = 0, this.raDec = !1, this.opacity = 0, this.target = 0, this.zoom = 360, this.viewTarget = new $();
        }
        _i.create = function(t, e, n, a, s, l) {
          var g = new _i();
          return g.lat = t, g.lng = e, g.zoom = n, g.rotation = a, g.angle = s, g.raDec = !1, g.opacity = l, g.viewTarget = $.create(0, 0, 0), g.target = 20, g.targetReferenceFrame = "", g;
        }, _i.logN = function(t, e) {
          return Math.log(t) / Math.log(e);
        }, _i.sinh = function(t) {
          return (Math.exp(t) - Math.exp(-t)) / 2;
        }, _i.interpolate = function(t, e, n, a, s) {
          var l = new _i(), g = _i.easeCurve(n, a), _ = Math.min(1, n * 2), m = _i.easeCurve(_, a);
          return l.angle = e.angle * g + t.angle * (1 - g), l.rotation = e.rotation * g + t.rotation * (1 - g), s ? (l.lat = e.lat * m + t.lat * (1 - m), l.lng = e.lng * m + t.lng * (1 - m)) : (l.lat = e.lat * g + t.lat * (1 - g), l.lng = e.lng * g + t.lng * (1 - g)), l.zoom = Math.pow(2, _i.logN(e.zoom, 2) * g + _i.logN(t.zoom, 2) * (1 - g)), l.opacity = e.opacity * g + t.opacity * (1 - g), l.viewTarget = $.lerp(t.viewTarget, e.viewTarget, g), l.targetReferenceFrame = e.targetReferenceFrame, e.target === t.target ? l.target = e.target : l.target = 20, l;
        }, _i.interpolateGreatCircle = function(t, e, n, a, s) {
          var l = new _i(), g = _i.easeCurve(n, a), _ = Math.min(1, n * 2);
          _i.easeCurve(_, a), l.angle = e.angle * g + t.angle * (1 - g), l.rotation = e.rotation * g + t.rotation * (1 - g);
          var m = U.geoTo3dDouble(t.lat, t.lng), b = U.geoTo3dDouble(e.lat, e.lng), y = $.slerp(m, b, g), M = U.cartesianToLatLng(y);
          return l.lat = M.y, l.lng = M.x, l.zoom = Math.pow(2, _i.logN(e.zoom, 2) * g + _i.logN(t.zoom, 2) * (1 - g)), l.opacity = e.opacity * g + t.opacity * (1 - g), l.viewTarget = $.lerp(t.viewTarget, e.viewTarget, g), l.targetReferenceFrame = e.targetReferenceFrame, e.target === t.target ? l.target = e.target : l.target = 20, l;
        }, _i.easeCurve = function(t, e) {
          switch (e) {
            case 0:
              return t;
            case 4:
              return Math.pow(t, 2);
            case 1:
              return (1 - t) * _i.sinh(t / (0.1085712344 * 2)) / 100 + t * t;
            case 2:
              return t * (1 - _i.sinh((1 - t) / (0.1085712344 * 2)) / 100) + (1 - t) * t;
            case 3:
              return t < 0.5 ? _i.sinh(t / 0.1085712344) / 100 : 1 - _i.sinh((1 - t) / 0.1085712344) / 100;
            default:
              return t;
          }
        };
        var Fl = {
          copy: function() {
            var t = new _i();
            return t.lat = this.lat, t.lng = this.lng, t.zoom = this.zoom, t.rotation = this.rotation, t.angle = this.angle, t.raDec = this.raDec, t.opacity = this.opacity, t.viewTarget = this.viewTarget.copy(), t.target = this.target, t.targetReferenceFrame = this.targetReferenceFrame, t;
          },
          get_RA: function() {
            return (180 - (this.lng - 180)) / 360 * 24 % 24;
          },
          set_RA: function(t) {
            return this.lng = 180 - t / 24 * 360 - 180, this.raDec = !0, t;
          },
          get_dec: function() {
            return this.lat;
          },
          set_dec: function(t) {
            return this.lat = t, t;
          },
          equals: function(t) {
            if (r.canCast(t, _i)) {
              var e = t;
              return !(Math.abs(e.angle - this.angle) > 0.01 || Math.abs(e.lat - this.lat) > e.zoom / 1e4 || Math.abs(e.get_RA() - this.get_RA()) > e.zoom / 1e3 || Math.abs(e.rotation - this.rotation) > 0.1 || Math.abs(e.zoom - this.zoom) > Math.abs(e.zoom) / 1e3);
            } else
              return !1;
          }
        };
        function j() {
          this.a = 255, this.b = 255, this.g = 255, this.r = 255, this.name = "";
        }
        j.fromArgb = function(t, e, n, a) {
          var s = new j();
          return s.a = t, s.r = e, s.g = n, s.b = a, s;
        }, j._fromArgbColor = function(t, e) {
          var n = new j();
          return n.a = t, n.r = e.r, n.g = e.g, n.b = e.b, n;
        }, j.fromName = function(t) {
          var e = j.load(t);
          return e;
        }, j.load = function(t) {
          var e = 255, n = 255, a = 255, s = 255, l = t.split(":");
          if (l.length === 5)
            e = parseInt(l[1]), n = parseInt(l[2]), a = parseInt(l[3]), s = parseInt(l[4]);
          else {
            if (l.length === 2)
              return j.fromName(l[1].toLowerCase());
            if (l.length === 1 && r.startsWith(l[0], "#"))
              return j.fromHex(l[0]);
            if (l.length === 1 && l[0].length === 8)
              return j.fromSimpleHex(l[0]);
            if (l.length === 1)
              return j._fromWindowsNamedColor(l[0]);
          }
          return j.fromArgb(e, n, a, s);
        }, j._fromWindowsNamedColor = function(t) {
          switch (t.toLowerCase()) {
            case "activeborder":
              return j.fromArgb(255, 180, 180, 180);
            case "activecaption":
              return j.fromArgb(255, 153, 180, 209);
            case "activecaptiontext":
              return j.fromArgb(255, 0, 0, 0);
            case "appworkspace":
              return j.fromArgb(255, 171, 171, 171);
            case "control":
              return j.fromArgb(255, 240, 240, 240);
            case "controldark":
              return j.fromArgb(255, 160, 160, 160);
            case "controldarkdark":
              return j.fromArgb(255, 105, 105, 105);
            case "controllight":
              return j.fromArgb(255, 227, 227, 227);
            case "controllightlight":
              return j.fromArgb(255, 255, 255, 255);
            case "controltext":
              return j.fromArgb(255, 0, 0, 0);
            case "desktop":
              return j.fromArgb(255, 255, 255, 255);
            case "graytext":
              return j.fromArgb(255, 109, 109, 109);
            case "highlight":
              return j.fromArgb(255, 51, 153, 255);
            case "highlighttext":
              return j.fromArgb(255, 255, 255, 255);
            case "hottrack":
              return j.fromArgb(255, 0, 102, 204);
            case "inactiveborder":
              return j.fromArgb(255, 244, 247, 252);
            case "inactivecaption":
              return j.fromArgb(255, 191, 205, 219);
            case "inactivecaptiontext":
              return j.fromArgb(255, 0, 0, 0);
            case "info":
              return j.fromArgb(255, 255, 255, 225);
            case "infotext":
              return j.fromArgb(255, 0, 0, 0);
            case "menu":
              return j.fromArgb(255, 240, 240, 240);
            case "menutext":
              return j.fromArgb(255, 0, 0, 0);
            case "scrollbar":
              return j.fromArgb(255, 200, 200, 200);
            case "window":
              return j.fromArgb(255, 255, 255, 255);
            case "windowframe":
              return j.fromArgb(255, 100, 100, 100);
            case "windowtext":
              return j.fromArgb(255, 0, 0, 0);
            case "transparent":
              return j.fromArgb(0, 255, 255, 255);
            case "aliceblue":
              return j.fromArgb(255, 240, 248, 255);
            case "antiquewhite":
              return j.fromArgb(255, 250, 235, 215);
            case "aqua":
              return j.fromArgb(255, 0, 255, 255);
            case "aquamarine":
              return j.fromArgb(255, 127, 255, 212);
            case "azure":
              return j.fromArgb(255, 240, 255, 255);
            case "beige":
              return j.fromArgb(255, 245, 245, 220);
            case "bisque":
              return j.fromArgb(255, 255, 228, 196);
            case "black":
              return j.fromArgb(255, 0, 0, 0);
            case "blanchedalmond":
              return j.fromArgb(255, 255, 235, 205);
            case "blue":
              return j.fromArgb(255, 0, 0, 255);
            case "blueviolet":
              return j.fromArgb(255, 138, 43, 226);
            case "brown":
              return j.fromArgb(255, 165, 42, 42);
            case "burlywood":
              return j.fromArgb(255, 222, 184, 135);
            case "cadetblue":
              return j.fromArgb(255, 95, 158, 160);
            case "chartreuse":
              return j.fromArgb(255, 127, 255, 0);
            case "chocolate":
              return j.fromArgb(255, 210, 105, 30);
            case "coral":
              return j.fromArgb(255, 255, 127, 80);
            case "cornflowerblue":
              return j.fromArgb(255, 100, 149, 237);
            case "cornsilk":
              return j.fromArgb(255, 255, 248, 220);
            case "crimson":
              return j.fromArgb(255, 220, 20, 60);
            case "cyan":
              return j.fromArgb(255, 0, 255, 255);
            case "darkblue":
              return j.fromArgb(255, 0, 0, 139);
            case "darkcyan":
              return j.fromArgb(255, 0, 139, 139);
            case "darkgoldenrod":
              return j.fromArgb(255, 184, 134, 11);
            case "darkgray":
              return j.fromArgb(255, 169, 169, 169);
            case "darkgreen":
              return j.fromArgb(255, 0, 100, 0);
            case "darkkhaki":
              return j.fromArgb(255, 189, 183, 107);
            case "darkmagenta":
              return j.fromArgb(255, 139, 0, 139);
            case "darkolivegreen":
              return j.fromArgb(255, 85, 107, 47);
            case "darkorange":
              return j.fromArgb(255, 255, 140, 0);
            case "darkorchid":
              return j.fromArgb(255, 153, 50, 204);
            case "darkred":
              return j.fromArgb(255, 139, 0, 0);
            case "darksalmon":
              return j.fromArgb(255, 233, 150, 122);
            case "darkseagreen":
              return j.fromArgb(255, 143, 188, 139);
            case "darkslateblue":
              return j.fromArgb(255, 72, 61, 139);
            case "darkslategray":
              return j.fromArgb(255, 47, 79, 79);
            case "darkturquoise":
              return j.fromArgb(255, 0, 206, 209);
            case "darkviolet":
              return j.fromArgb(255, 148, 0, 211);
            case "deeppink":
              return j.fromArgb(255, 255, 20, 147);
            case "deepskyblue":
              return j.fromArgb(255, 0, 191, 255);
            case "dimgray":
              return j.fromArgb(255, 105, 105, 105);
            case "dodgerblue":
              return j.fromArgb(255, 30, 144, 255);
            case "firebrick":
              return j.fromArgb(255, 178, 34, 34);
            case "floralwhite":
              return j.fromArgb(255, 255, 250, 240);
            case "forestgreen":
              return j.fromArgb(255, 34, 139, 34);
            case "fuchsia":
              return j.fromArgb(255, 255, 0, 255);
            case "gainsboro":
              return j.fromArgb(255, 220, 220, 220);
            case "ghostwhite":
              return j.fromArgb(255, 248, 248, 255);
            case "gold":
              return j.fromArgb(255, 255, 215, 0);
            case "goldenrod":
              return j.fromArgb(255, 218, 165, 32);
            case "gray":
              return j.fromArgb(255, 128, 128, 128);
            case "green":
              return j.fromArgb(255, 0, 128, 0);
            case "greenyellow":
              return j.fromArgb(255, 173, 255, 47);
            case "honeydew":
              return j.fromArgb(255, 240, 255, 240);
            case "hotpink":
              return j.fromArgb(255, 255, 105, 180);
            case "indianred":
              return j.fromArgb(255, 205, 92, 92);
            case "indigo":
              return j.fromArgb(255, 75, 0, 130);
            case "ivory":
              return j.fromArgb(255, 255, 255, 240);
            case "khaki":
              return j.fromArgb(255, 240, 230, 140);
            case "lavender":
              return j.fromArgb(255, 230, 230, 250);
            case "lavenderblush":
              return j.fromArgb(255, 255, 240, 245);
            case "lawngreen":
              return j.fromArgb(255, 124, 252, 0);
            case "lemonchiffon":
              return j.fromArgb(255, 255, 250, 205);
            case "lightblue":
              return j.fromArgb(255, 173, 216, 230);
            case "lightcoral":
              return j.fromArgb(255, 240, 128, 128);
            case "lightcyan":
              return j.fromArgb(255, 224, 255, 255);
            case "lightgoldenrodyellow":
              return j.fromArgb(255, 250, 250, 210);
            case "lightgray":
              return j.fromArgb(255, 211, 211, 211);
            case "lightgreen":
              return j.fromArgb(255, 144, 238, 144);
            case "lightpink":
              return j.fromArgb(255, 255, 182, 193);
            case "lightsalmon":
              return j.fromArgb(255, 255, 160, 122);
            case "lightseagreen":
              return j.fromArgb(255, 32, 178, 170);
            case "lightskyblue":
              return j.fromArgb(255, 135, 206, 250);
            case "lightslategray":
              return j.fromArgb(255, 119, 136, 153);
            case "lightsteelblue":
              return j.fromArgb(255, 176, 196, 222);
            case "lightyellow":
              return j.fromArgb(255, 255, 255, 224);
            case "lime":
              return j.fromArgb(255, 0, 255, 0);
            case "limegreen":
              return j.fromArgb(255, 50, 205, 50);
            case "linen":
              return j.fromArgb(255, 250, 240, 230);
            case "magenta":
              return j.fromArgb(255, 255, 0, 255);
            case "maroon":
              return j.fromArgb(255, 128, 0, 0);
            case "mediumaquamarine":
              return j.fromArgb(255, 102, 205, 170);
            case "mediumblue":
              return j.fromArgb(255, 0, 0, 205);
            case "mediumorchid":
              return j.fromArgb(255, 186, 85, 211);
            case "mediumpurple":
              return j.fromArgb(255, 147, 112, 219);
            case "mediumseagreen":
              return j.fromArgb(255, 60, 179, 113);
            case "mediumslateblue":
              return j.fromArgb(255, 123, 104, 238);
            case "mediumspringgreen":
              return j.fromArgb(255, 0, 250, 154);
            case "mediumturquoise":
              return j.fromArgb(255, 72, 209, 204);
            case "mediumvioletred":
              return j.fromArgb(255, 199, 21, 133);
            case "midnightblue":
              return j.fromArgb(255, 25, 25, 112);
            case "mintcream":
              return j.fromArgb(255, 245, 255, 250);
            case "mistyrose":
              return j.fromArgb(255, 255, 228, 225);
            case "moccasin":
              return j.fromArgb(255, 255, 228, 181);
            case "navajowhite":
              return j.fromArgb(255, 255, 222, 173);
            case "navy":
              return j.fromArgb(255, 0, 0, 128);
            case "oldlace":
              return j.fromArgb(255, 253, 245, 230);
            case "olive":
              return j.fromArgb(255, 128, 128, 0);
            case "olivedrab":
              return j.fromArgb(255, 107, 142, 35);
            case "orange":
              return j.fromArgb(255, 255, 165, 0);
            case "orangered":
              return j.fromArgb(255, 255, 69, 0);
            case "orchid":
              return j.fromArgb(255, 218, 112, 214);
            case "palegoldenrod":
              return j.fromArgb(255, 238, 232, 170);
            case "palegreen":
              return j.fromArgb(255, 152, 251, 152);
            case "paleturquoise":
              return j.fromArgb(255, 175, 238, 238);
            case "palevioletred":
              return j.fromArgb(255, 219, 112, 147);
            case "papayawhip":
              return j.fromArgb(255, 255, 239, 213);
            case "peachpuff":
              return j.fromArgb(255, 255, 218, 185);
            case "peru":
              return j.fromArgb(255, 205, 133, 63);
            case "pink":
              return j.fromArgb(255, 255, 192, 203);
            case "plum":
              return j.fromArgb(255, 221, 160, 221);
            case "powderblue":
              return j.fromArgb(255, 176, 224, 230);
            case "purple":
              return j.fromArgb(255, 128, 0, 128);
            case "red":
              return j.fromArgb(255, 255, 0, 0);
            case "rosybrown":
              return j.fromArgb(255, 188, 143, 143);
            case "royalblue":
              return j.fromArgb(255, 65, 105, 225);
            case "saddlebrown":
              return j.fromArgb(255, 139, 69, 19);
            case "salmon":
              return j.fromArgb(255, 250, 128, 114);
            case "sandybrown":
              return j.fromArgb(255, 244, 164, 96);
            case "seagreen":
              return j.fromArgb(255, 46, 139, 87);
            case "seashell":
              return j.fromArgb(255, 255, 245, 238);
            case "sienna":
              return j.fromArgb(255, 160, 82, 45);
            case "silver":
              return j.fromArgb(255, 192, 192, 192);
            case "skyblue":
              return j.fromArgb(255, 135, 206, 235);
            case "slateblue":
              return j.fromArgb(255, 106, 90, 205);
            case "slategray":
              return j.fromArgb(255, 112, 128, 144);
            case "snow":
              return j.fromArgb(255, 255, 250, 250);
            case "springgreen":
              return j.fromArgb(255, 0, 255, 127);
            case "steelblue":
              return j.fromArgb(255, 70, 130, 180);
            case "tan":
              return j.fromArgb(255, 210, 180, 140);
            case "teal":
              return j.fromArgb(255, 0, 128, 128);
            case "thistle":
              return j.fromArgb(255, 216, 191, 216);
            case "tomato":
              return j.fromArgb(255, 255, 99, 71);
            case "turquoise":
              return j.fromArgb(255, 64, 224, 208);
            case "violet":
              return j.fromArgb(255, 238, 130, 238);
            case "wheat":
              return j.fromArgb(255, 245, 222, 179);
            case "white":
              return j.fromArgb(255, 255, 255, 255);
            case "whitesmoke":
              return j.fromArgb(255, 245, 245, 245);
            case "yellow":
              return j.fromArgb(255, 255, 255, 0);
            case "yellowgreen":
              return j.fromArgb(255, 154, 205, 50);
            case "buttonface":
              return j.fromArgb(255, 240, 240, 240);
            case "buttonhighlight":
              return j.fromArgb(255, 255, 255, 255);
            case "buttonshadow":
              return j.fromArgb(255, 160, 160, 160);
            case "gradientactivecaption":
              return j.fromArgb(255, 185, 209, 234);
            case "gradientinactivecaption":
              return j.fromArgb(255, 215, 228, 242);
            case "menubar":
              return j.fromArgb(255, 240, 240, 240);
            case "menuhighlight":
              return j.fromArgb(255, 51, 153, 255);
          }
          return j.fromArgb(255, 255, 255, 255);
        }, j.fromHex = function(t) {
          var e = xt.fromHex(t.substr(1, 2)), n = xt.fromHex(t.substr(3, 2)), a = xt.fromHex(t.substr(5, 2)), s = 255;
          return j.fromArgb(s, e, n, a);
        }, j.fromSimpleHex = function(t) {
          var e = xt.fromHex(t.substr(0, 2)), n = xt.fromHex(t.substr(2, 2)), a = xt.fromHex(t.substr(4, 2)), s = xt.fromHex(t.substr(6, 2));
          return j.fromArgb(e, n, a, s);
        }, j.fromInt = function(t) {
          var e = (t & 4278190080) >>> 24, n = (t & 16711680) >>> 16, a = (t & 65280) >>> 8, s = t & 255;
          return j.fromArgb(s, e, n, a);
        };
        var Bl = {
          toFormat: function() {
            return r.emptyString(this.name) ? r.format("rgb({0},{1},{2})", this.r.toString(), this.g.toString(), this.b.toString()) : this.name;
          },
          save: function() {
            return r.emptyString(this.name) ? r.format("{0}:{1}:{2}:{3}:{4}", 1, this.a, this.r, this.g, this.b) : r.format("{0}:{1}", 0, this.name);
          },
          toString: function() {
            return r.emptyString(this.name) ? r.format("#{0}{1}{2}", xt.toHex(this.r), xt.toHex(this.g), xt.toHex(this.b)) : this.name;
          },
          toSimpleHex: function() {
            return r.emptyString(this.name) ? r.format("{0}{1}{2}{3}", xt.toHex(this.a), xt.toHex(this.r), xt.toHex(this.g), xt.toHex(this.b)) : this.name;
          },
          _clone: function() {
            return j.fromArgb(this.a, this.r, this.g, this.b);
          }
        };
        function Pt() {
        }
        Pt.get_black = function() {
          return j.fromArgb(255, 0, 0, 0);
        }, Pt.get_blue = function() {
          return j.fromArgb(255, 0, 0, 255);
        }, Pt.get_brown = function() {
          return j.fromArgb(255, 165, 42, 42);
        }, Pt.get_cyan = function() {
          return j.fromArgb(255, 0, 255, 255);
        }, Pt.get_darkGray = function() {
          return j.fromArgb(255, 169, 169, 169);
        }, Pt.get_gray = function() {
          return j.fromArgb(255, 128, 128, 128);
        }, Pt.get_green = function() {
          return j.fromArgb(255, 0, 255, 0);
        }, Pt.get_lightGray = function() {
          return j.fromArgb(255, 211, 211, 211);
        }, Pt.get_magenta = function() {
          return j.fromArgb(255, 255, 0, 255);
        }, Pt.get_orange = function() {
          return j.fromArgb(255, 255, 165, 0);
        }, Pt.get_purple = function() {
          return j.fromArgb(255, 128, 0, 128);
        }, Pt.get_red = function() {
          return j.fromArgb(255, 255, 0, 0);
        }, Pt.get_transparent = function() {
          return j.fromArgb(0, 255, 255, 255);
        }, Pt.get_white = function() {
          return j.fromArgb(255, 255, 255, 255);
        }, Pt.get_yellow = function() {
          return j.fromArgb(255, 255, 255, 0);
        };
        var zl = {};
        function jt() {
          this._pointCount = 0, this._boundry = !1, this._noInterpollation = !1, this.readOnly = !1, this.radius = 1, this._drawCount = 0, this._constellationVertexBuffers = {};
        }
        jt.createBasic = function(t) {
          var e = new jt();
          e._name = t, e._url = null, e.lines = [];
          for (var n = r.enumerate(r.keys(jt.fullNames)); n.moveNext(); ) {
            var a = n.current;
            e.lines.push(new Rs(a));
          }
          return e;
        }, jt.create = function(t, e, n, a, s) {
          var l = new jt();
          return l._noInterpollation = a, l._boundry = n, l._name = t, l._url = e, l.getFile(), l;
        }, jt.drawConstellationNames = function(t, e, n) {
          jt._namesBatch == null && (jt.initializeConstellationNames(), jt._namesBatch == null) || jt._namesBatch.draw(t, e, n);
        }, jt.initializeConstellationNames = function() {
          if (jt.constellationCentroids != null) {
            jt._namesBatch = new vn(X.get_active().get_constellationLabelsHeight());
            for (var t = r.enumerate(r.keys(jt.constellationCentroids)); t.moveNext(); ) {
              var e = t.current, n = jt.constellationCentroids[e], a = U.raDecTo3dAu(n.get_RA(), n.get_dec(), 1), s = $.create(0, 1, 0), l = n.get_name();
              n.get_name() === "Triangulum Australe" && (l = r.replaceString(l, " ", `
   `)), jt._namesBatch.add(new nr(a, s, l, X.get_active().get_constellationLabelsHeight(), 125e-6));
            }
          }
        }, jt.drawArtwork = function(t) {
          if (jt.artwork == null) {
            jt._artFile == null && (jt._artFile = new pn(), jt._artFile.loadFromUrl(ze.singleton.coreStaticUrl("wwtweb/catalog.aspx?W=hevelius"), jt._onArtReady));
            return;
          }
          jt._maxSeperation = Math.max(0.5, Math.cos(t.get_fovAngle() * 2 / 180 * Math.PI));
          for (var e = r.enumerate(jt.artwork); e.moveNext(); ) {
            var n = e.current, a = jt.pictureBlendStates[n.get_constellation()];
            if (a.set_targetState(X.get_active().get_constellationArtFilter().isSet(n.get_constellation())), a.get_state()) {
              var s = !1, l = jt.constellationCentroids[n.get_constellation()];
              if (l != null) {
                var g = U.raDecTo3d(s ? -l.get_RA() - 6 : l.get_RA(), l.get_dec());
                $.dot(t.get_viewPoint(), g) > jt._maxSeperation && t.drawImageSet(n.get_studyImageset(), 100);
              }
            }
          }
        }, jt._onArtReady = function() {
          jt._artFile.childLoadCallback(jt._loadArtList);
        }, jt._loadArtList = function() {
          jt.artwork = jt._artFile.get_places();
        }, jt.initializeConstellations = function() {
          if (jt.containment == null) {
            var t = ze.singleton.engineAssetUrl("ConstellationNamePositions_EN.txt");
            jt._webFileConstNames = new _r(t), jt._webFileConstNames.onStateChange = jt._loadNames, jt._webFileConstNames.send(), jt.containment = jt.create("Constellations", ze.singleton.engineAssetUrl("constellations.txt"), !0, !0, !0);
          }
        }, jt._loadNames = function() {
          jt._webFileConstNames.get_state() === 2 ? alert(jt._webFileConstNames.get_message()) : jt._webFileConstNames.get_state() === 1 && jt._centroidsReady(jt._webFileConstNames.getText());
        }, jt._centroidsReady = function(t) {
          jt.constellationCentroids = {}, jt.fullNames = {}, jt.abbreviations = {}, jt.bitIDs = {};
          for (var e = t.split(`\r
`), n = 0, a, s = r.enumerate(e); s.moveNext(); ) {
            var l = s.current;
            a = l;
            var g = a.split(",");
            jt.fullNames[g[1]] = g[0], jt.abbreviations[g[0]] = g[1], jt.bitIDs[g[1]] = n++, jt.pictureBlendStates[g[1]] = mn.create(!0, 1e3), jt.constellationCentroids[g[1]] = fr.create(g[0], parseFloat(g[3]), parseFloat(g[2]), 128, g[1], 2, 360);
          }
          Z.set_renderNeeded(!0), ke.buildConstellationFilters();
        }, jt.fullName = function(t) {
          return r.keyExists(jt.fullNames, t) ? jt.fullNames[t] : t;
        }, jt.abbreviation = function(t) {
          return jt.abbreviations != null && !r.emptyString(t) && r.keyExists(jt.abbreviations, t) ? jt.abbreviations[t] : t;
        };
        var Ol = {
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name = t, t;
          },
          getFile: function() {
            this._webFile = new _r(this._url), this._webFile.onStateChange = r.bind("fileStateChange", this), this._webFile.send();
          },
          fileStateChange: function() {
            this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadConstellationData(this._webFile.getText());
          },
          _loadConstellationData: function(t) {
            this._boundry && !this._noInterpollation && (jt.boundries = {}), this.lines = [];
            var e = null;
            try {
              for (var n = t.split(`\r
`), a, s = "", l, g, _ = 0, m = 0, b = r.enumerate(n); b.moveNext(); ) {
                var y = b.current, M = y;
                if (M.substr(11, 2) === "- " && (M = M.substr(0, 11) + " -" + M.substr(13, M.length - 13)), M.substr(11, 2) === "+ " && (M = M.substr(0, 11) + " +" + M.substr(13, M.length - 13)), g = parseFloat(M.substr(11, 10)), this._noInterpollation, l = parseFloat(M.substr(0, 10)), a = r.trim(M.substr(23, 4)), !this._boundry)
                  r.trim(M.substr(28, 1)) && (m = parseInt(M.substr(28, 1)));
                else if (this._noInterpollation && M.substr(28, 1) !== "O")
                  continue;
                a !== s && (m = 3, e = new Rs(a), this.lines.push(e), this._boundry && !this._noInterpollation && (jt.boundries[a] = e), s = a, _ = 0), this._noInterpollation && (Math.abs(l - _) > 12 && (l = l - 24 * (l - _ < 0 ? -1 : 1)), _ = l);
                var A = null;
                M.length > 30 && (A = r.trim(M.substr(30))), (A == null || A !== "Empty") && e.add(l, g, m, A), this._pointCount++, m = 1;
              }
            } catch {
            }
            Z.set_renderNeeded(!0);
          },
          draw: function(t, e, n, a) {
            jt._maxSeperation = Math.max(0.6, Math.cos(t.get_fovAngle() * 2 / 180 * Math.PI)), this._drawCount = 0;
            var s = null;
            if (!(this.lines == null || jt.constellationCentroids == null)) {
              jt._constToDraw = n;
              for (var l = r.enumerate(this.lines); l.moveNext(); ) {
                var g = l.current;
                jt._constToDraw === g.get_name() && this._boundry ? s = g : (!e || !this._boundry) && this._drawSingleConstellation(t, g, 1);
              }
              s != null && this._drawSingleConstellation(t, s, 1);
            }
          },
          _drawSingleConstellation: function(t, e, n) {
            var a = jt.constellationCentroids[e.get_name()];
            if (a != null) {
              var s = U.raDecTo3d(a.get_RA(), a.get_dec());
              if ($.dot(t.get_viewPoint(), s) < jt._maxSeperation)
                return;
            }
            if (!r.keyExists(this._constellationVertexBuffers, e.get_name())) {
              var l = e.points.length, g = new an();
              g.set_depthBuffered(!1), this._constellationVertexBuffers[e.get_name()] = g;
              for (var _ = new $(), m, b = 0; b < l; b++)
                !e.points[b].pointType || !b ? _ = U.raDecTo3d(e.points[b].RA, e.points[b].dec) : (m = U.raDecTo3d(e.points[b].RA, e.points[b].dec), g.addLine(_, m), _ = m);
              this._boundry && (m = U.raDecTo3d(e.points[0].RA, e.points[0].dec), g.addLine(_, m));
            }
            var y = "red";
            this._boundry ? jt._constToDraw !== e.get_name() ? y = X.get_globalSettings().get_constellationBoundryColor() : y = X.get_globalSettings().get_constellationSelectionColor() : y = X.get_globalSettings().get_constellationFigureColor(), this._constellationVertexBuffers[e.get_name()].drawLines(t, n, j.load(y));
          },
          _drawSingleConstellationOld: function(t, e) {
            var n = jt.constellationCentroids[e.get_name()];
            if (n != null) {
              var a = U.raDecTo3d(n.get_RA(), n.get_dec());
              if ($.dot(t.get_viewPoint(), a) < jt._maxSeperation)
                return;
            }
            this._drawCount++;
            var s;
            if (this._boundry ? jt._constToDraw !== e.get_name() ? s = X.get_globalSettings().get_constellationBoundryColor() : s = X.get_globalSettings().get_constellationSelectionColor() : s = X.get_globalSettings().get_constellationFigureColor(), t.gl == null) {
              var l = t.device, g = e.points.length, _ = new $();
              l.save();
              var m = !1;
              l.beginPath(), l.strokeStyle = s, l.lineWidth = 2, l.globalAlpha = 0.25;
              for (var b = 0; b < g; b++)
                if (!e.points[b].pointType || !b)
                  m && l.stroke(), _ = t.WVP.transform(U.raDecTo3d(e.points[b].RA, e.points[b].dec)), l.moveTo(_.x, _.y);
                else {
                  var y = t.WVP.transform(U.raDecTo3d(e.points[b].RA, e.points[b].dec));
                  l.lineTo(y.x, y.y), m = !0;
                }
              this._boundry && l.closePath(), l.stroke(), l.restore();
            }
          },
          findConstellationForPoint: function(t, e) {
            if (e > 88.402 || this.lines == null)
              return "UMI";
            for (var n = r.enumerate(this.lines); n.moveNext(); ) {
              var a = n.current, s = a.points.length, l, g, _ = !1;
              for (l = 0, g = s - 1; l < s; g = l++)
                (a.points[l].dec <= e && e < a.points[g].dec || a.points[g].dec <= e && e < a.points[l].dec) && t < (a.points[g].RA - a.points[l].RA) * (e - a.points[l].dec) / (a.points[g].dec - a.points[l].dec) + a.points[l].RA && (_ = !_);
              if (_)
                return a.get_name();
            }
            return t > 0 ? this.findConstellationForPoint(t - 24, e) : e > 65.5 ? "UMI" : e < -65.5 ? "OCT" : "Error";
          }
        };
        function Rs(t) {
          this._name = t, this.points = [];
        }
        var Vl = {
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name = t, t;
          },
          add: function(t, e, n, a) {
            this.points.push(new _o(t, e, n, a));
          }
        };
        function _o(t, e, n, a) {
          this.RA = 0, this.dec = 0, this.pointType = 0, this.name = null, this.RA = t, this.dec = e, this.pointType = n, this.name = a;
        }
        var Ul = {
          toString: function() {
            return r.emptyString(this.name) ? U.formatDMS((this.RA / 360 * 24 + 12) % 24) + ", " + U.formatDMS(this.dec) + ", " + this.pointType.toString() : this.name + ", " + this.pointType.toString();
          }
        };
        function ke() {
          this.bits = new Array(3), this.oldBits = new Array(3), this.blendState = mn.create(!1, 1e3), this.internal = !1, this.settingsOwned = !1;
          for (var t = 0; t < 3; t++)
            this.bits[t] = ~this.bits[t], this.oldBits[t] = this.bits[t];
        }
        ke.buildConstellationFilters = function() {
          var t = ke.get_allConstellation();
          t.internal = !0, ke.families.AllConstellation = t, ke.families.Zodiacal = ke.get_zodiacal(), ke.families["Ursa Major Family"] = ke.get_ursaMajorFamily(), ke.families["Perseus Family"] = ke.get_perseusFamily(), ke.families["Hercules Family"] = ke.get_herculesFamily(), ke.families["Orion Family"] = ke.get_orionFamily(), ke.families["Heavenly Waters"] = ke.get_heavenlyWaters(), ke.families["Bayer Family"] = ke.get_bayerFamily(), ke.families["La Caille Family"] = ke.get_laCaileFamily();
        }, ke.saveCustomFilters = function() {
          var t = new r.StringBuilder(), e = ke.families;
          for (var n in e) {
            var a = { key: n, value: e[n] };
            a.value.internal || (t.append(a.key), t.append(";"), t.appendLine(a.value.toString()));
          }
        }, ke.get_allConstellation = function() {
          var t = new ke();
          return t.setAll(!0), t;
        }, ke.get_zodiacal = function() {
          var t = new ke();
          return t.set("ARI", !0), t.set("TAU", !0), t.set("GEM", !0), t.set("CNC", !0), t.set("LEO", !0), t.set("VIR", !0), t.set("LIB", !0), t.set("SCO", !0), t.set("SGR", !0), t.set("CAP", !0), t.set("AQR", !0), t.set("PSC", !0), t.internal = !0, t;
        }, ke.get_ursaMajorFamily = function() {
          var t = new ke();
          return t.set("UMA", !0), t.set("UMI", !0), t.set("DRA", !0), t.set("CVN", !0), t.set("BOO", !0), t.set("COM", !0), t.set("CRB", !0), t.set("CAM", !0), t.set("LYN", !0), t.set("LMI", !0), t.internal = !0, t;
        }, ke.get_perseusFamily = function() {
          var t = new ke();
          return t.set("CAS", !0), t.set("CEP", !0), t.set("AND", !0), t.set("PER", !0), t.set("PEG", !0), t.set("CET", !0), t.set("AUR", !0), t.set("LAC", !0), t.set("TRI", !0), t.internal = !0, t;
        }, ke.get_herculesFamily = function() {
          var t = new ke();
          return t.set("HER", !0), t.set("SGE", !0), t.set("AQL", !0), t.set("LYR", !0), t.set("CYG", !0), t.set("VUL", !0), t.set("HYA", !0), t.set("SEX", !0), t.set("CRT", !0), t.set("CRV", !0), t.set("OPH", !0), t.set("SER1", !0), t.set("SER2", !0), t.set("SCT", !0), t.set("CEN", !0), t.set("LUP", !0), t.set("CRA", !0), t.set("ARA", !0), t.set("TRA", !0), t.set("CRU", !0), t.internal = !0, t;
        }, ke.get_orionFamily = function() {
          var t = new ke();
          return t.set("ORI", !0), t.set("CMA", !0), t.set("CMI", !0), t.set("MON", !0), t.set("LEP", !0), t.internal = !0, t;
        }, ke.get_heavenlyWaters = function() {
          var t = new ke();
          return t.set("DEL", !0), t.set("EQU", !0), t.set("ERI", !0), t.set("PSA", !0), t.set("CAR", !0), t.set("PUP", !0), t.set("VEL", !0), t.set("PYX", !0), t.set("COL", !0), t.internal = !0, t;
        }, ke.get_bayerFamily = function() {
          var t = new ke();
          return t.set("HYA", !0), t.set("DOR", !0), t.set("VOL", !0), t.set("APS", !0), t.set("PAV", !0), t.set("GRU", !0), t.set("PHE", !0), t.set("TUC", !0), t.set("IND", !0), t.set("CHA", !0), t.set("MUS", !0), t.internal = !0, t;
        }, ke.get_laCaileFamily = function() {
          var t = new ke();
          return t.set("NOR", !0), t.set("CIR", !0), t.set("TEL", !0), t.set("MIC", !0), t.set("SCL", !0), t.set("FOR", !0), t.set("CAE", !0), t.set("HOR", !0), t.set("OCT", !0), t.set("MEN", !0), t.set("RET", !0), t.set("PIC", !0), t.set("ANT", !0), t.internal = !0, t;
        }, ke.parse = function(t) {
          var e = t.split(","), n = new ke();
          try {
            for (var a = 0; a < 3; a++)
              n.bits[a] = parseInt(e[a]);
          } catch {
          }
          return n;
        };
        var Hl = {
          _saveBits: function() {
            for (var t = 0; t < 3; t++)
              this.oldBits[t] = this.bits[t];
          },
          _isChanged: function() {
            for (var t = 0; t < 3; t++)
              if (this.oldBits[t] !== this.bits[t])
                return !0;
            return !1;
          },
          _checkChanged: function() {
            this._isChanged() && this._fireChanged();
          },
          isEnabled: function(t) {
            var e = jt.bitIDs[t], n = e / 32;
            return e = e % 32, this.blendState.get_state() && !!(1 << e & this.bits[n]);
          },
          isSet: function(t) {
            this._saveBits();
            var e = jt.bitIDs[t], n = r.truncate(e / 32);
            return e = e % 32, !!(1 << e & this.bits[n]);
          },
          set: function(t, e) {
            this._saveBits();
            var n = jt.bitIDs[t], a = n / 32;
            n = n % 32, e ? this.bits[a] = this.bits[a] | 1 << n : this.bits[a] = this.bits[a] ^ 1 << n, this._checkChanged();
          },
          setAll: function(t) {
            this._saveBits();
            for (var e = 0; e < 89; e++) {
              var n = e / 32, a = e % 32;
              t ? this.bits[n] = this.bits[n] | 1 << a : this.bits[n] = this.bits[n] ^ 1 << a;
            }
            this._checkChanged();
          },
          setBits: function(t) {
            this._saveBits();
            for (var e = 0; e < 3; e++)
              this.bits[e] = t[e * 4] + (t[e * 4 + 1] << 8) + (t[e * 4 + 2] << 16) + (t[e * 4 + 3] << 24);
            this._checkChanged();
          },
          getBits: function() {
            for (var t = new Array(12), e = 0, n = 0; n < 3; n++)
              t[e++] = this.bits[n], t[e++] = this.bits[n] >> 8, t[e++] = this.bits[n] >> 16, t[e++] = this.bits[n] >> 24;
            return t;
          },
          cloneFilter: function(t) {
            this._saveBits();
            for (var e = 0; e < 3; e++)
              this.bits[e] = t.bits[e];
            this._checkChanged();
          },
          clone: function() {
            var t = new ke();
            return t.cloneFilter(this), t;
          },
          combine: function(t) {
            this._saveBits();
            for (var e = 0; e < 3; e++)
              this.bits[e] = this.bits[e] | t.bits[e];
            this._checkChanged();
          },
          remove: function(t) {
            this._saveBits();
            for (var e = 0; e < 3; e++)
              this.bits[e] = this.bits[e] & ~t.bits[e];
            this._checkChanged();
          },
          _fireChanged: function() {
            this.settingsOwned;
          },
          toString: function() {
            return r.format("{0},{1},{2}", this.bits[0], this.bits[1], this.bits[2]);
          }
        };
        function Ht() {
          this.tu = 0, this.tv = 0, this.position = new $();
        }
        Ht.createPos = function(t, e, n) {
          var a = new Ht();
          return a.tu = e * G.uvMultiple, a.tv = n * G.uvMultiple, a.position = t, a;
        }, Ht.createPosRaw = function(t, e, n) {
          var a = new Ht();
          return a.tu = e, a.tv = n, a.position = t, a;
        }, Ht.createPosSize = function(t, e, n, a, s) {
          var l = new Ht();
          return l.tu = e * a, l.tv = n * s, l.position = t, l;
        }, Ht.create = function(t, e, n, a, s) {
          var l = new Ht();
          return l.position = $.create(t, e, n), l.tu = a * G.uvMultiple, l.tv = s * G.uvMultiple, l;
        };
        var Gl = {
          copy: function() {
            var t = new Ht();
            return t.position = $.makeCopy(this.position), t.tu = this.tu, t.tv = this.tv, t;
          },
          toString: function() {
            return r.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
          }
        };
        function Ye() {
          this.tu = 0, this.tv = 0, this.color = new j(), this.position = new $();
        }
        Ye.createPos = function(t, e, n) {
          var a = new Ye();
          return a.tu = e * G.uvMultiple, a.tv = n * G.uvMultiple, a.position = t, a;
        }, Ye.createPosRaw = function(t, e, n) {
          var a = new Ye();
          return a.tu = e, a.tv = n, a.position = t, a;
        }, Ye.createPosSize = function(t, e, n, a, s) {
          var l = new Ye();
          return l.tu = e * a, l.tv = n * s, l.position = t, l;
        }, Ye.create = function(t, e, n, a, s) {
          var l = new Ht();
          return l.position = $.create(t, e, n), l.tu = a * G.uvMultiple, l.tv = s * G.uvMultiple, l;
        };
        var ql = {
          copy: function() {
            var t = new Ht();
            return t.position = $.makeCopy(this.position), t.tu = this.tu, t.tv = this.tv, t;
          },
          toString: function() {
            return r.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
          }
        };
        function Ja(t, e) {
          this.color = new j(), this.color = e._clone(), this.position = t.copy();
        }
        var Xl = {
          copy: function() {
            var t = new Ja(this.position, this.color);
            return t;
          },
          toString: function() {
            return r.format("{0}, {1}, {2}, {3}", this.position.x, this.position.y, this.position.z, this.color.toString());
          }
        };
        function go(t, e, n, a) {
          this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tanx = 0, this.tany = 0, this.tanz = 0, this.x = t.x, this.y = t.y, this.z = t.z, this.nx = e.x, this.ny = e.y, this.nz = e.z, this.tu = n.x, this.tv = n.y, this.tanx = a.x, this.tany = a.y, this.tanz = a.z;
        }
        var Yl = {
          get_normal: function() {
            return $.create(this.nx, this.ny, this.nz);
          },
          set_normal: function(t) {
            return this.nx = t.x, this.ny = t.y, this.nz = t.z, t;
          },
          get_position: function() {
            return $.create(this.x, this.y, this.z);
          },
          set_position: function(t) {
            return this.x = t.x, this.y = t.y, this.z = t.z, t;
          },
          get_texCoord: function() {
            return Mt.create(this.tu, this.tv);
          },
          set_texCoord: function(t) {
            return this.tu = t.x, this.tv = t.y, t;
          },
          get_tangent: function() {
            return $.create(this.tanx, this.tany, this.tanz);
          },
          set_tangent: function(t) {
            return this.tanx = t.x, this.tany = t.y, this.tanz = t.z, t;
          },
          toString: function() {
            return r.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, TanX={8}, TanY={9}, TanZ={10}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tanx, this.tany, this.tanz);
          }
        };
        function $() {
          this.x = 0, this.y = 0, this.z = 0;
        }
        $.create = function(t, e, n) {
          var a = new $();
          return a.x = t, a.y = e, a.z = n, a;
        }, $.makeCopy = function(t) {
          var e = new $();
          return e.x = t.x, e.y = t.y, e.z = t.z, e;
        }, $.negate = function(t) {
          return $.create(-t.x, -t.y, -t.z);
        }, $.midPoint = function(t, e) {
          var n = $.create((t.x + e.x) / 2, (t.y + e.y) / 2, (t.z + e.z) / 2);
          return n;
        }, $.midPointByLength = function(t, e) {
          var n = $.create((t.x + e.x) / 2, (t.y + e.y) / 2, (t.z + e.z) / 2);
          return n.normalize(), n.multiply(t.length()), n;
        }, $.get_empty = function() {
          return $.create(0, 0, 0);
        }, $.addVectors = function(t, e) {
          return $.create(t.x + e.x, t.y + e.y, t.z + e.z);
        }, $.cross = function(t, e) {
          return $.create(t.y * e.z - t.z * e.y, t.z * e.x - t.x * e.z, t.x * e.y - t.y * e.x);
        }, $.dot = function(t, e) {
          return t.x * e.x + t.y * e.y + t.z * e.z;
        }, $.getLength = function(t) {
          return Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z);
        }, $.getLengthSq = function(t) {
          return t.x * t.x + t.y * t.y + t.z * t.z;
        }, $.lerp = function(t, e, n) {
          return $.create(t.x * (1 - n) + e.x * n, t.y * (1 - n) + e.y * n, t.z * (1 - n) + e.z * n);
        }, $.midpoint = function(t, e) {
          var n = $.create(t.x * 0.5 + e.x * 0.5, t.y * 0.5 + e.y * 0.5, t.z * 0.5 + e.z * 0.5);
          return n.normalize(), n;
        }, $.slerp = function(t, e, n) {
          for (var a = $.dot(t, e); a < 0.98; ) {
            var s = $.midpoint(t, e);
            n > 0.5 ? (t = s, n -= 0.5, n *= 2) : (e = s, n *= 2), a = $.dot(t, e);
          }
          var l = $.lerp(t, e, n);
          return l.normalize(), l;
        }, $.multiplyScalar = function(t, e) {
          var n = t.copy();
          return n.multiply(e), n;
        }, $.scale = function(t, e) {
          var n = t;
          return n.multiply(e), n;
        }, $.subtractVectors = function(t, e) {
          var n = t.copy();
          return n.subtract(e), n;
        }, $.parse = function(t) {
          var e = new $(), n = t.split(",");
          return n.length === 3 && (e.x = parseFloat(n[0]), e.y = parseFloat(n[1]), e.z = parseFloat(n[2])), e;
        }, $._transformCoordinate = function(t, e) {
          return e.transform(t);
        };
        var jl = {
          set: function(t, e, n) {
            this.x = t, this.y = e, this.z = n;
          },
          copy: function() {
            var t = new $();
            return t.x = this.x, t.y = this.y, t.z = this.z, t;
          },
          round: function() {
            this.x = r.truncate(this.x * 65536) / 65536, this.y = r.truncate(this.y * 65536) / 65536, this.z = r.truncate(this.z * 65536) / 65536;
          },
          add: function(t) {
            this.x += t.x, this.y += t.y, this.z += t.z;
          },
          length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
          },
          lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z;
          },
          multiply: function(t) {
            this.x *= t, this.y *= t, this.z *= t;
          },
          normalize: function() {
            var t = this.length();
            t && (this.x /= t, this.y /= t, this.z /= t);
          },
          rotateX: function(t) {
            var e, n;
            n = this.y * Math.cos(t) - this.z * Math.sin(t), e = this.y * Math.sin(t) + this.z * Math.cos(t), this.z = e, this.y = n;
          },
          rotateZ: function(t) {
            var e, n;
            e = this.x * Math.cos(t) - this.y * Math.sin(t), n = this.x * Math.sin(t) + this.y * Math.cos(t), this.y = n, this.x = e;
          },
          rotateY: function(t) {
            var e, n;
            e = this.z * Math.cos(t) - this.x * Math.sin(t), n = this.z * Math.sin(t) + this.x * Math.cos(t), this.x = n, this.z = e;
          },
          subtract: function(t) {
            return this.x -= t.x, this.y -= t.y, this.z -= t.z, this;
          },
          toString: function() {
            return r.format("{0}, {1}, {2}", this.x, this.y, this.z);
          },
          toSpherical: function() {
            var t, e, n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z), a = Math.sqrt(this.x * this.x + this.z * this.z);
            return e = Math.asin(this.y / n), a ? 0 <= this.x ? t = Math.asin(this.z / a) : t = Math.PI - Math.asin(this.z / a) : t = 0, Mt.create((t + Math.PI) % (2 * Math.PI), e + Math.PI / 2);
          },
          toRaDec: function() {
            var t = this.toSpherical();
            return t.x = t.x / Math.PI * 12, t.y = t.y / Math.PI * 180 - 90, t;
          },
          distanceToLine: function(t, e) {
            var n = $.subtractVectors(e, t), a = $.subtractVectors(t, this), s = $.cross(n, a), l = s.length(), g = $.subtractVectors(e, t), _ = g.length();
            return l / _;
          },
          _transformByMatrics: function(t) {
            var e = t.transform(this);
            this.x = e.x, this.y = e.y, this.z = e.z;
          }
        };
        function Mt() {
          this.x = 0, this.y = 0;
        }
        Mt.lerp = function(t, e, n) {
          return Mt.create(t.x * (1 - n) + e.x * n, t.y * (1 - n) + e.y * n);
        }, Mt.cartesianToSpherical2 = function(t) {
          var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), n = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
          return Mt.create(n / Math.PI * 180, a / Math.PI * 180);
        }, Mt.average3d = function(t, e) {
          var n = U.geoTo3dDouble(t.y, t.x), a = U.geoTo3dDouble(e.y, e.x), s = $.addVectors(n, a);
          return s.multiply(0.5), s.normalize(), Mt.cartesianToSpherical2(s);
        }, Mt.create = function(t, e) {
          var n = new Mt();
          return n.x = t, n.y = e, n;
        }, Mt.subtract = function(t, e) {
          return Mt.create(t.x - e.x, t.y - e.y);
        };
        var Zl = {
          distance3d: function(t) {
            var e = U.geoTo3dDouble(t.y, t.x), n = U.geoTo3dDouble(this.y, this.x), a = $.subtractVectors(e, n);
            return a.length() / Math.PI * 180;
          },
          get_length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y);
          },
          normalize: function() {
            var t = this.get_length();
            t && (this.x /= t, this.y /= t);
          },
          extend: function(t) {
            this.x = this.x * t, this.y = this.y * t;
          }
        };
        function tt() {
          this._m11 = 0, this._m12 = 0, this._m13 = 0, this._m14 = 0, this._m21 = 0, this._m22 = 0, this._m23 = 0, this._m24 = 0, this._m31 = 0, this._m32 = 0, this._m33 = 0, this._m34 = 0, this._offsetX = 0, this._offsetY = 0, this._offsetZ = 0, this._m44 = 0, this._isNotKnownToBeIdentity = !1;
        }
        tt.create = function(t, e, n, a, s, l, g, _, m, b, y, M, A, R, F, O) {
          var B = new tt();
          return B._m11 = t, B._m12 = e, B._m13 = n, B._m14 = a, B._m21 = s, B._m22 = l, B._m23 = g, B._m24 = _, B._m31 = m, B._m32 = b, B._m33 = y, B._m34 = M, B._offsetX = A, B._offsetY = R, B._offsetZ = F, B._m44 = O, B._isNotKnownToBeIdentity = !0, B;
        }, tt.get_identity = function() {
          var t = new tt();
          return t.set(tt._s_identity), t;
        }, tt.multiplyMatrix = function(t, e) {
          return t.get__isDistinguishedIdentity() ? e : e.get__isDistinguishedIdentity() ? t : tt.create(t._m11 * e._m11 + t._m12 * e._m21 + t._m13 * e._m31 + t._m14 * e._offsetX, t._m11 * e._m12 + t._m12 * e._m22 + t._m13 * e._m32 + t._m14 * e._offsetY, t._m11 * e._m13 + t._m12 * e._m23 + t._m13 * e._m33 + t._m14 * e._offsetZ, t._m11 * e._m14 + t._m12 * e._m24 + t._m13 * e._m34 + t._m14 * e._m44, t._m21 * e._m11 + t._m22 * e._m21 + t._m23 * e._m31 + t._m24 * e._offsetX, t._m21 * e._m12 + t._m22 * e._m22 + t._m23 * e._m32 + t._m24 * e._offsetY, t._m21 * e._m13 + t._m22 * e._m23 + t._m23 * e._m33 + t._m24 * e._offsetZ, t._m21 * e._m14 + t._m22 * e._m24 + t._m23 * e._m34 + t._m24 * e._m44, t._m31 * e._m11 + t._m32 * e._m21 + t._m33 * e._m31 + t._m34 * e._offsetX, t._m31 * e._m12 + t._m32 * e._m22 + t._m33 * e._m32 + t._m34 * e._offsetY, t._m31 * e._m13 + t._m32 * e._m23 + t._m33 * e._m33 + t._m34 * e._offsetZ, t._m31 * e._m14 + t._m32 * e._m24 + t._m33 * e._m34 + t._m34 * e._m44, t._offsetX * e._m11 + t._offsetY * e._m21 + t._offsetZ * e._m31 + t._m44 * e._offsetX, t._offsetX * e._m12 + t._offsetY * e._m22 + t._offsetZ * e._m32 + t._m44 * e._offsetY, t._offsetX * e._m13 + t._offsetY * e._m23 + t._offsetZ * e._m33 + t._m44 * e._offsetZ, t._offsetX * e._m14 + t._offsetY * e._m24 + t._offsetZ * e._m34 + t._m44 * e._m44);
        }, tt.lookAtLH = function(t, e, n) {
          var a = $.subtractVectors(e, t);
          a.normalize();
          var s = $.cross(n, a);
          s.normalize();
          var l = $.cross(a, s), g = tt.create(s.x, l.x, a.x, 0, s.y, l.y, a.y, 0, s.z, l.z, a.z, 0, -$.dot(s, t), -$.dot(l, t), -$.dot(a, t), 1);
          return g;
        }, tt._createIdentity = function() {
          var t = tt.create(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
          return t.set__isDistinguishedIdentity(!0), t;
        }, tt.equals = function(t, e) {
          return t.get__isDistinguishedIdentity() || e.get__isDistinguishedIdentity() ? t.get_isIdentity() === e.get_isIdentity() : t.get_m11() === e.get_m11() && t.get_m12() === e.get_m12() && t.get_m13() === e.get_m13() && t.get_m14() === e.get_m14() && t.get_m21() === e.get_m21() && t.get_m22() === e.get_m22() && t.get_m23() === e.get_m23() && t.get_m24() === e.get_m24() && t.get_m31() === e.get_m31() && t.get_m32() === e.get_m32() && t.get_m33() === e.get_m33() && t.get_m34() === e.get_m34() && t.get_offsetX() === e.get_offsetX() && t.get_offsetY() === e.get_offsetY() && t.get_offsetZ() === e.get_offsetZ() ? t.get_m44() === e.get_m44() : !1;
        }, tt.fromMatrix2d = function(t) {
          var e = tt._createIdentity();
          return e.set_m11(t.m11), e.set_m12(t.m12), e.set_m13(t.m13), e.set_m21(t.m21), e.set_m22(t.m22), e.set_m23(t.m23), e.set_m31(t.m31), e.set_m32(t.m32), e.set_m33(t.m33), e._isNotKnownToBeIdentity = !0, e;
        }, tt.rotationYawPitchRoll = function(t, e, n) {
          var a = tt._rotationX(e), s = tt._rotationY(t), l = tt._rotationZ(n);
          return tt.multiplyMatrix(tt.multiplyMatrix(s, a), l);
        }, tt._rotationY = function(t) {
          var e = t, n = tt.get_identity();
          return n._m11 = Math.cos(e), n._m22 = 1, n._m31 = Math.sin(e), n._m13 = -Math.sin(e), n._m33 = Math.cos(e), n._isNotKnownToBeIdentity = !0, n;
        }, tt._rotationX = function(t) {
          var e = t, n = tt.get_identity();
          return n._m11 = 1, n._m22 = Math.cos(e), n._m32 = -Math.sin(e), n._m23 = Math.sin(e), n._m33 = Math.cos(e), n._isNotKnownToBeIdentity = !0, n;
        }, tt._rotationZ = function(t) {
          var e = t, n = tt.get_identity();
          return n._m11 = Math.cos(e), n._m21 = -Math.sin(e), n._m12 = Math.sin(e), n._m22 = Math.cos(e), n._m33 = 1, n._isNotKnownToBeIdentity = !0, n;
        }, tt._scaling = function(t, e, n) {
          var a = tt.get_identity();
          return a._m11 = t, a._m22 = e, a._m33 = n, a._isNotKnownToBeIdentity = !0, a;
        }, tt._translationXYZ = function(t, e, n) {
          var a = tt.get_identity();
          return a.set_offsetX(t), a.set_offsetY(e), a.set_offsetZ(n), a._isNotKnownToBeIdentity = !0, a;
        }, tt.perspectiveFovLH = function(t, e, n, a) {
          var s = 1 / Math.tan(t / 2), l = s / e;
          return tt.create(l, 0, 0, 0, 0, s, 0, 0, 0, 0, a / (a - n), 1, 0, 0, -n * a / (a - n), 0);
        }, tt.perspectiveOffCenterLH = function(t, e, n, a, s, l) {
          return tt.create(2 * s / (e - t), 0, 0, 0, 0, 2 * s / (a - n), 0, 0, (t + e) / (t - e), (a + n) / (n - a), l / (l - s), 1, 0, 0, s * l / (s - l), 0);
        }, tt.invertMatrix = function(t) {
          var e = t.clone();
          return e.invert(), e;
        }, tt.translation = function(t) {
          return tt._translationXYZ(t.x, t.y, t.z);
        }, tt.getMapMatrix = function(t, e, n, a) {
          var s = 0, l = 0;
          s = -((t.get_lng() + 180 - e / 2) / 360), l = -(1 - (t.get_lat() + 90 + n / 2) / 180);
          var g = new Ti(), _ = 0, m = 0;
          return _ = 360 / e, m = 180 / n, g = Ti.multiply(g, Ti.translation(s, l)), g = Ti.multiply(g, Ti.scaling(_, m)), a && (g = Ti.multiply(g, Ti.translation(-0.5, -0.5)), g = Ti.multiply(g, Ti.rotation(a)), g = Ti.multiply(g, Ti.translation(0.5, 0.5))), tt.fromMatrix2d(g);
        };
        var Kl = {
          clone: function() {
            var t = new tt();
            return t.set(this), t;
          },
          setIdentity: function() {
            this.set(tt._s_identity);
          },
          set: function(t) {
            this._m11 = t._m11, this._m12 = t._m12, this._m13 = t._m13, this._m14 = t._m14, this._m21 = t._m21, this._m22 = t._m22, this._m23 = t._m23, this._m24 = t._m24, this._m31 = t._m31, this._m32 = t._m32, this._m33 = t._m33, this._m34 = t._m34, this._offsetX = t._offsetX, this._offsetY = t._offsetY, this._offsetZ = t._offsetZ, this._m44 = t._m44, this._isNotKnownToBeIdentity = !0;
          },
          floatArray: function() {
            var t = new Array(16);
            return t[0] = this._m11, t[1] = this._m12, t[2] = this._m13, t[3] = this._m14, t[4] = this._m21, t[5] = this._m22, t[6] = this._m23, t[7] = this._m24, t[8] = this._m31, t[9] = this._m32, t[10] = this._m33, t[11] = this._m34, t[12] = this._offsetX, t[13] = this._offsetY, t[14] = this._offsetZ, t[15] = this._m44, t;
          },
          get_isIdentity: function() {
            return this.get__isDistinguishedIdentity() ? !0 : this._m11 === 1 && !this._m12 && !this._m13 && !this._m14 && !this._m21 && this._m22 === 1 && !this._m23 && !this._m24 && !this._m31 && !this._m32 && this._m33 === 1 && !this._m34 && !this._offsetX && !this._offsetY && !this._offsetZ && this._m44 === 1 ? (this.set__isDistinguishedIdentity(!0), !0) : !1;
          },
          prepend: function(t) {
            this.set(tt.multiplyMatrix(t, this));
          },
          append: function(t) {
            this._multiply(t);
          },
          scale: function(t) {
            this.get__isDistinguishedIdentity() ? this._setScaleMatrix(t) : (this._m11 *= t.x, this._m12 *= t.y, this._m13 *= t.z, this._m21 *= t.x, this._m22 *= t.y, this._m23 *= t.z, this._m31 *= t.x, this._m32 *= t.y, this._m33 *= t.z, this._offsetX *= t.x, this._offsetY *= t.y, this._offsetZ *= t.z);
          },
          scalePrepend: function(t) {
            this.get__isDistinguishedIdentity() ? this._setScaleMatrix(t) : (this._m11 *= t.x, this._m12 *= t.x, this._m13 *= t.x, this._m14 *= t.x, this._m21 *= t.y, this._m22 *= t.y, this._m23 *= t.y, this._m24 *= t.y, this._m31 *= t.z, this._m32 *= t.z, this._m33 *= t.z, this._m34 *= t.z);
          },
          scaleAt: function(t, e) {
            if (this.get__isDistinguishedIdentity())
              this._setScaleMatrixCenter(t, e);
            else {
              var n = this._m14 * e.x;
              this._m11 = n + t.x * (this._m11 - n), n = this._m14 * e.y, this._m12 = n + t.y * (this._m12 - n), n = this._m14 * e.z, this._m13 = n + t.z * (this._m13 - n), n = this._m24 * e.x, this._m21 = n + t.x * (this._m21 - n), n = this._m24 * e.y, this._m22 = n + t.y * (this._m22 - n), n = this._m24 * e.z, this._m23 = n + t.z * (this._m23 - n), n = this._m34 * e.x, this._m31 = n + t.x * (this._m31 - n), n = this._m34 * e.y, this._m32 = n + t.y * (this._m32 - n), n = this._m34 * e.z, this._m33 = n + t.z * (this._m33 - n), n = this._m44 * e.x, this._offsetX = n + t.x * (this._offsetX - n), n = this._m44 * e.y, this._offsetY = n + t.y * (this._offsetY - n), n = this._m44 * e.z, this._offsetZ = n + t.z * (this._offsetZ - n);
            }
          },
          scaleAtPrepend: function(t, e) {
            if (this.get__isDistinguishedIdentity())
              this._setScaleMatrixCenter(t, e);
            else {
              var n = e.x - e.x * t.x, a = e.y - e.y * t.y, s = e.z - e.z * t.z;
              this._offsetX += this._m11 * n + this._m21 * a + this._m31 * s, this._offsetY += this._m12 * n + this._m22 * a + this._m32 * s, this._offsetZ += this._m13 * n + this._m23 * a + this._m33 * s, this._m44 += this._m14 * n + this._m24 * a + this._m34 * s, this._m11 *= t.x, this._m12 *= t.x, this._m13 *= t.x, this._m14 *= t.x, this._m21 *= t.y, this._m22 *= t.y, this._m23 *= t.y, this._m24 *= t.y, this._m31 *= t.z, this._m32 *= t.z, this._m33 *= t.z, this._m34 *= t.z;
            }
          },
          translate: function(t) {
            this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(t) : (this._m11 += this._m14 * t.x, this._m12 += this._m14 * t.y, this._m13 += this._m14 * t.z, this._m21 += this._m24 * t.x, this._m22 += this._m24 * t.y, this._m23 += this._m24 * t.z, this._m31 += this._m34 * t.x, this._m32 += this._m34 * t.y, this._m33 += this._m34 * t.z, this._offsetX += this._m44 * t.x, this._offsetY += this._m44 * t.y, this._offsetZ += this._m44 * t.z);
          },
          translatePrepend: function(t) {
            this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(t) : (this._offsetX += this._m11 * t.x + this._m21 * t.y + this._m31 * t.z, this._offsetY += this._m12 * t.x + this._m22 * t.y + this._m32 * t.z, this._offsetZ += this._m13 * t.x + this._m23 * t.y + this._m33 * t.z, this._m44 += this._m14 * t.x + this._m24 * t.y + this._m34 * t.z);
          },
          transform: function(t) {
            var e = new $();
            if (!this.get__isDistinguishedIdentity()) {
              var n = t.x, a = t.y, s = t.z;
              if (e.x = n * this._m11 + a * this._m21 + s * this._m31 + this._offsetX, e.y = n * this._m12 + a * this._m22 + s * this._m32 + this._offsetY, e.z = n * this._m13 + a * this._m23 + s * this._m33 + this._offsetZ, !this.get_isAffine()) {
                var l = n * this._m14 + a * this._m24 + s * this._m34 + this._m44;
                e.x /= l, e.y /= l, e.z /= l;
              }
            }
            return e;
          },
          _transformTo: function(t, e) {
            e.x = t.x * this._m11 + t.y * this._m21 + t.z * this._m31 + this._offsetX, e.y = t.x * this._m12 + t.y * this._m22 + t.z * this._m32 + this._offsetY, e.z = t.x * this._m13 + t.y * this._m23 + t.z * this._m33 + this._offsetZ;
            var n = t.x * this._m14 + t.y * this._m24 + t.z * this._m34 + this._m44;
            e.x /= n, e.y /= n, e.z /= n;
          },
          transformArray: function(t) {
            if (t != null)
              for (var e = 0; e < t.length; e++)
                this._multiplyPoint(t[e]);
          },
          projectArrayToScreen: function(t, e) {
            if (t != null && e != null)
              for (var n = this.get_isAffine(), a = 0; a < t.length; a++) {
                var s = t[a].x, l = t[a].y, g = t[a].z;
                if (n)
                  e[a].x = s * this._m11 + l * this._m21 + g * this._m31 + this._offsetX, e[a].y = s * this._m12 + l * this._m22 + g * this._m32 + this._offsetY, e[a].z = s * this._m13 + l * this._m23 + g * this._m33 + this._offsetZ;
                else {
                  var _ = s * this._m14 + l * this._m24 + g * this._m34 + this._m44;
                  e[a].x = (s * this._m11 + l * this._m21 + g * this._m31 + this._offsetX) / _, e[a].y = (s * this._m12 + l * this._m22 + g * this._m32 + this._offsetY) / _, e[a].z = (s * this._m13 + l * this._m23 + g * this._m33 + this._offsetZ) / _;
                }
              }
          },
          projectToScreen: function(t, e, n) {
            var a = new $(), s = t.x, l = t.y, g = t.z;
            if (this.get_isAffine())
              a.x = (s * this._m11 + l * this._m21 + g * this._m31 + this._offsetX + 0.5) * e, a.y = (-(s * this._m12 + l * this._m22 + g * this._m32 + this._offsetY) + 0.5) * n, a.z = s * this._m13 + l * this._m23 + g * this._m33 + this._offsetZ;
            else {
              var _ = s * this._m14 + l * this._m24 + g * this._m34 + this._m44;
              a.x = ((s * this._m11 + l * this._m21 + g * this._m31 + this._offsetX) / _ + 0.5) * e, a.y = (-((s * this._m12 + l * this._m22 + g * this._m32 + this._offsetY) / _) + 0.5) * n, a.z = (s * this._m13 + l * this._m23 + g * this._m33 + this._offsetZ) / _;
            }
            return a;
          },
          get_isAffine: function() {
            return this.get__isDistinguishedIdentity() ? !0 : !this._m14 && !this._m24 && !this._m34 ? this._m44 === 1 : !1;
          },
          get_determinant: function() {
            if (this.get__isDistinguishedIdentity())
              return 1;
            if (this.get_isAffine())
              return this._getNormalizedAffineDeterminant();
            var t = this._m13 * this._m24 - this._m23 * this._m14, e = this._m13 * this._m34 - this._m33 * this._m14, n = this._m13 * this._m44 - this._offsetZ * this._m14, a = this._m23 * this._m34 - this._m33 * this._m24, s = this._m23 * this._m44 - this._offsetZ * this._m24, l = this._m33 * this._m44 - this._offsetZ * this._m34, g = this._m22 * e - this._m32 * t - this._m12 * a, _ = this._m12 * s - this._m22 * n + this._offsetY * t, m = this._m32 * n - this._offsetY * e - this._m12 * l, b = this._m22 * l - this._m32 * s + this._offsetY * a;
            return this._offsetX * g + this._m31 * _ + this._m21 * m + this._m11 * b;
          },
          get_hasInverse: function() {
            return !Fr.isZero(this.get_determinant());
          },
          invert: function() {
            this._invertCore();
          },
          transpose: function() {
            var t = new tt();
            t.set(this), this._m12 = t._m21, this._m13 = t._m31, this._m14 = t._offsetX, this._m23 = t._m32, this._m24 = t._offsetY, this._m34 = t._offsetZ, this._m21 = t._m12, this._m31 = t._m13, this._offsetX = t._m14, this._m32 = t._m23, this._offsetY = t._m24, this._offsetZ = t._m34;
          },
          get_m11: function() {
            return this.get__isDistinguishedIdentity() ? 1 : this._m11;
          },
          set_m11: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m11 = t, t;
          },
          get_m12: function() {
            return this._m12;
          },
          set_m12: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m12 = t, t;
          },
          get_m13: function() {
            return this._m13;
          },
          set_m13: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m13 = t, t;
          },
          get_m14: function() {
            return this._m14;
          },
          set_m14: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m14 = t, t;
          },
          get_m21: function() {
            return this._m21;
          },
          set_m21: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m21 = t, t;
          },
          get_m22: function() {
            return this.get__isDistinguishedIdentity() ? 1 : this._m22;
          },
          set_m22: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m22 = t, t;
          },
          get_m23: function() {
            return this._m23;
          },
          set_m23: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m23 = t, t;
          },
          get_m24: function() {
            return this._m24;
          },
          set_m24: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m24 = t, t;
          },
          get_m31: function() {
            return this._m31;
          },
          set_m31: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m31 = t, t;
          },
          get_m32: function() {
            return this._m32;
          },
          set_m32: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m32 = t, t;
          },
          get_m33: function() {
            return this.get__isDistinguishedIdentity() ? 1 : this._m33;
          },
          set_m33: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m33 = t, t;
          },
          get_m34: function() {
            return this._m34;
          },
          set_m34: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m34 = t, t;
          },
          get_m41: function() {
            return this.get_offsetX();
          },
          set_m41: function(t) {
            return this.set_offsetX(t), t;
          },
          get_m42: function() {
            return this.get_offsetY();
          },
          set_m42: function(t) {
            return this.set_offsetY(t), t;
          },
          get_m43: function() {
            return this.get_offsetZ();
          },
          set_m43: function(t) {
            return this.set_offsetZ(t), t;
          },
          get_offsetX: function() {
            return this._offsetX;
          },
          set_offsetX: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetX = t, t;
          },
          get_offsetY: function() {
            return this._offsetY;
          },
          set_offsetY: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetY = t, t;
          },
          get_offsetZ: function() {
            return this._offsetZ;
          },
          set_offsetZ: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetZ = t, t;
          },
          get_m44: function() {
            return this.get__isDistinguishedIdentity() ? 1 : this._m44;
          },
          set_m44: function(t) {
            return this.get__isDistinguishedIdentity() && (this.set(tt._s_identity), this.set__isDistinguishedIdentity(!1)), this._m44 = t, t;
          },
          _setScaleMatrix: function(t) {
            this._m11 = t.x, this._m22 = t.y, this._m33 = t.z, this._m44 = 1, this.set__isDistinguishedIdentity(!1);
          },
          _setScaleMatrixCenter: function(t, e) {
            this._m11 = t.x, this._m22 = t.y, this._m33 = t.z, this._m44 = 1, this._offsetX = e.x - e.x * t.x, this._offsetY = e.y - e.y * t.y, this._offsetZ = e.z - e.z * t.z, this.set__isDistinguishedIdentity(!1);
          },
          _setTranslationMatrix: function(t) {
            this._m11 = this._m22 = this._m33 = this._m44 = 1, this._offsetX = t.x, this._offsetY = t.y, this._offsetZ = t.z, this.set__isDistinguishedIdentity(!1);
          },
          _multiplyPoint: function(t) {
            if (!this.get__isDistinguishedIdentity()) {
              var e = t.x, n = t.y, a = t.z;
              if (t.x = e * this._m11 + n * this._m21 + a * this._m31 + this._offsetX, t.y = e * this._m12 + n * this._m22 + a * this._m32 + this._offsetY, t.z = e * this._m13 + n * this._m23 + a * this._m33 + this._offsetZ, !this.get_isAffine()) {
                var s = e * this._m14 + n * this._m24 + a * this._m34 + this._m44;
                t.x /= s, t.y /= s, t.z /= s;
              }
            }
          },
          multiplyVector: function(t) {
            if (!this.get__isDistinguishedIdentity()) {
              var e = t.x, n = t.y, a = t.z;
              t.x = e * this._m11 + n * this._m21 + a * this._m31, t.y = e * this._m12 + n * this._m22 + a * this._m32, t.z = e * this._m13 + n * this._m23 + a * this._m33;
            }
          },
          _getNormalizedAffineDeterminant: function() {
            var t = this._m12 * this._m23 - this._m22 * this._m13, e = this._m32 * this._m13 - this._m12 * this._m33, n = this._m22 * this._m33 - this._m32 * this._m23;
            return this._m31 * t + this._m21 * e + this._m11 * n;
          },
          _normalizedAffineInvert: function() {
            var t = this._m12 * this._m23 - this._m22 * this._m13, e = this._m32 * this._m13 - this._m12 * this._m33, n = this._m22 * this._m33 - this._m32 * this._m23, a = this._m31 * t + this._m21 * e + this._m11 * n;
            if (Fr.isZero(a))
              return !1;
            var s = this._m21 * this._m13 - this._m11 * this._m23, l = this._m11 * this._m33 - this._m31 * this._m13, g = this._m31 * this._m23 - this._m21 * this._m33, _ = this._m11 * this._m22 - this._m21 * this._m12, m = this._m11 * this._m32 - this._m31 * this._m12, b = this._m11 * this._offsetY - this._offsetX * this._m12, y = this._m21 * this._m32 - this._m31 * this._m22, M = this._m21 * this._offsetY - this._offsetX * this._m22, A = this._m31 * this._offsetY - this._offsetX * this._m32, R = this._m23 * b - this._offsetZ * _ - this._m13 * M, F = this._m13 * A - this._m33 * b + this._offsetZ * m, O = this._m33 * M - this._offsetZ * y - this._m23 * A, B = _, H = -m, K = y, J = 1 / a;
            return this._m11 = n * J, this._m12 = e * J, this._m13 = t * J, this._m21 = g * J, this._m22 = l * J, this._m23 = s * J, this._m31 = K * J, this._m32 = H * J, this._m33 = B * J, this._offsetX = O * J, this._offsetY = F * J, this._offsetZ = R * J, !0;
          },
          _invertCore: function() {
            if (!this.get__isDistinguishedIdentity()) {
              if (this.get_isAffine())
                return this._normalizedAffineInvert();
              var t = this._m13 * this._m24 - this._m23 * this._m14, e = this._m13 * this._m34 - this._m33 * this._m14, n = this._m13 * this._m44 - this._offsetZ * this._m14, a = this._m23 * this._m34 - this._m33 * this._m24, s = this._m23 * this._m44 - this._offsetZ * this._m24, l = this._m33 * this._m44 - this._offsetZ * this._m34, g = this._m22 * e - this._m32 * t - this._m12 * a, _ = this._m12 * s - this._m22 * n + this._offsetY * t, m = this._m32 * n - this._offsetY * e - this._m12 * l, b = this._m22 * l - this._m32 * s + this._offsetY * a, y = this._offsetX * g + this._m31 * _ + this._m21 * m + this._m11 * b;
              if (Fr.isZero(y))
                return !1;
              var M = this._m11 * a - this._m21 * e + this._m31 * t, A = this._m21 * n - this._offsetX * t - this._m11 * s, R = this._m11 * l - this._m31 * n + this._offsetX * e, F = this._m31 * s - this._offsetX * a - this._m21 * l;
              t = this._m11 * this._m22 - this._m21 * this._m12, e = this._m11 * this._m32 - this._m31 * this._m12, n = this._m11 * this._offsetY - this._offsetX * this._m12, a = this._m21 * this._m32 - this._m31 * this._m22, s = this._m21 * this._offsetY - this._offsetX * this._m22, l = this._m31 * this._offsetY - this._offsetX * this._m32;
              var O = this._m13 * a - this._m23 * e + this._m33 * t, B = this._m23 * n - this._offsetZ * t - this._m13 * s, H = this._m13 * l - this._m33 * n + this._offsetZ * e, K = this._m33 * s - this._offsetZ * a - this._m23 * l, J = this._m24 * e - this._m34 * t - this._m14 * a, it = this._m14 * s - this._m24 * n + this._m44 * t, ot = this._m34 * n - this._m44 * e - this._m14 * l, lt = this._m24 * l - this._m34 * s + this._m44 * a, gt = 1 / y;
              this._m11 = b * gt, this._m12 = m * gt, this._m13 = _ * gt, this._m14 = g * gt, this._m21 = F * gt, this._m22 = R * gt, this._m23 = A * gt, this._m24 = M * gt, this._m31 = lt * gt, this._m32 = ot * gt, this._m33 = it * gt, this._m34 = J * gt, this._offsetX = K * gt, this._offsetY = H * gt, this._offsetZ = B * gt, this._m44 = O * gt;
            }
            return !0;
          },
          get__isDistinguishedIdentity: function() {
            return !this._isNotKnownToBeIdentity;
          },
          set__isDistinguishedIdentity: function(t) {
            return this._isNotKnownToBeIdentity = !t, t;
          },
          _multiply: function(t) {
            this.set(tt.multiplyMatrix(this, t));
          }
        };
        function Ti() {
          this.m11 = 1, this.m12 = 0, this.m13 = 0, this.m21 = 0, this.m22 = 1, this.m23 = 0, this.m31 = 0, this.m32 = 0, this.m33 = 1;
        }
        Ti.create = function(t, e, n, a, s, l, g, _, m) {
          var b = new Ti();
          return b.m11 = t, b.m12 = e, b.m13 = n, b.m21 = a, b.m22 = s, b.m23 = l, b.m31 = g, b.m32 = _, b.m33 = m, b;
        }, Ti.rotation = function(t) {
          var e = new Ti();
          return e.m11 = Math.cos(t), e.m21 = -Math.sin(t), e.m12 = Math.sin(t), e.m22 = Math.cos(t), e;
        }, Ti.translation = function(t, e) {
          var n = new Ti();
          return n.m31 = t, n.m32 = e, n;
        }, Ti.scaling = function(t, e) {
          var n = new Ti();
          return n.m11 = t, n.m22 = e, n;
        }, Ti.multiply = function(t, e) {
          return Ti.create(t.m11 * e.m11 + t.m12 * e.m21 + t.m13 * e.m31, t.m11 * e.m12 + t.m12 * e.m22 + t.m13 * e.m32, t.m11 * e.m13 + t.m12 * e.m23 + t.m13 * e.m33, t.m21 * e.m11 + t.m22 * e.m21 + t.m23 * e.m31, t.m21 * e.m12 + t.m22 * e.m22 + t.m23 * e.m32, t.m21 * e.m13 + t.m22 * e.m23 + t.m23 * e.m33, t.m31 * e.m11 + t.m32 * e.m21 + t.m33 * e.m31, t.m31 * e.m12 + t.m32 * e.m22 + t.m33 * e.m32, t.m31 * e.m13 + t.m32 * e.m23 + t.m33 * e.m33);
        }, Ti.rotateAt = function(t, e) {
          var n = Ti.translation(-e.x, -e.y), a = Ti.rotation(t), s = Ti.translation(e.x, e.y);
          return Ti.multiply(Ti.multiply(n, a), s);
        };
        var Wl = {
          _transformPoints: function(t) {
            for (var e = r.enumerate(t); e.moveNext(); ) {
              var n = e.current;
              this.multiplyPoint(n);
            }
          },
          multiplyPoint: function(t) {
            var e = t.x, n = t.y;
            t.x = e * this.m11 + n * this.m21 + this.m31, t.y = e * this.m12 + n * this.m22 + this.m32;
          }
        };
        function Fr() {
        }
        Fr.isZero = function(t) {
          return Math.abs(t) < 222044604925031e-64;
        }, Fr.isOne = function(t) {
          return Math.abs(t - 1) < 222044604925031e-64;
        }, Fr.radiansToDegrees = function(t) {
          return t * 180 / Math.PI;
        }, Fr.degreesToRadians = function(t) {
          return t * Math.PI / 180;
        }, Fr.clamp = function(t, e, n) {
          return Math.max(e, Math.min(t, n));
        };
        function mo(t, e, n, a) {
          this.a = 0, this.b = 0, this.c = 0, this.d = 0, this.a = t, this.b = e, this.c = n, this.d = a;
        }
        var Jl = {
          normalize: function() {
            var t = Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);
            this.a /= t, this.b /= t, this.c /= t, this.d /= t;
          },
          dot: function(t) {
            return this.b * t.y + this.c * t.z + this.d * t.w + this.a * t.x;
          }
        };
        function Qa(t, e, n, a) {
          this.x = 0, this.y = 0, this.z = 0, this.w = 0, this.x = t, this.y = e, this.z = n, this.w = a;
        }
        var Ql = {};
        function nn() {
          this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tu1 = 0, this.tv1 = 0;
        }
        nn.create2UV = function(t, e, n, a, s, l) {
          var g = new nn();
          return g.x = t.x, g.y = t.y, g.z = t.z, g.nx = e.x, g.ny = e.y, g.nz = e.z, g.tu = n, g.tv = a, g.tu1 = s, g.tv1 = l, g;
        }, nn.create = function(t, e, n, a) {
          var s = new nn();
          s.x = t.x, s.y = t.y, s.z = t.z, s.nx = e.x, s.ny = e.y, s.nz = e.z, s.tu = n, s.tv = a;
          var l = U.cartesianToSpherical2(e);
          return s.tu1 = (l.get_lng() + 180) / 360, s.tv1 = 1 - (l.get_lat() + 90) / 180, s;
        }, nn.createLong2UV = function(t, e, n, a, s, l, g, _, m, b) {
          var y = new nn();
          return y.x = t, y.y = e, y.z = n, y.nx = a, y.ny = s, y.nz = l, y.tu = g, y.tv = _, y.tu1 = m, y.tv1 = b, y;
        }, nn.get_strideSize = function() {
          return 40;
        };
        var tu = {
          get_lat: function() {
            return (1 - this.tv1) * 180 - 90;
          },
          set_lat: function(t) {
            return this.tv1 = 1 - (t + 90) / 180, t;
          },
          get_lng: function() {
            return this.tu1 * 360 - 180;
          },
          set_lng: function(t) {
            return this.tu1 = (t + 180) / 360, t;
          },
          createLong: function(t, e, n, a, s, l, g, _) {
            var m = new nn();
            m.x = t, m.y = e, m.z = n, m.nx = a, m.ny = s, m.nz = l, m.tu = g, m.tv = _;
            var b = U.cartesianToSpherical2($.create(this.nx, this.ny, this.nz));
            return m.tu1 = (b.get_lng() + 180) / 360, m.tv1 = 1 - (b.get_lat() + 90) / 180, m;
          },
          get_normal: function() {
            return $.create(this.nx, this.ny, this.nz);
          },
          set_normal: function(t) {
            return this.nx = t.x, this.ny = t.y, this.nz = t.z, t;
          },
          get_position: function() {
            return $.create(this.x, this.y, this.y);
          },
          set_position: function(t) {
            return this.x = t.x, this.y = t.y, this.z = t.z, t;
          },
          toString: function() {
            return r.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tu1, this.tv1);
          }
        };
        function Cr() {
          this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0;
        }
        Cr.createShort = function(t, e, n, a) {
          var s = new Cr();
          return s.x = t.x, s.y = t.y, s.z = t.z, s.nx = e.x, s.ny = e.y, s.nz = e.z, s.tu = n, s.tv = a, s;
        }, Cr._create = function(t, e, n, a, s, l, g, _) {
          var m = new Cr();
          return m.x = t, m.y = e, m.z = n, m.nx = a, m.ny = s, m.nz = l, m.tu = g, m.tv = _, m;
        }, Cr.createUV = function(t, e, n) {
          var a = new Cr();
          return a.x = t.x, a.y = t.y, a.z = t.z, a.nx = e.x, a.ny = e.y, a.nz = e.z, a.tu = n.x, a.tv = n.y, a;
        };
        var eu = {
          createLong: function(t, e, n, a, s, l, g, _) {
            var m = new nn();
            return m.x = t, m.y = e, m.z = n, m.nx = a, m.ny = s, m.nz = l, m.tu = g, m.tv = _, m;
          },
          get_normal: function() {
            return $.create(this.nx, this.ny, this.nz);
          },
          set_normal: function(t) {
            return this.nx = t.x, this.ny = t.y, this.nz = t.z, t;
          },
          get_position: function() {
            return $.create(this.x, this.y, this.z);
          },
          set_position: function(t) {
            return this.x = t.x, this.y = t.y, this.z = t.z, t;
          },
          toString: function() {
            return r.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv);
          }
        };
        function ha() {
          this.radius = 0;
        }
        ha._create = function(t, e) {
          var n = new ha();
          return n.center = t, n.radius = e, n;
        };
        var iu = {};
        function kn() {
        }
        kn.findEnclosingSphereFast = function(t) {
          for (var e = new ha(), n = t.length, a = $.zero, s = 0; s < n; ++s)
            a.add(t[s]);
          a.multiply(1 / n);
          for (var l = 0, s = 0; s < n; ++s) {
            var g = $.getLengthSq($.subtractVectors(t[s], a));
            g > l && (l = g);
          }
          return l = Math.sqrt(l), e.center = a, e.radius = l, e;
        }, kn.findEnclosingSphere = function(t) {
          var e = new $(), n = 0, a = t.length, s, l, g, _, m, b, y, M, A, R, F, O, B = new $(), H = new $(), K = new $(), J = new $(), it = new $(), ot = new $(), lt = new $(), gt = new $();
          for (B.x = K.y = it.z = 1e8, H.x = J.y = ot.z = -1e9, s = 0; s < a; s++) {
            var ut = t[s];
            ut.x < B.x && (B = ut), ut.x > H.x && (H = ut), ut.y < K.y && (K = ut), ut.y > J.y && (J = ut), ut.z < it.z && (it = ut), ut.z > ot.z && (ot = ut);
          }
          for (l = H.x - B.x, g = H.y - B.y, _ = H.z - B.z, b = l * l + g * g + _ * _, l = J.x - K.x, g = J.y - K.y, _ = J.z - K.z, y = l * l + g * g + _ * _, l = ot.x - it.x, g = ot.y - it.y, _ = ot.z - it.z, M = l * l + g * g + _ * _, lt = B, gt = H, A = b, y > A && (A = y, lt = K, gt = J), M > A && (lt = it, gt = ot), e.x = (lt.x + gt.x) / 2, e.y = (lt.y + gt.y) / 2, e.z = (lt.z + gt.z) / 2, l = gt.x - e.x, g = gt.y - e.y, _ = gt.z - e.z, m = l * l + g * g + _ * _, n = Math.sqrt(m), s = 0; s < a; s++) {
            var ut = t[s];
            l = ut.x - e.x, g = ut.y - e.y, _ = ut.z - e.z, F = l * l + g * g + _ * _, F > m && (R = Math.sqrt(F), n = (n + R) / 2, m = n * n, O = R - n, e.x = (n * e.x + O * ut.x) / R, e.y = (n * e.y + O * ut.y) / R, e.z = (n * e.z + O * ut.z) / R);
          }
          return ha._create(e, n);
        };
        var ru = {};
        function pn() {
          this.parent = null, this.isProxy = !1, this._versionDependent = !1, this._readOnly = !0, this._dirty = !1, this._thumbnail = null, this._proxyFolder = null, this._lastUpdate = /* @__PURE__ */ new Date(), this._childList = [], this._itemsField = [], this._imagesets = [], this._tours = [], this._folders = [], this._places = [], this._groupField = 0, this._refreshTypeField = 0, this._refreshTypeFieldSpecified = !1, this._browseableField = !0, this._browseableFieldSpecified = !1, this._searchableField = !1, this._typeField = 0, this._communityIdField = 0, this._componentIdField = 0, this._permissionField = 0;
        }
        var nu = {
          toString: function() {
            return this._nameField;
          },
          get_versionDependent: function() {
            return this._versionDependent;
          },
          set_versionDependent: function(t) {
            this._versionDependent = t;
            for (var e = r.enumerate(this._folders); e.moveNext(); ) {
              var n = e.current;
              n.set_versionDependent(this._versionDependent);
            }
            return t;
          },
          get_readOnly: function() {
            return this._readOnly;
          },
          set_readOnly: function(t) {
            return this._readOnly = t, t;
          },
          get_dirty: function() {
            return this._dirty;
          },
          set_dirty: function(t) {
            return this._dirty = t, t;
          },
          loadFromUrlWithErrorCallback: function(t, e, n) {
            this._onError = n, this.loadFromUrl(t, e);
          },
          loadFromUrl: function(t, e) {
            this._onComplete = e, this._webFile = new _r(ze.singleton.rewrite(t, 1)), this._webFile.onStateChange = r.bind("_loadData", this), this._webFile.send();
          },
          _loadData: function() {
            if (this._webFile.get_state() === 2)
              console.error(this._webFile.get_message()), this._onError != null && this._onError();
            else if (this._webFile.get_state() === 1) {
              var t = xt.selectSingleNode(this._webFile.getXml(), "Folder");
              if (t == null) {
                var e = this._webFile.getXml();
                e != null && (t = xt.selectSingleNode(e, "Folder"));
              }
              t != null && (this._clearChildren(), this._parseXML(t)), this._onComplete != null && this._onComplete();
            }
          },
          _clearChildren: function() {
            this._folders.length = 0, this._tours.length = 0, this._places.length = 0, this.get_imagesets().length = 0;
          },
          _parseXML: function(t) {
            t.attributes.getNamedItem("Name") != null ? this._nameField = t.attributes.getNamedItem("Name").nodeValue : this._nameField = "", t.attributes.getNamedItem("Url") != null && (this._urlField = t.attributes.getNamedItem("Url").nodeValue), t.attributes.getNamedItem("Thumbnail") != null && (this._thumbnailUrlField = t.attributes.getNamedItem("Thumbnail").nodeValue);
            for (var e = r.enumerate(t.childNodes); e.moveNext(); ) {
              var n = e.current;
              switch (n.nodeName) {
                case "Folder":
                  var a = new pn();
                  a.parent = this, a._parseXML(n), this._folders.push(a);
                  break;
                case "Place":
                  this._places.push(fr._fromXml(n));
                  break;
                case "ImageSet":
                  this.get_imagesets().push(Mi.fromXMLNode(n));
                  break;
                case "Tour":
                  this.get_tours().push(Da._fromXml(n));
                  break;
              }
            }
          },
          addChildFolder: function(t) {
            this._folders.push(t), this._dirty = !0;
          },
          removeChildFolder: function(t) {
            r.remove(this._folders, t), this._dirty = !0;
          },
          addChildPlace: function(t) {
            this._places.push(t), this._dirty = !0;
          },
          removeChildPlace: function(t) {
            r.remove(this._places, t), this._dirty = !0;
          },
          get_thumbnail: function() {
            return this._thumbnail;
          },
          set_thumbnail: function(t) {
            return this._thumbnail = t, t;
          },
          get_bounds: function() {
            return this._bounds;
          },
          set_bounds: function(t) {
            return this._bounds = t, t;
          },
          get_isImage: function() {
            return !1;
          },
          get_isTour: function() {
            return !1;
          },
          get_isFolder: function() {
            return !0;
          },
          get_isCloudCommunityItem: function() {
            return !!this._communityIdField || this._permissionField > 0;
          },
          refresh: function() {
            this._proxyFolder == null && (this._proxyFolder = new pn(), this._proxyFolder.isProxy = !0, this._proxyFolder.parent = this.parent), this._proxyFolder.loadFromUrlWithErrorCallback(this._urlField, this._childReadyCallback, this._childReadyCallback), this._childReadyCallback = null;
          },
          childLoadCallback: function(t) {
            this._childReadyCallback = t, this.get_children(), this._proxyFolder == null && t();
          },
          get_children: function() {
            if (r.emptyString(this._urlField)) {
              if (this._childList.length = 0, this.parent != null) {
                var t = new $s();
                t.parent = this.parent, this._childList.push(t);
              }
              if (this.get_folders() != null)
                for (var e = r.enumerate(this.get_folders()); e.moveNext(); ) {
                  var n = e.current;
                  this._childList.push(n);
                }
              if (this.get_imagesets() != null)
                for (var a = r.enumerate(this.get_imagesets()); a.moveNext(); ) {
                  var s = a.current;
                  this._childList.push(s);
                }
              if (this.get_places() != null)
                for (var l = r.enumerate(this.get_places()); l.moveNext(); ) {
                  var g = l.current;
                  this._childList.push(g);
                }
              if (this.get_tours() != null)
                for (var _ = r.enumerate(this.get_tours()); _.moveNext(); ) {
                  var m = _.current;
                  this._childList.push(m);
                }
              return this._childList;
            } else {
              var b = (this._lastUpdate - r.now()) / 1e3;
              return (this.get_refreshType() === 1 || this._proxyFolder == null || !this.get_refreshType() && parseInt(this._refreshIntervalField) < b) && this.refresh(), this._proxyFolder != null ? this._proxyFolder.get_children() : null;
            }
          },
          get_msrCommunityId: function() {
            return this._communityIdField;
          },
          set_msrCommunityId: function(t) {
            return this._communityIdField = t, t;
          },
          get_msrComponentId: function() {
            return this._componentIdField;
          },
          set_msrComponentId: function(t) {
            return this._componentIdField = t, t;
          },
          get_permission: function() {
            return this._permissionField;
          },
          set_permission: function(t) {
            return this._permissionField = t, t;
          },
          get_folders: function() {
            return this._folders;
          },
          set_folders: function(t) {
            return this._folders = t, t;
          },
          get_places: function() {
            return this._places;
          },
          set_places: function(t) {
            return this._places = t, t;
          },
          get_imagesets: function() {
            return this._imagesets;
          },
          set_imagesets: function(t) {
            return this._imagesets = t, t;
          },
          get_tours: function() {
            return this._tours;
          },
          set_tours: function(t) {
            return this._tours = t, t;
          },
          get_name: function() {
            return this._nameField == null ? "" : this._nameField;
          },
          set_name: function(t) {
            return this._nameField = t, t;
          },
          get_group: function() {
            return this._groupField;
          },
          set_group: function(t) {
            return this._groupField = t, t;
          },
          get_url: function() {
            return this._urlField;
          },
          set_url: function(t) {
            return this._urlField = t, t;
          },
          get_thumbnailUrl: function() {
            return r.emptyString(this._thumbnailUrlField) ? ze.singleton.engineAssetUrl("thumb_folder.jpg") : this._thumbnailUrlField;
          },
          set_thumbnailUrl: function(t) {
            return this._thumbnailUrlField = t, t;
          },
          get_refreshType: function() {
            return this._refreshTypeField;
          },
          set_refreshType: function(t) {
            return this._refreshTypeField = t, this.set_refreshTypeSpecified(!0), t;
          },
          get_refreshTypeSpecified: function() {
            return this._refreshTypeFieldSpecified;
          },
          set_refreshTypeSpecified: function(t) {
            return this._refreshTypeFieldSpecified = t, t;
          },
          get_refreshInterval: function() {
            return this._refreshIntervalField;
          },
          set_refreshInterval: function(t) {
            return this._refreshIntervalField = t, t;
          },
          get_browseable: function() {
            return this._browseableField;
          },
          set_browseable: function(t) {
            return this._browseableField = t, this._browseableFieldSpecified = !0, t;
          },
          get_browseableSpecified: function() {
            return this._browseableFieldSpecified;
          },
          set_browseableSpecified: function(t) {
            return this._browseableFieldSpecified = t, t;
          },
          get_searchable: function() {
            return this._searchableField;
          },
          set_searchable: function(t) {
            return this._searchableField = t, t;
          },
          get_type: function() {
            return this._typeField;
          },
          set_type: function(t) {
            return this._typeField = t, t;
          },
          get_subType: function() {
            return this._subTypeField;
          },
          set_subType: function(t) {
            return this._subTypeField = t, t;
          }
        };
        function De() {
          this._items = [], this.top = 10, this.left = 10, this._indexTouchDown = -1, this._mouseDown = !1, this._lastX = 0, this._lastY = 0, this._ignoreClick = !1, this._thumbnailSize = 0, this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110, this._horzMultiple = 110, this._rowCount = 1, this._colCount = 6, this._dragging = !1, this._startIndex = 0, this._startOffset = 0, this._selectedItem = -1, this._hoverItem = -1, this.showAddButton = !1, this.width = 0, this.height = 0, this._addButtonHover = !1, this.imageClicked = !1;
        }
        De.create = function() {
          var t = new De();
          return t.height = 85, t.width = 1920, t.canvas = document.createElement("canvas"), t.canvas.width = t.width, t.canvas.height = t.height, t.setup(), t.loadImages(), t;
        };
        var au = {
          setup: function() {
            this.canvas.addEventListener("click", r.bind("onClick", this), !1), this.canvas.addEventListener("dblclick", r.bind("onDoubleClick", this), !1), this.canvas.addEventListener("mousemove", r.bind("onMouseMove", this), !1), this.canvas.addEventListener("mouseup", r.bind("onMouseUp", this), !1), this.canvas.addEventListener("mousedown", r.bind("onMouseDown", this), !1), this.canvas.addEventListener("touchstart", r.bind("onTouchStart", this), !1), this.canvas.addEventListener("touchmove", r.bind("onTouchMove", this), !1), this.canvas.addEventListener("touchend", r.bind("onTouchEnd", this), !1), this.canvas.addEventListener("mouseout", r.bind("onMouseUp", this), !1);
          },
          onTouchStart: function(t) {
            var e = t;
            e.preventDefault(), this._mouseDown = !0, this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY, this._indexTouchDown = this._getItemIndexFromCursor(Mt.create(e.targetTouches[0].pageX, e.targetTouches[0].pageY));
          },
          onTouchMove: function(t) {
            var e = t;
            if (e.preventDefault(), this._mouseDown) {
              if (e.targetTouches[0].pageX - this._lastX, e.targetTouches[0].pageY - this._lastY, this._mouseDown && (this._dragging = !0), this._dragging) {
                var a = Math.round((e.targetTouches[0].pageX - this._lastX + this._startOffset) / this._horzSpacing), s = Math.round(e.targetTouches[0].pageX - this._lastX + this._startOffset - a * this._horzSpacing);
                this._startOffset = s, this._startIndex -= a, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY;
              } else {
                var n = this._getItemIndexFromCursor(Mt.create(e.targetTouches[0].pageX, e.targetTouches[0].pageY));
                this._hoverItem !== n && (this._hoverItem = n);
              }
              this.refresh();
            }
          },
          onTouchEnd: function(t) {
            var e = t;
            e.preventDefault(), this._dragging ? (this._dragging = !1, this._ignoreClick = !0) : this._indexTouchDown > -1 && this._mouseDown && this._handleClick(this._indexTouchDown), this._startOffset = 0, this._mouseDown = !1, this.refresh();
          },
          onClick: function(t) {
            if (this._ignoreClick)
              this._ignoreClick = !1;
            else {
              var e = this._getItemIndexFromCursor(Mt.create(t.offsetX, t.offsetY));
              this._handleClick(e);
            }
          },
          _handleClick: function(t) {
            var e = this;
            if (t > -1) {
              if (r.canCast(this._items[t], fr)) {
                var n = this._items[t];
                Z.singleton.gotoTarget(n, !1, !1, !0);
                return;
              }
              if (r.canCast(this._items[t], Mi)) {
                var a = this._items[t];
                Z.singleton.renderContext.set_backgroundImageset(a);
                return;
              }
              if (r.canCast(this._items[t], Da)) {
                var s = this._items[t];
                Z.singleton.playTour(s.get_tourUrl());
                return;
              }
              if (r.canCast(this._items[t], pn)) {
                var l = this._items[t];
                this._startIndex = 0, l.childLoadCallback(function() {
                  e._items = l.get_children(), e.refresh();
                });
                return;
              }
              if (r.canCast(this._items[t], $s)) {
                var g = this._items[t];
                g.parent != null && (this._startIndex = 0, g.parent.childLoadCallback(function() {
                  e._items = g.parent.get_children(), e.refresh();
                }));
                return;
              }
            }
          },
          onDoubleClick: function(t) {
            Me.renderingOn = !Me.renderingOn;
          },
          onGestureChange: function(t) {
            var e = t;
            this._mouseDown = !1, e.scale;
          },
          onMouseDown: function(t) {
            this._mouseDown = !0, this._lastX = Ii.offsetX(this.canvas, t), this._lastY = Ii.offsetY(this.canvas, t);
          },
          onMouseMove: function(t) {
            if (this._mouseDown && (this._dragging = !0), this._dragging) {
              var n = Math.round((Ii.offsetX(this.canvas, t) - this._lastX + this._startOffset) / this._horzSpacing), a = Math.round(Ii.offsetX(this.canvas, t) - this._lastX + this._startOffset - n * this._horzSpacing);
              this._startOffset = a, this._startIndex -= n, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = Ii.offsetX(this.canvas, t), this._lastY = Ii.offsetY(this.canvas, t);
            } else {
              var e = this._getItemIndexFromCursor(Mt.create(Ii.offsetX(this.canvas, t), Ii.offsetY(this.canvas, t)));
              this._hoverItem !== e && (this._hoverItem = e);
            }
            this.refresh();
          },
          onMouseUp: function(t) {
            this._dragging && (this._startOffset = 0, this._dragging = !1, this._ignoreClick = !0), this._mouseDown = !1, this.refresh();
          },
          loadImages: function() {
            var t = this;
            !De._imagesLoaded && !De._downloading && (De._imageLoadCount = 0, De._imagesLoaded = !1, De._downloading = !0, De._bmpBackground = document.createElement("img"), De._bmpBackground.src = "images/thumbBackground.png", De._bmpBackground.addEventListener("load", function(e) {
              De._imageLoadCount++, De._imageLoadCount === 5 && (De._downloading = !1, De._imagesLoaded = !0, t.refresh());
            }, !1), De._bmpBackgroundHover = document.createElement("img"), De._bmpBackgroundHover.src = "images/thumbBackgroundHover.png", De._bmpBackgroundHover.addEventListener("load", function(e) {
              De._imageLoadCount++, De._imageLoadCount === 5 && (De._downloading = !1, De._imagesLoaded = !0, t.refresh());
            }, !1), De._bmpBackgroundWide = document.createElement("img"), De._bmpBackgroundWide.src = "images/thumbBackgroundWide.png", De._bmpBackgroundWide.addEventListener("load", function(e) {
              De._imageLoadCount++, De._imageLoadCount === 5 && (De._downloading = !1, De._imagesLoaded = !0, t.refresh());
            }, !1), De._bmpBackgroundWideHover = document.createElement("img"), De._bmpBackgroundWideHover.src = "images/thumbBackgroundWideHover.png", De._bmpBackgroundWideHover.addEventListener("load", function(e) {
              De._imageLoadCount++, De._imageLoadCount === 5 && (De._downloading = !1, De._imagesLoaded = !0, t.refresh());
            }, !1), De._bmpDropInsertMarker = document.createElement("img"), De._bmpDropInsertMarker.src = "images/dragInsertMarker.png", De._bmpDropInsertMarker.addEventListener("load", function(e) {
              De._imageLoadCount++, De._imageLoadCount === 5 && (De._downloading = !1, De._imagesLoaded = !0, t.refresh());
            }, !1));
          },
          get_thumbnailSize: function() {
            return this._thumbnailSize;
          },
          set_thumbnailSize: function(t) {
            switch (this._thumbnailSize = t, t) {
              case 1:
                this._horzSpacing = 180, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 180;
                break;
              case 0:
                this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110;
                break;
            }
            return this._updatePaginator(), this.refresh(), t;
          },
          refresh: function() {
            this.width !== window.innerWidth && (this.width = window.innerWidth, this.canvas.width = this.canvas.width), this.paint();
          },
          get_rowCount: function() {
            return this._rowCount;
          },
          set_rowCount: function(t) {
            return this._rowCount !== t && (this._rowCount = t, this._updatePaginator()), t;
          },
          _updatePaginator: function() {
          },
          get_colCount: function() {
            return this._colCount;
          },
          set_colCount: function(t) {
            return this._colCount !== t && (this._colCount = t, this._updatePaginator()), t;
          },
          get_itemsPerPage: function() {
            return this._rowCount * this._colCount;
          },
          get_currentPage: function() {
            return this._startIndex / this.get_itemsPerPage();
          },
          get_pageCount: function() {
            return Math.max(1, (this._items.length + this.get_itemsPerPage() - 1 + (this.showAddButton ? 1 : 0)) / this.get_itemsPerPage());
          },
          paint: function() {
            var t = this, e = this.canvas.getContext("2d");
            if (e.fillStyle = "rgb(20, 22, 31)", e.fillRect(0, 0, this.width, this.height), !!De._imagesLoaded) {
              var n = this.height - 10 * 2, a = this.width - 10 * 2;
              this.set_rowCount(Math.round(Math.max(n / this._thumbHeight, 1))), this.set_colCount(Math.round(Math.max(a / this._horzSpacing, 1))), this._horzMultiple = (a + 13) / this.get_colCount(), this._startIndex = Math.round(this._startIndex / this.get_itemsPerPage() * this.get_itemsPerPage());
              for (var s, l = this._startIndex, g = 0; g < this._rowCount; g++) {
                for (var _ = 0; _ < this._colCount; _++) {
                  if (l >= this._items.length) {
                    (!this._items.length || this.showAddButton) && (s = Ji.create(this.left + _ * this._horzMultiple + 3 + this._startOffset, this.top + g * this._vertSpacing, this._thumbWidth - 10, 60), e.drawImage(this._thumbnailSize === 1 ? De._bmpBackgroundWide : De._bmpBackground, r.truncate(_ * this._horzMultiple) + this._startOffset, g * this._vertSpacing));
                    break;
                  }
                  s = Ji.create(this.left + _ * this._horzMultiple + 3 + this._startOffset, this.top + g * this._vertSpacing, this._thumbWidth - 14, 60);
                  var m = "white";
                  l === this._hoverItem || l === this._selectedItem && this._hoverItem === -1 ? (e.drawImage(this._thumbnailSize === 1 ? De._bmpBackgroundWideHover : De._bmpBackgroundHover, this.left + r.truncate(_ * this._horzMultiple) + this._startOffset, this.top + g * this._vertSpacing), m = "yellow") : e.drawImage(this._thumbnailSize === 1 ? De._bmpBackgroundWide : De._bmpBackground, this.left + r.truncate(_ * this._horzMultiple) + this._startOffset, this.top + g * this._vertSpacing), this._items[l].set_bounds(Ji.create(this.left + _ * this._horzMultiple + this._startOffset, this.top + g * this._vertSpacing, r.truncate(this._horzMultiple), this._vertSpacing));
                  try {
                    var b = this._items[l].get_thumbnail();
                    b != null ? (e.drawImage(b, this.left + _ * this._horzMultiple + 2 + this._startOffset, this.top + g * this._vertSpacing + 3), e.strokeStyle = "rgb(0,0,0)", e.rect(this.left + r.truncate(_ * this._horzMultiple) + 2 + this._startOffset, this.top + g * this._vertSpacing + 3, this._items[l].get_thumbnail().width, this._items[l].get_thumbnail().height)) : (this._items[l].set_thumbnail(document.createElement("img")), this._items[l].get_thumbnail().src = this._items[l].get_thumbnailUrl(), this._items[l].get_thumbnail().addEventListener("load", function(y) {
                      t.refresh();
                    }, !1));
                  } catch {
                  }
                  e.fillStyle = m, e.strokeStyle = m, e.lineWidth = 1, e.font = "normal 8pt Arial", e.fillText(this._items[l].get_name(), s.x, s.y + s.height, s.width), l++;
                }
                if (l >= this._items.length)
                  break;
              }
            }
          },
          _getItemIndexFromCursor: function(t) {
            var e = Mt.create(t.x + this.left, t.y + this.top);
            this.imageClicked = !1;
            var n = -1, a = r.truncate(e.x / this._horzMultiple), s = r.truncate(e.x % this._horzMultiple);
            if (a >= this._colCount || a < 0)
              return -1;
            var l = r.truncate(e.y / this._vertSpacing), g = r.truncate(e.y % this._vertSpacing);
            return l >= this._rowCount || l < 0 || (n = this._startIndex + l * this._colCount + a, n === this._items.length ? this._addButtonHover = !0 : this._addButtonHover = !1, n > this._items.length - 1) ? -1 : (this._items[n].get_isImage() && g < 16 && s > 78 && (this.imageClicked = !0), n);
          },
          _addItems: function(t) {
            this._items = t;
          }
        };
        function $s() {
          this.parent = null, this._bounds = new Ji();
        }
        var su = {
          get_name: function() {
            return "Up Level";
          },
          get_thumbnail: function() {
            return this._thumbnail;
          },
          set_thumbnail: function(t) {
            return this._thumbnail = t, t;
          },
          get_thumbnailUrl: function() {
            return ze.singleton.engineAssetUrl("thumb_folderup.jpg");
          },
          set_thumbnailUrl: function(t) {
            return t;
          },
          get_bounds: function() {
            return this._bounds;
          },
          set_bounds: function(t) {
            return this._bounds = t, t;
          },
          get_isImage: function() {
            return !1;
          },
          get_isTour: function() {
            return !1;
          },
          get_isFolder: function() {
            return !1;
          },
          get_isCloudCommunityItem: function() {
            return !1;
          },
          get_readOnly: function() {
            return !1;
          },
          get_children: function() {
            return this.parent == null ? [] : this.parent.get_children();
          }
        };
        function ou(t) {
          this.buffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this.buffer), G.prepDevice.bufferData(34963, t, 35044);
        }
        var lu = {};
        function po(t) {
          this.buffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this.buffer), G.prepDevice.bufferData(34963, t, 35044);
        }
        var uu = {
          dispose: function() {
            G.prepDevice.bindBuffer(34963, null), G.prepDevice.deleteBuffer(this.buffer), this.buffer = null;
          }
        };
        function rr() {
        }
        var cu = {
          dispose: function() {
            G.prepDevice.bindBuffer(34962, null), G.prepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
          }
        };
        function ni(t, e) {
          this.startDate = 0, this.endDate = 0, this.startDate = t, this.endDate = e;
        }
        ni.empty = function() {
          return new ni(0, 0);
        };
        var hu = {
          copy: function() {
            return new ni(this.startDate, this.endDate);
          }
        };
        function an() {
          this._zBuffer = !0, this._linePoints = [], this._usingLocalCenter = !1, this.sky = !0, this.aaFix = !0, this.pure2D = !1, this.viewTransform = tt.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
        }
        var fu = {
          get_depthBuffered: function() {
            return this._zBuffer;
          },
          set_depthBuffered: function(t) {
            return this._zBuffer = t, t;
          },
          addLine: function(t, e) {
            this._linePoints.push(t), this._linePoints.push(e), this._emptyLineBuffer();
          },
          clear: function() {
            this._linePoints.length = 0, this._emptyLineBuffer();
          },
          drawLines: function(t, e, n) {
            if (!(this._linePoints.length < 2)) {
              this._initLineBuffer(t);
              var a = this._linePoints.length;
              if (t.gl == null) {
                var s = $._transformCoordinate(t.get_viewPoint(), this.viewTransform), l = t.device;
                l.save(), l.strokeStyle = n.toString(), l.lineWidth = 2, l.globalAlpha = 0.25;
                for (var g = new $(), _ = new $(), m = 0; m < a; m += 2)
                  g = t.WVP.transform(this._linePoints[m]), _ = t.WVP.transform(this._linePoints[m + 1]), $.dot(this._linePoints[m], s) > 0.6 && (l.beginPath(), l.moveTo(g.x, g.y), l.lineTo(_.x, _.y), l.stroke());
                l.restore();
              } else
                for (var b = r.enumerate(this._lineBuffers); b.moveNext(); ) {
                  var y = b.current;
                  this.pure2D ? bi.use(t, y.vertexBuffer, n, this._zBuffer) : oi.use(t, y.vertexBuffer, n, this._zBuffer), t.gl.drawArrays(1, 0, y.count);
                }
            }
          },
          _initLineBuffer: function(t) {
            if (t.gl != null && !this._lineBuffers.length) {
              var e = this._linePoints.length, n = null, a = null;
              if (this._localCenter = new $(), this.get_depthBuffered()) {
                for (var s = r.enumerate(this._linePoints); s.moveNext(); ) {
                  var l = s.current;
                  this._localCenter.add(l);
                }
                this._localCenter.x /= e, this._localCenter.y /= e, this._localCenter.z /= e;
              }
              for (var g = e, _ = 0, m, b = r.enumerate(this._linePoints); b.moveNext(); ) {
                var l = b.current;
                if (_ >= 1e5 || a == null) {
                  n != null && n.unlock();
                  var y = Math.min(1e5, g);
                  g -= y, n = new as(y), a = n.lock(), this._lineBuffers.push(n), this._lineBufferCounts.push(y), _ = 0;
                }
                this.useLocalCenters ? (m = $.subtractVectors(l, this._localCenter), a[_] = m) : a[_] = l, _++;
              }
              n != null && n.unlock();
            }
          },
          _emptyLineBuffer: function() {
          }
        };
        function vo() {
          this._zBuffer = !0, this._linePoints = [], this._lineColors = [], this.sky = !0, this.aaFix = !0, this.viewTransform = tt.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
        }
        var _u = {
          get_depthBuffered: function() {
            return this._zBuffer;
          },
          set_depthBuffered: function(t) {
            return this._zBuffer = t, t;
          },
          addLine: function(t, e, n, a) {
            this._linePoints.push(t), this._lineColors.push(n), this._linePoints.push(e), this._lineColors.push(a), this._emptyLineBuffer();
          },
          clear: function() {
            this._linePoints.length = 0, this._emptyLineBuffer();
          },
          drawLines: function(t, e, n) {
            if (!(this._linePoints.length < 2)) {
              this._initLineBuffer(t), this._linePoints.length;
              for (var a = r.enumerate(this._lineBuffers); a.moveNext(); ) {
                var s = a.current;
                je.use(t, s.vertexBuffer, n), t.gl.drawArrays(1, 0, s.count);
              }
            }
          },
          _initLineBuffer: function(t) {
            if (t.gl != null && !this._lineBuffers.length) {
              var e = this._linePoints.length, n = null, a = null;
              if (this._localCenter = new $(), this.get_depthBuffered()) {
                for (var s = r.enumerate(this._linePoints); s.moveNext(); ) {
                  var l = s.current;
                  this._localCenter.add(l);
                }
                this._localCenter.x /= e, this._localCenter.y /= e, this._localCenter.z /= e;
              }
              for (var g = e, _ = 0, m = 0, b, y = r.enumerate(this._linePoints); y.moveNext(); ) {
                var l = y.current;
                if (m >= 1e5 || a == null) {
                  n != null && n.unlock();
                  var M = Math.min(1e5, g);
                  g -= M, n = new No(M), a = n.lock(), this._lineBuffers.push(n), this._lineBufferCounts.push(M), m = 0;
                }
                this.useLocalCenters ? (b = $.subtractVectors(l, this._localCenter), a[m] = new Ja(b, this._lineColors[_])) : a[m] = new Ja(l, this._lineColors[_]), _++, m++;
              }
              n != null && n.unlock();
            }
          },
          _emptyLineBuffer: function() {
            for (var t = r.enumerate(this._lineBuffers); t.moveNext(); ) {
              var e = t.current;
              e.dispose();
            }
            this._lineBuffers.length = 0;
          }
        };
        function fa() {
          this._zBuffer = !0, this.timeSeries = !1, this.showFarSide = !0, this.sky = !1, this.decay = 0, this.useNonRotatingFrame = !1, this.jNow = 0, this._linePoints = [], this._lineColors = [], this._lineDates = [], this._usingLocalCenter = !0, this._lineBuffers = [], this._lineBufferCounts = [];
        }
        var du = {
          get_depthBuffered: function() {
            return this._zBuffer;
          },
          set_depthBuffered: function(t) {
            return this._zBuffer = t, t;
          },
          addLine: function(t, e, n, a) {
            this._linePoints.push(t), this._linePoints.push(e), this._lineColors.push(n), this._lineDates.push(a), this._emptyLineBuffer();
          },
          addLineNoDate: function(t, e, n) {
            this._linePoints.push(t), this._linePoints.push(e), this._lineColors.push(n), this._lineDates.push(new ni(0, 0)), this._emptyLineBuffer();
          },
          clear: function() {
            this._linePoints.length = 0, this._lineColors.length = 0, this._lineDates.length = 0;
          },
          drawLines: function(t, e) {
            if (!(this._linePoints.length < 2 || e <= 0) && t.gl != null) {
              this._initLineBuffer();
              for (var n = r.enumerate(this._lineBuffers); n.moveNext(); ) {
                var a = n.current;
                Ie.use(t, a.vertexBuffer, j.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), t.gl.drawArrays(1, 0, a.count);
              }
            }
          },
          _initLineBuffer: function() {
            if (!this._lineBuffers.length) {
              for (var t = this._linePoints.length, e = null, n = null, a = t, s = 0, l = 0, g, _ = r.enumerate(this._linePoints); _.moveNext(); ) {
                var m = _.current;
                if (l >= 1e5 || n == null) {
                  e != null && e.unlock();
                  var b = Math.min(1e5, a);
                  a -= b, e = new cs(b), n = e.lock(), this._lineBuffers.push(e), this._lineBufferCounts.push(b), l = 0;
                }
                var y = r.truncate(s / 2);
                g = m, n[l] = new _a(), n[l].position = g, n[l].normal = m, n[l].tu = this._lineDates[y].startDate, n[l].tv = this._lineDates[y].endDate, n[l].set_color(this._lineColors[y]), s++, l++;
              }
              e != null && e.unlock();
            }
          },
          _emptyLineBuffer: function() {
          }
        };
        function In() {
          this._trianglePoints = [], this._triangleColors = [], this._triangleDates = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.writeZbuffer = !1, this.decay = 0, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this._triangleBuffers = [], this._triangleBufferCounts = [];
        }
        var gu = {
          addTriangle: function(t, e, n, a, s) {
            this._trianglePoints.push(t), this._trianglePoints.push(e), this._trianglePoints.push(n), this._triangleColors.push(a), this._triangleDates.push(s), this._emptyTriangleBuffer();
          },
          addSubdividedTriangles: function(t, e, n, a, s, l) {
            if (l--, l < 0)
              this.addTriangle(t, e, n, a, s);
            else {
              var g, _, m;
              g = $.midPointByLength(t, e), _ = $.midPointByLength(e, n), m = $.midPointByLength(n, t), this.addSubdividedTriangles(t, g, m, a, s, l), this.addSubdividedTriangles(g, _, m, a, s, l), this.addSubdividedTriangles(g, e, _, a, s, l), this.addSubdividedTriangles(_, n, m, a, s, l);
            }
          },
          addQuad: function(t, e, n, a, s, l) {
            this._trianglePoints.push(t), this._trianglePoints.push(n), this._trianglePoints.push(e), this._trianglePoints.push(e), this._trianglePoints.push(n), this._trianglePoints.push(a), this._triangleColors.push(s), this._triangleDates.push(l), this._triangleColors.push(s), this._triangleDates.push(l), this._emptyTriangleBuffer();
          },
          clear: function() {
            this._triangleColors.length = 0, this._trianglePoints.length = 0, this._triangleDates.length = 0, this._emptyTriangleBuffer();
          },
          _emptyTriangleBuffer: function() {
          },
          _initTriangleBuffer: function() {
            if (!this._triangleBuffers.length) {
              for (var t = this._trianglePoints.length, e = null, n = null, a = t, s = 0, l = 0, g = r.enumerate(this._trianglePoints); g.moveNext(); ) {
                var _ = g.current;
                if (l >= 9e4 || e == null) {
                  e != null && e.unlock();
                  var m = Math.min(9e4, a);
                  a -= m, e = new cs(m), this._triangleBuffers.push(e), this._triangleBufferCounts.push(m), n = e.lock(), l = 0;
                }
                n[l] = new _a(), n[l].position = _, n[l].normal = _;
                var b = r.truncate(s / 3);
                n[l].set_color(this._triangleColors[b]), n[l].tu = this._triangleDates[b].startDate, n[l].tv = this._triangleDates[b].endDate, s++, l++;
              }
              e != null && e.unlock(), this._triangleColors.length = 0, this._triangleDates.length = 0, this._trianglePoints.length = 0, this._dataToDraw = !0;
            }
          },
          draw: function(t, e, n) {
            if (!(this._trianglePoints.length < 1 && !this._dataToDraw) && t.gl != null) {
              this._initTriangleBuffer();
              for (var a = r.enumerate(this._triangleBuffers); a.moveNext(); ) {
                var s = a.current;
                Ie.use(t, s.vertexBuffer, j.fromArgb(255, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0), t.gl.drawArrays(4, 0, s.count);
              }
            }
          }
        };
        function wo() {
          this._zBuffer = !0, this.timeSeries = !1, this.decay = 0, this.jNow = 0, this._shapes = [], this._colors = [], this._dates = [], this._buffers = [], this._bufferCounts = [];
        }
        var mu = {
          get_depthBuffered: function() {
            return this._zBuffer;
          },
          set_depthBuffered: function(t) {
            return this._zBuffer = t, t;
          },
          addShape: function(t, e, n) {
            this._shapes.push(t), this._colors.push(e), this._dates.push(n);
          },
          draw: function(t, e) {
            if (!(e <= 0) && t.gl != null) {
              this._initBuffer();
              for (var n = r.enumerate(this._buffers); n.moveNext(); ) {
                var a = n.current;
                Ie.use(t, a.vertexBuffer, j.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), t.gl.drawArrays(6, 0, a.count);
              }
            }
          },
          _initBuffer: function() {
            if (this._buffers.length !== this._shapes.length) {
              this._buffers.length = 0;
              for (var t = 0, e = r.enumerate(this._shapes); e.moveNext(); ) {
                var n = e.current, a = new cs(n.length), s = a.lock();
                this._buffers.push(a), this._bufferCounts.push(n.length);
                for (var l = 0, g = r.enumerate(n); g.moveNext(); ) {
                  var _ = g.current;
                  s[l] = new _a(), s[l].position = _, s[l].tu = this._dates[t].startDate, s[l].tv = this._dates[t].endDate, s[l].set_color(this._colors[t]), l++;
                }
                t++, a != null && a.unlock();
              }
            }
          }
        };
        function Xr(t) {
          this._points = [], this._colors = [], this._dates = [], this._sizes = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.decay = 0, this.scale = 1, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this.items = [], this._imageReady = !1, this._init = !1, this.minSize = 2, this._pointBuffers = [], this._pointBufferCounts = [], this._device = t;
        }
        var pu = {
          addPoint: function(t, e, n, a) {
            this._points.push(t), this._colors.push(e._clone()), this._dates.push(n), this._sizes.push(a), this._emptyPointBuffer();
          },
          clear: function() {
            this._colors.length = 0, this._points.length = 0, this._dates.length = 0, this._sizes.length = 0, this._emptyPointBuffer();
          },
          _emptyPointBuffer: function() {
            for (var t = r.enumerate(this._pointBuffers); t.moveNext(); ) {
              var e = t.current;
              e.dispose();
            }
            this._pointBuffers.length = 0, this._init = !1;
          },
          _initBuffer: function(t) {
            var e = this;
            if (!this._init) {
              if (t.gl == null) {
                this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(F) {
                  e._imageReady = !0;
                }, !1), this._starProfile.src = ze.singleton.engineAssetUrl("StarProfileAlpha.png"), this._worldList = new Array(this._points.length), this._transformedList = new Array(this._points.length);
                for (var n = 0, a = r.enumerate(this._points); a.moveNext(); ) {
                  var s = a.current, l = new Ys();
                  l.location = s, l.tranformed = new $(), l.size = this._sizes[n], l.color = this._colors[n], this._worldList[n] = l.location, this._transformedList[n] = l.tranformed, this.items.push(l), n++;
                }
              } else if (!this._pointBuffers.length) {
                Xr.starTexture == null && (Xr.starTexture = D.loadPlanetTexture(ze.singleton.engineAssetUrl("StarProfileAlpha.png")));
                for (var g = this._points.length, _ = null, m = null, b = g, n = 0, y = 0, M = r.enumerate(this._points); M.moveNext(); ) {
                  var A = M.current;
                  if (y >= 1e5 || m == null) {
                    _ != null && _.unlock();
                    var R = Math.min(1e5, b);
                    b -= R, _ = new Do(R), m = _.lock(), this._pointBuffers.push(_), this._pointBufferCounts.push(R), y = 0;
                  }
                  m[y] = new Ea(), m[y].position = A, m[y].pointSize = this._sizes[n], m[y].tu = this._dates[n].startDate, m[y].tv = this._dates[n].endDate, m[y].set_color(this._colors[n]), n++, y++;
                }
                _ != null && _.unlock();
              }
              this._init = !0;
            }
          },
          draw: function(t, e, n) {
            if (this._initBuffer(t), t.gl == null) {
              if (!this._imageReady)
                return;
              t.device.save(), t.WVP.projectArrayToScreen(this._worldList, this._transformedList);
              var a = t.device;
              a.globalAlpha = 0.4;
              var s = t.width, l = t.height;
              $.makeCopy(t.get_viewPoint());
              for (var g = t.get_fovScale() / 100, _ = r.enumerate(this.items); _.moveNext(); ) {
                var m = _.current;
                if (m.tranformed.z < 1) {
                  var b = m.tranformed.x, y = m.tranformed.y, M = 0.1 * m.size / g, A = M / 2;
                  b > -A && b < s + A && y > -A && y < l + A && (a.beginPath(), a.fillStyle = m.color.toFormat(), a.arc(b, y, M, 0, Math.PI * 2, !0), a.fill());
                }
              }
              t.device.restore();
            } else {
              var R = new $(), F = tt.multiplyMatrix(t.get_world(), t.get_view());
              F.invert();
              for (var O = $._transformCoordinate(R, F), B = r.enumerate(this._pointBuffers); B.moveNext(); ) {
                var H = B.current;
                se.use(t, H.vertexBuffer, Xr.starTexture.texture2d, j.fromArgb(255 * e, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0, O, this.scale * (t.height / 960), this.minSize, this.showFarSide, this.sky), t.gl.drawArrays(0, 0, H.count);
              }
            }
          },
          drawTextured: function(t, e, n) {
            this._initBuffer(t);
            var a = new $(), s = tt.multiplyMatrix(t.get_world(), t.get_view());
            s.invert();
            for (var l = $._transformCoordinate(a, s), g = r.enumerate(this._pointBuffers); g.moveNext(); ) {
              var _ = g.current;
              se.use(t, _.vertexBuffer, e, j.fromArgb(255 * n, 255, 255, 255), this.depthBuffered, this.jNow, this.decay, l, this.scale * (t.height / 960), this.minSize, this.showFarSide, this.sky), t.gl.drawArrays(0, 0, _.count);
            }
          }
        };
        function _a() {
          this.position = new $(), this.normal = new $(), this.tu = 0, this.tv = 0;
        }
        _a.create = function(t, e, n, a) {
          var s = new _a();
          return s.position = t, s.normal = e, s.tu = n, s.tv = 0, s.color = a, s;
        };
        var vu = {
          get_color: function() {
            return this.color;
          },
          set_color: function(t) {
            return this.color = t, t;
          }
        };
        function Ea() {
          this.pointSize = 0, this.tu = 0, this.tv = 0;
        }
        Ea.create = function(t, e, n, a) {
          var s = new Ea();
          return s.position = t, s.pointSize = e, s.tu = n, s.tv = 0, s.color = a, s;
        };
        var wu = {
          get_color: function() {
            return this.color;
          },
          set_color: function(t) {
            return this.color = t, t;
          }
        };
        function oi() {
        }
        oi.init = function(t) {
          var e = t.gl, n = `   precision highp float;                                                          
   uniform vec4 lineColor;                                                         
                                                                                   
   void main(void) {                                                               
       gl_FragColor = lineColor;                                                   
   }                                                                               
`, a = `     attribute vec3 aVertexPosition;                                              
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
     }                                                                            
                                                                                  
`;
          oi._frag = e.createShader(35632), e.shaderSource(oi._frag, n), e.compileShader(oi._frag), e.getShaderParameter(oi._frag, 35713), oi._vert = e.createShader(35633), e.shaderSource(oi._vert, a), e.compileShader(oi._vert), e.getShaderParameter(oi._vert, 35713), oi._prog = e.createProgram(), e.attachShader(oi._prog, oi._vert), e.attachShader(oi._prog, oi._frag), e.linkProgram(oi._prog), e.getProgramParameter(oi._prog, 35714), e.useProgram(oi._prog), oi.vertLoc = e.getAttribLocation(oi._prog, "aVertexPosition"), oi.lineColorLoc = e.getUniformLocation(oi._prog, "lineColor"), oi.projMatLoc = e.getUniformLocation(oi._prog, "uPMatrix"), oi.mvMatLoc = e.getUniformLocation(oi._prog, "uMVMatrix"), e.enable(3042), e.blendFunc(770, 771), oi.initialized = !0;
        }, oi.use = function(t, e, n, a) {
          var s = t.gl;
          if (s != null) {
            oi.initialized || oi.init(t), s.useProgram(oi._prog);
            var l = tt.multiplyMatrix(t.get_world(), t.get_view());
            s.uniformMatrix4fv(oi.mvMatLoc, !1, l.floatArray()), s.uniformMatrix4fv(oi.projMatLoc, !1, t.get_projection().floatArray()), s.uniform4f(oi.lineColorLoc, n.r / 255, n.g / 255, n.b / 255, 1), t.space || !a ? s.disable(2929) : s.enable(2929), s.disableVertexAttribArray(0), s.disableVertexAttribArray(1), s.disableVertexAttribArray(2), s.disableVertexAttribArray(3), s.enableVertexAttribArray(oi.vertLoc), s.bindBuffer(34962, e), s.bindBuffer(34963, null), s.vertexAttribPointer(oi.vertLoc, 3, 5126, !1, 0, 0), s.lineWidth(1), s.enable(3042), s.blendFunc(770, 771);
          }
        };
        var bu = {};
        function bi() {
        }
        bi.init = function(t) {
          var e = t.gl, n = `   precision highp float;                                                          
   uniform vec4 lineColor;                                                         
                                                                                   
   void main(void) {                                                               
       gl_FragColor = lineColor;                                                   
   }                                                                               
`, a = `     attribute vec3 aVertexPosition;                                              
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = vec4(aVertexPosition, 1.0);                                
     }                                                                            
                                                                                  
`;
          bi._frag = e.createShader(35632), e.shaderSource(bi._frag, n), e.compileShader(bi._frag), e.getShaderParameter(bi._frag, 35713), bi._vert = e.createShader(35633), e.shaderSource(bi._vert, a), e.compileShader(bi._vert), e.getShaderParameter(bi._vert, 35713), bi._prog = e.createProgram(), e.attachShader(bi._prog, bi._vert), e.attachShader(bi._prog, bi._frag), e.linkProgram(bi._prog), e.getProgramParameter(bi._prog, 35714), e.useProgram(bi._prog), bi.vertLoc = e.getAttribLocation(bi._prog, "aVertexPosition"), bi.lineColorLoc = e.getUniformLocation(bi._prog, "lineColor"), e.enable(3042), e.blendFunc(770, 771), bi.initialized = !0;
        }, bi.use = function(t, e, n, a) {
          var s = t.gl;
          s != null && (bi.initialized || bi.init(t), s.useProgram(bi._prog), tt.multiplyMatrix(t.get_world(), t.get_view()), s.uniform4f(bi.lineColorLoc, n.r / 255, n.g / 255, n.b / 255, 1), t.space || !a ? s.disable(2929) : s.enable(2929), s.disableVertexAttribArray(0), s.disableVertexAttribArray(1), s.disableVertexAttribArray(2), s.disableVertexAttribArray(3), s.enableVertexAttribArray(bi.vertLoc), s.bindBuffer(34962, e), s.bindBuffer(34963, null), s.vertexAttribPointer(bi.vertLoc, 3, 5126, !1, 0, 0), s.lineWidth(1), s.enable(3042), s.blendFunc(770, 771));
        };
        var yu = {};
        function je() {
        }
        je.init = function(t) {
          var e = t.gl, n = `    precision highp float;                                                        
    uniform vec4 lineColor;                                                       
    varying lowp vec4 vColor;                                                     
                                                                                  
    void main(void) {                                                             
        gl_FragColor = lineColor * vColor;                                        
    }                                                                             
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec4 aVertexColor;                                                 
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
     varying lowp vec4 vColor;                                                    
                                                                                  
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vColor = aVertexColor;                                                   
     }                                                                            
                                                                                  
`;
          je._frag = e.createShader(35632), e.shaderSource(je._frag, n), e.compileShader(je._frag), e.getShaderParameter(je._frag, 35713), je._vert = e.createShader(35633), e.shaderSource(je._vert, a), e.compileShader(je._vert), e.getShaderParameter(je._vert, 35713), je._prog = e.createProgram(), e.attachShader(je._prog, je._vert), e.attachShader(je._prog, je._frag), e.linkProgram(je._prog), e.getProgramParameter(je._prog, 35714), e.useProgram(je._prog), je.vertLoc = e.getAttribLocation(je._prog, "aVertexPosition"), je.colorLoc = e.getAttribLocation(je._prog, "aVertexColor"), je.lineColorLoc = e.getUniformLocation(je._prog, "lineColor"), je.projMatLoc = e.getUniformLocation(je._prog, "uPMatrix"), je.mvMatLoc = e.getUniformLocation(je._prog, "uMVMatrix"), e.enable(3042), e.blendFunc(770, 771), je.initialized = !0;
        }, je.use = function(t, e, n) {
          var a = t.gl;
          if (a != null) {
            je.initialized || je.init(t), a.useProgram(je._prog);
            var s = tt.multiplyMatrix(t.get_world(), t.get_view());
            a.uniformMatrix4fv(je.mvMatLoc, !1, s.floatArray()), a.uniformMatrix4fv(je.projMatLoc, !1, t.get_projection().floatArray()), a.uniform4f(je.lineColorLoc, n.r / 255, n.g / 255, n.b / 255, 1), t.space ? a.disable(2929) : a.enable(2929), a.disableVertexAttribArray(0), a.disableVertexAttribArray(1), a.disableVertexAttribArray(2), a.disableVertexAttribArray(3), a.bindBuffer(34962, e), a.bindBuffer(34963, null), a.enableVertexAttribArray(je.vertLoc), a.enableVertexAttribArray(je.colorLoc), a.vertexAttribPointer(je.vertLoc, 3, 5126, !1, 28, 0), a.vertexAttribPointer(je.colorLoc, 4, 5126, !1, 28, 12), a.lineWidth(1), a.enable(3042), a.blendFunc(770, 771);
          }
        };
        var Su = {};
        function Ie() {
        }
        Ie.init = function(t) {
          var e = t.gl, n = `    precision highp float;                                                              
    uniform vec4 lineColor;                                                             
    varying lowp vec4 vColor;                                                           
    void main(void)                                                                     
    {                                                                                   
        gl_FragColor = lineColor * vColor;                                              
    }                                                                                   
`, a = `    attribute vec3 aVertexPosition;                                                     
    attribute vec4 aVertexColor;                                                        
    attribute vec2 aTime;                                                               
    uniform mat4 uMVMatrix;                                                             
    uniform mat4 uPMatrix;                                                              
    uniform float jNow;                                                                 
    uniform float decay;                                                                
                                                                                        
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);                
        float dAlpha = 1.0;                                                             
        if ( decay > 0.0)                                                               
        {                                                                               
             dAlpha = 1.0 - ((jNow - aTime.y) / decay);                                 
              if (dAlpha > 1.0 )                                                         
             {                                                                          
                  dAlpha = 1.0;                                                         
             }                                                                          
        }                                                                               
        if (jNow < aTime.x && decay > 0.0)                                              
        {                                                                               
            vColor = vec4(1, 1, 1, 1);                                                  
        }                                                                               
        else                                                                            
        {                                                                               
           vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha * aVertexColor.a);          
        }                                                                                
    }                                                                                    
                                                                                         
`;
          Ie._frag = e.createShader(35632), e.shaderSource(Ie._frag, n), e.compileShader(Ie._frag), e.getShaderParameter(Ie._frag, 35713), Ie._vert = e.createShader(35633), e.shaderSource(Ie._vert, a), e.compileShader(Ie._vert), e.getShaderParameter(Ie._vert, 35713), Ie._prog = e.createProgram(), e.attachShader(Ie._prog, Ie._vert), e.attachShader(Ie._prog, Ie._frag), e.linkProgram(Ie._prog), e.getProgramParameter(Ie._prog, 35714), e.useProgram(Ie._prog), Ie.vertLoc = e.getAttribLocation(Ie._prog, "aVertexPosition"), Ie.colorLoc = e.getAttribLocation(Ie._prog, "aVertexColor"), Ie.timeLoc = e.getAttribLocation(Ie._prog, "aTime"), Ie.lineColorLoc = e.getUniformLocation(Ie._prog, "lineColor"), Ie.projMatLoc = e.getUniformLocation(Ie._prog, "uPMatrix"), Ie.mvMatLoc = e.getUniformLocation(Ie._prog, "uMVMatrix"), Ie.jNowLoc = e.getUniformLocation(Ie._prog, "jNow"), Ie.decayLoc = e.getUniformLocation(Ie._prog, "decay"), e.enable(3042), e.blendFunc(770, 771), Ie.initialized = !0;
        }, Ie.use = function(t, e, n, a, s, l) {
          var g = t.gl;
          if (g != null) {
            Ie.initialized || Ie.init(t), g.useProgram(Ie._prog);
            var _ = tt.multiplyMatrix(t.get_world(), t.get_view());
            g.uniformMatrix4fv(Ie.mvMatLoc, !1, _.floatArray()), g.uniformMatrix4fv(Ie.projMatLoc, !1, t.get_projection().floatArray()), g.uniform4f(Ie.lineColorLoc, n.r / 255, n.g / 255, n.b / 255, 1), g.uniform1f(Ie.jNowLoc, s), g.uniform1f(Ie.decayLoc, l), a ? g.enable(2929) : g.disable(2929), g.disableVertexAttribArray(0), g.disableVertexAttribArray(1), g.disableVertexAttribArray(2), g.disableVertexAttribArray(3), g.bindBuffer(34962, e), g.bindBuffer(34963, null), g.enableVertexAttribArray(Ie.vertLoc), g.enableVertexAttribArray(Ie.colorLoc), g.vertexAttribPointer(Ie.vertLoc, 3, 5126, !1, 36, 0), g.vertexAttribPointer(Ie.colorLoc, 4, 5126, !1, 36, 12), g.vertexAttribPointer(Ie.timeLoc, 2, 5126, !1, 36, 28), g.lineWidth(1), g.enable(3042), g.blendFunc(770, 771);
          }
        };
        var Cu = {};
        function se() {
        }
        se.init = function(t) {
          var e = t.gl, n = `    precision mediump float;                                                            
    uniform vec4 lineColor;                                                             
    varying lowp vec4 vColor;                                                           
    uniform sampler2D uSampler;                                                         
    void main(void)                                                                     
    {                                                                                   
        vec4 texColor;                                                                  
        texColor = texture2D(uSampler, gl_PointCoord);                                  
                                                                                        
                                                                                        
        gl_FragColor = lineColor * vColor * texColor;                                   
    }                                                                                   
`, a = `    attribute vec3 aVertexPosition;                                                     
    attribute vec4 aVertexColor;                                                        
    attribute vec2 aTime;                                                               
    attribute float aPointSize;                                                         
    uniform mat4 uMVMatrix;                                                             
    uniform mat4 uPMatrix;                                                              
    uniform float jNow;                                                                 
    uniform vec3 cameraPosition;                                                        
    uniform float decay;                                                                
    uniform float scale;                                                                
    uniform float minSize;                                                              
    uniform float sky;                                                                  
    uniform float showFarSide;                                                          
                                                                                        
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
        float dotCam = dot( normalize(cameraPosition-aVertexPosition), normalize(aVertexPosition));                                  
        float dist = distance(aVertexPosition, cameraPosition);                         
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);                
        float dAlpha = 1.0;                                                             
        if ( decay > 0.0)                                                               
        {                                                                               
             dAlpha = 1.0 - ((jNow - aTime.y) / decay);                                 
              if (dAlpha > 1.0 )                                                         
             {                                                                          
                  dAlpha = 1.0;                                                         
             }                                                                          
        }                                                                               
        if ( showFarSide == 0.0 && (dotCam * sky) < 0.0 || (jNow < aTime.x && decay > 0.0))                                              
        {                                                                               
            vColor = vec4(0.0, 0.0, 0.0, 0.0);                                          
        }                                                                               
        else                                                                            
        {                                                                               
           vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha);       
        }                                                                               
        float lSize = scale;                                                            
        if (scale < 0.0)                                                                
        {                                                                               
           lSize = -scale;                                                              
           dist = 1.0;                                                                  
        }                                                                               
        gl_PointSize = max(minSize, (lSize * ( aPointSize ) / dist));                   
    }                                                                                   
                                                                                        
`;
          se._frag = e.createShader(35632), e.shaderSource(se._frag, n), e.compileShader(se._frag), e.getShaderParameter(se._frag, 35713), se._vert = e.createShader(35633), e.shaderSource(se._vert, a), e.compileShader(se._vert), e.getShaderParameter(se._vert, 35713), e.getShaderInfoLog(se._vert), se._prog = e.createProgram(), e.attachShader(se._prog, se._vert), e.attachShader(se._prog, se._frag), e.linkProgram(se._prog), e.getProgramParameter(se._prog, 35714), e.useProgram(se._prog), se.vertLoc = e.getAttribLocation(se._prog, "aVertexPosition"), se.colorLoc = e.getAttribLocation(se._prog, "aVertexColor"), se.pointSizeLoc = e.getAttribLocation(se._prog, "aPointSize"), se.timeLoc = e.getAttribLocation(se._prog, "aTime"), se.projMatLoc = e.getUniformLocation(se._prog, "uPMatrix"), se.mvMatLoc = e.getUniformLocation(se._prog, "uMVMatrix"), se.sampLoc = e.getUniformLocation(se._prog, "uSampler"), se.jNowLoc = e.getUniformLocation(se._prog, "jNow"), se.decayLoc = e.getUniformLocation(se._prog, "decay"), se.lineColorLoc = e.getUniformLocation(se._prog, "lineColor"), se.cameraPosLoc = e.getUniformLocation(se._prog, "cameraPosition"), se.scaleLoc = e.getUniformLocation(se._prog, "scale"), se.skyLoc = e.getUniformLocation(se._prog, "sky"), se.showFarSideLoc = e.getUniformLocation(se._prog, "showFarSide"), se.minSizeLoc = e.getUniformLocation(se._prog, "minSize"), e.enable(3042), se.initialized = !0;
        }, se.use = function(t, e, n, a, s, l, g, _, m, b, y, M) {
          n == null && (n = di.getEmpty());
          var A = t.gl;
          if (A != null) {
            se.initialized || se.init(t), A.useProgram(se._prog);
            var R = tt.multiplyMatrix(t.get_world(), t.get_view());
            A.uniformMatrix4fv(se.mvMatLoc, !1, R.floatArray()), A.uniformMatrix4fv(se.projMatLoc, !1, t.get_projection().floatArray()), A.uniform1i(se.sampLoc, 0), A.uniform1f(se.jNowLoc, l), A.uniform1f(se.decayLoc, g), A.uniform4f(se.lineColorLoc, a.r / 255, a.g / 255, a.b / 255, a.a / 255), A.uniform3f(se.cameraPosLoc, _.x, _.y, _.z), A.uniform1f(se.scaleLoc, m), A.uniform1f(se.minSizeLoc, b), A.uniform1f(se.showFarSideLoc, y ? 1 : 0), A.uniform1f(se.skyLoc, M ? -1 : 1), s ? A.enable(2929) : A.disable(2929), A.disableVertexAttribArray(0), A.disableVertexAttribArray(1), A.disableVertexAttribArray(2), A.disableVertexAttribArray(3), A.bindBuffer(34962, e), A.bindBuffer(34963, null), A.enableVertexAttribArray(se.vertLoc), A.enableVertexAttribArray(se.colorLoc), A.enableVertexAttribArray(se.pointSizeLoc), A.enableVertexAttribArray(se.timeLoc), A.vertexAttribPointer(se.vertLoc, 3, 5126, !1, 40, 0), A.vertexAttribPointer(se.colorLoc, 4, 5126, !1, 40, 12), A.vertexAttribPointer(se.pointSizeLoc, 1, 5126, !1, 40, 36), A.vertexAttribPointer(se.timeLoc, 2, 5126, !1, 40, 28), A.activeTexture(33984), A.bindTexture(3553, n), A.lineWidth(1), A.enable(3042), A.blendFunc(770, 1);
          }
        };
        var Tu = {};
        function Gt() {
        }
        Gt.init = function(t) {
          var e = t.gl, n = `    precision mediump float;                                                            
    uniform vec4 lineColor;                                                             
    varying lowp vec4 vColor;                                                           
    uniform sampler2D uSampler;                                                         
    void main(void)                                                                     
    {                                                                                   
        vec4 texColor;                                                                  
        texColor = texture2D(uSampler, gl_PointCoord);                                  
                                                                                        
                                                                                        
        gl_FragColor = lineColor * vColor * texColor;                                   
    }                                                                                   
`, a = `    attribute vec3 ABC;                                                                 
    attribute vec3 abc;                                                                 
    attribute float PointSize;                                                          
    attribute vec4 Color;                                                               
    attribute vec2 we;                                                                  
    attribute vec2 nT;                                                                  
    attribute vec2 az;                                                                  
    attribute vec2 orbit;                                                               
    uniform mat4 uMVMatrix;                                                             
    uniform mat4 uPMatrix;                                                              
    uniform float jNow;                                                                 
    uniform vec3 cameraPosition;                                                        
    uniform float MM;                                                                   
    uniform float scaling;                                                              
    uniform float minSize;                                                              
    uniform float opacity;                                                              
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
     float M = nT.x * (jNow - nT.y) * 0.01745329251994;                                 
     float e = we.y;                                                                    
     float a = az.x;                                                                    
     float PI = 3.1415926535897932384;                                                  
     float w = we.x* 0.01745329251994;                                                  
     float F = 1.0;                                                                     
     if (M < 0.0)                                                                       
       F = -1.0;                                                                        
     M = abs(M) / (2.0 * PI);                                                           
     M = (M - float(int(M)))*2.0 *PI *F;                                                
     if (MM != 0.0)                                                                     
     {                                                                                  
       M = MM + (1.0- orbit.x) *2.0 *PI;                                                
       if (M > (2.0*PI))                                                                
           M = M - (2.0*PI);                                                            
     }                                                                                  
                                                                                        
     if (M < 0.0)                                                                       
       M += 2.0 *PI;                                                                    
     F = 1.0;                                                                           
     if (M > PI)                                                                        
        F = -1.0;                                                                       
     if (M > PI)                                                                        
       M = 2.0 *PI - M;                                                                 
                                                                                        
     float E = PI / 2.0;                                                                
     float scale = PI / 4.0;                                                            
     for (int i =0; i<23; i++)                                                          
     {                                                                                  
       float R = E - e *sin(E);                                                         
       if (M > R)                                                                       
      	E += scale;                                                                      
       else                                                                             
     	E -= scale;                                                                      
       scale /= 2.0;                                                                    
     }                                                                                  
      E = E * F;                                                                        
                                                                                        
     float v = 2.0 * atan(sqrt((1.0 + e) / (1.0 -e )) * tan(E/2.0));                    
     float r = a * (1.0-e * cos(E));                                                    
                                                                                        
     vec4 pnt;                                                                          
     pnt.x = r * abc.x * sin(ABC.x + w + v);                                            
     pnt.z = r * abc.y * sin(ABC.y + w + v);                                            
     pnt.y = r * abc.z * sin(ABC.z + w + v);                                            
     pnt.w = 1.0;                                                                       
                                                                                        
     float dist = distance(pnt.xyz, cameraPosition.xyz);                                
     gl_Position = uPMatrix * uMVMatrix * pnt;                                          
     vColor.a = opacity * (1.0-(orbit.x));                                              
     vColor.r = Color.r;                                                                
     vColor.g = Color.g;                                                                
     vColor.b = Color.b;                                                                
     gl_PointSize = max(minSize, scaling * (PointSize / dist));                         
 }                                                                                      
`;
          Gt._frag = e.createShader(35632), e.shaderSource(Gt._frag, n), e.compileShader(Gt._frag), e.getShaderParameter(Gt._frag, 35713), Gt._vert = e.createShader(35633), e.shaderSource(Gt._vert, a), e.compileShader(Gt._vert), e.getShaderParameter(Gt._vert, 35713), e.getShaderInfoLog(Gt._vert), Gt._prog = e.createProgram(), e.attachShader(Gt._prog, Gt._vert), e.attachShader(Gt._prog, Gt._frag), e.linkProgram(Gt._prog), e.getProgramParameter(Gt._prog, 35714), e.useProgram(Gt._prog), Gt.abcLoc1 = e.getAttribLocation(Gt._prog, "abc"), Gt.abcLoc = e.getAttribLocation(Gt._prog, "ABC"), Gt.pointSizeLoc = e.getAttribLocation(Gt._prog, "PointSize"), Gt.colorLoc = e.getAttribLocation(Gt._prog, "Color"), Gt.weLoc = e.getAttribLocation(Gt._prog, "we"), Gt.nTLoc = e.getAttribLocation(Gt._prog, "nT"), Gt.azLoc = e.getAttribLocation(Gt._prog, "az"), Gt.orbitLoc = e.getAttribLocation(Gt._prog, "orbit"), Gt.projMatLoc = e.getUniformLocation(Gt._prog, "uPMatrix"), Gt.mvMatLoc = e.getUniformLocation(Gt._prog, "uMVMatrix"), Gt.jNowLoc = e.getUniformLocation(Gt._prog, "jNow"), Gt.cameraPosLoc = e.getUniformLocation(Gt._prog, "cameraPosition"), Gt.mmLoc = e.getUniformLocation(Gt._prog, "MM"), Gt.scaleLoc = e.getUniformLocation(Gt._prog, "scaling"), Gt.minSizeLoc = e.getUniformLocation(Gt._prog, "minSize"), Gt.lineColorLoc = e.getUniformLocation(Gt._prog, "lineColor"), Gt.opacityLoc = e.getUniformLocation(Gt._prog, "opacity"), Gt.sampLoc = e.getUniformLocation(Gt._prog, "uSampler"), e.enable(3042), Gt.initialized = !0;
        }, Gt.use = function(t, e, n, a, s, l, g, _, m, b, y, M) {
          a == null && (a = di.getEmpty());
          var A = t.gl;
          A != null && (Gt.initialized || Gt.init(t), A.useProgram(Gt._prog), A.uniformMatrix4fv(Gt.mvMatLoc, !1, e.floatArray()), A.uniformMatrix4fv(Gt.projMatLoc, !1, t.get_projection().floatArray()), A.uniform1i(Gt.sampLoc, 0), A.uniform1f(Gt.jNowLoc, _), A.uniform1f(Gt.mmLoc, m), A.uniform4f(Gt.lineColorLoc, s.r / 255, s.g / 255, s.b / 255, s.a / 255), A.uniform1f(Gt.opacityLoc, l), A.uniform3f(Gt.cameraPosLoc, b.x, b.y, b.z), A.uniform1f(Gt.scaleLoc, y), A.uniform1f(Gt.minSizeLoc, M), g ? A.enable(2929) : A.disable(2929), A.disableVertexAttribArray(0), A.disableVertexAttribArray(1), A.disableVertexAttribArray(2), A.disableVertexAttribArray(3), A.bindBuffer(34962, n), A.bindBuffer(34963, null), A.enableVertexAttribArray(Gt.abcLoc), A.enableVertexAttribArray(Gt.abcLoc1), A.enableVertexAttribArray(Gt.colorLoc), A.enableVertexAttribArray(Gt.pointSizeLoc), A.enableVertexAttribArray(Gt.weLoc), A.enableVertexAttribArray(Gt.nTLoc), A.enableVertexAttribArray(Gt.azLoc), A.enableVertexAttribArray(Gt.orbitLoc), A.enableVertexAttribArray(Gt.weLoc), A.vertexAttribPointer(Gt.abcLoc, 3, 5126, !1, 76, 0), A.vertexAttribPointer(Gt.abcLoc1, 3, 5126, !1, 76, 12), A.vertexAttribPointer(Gt.pointSizeLoc, 1, 5126, !1, 76, 24), A.vertexAttribPointer(Gt.colorLoc, 4, 5126, !1, 76, 28), A.vertexAttribPointer(Gt.weLoc, 2, 5126, !1, 76, 44), A.vertexAttribPointer(Gt.nTLoc, 2, 5126, !1, 76, 52), A.vertexAttribPointer(Gt.azLoc, 2, 5126, !1, 76, 60), A.vertexAttribPointer(Gt.orbitLoc, 2, 5126, !1, 76, 68), A.activeTexture(33984), A.bindTexture(3553, a), A.lineWidth(1), A.enable(3042), A.blendFunc(770, 1));
        };
        var Mu = {};
        function Pe() {
        }
        Pe.init = function(t) {
          var e = t.gl, n = `    precision mediump float;                                                            
    varying lowp vec4 vColor;                                                           
    void main(void)                                                                     
    {                                                                                   
        gl_FragColor = vColor;                                          
    }                                                                                   
`, a = `    attribute vec3 Angle;                                                               
    uniform mat4 matWVP;                                                             
    uniform mat4 matPosition;                                                              
    uniform vec3 positionNow;                                                        
    uniform float semiMajorAxis;                                                                   
    uniform float eccentricity;                                                              
    uniform vec4 color;                                                             
    uniform float eccentricAnomaly;                                                              
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
        float fade = (1.0 - Angle.x);                                                    
        float PI = 3.1415927;                                                          
        float E = eccentricAnomaly - Angle.x * 2.0 * PI;                                   
        vec2 semiAxes = vec2(1.0, sqrt(1.0 - eccentricity * eccentricity)) * semiMajorAxis;   
        vec2 planePos = semiAxes * vec2(cos(E) - eccentricity, sin(E));              
        if (Angle.x == 0.0)                                                         
           gl_Position =  matPosition * vec4(positionNow, 1.0);                                
        else                                                                           
           gl_Position = matWVP * vec4(planePos.x, planePos.y, 0.0, 1.0);              
        vColor = vec4(color.rgb, fade * color.a);                                      
    }                                                                                  
`;
          Pe._frag = e.createShader(35632), e.shaderSource(Pe._frag, n), e.compileShader(Pe._frag), e.getShaderParameter(Pe._frag, 35713), Pe._vert = e.createShader(35633), e.shaderSource(Pe._vert, a), e.compileShader(Pe._vert), e.getShaderParameter(Pe._vert, 35713), e.getShaderInfoLog(Pe._vert), Pe._prog = e.createProgram(), e.attachShader(Pe._prog, Pe._vert), e.attachShader(Pe._prog, Pe._frag), e.linkProgram(Pe._prog), e.getProgramParameter(Pe._prog, 35714), e.useProgram(Pe._prog), Pe.angleLoc = e.getAttribLocation(Pe._prog, "Angle"), Pe.matWVPLoc = e.getUniformLocation(Pe._prog, "matWVP"), Pe.matPositionLoc = e.getUniformLocation(Pe._prog, "matPosition"), Pe.positionNowLoc = e.getUniformLocation(Pe._prog, "positionNow"), Pe.colorLoc = e.getUniformLocation(Pe._prog, "color"), Pe.semiMajorAxisLoc = e.getUniformLocation(Pe._prog, "semiMajorAxis"), Pe.eccentricityLoc = e.getUniformLocation(Pe._prog, "eccentricity"), Pe.eccentricAnomalyLoc = e.getUniformLocation(Pe._prog, "eccentricAnomaly"), e.enable(3042), Pe.initialized = !0;
        }, Pe.use = function(t, e, n, a, s, l, g, _) {
          var m = t.gl;
          if (m != null) {
            Pe.initialized || Pe.init(t), m.useProgram(Pe._prog);
            var b = tt.multiplyMatrix(tt.multiplyMatrix(g, t.get_view()), t.get_projection()), y = tt.multiplyMatrix(tt.multiplyMatrix(t.get_world(), t.get_view()), t.get_projection());
            m.uniformMatrix4fv(Pe.matWVPLoc, !1, y.floatArray()), m.uniformMatrix4fv(Pe.matPositionLoc, !1, b.floatArray()), m.uniform3f(Pe.positionNowLoc, _.x, _.y, _.z), m.uniform4f(Pe.colorLoc, s.r / 255, s.g / 255, s.b / 255, s.a / 255), m.uniform1f(Pe.semiMajorAxisLoc, e), m.uniform1f(Pe.eccentricityLoc, n), m.uniform1f(Pe.eccentricAnomalyLoc, a), m.disable(2929), m.disableVertexAttribArray(0), m.disableVertexAttribArray(1), m.disableVertexAttribArray(2), m.disableVertexAttribArray(3), m.enableVertexAttribArray(Pe.angleLoc), m.vertexAttribPointer(Pe.angleLoc, 3, 5126, !1, 0, 0), m.lineWidth(1), m.enable(3042), m.blendFunc(770, 1);
          }
        };
        var xu = {};
        function ce() {
        }
        ce.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
   varying vec3 vNormal;                                                               
   varying vec3 vCamVector;                                                               
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
   uniform vec3 uSunPosition;                                                          
   uniform float uMinBrightness;                                                       
   uniform vec3 uAtmosphereColor;                                                       
                                                                                       
   void main(void) {                                                                   
     vec3 normal = normalize(vNormal);                                                 
     vec3 camVN = normalize(vCamVector);                                               
     vec3 cam = normalize(vec3(0.0,0.0,-1.0));                                                    
     float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);                  
     float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;                             
     atm = (dt > uMinBrightness) ? atm : 0.0;                                          
     if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }                                        
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
     gl_FragColor.rgb *= dt;                                                           
     gl_FragColor.rgb += atm * uAtmosphereColor;                                  
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec3 aNormal;                                                     
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);              
         vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);                      
         vTextureCoord = aTextureCoord;                                           
         vNormal = normalT;                                                       
     }                                                                            
                                                                                  
`;
          ce._frag = e.createShader(35632), e.shaderSource(ce._frag, n), e.compileShader(ce._frag);
          var s = e.getShaderParameter(ce._frag, 35713);
          s || e.getShaderInfoLog(ce._frag), ce._vert = e.createShader(35633), e.shaderSource(ce._vert, a), e.compileShader(ce._vert);
          var l = e.getShaderParameter(ce._vert, 35713);
          l || e.getShaderInfoLog(ce._vert), ce._prog = e.createProgram(), e.attachShader(ce._prog, ce._vert), e.attachShader(ce._prog, ce._frag), e.linkProgram(ce._prog), e.getProgramParameter(ce._prog, 35714), e.useProgram(ce._prog), ce.vertLoc = e.getAttribLocation(ce._prog, "aVertexPosition"), ce.normalLoc = e.getAttribLocation(ce._prog, "aNormal"), ce.textureLoc = e.getAttribLocation(ce._prog, "aTextureCoord"), ce.projMatLoc = e.getUniformLocation(ce._prog, "uPMatrix"), ce.mvMatLoc = e.getUniformLocation(ce._prog, "uMVMatrix"), ce.sampLoc = e.getUniformLocation(ce._prog, "uSampler"), ce.sunLoc = e.getUniformLocation(ce._prog, "uSunPosition"), ce.minBrightnessLoc = e.getUniformLocation(ce._prog, "uMinBrightness"), ce.opacityLoc = e.getUniformLocation(ce._prog, "opacity"), ce.atmosphereColorLoc = e.getUniformLocation(ce._prog, "uAtmosphereColor"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), ce.initialized = !0;
        }, ce.use = function(t, e, n, a, s, l, g) {
          a == null && (a = di.getEmpty());
          var _ = t.gl;
          if (_ != null) {
            ce.initialized || ce.init(t), _.useProgram(ce._prog);
            var m = tt.multiplyMatrix(t.get_world(), t.get_view());
            _.uniform1f(ce.opacityLoc, s), _.uniform1f(ce.minBrightnessLoc, t.lighting ? ce.minLightingBrightness : 1), t.lighting ? _.uniform3f(ce.atmosphereColorLoc, ce.atmosphereColor.r / 255, ce.atmosphereColor.g / 255, ce.atmosphereColor.b / 255) : _.uniform3f(ce.atmosphereColorLoc, 0, 0, 0), _.uniformMatrix4fv(ce.mvMatLoc, !1, m.floatArray()), _.uniformMatrix4fv(ce.projMatLoc, !1, t.get_projection().floatArray()), ce.sunPosition.normalize();
            var b = t.get_view().clone();
            b.set_m41(0), b.set_m42(0), b.set_m43(0), b.set_m44(1);
            var y = $._transformCoordinate(ce.sunPosition, b);
            y.normalize(), _.uniform3f(ce.sunLoc, y.x, y.y, y.z), _.uniform1i(ce.sampLoc, 0), t.space || l ? _.disable(2929) : _.enable(2929), _.disableVertexAttribArray(0), _.disableVertexAttribArray(1), _.disableVertexAttribArray(2), _.disableVertexAttribArray(3), _.bindBuffer(34962, e), _.enableVertexAttribArray(ce.vertLoc), _.enableVertexAttribArray(ce.normalLoc), _.enableVertexAttribArray(ce.textureLoc), _.vertexAttribPointer(ce.vertLoc, 3, 5126, !1, g, 0), _.vertexAttribPointer(ce.normalLoc, 3, 5126, !1, g, 12), _.vertexAttribPointer(ce.textureLoc, 2, 5126, !1, g, g - 8), _.activeTexture(33984), _.bindTexture(3553, a), _.bindBuffer(34963, n), _.enable(3042), l ? _.blendFunc(770, 1) : _.blendFunc(770, 771);
          }
        };
        var Lu = {};
        function de() {
        }
        de.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
   varying vec3 vNormal;                                                               
   varying vec3 vCamVector;                                                               
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
   uniform vec3 uSunPosition;                                                          
   uniform float uMinBrightness;                                                       
   uniform vec3 uAtmosphereColor;                                                       
                                                                                       
   void main(void) {                                                                   
     vec3 normal = normalize(vNormal);                                                 
     vec3 camVN = normalize(vCamVector);                                               
     vec3 cam = normalize(vec3(0.0,0.0,-1.0));                                                    
     float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);                  
     float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;                             
     atm = (dt > uMinBrightness) ? atm : 0.0;                                          
     if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }                                        
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
     gl_FragColor.rgb *= dt;                                                           
     gl_FragColor.rgb += atm * uAtmosphereColor;                                  
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec3 aNormal;                                                     
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);              
         vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);                      
         vTextureCoord = aTextureCoord;                                           
         vNormal = normalT;                                                       
     }                                                                            
                                                                                  
`;
          de._frag = e.createShader(35632), e.shaderSource(de._frag, n), e.compileShader(de._frag);
          var s = e.getShaderParameter(de._frag, 35713);
          s || e.getShaderInfoLog(de._frag), de._vert = e.createShader(35633), e.shaderSource(de._vert, a), e.compileShader(de._vert);
          var l = e.getShaderParameter(de._vert, 35713);
          l || e.getShaderInfoLog(de._vert), de._prog = e.createProgram(), e.attachShader(de._prog, de._vert), e.attachShader(de._prog, de._frag), e.linkProgram(de._prog), e.getProgramParameter(de._prog, 35714), e.useProgram(de._prog), de.vertLoc = e.getAttribLocation(de._prog, "aVertexPosition"), de.normalLoc = e.getAttribLocation(de._prog, "aNormal"), de.textureLoc = e.getAttribLocation(de._prog, "aTextureCoord"), de.projMatLoc = e.getUniformLocation(de._prog, "uPMatrix"), de.mvMatLoc = e.getUniformLocation(de._prog, "uMVMatrix"), de.sampLoc = e.getUniformLocation(de._prog, "uSampler"), de.sunLoc = e.getUniformLocation(de._prog, "uSunPosition"), de.minBrightnessLoc = e.getUniformLocation(de._prog, "uMinBrightness"), de.opacityLoc = e.getUniformLocation(de._prog, "opacity"), de.atmosphereColorLoc = e.getUniformLocation(de._prog, "uAtmosphereColor"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), de.initialized = !0;
        }, de.use = function(t, e, n, a, s, l, g) {
          a == null && (a = di.getEmpty());
          var _ = t.gl;
          if (_ != null) {
            de.initialized || de.init(t), _.useProgram(de._prog);
            var m = tt.multiplyMatrix(t.get_world(), t.get_view());
            _.uniform1f(de.opacityLoc, s), _.uniform1f(de.minBrightnessLoc, t.lighting ? de.minLightingBrightness : 1), t.lighting ? _.uniform3f(de.atmosphereColorLoc, de.atmosphereColor.r / 255, de.atmosphereColor.g / 255, de.atmosphereColor.b / 255) : _.uniform3f(de.atmosphereColorLoc, 0, 0, 0), _.uniformMatrix4fv(de.mvMatLoc, !1, m.floatArray()), _.uniformMatrix4fv(de.projMatLoc, !1, t.get_projection().floatArray()), de.sunPosition.normalize();
            var b = t.get_view().clone();
            b.set_m41(0), b.set_m42(0), b.set_m43(0), b.set_m44(1);
            var y = $._transformCoordinate(de.sunPosition, b);
            y.normalize(), _.uniform3f(de.sunLoc, -y.x, -y.y, -y.z), _.uniform1i(de.sampLoc, 0), t.space || l ? _.disable(2929) : _.enable(2929), _.disableVertexAttribArray(0), _.disableVertexAttribArray(1), _.disableVertexAttribArray(2), _.disableVertexAttribArray(3), _.bindBuffer(34962, e), _.enableVertexAttribArray(de.vertLoc), _.enableVertexAttribArray(de.normalLoc), _.enableVertexAttribArray(de.textureLoc), _.vertexAttribPointer(de.vertLoc, 3, 5126, !1, g, 0), _.vertexAttribPointer(de.normalLoc, 3, 5126, !1, g, 12), _.vertexAttribPointer(de.textureLoc, 2, 5126, !1, g, g - 8), _.activeTexture(33984), _.bindTexture(3553, a), _.bindBuffer(34963, n), _.enable(3042), l ? _.blendFunc(770, 1) : _.blendFunc(770, 771);
          }
        };
        var Au = {};
        function ne() {
        }
        ne.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
   varying vec3 vNormal;                                                               
   varying vec3 vCamVector;                                                               
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
   uniform vec3 uSunPosition;                                                          
   uniform float uMinBrightness;                                                       
   uniform vec3 uAtmosphereColor;                                                       
                                                                                       
   void main(void) {                                                                   
     vec3 normal = normalize(vNormal);                                                 
     vec3 camVN = normalize(vCamVector);                                               
     vec3 cam = normalize(vec3(0.0,0.0,-1.0));                                                    
     float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);                  
     float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;                             
     atm = (dt > uMinBrightness) ? atm : 0.0;                                          
     if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }                                        
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
     gl_FragColor.rgb *= dt;                                                           
     gl_FragColor.rgb += atm * uAtmosphereColor;                                  
   }                                                                                   
`, a = `\r
                    attribute vec3 aVertexPosition;\r
                    attribute vec2 aTextureCoord;\r
                    \r
                    uniform mat4 uMVMatrix;\r
                    uniform mat4 uPMatrix;\r
                    uniform vec3 uCenterScreen;\r
                    uniform vec3 uCenterWorld;\r
\r
                    varying vec2 vTextureCoord;\r
                    varying vec3 vNormal;\r
                    varying vec3 vCamVector;\r
                    \r
                    void main(void) {\r
                        vec3 normal;\r
                        if(length(uCenterWorld) > 0.00001){\r
                            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);\r
                            vCamVector = normalize((mat3(uMVMatrix) * (aVertexPosition + uCenterWorld)).xyz);\r
                            normal = normalize(aVertexPosition + uCenterWorld);\r
                        } else {\r
                            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r
                            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);\r
                            normal = normalize(aVertexPosition);\r
                        }\r
                        vec3 normalT = normalize(mat3(uMVMatrix) * normal);\r
                        vTextureCoord = aTextureCoord;\r
                        vNormal = normalT;\r
                    }`;
          ne._frag = e.createShader(35632), e.shaderSource(ne._frag, n), e.compileShader(ne._frag);
          var s = e.getShaderParameter(ne._frag, 35713);
          s || e.getShaderInfoLog(ne._frag), ne._vert = e.createShader(35633), e.shaderSource(ne._vert, a), e.compileShader(ne._vert);
          var l = e.getShaderParameter(ne._vert, 35713);
          l || e.getShaderInfoLog(ne._vert), ne._prog = e.createProgram(), e.attachShader(ne._prog, ne._vert), e.attachShader(ne._prog, ne._frag), e.linkProgram(ne._prog), e.getProgramParameter(ne._prog, 35714), e.useProgram(ne._prog), ne.vertLoc = e.getAttribLocation(ne._prog, "aVertexPosition"), ne.textureLoc = e.getAttribLocation(ne._prog, "aTextureCoord"), ne.projMatLoc = e.getUniformLocation(ne._prog, "uPMatrix"), ne.mvMatLoc = e.getUniformLocation(ne._prog, "uMVMatrix"), ne.sampLoc = e.getUniformLocation(ne._prog, "uSampler"), ne.centerScreenLoc = e.getUniformLocation(ne._prog, "uCenterScreen"), ne.centerWorldLoc = e.getUniformLocation(ne._prog, "uCenterWorld"), ne.sunLoc = e.getUniformLocation(ne._prog, "uSunPosition"), ne.minBrightnessLoc = e.getUniformLocation(ne._prog, "uMinBrightness"), ne.opacityLoc = e.getUniformLocation(ne._prog, "opacity"), ne.atmosphereColorLoc = e.getUniformLocation(ne._prog, "uAtmosphereColor"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), ne.initialized = !0;
        }, ne.use = function(t, e, n, a, s, l, g) {
          a == null && (a = di.getEmpty());
          var _ = t.gl;
          if (_ != null) {
            ne.initialized || ne.init(t), _.useProgram(ne._prog);
            var m = tt.multiplyMatrix(t.get_world(), t.get_view());
            if (_.uniform1f(ne.opacityLoc, s), _.uniform1f(ne.minBrightnessLoc, t.lighting ? ne.minLightingBrightness : 1), t.lighting ? _.uniform3f(ne.atmosphereColorLoc, ne.atmosphereColor.r / 255, ne.atmosphereColor.g / 255, ne.atmosphereColor.b / 255) : _.uniform3f(ne.atmosphereColorLoc, 0, 0, 0), _.uniform3f(ne.centerWorldLoc, g.x, g.y, g.z), g.lengthSq() > 1e-3) {
              var b = tt.multiplyMatrix(m, t.get_projection()), y = b.transform(g);
              _.uniform3f(ne.centerScreenLoc, y.x, y.y, y.z);
            } else
              _.uniform3f(ne.centerScreenLoc, 0, 0, 0);
            _.uniformMatrix4fv(ne.mvMatLoc, !1, m.floatArray()), _.uniformMatrix4fv(ne.projMatLoc, !1, t.get_projection().floatArray()), ne.sunPosition.normalize();
            var M = t.get_view().clone();
            M.set_m41(0), M.set_m42(0), M.set_m43(0), M.set_m44(1);
            var A = $._transformCoordinate(ne.sunPosition, M);
            A.normalize(), _.uniform3f(ne.sunLoc, -A.x, -A.y, -A.z), _.uniform1i(ne.sampLoc, 0), t.space || l ? _.disable(2929) : _.enable(2929), _.disableVertexAttribArray(0), _.disableVertexAttribArray(1), _.disableVertexAttribArray(2), _.disableVertexAttribArray(3), _.bindBuffer(34962, e), _.enableVertexAttribArray(ne.vertLoc), _.enableVertexAttribArray(ne.textureLoc), _.vertexAttribPointer(ne.vertLoc, 3, 5126, !1, 20, 0), _.vertexAttribPointer(ne.textureLoc, 2, 5126, !1, 20, 12), _.activeTexture(33984), _.bindTexture(3553, a), _.bindBuffer(34963, n), _.enable(3042), l ? _.blendFunc(770, 1) : _.blendFunc(770, 771);
          }
        };
        var ku = {};
        function zt() {
        }
        zt.init = function(t) {
          var e = t.gl, n = `#version 300 es\r
                precision mediump float;\r
                in vec2 vTextureCoord;\r
                in vec3 vNormal;\r
                in vec3 vCamVector;\r
                out vec4 fragmentColor;\r
\r
                uniform sampler2D uSampler;\r
                uniform sampler2D colorSampler;\r
                uniform float blank;\r
                uniform float bzero;\r
                uniform float bscale;\r
                uniform float min;\r
                uniform float max;\r
                uniform bool containsBlanks;\r
                uniform bool transparentBlack;\r
                uniform int scaleType;\r
                uniform float opacity;\r
                \r
                bool isNaN(float value) {\r
                    // See https://stackoverflow.com/questions/9446888/best-way-to-detect-nans-in-opengl-shaders\r
                    // PKGW also finds that we need \`value != value\` on his Dell laptop running\r
                    // Chrome on Linux.\r
                    return (value != value) || !(value < 0.0 || 0.0 < value || value == 0.0);\r
                }\r
\r
                void main(void) {\r
                    //FITS images are flipped on the y axis\r
                    vec4 color = texture(uSampler, vec2(vTextureCoord.x, 1.0 - vTextureCoord.y));\r
                    if(isNaN(color.r) || (containsBlanks && abs(blank - color.r) < 0.00000001)){\r
                        fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);\r
                    } else {\r
                        float physicalValue = (bzero + bscale * color.r - min) / (max - min);\r
                        if(transparentBlack && physicalValue <= 0.0){\r
                            fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);\r
                            return;\r
                        }\r
                            \r
                        physicalValue = clamp(physicalValue, 0.0, 1.0);\r
\r
                        switch(scaleType){\r
                            case 1:\r
                                physicalValue = log(physicalValue * 255.0 + 1.0 ) / log(256.0);\r
                                break;\r
                            case 2:\r
                                physicalValue = physicalValue * physicalValue;\r
                                break;\r
                            case 3:\r
                                physicalValue = sqrt(physicalValue);\r
                                break;\r
                        }\r
                        vec4 colorFromColorMapper = texture(colorSampler, vec2(physicalValue, 0.5));\r
                        fragmentColor = vec4(colorFromColorMapper.rgb, opacity);\r
                    }\r
                }\r
                `, a = `#version 300 es\r
                in vec3 aVertexPosition;\r
                in vec2 aTextureCoord;\r
                \r
                uniform mat4 uMVMatrix;\r
                uniform mat4 uPMatrix;\r
                uniform vec3 uCenterScreen;\r
                \r
                out vec2 vTextureCoord;\r
                \r
                void main(void) {\r
                    if(length(uCenterScreen) > 0.0000001) {\r
                        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);\r
                    } else {\r
                        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r
                    }\r
                    vTextureCoord = aTextureCoord;\r
                }\r
                `;
          zt._frag = e.createShader(35632), e.shaderSource(zt._frag, n), e.compileShader(zt._frag);
          var s = e.getShaderParameter(zt._frag, 35713);
          if (!s) {
            var l = e.getShaderInfoLog(zt._frag);
            console.log(l);
          }
          zt._vert = e.createShader(35633), e.shaderSource(zt._vert, a), e.compileShader(zt._vert);
          var g = e.getShaderParameter(zt._vert, 35713);
          if (!g) {
            var _ = e.getShaderInfoLog(zt._vert);
            console.log(_);
          }
          zt._prog = e.createProgram(), e.attachShader(zt._prog, zt._vert), e.attachShader(zt._prog, zt._frag), e.linkProgram(zt._prog), e.getProgramParameter(zt._prog, 35714), e.useProgram(zt._prog), zt.vertLoc = e.getAttribLocation(zt._prog, "aVertexPosition"), zt.textureLoc = e.getAttribLocation(zt._prog, "aTextureCoord"), zt.projMatLoc = e.getUniformLocation(zt._prog, "uPMatrix"), zt.mvMatLoc = e.getUniformLocation(zt._prog, "uMVMatrix"), zt.sampLoc = e.getUniformLocation(zt._prog, "uSampler"), zt.colorLoc = e.getUniformLocation(zt._prog, "colorSampler"), zt.centerScreenLoc = e.getUniformLocation(zt._prog, "uCenterScreen"), zt.blank = e.getUniformLocation(zt._prog, "blank"), zt.bzero = e.getUniformLocation(zt._prog, "bzero"), zt.bscale = e.getUniformLocation(zt._prog, "bscale"), zt.minLoc = e.getUniformLocation(zt._prog, "min"), zt.maxLoc = e.getUniformLocation(zt._prog, "max"), zt.transparentBlackLoc = e.getUniformLocation(zt._prog, "transparentBlack"), zt.containsBlanksLoc = e.getUniformLocation(zt._prog, "containsBlanks"), zt.scalingLocation = e.getUniformLocation(zt._prog, "scaleType"), zt.opacityLoc = e.getUniformLocation(zt._prog, "opacity"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), zt.initialized = !0;
        }, zt.use = function(t, e, n, a, s, l, g) {
          a == null && (a = di.getEmpty());
          var _ = t.gl;
          if (_ != null) {
            zt.initialized || zt.init(t), _.useProgram(zt._prog);
            var m = tt.multiplyMatrix(t.get_world(), t.get_view());
            if (_.uniform1f(zt.opacityLoc, s), _.uniformMatrix4fv(zt.mvMatLoc, !1, m.floatArray()), _.uniformMatrix4fv(zt.projMatLoc, !1, t.get_projection().floatArray()), g.lengthSq() > 1e-3) {
              var b = tt.multiplyMatrix(m, t.get_projection()), y = b.transform(g);
              _.uniform3f(zt.centerScreenLoc, y.x, y.y, y.z);
            } else
              _.uniform3f(zt.centerScreenLoc, 0, 0, 0);
            _.uniform1i(zt.sampLoc, 0), _.uniform1i(zt.colorLoc, 1), _.uniform1f(zt.blank, zt.blankValue), _.uniform1f(zt.bzero, zt.bZero), _.uniform1f(zt.bscale, zt.bScale), _.uniform1f(zt.minLoc, zt.min), _.uniform1f(zt.maxLoc, zt.max), _.uniform1i(zt.transparentBlackLoc, zt.transparentBlack), _.uniform1i(zt.containsBlanksLoc, zt.containsBlanks), _.uniform1i(zt.scalingLocation, zt.scaleType), t.space || l ? _.disable(2929) : _.enable(2929), _.disableVertexAttribArray(0), _.disableVertexAttribArray(1), _.disableVertexAttribArray(2), _.disableVertexAttribArray(3), _.bindBuffer(34962, e), _.enableVertexAttribArray(zt.vertLoc), _.enableVertexAttribArray(zt.textureLoc), _.vertexAttribPointer(zt.vertLoc, 3, 5126, !1, 20, 0), _.vertexAttribPointer(zt.textureLoc, 2, 5126, !1, 20, 12), _.activeTexture(33984), _.bindTexture(3553, a), _.bindBuffer(34963, n), _.enable(3042), l ? _.blendFunc(770, 1) : _.blendFunc(770, 771);
          }
        };
        var Iu = {};
        function Oe() {
        }
        Oe.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
                                                                                       
   void main(void) {                                                                   
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
     }                                                                            
                                                                                  
`;
          Oe._frag = e.createShader(35632), e.shaderSource(Oe._frag, n), e.compileShader(Oe._frag);
          var s = e.getShaderParameter(Oe._frag, 35713);
          s || e.getShaderInfoLog(Oe._frag), Oe._vert = e.createShader(35633), e.shaderSource(Oe._vert, a), e.compileShader(Oe._vert);
          var l = e.getShaderParameter(Oe._vert, 35713);
          l || e.getShaderInfoLog(Oe._vert), Oe._prog = e.createProgram(), e.attachShader(Oe._prog, Oe._vert), e.attachShader(Oe._prog, Oe._frag), e.linkProgram(Oe._prog), e.getProgramParameter(Oe._prog, 35714), e.useProgram(Oe._prog), Oe.vertLoc = e.getAttribLocation(Oe._prog, "aVertexPosition"), Oe.textureLoc = e.getAttribLocation(Oe._prog, "aTextureCoord"), Oe.projMatLoc = e.getUniformLocation(Oe._prog, "uPMatrix"), Oe.mvMatLoc = e.getUniformLocation(Oe._prog, "uMVMatrix"), Oe.sampLoc = e.getUniformLocation(Oe._prog, "uSampler"), Oe.opacityLoc = e.getUniformLocation(Oe._prog, "opacity"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), Oe.initialized = !0;
        }, Oe.use = function(t, e, n, a, s, l) {
          a == null && (a = di.getEmpty());
          var g = t.gl;
          if (g != null) {
            Oe.initialized || Oe.init(t), g.useProgram(Oe._prog);
            var _ = tt.multiplyMatrix(t.get_world(), t.get_view());
            g.uniform1f(Oe.opacityLoc, s), g.uniformMatrix4fv(Oe.mvMatLoc, !1, _.floatArray()), g.uniformMatrix4fv(Oe.projMatLoc, !1, t.get_projection().floatArray()), g.uniform1i(Oe.sampLoc, 0), t.space || l ? g.disable(2929) : g.enable(2929), g.disableVertexAttribArray(0), g.disableVertexAttribArray(1), g.disableVertexAttribArray(2), g.disableVertexAttribArray(3), g.bindBuffer(34962, e), g.enableVertexAttribArray(Oe.vertLoc), g.enableVertexAttribArray(Oe.textureLoc), g.vertexAttribPointer(Oe.vertLoc, 3, 5126, !1, 20, 0), g.vertexAttribPointer(Oe.textureLoc, 2, 5126, !1, 20, 12), g.activeTexture(33984), g.bindTexture(3553, a), g.bindBuffer(34963, n), g.enable(3042), l ? g.blendFunc(770, 1) : g.blendFunc(770, 771);
          }
        };
        var Pu = {};
        function He() {
        }
        He.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
                                                                                       
   void main(void) {                                                                   
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
     }                                                                            
                                                                                  
`;
          He._frag = e.createShader(35632), e.shaderSource(He._frag, n), e.compileShader(He._frag);
          var s = e.getShaderParameter(He._frag, 35713);
          s || e.getShaderInfoLog(He._frag), He._vert = e.createShader(35633), e.shaderSource(He._vert, a), e.compileShader(He._vert);
          var l = e.getShaderParameter(He._vert, 35713);
          l || e.getShaderInfoLog(He._vert), He._prog = e.createProgram(), e.attachShader(He._prog, He._vert), e.attachShader(He._prog, He._frag), e.linkProgram(He._prog), e.getProgramParameter(He._prog, 35714), e.useProgram(He._prog), He.vertLoc = e.getAttribLocation(He._prog, "aVertexPosition"), He.textureLoc = e.getAttribLocation(He._prog, "aTextureCoord"), He.projMatLoc = e.getUniformLocation(He._prog, "uPMatrix"), He.mvMatLoc = e.getUniformLocation(He._prog, "uMVMatrix"), He.sampLoc = e.getUniformLocation(He._prog, "uSampler"), He.opacityLoc = e.getUniformLocation(He._prog, "opacity"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), He.initialized = !0;
        }, He.use = function(t, e, n, a, s, l) {
          a == null && (a = di.getEmpty());
          var g = t.gl;
          if (g != null) {
            He.initialized || He.init(t), g.useProgram(He._prog);
            var _ = tt.multiplyMatrix(t.get_world(), t.get_view());
            g.uniform1f(He.opacityLoc, s), g.uniformMatrix4fv(He.mvMatLoc, !1, _.floatArray()), g.uniformMatrix4fv(He.projMatLoc, !1, t.get_projection().floatArray()), g.uniform1i(He.sampLoc, 0), t.space || l ? g.disable(2929) : g.enable(2929), g.disableVertexAttribArray(0), g.disableVertexAttribArray(1), g.disableVertexAttribArray(2), g.disableVertexAttribArray(3), g.bindBuffer(34962, e), g.enableVertexAttribArray(He.vertLoc), g.enableVertexAttribArray(He.textureLoc), g.vertexAttribPointer(He.vertLoc, 3, 5126, !1, 32, 0), g.vertexAttribPointer(He.textureLoc, 2, 5126, !1, 32, 24), g.activeTexture(33984), g.bindTexture(3553, a), g.bindBuffer(34963, n), g.enable(3042), l ? g.blendFunc(770, 1) : g.blendFunc(770, 771);
          }
        };
        var Eu = {};
        function Ve() {
        }
        Ve.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                                
                                                                                         
   varying vec2 vTextureCoord;                                                           
   varying lowp vec4 vColor;                                                             
   uniform sampler2D uSampler;                                                           
                                                                                         
   void main(void) {                                                                     
   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;  
   }                                                                                     
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
     attribute lowp vec4 aColor;                                                  
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec4 vColor;                                                         
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
         vColor = aColor;                                                         
     }                                                                            
                                                                                  
`;
          Ve._frag = e.createShader(35632), e.shaderSource(Ve._frag, n), e.compileShader(Ve._frag), e.getShaderParameter(Ve._frag, 35713), Ve._vert = e.createShader(35633), e.shaderSource(Ve._vert, a), e.compileShader(Ve._vert), e.getShaderParameter(Ve._vert, 35713), Ve._prog = e.createProgram(), e.attachShader(Ve._prog, Ve._vert), e.attachShader(Ve._prog, Ve._frag), e.linkProgram(Ve._prog), e.getProgramParameter(Ve._prog, 35714), e.useProgram(Ve._prog), Ve.vertLoc = e.getAttribLocation(Ve._prog, "aVertexPosition"), Ve.textureLoc = e.getAttribLocation(Ve._prog, "aTextureCoord"), Ve.colorLoc = e.getAttribLocation(Ve._prog, "aColor"), Ve.projMatLoc = e.getUniformLocation(Ve._prog, "uPMatrix"), Ve.mvMatLoc = e.getUniformLocation(Ve._prog, "uMVMatrix"), Ve.sampLoc = e.getUniformLocation(Ve._prog, "uSampler"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), Ve.initialized = !0;
        }, Ve.use = function(t, e, n) {
          n == null && (n = di.getEmpty());
          var a = t.gl;
          if (a != null) {
            Ve.initialized || Ve.init(t), a.useProgram(Ve._prog);
            var s = tt.multiplyMatrix(t.get_world(), t.get_view());
            a.uniformMatrix4fv(Ve.mvMatLoc, !1, s.floatArray()), a.uniformMatrix4fv(Ve.projMatLoc, !1, t.get_projection().floatArray()), a.uniform1i(Ve.sampLoc, 0), a.disable(2929), a.disableVertexAttribArray(0), a.disableVertexAttribArray(1), a.disableVertexAttribArray(2), a.disableVertexAttribArray(3), a.bindBuffer(34962, e), a.enableVertexAttribArray(Ve.vertLoc), a.enableVertexAttribArray(Ve.textureLoc), a.enableVertexAttribArray(Ve.colorLoc), a.vertexAttribPointer(Ve.vertLoc, 3, 5126, !1, 36, 0), a.vertexAttribPointer(Ve.colorLoc, 4, 5126, !1, 36, 12), a.vertexAttribPointer(Ve.textureLoc, 2, 5126, !1, 36, 28), a.activeTexture(33984), a.bindTexture(3553, n), a.bindBuffer(34963, null), a.enable(3042), a.blendFunc(770, 771);
          }
        };
        var Ru = {};
        function Ze() {
        }
        Ze.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                                
                                                                                         
   varying lowp vec4 vColor;                                                             
                                                                                         
   void main(void) {                                                                     
   gl_FragColor =  vColor;                                                               
   }                                                                                     
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute lowp vec4 aColor;                                                  
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec4 vColor;                                                         
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vColor = aColor;                                                         
     }                                                                            
                                                                                  
`;
          Ze._frag = e.createShader(35632), e.shaderSource(Ze._frag, n), e.compileShader(Ze._frag), e.getShaderParameter(Ze._frag, 35713), Ze._vert = e.createShader(35633), e.shaderSource(Ze._vert, a), e.compileShader(Ze._vert), e.getShaderParameter(Ze._vert, 35713), Ze._prog = e.createProgram(), e.attachShader(Ze._prog, Ze._vert), e.attachShader(Ze._prog, Ze._frag), e.linkProgram(Ze._prog), e.getProgramParameter(Ze._prog, 35714), e.useProgram(Ze._prog), Ze.vertLoc = e.getAttribLocation(Ze._prog, "aVertexPosition"), Ze.colorLoc = e.getAttribLocation(Ze._prog, "aColor"), Ze.projMatLoc = e.getUniformLocation(Ze._prog, "uPMatrix"), Ze.mvMatLoc = e.getUniformLocation(Ze._prog, "uMVMatrix"), e.disable(2929), e.enable(3042), e.blendFunc(770, 771), Ze.initialized = !0;
        }, Ze.use = function(t, e) {
          var n = t.gl;
          if (n != null) {
            Ze.initialized || Ze.init(t), n.useProgram(Ze._prog);
            var a = tt.multiplyMatrix(t.get_world(), t.get_view());
            n.uniformMatrix4fv(Ze.mvMatLoc, !1, a.floatArray()), n.uniformMatrix4fv(Ze.projMatLoc, !1, t.get_projection().floatArray()), n.uniform1i(Ze.sampLoc, 0), n.disable(2929), n.disableVertexAttribArray(0), n.disableVertexAttribArray(1), n.disableVertexAttribArray(2), n.disableVertexAttribArray(3), n.bindBuffer(34962, e), n.enableVertexAttribArray(Ze.vertLoc), n.enableVertexAttribArray(Ze.textureLoc), n.enableVertexAttribArray(Ze.colorLoc), n.vertexAttribPointer(Ze.vertLoc, 3, 5126, !1, 36, 0), n.vertexAttribPointer(Ze.colorLoc, 4, 5126, !1, 36, 12), n.bindBuffer(34963, null), n.enable(3042), n.blendFunc(770, 771);
          }
        };
        var $u = {};
        function Ke() {
        }
        Ke.init = function(t) {
          var e = t.gl, n = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
                                                                                       
   uniform sampler2D uSampler;                                                         
                                                                                       
   void main(void) {                                                                   
   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));         
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
     }                                                                            
                                                                                  
`;
          Ke._frag = e.createShader(35632), e.shaderSource(Ke._frag, n), e.compileShader(Ke._frag), e.getShaderParameter(Ke._frag, 35713), Ke._vert = e.createShader(35633), e.shaderSource(Ke._vert, a), e.compileShader(Ke._vert), e.getShaderParameter(Ke._vert, 35713), Ke._prog = e.createProgram(), e.attachShader(Ke._prog, Ke._vert), e.attachShader(Ke._prog, Ke._frag), e.linkProgram(Ke._prog), e.getProgramParameter(Ke._prog, 35714), e.useProgram(Ke._prog), Ke.vertLoc = e.getAttribLocation(Ke._prog, "aVertexPosition"), Ke.textureLoc = e.getAttribLocation(Ke._prog, "aTextureCoord"), Ke.projMatLoc = e.getUniformLocation(Ke._prog, "uPMatrix"), Ke.mvMatLoc = e.getUniformLocation(Ke._prog, "uMVMatrix"), Ke.sampLoc = e.getUniformLocation(Ke._prog, "uSampler"), G.uvMultiple = 1, G.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), Ke.initialized = !0;
        }, Ke.use = function(t, e, n) {
          n == null && (n = di.getEmpty());
          var a = t.gl;
          if (a != null) {
            Ke.initialized || Ke.init(t), a.useProgram(Ke._prog);
            var s = tt.multiplyMatrix(t.get_world(), t.get_view());
            a.uniformMatrix4fv(Ke.mvMatLoc, !1, s.floatArray()), a.uniformMatrix4fv(Ke.projMatLoc, !1, t.get_projection().floatArray()), a.uniform1i(Ke.sampLoc, 0), t.space ? a.disable(2929) : a.enable(2929), a.disableVertexAttribArray(0), a.disableVertexAttribArray(1), a.disableVertexAttribArray(2), a.disableVertexAttribArray(3), a.bindBuffer(34962, e), a.enableVertexAttribArray(Ke.vertLoc), a.enableVertexAttribArray(Ke.textureLoc), a.vertexAttribPointer(Ke.vertLoc, 3, 5126, !1, 20, 0), a.vertexAttribPointer(Ke.textureLoc, 2, 5126, !1, 20, 12), a.activeTexture(33984), a.bindTexture(3553, n), a.enable(3042), a.blendFunc(770, 771);
          }
        };
        var Du = {};
        function Kn() {
          this.vertCount = 0;
        }
        var Nu = {
          draw: function(t, e, n, a, s, l) {
            this.vertexBuffer == null ? this.create(e) : this.update(e), a == null ? (Ze.use(t, this.vertexBuffer), t.gl.drawArrays(s ? 5 : 4, 0, e.length)) : (Ve.use(t, this.vertexBuffer, a != null ? a.texture2d : null), t.gl.drawArrays(s ? 5 : 4, 0, e.length));
          },
          create: function(t) {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var e = new Float32Array(t.length * 9), n = e, a = 0, s = r.enumerate(t); s.moveNext(); ) {
              var l = s.current;
              n[a++] = l.position.x, n[a++] = l.position.y, n[a++] = l.position.z, n[a++] = l.color.r / 255, n[a++] = l.color.g / 255, n[a++] = l.color.b / 255, n[a++] = l.color.a / 255, n[a++] = l.tu, n[a++] = l.tv;
            }
            G.prepDevice.bufferData(34962, e, 35048);
          },
          update: function(t) {
            if (this.vertCount < t.length) {
              G.prepDevice.deleteBuffer(this.vertexBuffer), this.create(t);
              return;
            }
            G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var e = new Float32Array(t.length * 9), n = e, a = 0, s = r.enumerate(t); s.moveNext(); ) {
              var l = s.current;
              n[a++] = l.position.x, n[a++] = l.position.y, n[a++] = l.position.z, n[a++] = l.color.r / 255, n[a++] = l.color.g / 255, n[a++] = l.color.b / 255, n[a++] = l.color.a / 255, n[a++] = l.tu, n[a++] = l.tv;
            }
            G.prepDevice.bufferSubData(34962, 0, e);
          }
        };
        function da() {
        }
        da.tesselateSimplePoly = function(t) {
          var e = [], n = new da();
          return n.process(t, e), e;
        };
        var Fu = {
          _isLeftOfHalfSpace: function(t, e, n) {
            t.normalize(), e.normalize();
            var a = $.cross(t, e), s = $.dot(a, n);
            return s > 0;
          },
          _insideTriangle: function(t, e, n, a) {
            return !(!this._isLeftOfHalfSpace(t, e, a) || !this._isLeftOfHalfSpace(e, n, a) || !this._isLeftOfHalfSpace(n, t, a));
          },
          _canClipEar: function(t, e, n, a, s, l) {
            var g, _ = t[l[e]].copy(), m = t[l[n]].copy(), b = t[l[a]].copy(), y, M = $.subtractVectors(m, _);
            M.normalize();
            var A = $.subtractVectors(m, b);
            A.normalize();
            var R = $.cross(M, A), F = m.copy();
            if (F.normalize(), $.dot(R, F) > 0)
              return !1;
            for (g = 0; g < s; g++)
              if (!(g === e || g === n || g === a) && (y = t[l[g]].copy(), this._insideTriangle(_, m, b, y)))
                return !1;
            return !0;
          },
          process: function(t, e) {
            var n = t.length;
            if (t.length < 3)
              return !1;
            for (var a = new Array(t.length), s = 0; s < n; s++)
              a[s] = s;
            for (var l = n, g = 2 * l, _ = 0, m = l - 1; l > 2; ) {
              if (0 >= g--)
                return !1;
              var b = m;
              l <= b && (b = 0), m = b + 1, l <= m && (m = 0);
              var y = m + 1;
              if (l <= y && (y = 0), this._canClipEar(t, b, m, y, l, a)) {
                var M, A;
                for (e.push(a[b]), e.push(a[m]), e.push(a[y]), _++, M = m, A = m + 1; A < l; M++, A++)
                  a[M] = a[A];
                l--, g = 2 * l;
              }
            }
            return !0;
          }
        };
        function di() {
          this.imageElement = null, this.texture2d = null, this._downloading = !1, this._ready = !1, this._errored = !1, this.URL = "";
        }
        di.getEmpty = function() {
          return di.empty == null && (di.empty = G.prepDevice.createTexture(), G.prepDevice.bindTexture(3553, di.empty), G.prepDevice.texImage2D(3553, 0, 6408, 1, 1, 0, 6408, 5121, new Uint8Array([0, 0, 0, 0])), G.prepDevice.bindTexture(3553, null)), di.empty;
        }, di.fromUrl = function(t) {
          var e = new di();
          return e.load(t), e;
        }, di.isPowerOfTwo = function(t) {
          return !(t & t - 1);
        }, di.fitPowerOfTwo = function(t) {
          t--;
          for (var e = 1; e < 32; e <<= 1)
            t = t | t >> e;
          return t + 1;
        };
        var Bu = {
          cleanUp: function() {
            this.imageElement = null, G.prepDevice.deleteTexture(this.texture2d);
          },
          dispose: function() {
            this.cleanUp();
          },
          load: function(t) {
            var e = this;
            if (this.URL = t, !(typeof document > "u") && !this._downloading) {
              this._downloading = !0, this.imageElement = document.createElement("img");
              var n = this.imageElement;
              this.imageElement.addEventListener("load", function(a) {
                e._ready = !0, e._downloading = !1, e._errored = !1, e.makeTexture();
              }, !1), this.imageElement.addEventListener("error", function(a) {
                if (!e.imageElement.hasAttribute("proxyattempt")) {
                  e.imageElement.setAttribute("proxyattempt", !0);
                  var s = ze.singleton.activateProxy(e.URL);
                  if (s != null) {
                    e.imageElement.src = s;
                    return;
                  }
                }
                e._downloading = !1, e._ready = !1, e._errored = !0;
              }, !1), n.crossOrigin = "anonymous", this.imageElement.src = this.URL;
            }
          },
          makeTexture: function() {
            if (G.prepDevice != null)
              try {
                this.texture2d = G.prepDevice.createTexture(), G.prepDevice.bindTexture(3553, this.texture2d);
                var t = this.imageElement;
                if ((!di.isPowerOfTwo(this.imageElement.height) | !di.isPowerOfTwo(this.imageElement.width)) === 1) {
                  var e = document.createElement("canvas");
                  e.height = di.fitPowerOfTwo(t.height), e.width = di.fitPowerOfTwo(t.width);
                  var n = e.getContext("2d");
                  n.drawImage(t, 0, 0, e.width, e.height), t = e;
                }
                G.prepDevice.texParameteri(3553, 10242, 33071), G.prepDevice.texParameteri(3553, 10243, 33071), G.prepDevice.texImage2D(3553, 0, 6408, 6408, 5121, t), G.prepDevice.texParameteri(3553, 10241, 9985), G.prepDevice.generateMipmap(3553), G.prepDevice.bindTexture(3553, null);
              } catch {
                this._errored = !0;
              }
          }
        };
        function W() {
        }
        W._createGalaxyImage = function(t) {
          W._milkyWayImage == null && (W._milkyWayImage = D.loadPlanetTexture(ze.singleton.engineAssetUrl("milkywaybar.jpg")));
          var e = 50, n, a, s = 0, l = 64, g = -64, _ = -64, m = 64;
          W._galaxyImageVertexBuffer = new wa((e + 1) * (e + 1));
          var b = W._galaxyImageVertexBuffer.lock(), y, M, A = g - l, R = m - _, F = 608e5, O = U.meanObliquityOfEcliptic(Q.get_jNow()) / 180 * Math.PI, B, H = 1 / e, K = 1 / e;
          for (M = 0; M <= e; M++)
            for (M !== e ? n = g - K * A * M : n = l, y = 0; y <= e; y++)
              y !== e ? a = _ + H * R * y : a = m, s = M * (e + 1) + y, B = $.create(a * F, 0, (n - 28) * F), B.rotateY(213 / 180 * Math.PI), B.rotateZ(-62.87175 / 180 * Math.PI), B.rotateY(-192.8595083 / 180 * Math.PI), B.rotateX(O), b[s] = Ht.createPosRaw(B, 1 - y * H, M * K);
          W._galaxyImageVertexBuffer.unlock(), W._galaxyImageTriangleCount = e * e * 2;
          var J = new Uint16Array(e * e * 6), it = J;
          for (M = 0; M < e; M++)
            for (y = 0; y < e; y++)
              s = M * e * 6 + 6 * y, it[s] = M * (e + 1) + y, it[s + 2] = (M + 1) * (e + 1) + y, it[s + 1] = M * (e + 1) + (y + 1), it[s + 3] = M * (e + 1) + (y + 1), it[s + 5] = (M + 1) * (e + 1) + y, it[s + 4] = (M + 1) * (e + 1) + (y + 1);
          W._galaxyImageIndexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, W._galaxyImageIndexBuffer), G.prepDevice.bufferData(34963, J, 35044);
        }, W.drawGalaxyImage = function(t, e) {
          W._galaxyImageIndexBuffer == null && W._createGalaxyImage(t), t.viewCamera.zoom, Oe.use(t, W._galaxyImageVertexBuffer.vertexBuffer, W._galaxyImageIndexBuffer, W._milkyWayImage.texture2d, e, !0), t.gl.drawElements(4, W._galaxyImageTriangleCount * 3, 5123, 0);
        }, W.drawStars3D = function(t, e) {
          var n = t.viewCamera.zoom, a = Math.max(Math.min(255, (Math.log(n) - 15.5) * 40.8), 0), s = Math.min(255, Math.max(0, r.truncate(a)));
          s > 254 || (s = (255 - s) * e, W._starSprites == null && W.initStarVertexBuffer(t), W._starSprites != null && W._starSprites.draw(t, s / 255, !1));
        }, W.initStarVertexBuffer = function(t) {
          if (!W._starsDownloading && !Z.singleton.freestandingMode && (W.getStarFile(ze.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=hipparcos")), W._starsDownloading = !0), W._starSprites == null && W._starCount > 0) {
            var e = U.meanObliquityOfEcliptic(Q.get_jNow()) / 180 * Math.PI, n = W._stars.length;
            W._starCount = n, W._starSprites = new Xr(t), W._starSprites.depthBuffered = !1, W._starSprites.showFarSide = !0;
            for (var a = r.enumerate(W._stars); a.moveNext(); ) {
              var s = a.current, l = U.raDecTo3dAu(s.RA, s.dec, s.distance);
              l.rotateX(e), s.position = l;
              var g = 12e5 / Math.pow(1.6, s.absoluteMagnitude);
              W._starSprites.addPoint(l, s.col, new ni(0, 1), g * 100);
            }
          }
        }, W.initializeStarDB = function(t) {
          if (W._stars == null && W._stars == null) {
            W._stars = [];
            for (var e = t.split(`\r
`), n, a = r.enumerate(e); a.moveNext(); ) {
              var s = a.current, l = s;
              n = new Os(l), n.magnitude < W._limitingMagnitude && n.par > 1e-3 && (W._stars.push(n), W._hipparcosIndex[n.id] = n);
            }
            W._starCount = W._stars.length;
          }
        }, W.getStarFile = function(t) {
          W._webFileStar = new _r(t), W._webFileStar.onStateChange = W.starFileStateChange, W._webFileStar.send();
        }, W.starFileStateChange = function() {
          W._webFileStar.get_state() === 2 ? alert(W._webFileStar.get_message()) : W._webFileStar.get_state() === 1 && W.initializeStarDB(W._webFileStar.getText());
        }, W.getGalaxyFile = function(t) {
          W._webFileGalaxy = new _r(t), W._webFileGalaxy.responseType = "blob", W._webFileGalaxy.onStateChange = W.galaxyFileStateChange, W._webFileGalaxy.send();
        }, W.galaxyFileStateChange = function() {
          if (W._webFileGalaxy.get_state() === 2)
            alert(W._webFileGalaxy.get_message());
          else if (W._webFileGalaxy.get_state() === 1) {
            var t = W._webFileGalaxy.getBlob(), e = new FileReader();
            e.onloadend = function(n) {
              var a = new ia(new Uint8Array(e.result));
              W.initializeCosmos(a);
            }, e.readAsArrayBuffer(t);
          }
        }, W.drawCosmos3D = function(t, e) {
          t.gl;
          var n = t.viewCamera.zoom, a = (Math.log(Math.max(1, n)) / Math.log(4) - 15.5) * 90, s = Math.min(255, Math.max(0, r.truncate(a)));
          if (!(s < 3)) {
            if (W.initCosmosVertexBuffer(), W._galaxyTextures == null && W._largeSet) {
              W._galaxyTextures = new Array(256);
              for (var l = 0; l < 256; l++) {
                for (var g = l.toString(); g.length < 4; )
                  g = "0" + g;
                var _ = r.format(ze.singleton.engineAssetUrl("galimg/gal_{0}.jpg"), g);
                W._galaxyTextures[l] = D.loadPlanetTexture(_);
              }
            }
            if (W._cosmosReady)
              for (var m = 256, l = 0; l < m; l++)
                W._cosmosSprites[l].drawTextured(t, W._galaxyTextures[l].texture2d, s * e / 255);
          }
        }, W.initCosmosVertexBuffer = function() {
          W._cosmosSprites == null && W._downloadCosmosFile();
        }, W._createCosmosVertexBuffer = function(t) {
          G.prepDevice;
          var e = 256;
          if (W._cosmosSprites != null)
            for (var n = 0; n < e; n++)
              W._cosmosSprites[n] != null && (W._cosmosSprites[n] = null);
          W._cosmosSprites = null;
          var a = U.meanObliquityOfEcliptic(Q.get_jNow()) / 180 * Math.PI;
          W._cosmosSprites = new Array(e);
          for (var s = new Array(e), l = 0; l < e; l++)
            W._galaxyVertexCounts[l], W._cosmosSprites[l] = new Xr(t), W._cosmosSprites[l].depthBuffered = !1, W._cosmosSprites[l].showFarSide = !0, s[l] = 0;
          for (var g = r.enumerate(W._cosmos); g.moveNext(); ) {
            var _ = g.current, m = _.eTypeBucket;
            s[m];
            var b = U.raDecTo3dAu(_.RA, _.dec, _.distance * 206264.806 * 1e6 / 0.73);
            b.rotateX(a), _.position = b, W._cosmosSprites[m].addPoint(b, Pt.get_white(), new ni(0, 1), 1e9 * _.size * 100), s[m]++;
          }
          W._cosmosReady = !0;
        }, W.initializeCosmos = function(t) {
          if (W._cosmos == null) {
            if (W._galaxyVertexCounts = new Array(W._largeSet ? 256 : 20), W._cosmos == null) {
              W._cosmos = [];
              var e;
              try {
                for (var n = 0; t.get_position() < t.get_length(); )
                  e = new ma(t), W._cosmos.push(e), W._galaxyVertexCounts[e.eTypeBucket]++, n++;
              } catch {
              }
              t.close();
            }
            W._createCosmosVertexBuffer(Z.singleton.renderContext);
          }
        }, W._downloadCosmosFile = function() {
          return !W._downloadingGalaxy && !Z.singleton.freestandingMode && (W.getGalaxyFile(ze.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=cosmosnewbin")), W._downloadingGalaxy = !0), !1;
        }, W.drawEquitorialGrid = function(t, e, n) {
          if (W._equLineList == null) {
            W._equLineList = new an(), W._equLineList.set_depthBuffered(!1);
            for (var a = 0; a < 24; a++)
              for (var s = -80; s < 80; s += 2)
                W._equLineList.addLine(U.raDecTo3dAu(a, s, 1), U.raDecTo3dAu(a, s + 2, 1));
            for (var s = -80; s <= 80; s += 10)
              for (var a = 0; a < 23.8; a += 0.2)
                W._equLineList.addLine(U.raDecTo3dAu(a, s, 1), U.raDecTo3dAu(a + 0.2, s, 1));
            for (var l = 0, g = 0; g < 24; g += 0.25) {
              var s = 0.5;
              switch (l % 4) {
                case 0:
                  l++;
                  continue;
                case 3:
                case 1:
                  s = 0.25;
                  break;
              }
              l++, W._equLineList.addLine(U.raDecTo3dAu(g, s, 1), U.raDecTo3dAu(g, -s, 1));
            }
            l = 0;
            for (var g = 0; g < 24; g += 3) {
              l = 0;
              for (var s = -80; s <= 80; s += 1) {
                var _ = 0.016666666666666666;
                switch (l % 10) {
                  case 0:
                    l++;
                    continue;
                  case 5:
                    _ = 0.5 / 15;
                    break;
                }
                l++, W._equLineList.addLine(U.raDecTo3dAu(g + _, s, 1), U.raDecTo3dAu(g - _, s, 1));
              }
            }
          }
          return W._equLineList.drawLines(t, e, n), !0;
        }, W.drawEquitorialGridText = function(t, e, n) {
          return W._makeEquitorialGridText(), W._equTextBatch.draw(t, e, n), !0;
        }, W._makeEquitorialGridText = function() {
          if (W._equTextBatch == null) {
            W._equTextBatch = new vn(30);
            for (var t = 0; t < 24; t++) {
              var e = t.toString() + " hr";
              t < 10 && (e = "  " + t.toString() + " hr"), W._equTextBatch.add(new nr(U.raDecTo3dAu(t + 5e-3, 0.4, 1), U.raDecTo3dAu(t + 5e-3, 0.5, 1), e, 45, 18e-5));
            }
            for (var t = 0; t < 24; t += 3)
              for (var n = -80; n <= 80; n += 10)
                if (n) {
                  var e = n.toString();
                  n > 0 ? (e = "  +" + n.toString(), W._equTextBatch.add(new nr(U.raDecTo3dAu(t, n - 0.4, 1), U.raDecTo3dAu(t, n - 0.3, 1), e, 45, 18e-5))) : (e = "  - " + e.substr(1), W._equTextBatch.add(new nr(U.raDecTo3dAu(t, n + 0.4, 1), U.raDecTo3dAu(t, n + 0.5, 1), e, 45, 18e-5)));
                }
          }
        }, W.drawEcliptic = function(t, e, n) {
          var a = Q.get_now().getUTCFullYear();
          if (W._eclipticOverviewLineList == null || a !== W._eclipticYear) {
            W._eclipticOverviewLineList != null && (W._eclipticOverviewLineList.clear(), W._eclipticOverviewLineList = null), W._eclipticYear = a;
            var s = U.meanObliquityOfEcliptic(Q.get_jNow()), l = tt._rotationX(-s / 360 * (Math.PI * 2)), g = 365.25;
            ui.isLeap(a, !0) ? (W._monthDays[1] = 29, g = 366) : (W._monthDays[1] = 28, g = 365), 2 * r.truncate(g), W._eclipticCount = r.truncate(g);
            var _ = Q.utcToJulian(new Date(a, 0, 1, 12, 0, 0)), m = 0;
            W._eclipticOverviewLineList = new an(), W._eclipticOverviewLineList.set_depthBuffered(!1);
            for (var b = 0; b < 12; b++) {
              for (var y = r.truncate(W._monthDays[b]), M = 0; M < y; M++) {
                var A = D.getPlanetLocationJD("Sun", _), R = x.eq2Ec(A.RA, A.dec, s);
                m = R.x;
                var F = 5e-3;
                M || (F = 0.01);
                var O = m;
                W._eclipticOverviewLineList.addLine($._transformCoordinate($.create(Math.cos(O * Math.PI * 2 / 360), F, Math.sin(O * Math.PI * 2 / 360)), l), $._transformCoordinate($.create(Math.cos(O * Math.PI * 2 / 360), -F, Math.sin(O * Math.PI * 2 / 360)), l)), _ += 1;
              }
              m += W._monthDays[b];
            }
          }
          return W._eclipticOverviewLineList.drawLines(t, e, n), !0;
        }, W.drawEclipticText = function(t, e, n) {
          return W._makeEclipticText(), W._eclipOvTextBatch.draw(t, e, n), !0;
        }, W._makeEclipticText = function() {
          var t = Q.get_now().getUTCFullYear();
          if (W._eclipOvTextBatch == null) {
            W._eclipOvTextBatch = new vn(80), W._eclipticTextYear = t;
            var e = U.meanObliquityOfEcliptic(Q.get_jNow()), n = tt._rotationX(-e / 360 * (Math.PI * 2)), a = 365.25;
            ui.isLeap(t, !0) ? (W._monthDays[1] = 29, a = 366) : (W._monthDays[1] = 28, a = 365), 2 * r.truncate(a), W._eclipticCount = r.truncate(a);
            for (var s = Q.utcToJulian(new Date(t, 0, 1, 12, 0, 0)), l = 0, g = 0; g < 12; g++) {
              for (var _ = r.truncate(W._monthDays[g]), m = 0; m < _; m++) {
                var b = D.getPlanetLocationJD("Sun", s), y = x.eq2Ec(b.RA, b.dec, e);
                l = y.x;
                var M = l;
                if (m === Math.floor(_ / 2)) {
                  var A = $._transformCoordinate($.create(Math.cos(M * Math.PI * 2 / 360), 0.025, Math.sin(M * Math.PI * 2 / 360)), n), R = $._transformCoordinate($.create(Math.cos(M * Math.PI * 2 / 360), 0.045, Math.sin(M * Math.PI * 2 / 360)), n);
                  R.subtract(A), R.normalize(), W._eclipOvTextBatch.add(new nr(A, R, W._monthNames[g], 80, 159375e-9));
                }
                s += 1;
              }
              l += W._monthDays[g];
            }
          }
        }, W.drawPrecessionChart = function(t, e, n) {
          return W._makePrecessionChart(), W._precTextBatch.draw(t, e, n), W._precLineList.drawLines(t, e, n), !0;
        }, W._makePrecessionChart = function() {
          var t = U.meanObliquityOfEcliptic(Q.get_jNow()), e = tt._rotationX(t / 360 * (Math.PI * 2));
          if (Pt.get_white(), W._precLineList == null) {
            W._precLineList = new an(), W._precLineList.set_depthBuffered(!1);
            for (var n = 0; n < 360; n++) {
              var a = 90 - t;
              W._precLineList.addLine($._transformCoordinate(U.raDecTo3dAu(n / 15, a, 1), e), $._transformCoordinate(U.raDecTo3dAu((n + 1) / 15, a, 1), e));
            }
            for (var n = -12e3; n < 13e3; n += 2e3) {
              var a = 90 - t, s = -((n - 2e3) / 25772 * 24) - 6;
              W._precLineList.addLine($._transformCoordinate(U.raDecTo3dAu(s, a - 0.5, 1), e), $._transformCoordinate(U.raDecTo3dAu(s, a + 0.5, 1), e));
            }
          }
          if (W._precTextBatch == null) {
            W._precTextBatch = new vn(50);
            for (var n = -12e3; n < 13e3; n += 2e3) {
              var a = 90 - t + 3, s = -((n - 2e3) / 25772 * 24) - 6, l = n.toString();
              n ? n < 0 ? l = "  " + Math.abs(n).toString() + " BCE" : l = Math.abs(n).toString() + " CE" : (a = 90 - t + 2, l = "1 CE"), l.length === 9 && (l = "   " + l), W._precTextBatch.add(new nr($._transformCoordinate(U.raDecTo3dAu(s, a, 1), e), $._transformCoordinate(U.raDecTo3dAu(s + 0.01, a, 1), e), l, 75, 15e-5));
            }
          }
        }, W.drawAltAzGrid = function(t, e, n) {
          var a = new U(0, 0), s = U.horizonToEquitorial(a, Q.get_location(), Q.get_now()), l = -((s.get_RA() + 6) / 24 * (Math.PI * 2)), g = -(s.get_dec() / 360 * (Math.PI * 2));
          U.formatDMS(s.get_RA());
          var _ = tt._rotationY(-l);
          if (_._multiply(tt._rotationX(g)), _.invert(), W._altAzLineList == null) {
            W._altAzLineList = new an(), W._altAzLineList.set_depthBuffered(!1);
            for (var m = 0; m < 360; m += 10)
              for (var b = -80; b < 80; b += 2)
                W._altAzLineList.addLine(U.raDecTo3dAu(m / 15, b, 1), U.raDecTo3dAu(m / 15, b + 2, 1));
            for (var b = -80; b <= 80; b += 10)
              for (var m = 0; m < 360; m += 5)
                W._altAzLineList.addLine(U.raDecTo3dAu(m / 15, b, 1), U.raDecTo3dAu((m + 5) / 15, b, 1));
            for (var y = 0, m = 0; m < 360; m += 1) {
              var b = 0.25;
              switch (y % 10) {
                case 0:
                  y++;
                  continue;
                case 5:
                  b = 0.5;
                  break;
              }
              y++, W._altAzLineList.addLine(U.raDecTo3dAu(m / 15, b, 1), U.raDecTo3dAu(m / 15, -b, 1));
            }
            y = 0;
            for (var m = 0; m < 360; m += 90) {
              y = 0;
              for (var b = -80; b <= 80; b += 1) {
                var M = 0.25;
                switch (y % 10) {
                  case 0:
                    y++;
                    continue;
                  case 5:
                    M = 0.5;
                    break;
                }
                y++, W._altAzLineList.addLine(U.raDecTo3dAu((m + M) / 15, b, 1), U.raDecTo3dAu((m - M) / 15, b, 1));
              }
            }
          }
          var A = t.get_world().clone(), R = t.get_worldBase().clone();
          return t.set_worldBase(tt.multiplyMatrix(_, t.get_world())), t.set_world(t.get_worldBase().clone()), t.makeFrustum(), W._altAzLineList.viewTransform = tt.invertMatrix(_), W._altAzLineList.drawLines(t, e, n), t.set_worldBase(R), t.set_world(A), t.makeFrustum(), !0;
        }, W.drawAltAzGridText = function(t, e, n) {
          var a = new U(0, 0), s = U.horizonToEquitorial(a, Q.get_location(), Q.get_now()), l = -((s.get_RA() - 6) / 24 * (Math.PI * 2)), g = -(s.get_dec() / 360 * (Math.PI * 2));
          U.formatDMS(s.get_RA());
          var _ = tt._rotationY(-l - Math.PI);
          _._multiply(tt._rotationX(g)), _.invert(), W._makeAltAzGridText();
          var m = t.get_world().clone(), b = t.get_worldBase().clone();
          return t.set_worldBase(tt.multiplyMatrix(_, t.get_world())), t.set_world(t.get_worldBase().clone()), t.makeFrustum(), W._altAzTextBatch.viewTransform = tt.invertMatrix(_), W._altAzTextBatch.draw(t, e, n), t.set_worldBase(b), t.set_world(m), t.makeFrustum(), !0;
        }, W._makeAltAzGridText = function() {
          if (Pt.get_white(), W._altAzTextBatch == null) {
            W._altAzTextBatch = new vn(30);
            for (var t = 0; t < 360; t += 10) {
              var e = "       " + t.toString();
              t < 10 ? e = "   " + t.toString() : t < 100 && (e = "     " + t.toString());
              var n = 360 - t;
              W._altAzTextBatch.add(new nr(U.raDecTo3dAu(n / 15 - 6, 0.4, 1), U.raDecTo3dAu(n / 15 - 6, 0.5, 1), e, 75, 18e-5));
            }
            for (var t = 0; t < 360; t += 90)
              for (var a = -80; a <= 80; a += 10)
                if (a) {
                  var e = a.toString();
                  a > 0 ? (e = "  +" + a.toString(), W._altAzTextBatch.add(new nr(U.raDecTo3dAu(t / 15, a - 0.4, 1), U.raDecTo3dAu(t / 15, a - 0.3, 1), e, 75, 18e-5))) : (e = "  - " + e.substr(1), W._altAzTextBatch.add(new nr(U.raDecTo3dAu(t / 15, a + 0.4, 1), U.raDecTo3dAu(t / 15, a + 0.5, 1), e, 75, 18e-5)));
                }
          }
        }, W.drawEclipticGrid = function(t, e, n) {
          if (W._eclipticLineList == null) {
            W._eclipticLineList = new an(), W._eclipticLineList.set_depthBuffered(!1);
            for (var a = U.meanObliquityOfEcliptic(2451545), s = tt._rotationX(-a / 360 * (Math.PI * 2)), l = 0; l < 360; l += 10)
              for (var g = -80; g < 80; g += 2)
                W._eclipticLineList.addLine($._transformCoordinate(U.raDecTo3dAu(l / 15, g, 1), s), $._transformCoordinate(U.raDecTo3dAu(l / 15, g + 2, 1), s));
            for (var g = -80; g <= 80; g += 10)
              for (var l = 0; l < 360; l += 5)
                W._eclipticLineList.addLine($._transformCoordinate(U.raDecTo3dAu(l / 15, g, 1), s), $._transformCoordinate(U.raDecTo3dAu((l + 5) / 15, g, 1), s));
            for (var _ = 0, l = 0; l < 360; l += 1) {
              var g = 0.25;
              switch (_ % 10) {
                case 0:
                  _++;
                  continue;
                case 5:
                  g = 0.5;
                  break;
              }
              _++, W._eclipticLineList.addLine($._transformCoordinate(U.raDecTo3dAu(l / 15, g, 1), s), $._transformCoordinate(U.raDecTo3dAu(l / 15, -g, 1), s));
            }
            _ = 0;
            for (var l = 0; l < 360; l += 90) {
              _ = 0;
              for (var g = -80; g <= 80; g += 1) {
                var m = 0.25;
                switch (_ % 10) {
                  case 0:
                    _++;
                    continue;
                  case 5:
                    m = 0.5;
                    break;
                }
                _++, W._eclipticLineList.addLine($._transformCoordinate(U.raDecTo3dAu((l + m) / 15, g, 1), s), $._transformCoordinate(U.raDecTo3dAu((l - m) / 15, g, 1), s));
              }
            }
          }
          return W._eclipticLineList.drawLines(t, e, n), !0;
        }, W.drawEclipticGridText = function(t, e, n) {
          return W._makeEclipticGridText(), W._eclipticTextBatch.draw(t, e, n), !0;
        }, W._makeEclipticGridText = function() {
          Pt.get_white();
          var t = U.meanObliquityOfEcliptic(Q.get_jNow()), e = tt._rotationX(-t / 360 * (Math.PI * 2));
          if (W._eclipticTextBatch == null) {
            W._eclipticTextBatch = new vn(30);
            for (var n = 0; n < 360; n += 10) {
              var a = "       " + n.toString();
              n < 10 ? a = "   " + n.toString() : n < 100 && (a = "     " + n.toString()), W._eclipticTextBatch.add(new nr($._transformCoordinate(U.raDecTo3dAu(n / 15, 0.4, 1), e), $._transformCoordinate(U.raDecTo3dAu(n / 15, 0.5, 1), e), a, 75, 18e-5));
            }
            for (var n = 0; n < 360; n += 90)
              for (var s = -80; s <= 80; s += 10)
                if (s) {
                  var a = s.toString();
                  s > 0 ? (a = "  +" + s.toString(), W._eclipticTextBatch.add(new nr($._transformCoordinate(U.raDecTo3dAu(n / 15, s - 0.4, 1), e), $._transformCoordinate(U.raDecTo3dAu(n / 15, s - 0.3, 1), e), a, 75, 18e-5))) : (a = "  - " + a.substr(1), W._eclipticTextBatch.add(new nr($._transformCoordinate(U.raDecTo3dAu(n / 15, s + 0.4, 1), e), $._transformCoordinate(U.raDecTo3dAu(n / 15, s + 0.5, 1), e), a, 75, 18e-5)));
                }
          }
        }, W.drawGalacticGrid = function(t, e, n) {
          if (W._galLineList == null) {
            W._galLineList = new an(), W._galLineList.set_depthBuffered(!1);
            for (var a = 0; a < 360; a += 10)
              for (var s = -80; s < 80; s += 2)
                W._galLineList.addLine(U.galacticTo3dDouble(a, s), U.galacticTo3dDouble(a, s + 2));
            for (var s = -80; s <= 80; s += 10)
              for (var a = 0; a < 360; a += 5)
                W._galLineList.addLine(U.galacticTo3dDouble(a, s), U.galacticTo3dDouble(a + 5, s));
            for (var l = 0, a = 0; a < 360; a += 1) {
              var s = 0.25;
              switch (l % 10) {
                case 0:
                  l++;
                  continue;
                case 5:
                  s = 0.5;
                  break;
              }
              l++, W._galLineList.addLine(U.galacticTo3dDouble(a, s), U.galacticTo3dDouble(a, -s));
            }
            l = 0;
            for (var a = 0; a < 360; a += 90) {
              l = 0;
              for (var s = -80; s <= 80; s += 1) {
                var g = 0.25;
                switch (l % 10) {
                  case 0:
                    l++;
                    continue;
                  case 5:
                    g = 0.5;
                    break;
                }
                l++, W._galLineList.addLine(U.galacticTo3dDouble(a + g, s), U.galacticTo3dDouble(a - g, s));
              }
            }
          }
          return W._galLineList.drawLines(t, e, n), !0;
        }, W.drawGalacticGridText = function(t, e, n) {
          return W._makeGalacticGridText(), W._galTextBatch.draw(t, e, n), !0;
        }, W._makeGalacticGridText = function() {
          if (W._galTextBatch == null) {
            W._galTextBatch = new vn(30);
            for (var t = 0; t < 360; t += 10) {
              var e = "       " + t.toString();
              t < 10 ? e = "   " + t.toString() : t < 100 && (e = "     " + t.toString()), W._galTextBatch.add(new nr(U.galacticTo3dDouble(t, 0.4), U.galacticTo3dDouble(t, 0.5), e, 75, 18e-5));
            }
            for (var t = 0; t < 360; t += 90)
              for (var n = -80; n <= 80; n += 10)
                if (n) {
                  var e = n.toString();
                  n > 0 ? (e = "  +" + n.toString(), W._galTextBatch.add(new nr(U.galacticTo3dDouble(t, n - 0.4), U.galacticTo3dDouble(t, n - 0.3), e, 75, 18e-5))) : (e = "  - " + e.substr(1), W._galTextBatch.add(new nr(U.galacticTo3dDouble(t, n + 0.4), U.galacticTo3dDouble(t, n + 0.5), e, 75, 18e-5)));
                }
          }
        }, W.drawPlanetGrid = function(t, e, n) {
          if (W._planetLineList == null) {
            W._planetLineList = new an(), W._planetLineList.set_depthBuffered(!0);
            for (var a = 0; a < 360; a += 10)
              for (var s = -80; s < 80; s += 2)
                W._planetLineList.addLine(U.geoTo3dDouble(s, a), U.geoTo3dDouble(s + 2, a));
            for (var s = -80; s <= 80; s += 10)
              for (var l = 0; l < 360; l += 5)
                W._planetLineList.addLine(U.geoTo3dDouble(s, l), U.geoTo3dDouble(s, l + 5));
            for (var g = 0, a = 0; a < 360; a += 1) {
              var s = 0.25;
              switch (g % 10) {
                case 0:
                  g++;
                  continue;
                case 5:
                  s = 0.5;
                  break;
              }
              g++, W._planetLineList.addLine(U.geoTo3dDouble(s, a), U.geoTo3dDouble(-s, a));
            }
            g = 0;
            for (var a = 0; a < 360; a += 90) {
              g = 0;
              for (var _ = -80; _ <= 80; _ += 1) {
                var m = 0.25;
                switch (g % 10) {
                  case 0:
                    g++;
                    continue;
                  case 5:
                    m = 0.5;
                    break;
                }
                g++, W._planetLineList.addLine(U.geoTo3dDouble(_, a + m), U.geoTo3dDouble(_, a - m));
              }
            }
          }
          return W._planetLineList.aaFix = !1, W._planetLineList.set_depthBuffered(!0), W._planetLineList.sky = !1, W._planetLineList.drawLines(t, e, n), !0;
        }, W.drawPlanetGridText = function(t, e, n) {
          return W._makePlanetGridText(), W._planetTextBatch.draw(t, e, n), !0;
        }, W._makePlanetGridText = function() {
          if (W._planetTextBatch == null) {
            W._planetTextBatch = new vn(80);
            for (var t = -180; t < 180; t += 10) {
              var e = "       " + t.toString();
              t < 10 ? e = "   " + t.toString() : t < 100 && (e = "     " + t.toString()), W._planetTextBatch.add(new nr(U.geoTo3dDouble(0.4, t), U.geoTo3dDouble(0.5, t), e, -80, 6e-5));
            }
            for (var t = 0; t < 360; t += 90)
              for (var n = -80; n <= 80; n += 10)
                if (n) {
                  var e = n.toString();
                  n > 0 ? (e = "  +" + n.toString(), W._planetTextBatch.add(new nr(U.geoTo3dDouble(n - 0.4, t), U.geoTo3dDouble(n - 0.3, t), e, -80, 6e-5))) : (e = "  - " + e.substring(1), W._planetTextBatch.add(new nr(U.geoTo3dDouble(n + 0.4, t), U.geoTo3dDouble(n + 0.5, t), e, -80, 6e-5)));
                }
          }
        };
        var zu = {};
        function Mi() {
          this._projection = 0, this._imageSetID = 0, this._baseTileDegrees = 0, this._widthFactor = 1, this.demUrl = "", this._levels = 0, this._mercator = !1, this._bottomsUp = !1, this._baseLevel = 1, this._quadTreeTileMap = "0123", this._centerX = 0, this._centerY = 0, this._rotation = 0, this._meanRadius = 0, this._dataSetType = 0, this._bandPass = 3, this._altUrl = "", this._singleImage = !1, this._fitsProperties = new ho(), this._matrixComputed = !1, this._name = "", this._sparse = !1, this._thumbnailUrl = "", this._generic = !1, this._defaultSet = !1, this._elevationModel = !1, this._offsetX = 0, this._offsetY = 0;
        }
        Mi.getTileKey = function(t, e, n, a, s) {
          if (t.get_projection() === 7 && s != null) {
            var l = s.ipix * 4 + a * 2 + n;
            return t.get_imageSetID().toString() + "\\" + e.toString() + "\\" + l.toString();
          }
          return t.get_imageSetID().toString() + "\\" + e.toString() + "\\" + a.toString() + "_" + n.toString();
        }, Mi.getNewTile = function(t, e, n, a, s) {
          switch (t.get_projection()) {
            case 0:
              var l = We.create(e, n, a, t, s);
              return l;
            case 1:
              return ns.create(e, n, a, t, s);
            case 3:
            default:
              return Pi.create(e, n, a, t, s);
            case 5:
              return new Jo(e, n, a, t, s);
            case 6:
              return fs.create(e, n, a, t, s);
            case 7:
              return t.get_hipsProperties() == null && t.set_hipsProperties(new Wa(t)), t.get_hipsProperties().get_downloadComplete() ? new rs(e, n, a, t, s) : null;
            case 2:
              var l = new _s(e, n, a, t, s);
              return l;
          }
        }, Mi.fromXMLNode = function(t) {
          try {
            var e = 2, n = 2;
            t.attributes.getNamedItem("DataSetType") != null && (e = we.parse("ImageSetType", t.attributes.getNamedItem("DataSetType").nodeValue));
            var a = 3;
            a = we.parse("BandPass", t.attributes.getNamedItem("BandPass").nodeValue);
            var s = 1;
            if (t.attributes.getNamedItem("WidthFactor") != null && (s = parseInt(t.attributes.getNamedItem("WidthFactor").nodeValue)), t.attributes.getNamedItem("Generic") == null || !r.boolean(t.attributes.getNamedItem("Generic").nodeValue)) {
              n = we.parse("ProjectionType", t.attributes.getNamedItem("Projection").nodeValue);
              var l = t.attributes.getNamedItem("FileType").nodeValue;
              r.startsWith(l, ".") || (l = "." + l);
              var g = "", _ = xt.selectSingleNode(t, "ThumbnailUrl");
              if (_ != null)
                if (r.emptyString(_.text)) {
                  var m = _;
                  g = m.textContent;
                } else
                  g = _.text;
              var b = !1, y = !1;
              t.attributes.getNamedItem("StockSet") != null && (b = r.boolean(t.attributes.getNamedItem("StockSet").nodeValue)), t.attributes.getNamedItem("ElevationModel") != null && (y = r.boolean(t.attributes.getNamedItem("ElevationModel").nodeValue));
              var M = "";
              t.attributes.getNamedItem("DemUrl") != null && (M = t.attributes.getNamedItem("DemUrl").nodeValue);
              var A = "";
              t.attributes.getNamedItem("AltUrl") != null && (A = t.attributes.getNamedItem("AltUrl").nodeValue);
              var R = 0;
              t.attributes.getNamedItem("OffsetX") != null && (R = parseFloat(t.attributes.getNamedItem("OffsetX").nodeValue));
              var F = 0;
              t.attributes.getNamedItem("OffsetY") != null && (F = parseFloat(t.attributes.getNamedItem("OffsetY").nodeValue));
              var O = "", B = xt.selectSingleNode(t, "Credits");
              B != null && (O = xt.getInnerText(B));
              var H = "";
              B = xt.selectSingleNode(t, "CreditsUrl"), B != null && (H = xt.getInnerText(B));
              var K = 0;
              t.attributes.getNamedItem("MeanRadius") != null && (K = parseFloat(t.attributes.getNamedItem("MeanRadius").nodeValue));
              var J = null;
              t.attributes.getNamedItem("ReferenceFrame") != null && (J = t.attributes.getNamedItem("ReferenceFrame").nodeValue);
              var it = "";
              t.attributes.getNamedItem("Name") != null && (it = t.attributes.getNamedItem("Name").nodeValue);
              var ot = "";
              t.attributes.getNamedItem("Url") != null && (ot = t.attributes.getNamedItem("Url").nodeValue);
              var lt = 0;
              t.attributes.getNamedItem("BaseTileLevel") != null && (lt = parseInt(t.attributes.getNamedItem("BaseTileLevel").nodeValue));
              var gt = 0;
              t.attributes.getNamedItem("TileLevels") != null && (gt = parseInt(t.attributes.getNamedItem("TileLevels").nodeValue));
              var ut = 0;
              t.attributes.getNamedItem("BaseDegreesPerTile") != null && (ut = parseFloat(t.attributes.getNamedItem("BaseDegreesPerTile").nodeValue));
              var St = !1;
              t.attributes.getNamedItem("BottomsUp") != null && (St = r.boolean(t.attributes.getNamedItem("BottomsUp").nodeValue));
              var mt = "";
              t.attributes.getNamedItem("QuadTreeMap") != null && (mt = t.attributes.getNamedItem("QuadTreeMap").nodeValue);
              var Dt = 0;
              t.attributes.getNamedItem("CenterX") != null && (Dt = parseFloat(t.attributes.getNamedItem("CenterX").nodeValue));
              var yt = 0;
              t.attributes.getNamedItem("CenterY") != null && (yt = parseFloat(t.attributes.getNamedItem("CenterY").nodeValue));
              var ue = 0;
              t.attributes.getNamedItem("Rotation") != null && (ue = parseFloat(t.attributes.getNamedItem("Rotation").nodeValue));
              var _e = !1;
              return t.attributes.getNamedItem("Sparse") != null && (_e = r.boolean(t.attributes.getNamedItem("Sparse").nodeValue)), Mi.create(it, ot, e, a, n, Math.abs(xt.getHashCode(ot)), lt, gt, 256, ut, l, St, mt, Dt, yt, ue, _e, g, b, y, s, R, F, O, H, M, A, K, J);
            } else
              return Mi.createGeneric(e, a);
          } catch {
            return null;
          }
        }, Mi.saveToXml = function(t, e, n) {
          t._writeStartElement("ImageSet"), t._writeAttributeString("Generic", e.get_generic().toString()), t._writeAttributeString("DataSetType", we.toXml("ImageSetType", e.get_dataSetType())), t._writeAttributeString("BandPass", we.toXml("BandPass", e.get_bandPass())), e.get_generic() || (t._writeAttributeString("Name", e.get_name()), r.emptyString(n) ? t._writeAttributeString("Url", e.get_url()) : t._writeAttributeString("Url", n), t._writeAttributeString("DemUrl", e.get_demUrl()), t._writeAttributeString("BaseTileLevel", e.get_baseLevel().toString()), t._writeAttributeString("TileLevels", e.get_levels().toString()), t._writeAttributeString("BaseDegreesPerTile", e.get_baseTileDegrees().toString()), t._writeAttributeString("FileType", e.get_extension()), t._writeAttributeString("BottomsUp", e.get_bottomsUp().toString()), t._writeAttributeString("Projection", we.toXml("ProjectionType", e.get_projection())), t._writeAttributeString("QuadTreeMap", e.get_quadTreeTileMap()), t._writeAttributeString("CenterX", e.get_centerX().toString()), t._writeAttributeString("CenterY", e.get_centerY().toString()), t._writeAttributeString("OffsetX", e.get_offsetX().toString()), t._writeAttributeString("OffsetY", e.get_offsetY().toString()), t._writeAttributeString("Rotation", e.get_rotation().toString()), t._writeAttributeString("Sparse", e.get_sparse().toString()), t._writeAttributeString("ElevationModel", e.get_elevationModel().toString()), t._writeAttributeString("StockSet", e.get_defaultSet().toString()), t._writeAttributeString("WidthFactor", e.get_widthFactor().toString()), t._writeAttributeString("MeanRadius", e.get_meanRadius().toString()), t._writeAttributeString("ReferenceFrame", e.get_referenceFrame()), r.emptyString(n) ? t._writeElementString("ThumbnailUrl", e.get_thumbnailUrl()) : t._writeElementString("ThumbnailUrl", e.get_url())), t._writeEndElement();
        }, Mi.createGeneric = function(t, e) {
          var n = new Mi();
          return n._generic = !0, n._name = "Generic", n._sparse = !1, n._dataSetType = t, n._bandPass = e, n._quadTreeTileMap = "", n.url = "", n._levels = 0, n._baseTileDegrees = 0, n._imageSetID = 0, n._extension = "", n._projection = 1, n._bottomsUp = !1, n._baseLevel = 0, n._mercator = !n._projection, n._centerX = 0, n._centerY = 0, n._rotation = 0, n._thumbnailUrl = "", n._matrix = tt.get_identity(), n._matrix._multiply(tt._rotationX(n.get_rotation() / 180 * Math.PI)), n._matrix._multiply(tt._rotationZ(n.get_centerY() / 180 * Math.PI)), n._matrix._multiply(tt._rotationY((360 - n.get_centerX() + 180) / 180 * Math.PI)), n;
        }, Mi.create = function(t, e, n, a, s, l, g, _, m, b, y, M, A, R, F, O, B, H, K, J, it, ot, lt, gt, ut, St, mt, Dt, yt) {
          var ue = new Mi();
          return ue.setInitialParameters(t, e, n, a, s, l, g, _, b, y, M, A, R, F, O, B, H, K, J, it, ot, lt, gt, ut, St, mt, Dt, yt), ue;
        };
        var Ou = {
          get_wcsImage: function() {
            return this._wcsImage;
          },
          set_wcsImage: function(t) {
            return this._wcsImage = t, t;
          },
          get_projection: function() {
            return this._projection;
          },
          set_projection: function(t) {
            return this._projection = t, t;
          },
          get_referenceFrame: function() {
            return this._referenceFrame;
          },
          set_referenceFrame: function(t) {
            return this._referenceFrame = t, t;
          },
          get_imageSetID: function() {
            return this._imageSetID;
          },
          set_imageSetID: function(t) {
            return this._imageSetID = t, t;
          },
          get_baseTileDegrees: function() {
            return this._baseTileDegrees;
          },
          set_baseTileDegrees: function(t) {
            return this._baseTileDegrees = t, t;
          },
          get_widthFactor: function() {
            return this._widthFactor;
          },
          set_widthFactor: function(t) {
            return this._widthFactor = t, t;
          },
          getHashCode: function() {
            return xt.getHashCode(this.get_url());
          },
          get_url: function() {
            return this.url;
          },
          set_url: function(t) {
            return this.url = t, t;
          },
          get_demUrl: function() {
            return r.emptyString(this.demUrl) && !this._projection && !Z.singleton.freestandingMode ? ze.singleton.coreStaticUrl("wwtweb/BingDemTile.aspx?Q={0},{1},{2}") : this.demUrl;
          },
          set_demUrl: function(t) {
            return this.demUrl = t, t;
          },
          get_extension: function() {
            return this._extension;
          },
          set_extension: function(t) {
            return this._extension = t, t;
          },
          get_levels: function() {
            return this._levels;
          },
          set_levels: function(t) {
            return this._levels = t, t;
          },
          get_bottomsUp: function() {
            return this._bottomsUp;
          },
          set_bottomsUp: function(t) {
            return this._bottomsUp = t, t;
          },
          get_mercator: function() {
            return this._mercator;
          },
          set_mercator: function(t) {
            return this._mercator = t, t;
          },
          get_baseLevel: function() {
            return this._baseLevel;
          },
          set_baseLevel: function(t) {
            return this._baseLevel = t, t;
          },
          get_quadTreeTileMap: function() {
            return this._quadTreeTileMap;
          },
          set_quadTreeTileMap: function(t) {
            return this._quadTreeTileMap = t, t;
          },
          get_centerX: function() {
            return this._centerX;
          },
          set_centerX: function(t) {
            return this._centerX !== t && (this._centerX = t, this._computeMatrix()), t;
          },
          get_centerY: function() {
            return this._centerY;
          },
          set_centerY: function(t) {
            return this._centerY !== t && (this._centerY = t, this._computeMatrix()), t;
          },
          get_rotation: function() {
            return this._rotation;
          },
          set_rotation: function(t) {
            return this._rotation !== t && (this._rotation = t, this._computeMatrix()), t;
          },
          get_meanRadius: function() {
            return this._meanRadius;
          },
          set_meanRadius: function(t) {
            return this._meanRadius = t, t;
          },
          get_bandPass: function() {
            return this._bandPass;
          },
          set_bandPass: function(t) {
            return this._bandPass = t, t;
          },
          get_dataSetType: function() {
            return this._dataSetType;
          },
          set_dataSetType: function(t) {
            return this._dataSetType = t, t;
          },
          get_altUrl: function() {
            return this._altUrl;
          },
          set_altUrl: function(t) {
            return this._altUrl = t, t;
          },
          get_singleImage: function() {
            return this._singleImage;
          },
          set_singleImage: function(t) {
            return this._singleImage = t, t;
          },
          get_hipsProperties: function() {
            return this._hipsProperties;
          },
          set_hipsProperties: function(t) {
            return this._hipsProperties = t, t;
          },
          get_fitsProperties: function() {
            return this._fitsProperties;
          },
          set_fitsProperties: function(t) {
            return this._fitsProperties = t, t;
          },
          toString: function() {
            return this.get_defaultSet() ? this._name + " *" : this._name;
          },
          get_stockImageSet: function() {
            return this._generic || !this._defaultSet ? this : Mi.createGeneric(this.get_dataSetType(), this.get_bandPass());
          },
          equals: function(t) {
            if (t == null || !r.canCast(t, Mi))
              return !1;
            var e = t;
            return xt.getHashCode(e.get_url()) === xt.getHashCode(this.get_url()) && e.get_dataSetType() === this.get_dataSetType() && e.get_bandPass() === this.get_bandPass() && e.get_generic() === this.get_generic();
          },
          get_matrix: function() {
            return this._matrixComputed || this._computeMatrix(), this._matrix;
          },
          set_matrix: function(t) {
            return this._matrix = t, t;
          },
          _computeMatrix: function() {
            this._matrixComputed = !0, this._matrix = tt.get_identity(), this._matrix._multiply(tt._rotationX(this.get_rotation() / 180 * Math.PI)), this._matrix._multiply(tt._rotationZ(this.get_centerY() / 180 * Math.PI)), this._matrix._multiply(tt._rotationY((360 - this.get_centerX()) / 180 * Math.PI));
          },
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name = t, t;
          },
          get_sparse: function() {
            return this._sparse;
          },
          set_sparse: function(t) {
            return this._sparse = t, t;
          },
          get_thumbnailUrl: function() {
            return this._thumbnailUrl;
          },
          set_thumbnailUrl: function(t) {
            return this._thumbnailUrl = t, t;
          },
          get_generic: function() {
            return this._generic;
          },
          set_generic: function(t) {
            return this._generic = t, t;
          },
          get_elevationModel: function() {
            return this._elevationModel;
          },
          set_elevationModel: function(t) {
            return this._elevationModel = t, t;
          },
          get_defaultSet: function() {
            return this._defaultSet;
          },
          set_defaultSet: function(t) {
            return this._defaultSet = t, t;
          },
          get_offsetX: function() {
            return this._offsetX;
          },
          set_offsetX: function(t) {
            return this._offsetX = t, t;
          },
          get_offsetY: function() {
            return this._offsetY;
          },
          set_offsetY: function(t) {
            return this._offsetY = t, t;
          },
          get_creditsText: function() {
            return this._creditsText;
          },
          set_creditsText: function(t) {
            return this._creditsText = t, t;
          },
          get_creditsUrl: function() {
            return this._creditsUrl;
          },
          set_creditsUrl: function(t) {
            return this._creditsUrl = t, t;
          },
          get_isMandelbrot: function() {
            return !1;
          },
          _calcViewCenterCoordinate: function(t) {
            var e = U.degreesToRadians(this._rotation), n = Math.cos(e), a = Math.sin(e), s = 0, l = 0;
            if (this.get_levels() > 0)
              s = -this._offsetX, l = this._offsetY;
            else {
              var g = 800, _ = 800;
              s = (this._offsetX - g / 2) * this._baseTileDegrees, l = (_ / 2 - this._offsetY) * this._baseTileDegrees;
            }
            return this._bottomsUp && (s = -s), t ? this._centerX + s * n + l * a : this._centerY - s * a + l * n;
          },
          get_viewCenterX: function() {
            return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterX() : this._calcViewCenterCoordinate(!0);
          },
          get_viewCenterY: function() {
            return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterY() : this._calcViewCenterCoordinate(!1);
          },
          setInitialParameters: function(t, e, n, a, s, l, g, _, m, b, y, M, A, R, F, O, B, H, K, J, it, ot, lt, gt, ut, St, mt, Dt) {
            this.set_referenceFrame(Dt), this.set_meanRadius(mt), this._altUrl = St, this.demUrl = ut, this._creditsText = lt, this._creditsUrl = gt, this._offsetY = ot, this._offsetX = it, this._widthFactor = J, this._elevationModel = K, this._defaultSet = H, this._name = t, this._sparse = O, this._dataSetType = n, this._bandPass = a, this._quadTreeTileMap = M, this.url = e, this._levels = _, this._baseTileDegrees = m, this._imageSetID = l, this._extension = b, this._projection = s, this._bottomsUp = y, this._baseLevel = g, this._mercator = !s, this._centerX = A, this._centerY = R, this._rotation = F, this._thumbnailUrl = B, this._computeMatrix();
          },
          _guessZoomSetting: function(t) {
            var e = t, n = r.safeCast(this._wcsImage, ar);
            return this.get_projection() === 5 ? n != null && (e = this.get_baseTileDegrees() * n.get_sizeY() * 6 * 1.7) : n != null ? e = n.get_scaleY() * n.get_sizeY() * 6 * 1.7 : e = this.get_baseTileDegrees() * 6 * 1.7, e > t && (e = t), e;
          },
          get_thumbnail: function() {
            return this._thumbnail;
          },
          set_thumbnail: function(t) {
            return this._thumbnail = t, t;
          },
          get_bounds: function() {
            return this._bounds;
          },
          set_bounds: function(t) {
            return this._bounds = t, t;
          },
          get_isImage: function() {
            return !0;
          },
          get_isTour: function() {
            return !1;
          },
          get_isFolder: function() {
            return !1;
          },
          get_isCloudCommunityItem: function() {
            return !1;
          },
          get_readOnly: function() {
            return !1;
          },
          get_children: function() {
            return [];
          }
        };
        function Ds(t, e, n, a, s, l) {
          this.interpolationType = 0, this.fastDirectionMove = !1, this._toTargetTime = 0, this._dateTimeSpan = 0, this._complete = !1, this._midpointFired = !1, this.interpolationType = l, Math.abs(t.lng - e.lng) > 180 && (t.lng > e.lng ? t.lng -= 360 : t.lng += 360), this._fromDateTime = a, this._toDateTime = s, this._dateTimeSpan = s - a, this._from = t.copy(), this._to = e.copy(), this._fromTime = Q.get_metaNow(), this._toTargetTime = n;
        }
        var Vu = {
          get_complete: function() {
            return this._complete;
          },
          get_currentPosition: function() {
            var t = Q.get_metaNow() - this._fromTime, e = t / 1e3, n = e / this._toTargetTime;
            return !this._midpointFired && n >= 0.5 && (this._midpointFired = !0, this._midpoint != null && this._midpoint()), n >= 1 ? (n = 1, this._complete = !0, this._to.copy()) : X.get_active().get_galacticMode() && Z.singleton.renderContext.space ? _i.interpolateGreatCircle(this._from, this._to, n, this.interpolationType, this.fastDirectionMove) : _i.interpolate(this._from, this._to, n, this.interpolationType, this.fastDirectionMove);
          },
          get_currentDateTime: function() {
            var t = Q.get_metaNow() - this._fromTime, e = t / 1e3, n = e / this._toTargetTime, a = this._dateTimeSpan * n, s = new Date(this._fromDateTime.getTime() + r.truncate(a));
            return s;
          },
          get_midpoint: function() {
            return this._midpoint;
          },
          set_midpoint: function(t) {
            return this._midpoint = t, t;
          },
          get_moveTime: function() {
            return this._toTargetTime;
          }
        };
        function sn() {
          this._upTargetTime = 0, this._downTargetTime = 0, this._toTargetTime = 0, this._upTimeFactor = 0.6, this._downTimeFactor = 0.6, this._travelTimeFactor = 7, this._midpointFired = !1, this._complete = !1;
        }
        sn.create = function(t, e) {
          var n = new sn();
          return n.init(t, e), n;
        }, sn.createUpDown = function(t, e, n) {
          var a = new sn();
          return a._upTimeFactor = a._downTimeFactor = n, a.init(t.copy(), e.copy()), a;
        };
        var Uu = {
          init: function(t, e) {
            Math.abs(t.lng - e.lng) > 180 && (t.lng > e.lng ? t.lng -= 360 : t.lng += 360), e.zoom <= 0 && (e.zoom = 360), t.zoom <= 0 && (t.zoom = 360), this._from = t, this._to = e, this._fromTime = Q.get_metaNow();
            var n = 360, a, s = Math.abs(t.lng - e.lng), l = Math.abs(t.lat - e.lat), g = Math.sqrt(l * l + s * s);
            n = g / 3 * 20, n > 360 && (n = 360), n < t.zoom && (n = t.zoom), a = g / 180 * (360 / n) * this._travelTimeFactor;
            var _ = Math.max(Math.abs(t.angle - e.angle), Math.abs(t.rotation - e.rotation)), m = Math.max(Math.abs(xt.logN(n, 2) - xt.logN(t.zoom, 2)), _);
            this._upTargetTime = this._upTimeFactor * m, this._downTargetTime = this._upTargetTime + a;
            var b = Math.abs(xt.logN(n, 2) - xt.logN(e.zoom, 2));
            this._toTargetTime = this._downTargetTime + Math.max(this._downTimeFactor * b, _), this._fromTop = t.copy(), this._fromTop.zoom = n, this._fromTop.angle = (t.angle + e.angle) / 2, this._fromTop.rotation = (t.rotation + e.rotation) / 2, this._toTop = e.copy(), this._toTop.zoom = this._fromTop.zoom, this._toTop.angle = this._fromTop.angle, this._toTop.rotation = this._fromTop.rotation;
          },
          get_complete: function() {
            return this._complete;
          },
          get_currentPosition: function() {
            var t = Q.get_metaNow() - this._fromTime, e = t / 1e3;
            if (e < this._upTargetTime)
              return _i.interpolate(this._from, this._fromTop, e / this._upTargetTime, 3, !1);
            if (e < this._downTargetTime)
              return e -= this._upTargetTime, X.get_active().get_galacticMode() && Z.singleton.renderContext.space ? _i.interpolateGreatCircle(this._fromTop, this._toTop, e / (this._downTargetTime - this._upTargetTime), 3, !1) : _i.interpolate(this._fromTop, this._toTop, e / (this._downTargetTime - this._upTargetTime), 3, !1);
            this._midpointFired || (this._midpointFired = !0, this._midpoint != null && this._midpoint()), e -= this._downTargetTime;
            var n = e / (this._toTargetTime - this._downTargetTime);
            return n > 1 ? (n = 1, this._complete = !0, this._to.copy()) : _i.interpolate(this._toTop, this._to, n, 3, !1);
          },
          get_currentDateTime: function() {
            return Q.updateClock(), Q.get_now();
          },
          get_midpoint: function() {
            return this._midpoint;
          },
          set_midpoint: function(t) {
            return this._midpoint = t, t;
          },
          get_moveTime: function() {
            return this._toTargetTime;
          }
        };
        function ur() {
          this.ABC = new $(), this.abc1 = new $(), this.pointSize = 0, this.w = 0, this.e = 0, this.n = 0, this.t = 0, this.a = 0, this.z = 0, this.orbitPos = 0, this.orbits = 0;
        }
        var Hu = {
          fill: function(t) {
            var e = Math.cos(t.omega * ur._degrad), n = Math.sin(t.omega * ur._degrad), a = Math.cos(t.i * ur._degrad), s = Math.sin(t.i * ur._degrad), l = n * ur._cose, g = n * ur._sine, _ = -n * a, m = e * a * ur._cose - s * ur._sine, b = e * a * ur._sine + s * ur._cose;
            this.ABC.x = Math.atan2(e, _), this.ABC.y = Math.atan2(l, m), this.ABC.z = Math.atan2(g, b), this.abc1.x = Math.sqrt(e * e + _ * _), this.abc1.y = Math.sqrt(l * l + m * m), this.abc1.z = Math.sqrt(g * g + b * b), this.pointSize = 0.1, t.a < 2.5 ? this.color = Pt.get_white() : t.a < 2.83 ? this.color = Pt.get_red() : t.a < 2.96 ? this.color = Pt.get_green() : t.a < 3.3 ? this.color = Pt.get_magenta() : t.a < 5 ? this.color = Pt.get_cyan() : t.a < 10 ? (this.color = Pt.get_yellow(), this.pointSize = 0.9) : (this.color = Pt.get_white(), this.pointSize = 8), this.w = t.w, this.e = t.e, t.n ? this.n = t.n : this.n = 0.9856076686 / (t.a * Math.sqrt(t.a)), this.t = t.t - ur.baseDate, this.a = t.a, this.z = 0, this.orbitPos = 0, this.orbits = 0;
          }
        };
        function Yr() {
        }
        var Gu = {};
        function Ce() {
          this.colors = [];
        }
        Ce.fromArgbList = function(t) {
          for (var e = new Ce(), n = r.enumerate(t); n.moveNext(); ) {
            var a = n.current;
            e.colors.push(j.fromArgb(a[0], a[1], a[2], a[3]));
          }
          return e;
        }, Ce.fromStringList = function(t) {
          for (var e = new Ce(), n = r.enumerate(t); n.moveNext(); ) {
            var a = n.current;
            e.colors.push(j.load(a));
          }
          return e;
        }, Ce.fromNamedColormap = function(t) {
          if (t == null)
            return null;
          switch (t.toLowerCase()) {
            case "viridis":
              return Ce.viridis;
            case "plasma":
              return Ce.plasma;
            case "inferno":
              return Ce.inferno;
            case "magma":
              return Ce.magma;
            case "cividis":
              return Ce.cividis;
            case "greys":
              return Ce.greys;
            case "gray":
              return Ce.gray;
            case "purples":
              return Ce.purples;
            case "blues":
              return Ce.blues;
            case "greens":
              return Ce.greens;
            case "oranges":
              return Ce.oranges;
            case "reds":
              return Ce.reds;
            case "rdylbu":
              return Ce.rdYlBu;
          }
          return null;
        }, Ce._getTextureFromName = function(t, e) {
          var n = Ce.colorTextures[e];
          if (n == null) {
            var a = Ce.fromNamedColormap(e);
            a != null && (n = Ce._initColorTexture(t, a), Ce.colorTextures[e.toLowerCase()] = n);
          }
          return n;
        }, Ce.bindColorMapTexture = function(t, e) {
          var n = Ce._getTextureFromName(t, e);
          n == null && (n = Ce._getTextureFromName(t, "gray")), t.activeTexture(33985), t.bindTexture(3553, n);
        }, Ce._initColorTexture = function(t, e) {
          var n = t.createTexture();
          t.activeTexture(33985), t.bindTexture(3553, n), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071);
          var a = Ce._extractColorArray(e.colors);
          return t.texImage2D(3553, 0, 32849, a.length / 3, 1, 0, 6407, 5121, a), t.texParameteri(3553, 10241, 9728), t.texParameteri(3553, 10240, 9728), n;
        }, Ce._extractColorArray = function(t) {
          for (var e = 0, n = new Uint8Array(t.length * 3), a = r.enumerate(t); a.moveNext(); ) {
            var s = a.current;
            n[e++] = s.r, n[e++] = s.g, n[e++] = s.b;
          }
          return n;
        };
        var qu = {
          findClosestColor: function(t) {
            var e;
            return t <= 0 ? this.colors[0] : t >= 1 ? this.colors[this.colors.length - 1] : (e = r.truncate(t * this.colors.length), this.colors[e]);
          }
        };
        function ai() {
          this.id = er.newGuid(), this.loadedFromTour = !1, this.tourDocument = null, this.opacity = 1, this.opened = !1, this._startTime = r.date("01/01/1900"), this._endTime = r.date("01/01/2100"), this._fadeSpan = 0, this._fadeType = 4, this.version = 0, this.color = Pt.get_white(), this.enabled = !0, this.astronomical = !1;
        }
        ai.fromXml = function(t, e) {
          var n = t.attributes.getNamedItem("Type").nodeValue, a = r.replaceString(n, "TerraViewer.", "");
          if (a == null)
            return null;
          var s = null;
          switch (a) {
            case "SpreadSheetLayer":
              s = new Ui();
              break;
            case "GreatCirlceRouteLayer":
              s = new za();
              break;
            case "GridLayer":
              s = new Zs();
              break;
            case "ImageSetLayer":
              s = new qi();
              break;
            case "Object3dLayer":
              s = new Ne();
              break;
            case "OrbitLayer":
              s = new Ks();
              break;
            case "VoTableLayer":
              s = new kr();
              break;
            default:
              return null;
          }
          return s.initFromXml(t), s;
        };
        var Xu = {
          getPrimaryUI: function() {
            return null;
          },
          getFileStreamUrl: function(t) {
            return this.tourDocument != null ? this.tourDocument.getFileStream(t) : null;
          },
          get_opacity: function() {
            return this.opacity;
          },
          set_opacity: function(t) {
            return this.opacity !== t && (this.version++, this.opacity = t), t;
          },
          get_opened: function() {
            return this.opened;
          },
          set_opened: function(t) {
            return this.opened !== t && (this.version++, this.opened = t), t;
          },
          get_startTime: function() {
            return this._startTime;
          },
          set_startTime: function(t) {
            return r.compareDates(this._startTime, t) || (this.version++, this._startTime = t), t;
          },
          get_endTime: function() {
            return this._endTime;
          },
          set_endTime: function(t) {
            return r.compareDates(this._endTime, t) || (this.version++, this._endTime = t), t;
          },
          get_fadeSpan: function() {
            return this._fadeSpan;
          },
          set_fadeSpan: function(t) {
            return this.version++, this._fadeSpan = t, t;
          },
          get_fadeType: function() {
            return this._fadeType;
          },
          set_fadeType: function(t) {
            return this._fadeType !== t && (this.set_version(this.get_version() + 1) - 1, this._fadeType = t), t;
          },
          get_version: function() {
            return this.version;
          },
          set_version: function(t) {
            return this.version = t, t;
          },
          findClosest: function(t, e, n, a) {
            return n;
          },
          hoverCheckScreenSpace: function(t) {
            return !1;
          },
          clickCheckScreenSpace: function(t) {
            return !1;
          },
          draw: function(t, e, n) {
            return !0;
          },
          preDraw: function(t, e) {
            return !0;
          },
          updateData: function(t, e, n, a) {
            return !0;
          },
          upadteData: function(t, e, n, a) {
            return this.updateData(t, e, n, a);
          },
          canCopyToClipboard: function() {
            return !1;
          },
          copyToClipboard: function() {
          },
          getParams: function() {
            var t = new Array(5);
            return t[0] = this.color.r / 255, t[1] = this.color.g / 255, t[2] = this.color.b / 255, t[3] = this.color.a / 255, t[4] = this.opacity, t;
          },
          setParams: function(t) {
            t.length === 5 && (this.opacity = t[4], this.color = j.fromArgb(t[3] * 255, t[0] * 255, t[1] * 255, t[2] * 255));
          },
          getParamNames: function() {
            return ["Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
          },
          getEditUI: function() {
            return r.safeCast(this, ht);
          },
          cleanUp: function() {
          },
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name !== t && (this.version++, this._name = t), t;
          },
          toString: function() {
            return this._name;
          },
          get_referenceFrame: function() {
            return this.referenceFrame;
          },
          set_referenceFrame: function(t) {
            return this.referenceFrame = t, t;
          },
          getProps: function() {
            return "";
          },
          get_color: function() {
            return this.color;
          },
          set_color: function(t) {
            return this.color !== t && (this.color = t, this.version++), t;
          },
          colorChanged: function() {
          },
          get_colorValue: function() {
            return this.get_color().toString();
          },
          set_colorValue: function(t) {
            return this.set_color(j.fromName(t)), t;
          },
          get_enabled: function() {
            return this.enabled;
          },
          set_enabled: function(t) {
            return this.enabled = t, t;
          },
          get_astronomical: function() {
            return this.astronomical;
          },
          set_astronomical: function(t) {
            return this.astronomical !== t && (this.version++, this.astronomical = t), t;
          },
          getTypeName: function() {
            return "TerraViewer.Layer";
          },
          saveToXml: function(t) {
            t._writeStartElement("Layer"), t._writeAttributeString("Id", this.id.toString()), t._writeAttributeString("Type", this.getTypeName()), t._writeAttributeString("Name", this.get_name()), t._writeAttributeString("ReferenceFrame", this.referenceFrame), t._writeAttributeString("Color", this.color.save()), t._writeAttributeString("Opacity", this.opacity.toString()), t._writeAttributeString("StartTime", xt.xmlDate(this.get_startTime())), t._writeAttributeString("EndTime", xt.xmlDate(this.get_endTime())), t._writeAttributeString("FadeSpan", this.get_fadeSpan().toString()), t._writeAttributeString("FadeType", this.get_fadeType().toString()), this.writeLayerProperties(t), t._writeEndElement();
          },
          writeLayerProperties: function(t) {
          },
          initializeFromXml: function(t) {
          },
          initFromXml: function(t) {
            if (this.id = er.fromString(t.attributes.getNamedItem("Id").nodeValue), this.set_name(t.attributes.getNamedItem("Name").nodeValue), this.referenceFrame = t.attributes.getNamedItem("ReferenceFrame").nodeValue, this.color = j.load(t.attributes.getNamedItem("Color").nodeValue), this.opacity = parseFloat(t.attributes.getNamedItem("Opacity").nodeValue), t.attributes.getNamedItem("StartTime") != null && this.set_startTime(new Date(t.attributes.getNamedItem("StartTime").nodeValue)), t.attributes.getNamedItem("EndTime") != null && this.set_endTime(new Date(t.attributes.getNamedItem("EndTime").nodeValue)), t.attributes.getNamedItem("FadeSpan") != null && this.set_fadeSpan(xt.parseTimeSpan(t.attributes.getNamedItem("FadeSpan").nodeValue)), t.attributes.getNamedItem("FadeType") != null)
              switch (t.attributes.getNamedItem("FadeType").nodeValue) {
                case "In":
                  this.set_fadeType(1);
                  break;
                case "Out":
                  this.set_fadeType(2);
                  break;
                case "Both":
                  this.set_fadeType(3);
                  break;
                case "None":
                  this.set_fadeType(4);
                  break;
              }
            this.initializeFromXml(t);
          },
          loadData: function(t, e) {
          },
          addFilesToCabinet: function(t) {
          },
          getStringFromGzipBlob: function(t, e) {
            var n = new FileReader();
            n.onloadend = function(a) {
              var s = "";
              try {
                s = Qs.inflate(a.target.result, { to: "string" });
              } catch (g) {
                var l = g.toString();
                if (l === "incorrect header check" || l === "unknown compression method")
                  try {
                    s = String.fromCharCode.apply(null, new Uint8Array(a.target.result));
                  } catch (_) {
                    throw _;
                  }
                else
                  throw g;
              }
              e(s);
            }, n.readAsArrayBuffer(t);
          }
        };
        function Yu(t, e) {
          this.markerIndex = 4, this.customMarker = null, this.text = t, this.markerIndex = e;
        }
        var ju = {};
        function P() {
        }
        P.get_version = function() {
          return P._version;
        }, P.set_version = function(t) {
          return P._version = t, t;
        }, P.get_frameWizardDialog = function() {
          return P._frameWizardDialog;
        }, P.get_dataVizWizardDialog = function() {
          return P._dataVizWizardDialog;
        }, P.get_referenceFramePropsDialog = function() {
          return P._referenceFramePropsDialog;
        }, P.get_greatCircleDlg = function() {
          return P._greatCircleDialog;
        }, P.get_tourLayers = function() {
          return P._tourLayers;
        }, P.set_tourLayers = function(t) {
          return P._tourLayers !== t && !t ? (P._clearLayers(), P._tourLayers = t, P.loadTree()) : P._tourLayers !== t && t && (P._tourLayers = t, P.initLayers()), t;
        }, P.loadTree = function() {
          Z.scriptInterface != null && Z.scriptInterface.refreshLayerManagerNow();
        }, P.get_layerMaps = function() {
          return P.get_tourLayers() ? P._layerMapsTours : P._layerMaps;
        }, P.set_layerMaps = function(t) {
          return P.get_tourLayers() ? P._layerMapsTours = t : P._layerMaps = t, t;
        }, P.get_allMaps = function() {
          return P.get_tourLayers() ? P._allMapsTours : P._allMaps;
        }, P.set_allMaps = function(t) {
          return P.get_tourLayers() ? P._allMapsTours = t : P._allMaps = t, t;
        }, P.get_currentMap = function() {
          return P._currentMap;
        }, P.set_currentMap = function(t) {
          return P._currentMap = t, t;
        }, P.get_layerList = function() {
          return P.get_tourLayers() ? P._layerListTours : P._layerList;
        }, P.set_layerList = function(t) {
          return P.get_tourLayers() ? P._layerListTours = t : P._layerList = t, t;
        }, P.oneTimeInitialization = function() {
          P._webFileMoons == null && P.getMoonFile(ze.singleton.engineAssetUrl("moons.txt")), hr.triggerLoadSprite();
        }, P.initLayers = function() {
          P._clearLayers();
          var t = null, e = !P.get_tourLayers() && !Z.singleton.freestandingMode;
          if (e) {
            t = new xi("ISS", 18), t.frame.epoch = Q._twoLineDateToJulian("10184.51609218"), t.frame.semiMajorAxis = 672882941e-2, t.frame.referenceFrameType = 1, t.frame.inclination = 51.6442, t.frame.longitudeOfAscendingNode = 147.0262, t.frame.eccentricity = 9909e-7, t.frame.meanAnomolyAtEpoch = 325.5563, t.frame.meanDailyMotion = 360 * 15.72172655, t.frame.argumentOfPeriapsis = 286.4623, t.frame.scale = 1, t.frame.semiMajorAxisUnits = 1, t.frame.meanRadius = 130, t.frame.oblateness = 0, t.frame.showOrbitPath = !0;
            var n = new Array(0), a = ze.singleton.coreDynamicUrl("wwtweb/isstle.aspx"), s;
            s = new _r(a), s.onStateChange = function() {
              if (s.get_state() === 1) {
                var l = s.getText();
                n = l.split(`
`), n.length > 1 && t.frame.fromTLE(n[0], n[1], 3986004418e5);
              }
            }, s.send(), t.enabled = !0;
          }
          P.get_layerMaps().Sun = new xi("Sun", 3), P.get_layerMaps().Sun.addChild(new xi("Mercury", 4)), P.get_layerMaps().Sun.addChild(new xi("Venus", 5)), P.get_layerMaps().Sun.addChild(new xi("Earth", 6)), P.get_layerMaps().Sun.childMaps.Earth.addChild(new xi("Moon", 13)), e && P.get_layerMaps().Sun.childMaps.Earth.addChild(t), P.get_layerMaps().Sun.addChild(new xi("Mars", 7)), P.get_layerMaps().Sun.addChild(new xi("Jupiter", 8)), P.get_layerMaps().Sun.childMaps.Jupiter.addChild(new xi("Io", 14)), P.get_layerMaps().Sun.childMaps.Jupiter.addChild(new xi("Europa", 15)), P.get_layerMaps().Sun.childMaps.Jupiter.addChild(new xi("Ganymede", 16)), P.get_layerMaps().Sun.childMaps.Jupiter.addChild(new xi("Callisto", 17)), P.get_layerMaps().Sun.addChild(new xi("Saturn", 9)), P.get_layerMaps().Sun.addChild(new xi("Uranus", 10)), P.get_layerMaps().Sun.addChild(new xi("Neptune", 11)), P.get_layerMaps().Sun.addChild(new xi("Pluto", 12)), P._addMoons(P._moonfile), P.get_layerMaps().Sky = new xi("Sky", 0), P.get_layerMaps().Sun.open = !0, P._allMaps = {}, P._addAllMaps(P.get_layerMaps(), null), e && P._addIss(), P._version++, P.loadTree();
        }, P._addIss = function() {
          var t = new ir();
          t.set_name(pt.getLocalizedText(1314, "ISS Model  (Toshiyuki Takahei)")), t.enabled = X.get_active().get_showISSModel(), P.get_layerList()[t.id] = t, t.set_referenceFrame("ISS"), P.get_allMaps().ISS.layers.push(t), P.get_allMaps().ISS.open = !0;
        }, P._addAllMaps = function(t, e) {
          for (var n = r.enumerate(r.keys(t)); n.moveNext(); ) {
            var a = n.current, s = t[a];
            s.frame.parent = e, P.get_allMaps()[s.get_name()] = s, P._addAllMaps(s.childMaps, s.get_name());
          }
        }, P._clearLayers = function() {
          for (var t = r.enumerate(r.keys(P.get_layerList())); t.moveNext(); ) {
            var e = t.current, n = P.get_layerList()[e];
            n.cleanUp();
          }
          r.clearKeys(P.get_layerList()), r.clearKeys(P.get_layerMaps());
        }, P.getMoonFile = function(t) {
          P._webFileMoons = new _r(t), P._webFileMoons.onStateChange = P.moonFileStateChange, P._webFileMoons.send();
        }, P.moonFileStateChange = function() {
          P._webFileMoons.get_state() === 2 ? alert(P._webFileMoons.get_message()) : P._webFileMoons.get_state() === 1 && (P._moonfile = P._webFileMoons.getText(), P.initLayers());
        }, P._addMoons = function(t) {
          for (var e = t.split(`\r
`), n = !0, a = r.enumerate(e); a.moveNext(); ) {
            var s = a.current;
            if (n) {
              n = !1;
              continue;
            }
            var l = s.split("	");
            if (l.length > 16) {
              var g = l[0], _ = new xi(l[2], 18);
              _.frame._systemGenerated = !0, _.frame.epoch = parseFloat(l[1]), _.frame.semiMajorAxis = parseFloat(l[3]) * 1e3, _.frame.referenceFrameType = 1, _.frame.inclination = parseFloat(l[7]), _.frame.longitudeOfAscendingNode = parseFloat(l[8]), _.frame.eccentricity = parseFloat(l[4]), _.frame.meanAnomolyAtEpoch = parseFloat(l[6]), _.frame.meanDailyMotion = parseFloat(l[9]), _.frame.argumentOfPeriapsis = parseFloat(l[5]), _.frame.scale = 1, _.frame.semiMajorAxisUnits = 1, _.frame.meanRadius = parseFloat(l[16]) * 1e3, _.frame.rotationalPeriod = parseFloat(l[17]), _.frame.showAsPoint = !1, _.frame.showOrbitPath = !0, _.frame.set_representativeColor(j.fromArgb(255, 175, 216, 230)), _.frame.oblateness = 0, P.get_layerMaps().Sun.childMaps[g].addChild(_);
            }
          }
        }, P.addVoTableLayer = function(t, e) {
          return P.addVoTableLayerWithPlotType(t, e, 2);
        }, P.addVoTableLayerWithPlotType = function(t, e, n) {
          var a = kr.create(t, n);
          return a.set_name(e), a.set_astronomical(!0), a.set_referenceFrame("Sky"), P.get_layerList()[a.id] = a, P.get_allMaps().Sky.layers.push(a), P.get_allMaps().Sky.open = !0, a.enabled = !0, P._version++, P.loadTree(), a;
        }, P.addImageSetLayer = function(t, e) {
          var n = qi.create(t);
          return P.addFitsImageSetLayer(n, e);
        }, P.addImageSetLayerCallback = function(t, e, n) {
          var a = qi.create(t), s = t.get_extension() === ".fits" && a.getFitsImage() == null && t.get_projection() !== 7;
          return s && (t.get_fitsProperties().onMainImageLoaded = function(l) {
            l.applyDisplaySettings(), n != null && n(a);
          }), P.addFitsImageSetLayer(a, e), n != null && (!s || t.get_fitsProperties().mainImageLoadedEventHasFired) && n(a), a;
        }, P.addFitsImageSetLayer = function(t, e) {
          return t.doneLoading(null), t.set_name(e), t.set_astronomical(!0), t.set_referenceFrame("Sky"), P.get_layerList()[t.id] = t, P.get_allMaps().Sky.layers.push(t), P.get_allMaps().Sky.open = !0, t.enabled = !0, P._version++, P.loadTree(), t;
        }, P.getNextFitsName = function() {
          return P._getNextName("Fits Image");
        }, P.getNextImageSetName = function() {
          return P._getNextName("Image Set");
        }, P._getNextName = function(t) {
          for (var e = 0, n = r.enumerate(r.keys(P.get_allMaps())); n.moveNext(); )
            for (var a = n.current, s = r.enumerate(P.get_allMaps()[a].layers); s.moveNext(); ) {
              var l = s.current;
              if (r.startsWith(l.get_name(), t + " ")) {
                var g = r.replaceString(l.get_name(), t + " ", "");
                try {
                  var _ = parseInt(g);
                  _ > e && (e = _);
                } catch {
                }
              }
            }
          return r.format("{0} {1}", t, e + 1);
        }, P._closeAllTourLoadedLayers = function() {
          for (var t = [], e = r.enumerate(r.keys(P.get_layerList())); e.moveNext(); ) {
            var n = e.current, a = P.get_layerList()[n];
            a.loadedFromTour && t.push(a.id);
          }
          for (var s = r.enumerate(t); s.moveNext(); ) {
            var l = s.current;
            P.deleteLayerByID(l, !0, !1);
          }
          for (var g = [], _ = r.enumerate(r.keys(P.get_allMaps())); _.moveNext(); ) {
            var n = _.current, m = P.get_allMaps()[n];
            m.loadedFromTour && !m.layers.length && g.push(m.get_name());
          }
          for (var b = r.enumerate(g); b.moveNext(); ) {
            var y = b.current;
            P.purgeLayerMapDeep(P.get_allMaps()[y], !0);
          }
          P.set_version(P.get_version() + 1) - 1, P.loadTree();
        }, P.purgeLayerMapDeep = function(t, e) {
          for (var n = r.enumerate(t.layers); n.moveNext(); ) {
            var a = n.current;
            P.deleteLayerByID(a.id, !1, !1);
          }
          t.layers.length = 0;
          for (var s = r.enumerate(r.keys(t.childMaps)); s.moveNext(); ) {
            var l = s.current, g = t.childMaps[l];
            P.purgeLayerMapDeep(g, !1);
          }
          r.clearKeys(t.childMaps), e && (r.emptyString(t.frame.parent) ? r.keyExists(P.get_layerMaps(), t.get_name()) && delete P.get_layerMaps()[t.get_name()] : r.keyExists(P.get_allMaps(), t.frame.parent) && delete P.get_allMaps()[t.frame.parent].childMaps[t.get_name()]), delete P.get_allMaps()[t.get_name()], P._version++;
        }, P._cleanAllTourLoadedLayers = function() {
          for (var t = r.enumerate(r.keys(P.get_layerList())); t.moveNext(); ) {
            var e = t.current, n = P.get_layerList()[e];
            n.loadedFromTour && (n.loadedFromTour = !1);
          }
        }, P.mergeToursLayers = function() {
          P._tourLayers = !1;
          for (var t = !1, e = !1, n = r.enumerate(r.keys(P._allMapsTours)); n.moveNext(); ) {
            var a = n.current, s = P._allMapsTours[a];
            if (!r.keyExists(P._allMaps, s.get_name())) {
              var l = new xi(s.get_name(), 18);
              l.frame = s.frame, l.loadedFromTour = !0, P.get_allMaps()[l.get_name()] = l;
            }
          }
          P.connectAllChildren();
          for (var g = r.enumerate(r.keys(P._layerListTours)); g.moveNext(); ) {
            var a = g.current, _ = P._layerListTours[a];
            r.keyExists(P.get_layerList(), _.id) && (e || (t = !0, e = !0), t && P.deleteLayerByID(_.id, !0, !1)), r.keyExists(P.get_layerList(), _.id) ? _.cleanUp() : r.keyExists(P.get_allMaps(), _.get_referenceFrame()) && (P.get_layerList()[_.id] = _, P.get_allMaps()[_.get_referenceFrame()].layers.push(_));
          }
          r.clearKeys(P._layerListTours), r.clearKeys(P._allMapsTours), r.clearKeys(P._layerMapsTours), P.loadTree();
        }, P.connectAllChildren = function() {
          for (var t = r.enumerate(r.keys(P.get_allMaps())); t.moveNext(); ) {
            var e = t.current, n = P.get_allMaps()[e];
            r.emptyString(n.frame.parent) && !r.keyExists(P.get_layerMaps(), n.frame.name) ? P.get_layerMaps()[n.get_name()] = n : !r.emptyString(n.frame.parent) && r.keyExists(P.get_allMaps(), n.frame.parent) && (r.keyExists(P.get_allMaps()[n.frame.parent].childMaps, n.frame.name) || (P.get_allMaps()[n.frame.parent].childMaps[n.frame.name] = n, n.parent = P.get_allMaps()[n.frame.parent]));
          }
        }, P.deleteLayerByID = function(t, e, n) {
          if (r.keyExists(P.get_layerList(), t)) {
            var a = P.get_layerList()[t];
            return a.cleanUp(), e && r.remove(P.get_allMaps()[a.get_referenceFrame()].layers, a), delete P.get_layerList()[t], P._version++, n && P.loadTree(), !0;
          } else
            return !1;
        }, P._getFrameTarget = function(t, e) {
          var n = new yo(), a = $.get_empty();
          if (n.target = $.get_empty(), n.matrix = tt.get_identity(), !r.keyExists(P.get_allMaps(), e))
            return n;
          var s = [], l = P.get_allMaps()[e];
          for (s.push(l); l.frame.reference === 18; )
            l = l.parent, s.splice(0, 0, l);
          for (var g = t.get_world().clone(), _ = t.get_worldBaseNonRotating(), m = t.get_worldBase(), b = t.get_nominalRadius(), y = r.enumerate(s); y.moveNext(); ) {
            var M = y.current;
            M.frame.reference !== 18 && M.frame.reference !== 20 ? D.setupPlanetMatrix(t, we.parse("SolarSystemObjects", M.frame.name), $.get_empty(), !1) : (M.computeFrame(t), M.frame.useRotatingParentFrame() ? t.set_world(tt.multiplyMatrix(M.frame.worldMatrix, t.get_world())) : t.set_world(tt.multiplyMatrix(M.frame.worldMatrix, t.get_worldBaseNonRotating())), M.frame.referenceFrameType === 3 && t.set_worldBaseNonRotating(t.get_world().clone()), t.set_nominalRadius(M.frame.meanRadius));
          }
          a = t.get_world().transform(a);
          var A = t.get_world().transform($.create(0, 0, 1)), R = $.subtractVectors(t.get_world().transform($.create(0, 1, 0)), a);
          return R.normalize(), n.matrix = tt.lookAtLH(new $(), $.subtractVectors(A, a), R), t.set_nominalRadius(b), t.set_world(g), t.set_worldBaseNonRotating(_), t.set_worldBase(m), n.target = a, n;
        }, P._prepTourLayers = function() {
          if (qe.get_playing()) {
            var t = Z.singleton.uiController;
            if (t != null) {
              var e = t.get_tour();
              if (e.get_currentTourStop() != null && (t.updateTweenPosition(-1), !e.get_currentTourStop().get_keyFramed())) {
                e.get_currentTourStop()._updateLayerOpacity();
                for (var n = r.enumerate(r.keys(e.get_currentTourStop().layers)); n.moveNext(); ) {
                  var a = n.current, s = e.get_currentTourStop().layers[a];
                  r.keyExists(P.get_layerList(), s.id) && (P.get_layerList()[s.id].set_opacity(s.frameOpacity), P.get_layerList()[s.id].setParams(s.frameParams));
                }
              }
            }
          }
        }, P._draw = function(t, e, n, a, s, l) {
          if (r.keyExists(P.get_allMaps(), a)) {
            var g = P.get_allMaps()[a];
            if (!(!g.enabled || !r.keyCount(g.childMaps) && !g.layers.length && !(g.frame.showAsPoint || g.frame.showOrbitPath))) {
              if (qe.get_playing()) {
                var _ = Z.singleton.uiController;
                if (_ != null) {
                  var m = _.get_tour();
                  if (m.get_currentTourStop() != null) {
                    _.updateTweenPosition(-1), m.get_currentTourStop()._updateLayerOpacity();
                    for (var b = r.enumerate(r.keys(m.get_currentTourStop().layers)); b.moveNext(); ) {
                      var y = b.current, M = m.get_currentTourStop().layers[y];
                      r.keyExists(P.get_layerList(), M.id) && (P.get_layerList()[M.id].set_opacity(M.frameOpacity), P.get_layerList()[M.id].setParams(M.frameParams));
                    }
                  }
                }
              }
              var A = t.get_world(), R = t.get_worldBaseNonRotating(), F = t.get_nominalRadius();
              (g.frame.reference === 18 | g.frame.reference === 18) === 1 && (g.computeFrame(t), g.frame.referenceFrameType !== 1 && g.frame.referenceFrameType !== 2 ? t.set_world(tt.multiplyMatrix(g.frame.worldMatrix, t.get_world())) : t.set_world(tt.multiplyMatrix(g.frame.worldMatrix, t.get_worldBaseNonRotating())), t.set_nominalRadius(g.frame.meanRadius)), g.frame.showAsPoint;
              for (var O = 0; O < 2; O++)
                for (var B = r.enumerate(P.get_allMaps()[a].layers); B.moveNext(); ) {
                  var H = B.current;
                  if (!O && r.canCast(H, qi) || O === 1 && !r.canCast(H, qi)) {
                    var K = !1;
                    if (O || (K = !n && H.get_overrideDefaultLayer()), H.enabled && !K) {
                      var J = Q.utcToJulian(H.get_startTime()), it = Q.utcToJulian(H.get_endTime()), ot = Q.utcToJulian(H.get_startTime()) - (H.get_fadeType() === 1 || H.get_fadeType() === 3 ? H.get_fadeSpan() / 864e6 : 0), lt = Q.utcToJulian(H.get_endTime()) + (H.get_fadeType() === 2 || H.get_fadeType() === 3 ? H.get_fadeSpan() / 864e6 : 0);
                      if (Q.get_jNow() > ot && Q.get_jNow() < lt) {
                        var gt = 1;
                        if (Q.get_jNow() < J && (gt = (Q.get_jNow() - ot) / (H.get_fadeSpan() / 864e6)), Q.get_jNow() > it && (gt = (lt - Q.get_jNow()) / (H.get_fadeSpan() / 864e6)), H.set_astronomical(n), r.canCast(H, Ui)) {
                          var ut = r.safeCast(H, Ui);
                          ut.draw(t, e * gt, l);
                        } else
                          H.draw(t, e * gt, l);
                      }
                    }
                  }
                }
              if (s)
                for (var St = r.enumerate(r.keys(P.get_allMaps()[a].childMaps)); St.moveNext(); ) {
                  var y = St.current, mt = P.get_allMaps()[a].childMaps[y];
                  if (r.canCast(mt, xi)) {
                    if (mt.enabled && mt.frame.showOrbitPath && X.get_active().get_solarSystemOrbits() && X.get_active().get_solarSystemMinorOrbits())
                      if (mt.frame.referenceFrameType === 1) {
                        mt.frame.get_orbit() == null && mt.frame.set_orbit(new ga(mt.frame.get_elements(), 360, mt.frame.get_representativeColor(), 1, mt.parent.frame.meanRadius));
                        var Dt = t.get_world();
                        t.set_world(tt.multiplyMatrix(g.frame.worldMatrix, t.get_worldBaseNonRotating())), mt.frame.get_orbit().draw3D(t, 1 * 0.5, $.create(0, 0, 0)), t.set_world(Dt);
                      } else
                        mt.frame.referenceFrameType;
                    (mt.frame.reference === 18 || mt.frame.reference === 19) && P._draw(t, e, n, mt.get_name(), s, l);
                  }
                }
              t.set_nominalRadius(F), t.set_world(A), t.set_worldBaseNonRotating(R);
            }
          }
        }, P._getVisibleLayerList = function(t) {
          for (var e = {}, n = r.enumerate(r.keys(P.get_layerList())); n.moveNext(); ) {
            var a = n.current, s = P.get_layerList()[a];
            if (s.enabled) {
              var l = new Gs();
              l.startOpacity = l.endOpacity = s.get_opacity(), l.id = s.id, l.startParams = s.getParams(), r.keyExists(t, l.id) ? (l.endOpacity = t[l.id].endOpacity, l.endParams = t[l.id].endParams) : l.endParams = s.getParams(), e[s.id] = l;
            }
          }
          return e;
        }, P.setVisibleLayerList = function(t) {
          for (var e = r.enumerate(r.keys(P.get_layerList())); e.moveNext(); ) {
            var n = e.current, a = P.get_layerList()[n];
            a.enabled = r.keyExists(t, a.id);
            try {
              a.enabled && (a.set_opacity(t[a.id].frameOpacity), a.setParams(t[a.id].frameParams));
            } catch {
            }
          }
        }, P._preDraw = function(t, e, n, a, s) {
          if (r.keyExists(P.get_allMaps(), a)) {
            var l = P.get_allMaps()[a];
            if (!(!r.keyCount(l.childMaps) && !l.layers.length)) {
              if (qe.get_playing()) {
                var g = r.safeCast(Z.singleton.uiController, qe);
                if (g != null) {
                  var _ = g.get_tour();
                  if (_.get_currentTourStop() != null) {
                    g.updateTweenPosition(-1), _.get_currentTourStop()._updateLayerOpacity();
                    for (var m = r.enumerate(r.keys(_.get_currentTourStop().layers)); m.moveNext(); ) {
                      var b = m.current, y = _.get_currentTourStop().layers[b];
                      r.keyExists(P.get_layerList(), y.id) && (P.get_layerList()[y.id].set_opacity(y.frameOpacity), P.get_layerList()[y.id].setParams(y.frameParams));
                    }
                  }
                }
              }
              var M = t.get_world(), A = t.get_worldBaseNonRotating(), R = t.get_nominalRadius();
              l.frame.reference === 18 && (l.computeFrame(t), l.frame.referenceFrameType !== 1 ? t.set_world(tt.multiplyMatrix(l.frame.worldMatrix, t.get_world())) : t.set_world(tt.multiplyMatrix(l.frame.worldMatrix, t.get_worldBaseNonRotating())), t.set_nominalRadius(l.frame.meanRadius));
              for (var F = 0; F < 2; F++)
                for (var O = r.enumerate(P.get_allMaps()[a].layers); O.moveNext(); ) {
                  var B = O.current;
                  if ((!F && r.canCast(B, qi) || F === 1 && !r.canCast(B, qi)) && B.enabled) {
                    var H = Q.utcToJulian(B.get_startTime()), K = Q.utcToJulian(B.get_endTime()), J = Q.utcToJulian(B.get_startTime()) - (B.get_fadeType() === 1 || B.get_fadeType() === 3 ? B.get_fadeSpan() / 864e6 : 0), it = Q.utcToJulian(B.get_endTime()) + (B.get_fadeType() === 2 || B.get_fadeType() === 3 ? B.get_fadeSpan() / 864e6 : 0);
                    if (Q.get_jNow() > J && Q.get_jNow() < it) {
                      var ot = 1;
                      Q.get_jNow() < H && (ot = (Q.get_jNow() - J) / (B.get_fadeSpan() / 864e6)), Q.get_jNow() > K && (ot = (it - Q.get_jNow()) / (B.get_fadeSpan() / 864e6)), l.frame.reference || B.set_astronomical(!0), B.preDraw(t, e * ot);
                    }
                  }
                }
              if (s)
                for (var lt = r.enumerate(r.keys(P.get_allMaps()[a].childMaps)); lt.moveNext(); ) {
                  var b = lt.current, gt = P.get_allMaps()[a].childMaps[b];
                  (gt.frame.reference === 18 || gt.frame.reference === 19) && P._preDraw(t, e, n, gt.get_name(), s);
                }
              t.set_nominalRadius(R), t.set_world(M), t.set_worldBaseNonRotating(A);
            }
          }
        }, P.add = function(t, e) {
          r.keyExists(P.get_layerList(), t.id) || r.keyExists(P.get_allMaps(), t.get_referenceFrame()) && (P.get_layerList()[t.id] = t, P.get_allMaps()[t.get_referenceFrame()].layers.push(t), P._version++, e && P.loadTree());
        }, P.layerSelectionChanged = function(t) {
          if (P._selectedLayer = t, P._selectedLayer != null)
            if (r.canCast(P._selectedLayer, xi)) {
              var e = r.safeCast(P._selectedLayer, xi);
              e != null && P.set_currentMap(e.get_name());
            } else {
              var n = r.safeCast(P._selectedLayer, qi);
              if (n != null && r.canCast(n.get_imageSet().get_wcsImage(), ar))
                return;
            }
          Z.scriptInterface.setTimeSlider("left", ""), Z.scriptInterface.setTimeSlider("right", ""), Z.scriptInterface.setTimeSlider("title", pt.getLocalizedText(667, "Time Scrubber"));
        }, P.setTimeSliderValue = function(t) {
          var e = r.safeCast(P._selectedLayer, qi);
          e != null && r.canCast(e.get_imageSet().get_wcsImage(), ar);
        }, P.showLayerMenu = function(t, e, n) {
          if (P._lastMenuClick = Mt.create(e, n), P._selectedLayer = t, r.canCast(t, xi) ? P.set_currentMap(t.get_name()) : r.canCast(t, ai) && P.set_currentMap(t.get_referenceFrame()), r.canCast(t, ai) && !r.canCast(t, bo)) {
            var a = t;
            P._contextMenu = new un();
            var s = $t.create(pt.getLocalizedText(225, "Rename")), l = $t.create(pt.getLocalizedText(981, "Expand")), g = $t.create(pt.getLocalizedText(982, "Collapse")), _ = $t.create(pt.getLocalizedText(428, "Copy")), m = $t.create(pt.getLocalizedText(167, "Delete")), b = $t.create(pt.getLocalizedText(960, "Save...")), y = $t.create(pt.getLocalizedText(983, "Publish to Community...")), M = $t.create(pt.getLocalizedText(458, "Color/Opacity")), A = $t.create(pt.getLocalizedText(305, "Opacity")), R = $t.create(pt.getLocalizedText(20, "Properties")), F = $t.create(pt.getLocalizedText(1291, "Scale/Histogram")), O = $t.create(pt.getLocalizedText(683, "Lifetime")), B = new sr(), H = $t.create(pt.getLocalizedText(684, "Move to Top")), K = $t.create(pt.getLocalizedText(685, "Move Up")), J = $t.create(pt.getLocalizedText(686, "Move Down")), it = $t.create(pt.getLocalizedText(687, "Move to Bottom")), ot = $t.create(pt.getLocalizedText(957, "VO Table Viewer")), lt = new sr(), gt = $t.create(pt.getLocalizedText(1294, "Background Image Set"));
            if (H.click = P._top_Click, K.click = P._up_Click, J.click = P._down_Click, it.click = P._bottom_Click, b.click = P._saveMenu_Click, y.click = P._publishMenu_Click, l.click = P._expand_Click, g.click = P._collapse_Click, _.click = P._copyMenu_Click, M.click = P._colorMenu_Click, m.click = P._deleteMenu_Click, s.click = P._renameMenu_Click, R.click = P._propertiesMenu_Click, F.click = P.scaleMenu_click, gt.click = P._defaultImageset_Click, A.click = P._opacityMenu_Click, O.click = P._lifeTimeMenu_Click, ot.click = P._showViewer_Click, P._contextMenu.items.push(s), !a.get_opened() && a.getPrimaryUI() != null && a.getPrimaryUI().get_hasTreeViewNodes() && P._contextMenu.items.push(l), a.get_opened() && P._contextMenu.items.push(g), a.canCopyToClipboard(), P._contextMenu.items.push(m), P._contextMenu.items.push(lt), P._contextMenu.items.push(M), r.canCast(t, qi)) {
              P._contextMenu.items.push(gt);
              var ut = r.safeCast(t, qi);
              gt.checked = ut.get_overrideDefaultLayer();
            }
            if ((r.canCast(t, Ui) || r.canCast(t, za)) && P._contextMenu.items.push(R), r.canCast(t, kr) && P._contextMenu.items.push(ot), r.canCast(t, qi)) {
              var ut = r.safeCast(t, qi);
              P._contextMenu.items.push(F);
            }
            P.get_allMaps()[a.get_referenceFrame()].layers.length > 1 && (P._contextMenu.items.push(B), P._contextMenu.items.push(H), P._contextMenu.items.push(K), P._contextMenu.items.push(J), P._contextMenu.items.push(it)), P._contextMenu._show(Mt.create(e, n));
          } else if (r.canCast(t, xi)) {
            var St = r.safeCast(t, xi), mt = St.frame.reference.toString() === "Sandbox", Dt = St.frame.name === "Dome", yt = St.frame.name === "Sky";
            if (Dt)
              return;
            P._contextMenu = new un();
            var ue = $t.create(pt.getLocalizedText(1298, "Track this frame")), _e = $t.create(pt.getLocalizedText(1299, "Fly Here")), Qt = $t.create("Show Orbit"), Ft = $t.create(pt.getLocalizedText(674, "New Reference Frame")), vi = $t.create(pt.getLocalizedText(675, "New Layer Group")), Ei = $t.create(pt.getLocalizedText(166, "Add")), Li = $t.create("Add Light");
            $t.create(pt.getLocalizedText(956, "Add OData/table feed as Layer")), $t.create(pt.getLocalizedText(987, "New WMS Layer"));
            var ri = $t.create(pt.getLocalizedText(1300, "New Lat/Lng Grid")), Si = $t.create(pt.getLocalizedText(988, "New Great Circle"));
            $t.create(pt.getLocalizedText(989, "Import Orbital Elements"));
            var Je = $t.create(pt.getLocalizedText(1301, "Add Minor Planet")), Xi = $t.create(pt.getLocalizedText(167, "Delete")), Ee = $t.create(pt.getLocalizedText(425, "Paste"));
            $t.create(pt.getLocalizedText(1290, "Add to Timeline")), $t.create(pt.getLocalizedText(1280, "Add Keyframe"));
            var Yi = $t.create(pt.getLocalizedText(20, "Properties")), b = $t.create(pt.getLocalizedText(990, "Save Layers"));
            $t.create(pt.getLocalizedText(991, "Publish Layers to Community"));
            var B = new sr(), Ni = new sr(), lt = new sr(), he = $t.create("As Reference Frame"), ee = $t.create("As Orbital Line");
            if (ue.click = P._trackFrame_Click, _e.click = P._goTo_Click, he.click = P._addMpc_Click, ee.click = P._asOrbitalLines_Click, Je.dropDownItems.push(he), Je.dropDownItems.push(ee), Ei.click = P._addMenu_Click, vi.click = P._newLayerGroupMenu_Click, Ee.click = P._pasteLayer_Click, Ft.click = P._newMenu_Click, Xi.click = P._deleteFrameMenu_Click, Yi.click = P._framePropertiesMenu_Click, Si.click = P._addGreatCircle_Click, ri.click = P._addGirdLayer_Click, $t.create("Extract Orbit Layer"), St.frame.reference !== 19) {
              if ((Z.singleton.get_solarSystemMode() | Z.singleton.sandboxMode) === 1) {
                var Xe = !1;
                if (St.frame.reference !== 18 && !Z.singleton.sandboxMode)
                  try {
                    var xe = St.frame.reference.toString();
                    if (xe !== "Sandbox") {
                      var Ir = we.parse("SolarSystemObjects", xe), or = Ir, Hi = Math.pow(2, or);
                      Qt.checked = !!(X.get_active().get_planetOrbitsFilter() & Hi), Qt.click = P._showOrbitPlanet_Click, Qt.tag = Hi.toString();
                    }
                  } catch {
                  }
                else
                  !mt && !yt && (P._contextMenu.items.push(ue), Xe = !0), Qt.checked = St.frame.showOrbitPath, Qt.click = P._showOrbit_Click;
                Xe && P._contextMenu.items.push(lt), !yt && !mt && (P._contextMenu.items.push(Qt), P._contextMenu.items.push(Ni)), St.frame.reference.toString() === "Sandbox" && P._contextMenu.items.push(Li);
              }
              yt || P._contextMenu.items.push(Ft);
            }
            yt || (P._contextMenu.items.push(Si), P._contextMenu.items.push(ri)), (St.frame.reference !== 19 && St.frame.name === "Sun" || St.frame.reference === 19 && St.parent != null && St.parent.frame.name === "Sun") && P._contextMenu.items.push(Je), St.frame.reference === 18 && St.frame.referenceFrameType === 1 && St.parent != null && St.parent.frame.name, P._contextMenu.items.push(Ee), St.frame.reference === 19 && P._contextMenu.items.push(Xi), St.frame.reference === 18 && (P._contextMenu.items.push(Xi), P._contextMenu.items.push(Yi)), P._contextMenu.items.push(B), P._contextMenu._show(Mt.create(e, n));
          }
        }, P._publishMenu_Click = function(t, e) {
        }, P._addGirdLayer_Click = function(t, e) {
          var n = new Zs();
          n.enabled = !0, n.set_name("Lat-Lng Grid"), P.get_layerList()[n.id] = n, n.set_referenceFrame(P._currentMap), P.get_allMaps()[P._currentMap].layers.push(n), P.get_allMaps()[P._currentMap].open = !0, P._version++, P.loadTree();
        }, P._trackFrame_Click = function(t, e) {
          var n = P._selectedLayer;
          Z.singleton.renderContext.set_solarSystemTrack(20), Z.singleton.renderContext.set_trackingFrame(n.get_name()), Z.singleton.renderContext.viewCamera.zoom = Z.singleton.renderContext.targetCamera.zoom = 1e-9;
        }, P._goTo_Click = function(t, e) {
        }, P._saveMenu_Click = function(t, e) {
        }, P._expand_Click = function(t, e) {
        }, P._collapse_Click = function(t, e) {
        }, P._copyMenu_Click = function(t, e) {
          if (P._selectedLayer != null && r.canCast(P._selectedLayer, ai)) {
            var n = P._selectedLayer;
            n.copyToClipboard();
          }
        }, P._newLayerGroupMenu_Click = function(t, e) {
        }, P._importTLEFile = function(t) {
        }, P._makeLayerGroupNow = function(t) {
          var e = P._selectedLayer;
          P._makeLayerGroup(t, e);
        }, P._makeLayerGroup = function(t, e) {
          var n = new Ki();
          n.name = t, n.reference = 19;
          var a = new xi(n.name, 19);
          a.frame = n, a.frame._systemGenerated = !1, e.addChild(a), a.frame.parent = e.get_name(), P.get_allMaps()[n.name] = a, P._version++;
        }, P._lifeTimeMenu_Click = function(t, e) {
        }, P._deleteFrameMenu_Click = function(t, e) {
        }, P._framePropertiesMenu_Click = function(t, e) {
          var n = P._selectedLayer;
          P.get_referenceFramePropsDialog().show(n.frame, e);
        }, P._newMenu_Click = function(t, e) {
          var n = new Ki();
          P.get_frameWizardDialog().show(n, e);
        }, P.referenceFrameWizardFinished = function(t) {
          var e = P._selectedLayer, n = new xi(t.name, 18);
          r.keyExists(P.get_allMaps(), t.name) || (n.frame = t, e.addChild(n), n.frame.parent = e.get_name(), P.get_allMaps()[t.name] = n, P._version++, P.loadTree());
        }, P.pasteFromTle = function(t, e) {
          for (var n = "", a = "", s = 0; s < t.length; s++)
            t[s] = r.trim(t[s]), t[s].length === 69 && Ki.isTLECheckSumGood(t[s]) && (!n.length && t[s].substring(0, 1) === "1" && (n = t[s]), !a.length && t[s].substring(0, 1) === "2" && (a = t[s]));
          return n.length === 69 && a.length === 69 ? (e.fromTLE(n, a, 3986004418e5), !0) : !1;
        }, P._opacityMenu_Click = function(t, e) {
        }, P._defaultImageset_Click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, qi);
          n.set_overrideDefaultLayer(!n.get_overrideDefaultLayer());
        }, P._propertiesMenu_Click = function(t, e) {
          if (r.canCast(P._selectedLayer, Ui)) {
            var n = P._selectedLayer;
            P.get_dataVizWizardDialog().show(n, e);
          }
          r.canCast(P._selectedLayer, za) && P.get_greatCircleDlg().show(P._selectedLayer, new r.EventArgs());
        }, P._renameMenu_Click = function(t, e) {
          var n = P._selectedLayer, a = new Ba(pt.getLocalizedText(225, "Rename"), pt.getLocalizedText(228, "New Name"), n.get_name());
          a.show(P._lastMenuClick, function() {
            r.emptyString(a.text) || (n.set_name(a.text), P._version++, P.loadTree());
          });
        }, P._colorMenu_Click = function(t, e) {
          var n = P._selectedLayer, a = new Xs();
          n.get_color() != null && (a.color = n.get_color()), a.callBack = function() {
            n.set_color(a.color);
          }, a.show(e);
        }, P._addMenu_Click = function(t, e) {
        }, P._deleteMenu_Click = function(t, e) {
          P._deleteSelectedLayer();
        }, P._deleteSelectedLayer = function() {
          if (P._selectedLayer != null && r.canCast(P._selectedLayer, ai)) {
            var t = P._selectedLayer;
            delete P.get_layerList()[t.id], r.remove(P.get_allMaps()[P.get_currentMap()].layers, t), t.cleanUp(), t.set_version(t.get_version() + 1) - 1, P.loadTree(), P._version++;
          }
        }, P.scaleMenu_click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, qi);
          if (n != null) {
            var a = new $n();
            a.image = n.getFitsImage(), a.layer = n, a.show(Mt.create(200, 200));
          }
        }, P._showViewer_Click = function(t, e) {
          if (r.canCast(P._selectedLayer, kr)) {
            var n = r.safeCast(P._selectedLayer, kr);
            Z.scriptInterface.displayVoTableLayer(n);
          }
        }, P._bottom_Click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, ai);
          n != null && (r.remove(P.get_allMaps()[n.get_referenceFrame()].layers, n), P.get_allMaps()[n.get_referenceFrame()].layers.push(n)), P._version++, P.loadTree();
        }, P._down_Click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, ai);
          if (n != null) {
            var a = P.get_allMaps()[n.get_referenceFrame()].layers.lastIndexOf(n);
            a < P.get_allMaps()[n.get_referenceFrame()].layers.length - 1 && (r.remove(P.get_allMaps()[n.get_referenceFrame()].layers, n), P.get_allMaps()[n.get_referenceFrame()].layers.splice(a + 1, 0, n));
          }
          P._version++, P.loadTree();
        }, P._up_Click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, ai);
          if (n != null) {
            var a = P.get_allMaps()[n.get_referenceFrame()].layers.lastIndexOf(n);
            a > 0 && (r.remove(P.get_allMaps()[n.get_referenceFrame()].layers, n), P.get_allMaps()[n.get_referenceFrame()].layers.splice(a - 1, 0, n));
          }
          P._version++, P.loadTree();
        }, P._top_Click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, ai);
          n != null && (r.remove(P.get_allMaps()[n.get_referenceFrame()].layers, n), P.get_allMaps()[n.get_referenceFrame()].layers.splice(0, 0, n)), P._version++, P.loadTree();
        }, P._pasteLayer_Click = function(t, e) {
          P.get_dataVizWizardDialog().show(P.get_currentMap(), e);
        }, P.createSpreadsheetLayer = function(t, e, n) {
          var a = new Ui();
          return a.loadFromString(n, !1, !1, !1, !0), a.set_name(e), P.addSpreadsheetLayer(a, t), a;
        }, P.addSpreadsheetLayer = function(t, e) {
          t.enabled = !0, t.set_referenceFrame(e), P.add(t, !0);
        }, P._showOrbitPlanet_Click = function(t, e) {
          try {
            var n = parseInt(t.tag.toString());
            X.get_globalSettings().get_planetOrbitsFilter() & n ? X.get_globalSettings().set_planetOrbitsFilter(X.get_globalSettings().get_planetOrbitsFilter() & ~n) : X.get_globalSettings().set_planetOrbitsFilter(X.get_globalSettings().get_planetOrbitsFilter() | n);
          } catch {
          }
        }, P._showOrbit_Click = function(t, e) {
          var n = r.safeCast(P._selectedLayer, xi);
          n.frame.showOrbitPath = !n.frame.showOrbitPath;
        }, P._addGreatCircle_Click = function(t, e) {
          P._addGreatCircleLayer();
        }, P._addMpc_Click = function(t, e) {
          var n = P._selectedLayer, a = new Ba(pt.getLocalizedText(1302, "Minor planet name or designation"), pt.getLocalizedText(238, "Name"), ""), s = !1;
          do
            if (a.showDialog() === 1)
              if (r.keyExists(n.childMaps, a.text))
                s = !0;
              else
                try {
                  P._getMpc(a.text, n), s = !1;
                } catch {
                  s = !0;
                }
            else
              s = !1;
          while (s);
        }, P._asOrbitalLines_Click = function(t, e) {
          var n = P._selectedLayer, a = new Ba(pt.getLocalizedText(1302, "Minor planet name or designation"), pt.getLocalizedText(238, "Name"), "");
          a.show(Di.get_position(), function() {
            r.keyExists(n.childMaps, a.text) || P._getMpcAsTLE(a.text, n);
          });
        }, P._getMpcAsTLE = function(t, e) {
          var n = new _r("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + t);
          n.onStateChange = function() {
            if (n.get_state() === 1) {
              var a = n.getText(), s = a.indexOf("show-orbit-button"), l = a.indexOf("/form", s), g = a.substring(s, l), _ = t, m = new Ki();
              m.oblateness = 0, m.showOrbitPath = !0, m.showAsPoint = !0, m.epoch = Q.utcToJulian(r.date(P._getValueByID(g, "epoch").substring(0, 10))), m.semiMajorAxis = parseFloat(P._getValueByID(g, "a")) * 149598e3 * 1e3, m.referenceFrameType = 1, m.inclination = parseFloat(P._getValueByID(g, "incl")), m.longitudeOfAscendingNode = parseFloat(P._getValueByID(g, "node")), m.eccentricity = parseFloat(P._getValueByID(g, "e")), m.meanAnomolyAtEpoch = parseFloat(P._getValueByID(g, "m")), m.meanDailyMotion = hi.meanMotionFromSemiMajorAxis(parseFloat(P._getValueByID(g, "a"))), m.argumentOfPeriapsis = parseFloat(P._getValueByID(g, "peri")), m.scale = 1, m.semiMajorAxisUnits = 1, m.meanRadius = 10, m.oblateness = 0;
              var b = _ + `
` + m.toTLE();
              P._loadOrbitsFile(t, b, e.get_name()), P.loadTree();
            }
          }, n.send();
        }, P._getMpc = function(t, e) {
          var n = new _r("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + t);
          n.onStateChange = function() {
            var a = n.getText(), s = a.indexOf("show-orbit-button"), l = a.indexOf("/form", s), g = a.substring(s, l), _ = t, m = new xi(r.trim(_), 18);
            m.frame.oblateness = 0, m.frame.showOrbitPath = !0, m.frame.showAsPoint = !0, m.frame.epoch = Q.utcToJulian(r.date(P._getValueByID(g, "epoch").substring(0, 10))), m.frame.semiMajorAxis = parseFloat(P._getValueByID(g, "a")) * 149598e3 * 1e3, m.frame.referenceFrameType = 1, m.frame.inclination = parseFloat(P._getValueByID(g, "incl")), m.frame.longitudeOfAscendingNode = parseFloat(P._getValueByID(g, "node")), m.frame.eccentricity = parseFloat(P._getValueByID(g, "e")), m.frame.meanAnomolyAtEpoch = parseFloat(P._getValueByID(g, "m")), m.frame.meanDailyMotion = hi.meanMotionFromSemiMajorAxis(parseFloat(P._getValueByID(g, "a"))), m.frame.argumentOfPeriapsis = parseFloat(P._getValueByID(g, "peri")), m.frame.scale = 1, m.frame.semiMajorAxisUnits = 1, m.frame.meanRadius = 10, m.frame.oblateness = 0, r.keyExists(P.get_allMaps()[e.get_name()].childMaps, r.trim(_)) || P.get_allMaps()[e.get_name()].addChild(m), P.get_allMaps()[m.get_name()] = m, m.frame.parent = e.get_name(), P._makeLayerGroup("Minor Planet", m), P.loadTree();
          };
        }, P._getValueByID = function(t, e) {
          var n = t.indexOf('id="' + e + '"');
          n = t.indexOf("value=", n) + 7;
          var a = t.indexOf('"', n);
          return t.substr(n, a - n);
        }, P._addGreatCircleLayer = function() {
          var t = new za(), e = Z.singleton.renderContext.viewCamera;
          t.set_latStart(e.lat), t.set_latEnd(e.lat - 5), t.set_lngStart(e.lng), t.set_lngEnd(e.lng + 5), t.set_width(4), t.enabled = !0, t.set_name(pt.getLocalizedText(1144, "Great Circle Route")), P.get_layerList()[t.id] = t, t.set_referenceFrame(P._currentMap), P.get_allMaps()[P._currentMap].layers.push(t), P.get_allMaps()[P._currentMap].open = !0, P._version++, P.loadTree(), P.get_greatCircleDlg().show(t, new r.EventArgs());
        }, P._loadOrbitsFile = function(t, e, n) {
          var a = new Ks();
          return a.loadString(e), a.enabled = !0, a.set_name(t), P.get_layerList()[a.id] = a, a.set_referenceFrame(n), P.get_allMaps()[n].layers.push(a), P.get_allMaps()[n].open = !0, P._version++, P.loadTree(), a;
        };
        var Zu = {};
        function xi(t, e) {
          this.childMaps = {}, this.parent = null, this.layers = [], this.open = !1, this.enabled = !0, this.loadedFromTour = !1, this.frame = new Ki(), this.set_name(t), this.frame.reference = e;
          var n = 6371e3;
          switch (e) {
            case 0:
              break;
            case 1:
              break;
            case 2:
              break;
            case 3:
              n = 696e6;
              break;
            case 4:
              n = 2439700;
              break;
            case 5:
              n = 6051800;
              break;
            case 6:
              n = 6371e3;
              break;
            case 7:
              n = 339e4;
              break;
            case 8:
              n = 69911e3;
              break;
            case 9:
              n = 58232e3;
              break;
            case 10:
              n = 25362e3;
              break;
            case 11:
              n = 24622e3;
              break;
            case 12:
              n = 1161e3;
              break;
            case 13:
              n = 1737100;
              break;
            case 14:
              n = 1821500;
              break;
            case 15:
              n = 1561e3;
              break;
            case 16:
              n = 2631200;
              break;
            case 17:
              n = 2410300;
              break;
          }
          this.frame.meanRadius = n;
        }
        var Ku = {
          addChild: function(t) {
            t.parent = this, this.childMaps[t.get_name()] = t;
          },
          get_name: function() {
            return this.frame.name;
          },
          set_name: function(t) {
            return this.frame.name = t, t;
          },
          computeFrame: function(t) {
            this.frame.reference === 18 && this.frame.computeFrame(t);
          },
          toString: function() {
            return this.get_name();
          }
        };
        function bo() {
        }
        var Wu = {};
        function Ju() {
        }
        var Qu = {};
        function yo() {
        }
        var tc = {};
        function Pn() {
        }
        var ec = {
          get_hasTreeViewNodes: function() {
            return !1;
          },
          getTreeNodes: function() {
            return null;
          },
          getNodeContextMenu: function(t) {
            return null;
          },
          setUICallbacks: function(t) {
          }
        };
        function ic() {
          this._tag = null, this._isChecked = !1, this._isEnabled = !0, this._subMenus = null;
        }
        var rc = {
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name = t, t;
          },
          get_tag: function() {
            return this._tag;
          },
          set_tag: function(t) {
            return this._tag = t, t;
          },
          get_checked: function() {
            return this._isChecked;
          },
          set_checked: function(t) {
            return this._isChecked = t, t;
          },
          get_enabled: function() {
            return this._isEnabled;
          },
          set_enabled: function(t) {
            return this._isEnabled = t, t;
          },
          add_menuItemSelected: function(t) {
            this.__menuItemSelected = r.bindAdd(this.__menuItemSelected, t);
          },
          remove_menuItemSelected: function(t) {
            this.__menuItemSelected = r.bindSub(this.__menuItemSelected, t);
          },
          fireMenuItemSelected: function() {
            this.__menuItemSelected != null && this.__menuItemSelected(this);
          },
          get_subMenus: function() {
            return this._subMenus == null && (this._subMenus = []), this._subMenus;
          }
        };
        function ts() {
          this._parent = null, this._level = 0, this._open = !1, this._isChecked = !1, this._bold = !1, this._color = Pt.get_white(), this._nodes = null;
        }
        var nc = {
          add_nodeChecked: function(t) {
            this.__nodeChecked = r.bindAdd(this.__nodeChecked, t);
          },
          remove_nodeChecked: function(t) {
            this.__nodeChecked = r.bindSub(this.__nodeChecked, t);
          },
          fireNodeChecked: function(t) {
            this.__nodeChecked != null && this.__nodeChecked(this, t);
          },
          add_nodeUpdated: function(t) {
            this.__nodeUpdated = r.bindAdd(this.__nodeUpdated, t);
          },
          remove_nodeUpdated: function(t) {
            this.__nodeUpdated = r.bindSub(this.__nodeUpdated, t);
          },
          fireNodeUpdated: function() {
            this.__nodeUpdated != null && this.__nodeUpdated(this);
          },
          add_nodeSelected: function(t) {
            this.__nodeSelected = r.bindAdd(this.__nodeSelected, t);
          },
          remove_nodeSelected: function(t) {
            this.__nodeSelected = r.bindSub(this.__nodeSelected, t);
          },
          fireNodeSelected: function() {
            this.__nodeSelected != null && this.__nodeSelected(this);
          },
          add_nodeActivated: function(t) {
            this.__nodeActivated = r.bindAdd(this.__nodeActivated, t);
          },
          remove_nodeActivated: function(t) {
            this.__nodeActivated = r.bindSub(this.__nodeActivated, t);
          },
          fireNodeActivated: function() {
            this.__nodeActivated != null && this.__nodeActivated(this);
          },
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name !== t && (this._name = t, this.fireNodeUpdated()), t;
          },
          get_parent: function() {
            return this._parent;
          },
          set_parent: function(t) {
            return this._parent = t, t;
          },
          get_level: function() {
            return this._level;
          },
          set_level: function(t) {
            return this._level = t, t;
          },
          get_tag: function() {
            return this._tag;
          },
          set_tag: function(t) {
            return this._tag = t, t;
          },
          get_referenceTag: function() {
            return this._referenceTag;
          },
          set_referenceTag: function(t) {
            return this._referenceTag = t, t;
          },
          get_opened: function() {
            return this._open;
          },
          set_opened: function(t) {
            return this._open !== t && (this._open = t, this.fireNodeUpdated()), t;
          },
          get_checked: function() {
            return this._isChecked;
          },
          set_checked: function(t) {
            return this._isChecked !== t && (this._isChecked = t, this.fireNodeUpdated()), t;
          },
          get_bold: function() {
            return this._bold;
          },
          set_bold: function(t) {
            return this._bold !== t && (this._bold = t, this.fireNodeUpdated()), t;
          },
          get_color: function() {
            return this._color;
          },
          set_color: function(t) {
            return this._color !== t && (this._color = t, this.fireNodeUpdated()), t;
          },
          add: function(t) {
            var e = new ts();
            return e.set_name(t), e.set_parent(this), e.set_level(this.get_level() + 1), this.get_nodes().push(e), e;
          },
          get_nodes: function() {
            return this._nodes == null && (this._nodes = []), this._nodes;
          }
        };
        function Ra() {
          this.startIndex = 0, this.indexCount = 0, this.materialIndex = 0;
        }
        var ac = {};
        function En() {
          this.boundingSphere = new ha();
        }
        En.create = function(t, e) {
          var n = new En();
          n.vertices = t, n.indices = e;
          for (var a = new Array(t.length), s = 0; s < t.length; ++s)
            a[s] = t[s].get_position();
          return n.boundingSphere = kn.findEnclosingSphereFast(a), n;
        }, En.createTangent = function(t, e) {
          var n = new En();
          n.tangentVertices = t, n.indices = e;
          for (var a = new Array(n.tangentVertices.length), s = 0; s < n.tangentVertices.length; ++s)
            a[s] = n.tangentVertices[s].get_position();
          return n.boundingSphere = kn.findEnclosingSphereFast(a), n;
        };
        var sc = {
          dispose: function() {
            this.vertexBuffer != null && (this.vertexBuffer.dispose(), this.vertexBuffer = null), this.tangentVertexBuffer != null && (this.tangentVertexBuffer.dispose(), this.tangentVertexBuffer = null), this.indexBuffer != null && (this.indexBuffer.dispose(), this.indexBuffer = null);
          },
          setObjects: function(t) {
            this._objects = t;
          },
          commitToDevice: function() {
            this.vertices != null ? this.vertexBuffer = os.create(this.vertices) : this.tangentVertices != null && (this.tangentVertexBuffer = ls.create(this.tangentVertices)), this.indexBuffer = new po(new Uint32Array(this.indices));
          },
          beginDrawing: function(t) {
            this.vertexBuffer != null ? t._setVertexBuffer(this.vertexBuffer) : this.tangentVertexBuffer != null && t._setVertexBuffer(this.tangentVertexBuffer), this.indexBuffer != null && t._setIndexBuffer(this.indexBuffer);
          },
          drawSubset: function(t, e) {
            this.indexBuffer == null || this._objects == null || this.drawHierarchy(this._objects, e, t, 0);
          },
          drawHierarchy: function(t, e, n, a) {
            if (!(a > 1212))
              for (var s = r.enumerate(t); s.moveNext(); ) {
                var l = s.current;
                if (l.drawGroup != null && l.enabled)
                  for (var g = r.enumerate(l.drawGroup); g.moveNext(); ) {
                    var _ = g.current;
                    _.materialIndex === e && n.gl.drawElements(4, _.indexCount, 5125, _.startIndex * 4);
                  }
                this.drawHierarchy(l.children, e, n, a + 1);
              }
          },
          get_objects: function() {
            return this._objects;
          },
          set_objects: function(t) {
            return this._objects = t, t;
          }
        };
        function Ns() {
          this.index = 0;
        }
        var oc = {};
        function cr(t, e, n, a, s, l) {
          this.flipHandedness = !1, this.flipV = !0, this.smooth = !0, this._mesh = null, this._meshMaterials = [], this._meshTextures = [], this._meshSpecularTextures = [], this._meshNormalMaps = [], this.meshFilenames = [], this.color = Pt.get_white(), this._textureCache = {}, this._matFiles = new Array(0), this._matFileIndex = 0, this.objects = [], this._matLib = {}, this._textureLib = {}, this._tourDocument = null, this.issLayer = !1, this._readyToRender = !1, this.useCurrentAmbient = !1, this._dirty = !0, this.color = l, this.smooth = s, this.flipV = n, this.flipHandedness = a, this.filename = e, r.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(t, this.filename) : this._loadMeshFrom3ds(t, this.filename, 1);
        }
        cr._compareVector3 = function(t, e) {
          return t.x < e.x ? -1 : t.x > e.x ? 1 : t.y < e.y ? -1 : t.y > e.y ? 1 : t.z < e.z ? -1 : t.z > e.z ? 1 : 0;
        }, cr._compareVector = function(t, e) {
          return t.x < e.x ? -1 : t.x > e.x ? 1 : t.y < e.y ? -1 : t.y > e.y ? 1 : 0;
        }, cr._getMaterialID = function(t, e) {
          for (var n = 0, a = r.enumerate(e); a.moveNext(); ) {
            var s = a.current;
            if (s === t)
              return n;
            n++;
          }
          return -1;
        }, cr._disposeTextureList = function(t) {
          if (t != null) {
            for (var e = 0; e < t.length; ++e)
              t[e] != null && (t[e].dispose(), t[e] = null);
            t.length = 0;
          }
        };
        var lc = {
          _reload: function() {
            this.issLayer || (this.dispose(), r.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(this._tourDocument, this.filename) : this._loadMeshFrom3ds(this._tourDocument, this.filename, 1));
          },
          _calculateVertexNormalsMerged: function(t, e, n) {
            if (!t.length)
              return null;
            t.length;
            for (var a = Math.floor(e.length / 3), s = [], l = 0; l < t.length; ++l) {
              var g = new Ns();
              g.position = t[l].get_position(), g.index = l, s.push(g);
            }
            s.sort(function(_e, Qt) {
              return cr._compareVector3(_e.position, Qt.position);
            });
            for (var _ = new Array(s.length), m = 0, l = 0; l < s.length; l++)
              (!l || cr._compareVector3(s[l].position, s[l - 1].position)) && ++m, _[s[l].index] = m - 1;
            for (var b = new Array(m), y = 0; y < m; y++)
              b[y] = 0;
            for (var M = r.enumerate(e); M.moveNext(); ) {
              var l = M.current, A = _[l];
              b[A]++;
            }
            for (var R = new Array(m), y = 0; y < m; ++y) {
              var F = b[y];
              if (F > 0) {
                R[y] = new Array(F);
                for (var O = 0; O < F; O++)
                  R[y][O] = 0;
              }
            }
            for (var y = 0; y < e.length; ++y) {
              var B = Math.floor(y / 3), A = _[e[y]];
              R[A][--b[A]] = B;
            }
            for (var H = new Array(a), y = 0; y < a; ++y) {
              var K = e[y * 3 + 0], J = e[y * 3 + 1], it = e[y * 3 + 2], ot = $.subtractVectors(t[J].get_position(), t[K].get_position()), lt = $.subtractVectors(t[it].get_position(), t[J].get_position());
              H[y] = $.cross(ot, lt), H[y].normalize();
            }
            for (var gt = a * 3, ut = new Array(gt), St = Math.min(0.9999, Math.cos(n)), y = 0; y < gt; ++y) {
              for (var l = e[y], A = _[l], mt = H[Math.floor(y / 3)], Dt = new $(), yt = r.enumerate(R[A]); yt.moveNext(); ) {
                var B = yt.current, ue = H[B];
                $.dot(mt, ue) > St && Dt.add(ue);
              }
              ut[y] = Dt, ut[y].normalize();
            }
            return ut;
          },
          _calculateVertexTangents: function(t, e, n) {
            if (!t.length)
              return null;
            t.length;
            for (var a = Math.floor(e.length / 3), s = [], l = 0; l < t.length; ++l) {
              var g = new Ns();
              g.position = t[l].get_position(), g.index = l, s.push(g);
            }
            s.sort(function(Xi, Ee) {
              return cr._compareVector3(Xi.position, Ee.position);
            });
            for (var _ = new Array(s.length), m = 0, l = 0; l < s.length; l++)
              (!l || cr._compareVector3(s[l].position, s[l - 1].position)) && ++m, _[s[l].index] = m - 1;
            for (var b = new Array(m), y = 0; y < m; y++)
              b[y] = 0;
            for (var M = r.enumerate(e); M.moveNext(); ) {
              var l = M.current, A = _[l];
              b[A]++;
            }
            for (var R = new Array(m), y = 0; y < m; ++y) {
              var F = b[y];
              if (F > 0) {
                R[y] = new Array(F);
                for (var O = 0; O < F; O++)
                  R[y][O] = 0;
              }
            }
            for (var y = 0; y < e.length; ++y) {
              var B = Math.floor(y / 3), A = _[e[y]];
              R[A][--b[A]] = B;
            }
            for (var H = new Array(a), y = 0; y < a; ++y) {
              var K = t[e[y * 3 + 0]], J = t[e[y * 3 + 1]], it = t[e[y * 3 + 2]], ot = $.subtractVectors(J.get_position(), K.get_position()), lt = $.subtractVectors(it.get_position(), K.get_position()), gt = J.tu - K.tu, ut = J.tv - K.tv, St = it.tu - K.tu, mt = it.tv - K.tv, Dt = gt * mt - ut * St;
              if (Math.abs(Dt) < 1e-6)
                ot.lengthSq() > 0 ? (H[y] = ot, H[y].normalize()) : H[y] = $.create(1, 0, 0);
              else {
                var yt = 1 / Dt, ue = mt * yt, _e = -ut * yt;
                H[y] = $.addVectors($.multiplyScalar(ot, ue), $.multiplyScalar(lt, _e)), H[y].normalize();
              }
            }
            for (var Qt = a * 3, Ft = new Array(Qt), vi = Math.min(0.9999, Math.cos(n)), y = 0; y < Qt; ++y) {
              for (var l = e[y], A = _[l], Ei = H[Math.floor(y / 3)], Li = new $(), ri = r.enumerate(R[A]); ri.moveNext(); ) {
                var B = ri.current, Si = H[B];
                $.dot(Ei, Si) > vi && Li.add(Si);
              }
              var Je = t[l].get_normal();
              Ft[y] = $.subtractVectors(Li, $.multiplyScalar(Je, $.dot(Je, Li))), Ft[y].normalize();
            }
            return Ft;
          },
          _calculateVertexNormals: function(t, e, n) {
            for (var a = t.length, s = Math.floor(e.length / 3), l = new Array(a), g = r.enumerate(e); g.moveNext(); ) {
              var _ = g.current;
              l[_]++;
            }
            for (var m = new Array(a), b = 0; b < a; ++b) {
              var y = l[b];
              y > 0 && (m[b] = new Array(y));
            }
            for (var b = 0; b < e.length; ++b) {
              var M = Math.floor(b / 3), _ = e[b];
              m[_][--l[_]] = M;
            }
            for (var A = new Array(s), b = 0; b < s; ++b) {
              var R = e[b * 3 + 0], F = e[b * 3 + 1], O = e[b * 3 + 2], B = $.subtractVectors(t[F].get_position(), t[R].get_position()), H = $.subtractVectors(t[O].get_position(), t[F].get_position());
              A[b] = $.cross(B, H), A[b].normalize();
            }
            for (var K = s * 3, J = new Array(K), it = Math.min(0.9999, Math.cos(n)), b = 0; b < K; ++b) {
              for (var _ = e[b], ot = A[Math.floor(b / 3)], lt = new $(), gt = r.enumerate(m[_]); gt.moveNext(); ) {
                var M = gt.current, ut = A[M];
                $.dot(ot, ut) > it && lt.add(ut);
              }
              J[b] = lt, J[b].normalize();
            }
            return J;
          },
          _addMaterial: function(t) {
            for (this._meshMaterials.push(t); this._meshTextures.length < this._meshMaterials.length; )
              this._meshTextures.push(null);
            for (; this._meshSpecularTextures.length < this._meshMaterials.length; )
              this._meshSpecularTextures.push(null);
            for (; this._meshNormalMaps.length < this._meshMaterials.length; )
              this._meshNormalMaps.push(null);
          },
          _loadColorChunk: function(t) {
            var e = t.readUInt16(), n = t.readUInt32(), a = Pt.get_black();
            if ((e === 16 || e === 19) && n === 18) {
              var s = Math.max(0, Math.min(1, t.readSingle())), l = Math.max(0, Math.min(1, t.readSingle())), g = Math.max(0, Math.min(1, t.readSingle()));
              a = j.fromArgb(255, r.truncate(255 * s), r.truncate(255 * l), r.truncate(255 * g));
            } else
              (e === 17 || e === 18) && n === 9 ? a = j.fromArgb(255, t.readByte(), t.readByte(), t.readByte()) : t.readBytes(n - 6);
            return a;
          },
          _loadPercentageChunk: function(t) {
            var e = t.readUInt16(), n = t.readUInt32(), a = 0;
            return e === 48 && n === 8 ? a = t.readUInt16() : e === 49 && n === 10 ? a = t.readSingle() : t.readBytes(n - 6), a;
          },
          _loadMeshFromObj: function(t, e) {
            var n = this;
            this.filename = e, this._tourDocument = t;
            var a = t.getFileBlob(e), s = new FileReader();
            s.onloadend = function(l) {
              n._matFiles = n._readObjMaterialsFromBin(r.safeCast(s.result, String)), n._matFileIndex = 0, n._loadMatLib(r.safeCast(s.result, String));
            }, s.readAsText(a);
          },
          _readObjMaterialsFromBin: function(t) {
            for (var e = [], n = t.split(`
`), a = r.enumerate(n); a.moveNext(); ) {
              var s = a.current, l = r.replaceString(s, "  ", " "), g = r.trim(l).split(" ");
              if (g.length > 0)
                switch (g[0]) {
                  case "mtllib":
                    var _ = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), m = _ + g[1];
                    e.push(m);
                    break;
                }
            }
            return e;
          },
          _readObjFromBin: function(t) {
            var e = !1, n = [], a = new Wn();
            a.name = "Default";
            var s = [], l = [], g = [], _ = [];
            l.push(new $()), g.push(new $()), _.push(new Mt());
            var m = [], b = -1, y = new Qn(), M = new Ra(), A = 0;
            y = new Qn(), y.diffuse = this.color, y.ambient = this.color, y.specular = Pt.get_white(), y.specularSharpness = 30, y.opacity = 1, y.isDefault = !0, M.startIndex = 0, M.indexCount = 0, M.materialIndex = 0;
            for (var R = t.split(`
`), F = r.enumerate(R); F.moveNext(); ) {
              var O = F.current, B = r.replaceString(O, "  ", " "), H = r.trim(B).split(" ");
              if (H.length > 0)
                switch (H[0]) {
                  case "mtllib":
                    break;
                  case "usemtl":
                    var K = H[1];
                    if (r.keyExists(this._matLib, K) && (b === -1 && A > 0 && (this._addMaterial(y), b++), b > -1 && (M.indexCount = A - M.startIndex, a.drawGroup.push(M)), b++, r.keyExists(this._matLib, K))) {
                      if (y = this._matLib[K], r.keyExists(this._textureLib, K))
                        try {
                          if (!r.keyExists(this._textureCache, this._textureLib[K])) {
                            var J = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), it = this._tourDocument.getCachedTexture2d(J + this._textureLib[K]);
                            it != null && (this.meshFilenames.push(this._textureLib[K]), this._textureCache[this._textureLib[K]] = it);
                          }
                          this._meshTextures.push(this._textureCache[this._textureLib[K]]);
                        } catch {
                        }
                      this._addMaterial(y), M = new Ra(), M.startIndex = A, M.indexCount = 0, M.materialIndex = b;
                    }
                    break;
                  case "v":
                    this.flipHandedness ? l.push($.create(-parseFloat(H[1]), parseFloat(H[2]), parseFloat(H[3]))) : l.push($.create(parseFloat(H[1]), parseFloat(H[2]), parseFloat(H[3])));
                    break;
                  case "vn":
                    this.flipHandedness ? g.push($.create(-parseFloat(H[1]), parseFloat(H[2]), parseFloat(H[3]))) : g.push($.create(parseFloat(H[1]), parseFloat(H[2]), parseFloat(H[3])));
                    break;
                  case "vt":
                    _.push(Mt.create(parseFloat(H[1]), this.flipV ? 1 - parseFloat(H[2]) : parseFloat(H[2])));
                    break;
                  case "g":
                  case "o":
                    e && (b > -1 && (M.indexCount = A - M.startIndex, a.drawGroup.push(M), M = new Ra(), M.startIndex = A, M.indexCount = 0, M.materialIndex = b), a = new Wn()), e = !0, H.length > 1 ? a.name = H[1] : a.name = "Unnamed", n.push(a);
                    break;
                  case "f":
                    var ot = this._getIndexies(H[1]), lt = this._getIndexies(H[2]), gt = this._getIndexies(H[3]);
                    if (s.push(Cr.createUV(l[ot[0]], g[ot[2]], _[ot[1]])), s.push(Cr.createUV(l[lt[0]], g[lt[2]], _[lt[1]])), s.push(Cr.createUV(l[gt[0]], g[gt[2]], _[gt[1]])), this.flipHandedness ? (m.push(A), m.push(A + 2), m.push(A + 1)) : (m.push(A), m.push(A + 1), m.push(A + 2)), A += 3, H.length > 4)
                      for (var ut = 4; ut < H.length; )
                        this.flipHandedness ? (ot = this._getIndexies(H[1]), gt = this._getIndexies(H[ut]), lt = this._getIndexies(H[ut - 1])) : (ot = this._getIndexies(H[1]), lt = this._getIndexies(H[ut - 1]), gt = this._getIndexies(H[ut])), s.push(Cr.createUV(l[ot[0]], g[ot[2]], _[ot[1]])), s.push(Cr.createUV(l[lt[0]], g[lt[2]], _[lt[1]])), s.push(Cr.createUV(l[gt[0]], g[gt[2]], _[gt[1]])), m.push(A), m.push(A + 1), m.push(A + 2), A += 3, ut++;
                    break;
                }
            }
            if (e || n.push(a), b === -1 && A > 0 && (this._addMaterial(y), b++), b > -1 && (M.indexCount = A - M.startIndex, a.drawGroup.push(M)), g.length < 2) {
              for (var St = Math.PI / 180, mt = this.smooth ? 170 * St : 45 * St, Dt = this._calculateVertexNormalsMerged(s, m, mt), yt = [], ue = m.length, _e = 0; _e < ue; ++_e) {
                var Qt = s[m[_e]];
                Qt.set_normal(Dt[_e]), yt.push(Qt);
              }
              s = yt;
            }
            this._mesh = En.create(s, m);
            var Ft = new Wn();
            Ft.name = "Root", Ft.parent = null, Ft.level = -1, Ft.drawGroup = null, Ft.children = n, this.objects = [], this.objects.push(Ft), this._mesh.setObjects(this.objects), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
          },
          _loadMatLib: function(t) {
            var e = this;
            if (this._matFileIndex < this._matFiles.length) {
              var n = this._matFiles[this._matFileIndex++], a = this._tourDocument.getFileBlob(n), s = new FileReader();
              s.onloadend = function(l) {
                e._readMatLibFromBin(r.safeCast(s.result, String)), e._loadMatLib(t);
              }, s.readAsText(a);
            } else
              this._readObjFromBin(t);
          },
          _readMatLibFromBin: function(t) {
            try {
              var e = new Qn(), n = "";
              this._matLib = {}, this._textureLib = {};
              for (var a = t.split(`
`), s = r.enumerate(a); s.moveNext(); ) {
                var l = s.current, g = l, _ = r.trim(g).split(" ");
                if (_.length > 0)
                  switch (_[0]) {
                    case "newmtl":
                      r.emptyString(n) || (this._matLib[n] = e), e = new Qn(), e.diffuse = Pt.get_white(), e.ambient = Pt.get_white(), e.specular = Pt.get_black(), e.specularSharpness = 30, e.opacity = 1, n = _[1];
                      break;
                    case "Ka":
                      e.ambient = j.fromArgb(255, Math.min(parseFloat(_[1]) * 255, 255), Math.min(parseFloat(_[2]) * 255, 255), Math.min(parseFloat(_[3]) * 255, 255));
                      break;
                    case "map_Kd":
                      e.diffuse = Pt.get_white();
                      for (var m = _[1], b = 2; b < _.length; b++)
                        m += " " + _[b];
                      var y = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                      m = r.replaceString(m, "/", "\\"), m.indexOf("\\") !== -1 && (m = m.substring(m.lastIndexOf("\\") + 1)), this._textureLib[n] = m;
                      break;
                    case "Kd":
                      e.diffuse = j.fromArgb(255, Math.min(parseFloat(_[1]) * 255, 255), Math.min(parseFloat(_[2]) * 255, 255), Math.min(parseFloat(_[3]) * 255, 255));
                      break;
                    case "Ks":
                      e.specular = j.fromArgb(255, Math.min(parseFloat(_[1]) * 255, 255), Math.min(parseFloat(_[2]) * 255, 255), Math.min(parseFloat(_[3]) * 255, 255));
                      break;
                    case "d":
                      e.opacity = parseFloat(_[1]);
                      break;
                    case "Tr":
                      e.opacity = 1 - parseFloat(_[1]);
                      break;
                    case "illum":
                      var M = parseInt(_[1]);
                      break;
                    case "sharpness":
                      e.specularSharpness = parseFloat(_[1]);
                      break;
                    case "Ns":
                      e.specularSharpness = 1 + 2 * parseFloat(_[1]), e.specularSharpness = Math.max(10, e.specularSharpness);
                      break;
                  }
              }
              r.emptyString(n) || (this._matLib[n] = e);
            } catch {
            }
          },
          _getIndexies: function(t) {
            var e = r.trim(t).split("/"), n = new Array(3);
            return r.emptyString(t) || (e.length > 0 && (n[0] = parseInt(e[0])), e.length > 1 && (r.emptyString(e[1]) ? n[1] = 0 : n[1] = parseInt(e[1])), e.length > 2 && (n[2] = parseInt(e[2]))), n;
          },
          _loadMeshFrom3ds: function(t, e, n) {
            var a = this;
            this._tourDocument = t;
            var s = t.getFileBlob(e), l = new FileReader();
            l.onloadend = function(g) {
              a._read3dsFromBin(new ia(new Uint8Array(l.result)), n);
            }, l.readAsArrayBuffer(s);
          },
          _read3dsFromBin: function(t, e) {
            for (var n, a, s, l = "", g = "", _ = 0, m = 0, b = [], y = [], M = [], A = -1, R = new Qn(), F = 0, O = 0, B = !1, H = !1, K = 0, J = 0, it = 0, ot = [], lt = null, gt = [], ut = [], St = {}, mt = t.get_length() - 1, Dt = 0, yt = 0; t.get_position() < mt && !B; )
              switch (a = t.readUInt16(), s = t.readUInt32(), a) {
                case 19789:
                  break;
                case 15677:
                  break;
                case 16384:
                  l = "";
                  var ue;
                  do
                    ue = t.readByte(), ue > 0 && (l += String.fromCharCode(ue));
                  while (ue);
                  lt = new Wn(), lt.name = l, ot.push(lt), r.keyExists(St, lt.name) || (St[lt.name] = lt);
                  break;
                case 16640:
                  Dt = b.length, yt = Math.floor(y.length / 3);
                  break;
                case 16656:
                  for (m = t.readUInt16(), n = 0; n < m; n++) {
                    var _e = t.readSingle() - K, Qt = t.readSingle() - J, Ft = t.readSingle() - it, vi = Cr._create(_e * e, Ft * e, Qt * e, 0, 0, 0, 0, 0);
                    b.push(vi);
                  }
                  break;
                case 16672:
                  var Si = t.readUInt16();
                  for (_ += Si, n = 0; n < Si; n++) {
                    var Ei = t.readUInt16() + Dt, Li = t.readUInt16() + Dt, ri = t.readUInt16() + Dt;
                    y.push(ri), y.push(Li), y.push(Ei), t.readUInt16();
                  }
                  break;
                case 16688:
                  g = "", n = 0;
                  var Hi;
                  do
                    Hi = t.readByte(), Hi > 0 && (g += String.fromCharCode(Hi)), n++;
                  while (Hi);
                  var Si = t.readUInt16(), Je = new Array(Si);
                  for (F = cr._getMaterialID(g, M), n = 0; n < Si; n++)
                    Je[n] = t.readUInt16() + yt;
                  lt.applyLists.push(Je), lt.applyListsIndex.push(F);
                  break;
                case 16704:
                  for (O = t.readUInt16(), n = 0; n < O; n++) {
                    var vi = b[Dt + n], Xi = Mt.create(t.readSingle(), this.flipV ? 1 - t.readSingle() : t.readSingle());
                    b[Dt + n] = Cr.createUV(vi.get_position(), new $(), Xi);
                  }
                  break;
                case 16736:
                  var Ee = new Array(12);
                  for (n = 0; n < 12; n++)
                    Ee[n] = t.readSingle();
                  r.keyExists(St, l) && (St[l].localMat = tt.create(Ee[0], Ee[1], Ee[2], 0, Ee[3], Ee[4], Ee[5], 0, Ee[6], Ee[7], Ee[8], 0, Ee[9], Ee[10], Ee[11], 1), St[l].localMat.invert());
                  break;
                case 45055:
                  break;
                case 40960:
                  var Yi = "";
                  n = 0;
                  var Xe;
                  do
                    Xe = t.readByte(), Xe > 0 && (Yi += String.fromCharCode(Xe)), n++;
                  while (Xe);
                  M.push(Yi), A > -1 && this._addMaterial(R), A++, R = new Qn(), R.diffuse = Pt.get_white(), R.ambient = Pt.get_white(), R.specular = Pt.get_black(), R.specularSharpness = 30, R.opacity = 1;
                  break;
                case 40976:
                  R.ambient = this._loadColorChunk(t);
                  break;
                case 40992:
                  R.diffuse = this._loadColorChunk(t);
                  break;
                case 41008:
                  R.specular = this._loadColorChunk(t);
                  break;
                case 41024:
                  R.specularSharpness = 1 + 2 * this._loadPercentageChunk(t), R.specularSharpness = Math.max(10, R.specularSharpness);
                  break;
                case 41472:
                  break;
                case 41728:
                  var ee = "";
                  n = 0;
                  var Xe;
                  do
                    Xe = t.readByte(), Xe > 0 && (ee += String.fromCharCode(Xe)), n++;
                  while (Xe);
                  var xe = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                  try {
                    var Ni = this._tourDocument.getCachedTexture2d(xe + ee);
                    Ni != null ? (this._meshTextures.push(Ni), this.meshFilenames.push(ee), R.diffuse = Pt.get_white()) : this._meshTextures.push(null);
                  } catch {
                    this._meshTextures.push(null);
                  }
                  break;
                case 41520:
                  this._loadPercentageChunk(t), t.readUInt16(), t.readUInt32();
                  var ee = "";
                  n = 0;
                  var Xe;
                  do
                    Xe = t.readByte(), Xe > 0 && (ee += String.fromCharCode(Xe)), n++;
                  while (Xe);
                  var xe = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                  try {
                    var Ni = this._tourDocument.getCachedTexture2d(xe + ee);
                    Ni != null ? (this._meshNormalMaps.push(Ni), this.meshFilenames.push(ee), H = !0) : this._meshNormalMaps.push(null);
                  } catch {
                    this._meshNormalMaps.push(null);
                  }
                  break;
                case 41476:
                  var he = this._loadPercentageChunk(t);
                  t.readUInt16(), t.readUInt32();
                  var ee = "";
                  n = 0;
                  var Xe;
                  do
                    Xe = t.readByte(), Xe > 0 && (ee += String.fromCharCode(Xe)), n++;
                  while (Xe);
                  var xe = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                  try {
                    var Ni = this._tourDocument.getCachedTexture2d(xe + ee);
                    if (Ni != null) {
                      this._meshSpecularTextures.push(Ni), this.meshFilenames.push(ee);
                      var Ir = r.truncate(255.99 * he / 100);
                      R.specular = j.fromArgb(255, Ir, Ir, Ir);
                    } else
                      this._meshSpecularTextures.push(null);
                  } catch {
                    this._meshSpecularTextures.push(null);
                  }
                  break;
                case 45056:
                  break;
                case 45058:
                  break;
                case 45072:
                  l = "", n = 0;
                  var Hi;
                  do
                    Hi = t.readByte(), Hi > 0 && (l += String.fromCharCode(Hi)), n++;
                  while (Hi);
                  t.readUInt16(), t.readUInt16();
                  var or = t.readUInt16();
                  or === 65535 && (or = -1), r.startsWith(l, "$") || ut.push(l), gt.push(or), r.keyExists(St, l) && (St[l].level = or);
                  break;
                case 45073:
                  l = "", n = 0;
                  var Hi;
                  do
                    Hi = t.readByte(), Hi > 0 && (l += String.fromCharCode(Hi)), n++;
                  while (Hi);
                  ut.push("$$$" + l);
                  break;
                case 45075:
                  var yn = new Array(3);
                  for (n = 0; n < 3; n++)
                    yn[n] = t.readSingle();
                  r.keyExists(St, l) && (St[l].pivotPoint = $.create(-yn[0], -yn[1], -yn[2]));
                  break;
                case 45088:
                  var yr = new Array(8);
                  for (n = 0; n < 8; n++)
                    yr[n] = t.readSingle();
                  break;
                default:
                  t.seekRelative(s - 6);
                  break;
              }
            t.close(), A > -1 && this._addMaterial(R);
            for (var dr = Math.PI / 180, ji = this.smooth ? 70 * dr : 45 * dr, wr = this._calculateVertexNormalsMerged(b, y, ji), zr = [], Sn = _ * 3, xr = 0; xr < Sn; ++xr) {
              var Lr = b[y[xr]];
              Lr.set_normal(wr[xr]), zr.push(Lr);
            }
            for (var cn = [], Dn = r.enumerate(ot); Dn.moveNext(); ) {
              var hn = Dn.current, ds = [];
              for (n = 0; n < hn.applyLists.length; n++) {
                for (var sa = hn.applyListsIndex[n], eo = cn.length, gs = r.enumerate(hn.applyLists[n]); gs.moveNext(); ) {
                  var Va = gs.current;
                  cn.push(Va * 3), cn.push(Va * 3 + 1), cn.push(Va * 3 + 2);
                }
                var ya = new Ra();
                ya.startIndex = eo, ya.indexCount = hn.applyLists[n].length * 3, ya.materialIndex = sa, ds.push(ya);
              }
              hn.drawGroup = ds;
            }
            var fn = new r.Stack(), Ua = [], _n = new Wn();
            _n.name = "Root", _n.parent = null, _n.level = -1, _n.drawGroup = null;
            var Sa = -1;
            for (fn.push(_n), Ua.push(_n), n = 0; n < gt.length; n++) {
              var or = gt[n];
              if (or <= Sa) {
                for (; or <= fn.peek().level && fn.count > 1; )
                  fn.pop();
                Sa = or;
              }
              if (r.startsWith(ut[n], "$$$")) {
                var Cn = new Wn();
                Cn.name = r.replaceString(ut[n], "$$$", ""), Cn.parent = fn.peek(), Cn.parent.children.push(Cn), Cn.level = Sa = or, Cn.drawGroup = null, fn.push(Cn);
              } else
                St[ut[n]].level = Sa = or, St[ut[n]].parent = fn.peek(), St[ut[n]].parent.children.push(St[ut[n]]), fn.push(St[ut[n]]);
            }
            if (!gt.length)
              for (var ms = r.enumerate(ot); ms.moveNext(); ) {
                var hn = ms.current;
                _n.children.push(hn), hn.parent = _n;
              }
            if (H) {
              for (var ps = [], Ha = 0; Ha < Sn; ++Ha)
                ps.push(Ha);
              for (var io = this._calculateVertexTangents(zr, ps, ji), vs = new Array(zr.length), xr = 0, ws = r.enumerate(zr); ws.moveNext(); ) {
                var Lr = ws.current, oa = new go(Lr.get_position(), Lr.get_normal(), Mt.create(Lr.tu, Lr.tv), io[xr]);
                vs[xr] = oa, ++xr;
              }
              this._mesh = En.createTangent(vs, cn);
            } else
              this._mesh = En.create(zr, cn);
            this.objects = Ua, this._mesh.setObjects(Ua), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
          },
          _offsetObjects: function(t, e, n, a) {
            for (var s = r.enumerate(e); s.moveNext(); ) {
              var l = s.current, g = l.localMat;
              this._offsetObjects(t, l.children, g, $.addVectors(l.pivotPoint, a));
              for (var _ = r.enumerate(l.drawGroup); _.moveNext(); )
                for (var m = _.current, b = m.startIndex + m.indexCount, y = m.startIndex; y < b; y++) {
                  var M = t[y];
                  M.set_position($.addVectors(M.get_position(), $.addVectors(l.pivotPoint, a))), t[y] = M;
                }
            }
          },
          setupLighting: function(t) {
            var e = $.create(t.get_world().get_offsetX(), t.get_world().get_offsetY(), t.get_world().get_offsetZ()), n = $.subtractVectors(e, t.get_reflectedLightPosition()), a = $.subtractVectors(t.get_sunPosition(), t.get_reflectedLightPosition()), s = a.length() <= 0 ? 1 : $.dot(n, a) / (n.length() * a.length()), l = Math.max(0, s);
            l = Math.sqrt(l);
            var g = 0, _ = 1;
            if (t.get_occludingPlanetRadius() > 0) {
              var m = $.subtractVectors(e, t.get_occludingPlanetPosition()).length() - t.get_occludingPlanetRadius();
              g = Math.max(0, Math.min(1, 1 - m / t.get_occludingPlanetRadius() * 300)), l *= 1 - g;
              var b = $.subtractVectors(t.get_occludingPlanetPosition(), t.get_sunPosition()), y = $.subtractVectors(t.get_occludingPlanetPosition(), e), M = $.create(-y.x, -y.y, -y.z);
              M.normalize(), t.set_hemisphereLightUp(M);
              var A = $.subtractVectors(t.get_sunPosition(), e), R = b.length(), F = -$.dot(A, b) / (R * R);
              if (F > 1) {
                var O = $.addVectors(t.get_sunPosition(), $.multiplyScalar(b, F)), B = $.subtractVectors(O, e).length();
                $.subtractVectors(O, t.get_sunPosition()).length();
                var H = 4645784e-9, K = t.get_occludingPlanetRadius() + (F - 1) * (t.get_occludingPlanetRadius() + H), J = t.get_occludingPlanetRadius() + (F - 1) * (t.get_occludingPlanetRadius() - H);
                if (B < K) {
                  var it = 0;
                  if (J < 0) {
                    var ot = Math.pow(1 / (1 - J), 2);
                    J = 0, it = 1 - ot;
                  }
                  var lt = Math.max(0, J);
                  _ = Math.max(it, (B - lt) / (K - lt));
                  var gt = r.truncate(255.99 * _);
                  t.set_sunlightColor(j.fromArgb(255, gt, gt, gt)), g *= _;
                }
              }
            }
            t.set_reflectedLightColor(j.fromArgb(255, r.truncate(t.get_reflectedLightColor().r * l), r.truncate(t.get_reflectedLightColor().g * l), r.truncate(t.get_reflectedLightColor().b * l))), t.set_hemisphereLightColor(j.fromArgb(255, r.truncate(t.get_hemisphereLightColor().r * g), r.truncate(t.get_hemisphereLightColor().g * g), r.truncate(t.get_hemisphereLightColor().b * g)));
          },
          render: function(t, e) {
            if (this._readyToRender) {
              this._dirty && !this.issLayer && this._reload();
              var n = t.get_world(), a = this._mesh.boundingSphere.center, s = 1;
              this._mesh.boundingSphere.radius > 0 && (s = 1 / this._mesh.boundingSphere.radius), t.set_world(tt.multiplyMatrix(tt.multiplyMatrix(tt.translation($.create(-a.x, -a.y, -a.z)), tt._scaling(s, s, s)), n));
              var l = tt.multiplyMatrix(t.get_world(), t.get_view()), g = l.transform($.get_empty()), _ = Math.sqrt(l.get_m11() * l.get_m11() + l.get_m22() * l.get_m22() + l.get_m33() * l.get_m33()) / s, m = g.length(), b = _, y = r.truncate(t.height), M = t.get_projection().get_m11(), A = t.get_projection().get_m34(), R = t.get_projection().get_m44(), F = Math.abs(A) * m + R, O = M / F * y, B = b * O;
              if (!(B < 0.5)) {
                var H = t.get_sunlightColor(), K = t.get_reflectedLightColor(), J = t.get_hemisphereLightColor();
                if (X.get_current().get_solarSystemLighting() ? (this.setupLighting(t), this.useCurrentAmbient || t.set_ambientLightColor(j.fromArgb(255, 11, 11, 11))) : (t.set_sunlightColor(Pt.get_black()), t.set_reflectedLightColor(Pt.get_black()), t.set_hemisphereLightColor(Pt.get_black()), t.set_ambientLightColor(Pt.get_white())), this._mesh != null) {
                  ce.minLightingBrightness = 0.1;
                  var it = this._meshMaterials.length;
                  if (this._mesh.beginDrawing(t), it > 0)
                    for (var ot = 0; ot < this._meshMaterials.length; ot++) {
                      if (this._meshMaterials[ot].isDefault) {
                        var lt = this._meshMaterials[ot];
                        lt.diffuse = this.color, lt.ambient = this.color, this._meshMaterials[ot] = lt;
                      }
                      t.setMaterial(this._meshMaterials[ot], this._meshTextures[ot], this._meshSpecularTextures[ot], this._meshNormalMaps[ot], e), this._mesh.vertexBuffer != null ? ce.use(t, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ot] != null ? this._meshTextures[ot].texture2d : null, e, !1, 32) : ce.use(t, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ot] != null ? this._meshTextures[ot].texture2d : null, e, !1, 44), t.preDraw(), this._mesh.drawSubset(t, ot);
                    }
                  else {
                    t.preDraw();
                    for (var ot = 0; ot < this._meshTextures.length; ot++)
                      this._meshTextures[ot] != null && (t.set_mainTexture(this._meshTextures[ot]), this._mesh.vertexBuffer != null ? ce.use(t, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ot] != null ? this._meshTextures[ot].texture2d : null, e, !1, 32) : ce.use(t, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[ot] != null ? this._meshTextures[ot].texture2d : null, e, !1, 44)), t.preDraw(), this._mesh.drawSubset(t, ot);
                  }
                  t.set_world(n), t.set_sunlightColor(H), t.set_reflectedLightColor(K), t.set_hemisphereLightColor(J), t.set_ambientLightColor(Pt.get_black());
                }
              }
            }
          },
          dispose: function() {
            this._mesh != null && (this._mesh.dispose(), this._mesh = null);
            for (var t = r.enumerate(r.keys(this._textureCache)); t.moveNext(); ) {
              var e = t.current, n = this._textureCache[e];
              n != null && n.dispose();
            }
            r.clearKeys(this._textureCache), cr._disposeTextureList(this._meshTextures), cr._disposeTextureList(this._meshSpecularTextures), cr._disposeTextureList(this._meshNormalMaps), this._meshMaterials.length = 0, this._dirty = !0;
          }
        };
        function Wn() {
          this.level = -1, this.children = [], this.enabled = !0, this.drawGroup = [], this.applyLists = [], this.applyListsIndex = [];
        }
        var uc = {};
        function ga(t, e, n, a, s) {
          this._elements = null, this._orbitColor = Pt.get_white(), this._scale = 0, this._segmentCount = 0, this._elements = t, this._segmentCount = e, this._orbitColor = n, this._scale = s;
        }
        var cc = {
          cleanUp: function() {
          },
          get_boundingRadius: function() {
            return this._elements != null ? this._elements.a * (1 + this._elements.e) / this._scale : 0;
          },
          draw3D: function(t, e, n) {
            var a = tt.multiplyMatrix(tt._rotationZ(U.degreesToRadians(this._elements.w)), tt.multiplyMatrix(tt._rotationX(U.degreesToRadians(this._elements.i)), tt._rotationZ(U.degreesToRadians(this._elements.omega))));
            a = tt.multiplyMatrix(a, ga._orbitalToWwt);
            var s = tt.multiplyMatrix(tt.multiplyMatrix(a, tt.translation(n)), t.get_world()), l = this._elements.n * (Q.get_jNow() - this._elements.t), g = 1;
            l < 0 && (g = -1), l = Math.abs(l) / 360, l = (l - r.truncate(l)) * 360 * g;
            var _ = j._fromArgbColor(r.truncate(e * 255), this._orbitColor);
            l = U.degreesToRadians(l);
            for (var m = l, b = 0; b < 5; b++)
              m += (l - m + this._elements.e * Math.sin(m)) / (1 - this._elements.e * Math.cos(m));
            Zi.drawEllipse(t, this._elements.a / this._scale, this._elements.e, m, _, s);
          }
        };
        function Zi() {
        }
        Zi.drawEllipseWithPosition = function(t, e, n, a, s, l, g) {
          Zi._ellipseShader == null && (Zi._ellipseShader = new Pe()), Zi._ellipseVertexBuffer == null && (Zi._ellipseVertexBuffer = Zi.createEllipseVertexBuffer(500));
          var _ = t.get_world();
          t.set_world(l), t.gl.bindBuffer(34962, Zi._ellipseVertexBuffer.vertexBuffer), t.gl.bindBuffer(34963, null), Pe.use(t, e, n, a, s, 1, _, g), t.gl.drawArrays(3, 0, Zi._ellipseVertexBuffer.count), t.set_world(_);
        }, Zi.drawEllipse = function(t, e, n, a, s, l) {
          Zi._ellipseShader == null && (Zi._ellipseShader = new Pe()), Zi._ellipseWithoutStartPointVertexBuffer == null && (Zi._ellipseWithoutStartPointVertexBuffer = Zi.createEllipseVertexBufferWithoutStartPoint(360));
          var g = t.get_world();
          t.set_world(l), t.gl.bindBuffer(34962, Zi._ellipseWithoutStartPointVertexBuffer.vertexBuffer), t.gl.bindBuffer(34963, null), Pe.use(t, e, n, a, s, 1, g, $.create(0, 0, 0)), t.gl.drawArrays(3, 0, Zi._ellipseWithoutStartPointVertexBuffer.count - 1), t.set_world(g);
        }, Zi.createEllipseVertexBuffer = function(t) {
          for (var e = new as(t), n = e.lock(), a = 0, s = 0; s < t / 2; ++s)
            n[a++] = $.create(2 * s / t * 0.05, 0, 0);
          for (var s = 0; s < t / 2; ++s)
            n[a++] = $.create(2 * s / t * 0.95 + 0.05, 0, 0);
          return e.unlock(), e;
        }, Zi.createEllipseVertexBufferWithoutStartPoint = function(t) {
          var e = new as(t), n = e.lock();
          n[0] = $.create(1e-6, 0, 0);
          for (var a = 1; a < t; ++a)
            n[a] = $.create(2 * a / t, 0, 0);
          return e.unlock(), e;
        };
        var hc = {};
        function Ki() {
          this._systemGenerated = !1, this.meanAnomoly = 0, this.orbitalYears = 0, this.observingLocation = !1, this.reference = 18, this.parentsRoationalBase = !1, this.referenceFrameType = 0, this.meanRadius = 6371e3, this.oblateness = 33528e-7, this.heading = 0, this.pitch = 0, this.roll = 0, this.scale = 1, this.tilt = 0, this.translation = new $(), this.lat = 0, this.lng = 0, this.altitude = 0, this.rotationalPeriod = 0, this.zeroRotationDate = 0, this.representativeColor = Pt.get_white(), this.showAsPoint = !1, this.showOrbitPath = !1, this.stationKeeping = !0, this.semiMajorAxis = 0, this.semiMajorAxisUnits = 1, this.eccentricity = 0, this.inclination = 0, this.argumentOfPeriapsis = 0, this.longitudeOfAscendingNode = 0, this.meanAnomolyAtEpoch = 0, this.meanDailyMotion = 0, this.epoch = 0, this._orbit = null, this._elements = new Vn(), this.worldMatrix = new tt(), this.worldMatrix = tt.get_identity();
        }
        Ki.isTLECheckSumGood = function(t) {
          if (t.length !== 69)
            return !1;
          for (var e = 0, n = 0; n < 68; n++)
            switch (t.substr(n, 1)) {
              case "1":
                e += 1;
                break;
              case "2":
                e += 2;
                break;
              case "3":
                e += 3;
                break;
              case "4":
                e += 4;
                break;
              case "5":
                e += 5;
                break;
              case "6":
                e += 6;
                break;
              case "7":
                e += 7;
                break;
              case "8":
                e += 8;
                break;
              case "9":
                e += 9;
                break;
              case "-":
                e += 1;
                break;
            }
          return (e % 10).toString() === t.charAt(68).toString();
        }, Ki.toTLEExponential = function(t, e) {
          var n = t.toExponential(e);
          return n.length < e + 6 && (n = n.substring(0, e + 4) + "0" + n.substr(e + 4, 1)), n;
        }, Ki.tleNumberString = function(t, e, n) {
          var a = t.toFixed(n), s = a.indexOf(".");
          s === -1 && (s = a.length, a += ".0");
          var l = a.length - s - 1, g = "00000000";
          return a = g.substr(0, e - s) + a + g.substr(0, n - l), a;
        }, Ki.computeTLECheckSum = function(t) {
          if (t.length !== 68)
            return "0";
          for (var e = 0, n = 0; n < 68; n++)
            switch (t[n]) {
              case "1":
                e += 1;
                break;
              case "2":
                e += 2;
                break;
              case "3":
                e += 3;
                break;
              case "4":
                e += 4;
                break;
              case "5":
                e += 5;
                break;
              case "6":
                e += 6;
                break;
              case "7":
                e += 7;
                break;
              case "8":
                e += 8;
                break;
              case "9":
                e += 9;
                break;
              case "-":
                e += 1;
                break;
            }
          return e % 10;
        };
        var fc = {
          get_representativeColor: function() {
            return this.representativeColor;
          },
          set_representativeColor: function(t) {
            return t !== this.representativeColor && (this.representativeColor = t, this._orbit = null), t;
          },
          get_orbit: function() {
            return this._orbit;
          },
          set_orbit: function(t) {
            return this._orbit = t, t;
          },
          getIndentifier: function() {
            return this.name;
          },
          importTrajectory: function(t) {
          },
          saveToXml: function(t) {
            t._writeStartElement("ReferenceFrame"), t._writeAttributeString("Name", this.name), t._writeAttributeString("Parent", this.parent), t._writeAttributeString("ReferenceFrameType", we.toXml("ReferenceFrameTypes", this.referenceFrameType)), t._writeAttributeString("Reference", we.toXml("ReferenceFrames", this.reference)), t._writeAttributeString("ParentsRoationalBase", this.parentsRoationalBase.toString()), t._writeAttributeString("MeanRadius", this.meanRadius.toString()), t._writeAttributeString("Oblateness", this.oblateness.toString()), t._writeAttributeString("Heading", this.heading.toString()), t._writeAttributeString("Pitch", this.pitch.toString()), t._writeAttributeString("Roll", this.roll.toString()), t._writeAttributeString("Scale", this.scale.toString()), t._writeAttributeString("Tilt", this.tilt.toString()), t._writeAttributeString("Translation", this.translation.toString()), this.referenceFrameType || (t._writeAttributeString("Lat", this.lat.toString()), t._writeAttributeString("Lng", this.lng.toString()), t._writeAttributeString("Altitude", this.altitude.toString())), t._writeAttributeString("RotationalPeriod", this.rotationalPeriod.toString()), t._writeAttributeString("ZeroRotationDate", this.zeroRotationDate.toString()), t._writeAttributeString("RepresentativeColor", this.get_representativeColor().save()), t._writeAttributeString("ShowAsPoint", this.showAsPoint.toString()), t._writeAttributeString("ShowOrbitPath", this.showOrbitPath.toString()), t._writeAttributeString("StationKeeping", this.stationKeeping.toString()), this.referenceFrameType === 1 && (t._writeAttributeString("SemiMajorAxis", this.semiMajorAxis.toString()), t._writeAttributeString("SemiMajorAxisScale", we.toXml("AltUnits", this.semiMajorAxisUnits)), t._writeAttributeString("Eccentricity", this.eccentricity.toString()), t._writeAttributeString("Inclination", this.inclination.toString()), t._writeAttributeString("ArgumentOfPeriapsis", this.argumentOfPeriapsis.toString()), t._writeAttributeString("LongitudeOfAscendingNode", this.longitudeOfAscendingNode.toString()), t._writeAttributeString("MeanAnomolyAtEpoch", this.meanAnomolyAtEpoch.toString()), t._writeAttributeString("MeanDailyMotion", this.meanDailyMotion.toString()), t._writeAttributeString("Epoch", this.epoch.toString())), t._writeEndElement();
          },
          initializeFromXml: function(t) {
            this.name = t.attributes.getNamedItem("Name").nodeValue, this.parent = t.attributes.getNamedItem("Parent").nodeValue, this.referenceFrameType = we.parse("ReferenceFrameTypes", t.attributes.getNamedItem("ReferenceFrameType").nodeValue), this.reference = we.parse("ReferenceFrames", t.attributes.getNamedItem("Reference").nodeValue), this.parentsRoationalBase = r.boolean(t.attributes.getNamedItem("ParentsRoationalBase").nodeValue), this.meanRadius = parseFloat(t.attributes.getNamedItem("MeanRadius").nodeValue), this.oblateness = parseFloat(t.attributes.getNamedItem("Oblateness").nodeValue), this.heading = parseFloat(t.attributes.getNamedItem("Heading").nodeValue), this.pitch = parseFloat(t.attributes.getNamedItem("Pitch").nodeValue), this.roll = parseFloat(t.attributes.getNamedItem("Roll").nodeValue), this.scale = parseFloat(t.attributes.getNamedItem("Scale").nodeValue), this.tilt = parseFloat(t.attributes.getNamedItem("Tilt").nodeValue), this.translation = $.parse(t.attributes.getNamedItem("Translation").nodeValue), this.referenceFrameType || (this.lat = parseFloat(t.attributes.getNamedItem("Lat").nodeValue), this.lng = parseFloat(t.attributes.getNamedItem("Lng").nodeValue), this.altitude = parseFloat(t.attributes.getNamedItem("Altitude").nodeValue)), this.rotationalPeriod = parseFloat(t.attributes.getNamedItem("RotationalPeriod").nodeValue), this.zeroRotationDate = parseFloat(t.attributes.getNamedItem("ZeroRotationDate").nodeValue), this.set_representativeColor(j.load(t.attributes.getNamedItem("RepresentativeColor").nodeValue)), this.showAsPoint = r.boolean(t.attributes.getNamedItem("ShowAsPoint").nodeValue), t.attributes.getNamedItem("StationKeeping") != null && (this.stationKeeping = r.boolean(t.attributes.getNamedItem("StationKeeping").nodeValue)), this.referenceFrameType === 1 && (this.showOrbitPath = r.boolean(t.attributes.getNamedItem("ShowOrbitPath").nodeValue), this.semiMajorAxis = parseFloat(t.attributes.getNamedItem("SemiMajorAxis").nodeValue), this.semiMajorAxisUnits = we.parse("AltUnits", t.attributes.getNamedItem("SemiMajorAxisScale").nodeValue), this.eccentricity = parseFloat(t.attributes.getNamedItem("Eccentricity").nodeValue), this.inclination = parseFloat(t.attributes.getNamedItem("Inclination").nodeValue), this.argumentOfPeriapsis = parseFloat(t.attributes.getNamedItem("ArgumentOfPeriapsis").nodeValue), this.longitudeOfAscendingNode = parseFloat(t.attributes.getNamedItem("LongitudeOfAscendingNode").nodeValue), this.meanAnomolyAtEpoch = parseFloat(t.attributes.getNamedItem("MeanAnomolyAtEpoch").nodeValue), this.meanDailyMotion = parseFloat(t.attributes.getNamedItem("MeanDailyMotion").nodeValue), this.epoch = parseFloat(t.attributes.getNamedItem("Epoch").nodeValue));
          },
          fromTLE: function(t, e, n) {
            this.epoch = Q._twoLineDateToJulian(t.substr(18, 14)), this.eccentricity = parseFloat("0." + e.substr(26, 7)), this.inclination = parseFloat(e.substr(8, 8)), this.longitudeOfAscendingNode = parseFloat(e.substr(17, 8)), this.argumentOfPeriapsis = parseFloat(e.substr(34, 8));
            var a = parseFloat(e.substr(52, 11));
            this.meanAnomolyAtEpoch = parseFloat(e.substr(43, 8)), this.meanDailyMotion = a * 360;
            var s = 86400 / a / (Math.PI * 2);
            this.semiMajorAxis = Math.pow(s * s * n, 1 / 3), this.semiMajorAxisUnits = 1;
          },
          toTLE: function() {
            var t = new r.StringBuilder();
            t.append("1 99999U 00111AAA "), t.append(Q.julianToTwoLineDate(this.epoch)), t.append(" "), t.append(this.semiMajorAxis.toExponential(4)), t.append(" 00000-0 "), t.append(Ki.toTLEExponential(this.meanDailyMotion, 5)), t.append("  001"), t.append(Ki.computeTLECheckSum(t.toString())), t.appendLine("");
            var e = new r.StringBuilder();
            return e.append("2 99999 "), e.append(Ki.tleNumberString(this.inclination, 3, 4) + " "), e.append(Ki.tleNumberString(this.longitudeOfAscendingNode, 3, 4) + " "), e.append((Ki.tleNumberString(this.eccentricity, 1, 7) + " ").substring(2)), e.append(Ki.tleNumberString(this.argumentOfPeriapsis, 3, 4) + " "), e.append(Ki.tleNumberString(this.meanAnomolyAtEpoch, 3, 4) + " "), e.append(Ki.toTLEExponential(this.meanDailyMotion / 207732, 5)), e.append("00001"), e.append(Ki.computeTLECheckSum(e.toString())), e.appendLine(""), t.toString() + e.toString();
          },
          get_elements: function() {
            return this._elements.a = this.semiMajorAxis, this._elements.e = this.eccentricity, this._elements.i = this.inclination, this._elements.w = this.argumentOfPeriapsis, this._elements.omega = this.longitudeOfAscendingNode, this._elements.jdEquinox = this.epoch, this.meanDailyMotion ? this._elements.n = this.meanDailyMotion : this._elements.n = hi.meanMotionFromSemiMajorAxis(this._elements.a), this._elements.t = this.epoch - this.meanAnomolyAtEpoch / this._elements.n, this._elements;
          },
          set_elements: function(t) {
            return this._elements = t, t;
          },
          computeFrame: function(t) {
            switch (this.referenceFrameType) {
              case 1:
                this._computeOrbital(t);
                break;
              case 0:
                this._computeFixedSherical(t);
                break;
              case 2:
                this._computeFrameTrajectory(t);
                break;
            }
          },
          useRotatingParentFrame: function() {
            switch (this.referenceFrameType) {
              case 1:
              case 2:
              case 3:
                return !1;
              default:
                return !0;
            }
          },
          _computeFixedRectangular: function(t) {
          },
          _computeFixedSherical: function(t) {
            this.observingLocation && (this.lat = Q.get_location().get_lat(), this.lng = Q.get_location().get_lng(), this.altitude = Q.get_altitude()), this.worldMatrix = tt.get_identity(), this.worldMatrix.translate(this.translation);
            var e = 1 / t.get_nominalRadius() * this.scale * this.meanRadius;
            if (this.worldMatrix.scale($.create(e, e, e)), this.worldMatrix._multiply(tt.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.worldMatrix._multiply(tt._rotationZ(-90 / 180 * Math.PI)), this.rotationalPeriod) {
              var n = (Q.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
              this.worldMatrix._multiply(tt._rotationX(-n));
            }
            this.worldMatrix.translate($.create(1 + this.altitude / t.get_nominalRadius(), 0, 0)), this.worldMatrix._multiply(tt._rotationZ(this.lat / 180 * Math.PI)), this.worldMatrix._multiply(tt._rotationY(-(this.lng + 180) / 180 * Math.PI));
          },
          _computeFrameTrajectory: function(t) {
          },
          _computeOrbital: function(t) {
            var e = this.get_elements(), n = hi.calculateRectangularJD(Q.get_jNow(), e);
            this.meanAnomoly = e.meanAnnomolyOut;
            var a = hi.calculateRectangular(e, this.meanAnomoly + 1e-3), s = $.subtractVectors(n, a), l = n.copy();
            l.normalize(), s.normalize(), n.length();
            var g = 1;
            switch (this.semiMajorAxisUnits) {
              case 1:
                g = 1;
                break;
              case 2:
                g = 1 / 3.2808399;
                break;
              case 3:
                g = 1 / 3.2808399 / 12;
                break;
              case 4:
                g = 1609.344;
                break;
              case 5:
                g = 1e3;
                break;
              case 6:
                g = 149598e3 * 1e3;
                break;
              case 7:
                g = 63239.6717 * 149598e3 * 1e3;
                break;
              case 8:
                g = 206264.806 * 149598e3 * 1e3;
                break;
              case 9:
                g = 206264.806 * 149598e3 * 1e3 * 1e6;
                break;
              case 10:
                g = 1;
                break;
            }
            g *= 1 / t.get_nominalRadius();
            var _ = tt.lookAtLH($.create(0, 0, 0), s, l);
            _.invert(), this.worldMatrix = tt.get_identity(), this.worldMatrix.translate(this.translation);
            var m = 1 / t.get_nominalRadius() * this.scale * this.meanRadius;
            if (this.worldMatrix.scale($.create(m, m, m)), this.worldMatrix._multiply(tt.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.rotationalPeriod) {
              var b = (Q.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
              this.worldMatrix._multiply(tt._rotationX(-b));
            }
            n = $.scale(n, g), this.worldMatrix.translate(n), this.stationKeeping && (this.worldMatrix = tt.multiplyMatrix(_, this.worldMatrix));
          }
        };
        function Fs() {
          this.lat = 0, this.lng = 0, this.alt = 0;
        }
        var _c = {};
        function Bs() {
          this.extrude = !1, this.astronomical = !1, this.meanRadius = 6371e3, this.pointList = [];
        }
        var dc = {
          parseWkt: function(t, e, n, a) {
            for (var s = yi.split(t, "(,)"), l = r.enumerate(s); l.moveNext(); ) {
              var g = l.current, _ = r.trim(g).split(" ");
              if (_.length > 1) {
                var m = new Fs();
                m.lng = parseFloat(_[0]), this.astronomical && (m.lng -= 180), m.lat = parseFloat(_[1]), _.length > 2 && !n ? m.alt = parseFloat(_[2]) : m.alt = n, m.date = a, this.pointList.push(m);
              }
            }
          },
          getCenterPoint: function() {
            var t = new Fs();
            t.lat = 0, t.lng = 0, t.alt = 0;
            for (var e = r.enumerate(this.pointList); e.moveNext(); ) {
              var n = e.current;
              t.lat += n.lat, t.lng += n.lng, t.alt += n.alt;
            }
            return t.lat /= this.pointList.length, t.lng /= this.pointList.length, t.alt /= this.pointList.length, t;
          }
        };
        function hr() {
        }
        hr.triggerLoadSprite = function() {
          hr._pins == null && (hr._pins = D.loadPlanetTexture(ze.singleton.engineAssetUrl("pins.png")));
        }, hr.getPushPinTexture = function(t) {
          var e = null;
          if (r.keyExists(hr._pinTextureCache, t))
            return hr._pinTextureCache[t];
          try {
            e = G.prepDevice.createTexture(), G.prepDevice.bindTexture(3553, e);
            var n = Math.floor(t / 16), a = t % 16, s = document.createElement("canvas");
            s.height = 32, s.width = 32;
            var l = s.getContext("2d");
            l.drawImage(hr._pins.imageElement, a * 32, n * 32, 32, 32, 0, 0, 32, 32);
            var g = s;
            G.prepDevice.texParameteri(3553, 10242, 33071), G.prepDevice.texParameteri(3553, 10243, 33071), G.prepDevice.texImage2D(3553, 0, 6408, 6408, 5121, g), G.prepDevice.texParameteri(3553, 10241, 9985), G.prepDevice.generateMipmap(3553), G.prepDevice.bindTexture(3553, null), hr._pinTextureCache[t] = e;
          } catch {
          }
          return e;
        };
        var gc = {};
        function $a() {
          this.guid = new er(), this.header = [], this.rows = [], this.delimiter = "	", this.locked = !1;
        }
        var mc = {
          lock: function() {
            this.locked = !0;
          },
          unlock: function() {
            this.locked = !1;
          },
          save: function() {
            for (var t = "", e = !0, n = r.enumerate(this.header); n.moveNext(); ) {
              var a = n.current;
              e ? e = !1 : t += "	", t += a;
            }
            t += `\r
`;
            for (var s = r.enumerate(this.rows); s.moveNext(); ) {
              var l = s.current;
              e = !0;
              for (var g = r.enumerate(l); g.moveNext(); ) {
                var a = g.current;
                e ? e = !1 : t += "	", t += a;
              }
              t += `\r
`;
            }
            return t;
          },
          loadFromString: function(t, e, n, a) {
            var s = 0, l = t.split(`\r
`);
            if (!e || a)
              if (l.length > 0) {
                var g = l[0];
                s++, g.indexOf("	") === -1 && g.indexOf(",") > -1 && (this.delimiter = ","), e || (this.rows.length = 0), this.header = yi.splitString(g, this.delimiter);
              } else
                this.header = [];
            var _ = [];
            for (n || (_ = this.rows); s < l.length; ) {
              var m = l[s], b = yi.splitString(m, this.delimiter);
              if (b.length < 1)
                break;
              _.push(b), s++;
            }
            n && (this.rows = _);
          },
          clone: function() {
            for (var t = new $a(), e = 0; e < this.header.length; e++)
              t.header.push(this.header[e]);
            for (var n = 0; n < this.rows.length; n++) {
              t.rows.push([]);
              for (var e = 0; e < this.rows[n].length; e++)
                t.rows[n].push(this.rows[n][e]);
            }
            return t;
          },
          addColumn: function(t, e) {
            this.header.push(t);
            for (var n = 0; n < e.length; n++)
              this.rows[n].push(e[n]);
          },
          removeColumn: function(t) {
            var e = this.header.indexOf(t);
            if (e > -1) {
              this.header.splice(e, 1);
              for (var n = 0; n < this.rows.length; n++)
                this.rows[n].splice(e, 1);
            }
          }
        };
        function Jn() {
          this.columns = {}, this.column = [], this.rows = [], this.loadFilename = "", this.sampId = "", this.selectedRow = null, this.error = !1, this.errorText = "";
        }
        Jn.loadFromUrl = function(t, e) {
          var n = new Jn();
          return n._onComplete = e, n._webFile = new _r(ze.singleton.rewrite(t, 1)), n._webFile.onStateChange = r.bind("_loadData", n), n._webFile.send(), n;
        }, Jn.loadFromString = function(t) {
          var e = new DOMParser(), n = e.parseFromString(t, "text/xml"), a = new Jn();
          return a.loadFromXML(n), a;
        };
        var pc = {
          _loadData: function() {
            this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && (this.loadFromXML(this._webFile.getXml()), this._onComplete != null && this._onComplete());
          },
          loadFromXML: function(t) {
            var e = xt.selectSingleNode(t, "VOTABLE");
            if (e != null) {
              var n = 0;
              try {
                var a = xt.selectSingleNode(xt.selectSingleNode(e, "RESOURCE"), "TABLE");
                if (a != null)
                  for (var s = r.enumerate(a.childNodes); s.moveNext(); ) {
                    var l = s.current;
                    if (l.nodeName === "FIELD") {
                      var g = new es(l, n++);
                      this.columns[g.name] = g, this.column.push(g);
                    }
                  }
              } catch {
                this.error = !0, this.errorText = xt.selectSingleNode(e, "DESCRIPTION").text;
              }
              try {
                var _ = xt.selectSingleNode(xt.selectSingleNode(xt.selectSingleNode(xt.selectSingleNode(e, "RESOURCE"), "TABLE"), "DATA"), "TABLEDATA");
                if (_ != null)
                  for (var m = r.enumerate(_.childNodes); m.moveNext(); ) {
                    var l = m.current;
                    if (l.nodeName === "TR") {
                      var b = new So(this);
                      b.columnData = new Array(r.keyCount(this.columns)), n = 0;
                      for (var y = r.enumerate(l.childNodes); y.moveNext(); ) {
                        var M = y.current;
                        M.nodeName === "TD" && (b.columnData[n++] = r.trim(xt.getInnerText(M)));
                      }
                      this.rows.push(b);
                    }
                  }
              } catch {
              }
            }
          },
          save: function(t) {
            return !0;
          },
          getColumnByUcd: function(t) {
            for (var e = r.enumerate(r.keys(this.columns)); e.moveNext(); ) {
              var n = e.current, a = this.columns[n];
              if (r.replaceString(a.ucd, "_", ".").toLocaleLowerCase().indexOf(t.toLocaleLowerCase()) > -1)
                return a;
            }
            return null;
          },
          getRAColumn: function() {
            for (var t = r.enumerate(r.keys(this.columns)); t.moveNext(); ) {
              var e = t.current, n = this.columns[e];
              if (n.ucd.toLocaleLowerCase().indexOf("pos.eq.ra") > -1 || n.ucd.toLocaleLowerCase().indexOf("pos_eq_ra") > -1)
                return n;
            }
            for (var a = r.enumerate(r.keys(this.columns)); a.moveNext(); ) {
              var e = a.current, n = this.columns[e];
              if (n.name.toLocaleLowerCase().indexOf("ra") > -1)
                return n;
            }
            return null;
          },
          getDecColumn: function() {
            for (var t = r.enumerate(r.keys(this.columns)); t.moveNext(); ) {
              var e = t.current, n = this.columns[e];
              if (n.ucd.toLowerCase().indexOf("pos.eq.dec") > -1 || n.ucd.toLowerCase().indexOf("pos_eq_dec") > -1)
                return n;
            }
            for (var a = r.enumerate(r.keys(this.columns)); a.moveNext(); ) {
              var e = a.current, n = this.columns[e];
              if (n.name.toLowerCase().indexOf("dec") > -1)
                return n;
            }
            return null;
          },
          getMagColumn: function() {
            for (var t = r.enumerate(r.keys(this.columns)); t.moveNext(); ) {
              var e = t.current, n = this.columns[e];
              if (n.ucd.toLowerCase().indexOf("phot.mag") > -1 || n.ucd.toLowerCase().indexOf("phot_mag") > -1)
                return n;
            }
            return null;
          },
          getDistanceColumn: function() {
            for (var t = r.enumerate(r.keys(this.columns)); t.moveNext(); ) {
              var e = t.current, n = this.columns[e];
              if (n.ucd.toLowerCase().indexOf("pos.distance") > -1 || n.ucd.toLowerCase().indexOf("pos_distance") > -1)
                return n;
            }
            return null;
          },
          toString: function() {
            for (var t = new r.StringBuilder(), e = !0, n = r.enumerate(r.keys(this.columns)); n.moveNext(); ) {
              var a = n.current, s = this.columns[a];
              e ? e = !1 : t.append("	"), t.append(s.name);
            }
            t.appendLine("");
            for (var l = r.enumerate(this.rows); l.moveNext(); ) {
              var g = l.current;
              e = !0;
              for (var _ = r.enumerate(g.columnData); _.moveNext(); ) {
                var s = _.current;
                e ? e = !1 : t.append("	"), t.append(s.toString());
              }
              t.appendLine("");
            }
            return t.toString();
          }
        };
        function So(t) {
          this.selected = !1, this.owner = t;
        }
        var vc = {
          getColumnData: function(t) {
            return this.owner.columns[t] != null ? this.columnData[this.owner.columns[t].index] : null;
          },
          get_item: function(t) {
            return t < 0 || t >= this.columnData.length ? null : this.columnData[t];
          }
        };
        function es(t, e) {
          if (this.id = "", this.type = 0, this.precision = 0, this.dimentions = 0, this.sizes = null, this.ucd = "", this.unit = "", this.name = "", this.index = 0, this.index = e, t.attributes.getNamedItem("datatype") != null && (this.type = es.getType(t.attributes.getNamedItem("datatype").nodeValue)), t.attributes.getNamedItem("ucd") != null && (this.ucd = t.attributes.getNamedItem("ucd").nodeValue), t.attributes.getNamedItem("precision") != null)
            try {
              this.precision = parseInt(t.attributes.getNamedItem("precision").nodeValue);
            } catch {
            }
          if (t.attributes.getNamedItem("ID") != null && (this.id = t.attributes.getNamedItem("ID").nodeValue), t.attributes.getNamedItem("name") != null ? this.name = t.attributes.getNamedItem("name").nodeValue : this.name = this.id, t.attributes.getNamedItem("unit") != null && (this.unit = t.attributes.getNamedItem("unit").nodeValue), t.attributes.getNamedItem("arraysize") != null) {
            var n = t.attributes.getNamedItem("arraysize").nodeValue.split("x");
            this.dimentions = n.length, this.sizes = new Array(n.length);
            for (var a = 0, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              if (!(l.indexOf("*") > -1))
                this.sizes[a++] = parseInt(l);
              else {
                var g = 9999, _ = r.replaceString(l, "*", "");
                _.length > 0 && (g = parseInt(_)), this.sizes[a++] = g;
              }
            }
          }
        }
        es.getType = function(t) {
          var e = 13;
          switch (t) {
            case "boolean":
              e = 1;
              break;
            case "bit":
              e = 2;
              break;
            case "unsignedByte":
              e = 3;
              break;
            case "short":
              e = 4;
              break;
            case "int":
              e = 5;
              break;
            case "long":
              e = 6;
              break;
            case "char":
              e = 7;
              break;
            case "unicodeChar":
              e = 8;
              break;
            case "float":
              e = 9;
              break;
            case "double":
              e = 10;
              break;
            case "floatComplex":
              e = 11;
              break;
            case "doubleComplex":
              e = 12;
              break;
            default:
              e = 13;
              break;
          }
          return e;
        };
        var wc = {
          toString: function() {
            return this.name;
          }
        };
        function is() {
          this.copyright = "", this.creditsUrl = "", this._validWcs = !1, this.keywords = [], this.description = "", this.scaleX = 0, this.scaleY = 0, this.centerX = 0, this.centerY = 0, this.rotation = 0, this.referenceX = 0, this.referenceY = 0, this.sizeX = 0, this.sizeY = 0, this.cd1_1 = 0, this.cd1_2 = 0, this.cd2_1 = 0, this.cd2_2 = 0, this.hasRotation = !1, this.hasSize = !1, this.hasScale = !1, this.hasLocation = !1, this.hasPixel = !1, this.filename = "", this._colorCombine = !1;
        }
        var bc = {
          get_copyright: function() {
            return this.copyright;
          },
          set_copyright: function(t) {
            return this.copyright = t, t;
          },
          get_creditsUrl: function() {
            return this.creditsUrl;
          },
          set_creditsUrl: function(t) {
            return this.creditsUrl = t, t;
          },
          get_validWcs: function() {
            return this._validWcs;
          },
          set_validWcs: function(t) {
            return this._validWcs = t, t;
          },
          get_keywords: function() {
            return this.keywords.length || this.keywords.push("Image File"), this.keywords;
          },
          set_keywords: function(t) {
            return this.keywords = t, t;
          },
          get_description: function() {
            return this.description;
          },
          set_description: function(t) {
            return this.description = t, t;
          },
          get_scaleX: function() {
            return this.scaleX;
          },
          set_scaleX: function(t) {
            return this.scaleX = t, t;
          },
          get_scaleY: function() {
            return this.scaleY;
          },
          set_scaleY: function(t) {
            return this.scaleY = t, t;
          },
          get_centerX: function() {
            return this.centerX;
          },
          set_centerX: function(t) {
            return this.centerX = t, t;
          },
          get_viewCenterX: function() {
            return this.centerX + (this.get_sizeX() / 2 - this.get_referenceX()) * this.get_scaleX();
          },
          get_centerY: function() {
            return this.centerY;
          },
          set_centerY: function(t) {
            return this.centerY = t, t;
          },
          get_viewCenterY: function() {
            return this.centerY + (this.get_sizeY() / 2 - this.get_referenceY()) * this.get_scaleY();
          },
          get_rotation: function() {
            return this.rotation;
          },
          set_rotation: function(t) {
            return this.rotation = t, t;
          },
          get_referenceX: function() {
            return this.referenceX;
          },
          set_referenceX: function(t) {
            return this.referenceX = t, t;
          },
          get_referenceY: function() {
            return this.referenceY;
          },
          set_referenceY: function(t) {
            return this.referenceY = t, t;
          },
          get_sizeX: function() {
            return this.sizeX;
          },
          set_sizeX: function(t) {
            return this.sizeX = t, t;
          },
          get_sizeY: function() {
            return this.sizeY;
          },
          set_sizeY: function(t) {
            return this.sizeY = t, t;
          },
          get_cd1_1: function() {
            return this.cd1_1;
          },
          set_cd1_1: function(t) {
            return this.cd1_1 = t, t;
          },
          get_cd1_2: function() {
            return this.cd1_2;
          },
          set_cd1_2: function(t) {
            return this.cd1_2 = t, t;
          },
          get_cd2_1: function() {
            return this.cd2_1;
          },
          set_cd2_1: function(t) {
            return this.cd2_1 = t, t;
          },
          get_cd2_2: function() {
            return this.cd2_2;
          },
          set_cd2_2: function(t) {
            return this.cd2_2 = t, t;
          },
          adjustScale: function(t, e) {
            t !== this.sizeX && (this.scaleX *= this.sizeX / t, this.referenceX /= this.sizeX / t, this.sizeX = t), e !== this.sizeY && (this.scaleY *= this.sizeY / e, this.referenceY /= this.sizeY / e, this.sizeY = e);
          },
          calculateScaleFromCD: function() {
            this.scaleX = Math.sqrt(this.cd1_1 * this.cd1_1 + this.cd2_1 * this.cd2_1) * (this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1) < 0 ? -1 : 1, this.scaleY = Math.sqrt(this.cd1_2 * this.cd1_2 + this.cd2_2 * this.cd2_2);
          },
          calculateRotationFromCD: function() {
            var t = this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1 < 0 ? -1 : 1, e = Math.atan2(-t * this.cd1_2, this.cd2_2);
            this.rotation = e / Math.PI * 180;
          },
          get_filename: function() {
            return this.filename;
          },
          set_filename: function(t) {
            return this.filename = t, t;
          },
          get_colorCombine: function() {
            return this._colorCombine;
          },
          set_colorCombine: function(t) {
            return this._colorCombine = t, t;
          },
          getBitmap: function() {
            return null;
          }
        };
        function Co() {
        }
        Co._drawTest = function() {
          var t = document.getElementById("canvas"), e = t.getContext("2d");
          e.fillStyle = "rgb(80,0,0)", e.fillRect(120, 120, 165, 160), e.fillStyle = "rgba(0, 0, 160, 0.5)", e.fillRect(140, 140, 165, 160);
        };
        function Ge() {
        }
        Ge.getMpcFile = function(t) {
          Ge._webMpcFile = new _r(t), Ge._webMpcFile.responseType = "blob", Ge._webMpcFile.onStateChange = Ge.starFileStateChange, Ge._webMpcFile.send();
        }, Ge.starFileStateChange = function() {
          if (Ge._webMpcFile.get_state() === 2)
            alert(Ge._webMpcFile.get_message());
          else if (Ge._webMpcFile.get_state() === 1) {
            var t = Ge._webMpcFile.getBlob(), e = new FileReader();
            e.onloadend = function(n) {
              Ge._readFromBin(new ia(new Uint8Array(e.result))), Ge.initMPCVertexBuffer();
            }, e.readAsArrayBuffer(t);
          }
        }, Ge._readFromBin = function(t) {
          Ge.mpcList = [];
          var e = t.get_length(), n;
          try {
            for (; t.get_position() < e; )
              n = Vn._create(t), Ge.mpcList.push(n);
          } catch {
          }
          t.close();
        }, Ge.drawMPC3D = function(t, e, n) {
          var a = t.viewCamera.zoom, s = (Math.log(Math.max(1, a)) / Math.log(4) - 15.5) * 90, l = Math.min(255, Math.max(0, r.truncate(s)));
          if (!(l > 254)) {
            if (Ge._mpcVertexBuffer == null) {
              Ge.starTexture == null && (Ge.starTexture = D.loadPlanetTexture(ze.singleton.engineAssetUrl("StarProfileAlpha.png")));
              for (var g = 0; g < 7; g++)
                Ge._mpcBlendStates[g] = mn.create(!1, 1e3);
              Ge._initBegun || (Ge._startInit(), Ge._initBegun = !0);
              return;
            }
            var _ = tt.translation($.negate(n)), m = tt.multiplyMatrix(t.get_world(), _), b = tt.multiplyMatrix(m, t.get_view());
            if ($._transformCoordinate(t.cameraPosition, tt.invertMatrix(t.get_world())), Ge._mpcVertexBuffer != null)
              for (var g = 0; g < 7; g++)
                Ge._mpcBlendStates[g].set_targetState(!0), Ge._mpcBlendStates[g].get_state() && (Gt.use(t, b, Ge._mpcVertexBuffer[g].vertexBuffer, Ge.starTexture.texture2d, Pt.get_white(), e * Ge._mpcBlendStates[g].get_opacity(), !1, Q.get_jNow() - ur.baseDate, 0, t.cameraPosition, 200, 0.1), t.gl.drawArrays(0, 0, Ge._mpcVertexBuffer[g].count));
          }
        }, Ge._startInit = function() {
          Z.singleton.freestandingMode || Ge.getMpcFile(ze.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=mpcbin"));
        }, Ge.initMPCVertexBuffer = function() {
          try {
            if (Ge._mpcVertexBuffer == null) {
              var t = new Array(7);
              Ge._mpcCount = Ge.mpcList.length;
              for (var e = new Array(7), n = 0; n < 7; n++)
                e[n] = [];
              for (var a = r.enumerate(Ge.mpcList); a.moveNext(); ) {
                var s = a.current, l = 0;
                s.a < 2.5 ? l = 0 : s.a < 2.83 ? l = 1 : s.a < 2.96 ? l = 2 : s.a < 3.3 ? l = 3 : s.a < 5 ? l = 4 : s.a < 10 ? l = 5 : l = 6;
                var g = new ur();
                g.fill(s), e[l].push(g);
              }
              for (var n = 0; n < 7; n++)
                t[n] = us.create(e[n]), t[n].unlock();
              Ge._mpcVertexBuffer = t;
            }
          } finally {
          }
        };
        var yc = {};
        function fr() {
          this._camParams = _i.create(0, 0, -1, 0, 0, 100), this._location3d = $.create(0, 0, 0), this.htmlDescription = "", this._constellation = "", this._classification = 1048576, this._type = 2, this._magnitude = 0, this._distnace = 0, this.angularSize = 60, this.annotation = "", this._thumbNail = null, this._studyImageset = null, this._backgroundImageSet = null, this._searchDistance = 0, this._elevation = 50;
        }
        fr.create = function(t, e, n, a, s, l, g) {
          var _ = new fr();
          return _.set_zoomLevel(g), _._constellation = s, _._name = t, l === 2 || l === 4 ? _._camParams.set_RA(n) : _.set_lng(n), _.set_lat(e), _.set_classification(a), _.set_type(l), _;
        }, fr.createCameraParams = function(t, e, n, a, s, l) {
          var g = new fr();
          return g._constellation = a, g._name = t, g.set_classification(n), g._camParams = e, g.set_type(s), g.set_target(l), g;
        }, fr._fromXml = function(t) {
          var e = new fr();
          if (e._name = t.attributes.getNamedItem("Name").nodeValue, t.attributes.getNamedItem("MSRComponentId") != null && t.attributes.getNamedItem("Permission") != null && t.attributes.getNamedItem("Url") != null)
            return e.set_url(t.attributes.getNamedItem("Url").nodeValue), e.set_thumbnailUrl(t.attributes.getNamedItem("Thumbnail").nodeValue), e;
          t.attributes.getNamedItem("DataSetType") != null && (e._type = we.parse("ImageSetType", t.attributes.getNamedItem("DataSetType").nodeValue)), e.get_type() === 2 ? (e._camParams.set_RA(parseFloat(t.attributes.getNamedItem("RA").nodeValue)), e._camParams.set_dec(parseFloat(t.attributes.getNamedItem("Dec").nodeValue))) : (e.set_lat(parseFloat(t.attributes.getNamedItem("Lat").nodeValue)), e.set_lng(parseFloat(t.attributes.getNamedItem("Lng").nodeValue))), t.attributes.getNamedItem("Constellation") != null && (e._constellation = t.attributes.getNamedItem("Constellation").nodeValue), t.attributes.getNamedItem("Classification") != null && (e._classification = we.parse("Classification", t.attributes.getNamedItem("Classification").nodeValue)), t.attributes.getNamedItem("Magnitude") != null && (e._magnitude = parseFloat(t.attributes.getNamedItem("Magnitude").nodeValue)), t.attributes.getNamedItem("AngularSize") != null && (e.angularSize = parseFloat(t.attributes.getNamedItem("AngularSize").nodeValue)), t.attributes.getNamedItem("ZoomLevel") != null && e.set_zoomLevel(parseFloat(t.attributes.getNamedItem("ZoomLevel").nodeValue)), t.attributes.getNamedItem("Rotation") != null && (e._camParams.rotation = parseFloat(t.attributes.getNamedItem("Rotation").nodeValue)), t.attributes.getNamedItem("Annotation") != null && (e.annotation = t.attributes.getNamedItem("Annotation").nodeValue), t.attributes.getNamedItem("Angle") != null && (e._camParams.angle = parseFloat(t.attributes.getNamedItem("Angle").nodeValue)), t.attributes.getNamedItem("Opacity") != null ? e._camParams.opacity = parseFloat(t.attributes.getNamedItem("Opacity").nodeValue) : e._camParams.opacity = 100, e.set_target(65536), t.attributes.getNamedItem("Target") != null && e.set_target(we.parse("SolarSystemObjects", t.attributes.getNamedItem("Target").nodeValue)), t.attributes.getNamedItem("ViewTarget") != null && (e._camParams.viewTarget = $.parse(t.attributes.getNamedItem("ViewTarget").nodeValue)), t.attributes.getNamedItem("TargetReferenceFrame") != null && (e._camParams.targetReferenceFrame = t.attributes.getNamedItem("TargetReferenceFrame").nodeValue);
          var n = xt.selectSingleNode(t, "Description");
          n != null && (e.htmlDescription = xt.getInnerText(n));
          var a = xt.selectSingleNode(t, "BackgroundImageSet");
          if (a != null) {
            var s = xt.selectSingleNode(a, "ImageSet");
            e._backgroundImageSet = Mi.fromXMLNode(s);
          }
          var l = xt.selectSingleNode(t, "ForegroundImageSet");
          if (l != null) {
            var s = xt.selectSingleNode(l, "ImageSet");
            e._studyImageset = Mi.fromXMLNode(s);
          }
          return l = xt.selectSingleNode(t, "ImageSet"), l != null && (e._studyImageset = Mi.fromXMLNode(l)), e;
        }, fr._properCaps = function(t) {
          for (var e = t.split(" "), n = "", a = r.enumerate(e); a.moveNext(); ) {
            var s = a.current;
            n = n + s.substr(0, 1).toUpperCase() + (s.length > 1 ? s.substr(1).toLowerCase() : "") + " ";
          }
          return r.trim(n);
        };
        var Sc = {
          get_tag: function() {
            return this._tag;
          },
          set_tag: function(t) {
            return this._tag = t, t;
          },
          get_url: function() {
            return this._url;
          },
          set_url: function(t) {
            return this._url = t, t;
          },
          get_thumbnail: function() {
            return this._thumbnail;
          },
          set_thumbnail: function(t) {
            return this._thumbnail = t, t;
          },
          get_name: function() {
            return this.get_names()[0];
          },
          get_names: function() {
            return r.emptyString(this._name) ? "".split(";") : this._name.split(";");
          },
          set_names: function(t) {
            return this._name = yi.getNamesStringFromArray(t), t;
          },
          get_camParams: function() {
            if (this.get_classification() === 536870912 && this._camParams.target !== 20) {
              var t = D.getPlanetLocation(this.get_name());
              this._camParams.set_RA(t.RA), this._camParams.set_dec(t.dec), this._distnace = t.distance;
            }
            return this._camParams;
          },
          set_camParams: function(t) {
            return this._camParams = t, t;
          },
          updatePlanetLocation: function(t) {
            this._camParams.viewTarget = D.getPlanet3dLocationJD(this.get_target(), t), this.get_target() !== 65536 && this.get_target() !== 20 && (this._camParams.viewTarget = D.getPlanetTargetPoint(this.get_target(), this.get_lat(), this.get_lng(), t));
          },
          get_location3d: function() {
            return (this.get_classification() === 536870912 || !this._location3d.x && !this._location3d.y && !this._location3d.z) && (this._location3d = U.raDecTo3d(this.get_RA(), this.get_dec())), this._location3d;
          },
          get_lat: function() {
            return this.get_camParams().lat;
          },
          set_lat: function(t) {
            return this._camParams.lat = t, t;
          },
          get_lng: function() {
            return this.get_camParams().lng;
          },
          set_lng: function(t) {
            return this._camParams.lng = t, t;
          },
          get_opacity: function() {
            return this.get_camParams().opacity;
          },
          set_opacity: function(t) {
            return this._camParams.opacity = t, t;
          },
          get_constellation: function() {
            return this._constellation;
          },
          set_constellation: function(t) {
            return this._constellation = t, t;
          },
          get_classification: function() {
            return this._classification;
          },
          set_classification: function(t) {
            return this._classification = t, t;
          },
          get_type: function() {
            return this._type;
          },
          set_type: function(t) {
            return this._type = t, t;
          },
          get_magnitude: function() {
            return this._magnitude;
          },
          set_magnitude: function(t) {
            return this._magnitude = t, t;
          },
          get_distance: function() {
            return this._distnace;
          },
          set_distance: function(t) {
            return this._distnace = t, t;
          },
          get_zoomLevel: function() {
            return this.get_camParams().zoom;
          },
          set_zoomLevel: function(t) {
            return this._camParams.zoom = t, t;
          },
          get_annotation: function() {
            return this.annotation;
          },
          set_annotation: function(t) {
            return this.annotation = t, t;
          },
          get_studyImageset: function() {
            return this._studyImageset;
          },
          set_studyImageset: function(t) {
            return this._studyImageset = t, t;
          },
          get_backgroundImageset: function() {
            return this._backgroundImageSet;
          },
          set_backgroundImageset: function(t) {
            return t != null && this.set_type(t.get_dataSetType()), this._backgroundImageSet = t, t;
          },
          get_searchDistance: function() {
            return this._searchDistance;
          },
          set_searchDistance: function(t) {
            return this._searchDistance = t, t;
          },
          get_elevation: function() {
            return this._elevation;
          },
          set_elevation: function(t) {
            return this._elevation = t, t;
          },
          get_thumbnailUrl: function() {
            if (r.emptyString(this._thumbnailField)) {
              if (this._studyImageset != null && !r.emptyString(this._studyImageset.get_thumbnailUrl()))
                return this._studyImageset.get_thumbnailUrl();
              if (this._backgroundImageSet != null && !r.emptyString(this._backgroundImageSet.get_thumbnailUrl()))
                return this._backgroundImageSet.get_thumbnailUrl();
              var t = this.get_name();
              return t.indexOf(";") > -1 && (t = t.substr(0, t.indexOf(";"))), this.get_classification() === 1 || Z.singleton.freestandingMode ? ze.singleton.engineAssetUrl("thumb_star.jpg") : ze.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=" + t.toLowerCase());
            }
            return this._thumbnailField;
          },
          set_thumbnailUrl: function(t) {
            return this._thumbnailField = t, t;
          },
          get_RA: function() {
            return this.get_camParams().get_RA();
          },
          set_RA: function(t) {
            return this._camParams.set_RA(t), t;
          },
          get_dec: function() {
            return this.get_camParams().get_dec();
          },
          set_dec: function(t) {
            return this._camParams.set_dec(t), t;
          },
          toString: function() {
            return this._name;
          },
          _saveToXml: function(t, e) {
            t._writeStartElement(e), t._writeAttributeString("Name", this._name), t._writeAttributeString("DataSetType", we.toXml("ImageSetType", this._type)), this.get_type() === 2 ? (t._writeAttributeString("RA", this._camParams.get_RA().toString()), t._writeAttributeString("Dec", this._camParams.get_dec().toString())) : (t._writeAttributeString("Lat", this.get_lat().toString()), t._writeAttributeString("Lng", this.get_lng().toString())), t._writeAttributeString("Constellation", this._constellation), t._writeAttributeString("Classification", we.toXml("Classification", this._classification)), t._writeAttributeString("Magnitude", this._magnitude.toString()), t._writeAttributeString("Distance", this._distnace.toString()), t._writeAttributeString("AngularSize", this.angularSize.toString()), t._writeAttributeString("ZoomLevel", this.get_zoomLevel().toString()), t._writeAttributeString("Rotation", this._camParams.rotation.toString()), t._writeAttributeString("Angle", this._camParams.angle.toString()), t._writeAttributeString("Opacity", this._camParams.opacity.toString()), t._writeAttributeString("Target", we.toXml("SolarSystemObjects", this.get_target())), t._writeAttributeString("ViewTarget", this._camParams.viewTarget.toString()), t._writeAttributeString("TargetReferenceFrame", this._camParams.targetReferenceFrame), t._writeStartElement("Description"), t._writeCData(this.htmlDescription), t._writeEndElement(), this._backgroundImageSet != null && (t._writeStartElement("BackgroundImageSet"), Mi.saveToXml(t, this._backgroundImageSet, ""), t._writeEndElement()), this._studyImageset != null && Mi.saveToXml(t, this._studyImageset, ""), t._writeEndElement();
          },
          get_bounds: function() {
            return this._bounds;
          },
          set_bounds: function(t) {
            return this._bounds = t, t;
          },
          get_isImage: function() {
            return this._studyImageset != null || this._backgroundImageSet != null;
          },
          get_isTour: function() {
            return !1;
          },
          get_isFolder: function() {
            return !1;
          },
          get_children: function() {
            return [];
          },
          get_readOnly: function() {
            return !0;
          },
          get_target: function() {
            return this._camParams.target;
          },
          set_target: function(t) {
            return this._camParams.target = t, t;
          },
          get_isCloudCommunityItem: function() {
            return !1;
          }
        };
        function To() {
          this.a = 0, this.e = 0, this.ea = 0;
        }
        var Cc = {};
        function Wi(t, e, n, a) {
          this.poleDec = 0, this.poleRa = 0, this.primeMeridian = 0, this.rotationRate = 0, this.poleDec = e, this.poleRa = t, this.primeMeridian = n, this.rotationRate = a;
        }
        var Tc = {};
        function D() {
        }
        D.loadPlanetTexture = function(t) {
          var e = new di();
          return e.load(t), e;
        }, D.getPlanet3dLocation = function(t) {
          try {
            if (t < 21)
              return D._planet3dLocations[t].copy();
          } catch {
          }
          return $.create(0, 0, 0);
        }, D.getPlanet3dSufaceAltitude = function(t) {
          try {
            if (t < 21)
              return D.getAdjustedPlanetRadius(t);
          } catch {
          }
          return 0;
        }, D.getPlanetTargetPoint = function(t, e, n, a) {
          var s;
          return a ? s = D.getPlanet3dLocationJD(t, a) : s = D.getPlanet3dLocation(t), s.add(U.raDecTo3dAu(n / 15 + 6, e, D.getPlanet3dSufaceAltitude(t))), s;
        }, D.getPlanet3dLocationJD = function(t, e) {
          try {
            var n = new $(), a = ge.getPlanet(e, 0, 0, 0, -6378149), s = U.raDecTo3dAu(a.RA, a.dec, a.distance);
            if (t === 19)
              n = $.create(-s.x, -s.y, -s.z);
            else {
              var l = ge.getPlanet(e, t, 0, 0, -6378149);
              n = U.raDecTo3dAu(l.RA, l.dec, l.distance), n.subtract(s);
            }
            if (n.rotateX(U.meanObliquityOfEcliptic(e) * D.RC), X.get_active().get_solarSystemScale() !== 1)
              switch (t) {
                case 9:
                  var g = D.getPlanet3dLocationJD(19, e);
                  n.subtract(g), n.multiply(X.get_active().get_solarSystemScale() / 2), n.add(g);
                  break;
                case 10:
                case 11:
                case 12:
                case 13:
                  var g = D.getPlanet3dLocationJD(4, e);
                  n.subtract(g), n.multiply(X.get_active().get_solarSystemScale()), n.add(g);
                  break;
                default:
                  break;
              }
            return n;
          } catch {
            return $.create(0, 0, 0);
          }
        }, D.getPlanetLocation = function(t) {
          var e = D.getPlanetIDFromName(t);
          return D._planetLocations != null ? D._planetLocations[e] : ge.getPlanet(Q.get_jNow(), e, Q.get_location().get_lat(), Q.get_location().get_lng(), Q.get_altitude());
        }, D.getPlanetLocationJD = function(t, e) {
          var n = D.getPlanetIDFromName(t);
          return ge.getPlanet(e, n, Q.get_location().get_lat(), Q.get_location().get_lng(), Q.get_altitude());
        }, D.getPlanetIDFromName = function(t) {
          switch (t) {
            case "Sun":
              return 0;
            case "Mercury":
              return 1;
            case "Venus":
              return 2;
            case "Mars":
              return 3;
            case "Jupiter":
              return 4;
            case "Saturn":
              return 5;
            case "Uranus":
              return 6;
            case "Neptune":
              return 7;
            case "Pluto":
              return 8;
            case "Moon":
              return 9;
            case "Io":
              return 10;
            case "Europa":
              return 11;
            case "Ganymede":
              return 12;
            case "Callisto":
              return 13;
            case "Earth":
              return 19;
            case "IoShadow":
              return 14;
            case "EuropaShadow":
              return 15;
            case "GanymedeShadow":
              return 16;
            case "CallistoShadow":
              return 17;
            case "SunEclipsed":
              return 18;
            case "Custom":
              return 20;
            case "Undefined":
              return 65536;
            default:
              return -1;
          }
        }, D.getImageSetNameNameFrom3dId = function(t) {
          switch (t) {
            case 0:
              return "Sun";
            case 1:
              return "Mercury";
            case 2:
              return "Venus";
            case 3:
              return "Visible Imagery";
            case 4:
              return "Jupiter";
            case 5:
              return "Saturn";
            case 6:
              return "Uranus";
            case 7:
              return "Neptune";
            case 8:
              return "Pluto";
            case 9:
              return "Moon";
            case 10:
              return "Io (Jupiter)";
            case 11:
              return "Europa (Jupiter)";
            case 12:
              return "Ganymede (Jupiter)";
            case 13:
              return "Callisto (Jupiter)";
            case 19:
              return "Bing Maps Aerial";
            default:
              return "";
          }
        }, D.getNameFrom3dId = function(t) {
          switch (t) {
            case 0:
              return "Sun";
            case 1:
              return "Mercury";
            case 2:
              return "Venus";
            case 3:
              return "Mars";
            case 4:
              return "Jupiter";
            case 5:
              return "Saturn";
            case 6:
              return "Uranus";
            case 7:
              return "Neptune";
            case 8:
              return "Pluto";
            case 9:
              return "Moon";
            case 10:
              return "Io";
            case 11:
              return "Europa";
            case 12:
              return "Ganymede";
            case 13:
              return "Callisto";
            case 19:
              return "Earth";
            default:
              return "";
          }
        }, D.updatePlanetLocations = function(t) {
          if (D._jNow = Q.get_jNow(), t && D.updateOrbits(0), D._planetDiameters == null && (D._planetDiameters = new Array(20), D._planetDiameters[0] = 9291568e-9, D._planetDiameters[1] = 325794793734425e-19, D._planetDiameters[2] = 808669220531394e-19, D._planetDiameters[3] = 453785605596396e-19, D._planetDiameters[4] = 954501e-9, D._planetDiameters[5] = 802173e-9, D._planetDiameters[6] = 339564e-9, D._planetDiameters[7] = 324825e-9, D._planetDiameters[8] = 152007379777805e-19, D._planetDiameters[9] = 232084653538149e-19, D._planetDiameters[10] = 243519298386342e-19, D._planetDiameters[11] = 208692629580609e-19, D._planetDiameters[12] = 351742670356556e-19, D._planetDiameters[13] = 322263666626559e-19, D._planetDiameters[14] = 243519298386342e-19, D._planetDiameters[15] = 208692629580609e-19, D._planetDiameters[16] = 351742670356556e-19, D._planetDiameters[17] = 322263666626559e-19, D._planetDiameters[18] = 9291568e-9 * 2, D._planetDiameters[19] = 855626412117809e-19), D.planetColors == null) {
            var e = j.fromArgb(255, 255, 255, 221), n = j.fromArgb(255, 255, 68, 0);
            D.planetColors = new Array(20), D.planetColors[0] = Pt.get_yellow(), D.planetColors[1] = Pt.get_white(), D.planetColors[2] = e, D.planetColors[3] = n, D.planetColors[4] = j.fromArgb(255, 255, 165, 0), D.planetColors[5] = j.fromArgb(255, 184, 134, 11), D.planetColors[6] = j.fromArgb(255, 173, 216, 230), D.planetColors[7] = Pt.get_blue(), D.planetColors[8] = Pt.get_white(), D.planetColors[9] = Pt.get_white(), D.planetColors[10] = Pt.get_white(), D.planetColors[11] = Pt.get_white(), D.planetColors[12] = Pt.get_white(), D.planetColors[13] = Pt.get_white(), D.planetColors[14] = Pt.get_black(), D.planetColors[15] = Pt.get_black(), D.planetColors[16] = Pt.get_black(), D.planetColors[17] = Pt.get_black(), D.planetColors[18] = Pt.get_white(), D.planetColors[19] = j.fromArgb(255, 173, 216, 230);
          }
          if (D._planetTilts == null && (D._planetTilts = new Array(20), D._planetTilts[0] = 0, D._planetTilts[1] = 0.01, D._planetTilts[2] = 177.4, D._planetTilts[3] = 25.19, D._planetTilts[4] = 3.13, D._planetTilts[5] = 26.73, D._planetTilts[6] = 97.77, D._planetTilts[7] = 28.32, D._planetTilts[8] = 119.61, D._planetTilts[9] = 23.439, D._planetTilts[10] = 2.21, D._planetTilts[11] = 0, D._planetTilts[12] = -0.33, D._planetTilts[13] = 0, D._planetTilts[14] = 0, D._planetTilts[15] = 0, D._planetTilts[16] = 0, D._planetTilts[17] = 0, D._planetTilts[18] = 0, D._planetTilts[19] = 23.5), D._planetTilts[19] = D._obliquity / D.RC, D.planetRotationPeriod == null && (D.planetRotationPeriod = new Array(20), D.planetRotationPeriod[0] = 25.37995, D.planetRotationPeriod[1] = 58.6462, D.planetRotationPeriod[2] = -243.0187, D.planetRotationPeriod[3] = 1.02595675, D.planetRotationPeriod[4] = 0.41007, D.planetRotationPeriod[5] = 0.426, D.planetRotationPeriod[6] = -0.71833, D.planetRotationPeriod[7] = 0.67125, D.planetRotationPeriod[8] = -6.38718, D.planetRotationPeriod[9] = 27.3, D.planetRotationPeriod[10] = 1.769137786, D.planetRotationPeriod[11] = 3.551, D.planetRotationPeriod[12] = 7.155, D.planetRotationPeriod[13] = 16.69, D.planetRotationPeriod[14] = 0, D.planetRotationPeriod[15] = 0, D.planetRotationPeriod[16] = 0, D.planetRotationPeriod[17] = 0, D.planetRotationPeriod[18] = 0, D.planetRotationPeriod[19] = 0.99726968), D._planetScales == null && (D._planetScales = new Array(20)), D._planet3dLocations == null && (D._planet3dLocations = new Array(20)), X.get_active().get_actualPlanetScale())
            D._planetScales[0] = 0.5, D._planetScales[1] = 0.25, D._planetScales[2] = 0.25, D._planetScales[3] = 0.25, D._planetScales[4] = 0.25, D._planetScales[5] = 0.5, D._planetScales[6] = 0.25, D._planetScales[7] = 0.25, D._planetScales[8] = 0.25, D._planetScales[9] = 0.25, D._planetScales[10] = 0.25, D._planetScales[11] = 0.25, D._planetScales[12] = 0.25, D._planetScales[13] = 0.25, D._planetScales[14] = 0.25, D._planetScales[15] = 0.25, D._planetScales[16] = 0.25, D._planetScales[17] = 0.25, D._planetScales[18] = 0.5, D._planetScales[19] = 0.25;
          else {
            for (var a = 0; a < 20; a++)
              a < 10 ? D._planetScales[a] = 0.25 : D._planetScales[a] = 0.1;
            D._planetScales[0] = 0.5, D._planetScales[5] = 0.5, D._planetScales[18] = 0.5;
          }
          D._planetDrawOrder = {}, D._planetLocations = new Array(20);
          var s = new $(), l = 0;
          {
            var g = ge.getPlanet(D._jNow, l, t ? 0 : Q.get_location().get_lat(), t ? 0 : Q.get_location().get_lng(), t ? -6378149 : Q.get_altitude());
            s = U.raDecTo3dAu(g.RA, g.dec, g.distance);
          }
          D._planet3dLocations[19] = $.create(-s.x, -s.y, -s.z), D._planet3dLocations[19].rotateX(D._obliquity);
          for (var a = 0; a < 18; a++) {
            if (D._planetLocations[a] = ge.getPlanet(D._jNow, a, t ? 0 : Q.get_location().get_lat(), t ? 0 : Q.get_location().get_lng(), t ? -6378149 : Q.get_altitude()), D._planet3dLocations[a] = U.raDecTo3dAu(D._planetLocations[a].RA, D._planetLocations[a].dec, D._planetLocations[a].distance), D._planet3dLocations[a].subtract(s), D._planet3dLocations[a].rotateX(D._obliquity), X.get_active().get_actualPlanetScale() && (D._planetScales[a] = 2 * Math.atan(0.5 * (D._planetDiameters[a] / D._planetLocations[a].distance)) / Math.PI * 180), X.get_active().get_solarSystemScale() !== 1) {
              var _ = a;
              switch (_) {
                case 9:
                  var m = D._planet3dLocations[19];
                  D._planet3dLocations[a].subtract(m), D._planet3dLocations[a].multiply(X.get_active().get_solarSystemScale() / 2), D._planet3dLocations[a].add(m);
                  break;
                case 10:
                case 11:
                case 12:
                case 13:
                  var m = D._planet3dLocations[4];
                  D._planet3dLocations[a].subtract(m), D._planet3dLocations[a].multiply(X.get_active().get_solarSystemScale()), D._planet3dLocations[a].add(m);
                  break;
              }
            }
            for (var b = -D._planetLocations[a].distance; r.keyExists(D._planetDrawOrder, b); )
              b += 1e-10;
            D._planetDrawOrder[b] = a;
          }
          D._planetLocations[18] = D._planetLocations[0], D._planetScales[0] *= 2, D._planetScales[18] = D._planetScales[0], D._planetScales[5] = D._planetScales[5] * 2, D._lastUpdate = Q.get_now();
        }, D.planetsReady = function() {
        }, D.updateOrbits = function(t) {
          try {
            if (D._obliquity = U.meanObliquityOfEcliptic(Q.get_jNow()) * D.RC, t !== D._lastPlanetCenterID && (D._orbits = null), D._lastPlanetCenterID = t, D._orbits == null && (t < 0 ? D._eclipticTilt = tt.get_identity() : (D._eclipticTilt = tt.get_identity(), D._eclipticTilt = tt._rotationX(D._obliquity)), D.planetOrbitalYears == null && (D.planetOrbitalYears = new Array(20), D.planetOrbitalYears[0] = 1, D.planetOrbitalYears[1] = 0.241, D.planetOrbitalYears[2] = 0.615, D.planetOrbitalYears[3] = 1.881, D.planetOrbitalYears[4] = 11.87, D.planetOrbitalYears[5] = 29.45, D.planetOrbitalYears[6] = 84.07, D.planetOrbitalYears[7] = 164.9, D.planetOrbitalYears[8] = 248.1, D.planetOrbitalYears[9] = 27.3 / 365.25, D.planetOrbitalYears[10] = 16.6890184 / 365.25, D.planetOrbitalYears[11] = 3.551181 / 365.25, D.planetOrbitalYears[12] = 7.15455296 / 365.25, D.planetOrbitalYears[13] = 16.6890184 / 365.25, D.planetOrbitalYears[19] = 1), !D.readOrbits())) {
              D._orbits = new Array(20);
              for (var e = 1; e < 20; e++)
                if (D._orbits[e] = new Array(D._orbitalSampleRate), e < 9 || e === 19) {
                  for (var n = 0; n < D._orbitalSampleRate; n++) {
                    var a = t, s = D._jNow + D.planetOrbitalYears[e] * 365.25 / D._orbitalSampleRate * (n - D._orbitalSampleRate / 2), l = new $();
                    if (e === 9 ? a = -1 : e > 9 && e < 14 && (a = 4), a > -1) {
                      var g = ge.getPlanet(s, a, 0, 0, -6378149);
                      l = U.raDecTo3dAu(g.RA, g.dec, g.distance);
                    }
                    if (e !== 19) {
                      var _ = ge.getPlanet(s, e, 0, 0, -6378149);
                      D._orbits[e][n] = U.raDecTo3dAu(_.RA, _.dec, _.distance), D._orbits[e][n].subtract(l);
                    } else
                      D._orbits[e][n] = $.create(-l.x, -l.y, -l.z);
                    D._orbits[e][n].rotateX(D._obliquity);
                  }
                  D._orbits[e][D._orbitalSampleRate - 1] = D._orbits[e][0];
                }
              D.dumpOrbitsFile();
            }
          } finally {
          }
        }, D.readOrbits = function() {
          return !1;
        }, D.dumpOrbitsFile = function() {
        }, D.drawPlanets = function(t, e) {
          D._planetTextures == null && D._loadPlanetTextures();
          var n = D._geocentricElongation(D._planetLocations[9].RA, D._planetLocations[9].dec, D._planetLocations[0].RA, D._planetLocations[0].dec);
          D._planetLocations[9].RA - D._planetLocations[0].RA, D._planetLocations[9].RA < D._planetLocations[0].RA, D._phaseAngle(n, D._planetLocations[9].distance, D._planetLocations[0].distance), D._positionAngle(D._planetLocations[9].RA, D._planetLocations[9].dec, D._planetLocations[0].RA, D._planetLocations[0].dec);
          var a = Math.abs(D._planetLocations[9].RA - D._planetLocations[0].RA) * 15 * Math.cos(U.degreesToRadians(D._planetLocations[0].dec)), s = Math.abs(D._planetLocations[9].dec - D._planetLocations[0].dec), l = Math.sqrt(a * a + s * s), g = 0, _ = D._planetScales[9] / 2 - l;
          Math.min(32, r.truncate(l * 32)), _ > D._planetScales[0] / 4 && (g = Math.min(1, (_ - D._planetScales[0] / 2) / 1e-3), D._drawPlanet(t, 18, g));
          for (var m = r.enumerate(r.keys(D._planetDrawOrder)); m.moveNext(); ) {
            var b = m.current, y = D._planetDrawOrder[b];
            D._drawPlanet(t, y, 1);
          }
          return !0;
        }, D._loadPlanetTextures = function() {
          var t = ze.singleton.engineAssetUrl("");
          D._planetTextures = new Array(20), D._planetTextures[0] = D.loadPlanetTexture(t + "sun.png"), D._planetTextures[1] = D.loadPlanetTexture(t + "mercury.png"), D._planetTextures[2] = D.loadPlanetTexture(t + "venus.png"), D._planetTextures[3] = D.loadPlanetTexture(t + "mars.png"), D._planetTextures[4] = D.loadPlanetTexture(t + "jupiter.png"), D._planetTextures[5] = D.loadPlanetTexture(t + "saturn.png"), D._planetTextures[6] = D.loadPlanetTexture(t + "uranus.png"), D._planetTextures[7] = D.loadPlanetTexture(t + "neptune.png"), D._planetTextures[8] = D.loadPlanetTexture(t + "pluto.png"), D._planetTextures[9] = D.loadPlanetTexture(t + "moon.png"), D._planetTextures[10] = D.loadPlanetTexture(t + "io.png"), D._planetTextures[11] = D.loadPlanetTexture(t + "europa.png"), D._planetTextures[12] = D.loadPlanetTexture(t + "ganymede.png"), D._planetTextures[13] = D.loadPlanetTexture(t + "callisto.png"), D._planetTextures[14] = D.loadPlanetTexture(t + "moonshadow.png"), D._planetTextures[15] = D.loadPlanetTexture(t + "moonshadow.png"), D._planetTextures[16] = D.loadPlanetTexture(t + "moonshadow.png"), D._planetTextures[17] = D.loadPlanetTexture(t + "moonshadow.png"), D._planetTextures[18] = D.loadPlanetTexture(t + "sunCorona.png"), D._planetTextures[19] = D.loadPlanetTexture(t + "earth.png");
        }, D.drawPlanets3D = function(t, e, n) {
          D.initPlanetResources(t);
          var a = yi.solarSystemToMeters(t.get_solarSystemCameraDistance());
          Math.min(1, Math.max(xt.log10(a) - 7.3, 0));
          var s = Math.min(1, Math.max(xt.log10(a) - 8.6, 0));
          if (X.get_active().get_solarSystemOrbits() && s > 0) {
            for (var l = 1; l < 10; l++) {
              var g = l;
              l === 9 && (g = 19);
              var _ = Math.atan2(D._planet3dLocations[g].z, D._planet3dLocations[g].x);
              D._drawSingleOrbit(t, D.planetColors[g], g, n, _, D._planet3dLocations[g], s);
            }
            var m = 9;
            D._drawSingleOrbit(t, D.planetColors[m], m, n, 0, D._planet3dLocations[m], s);
          }
          r.clearKeys(D._drawOrder);
          for (var b = t.cameraPosition.copy(), y = 0; y < 14; y++)
            if (!(X.get_active().get_solarSystemLighting() && D._planetLocations[y].eclipsed)) {
              var M = $.subtractVectors(b, $.subtractVectors(D._planet3dLocations[y], n));
              r.keyExists(D._drawOrder, M.length()) || (D._drawOrder[M.length()] = y);
            }
          var A = $.subtractVectors(b, $.subtractVectors(D._planet3dLocations[19], n));
          r.keyExists(D._drawOrder, A.length()) || (D._drawOrder[A.length()] = 19);
          for (var R = r.enumerate(r.keys(D._drawOrder)); R.moveNext(); ) {
            var F = R.current, y = D._drawOrder[F];
            D._drawPlanet3d(t, y, n);
          }
          return !0;
        }, D.getPlanetOrientationAtEpoch = function(t) {
          var e = tt.get_identity(), n = 23.4392794;
          return t === 19 ? e._multiply(tt._rotationX(n * D.RC)) : (e._multiply(tt._rotationX(-90 * D.RC)), e._multiply(tt._rotationZ((180 + D._planetAngles[t].primeMeridian) * D.RC)), e._multiply(tt._rotationX((90 - D._planetAngles[t].poleDec) * D.RC)), e._multiply(tt._rotationZ((D._planetAngles[t].poleRa - 90) * D.RC)), e._multiply(tt._rotationX(n * D.RC)), e._multiply(tt._rotationX(90 * D.RC))), e;
        }, D.setupPlanetMatrix = function(t, e, n, a) {
          var s = t.get_world().clone();
          if (D._setupMatrixForPlanetGeometry(t, e, n, a), e === 0) {
            var l = D.getAdjustedPlanetRadius(e);
            s.scale($.create(l, l, l));
            var g = $.subtractVectors(D._planet3dLocations[e], n);
            s._multiply(tt.translation(g)), t.set_worldBaseNonRotating(s);
          }
        }, D._setupMatrixForPlanetGeometry = function(t, e, n, a) {
          var s = D.getAdjustedPlanetRadius(e), l = 0;
          e === 19 ? l = Math.PI + U.mstFromUTC2(Q.get_now(), 0) / 180 * Math.PI : l = Math.PI + (D._jNow - 2451545) / D.planetRotationPeriod[e] * Math.PI * 2 % (Math.PI * 2), e === 9 && (l -= Math.PI / 2);
          var g = t.get_world().clone(), _ = t.get_world().clone(), m = $.subtractVectors(D._planet3dLocations[e], n), b = D.getPlanetOrientationAtEpoch(e);
          return g.scale($.create(s, s, s)), g._multiply(tt._rotationY(-l)), g._multiply(b), e === t.viewCamera.target && (D.earthMatrix = tt.get_identity(), D.earthMatrix._multiply(tt._rotationY(-l)), D.earthMatrix._multiply(b), D.earthMatrixInv = D.earthMatrix.clone(), D.earthMatrixInv.invert()), g._multiply(tt.translation(m)), t.set_world(g), t.set_worldBase(t.get_world().clone()), t.set_nominalRadius(D.getPlanetRadiusInMeters(e)), a && t.makeFrustum(), _.scale($.create(s, s, s)), _._multiply(b), _._multiply(tt.translation(m)), t.set_worldBaseNonRotating(_), l;
        }, D.initPlanetResources = function(t) {
        }, D._drawSingleOrbit = function(t, e, n, a, s, l, g) {
          if (!(g < 0.01))
            if (t.gl == null) {
              var _ = D._orbitalSampleRate, m = !1;
              t.get_viewPoint();
              var b = t.device;
              b.save(), b.strokeStyle = e.toString(), b.lineWidth = 2, b.globalAlpha = 1;
              for (var y = new $(), M = new $(), A = new $(), R = !0, F = tt.translation($.negate(a)), O = tt.multiplyMatrix(F, t.WVP), B = tt.multiplyMatrix(F, t.WV), H = 0; H < _; H++) {
                var K = D._orbits[n][H], J = (Math.atan2(D._orbits[n][H].z, D._orbits[n][H].x) + Math.PI * 2 - s) % (Math.PI * 2), it = r.truncate(J / (Math.PI * 2) * 255), ot = it / 255;
                it < 2 && !m && (K = l, ot = 1), M = B.transform(K), y = O.transform(K), M.z > 0 && (R ? R = !1 : (b.beginPath(), b.globalAlpha = ot * g, b.moveTo(A.x, A.y), b.lineTo(y.x, y.y), b.stroke())), A = y;
              }
              b.restore();
            } else if (n !== 9) {
              var _ = D._orbitalSampleRate, m = !1;
              t.get_viewPoint();
              for (var y = new $(), M = new $(), A = new $(), lt = new j(), R = !0, gt = new vo(), H = 0; H < _; H++) {
                var K = D._orbits[n][H].copy(), J = (Math.atan2(K.z, K.x) + Math.PI * 2 - s) % (Math.PI * 2), it = r.truncate(J / (Math.PI * 2) * 255), ot = it / 255, ut = j.fromArgb(it, e.r, e.g, e.b);
                it < 2 && !m && !R && (K = $.subtractVectors(l, a), ot = 1, it = 255, ut.a = 255, lt.a = 255, gt.addLine(A, K.copy(), lt._clone(), ut._clone()), lt.a = 0, ut.a = 0, K = D._orbits[n][H].copy(), m = !0), K = $.subtractVectors(K, a), R ? R = !1 : gt.addLine(A, K, lt, ut), A = K, lt = ut._clone();
              }
              gt.drawLines(t, 1, Pt.get_white()), gt.clear();
            } else {
              var St = 0;
              switch (n) {
                case 9:
                  St = 398600.44189 + 4902.7779;
                  break;
                case 10:
                case 11:
                case 12:
                case 13:
                  St = 126686534;
                  break;
                default:
                  St = 1327124400188e-1;
                  break;
              }
              var mt = 1 / 1440 * 0.1, Dt = D.getPlanetPositionDirect(n, D._jNow), yt = D.getPlanetPositionDirect(n, D._jNow - mt), ue = $.scale($.subtractVectors(Dt, yt), 1 / mt), _e = D._stateVectorToKeplerian(Dt, ue, St);
              D._drawSingleOrbitElements(t, e, n, a, s, l, _e);
            }
        }, D.getPlanetPositionDirect = function(t, e) {
          var n = 0, a = 0, s = 0;
          switch (t) {
            case 1:
              n = Wt.eclipticLongitude(e), a = Wt.eclipticLatitude(e), s = Wt.radiusVector(e);
              break;
            case 2:
              n = en.eclipticLongitude(e), a = en.eclipticLatitude(e), s = en.radiusVector(e);
              break;
            case 19:
              n = ii.eclipticLongitude(e), a = ii.eclipticLatitude(e), s = ii.radiusVector(e);
              break;
            case 3:
              n = Rt.eclipticLongitude(e), a = Rt.eclipticLatitude(e), s = Rt.radiusVector(e);
              break;
            case 4:
              n = Y.eclipticLongitude(e), a = Y.eclipticLatitude(e), s = Y.radiusVector(e);
              break;
            case 5:
              n = Nr.eclipticLongitude(e), a = Nr.eclipticLatitude(e), s = Nr.radiusVector(e);
              break;
            case 6:
              n = tn.eclipticLongitude(e), a = tn.eclipticLatitude(e), s = tn.radiusVector(e);
              break;
            case 7:
              n = br.eclipticLongitude(e), a = br.eclipticLatitude(e), s = br.radiusVector(e);
              break;
            case 8:
              n = Qr.eclipticLongitude(e), a = Qr.eclipticLatitude(e), s = Qr.radiusVector(e);
              break;
            case 9:
              n = Se.eclipticLongitude(e), a = Se.eclipticLatitude(e), s = Se.radiusVector(e) / 149598e3;
              break;
            case 10:
              var l = $i.calculate(e), g = l.satellite1.eclipticRectangularCoordinates;
              return $.create(g.x, g.z, g.y);
            case 11:
              var l = $i.calculate(e), g = l.satellite2.eclipticRectangularCoordinates;
              return $.create(g.x, g.z, g.y);
            case 12:
              var l = $i.calculate(e), g = l.satellite3.eclipticRectangularCoordinates;
              return $.create(g.x, g.z, g.y);
            case 13:
              var l = $i.calculate(e), g = l.satellite4.eclipticRectangularCoordinates;
              return $.create(g.x, g.z, g.y);
          }
          n = U.degreesToRadians(n), a = U.degreesToRadians(a);
          var _ = $.create(Math.cos(n) * Math.cos(a) * s, Math.sin(n) * Math.cos(a) * s, Math.sin(a) * s), m = (U.meanObliquityOfEcliptic(e) - U.meanObliquityOfEcliptic(2451545)) * D.RC;
          return _.rotateX(m), $.create(_.x, _.z, _.y);
        }, D._stateVectorToKeplerian = function(t, e, n) {
          var a = $.scale(t, 149598e3), s = $.scale($.scale(e, 1 / 86400), 149598e3), l = a.length(), g = s.length(), _ = 1 / (2 / l - g * g / n), m = $.cross(a, s), b = $.subtractVectors($.scale($.cross(s, m), 1 / n), $.scale(a, 1 / l)), y = b.length();
          m.normalize(), b.normalize();
          var M = $.cross(m, b);
          a.normalize();
          var A = $.dot(b, a), R = $.dot(M, a), F = Math.atan2(Math.sqrt(1 - y * y) * R, y + A), O = new To();
          return O.orientation = tt.create(b.x, b.y, b.z, 0, M.x, M.y, M.z, 0, m.x, m.y, m.z, 0, 0, 0, 0, 1), O.a = _, O.e = y, O.ea = F, O;
        }, D._drawSingleOrbitElements = function(t, e, n, a, s, l, g) {
          var _;
          switch (n) {
            case 9:
              X.get_active().get_solarSystemScale() > 1 ? _ = X.get_active().get_solarSystemScale() / 2 : _ = 1;
              break;
            case 10:
            case 11:
            case 12:
            case 13:
              _ = X.get_active().get_solarSystemScale();
              break;
            default:
              _ = 1;
              break;
          }
          var m = $.negate(a);
          n === 9 ? m.add(D._planet3dLocations[19]) : (n === 10 || n === 11 || n === 12 || n === 13) && m.add(D._planet3dLocations[4]);
          var b = $.subtractVectors(l, a), y = tt.multiplyMatrix(tt.multiplyMatrix(g.orientation, tt.translation(m)), t.get_world());
          Zi.drawEllipseWithPosition(t, g.a / 149598e3 * _, g.e, g.ea, e, y, b);
        }, D.isPlanetInFrustum = function(t, e) {
          var n = t.get_frustum();
          $.create(0, 0, 0);
          for (var a = new Qa(0, 0, 0, 1), s = 0; s < 6; s++)
            if (n[s].dot(a) + e < 0)
              return !1;
          return !0;
        }, D._drawPlanet3d = function(t, e, n) {
          e === 0 ? ne.minLightingBrightness = 1 : (ne.minLightingBrightness = 0.025, e === 19 ? ne.atmosphereColor = j.fromArgb(255, 65, 157, 217) : ne.atmosphereColor = j.fromArgb(0, 0, 0, 0));
          var a = t.get_world(), s = t.get_worldBase(), l = t.get_worldBaseNonRotating(), g = D.getAdjustedPlanetRadius(e);
          D.setupPlanetMatrix(t, e, n, !0);
          var _ = 1;
          if (e === 5 && (_ = 3), D.isPlanetInFrustum(t, _)) {
            t.get_world(), t.get_worldBase(), t.get_worldBaseNonRotating();
            var m = D._planet3dLocations[0].copy(), b = D._planet3dLocations[e].copy();
            m = a.transform(m), b = a.transform(b), t.set_world(a), t.set_worldBase(s), t.set_worldBaseNonRotating(l), D._setupMatrixForPlanetGeometry(t, e, n, !0);
            var y = $.subtractVectors(m, b);
            y.normalize(), t.set_sunPosition(y), ne.sunPosition = $.subtractVectors(D._planet3dLocations[0], b);
            var M = $.subtractVectors(D._planet3dLocations[e], n);
            M.subtract(t.cameraPosition);
            var A = M.length(), R = 2 * Math.atan(0.5 * (g / A)) / Math.PI * 180, F = 0;
            if (R > 10.5 ? F = 0 : R > 3.9 ? F = 1 : R > 0.72 ? F = 2 : R > 0.05 ? F = 3 : F = 4, e === 19 && F < 2 && X.get_active().get_solarSystemScale() * 1e-5, F < 4) {
              var O = t.lighting;
              e === 5 && t.gl == null && (t.lighting = !1, D.drawSaturnsRings(t, !1, A), t.lighting = O), e || (t.lighting = !1), D._drawSphere(t, e), e === 5 && (t.gl == null ? (t.lighting = !1, D.drawSaturnsRings(t, !0, A)) : (t.lighting = !1, D._drawRings(t), t.lighting = O)), t.lighting = O;
            } else if (!e)
              D.drawPointPlanet(t, new $(), 10 * D._planetDiameters[e], D.planetColors[e], !0);
            else if (e < 9 || e === 19) {
              var B = 800 * D._planetDiameters[e];
              D.drawPointPlanet(t, new $(), Math.max(0.05, Math.min(0.1, B)), D.planetColors[e], !0);
            } else if (R > 2e-3) {
              var B = 800 * D._planetDiameters[e];
              D.drawPointPlanet(t, new $(), Math.max(0.05, Math.min(0.1, B)), D.planetColors[e], !0);
            }
          }
          P._draw(t, 1, !1, D.getNameFrom3dId(e), !0, !1), t.set_world(a), t.set_worldBase(s), t.set_worldBaseNonRotating(l);
        }, D.drawSaturnsRings = function(t, e, n) {
          if (D._ringsTriangleLists[0] == null) {
            D._ringImage = document.createElement("img");
            var a = D._ringImage;
            a.crossOrigin = "anonymous", D._ringImage.src = ze.singleton.engineAssetUrl("saturnringsshadow.png"), D._ringsTriangleLists[0] = [], D._ringsTriangleLists[1] = [];
            var s = 2.25, l = $.create(-s, 0, -s), g = $.create(s, 0, -s), _ = $.create(-s, 0, s), m = $.create(s, 0, s);
            $.create(0, 0, 0), $.create(-s, 0, 0), $.create(0, 0, -s), $.create(0, 0, s), $.create(s, 0, 0);
            var b = 6, y;
            y = [];
            var M = 1024, A = 1024;
            y.push(Ht.createPosSize(l, 0, 0, M, A)), y.push(Ht.createPosSize(g, 1, 0, M, A)), y.push(Ht.createPosSize(_, 0, 1, M, A)), y.push(Ht.createPosSize(m, 1, 1, M, A));
            var R = [];
            R.push(pi.create(0, 2, 1)), R.push(pi.create(2, 3, 1));
            for (var F = 5; F-- > 1; ) {
              for (var O = [], B = r.enumerate(R); B.moveNext(); ) {
                var H = B.current;
                H.subDivideNoNormalize(O, y);
              }
              R = O;
            }
            for (var K = 0.6 / (M / 256), J = r.enumerate(R); J.moveNext(); ) {
              var H = J.current, it = y[H.a], ot = y[H.b], lt = y[H.c];
              D._ringsTriangleLists[0].push(Me.createWithMiter(it, ot, lt, D._ringImage, b, K));
            }
          }
          if (t.gl == null) {
            t.cameraPosition;
            var gt = new $(), ut = tt.multiplyMatrix(tt._rotationY(Math.atan2(t.get_sunPosition().x, t.get_sunPosition().z)), t.get_worldBaseNonRotating()), St = tt.multiplyMatrix(ut, t.get_view()), mt = tt.multiplyMatrix(St, t.get_projection()), M = t.width, A = t.height;
            mt.scale($.create(M / 2, -A / 2, 1)), mt.translate($.create(M / 2, A / 2, 0));
            for (var Dt = 0, yt = 0; yt < 2; yt++) {
              for (var ue = r.enumerate(D._ringsTriangleLists[0]); ue.moveNext(); ) {
                var H = ue.current;
                gt = St.transform(H.a.position), Dt = gt.length();
                var _e = Dt > n;
                e && (_e = !_e), _e && (H.opacity = 1, H.draw(t.device, mt));
              }
              Me.cullInside = !Me.cullInside;
            }
          }
        }, D._drawRings = function(t) {
          D._initRings(), ne.use(t, D._ringsVertexBuffer.vertexBuffer, null, D._ringsTexture.texture2d, 1, !1, $.zero), t.gl.drawArrays(5, 0, D._triangleCountRings);
        }, D._initRings = function() {
          if (D._ringsVertexBuffer == null) {
            D._ringsTexture = D.loadPlanetTexture(ze.singleton.engineAssetUrl("saturnringsstrip.png"));
            var t = 1.113, e = 2.25;
            D._ringsVertexBuffer = new wa((192 + 1) * 2), D._triangleCountRings = (192 + 1) * 2;
            for (var n = D._ringsVertexBuffer.lock(), a = Math.PI * 2 / 192, s = 0, l = 0; l <= 192; l += 2) {
              var g = l * a, _ = (l + 1) * a;
              n[s] = new Ht(), n[s].position = $.create(Math.cos(g) * t, 0, Math.sin(g) * t), n[s].tu = 1, n[s].tv = 0, s++, n[s] = new Ht(), n[s].position = $.create(Math.cos(g) * e, 0, Math.sin(g) * e), n[s].tu = 0, n[s].tv = 0, s++, n[s] = new Ht(), n[s].position = $.create(Math.cos(_) * t, 0, Math.sin(_) * t), n[s].tu = 1, n[s].tv = 1, s++, n[s] = new Ht(), n[s].position = $.create(Math.cos(_) * e, 0, Math.sin(_) * e), n[s].tu = 0, n[s].tv = 1, s++;
            }
            D._ringsVertexBuffer.unlock();
          }
        }, D.drawPointPlanet = function(t, e, n, a, s) {
          var l = e, g = n / 2;
          if (t.gl != null) {
            var _ = new Xr(t);
            _.minSize = 20, _.addPoint(e.copy(), a._clone(), new ni(0, 1), n / 100), _.depthBuffered = !0, _.draw(t, 1, !1);
          } else {
            var m = t.WVP.transform(l);
            if (m.z < 0 || !s && $.dot(t.get_viewPoint(), l) < 0.55)
              return;
            var b = t.device;
            b.save(), b.beginPath(), b.arc(m.x, m.y, g, 0, Math.PI * 2, !0), b.lineWidth = 1, b.fillStyle = a.toString(), b.fill(), b.globalAlpha = 1, b.strokeStyle = a.toString(), b.stroke(), b.restore();
          }
        }, D.getAdjustedPlanetRadius = function(t) {
          t > D._planetDiameters.length - 1 && (t = 19);
          var e = D._planetDiameters[t], n = e / 2;
          return t ? n = n * (1 + 3 * (X.get_active().get_solarSystemScale() - 1)) : n = n * (1 + 0.3 * (X.get_active().get_solarSystemScale() - 1)), n;
        }, D.getPlanetRadiusInMeters = function(t) {
          t > D._planetDiameters.length - 1 && (t = 19);
          var e = D._planetDiameters[t];
          return e / 2 * 149598e3 * 1e3;
        }, D._drawPlanet = function(t, e, n) {
          var a = D._planetLocations[e];
          if (e < 14 && D._planetScales[e] < t.viewCamera.zoom / 6 / 400) {
            if (e < 10 || e < 14 && D._planetScales[e] > t.viewCamera.zoom / 6 / 6400) {
              var s = U.raDecTo3d(a.RA, a.dec);
              D.drawPointPlanet(t, s, 3, D.planetColors[e], !1);
            }
            return;
          }
          var l = null;
          if (e < 10 || e === 18)
            l = D._planetTextures[e];
          else if (e < 14)
            D._planetLocations[e].eclipsed ? l = D._planetTextures[15] : X.get_active().get_showMoonsAsPointSource() ? l = D._planetTextures[14] : l = D._planetTextures[e];
          else {
            if (!D._planetLocations[e].shadow)
              return;
            l = D._planetTextures[15];
          }
          if (t.gl != null) {
            if (D._planetPoints == null) {
              D._planetPoints = new Array(4);
              for (var g = 0; g < 4; g++)
                D._planetPoints[g] = new Ye();
            }
            var _ = D._planetScales[e] / 2, m = _ / Math.cos(a.dec / 180 * Math.PI);
            D._planetPoints[0].position = U.raDecTo3dAu(a.RA - m / 15, a.dec + _, 1), D._planetPoints[0].tu = 0, D._planetPoints[0].tv = 1, D._planetPoints[0].color = Pt.get_white(), D._planetPoints[1].position = U.raDecTo3dAu(a.RA - m / 15, a.dec - _, 1), D._planetPoints[1].tu = 0, D._planetPoints[1].tv = 0, D._planetPoints[1].color = Pt.get_white(), D._planetPoints[2].position = U.raDecTo3dAu(a.RA + m / 15, a.dec + _, 1), D._planetPoints[2].tu = 1, D._planetPoints[2].tv = 1, D._planetPoints[2].color = Pt.get_white(), D._planetPoints[3].position = U.raDecTo3dAu(a.RA + m / 15, a.dec - _, 1), D._planetPoints[3].tu = 1, D._planetPoints[3].tv = 0, D._planetPoints[3].color = Pt.get_white(), D._planetSprite.draw(t, D._planetPoints, 4, l, !0, 1);
          } else {
            var b = U.raDecTo3d(a.RA, a.dec), y = D._planetScales[e] / (t.get_fovScale() / 3600) / 2, M = t.WVP.transform(b);
            if (M.z < 0 || $.dot(t.get_viewPoint(), b) < 0.55)
              return;
            var A = t.device;
            A.save(), A.globalAlpha = n, A.beginPath(), A.arc(M.x, M.y, y, 0, Math.PI * 2, !0), A.lineWidth = 0, A.closePath(), A.clip(), A.drawImage(l.imageElement, M.x - y, M.y - y, y * 2, y * 2), A.globalAlpha = 1, A.restore();
          }
        }, D._drawPlanetPhase = function(t, e, n, a, s) {
        }, D._geocentricElongation = function(t, e, n, a) {
          return t = U.degreesToRadians(t * 15), n = U.degreesToRadians(n * 15), e = U.degreesToRadians(e), a = U.degreesToRadians(a), U.radiansToDegrees(Math.acos(Math.sin(a) * Math.sin(e) + Math.cos(a) * Math.cos(e) * Math.cos(n - t)));
        }, D._phaseAngle = function(t, e, n) {
          return t = U.degreesToRadians(t), U.mapTo0To360Range(U.radiansToDegrees(Math.atan2(n * Math.sin(t), e - n * Math.cos(t))));
        }, D._positionAngle = function(t, e, n, a) {
          return t = U.hoursToRadians(t), n = U.hoursToRadians(n), e = U.degreesToRadians(e), a = U.degreesToRadians(a), U.mapTo0To360Range(U.radiansToDegrees(Math.atan2(Math.cos(e) * Math.sin(t - n), Math.sin(e) * Math.cos(a) - Math.cos(e) * Math.sin(a) * Math.cos(t - n))));
        }, D._drawSphere = function(t, e) {
          var n = D.getImageSetNameNameFrom3dId(e), a = Z.singleton.getImagesetByName(n);
          if (a == null && (a = Z.singleton.getImagesetByName("Bing Maps Aerial")), a != null) {
            t.drawImageSet(a, 100);
            return;
          }
        };
        var Mc = {};
        function Qn() {
          this.specularSharpness = 0, this.opacity = 0, this.isDefault = !1;
        }
        var xc = {};
        function zs() {
          this.aborted = !1;
        }
        var Lc = {};
        function ti() {
          this.height = 0, this.width = 0, this.lighting = !1, this._viewPoint = new $(), this.space = !1, this._fovAngle = 0, this._fovScale = 0, this._nominalRadius = 6378137, this._mainTexture = null, this.viewMover = null, this.viewCamera = new _i(), this.targetCamera = new _i(), this.alt = 0, this.az = 0, this.targetAlt = 0, this.targetAz = 0, this._backgroundImageset = null, this._foregroundImageset = null, this._activeCatalogHipsImagesets = [], this._targetHeight = 1, this.targetAltitude = 0, this._galactic = !0, this._galacticMatrix = tt.create(-0.4838350155, -0.0548755604, -0.8734370902, 0, 0.7469822445, 0.4941094279, -0.44482963, 0, 0.4559837762, -0.867666149, -0.1980763734, 0, 0, 0, 0, 1), this._firstTimeInit = !1, this._useSolarSystemTilt = !0, this.customTrackingParams = new _i(), this._cameraOffset = new $(), this._fovLocal = Math.PI / 4, this.perspectiveFov = Math.PI / 4, this.nearPlane = 0, this._frustumDirty = !0, this._frustum = new Array(6), this._ambientLightColor = Pt.get_black(), this._hemiLightColor = Pt.get_black(), this._hemiLightUp = new $(), this._sunlightColor = Pt.get_white(), this._sunPosition = new $(), this._reflectedLightColor = Pt.get_black(), this._reflectedLightPosition = new $(), this._occludingPlanetRadius = 0, this._occludingPlanetPosition = new $(), this._lightingStateDirty = !0, this._twoSidedLighting = !1, this.cameraPosition = new $(), this._skyColor = "Blue";
          for (var t = 0; t < 6; t++)
            this._frustum[t] = new mo(0, 0, 0, 0);
        }
        ti.create = function(t) {
          var e = new ti();
          return e.device = t, e.viewCamera.zoom = 700, e.viewCamera.target = 65536, e;
        }, ti.getTilesYForLevel = function(t, e) {
          var n = 1;
          switch (t.get_projection()) {
            case 0:
              n = Math.pow(2, e);
              break;
            case 1:
              n = Math.pow(2, e) * (180 / t.get_baseTileDegrees());
              break;
            case 2:
              n = Math.pow(2, e);
              break;
            case 4:
              n = 1;
              break;
            case 7:
              n = 4 * Math.pow(2, e);
              break;
            default:
              n = Math.pow(2, e);
              break;
          }
          return n === Number.POSITIVE_INFINITY && (n = 1), n;
        }, ti.getTilesXForLevel = function(t, e) {
          var n = 1;
          switch (t.get_projection()) {
            case 6:
            case 3:
              n = Math.pow(2, e);
              break;
            case 0:
              n = Math.pow(2, e) * r.truncate(t.get_baseTileDegrees() / 360);
              break;
            case 1:
              n = Math.pow(2, e) * r.truncate(360 / t.get_baseTileDegrees());
              break;
            case 2:
              t.get_widthFactor() === 1 ? n = Math.pow(2, e) * 2 : n = Math.pow(2, e);
              break;
            case 5:
              n = 1;
              break;
            case 4:
              n = 1;
              break;
            case 7:
              n = Math.pow(2, e) * 3;
              break;
            default:
              n = Math.pow(2, e) * 2;
              break;
          }
          return n;
        };
        var Ac = {
          save: function() {
            this.gl != null || this.device.save();
          },
          restore: function() {
            this.gl != null || this.device.restore();
          },
          clear: function() {
            this.gl != null ? (this.gl.viewport(0, 0, r.truncate(this.width), r.truncate(this.height)), this.gl.clear(16640)) : (this.device.save(), this.device.fillStyle = "black", this.device.fillRect(0, 0, this.width, this.height), this.device.restore());
          },
          get_viewPoint: function() {
            return this._viewPoint;
          },
          get_RA: function() {
            return ((180 - (this.viewCamera.lng - 180)) / 15 % 24 + 48) % 24;
          },
          rAtoViewLng: function(t) {
            return 180 - t / 24 * 360 - 180;
          },
          get_dec: function() {
            return this.viewCamera.lat;
          },
          get_fovAngle: function() {
            return this._fovAngle;
          },
          get_fovScale: function() {
            return this._fovScale;
          },
          set_fovScale: function(t) {
            return this._fovScale = t, t;
          },
          get_view: function() {
            return this._view;
          },
          set_view: function(t) {
            return this._view = t, this._frustumDirty = !0, t;
          },
          get_viewBase: function() {
            return this._viewBase;
          },
          set_viewBase: function(t) {
            return this._viewBase = t, t;
          },
          get_projection: function() {
            return this._projection;
          },
          set_projection: function(t) {
            return this._projection = t, this._frustumDirty = !0, t;
          },
          get_world: function() {
            return this._world;
          },
          set_world: function(t) {
            return this._world = t, this._frustumDirty = !0, t;
          },
          _getScreenTexture: function() {
            var t = null;
            return t;
          },
          get_worldBase: function() {
            return this._worldBase;
          },
          set_worldBase: function(t) {
            return this._worldBase = t, t;
          },
          get_worldBaseNonRotating: function() {
            return this._worldBaseNonRotating;
          },
          set_worldBaseNonRotating: function(t) {
            return this._worldBaseNonRotating = t, t;
          },
          get_nominalRadius: function() {
            return this._nominalRadius;
          },
          set_nominalRadius: function(t) {
            return this._nominalRadius = t, t;
          },
          get_mainTexture: function() {
            return this._mainTexture;
          },
          set_mainTexture: function(t) {
            return t != null && (this._mainTexture = t, this.gl.bindTexture(3553, this._mainTexture.texture2d)), t;
          },
          onTarget: function(t) {
            return Math.abs(this.viewCamera.lat - this.targetCamera.lat) < 1e-12 && Math.abs(this.viewCamera.lng - this.targetCamera.lng) < 1e-12 && Math.abs(this.viewCamera.zoom - this.targetCamera.zoom) < 1e-12 && this.viewMover == null;
          },
          setTexture: function(t) {
          },
          get_backgroundImageset: function() {
            return this._backgroundImageset;
          },
          set_backgroundImageset: function(t) {
            var e = this._backgroundImageset != null && t != null && this._backgroundImageset.get_dataSetType() !== t.get_dataSetType();
            return this._backgroundImageset = t, e && (Z.singleton._freezeView(), Z.singleton.clampZooms(this)), t;
          },
          get_foregroundImageset: function() {
            return this._foregroundImageset;
          },
          set_foregroundImageset: function(t) {
            return this._foregroundImageset = t, t;
          },
          get_catalogHipsImagesets: function() {
            return this._activeCatalogHipsImagesets;
          },
          getCatalogHipsDataInView: function(t, e, n) {
            var a = this, s = new Ws(), l = function() {
              s.useHeadersFromVoTable(t.get_hipsProperties().get_catalogColumnInfo()), a._tryGetAllDataInView(t, e, s, n, 0);
            };
            t.get_hipsProperties() == null ? (t.set_hipsProperties(new Wa(t)), t.get_hipsProperties().setDownloadCompleteListener(l)) : t.get_hipsProperties() != null && t.get_hipsProperties().get_downloadComplete() ? l() : t.get_hipsProperties().setDownloadCompleteListener(l);
          },
          _tryGetAllDataInView: function(t, e, n, a, s) {
            for (var l = this, g = ti.getTilesXForLevel(t, t.get_baseLevel()), _ = ti.getTilesYForLevel(t, t.get_baseLevel()), m = !1, b = 0; b < g; b++)
              for (var y = 0; y < _; y++) {
                var M = Ut.getTile(t.get_baseLevel(), b, y, t, null);
                if (M != null) {
                  var A = M.getDataInView(this, e, n);
                  m = m || !A;
                } else
                  m = !0;
              }
            if (m) {
              var R = n.get__table().rows.length;
              if ((R > 1e4 || s > 100 * 60 * 5) && e) {
                console.log("Too Many results - Aborting"), console.log(R);
                var F = new zs();
                F.aborted = !0, F.table = n.getTableDataInView(), a(F), n.cleanUp();
              } else
                setTimeout(function() {
                  l._tryGetAllDataInView(t, e, n, a, s);
                }, 10), s % 200 || (console.log("Waiting for more tiles to load"), console.log(R)), s++;
            } else {
              var R = n.get__table().rows.length;
              console.log("Done!"), console.log(R);
              var F = new zs();
              F.aborted = !1, F.table = n.getTableDataInView(), a(F), n.cleanUp();
            }
          },
          addCatalogHips: function(t, e) {
            this._activeCatalogHipsImagesets.indexOf(t) >= 0 || this._activeCatalogHipsImagesets.push(t), t.get_hipsProperties() == null ? (t.set_hipsProperties(new Wa(t)), t.get_hipsProperties().setDownloadCompleteListener(e)) : t.get_hipsProperties() != null && t.get_hipsProperties().get_downloadComplete() && (P.addSpreadsheetLayer(t.get_hipsProperties().get_catalogSpreadSheetLayer(), "Sky"), e != null && e());
          },
          removeCatalogHips: function(t) {
            r.remove(this._activeCatalogHipsImagesets, t), t.get_hipsProperties() != null && P.deleteLayerByID(t.get_hipsProperties().get_catalogSpreadSheetLayer().id, !0, !0);
          },
          getCatalogHipsByName: function(t) {
            for (var e = r.enumerate(this._activeCatalogHipsImagesets); e.moveNext(); ) {
              var n = e.current;
              if (n.get_name() === t)
                return n;
            }
            return null;
          },
          getAltitudeForLatLongForPlanet: function(t, e, n) {
            var a = Z.singleton.getImagesetByName(D.getNameFrom3dId(t));
            if (a == null)
              return 0;
            for (var s = ti.getTilesXForLevel(a, a.get_baseLevel()), l = ti.getTilesYForLevel(a, a.get_baseLevel()), g = 0; g < s; g++)
              for (var _ = 0; _ < l; _++) {
                var m = Ut.getTile(a.get_baseLevel(), g, _, a, null);
                if (m != null && m.isPointInTile(e, n))
                  return m.getSurfacePointAltitude(e, n, !0);
              }
            return 0;
          },
          getEarthAltitude: function(t, e, n) {
            if (Z.singleton.get_solarSystemMode()) {
              var a = U.geoTo3dDouble(t, e + 90), s = D.earthMatrixInv;
              a = $._transformCoordinate(a, s), a.normalize();
              var l = U.cartesianToLatLng(a);
              return this.getAltitudeForLatLongForPlanet(this.viewCamera.target, l.y, l.x);
            } else
              return this.get_backgroundImageset().get_dataSetType() ? 0 : n ? this.getMetersAltitudeForLatLong(t, e) : this.getScaledAltitudeForLatLong(t, e);
          },
          drawImageSet: function(t, e) {
            for (var n = ti.getTilesXForLevel(t, t.get_baseLevel()), a = ti.getTilesYForLevel(t, t.get_baseLevel()), s = 0; s < n; s++)
              for (var l = 0; l < a; l++) {
                var g = Ut.getTile(t.get_baseLevel(), s, l, t, null);
                g != null && g.draw3D(this, e);
              }
          },
          _getTileAtLatLong: function(t, e) {
            var n = this.get_backgroundImageset();
            if (n == null)
              return null;
            for (var a = ti.getTilesXForLevel(n, n.get_baseLevel()), s = ti.getTilesYForLevel(n, n.get_baseLevel()), l = 0; l < a; l++)
              for (var g = 0; g < s; g++) {
                var _ = Ut.getTile(n.get_baseLevel(), l, g, n, null);
                if (_ != null && _.isPointInTile(t, e))
                  return _;
              }
            return null;
          },
          getScaledAltitudeForLatLong: function(t, e) {
            var n = this._getTileAtLatLong(t, e);
            return n != null ? n.getSurfacePointAltitude(t, e, !1) : 0;
          },
          getMetersAltitudeForLatLong: function(t, e) {
            var n = this._getTileAtLatLong(t, e);
            return n != null ? n.getSurfacePointAltitude(t, e, !0) : 0;
          },
          _setupMatricesLand3d: function() {
            this.lighting = !1, this.space = !1, Me.cullInside = !1;
            var t = tt._rotationY((this.viewCamera.lng - 90) / 180 * Math.PI);
            t._multiply(tt._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this.set_world(t), this.set_worldBase(t.clone()), this._viewPoint = U.geoTo3d(this.viewCamera.lat, this.viewCamera.lng);
            var e = 0;
            if (this._backgroundImageset.get_isMandelbrot() ? e = 4 * (this.viewCamera.zoom / 180) + 1e-41 : e = 4 * (this.viewCamera.zoom / 180) + 1e-6, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this.gl != null) {
              this.targetAltitude = this.getScaledAltitudeForLatLong(this.viewCamera.lat, this.viewCamera.lng);
              var n = 1 + this.targetAltitude;
              this.targetAltitude *= this.get_nominalRadius(), this._targetHeight < n ? this._targetHeight = (this._targetHeight * 2 + n) / 3 : this._targetHeight = (this._targetHeight * 9 + n) / 10;
            } else
              this.targetAltitude = 0, this._targetHeight = 1;
            var a = this.viewCamera.rotation;
            this.cameraPosition = $.create(Math.sin(a) * Math.sin(this.viewCamera.angle) * e, Math.cos(a) * Math.sin(this.viewCamera.angle) * e, -this._targetHeight - Math.cos(this.viewCamera.angle) * e);
            var s = $.create(0, 0, -this._targetHeight);
            this.cameraPosition.length();
            var l = $.create(Math.sin(a) * Math.cos(this.viewCamera.angle), Math.cos(a) * Math.cos(this.viewCamera.angle), Math.sin(this.viewCamera.angle));
            this.set_view(tt.lookAtLH(this.cameraPosition, s, l)), this.set_viewBase(this.get_view());
            var g = Math.sqrt((e + 1) * (e + 1) - 1);
            g = Math.max(0.5, g);
            var _ = e * 0.05;
            _ = e * 0.05, this.set_projection(tt.perspectiveFovLH(Math.PI / 4, this.width / this.height, _, g)), this._setMatrixes(), this.makeFrustum();
          },
          setupMatricesSpace3d: function(t, e) {
            this.lighting = !1, this._firstTimeInit || (this._galacticMatrix = tt.get_identity(), this._galacticMatrix._multiply(tt._rotationY(-(270 - 17.7603329867975 * 15) / 180 * Math.PI)), this._galacticMatrix._multiply(tt._rotationX(28.9361739586894 / 180 * Math.PI)), this._galacticMatrix._multiply(tt._rotationZ((31.422052860102 - 90) / 180 * Math.PI)), this._firstTimeInit = !0), this.space = !0, Me.cullInside = !0;
            var n = tt.get_identity();
            if (X.get_active().get_galacticMode()) {
              n._multiply(this._galacticMatrix), n._multiply(tt._rotationY(this.az / 180 * Math.PI)), n._multiply(tt._rotationX(-this.alt / 180 * Math.PI));
              var a = U.galactictoJ2000(this.az, this.alt);
              this._viewPoint = U.raDecTo3dAu(a[0] / 15, a[1], 1), this.targetCamera.lng = this.rAtoViewLng(a[0] / 15), this.targetCamera.lat = a[1], this.viewCamera.lat = this.targetCamera.lat, this.viewCamera.lng = this.targetCamera.lng;
            } else
              n._multiply(tt._rotationY(-(this.viewCamera.lng - 90) / 180 * Math.PI)), n._multiply(tt._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this._viewPoint = U.raDecTo3dAu(this.get_RA(), this.get_dec(), 1);
            var s = this.viewCamera.rotation;
            if (this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / e * 3600, X.get_active().get_localHorizonMode() && this._backgroundImageset.get_dataSetType() === 2) {
              var l = new U(0, 0);
              l.set_az(0), l.set_alt(0);
              var g = U.horizonToEquitorial(l, Q.get_location(), Q.get_now()), _ = -((g.get_RA() - 6) / 24 * (Math.PI * 2)), m = -(g.get_dec() / 360 * (Math.PI * 2));
              U.formatDMS(g.get_RA()), n = tt._rotationY(-_ - Math.PI), n._multiply(tt._rotationX(m)), Q.get_location().get_lat() < 0 ? (n._multiply(tt._rotationY(this.az / 180 * Math.PI)), n._multiply(tt._rotationX(this.alt / 180 * Math.PI)), s += Math.PI) : (n._multiply(tt._rotationY(-this.az / 180 * Math.PI)), n._multiply(tt._rotationX(-this.alt / 180 * Math.PI)));
              var b = U.horizonToEquitorial(U.fromLatLng(this.alt, this.az), Q.get_location(), Q.get_now());
              this.viewCamera.lat = this.targetCamera.lat = b.get_dec(), this.viewCamera.lng = this.targetCamera.lng = this.rAtoViewLng(b.get_RA());
            }
            this.set_world(n), this.set_worldBase(n.clone());
            var y = this.viewCamera.zoom;
            this.cameraPosition = $.create(0, 0, 0), this.set_view(tt.lookAtLH(this.cameraPosition, $.create(0, 0, -1), $.create(Math.sin(s), Math.cos(s), 0))), this.set_viewBase(this.get_view().clone()), this.nearPlane = 0.1, this.set_projection(tt.perspectiveFovLH(y / 343.774, t / e, 0.1, -2)), this._setMatrixes(), this.makeFrustum();
          },
          get_solarSystemTrack: function() {
            return this.viewCamera.target;
          },
          set_solarSystemTrack: function(t) {
            return this.viewCamera.target = t, t;
          },
          get_solarSystemCameraDistance: function() {
            return 4 * (this.viewCamera.zoom / 9) + 1e-6;
          },
          get_sandboxMode: function() {
            return this._backgroundImageset == null ? !1 : this._backgroundImageset.get_dataSetType() === 5;
          },
          get_trackingFrame: function() {
            return this.viewCamera.targetReferenceFrame;
          },
          set_trackingFrame: function(t) {
            return this.viewCamera.targetReferenceFrame = t, t;
          },
          get_fovLocal: function() {
            return this._fovLocal;
          },
          set_fovLocal: function(t) {
            return this._fovLocal = t, t;
          },
          setupMatricesOverlays: function() {
            this.set_world(tt.get_identity()), tt.get_identity();
            var t = $.create(0, 0, 0), e = $.create(0, 0, 1), n = $.create(0, 1, 0), a;
            a = tt.lookAtLH(t, e, n), a._multiply(tt._scaling(1, -1, 1)), this.set_view(a);
            var s = 1e4;
            this.nearPlane = 0.1, this.set_projection(tt.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, s));
          },
          setupMatricesSolarSystem: function(t) {
            this.lighting = X.get_active().get_solarSystemLighting(), this.space = !1, this.get_solarSystemTrack() !== 20 && this.get_solarSystemTrack() !== 65536 && (this.viewCamera.viewTarget = D.getPlanetTargetPoint(this.get_solarSystemTrack(), this.viewCamera.lat, this.viewCamera.lng, 0)), Me.cullInside = !1;
            var e = this.get_solarSystemCameraDistance(), n = tt.get_identity();
            if (e -= 1e-6, this.get_solarSystemTrack() === 20 && !r.emptyString(this.get_trackingFrame())) {
              var a = P._getFrameTarget(this, this.get_trackingFrame());
              this.viewCamera.viewTarget = a.target, n = a.matrix;
            } else
              r.emptyString(this.get_trackingFrame()) || this.set_trackingFrame("");
            this.viewCamera.viewTarget, this.viewCamera.zoom * 20;
            var s = new $(), l = tt.get_identity();
            l._multiply(tt._rotationX(-this.viewCamera.lat / 180 * Math.PI)), l._multiply(tt._rotationY(-this.viewCamera.lng / 180 * Math.PI));
            var g = tt.get_identity(), _;
            if (this._useSolarSystemTilt && !this.get_sandboxMode()) {
              var m = this.viewCamera.angle;
              if (e > 8e-4)
                m = 0;
              else if (e > 1e-5) {
                var b = Math.min(1.903089987, xt.log10(e) + 5) / 1.903089987;
                m = m * Math.max(0, 1 - b);
              }
              this.cameraPosition = $.create(Math.sin(-this.viewCamera.rotation) * Math.sin(m) * e, Math.cos(-this.viewCamera.rotation) * Math.sin(m) * e, Math.cos(m) * e), _ = $.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-5);
            } else
              this.cameraPosition = $.create(0, 0, e), _ = $.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-4);
            this.cameraPosition = l.transform(this.cameraPosition), this._cameraOffset = this.cameraPosition.copy();
            var y = n.clone();
            y.invert(), this._cameraOffset = $._transformCoordinate(this._cameraOffset, y), _ = l.transform(_), this.set_world(tt.get_identity()), this.set_worldBase(tt.get_identity()), this.set_worldBaseNonRotating(tt.get_identity()), this.set_view(tt.multiplyMatrix(tt.multiplyMatrix(n, tt.lookAtLH(this.cameraPosition, s, _)), g)), this.set_viewBase(this.get_view().clone());
            var M = $.subtractVectors(s, this.cameraPosition);
            M.normalize(), M = $._transformCoordinate(M, n), M.normalize(), this._viewPoint = M;
            var A = D.getAdjustedPlanetRadius(this.get_solarSystemTrack());
            e < A * 2 && !t ? (this.nearPlane = e * 0.03, this.nearPlane = Math.max(this.nearPlane, 1e-11), ti.back = 1900) : t ? (ti.back = 900056, ti.back = e > 900056 ? e * 3 : 900056, this.nearPlane = 3e-5) : (ti.back = e > 1900 ? e + 200 : 1900, X.get_active().get_solarSystemScale() < 13 ? this.nearPlane = Math.min(e * 0.03, 0.01) : this.nearPlane = 1e-3), this.set_projection(tt.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, ti.back)), this.perspectiveFov = this._fovLocal, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this._setMatrixes(), this.makeFrustum();
          },
          _setMatrixes: function() {
          },
          get_frustum: function() {
            return this._frustum;
          },
          get_ambientLightColor: function() {
            return this._ambientLightColor;
          },
          set_ambientLightColor: function(t) {
            return this._ambientLightColor = t, this._lightingStateDirty = !0, t;
          },
          get_hemisphereLightColor: function() {
            return this._hemiLightColor;
          },
          set_hemisphereLightColor: function(t) {
            return this._hemiLightColor = t, this._lightingStateDirty = !0, t;
          },
          get_hemisphereLightUp: function() {
            return this._hemiLightUp;
          },
          set_hemisphereLightUp: function(t) {
            return this._hemiLightUp = t, this._lightingStateDirty = !0, t;
          },
          get_sunlightColor: function() {
            return this._sunlightColor;
          },
          set_sunlightColor: function(t) {
            return this._sunlightColor = t, this._lightingStateDirty = !0, t;
          },
          get_sunPosition: function() {
            return this._sunPosition;
          },
          set_sunPosition: function(t) {
            return this._sunPosition = t, this._lightingStateDirty = !0, t;
          },
          get_reflectedLightColor: function() {
            return this._reflectedLightColor;
          },
          set_reflectedLightColor: function(t) {
            return this._reflectedLightColor !== t && (this._reflectedLightColor = t, this._lightingStateDirty = !0), t;
          },
          get_reflectedLightPosition: function() {
            return this._reflectedLightPosition;
          },
          set_reflectedLightPosition: function(t) {
            return this._reflectedLightPosition = t, this._lightingStateDirty = !0, t;
          },
          get_occludingPlanetRadius: function() {
            return this._occludingPlanetRadius;
          },
          set_occludingPlanetRadius: function(t) {
            return this._occludingPlanetRadius = t, t;
          },
          get_occludingPlanetPosition: function() {
            return this._occludingPlanetPosition;
          },
          set_occludingPlanetPosition: function(t) {
            return this._occludingPlanetPosition = t, t;
          },
          get_twoSidedLighting: function() {
            return this._twoSidedLighting;
          },
          set_twoSidedLighting: function(t) {
            return t !== this._twoSidedLighting && (this._twoSidedLighting = t, this._lightingStateDirty = !0), t;
          },
          makeFrustum: function() {
            this.WV = tt.multiplyMatrix(this.get_world(), this.get_view());
            var t = tt.multiplyMatrix(this.WV, this.get_projection());
            this.WVP = t.clone();
            var e = this.get_world().clone();
            e.invert(), this._frustum[0].a = t.get_m14() + t.get_m11(), this._frustum[0].b = t.get_m24() + t.get_m21(), this._frustum[0].c = t.get_m34() + t.get_m31(), this._frustum[0].d = t.get_m44() + t.get_m41(), this._frustum[1].a = t.get_m14() - t.get_m11(), this._frustum[1].b = t.get_m24() - t.get_m21(), this._frustum[1].c = t.get_m34() - t.get_m31(), this._frustum[1].d = t.get_m44() - t.get_m41(), this._frustum[2].a = t.get_m14() - t.get_m12(), this._frustum[2].b = t.get_m24() - t.get_m22(), this._frustum[2].c = t.get_m34() - t.get_m32(), this._frustum[2].d = t.get_m44() - t.get_m42(), this._frustum[3].a = t.get_m14() + t.get_m12(), this._frustum[3].b = t.get_m24() + t.get_m22(), this._frustum[3].c = t.get_m34() + t.get_m32(), this._frustum[3].d = t.get_m44() + t.get_m42(), this._frustum[4].a = t.get_m13(), this._frustum[4].b = t.get_m23(), this._frustum[4].c = t.get_m33(), this._frustum[4].d = t.get_m43(), this._frustum[5].a = t.get_m14() - t.get_m13(), this._frustum[5].b = t.get_m24() - t.get_m23(), this._frustum[5].c = t.get_m34() - t.get_m33(), this._frustum[5].d = t.get_m44() - t.get_m43();
            for (var n = 0; n < 6; n++)
              this._frustum[n].normalize();
            this._frustumDirty = !1, this.WVP.scale($.create(this.width / 2, -this.height / 2, 1)), this.WVP.translate($.create(this.width / 2, this.height / 2, 0)), this._setMatrixes();
          },
          _initGL: function() {
            this.gl != null && (this.gl.getExtension("OES_element_index_uint"), G.uvMultiple = 1, G.demEnabled = !0, ne.init(this));
          },
          freezeView: function() {
            this.targetAlt = this.alt, this.targetAz = this.az, this.targetCamera = this.viewCamera.copy();
          },
          _setVertexBuffer: function(t) {
          },
          _setIndexBuffer: function(t) {
          },
          setMaterial: function(t, e, n, a, s) {
            this.set_mainTexture(e);
          },
          preDraw: function() {
          }
        };
        function Me() {
          this.a = new Ht(), this.b = new Ht(), this.c = new Ht(), this.normal = new $(), this.opacity = 1, this.expansionInPixels = 0.6, this.tileLevel = 0, this._ta = new $(), this._tb = new $(), this._tc = new $(), this._expandedS0 = new Mt(), this._expandedS1 = new Mt(), this._expandedS2 = new Mt(), this.lighting = 1;
        }
        Me.create = function(t, e, n, a, s) {
          var l = new Me();
          return l.a = t.copy(), l.b = e.copy(), l.c = n.copy(), l._texture = a, l.tileLevel = s, l.makeNormal(), l;
        }, Me.createWithMiter = function(t, e, n, a, s, l) {
          var g = new Me();
          return g.expansionInPixels = l, g.a = t.copy(), g.b = e.copy(), g.c = n.copy(), g._texture = a, g.tileLevel = s, g.makeNormal(), g;
        }, Me._getMiterPoint = function(t, e, n, a) {
          var s = Mt.subtract(e, t), l = Mt.subtract(n, t);
          s.normalize(), l.normalize();
          var g = Mt.create(s.x + l.x, s.y + l.y);
          g.normalize();
          var _ = Mt.create(s.x - l.x, s.y - l.y), m = _.get_length() / 2, b = Math.min(2, a / m);
          return g.extend(b), Mt.create(t.x - g.x, t.y - g.y);
        }, Me._miterPoint = function(t, e, n, a, s, l, g) {
          var _ = n - t, m = a - e, b = s - t, y = l - e, M = Math.sqrt(_ * _ + m * m);
          M && (_ /= M, m /= M), M = Math.sqrt(b * b + y * y), M && (b /= M, y /= M);
          var A = _ + b, R = m + y;
          M = Math.sqrt(A * A + R * R), M && (A /= M, R /= M);
          var F = _ - b, O = m - y;
          M = Math.sqrt(F * F + O * O);
          var B = M / 2, H = Math.min(2, g / B);
          return A *= H, R *= H, Mt.create(t - A, e - R);
        }, Me._miterPointOut = function(t, e, n, a, s, l, g, _) {
          var m = a - e, b = s - n, y = l - e, M = g - n, A = Math.sqrt(m * m + b * b);
          A && (m /= A, b /= A), A = Math.sqrt(y * y + M * M), A && (y /= A, M /= A);
          var R = m + y, F = b + M;
          A = Math.sqrt(R * R + F * F), A && (R /= A, F /= A);
          var O = m - y, B = b - M;
          A = Math.sqrt(O * O + B * B);
          var H = A / 2, K = Math.min(2, _ / H);
          R *= K, F *= K, t.x = e - R, t.y = n - F;
        };
        var kc = {
          makeNormal: function() {
            var t = this.a.position.copy(), e = this.b.position.copy(), n = this.c.position.copy();
            t.normalize(), e.normalize(), n.normalize();
            var a = t.x + e.x + n.x, s = t.y + e.y + n.y, l = t.z + e.z + n.z;
            this.normal = $.create(a / 3, s / 3, l / 3), this.normal.normalize();
          },
          _checkBackface: function() {
            var t = $.subtractVectors(this._ta, this._tb), e = $.subtractVectors(this._ta, this._tc), n = $.cross(t, e);
            return n.normalize(), n.z >= 0;
          },
          draw: function(t, e) {
            if (t != null) {
              if (e._transformTo(this.a.position, this._ta), e._transformTo(this.b.position, this._tb), e._transformTo(this.c.position, this._tc), this._checkBackface() === Me.cullInside) {
                Me.trianglesCulled++;
                return;
              }
              this._drawTriangle(t, this._texture, this._ta.x, this._ta.y, this._tb.x, this._tb.y, this._tc.x, this._tc.y, this.a.tu, this.a.tv, this.b.tu, this.b.tv, this.c.tu, this.c.tv);
            }
          },
          _drawTriangle: function(t, e, n, a, s, l, g, _, m, b, y, M, A, R) {
            if (!this.intersects(0, Me.width, 0, Me.height, n, a, s, l, g, _))
              return !1;
            Me._miterPointOut(this._expandedS0, n, a, s, l, g, _, this.expansionInPixels), Me._miterPointOut(this._expandedS1, s, l, n, a, g, _, this.expansionInPixels), Me._miterPointOut(this._expandedS2, g, _, s, l, n, a, this.expansionInPixels), n = this._expandedS0.x, a = this._expandedS0.y, s = this._expandedS1.x, l = this._expandedS1.y, g = this._expandedS2.x, _ = this._expandedS2.y, t.save(), Me.renderingOn && (t.beginPath(), t.moveTo(n, a), t.lineTo(s, l), t.lineTo(g, _), t.closePath(), t.clip());
            var F = m * (R - M) - y * R + A * M + (y - A) * b, O = -(b * (g - s) - M * g + R * s + (M - R) * n) / F, B = (M * _ + b * (l - _) - R * l + (R - M) * a) / F, H = (m * (g - s) - y * g + A * s + (y - A) * n) / F, K = -(y * _ + m * (l - _) - A * l + (A - y) * a) / F, J = (m * (R * s - M * g) + b * (y * g - A * s) + (A * M - y * R) * n) / F, it = (m * (R * l - M * _) + b * (y * _ - A * l) + (A * M - y * R) * a) / F;
            return t.transform(O, B, H, K, J, it), Me.renderingOn && (t.globalAlpha = this.opacity, this.lighting < 1 && (t.globalAlpha = 1, t.fillStyle = "Black", t.fillRect(0, 0, Me.width, Me.height), t.globalAlpha = this.lighting * this.opacity), t.drawImage(e, 0, 0)), t.restore(), !0;
          },
          intersects: function(t, e, n, a, s, l, g, _, m, b) {
            if (s > t && s < e && l > n && l < a || g > t && g < e && _ > n && _ < a || m > t && m < e && b > n && b < a)
              return !0;
            var y = Me.height * 4;
            return this.tileLevel < 4 && (Math.abs(s - g) > y || Math.abs(l - _) > y || Math.abs(m - g) > y || Math.abs(b - _) > y || Math.abs(s - m) > y || Math.abs(l - b) > y) ? !1 : this.lineRectangleIntersect(t, e, n, a, s, l, g, _) || this.lineRectangleIntersect(t, e, n, a, g, _, m, b) || this.lineRectangleIntersect(t, e, n, a, m, b, s, l);
          },
          lineRectangleIntersect: function(t, e, n, a, s, l, g, _) {
            var m, b, y, M, A, R;
            A = (_ - l) / (g - s), R = l - A * s, A > 0 ? (m = A * t + R, b = A * e + R) : (m = A * e + R, b = A * t + R), l < _ ? (y = l, M = _) : (y = _, M = l);
            var F, O;
            return F = m > y ? m : y, O = b < M ? b : M, F < O && !(O < n || F > a);
          }
        };
        function on() {
          this._missedReady = !1, this.hideTourFeedback = !1, this._smoothAnimation = !1, this._showCaptions = !0;
        }
        on._containsFitsLikeExtentsion = function(t) {
          var e = t.toLowerCase();
          return r.endsWith(e, "fits") || r.endsWith(e, "ftz") || r.endsWith(e, "fit") || r.endsWith(e, "fts");
        }, on._addImageSet = function(t, e, n, a) {
          r.whitespace(t) && (t = P.getNextImageSetName());
          var s = P.addImageSetLayerCallback(a, t, n);
          if (e) {
            var l = a._guessZoomSetting(Z.singleton.renderContext.viewCamera.zoom);
            Z.singleton.gotoRADecZoom(a.get_viewCenterX() / 15, a.get_viewCenterY(), l, !1, null);
          }
          return s;
        }, on._addFitsLayer = function(t, e, n, a) {
          r.whitespace(e) && (e = P.getNextFitsName());
          var s = new qi(), l = new Mi(), g = function(_) {
            if (!_.errored) {
              if (r.truncate(_.get_sizeX()), r.truncate(_.get_sizeY()), l.setInitialParameters(_.get_description(), _.get_filename(), 2, 3, 5, xt.getHashCode(_.get_filename()), 0, 0, _.get_scaleY(), ".fits", _.get_scaleX() > 0, "", _.get_centerX(), _.get_centerY(), _.get_rotation(), !1, "", !1, !1, 1, _.get_referenceX(), _.get_referenceY(), _.get_copyright(), _.get_creditsUrl(), "", "", 0, ""), l.set_wcsImage(_), s.set_imageSet(l), P.addFitsImageSetLayer(s, e), n) {
                var m = l._guessZoomSetting(Z.singleton.renderContext.viewCamera.zoom);
                Z.singleton.gotoRADecZoom(_.get_viewCenterX() / 15, _.get_viewCenterY(), m, !1, null);
              }
              a != null && a(s);
            }
          };
          return r.whitespace(e) && (e = P.getNextFitsName()), ti.useGlVersion2 ? new ar(l, t, null, g) : new Kr(l, t, null, g), s;
        };
        var Ic = {
          add_ready: function(t) {
            this.__ready = r.bindAdd(this.__ready, t);
          },
          remove_ready: function(t) {
            this.__ready = r.bindSub(this.__ready, t);
          },
          _fireReady: function() {
            this.__ready != null ? this.__ready(this, new r.EventArgs()) : this._missedReady = !0;
          },
          add_collectionLoaded: function(t) {
            this.__collectionLoaded = r.bindAdd(this.__collectionLoaded, t);
          },
          remove_collectionLoaded: function(t) {
            this.__collectionLoaded = r.bindSub(this.__collectionLoaded, t);
          },
          _fireCollectionLoaded: function(t) {
            this.__collectionLoaded != null && this.__collectionLoaded(this, new Wo(t));
          },
          add_colorPickerDisplay: function(t) {
            this.__colorPickerDisplay = r.bindAdd(this.__colorPickerDisplay, t);
          },
          remove_colorPickerDisplay: function(t) {
            this.__colorPickerDisplay = r.bindSub(this.__colorPickerDisplay, t);
          },
          add_voTableDisplay: function(t) {
            this.__voTableDisplay = r.bindAdd(this.__voTableDisplay, t);
          },
          remove_voTableDisplay: function(t) {
            this.__voTableDisplay = r.bindSub(this.__voTableDisplay, t);
          },
          add_refreshLayerManager: function(t) {
            this.__refreshLayerManager = r.bindAdd(this.__refreshLayerManager, t);
          },
          remove_refreshLayerManager: function(t) {
            this.__refreshLayerManager = r.bindSub(this.__refreshLayerManager, t);
          },
          add_arrived: function(t) {
            this.__arrived = r.bindAdd(this.__arrived, t);
          },
          remove_arrived: function(t) {
            this.__arrived = r.bindSub(this.__arrived, t);
          },
          add_clicked: function(t) {
            this.__clicked = r.bindAdd(this.__clicked, t);
          },
          remove_clicked: function(t) {
            this.__clicked = r.bindSub(this.__clicked, t);
          },
          add_annotationClicked: function(t) {
            this.__annotationClicked = r.bindAdd(this.__annotationClicked, t);
          },
          remove_annotationClicked: function(t) {
            this.__annotationClicked = r.bindSub(this.__annotationClicked, t);
          },
          add_imageryLoaded: function(t) {
            this.__imageryLoaded = r.bindAdd(this.__imageryLoaded, t);
          },
          remove_imageryLoaded: function(t) {
            this.__imageryLoaded = r.bindSub(this.__imageryLoaded, t);
          },
          add_tourReady: function(t) {
            this.__tourReady = r.bindAdd(this.__tourReady, t);
          },
          remove_tourReady: function(t) {
            this.__tourReady = r.bindSub(this.__tourReady, t);
          },
          add_tourError: function(t) {
            this.__tourError = r.bindAdd(this.__tourError, t);
          },
          remove_tourError: function(t) {
            this.__tourError = r.bindSub(this.__tourError, t);
          },
          add_tourPaused: function(t) {
            this.__tourPaused = r.bindAdd(this.__tourPaused, t);
          },
          remove_tourPaused: function(t) {
            this.__tourPaused = r.bindSub(this.__tourPaused, t);
          },
          add_tourResumed: function(t) {
            this.__tourResumed = r.bindAdd(this.__tourResumed, t);
          },
          remove_tourResumed: function(t) {
            this.__tourResumed = r.bindSub(this.__tourResumed, t);
          },
          add_tourEnded: function(t) {
            this.__tourEnded = r.bindAdd(this.__tourEnded, t);
          },
          remove_tourEnded: function(t) {
            this.__tourEnded = r.bindSub(this.__tourEnded, t);
          },
          add_slideChanged: function(t) {
            this.__slideChanged = r.bindAdd(this.__slideChanged, t);
          },
          remove_slideChanged: function(t) {
            this.__slideChanged = r.bindSub(this.__slideChanged, t);
          },
          add_timeScrubberHook: function(t) {
            this.__timeScrubberHook = r.bindAdd(this.__timeScrubberHook, t);
          },
          remove_timeScrubberHook: function(t) {
            this.__timeScrubberHook = r.bindSub(this.__timeScrubberHook, t);
          },
          setTimeScrubberPosition: function(t) {
            P.setTimeSliderValue(t);
          },
          setTimeSlider: function(t, e) {
            this.__timeScrubberHook(t, e);
          },
          showColorPicker: function(t, e) {
            this.__colorPickerDisplay != null && this.__colorPickerDisplay(t, e);
          },
          displayVoTableLayer: function(t) {
            this.__voTableDisplay != null && this.__voTableDisplay(t, new r.EventArgs());
          },
          refreshLayerManagerNow: function() {
            this.__refreshLayerManager != null && this.__refreshLayerManager(null, new r.EventArgs());
          },
          _fireTourReady: function() {
            this.__tourReady != null && this.__tourReady(this, new r.EventArgs());
          },
          _fireTourError: function(t) {
            this.__tourError != null && this.__tourError(t, new r.EventArgs());
          },
          _fireTourPaused: function() {
            this.__tourPaused != null && this.__tourPaused(this, new r.EventArgs());
          },
          _fireTourResume: function() {
            this.__tourResumed != null && this.__tourResumed(this, new r.EventArgs());
          },
          _fireTourEnded: function() {
            this.__tourEnded != null && this.__tourEnded(this, new r.EventArgs());
          },
          _fireImageryLoaded: function() {
            this.__imageryLoaded != null && this.__imageryLoaded(this, new r.EventArgs());
          },
          _fireClick: function(t, e) {
            this.__clicked != null && this.__clicked(this, new Js(t, e, Z.singleton.renderContext.viewCamera.zoom));
          },
          _fireArrived: function(t, e, n) {
            this.__arrived != null && this.__arrived(this, new Js(t, e, n));
          },
          _fireAnnotationclicked: function(t, e, n) {
            try {
              this.__annotationClicked != null && this.__annotationClicked(this, new Ko(t, e, n));
            } catch {
            }
          },
          _fireSlideChanged: function(t) {
            try {
              this.__slideChanged != null && this.__slideChanged(this, new Zo(t));
            } catch {
            }
          },
          endInit: function() {
            this._missedReady && this._fireReady();
          },
          gotoRaDecZoom: function(t, e, n, a, s) {
            Z.singleton != null && Z.singleton.gotoRADecZoom(t / 15, e, n * 6, a, s);
          },
          setBackgroundImageByName: function(t) {
            Z.singleton != null && Z.singleton.setBackgroundImageByName(t);
          },
          addVoTableLayer: function(t) {
            return P.addVoTableLayer(t, "Vo Table");
          },
          getLayers: function() {
            return P.get_layerList();
          },
          setForegroundImageByName: function(t) {
            Z.singleton != null && (Z.singleton.setForegroundImageByName(t), Z.singleton.renderContext.viewCamera.opacity = 100);
          },
          setForegroundOpacity: function(t) {
            Z.singleton != null && (Z.singleton.renderContext.viewCamera.opacity = t);
          },
          addCatalogHipsByName: function(t) {
            Z.singleton != null && Z.singleton.addCatalogHipsByName(t);
          },
          addCatalogHipsByNameWithCallback: function(t, e) {
            Z.singleton != null && Z.singleton.addCatalogHipsByNameWithCallback(t, e);
          },
          removeCatalogHipsByName: function(t) {
            Z.singleton != null && Z.singleton.removeCatalogHipsByName(t);
          },
          getCatalogHipsDataInView: function(t, e, n) {
            Z.singleton != null && Z.singleton.getCatalogHipsDataInView(t, e, n);
          },
          setCutsForFits: function(t, e, n) {
            Z.singleton != null && Z.singleton.setCutsForFits(t, e, n);
          },
          setColorMapForFits: function(t, e) {
            Z.singleton != null && Z.singleton.setColorMapForFits(t, e);
          },
          setScaleTypeForFits: function(t, e) {
            Z.singleton != null && Z.singleton.setScaleTypeForFits(t, e);
          },
          hideUI: function(t) {
          },
          loadTour: function(t) {
            Z.singleton != null && Z.singleton.playTour(t);
          },
          loadFits: function(t) {
            return this.loadFitsLayer(t, "", !0, null);
          },
          loadFitsLayer: function(t, e, n, a) {
            return this.addImageSetLayer(t, "fits", e, n, a);
          },
          addImageSetLayer: function(t, e, n, a, s) {
            if (e != null && e.toLowerCase() === "fits")
              return on._addFitsLayer(t, n, a, s);
            if (e != null && e.toLowerCase() === "preloaded") {
              var l = Z.singleton.getImageSetByUrl(t);
              if (l != null)
                return on._addImageSet(n, a, s, l);
            } else {
              var l = Z.singleton.getImageSetByUrl(t);
              if (l != null)
                return on._addImageSet(n, a, s, l);
              if (on._containsFitsLikeExtentsion(t))
                return on._addFitsLayer(t, n, a, s);
            }
            return null;
          },
          setImageSetLayerOrder: function(t, e) {
            var n = P.get_layerList()[t];
            r.canCast(n, qi) && e >= 0 && (r.remove(P.get_allMaps()[n.get_referenceFrame()].layers, n), P.get_allMaps()[n.get_referenceFrame()].layers.splice(e, 0, n));
          },
          isUsingWebGl2: function() {
            return ti.useGlVersion2;
          },
          get_hideTourFeedback: function() {
            return this.hideTourFeedback;
          },
          set_hideTourFeedback: function(t) {
            return this.hideTourFeedback = t, t;
          },
          playTour: function() {
            Z.singleton != null && Z.singleton.playCurrentTour();
          },
          stopTour: function() {
            Z.singleton != null && Z.singleton.stopCurrentTour();
          },
          loadImageCollection: function(t, e) {
            var n = this;
            this._imageUrl = t, va.getWtmlFile(t, function() {
              n._fireCollectionLoaded(t);
            }, e);
          },
          _imageFileLoaded: function() {
            this._fireCollectionLoaded(this._imageUrl);
          },
          zoom: function(t) {
            Z.singleton != null && Z.singleton.zoom(t);
          },
          getRA: function() {
            return Z.singleton != null ? Z.singleton.renderContext.get_RA() : 0;
          },
          getDec: function() {
            return Z.singleton != null ? Z.singleton.renderContext.get_dec() : 0;
          },
          createFolder: function() {
            var t = new pn();
            return t;
          },
          createPolygon: function(t) {
            var e = new Ro();
            return e.set_fill(t), e;
          },
          createPolyLine: function(t) {
            return new $o();
          },
          createCircle: function(t) {
            var e = new Eo();
            return e.set_fill(t), e;
          },
          addAnnotation: function(t) {
            t != null && r.canCast(t, ve) && Z.singleton != null && Z.singleton._addAnnotation(t);
          },
          removeAnnotation: function(t) {
            t != null && Z.singleton != null && Z.singleton._removeAnnotation(t);
          },
          clearAnnotations: function() {
            Z.singleton != null && Z.singleton._clearAnnotations();
          },
          get_smoothAnimation: function() {
            return this._smoothAnimation;
          },
          set_smoothAnimation: function(t) {
            return this._smoothAnimation = t, t;
          },
          get_showCaptions: function() {
            return this._showCaptions;
          },
          set_showCaptions: function(t) {
            return this._showCaptions = t, t;
          },
          loadVOTable: function(t, e) {
          },
          get_fov: function() {
            return Z.singleton != null ? Z.singleton.renderContext.viewCamera.zoom / 6 : 60;
          }
        };
        function X() {
          this.autoRepeatTour = !1, this._localHorizonMode = !1, this._galacticMode = !1, this._constellationBoundryColor = "blue", this._constellationSelectionColor = "yellow", this._constellationFigureColor = "red", this._showConstellationFigures = !0, this._showConstellationBoundries = !0, this._showConstellationSelection = !0, this._showCrosshairs = !0, this._crosshairsColor = "white", this._showEcliptic = !1, this._locationLat = 47.717, this._locationLng = -122.0858, this._locationAltitude = 100, this._showFiledOfView = !1, this._actualPlanetScale = !0, this._fovCamera = 0, this._fovEyepiece = 0, this._fovTelescope = 0, this._showClouds = !1, this._showGrid = !1, this._showHorizon = !0, this._showHorizonPanorama = !1, this._showMoonsAsPointSource = !0, this._showSolarSystem = !0, this._solarSystemStars = !0, this._solarSystemMilkyWay = !0, this._solarSystemCosmos = !0, this._solarSystemOrbits = !0, this._solarSystemOverlays = !0, this._solarSystemLighting = !0, this._solarSystemMultiRes = !0, this._solarSystemScale = 1, this._smoothPan = !0, this._showElevationModel = !0, this._showEquatorialGridText = !1, this._showGalacticGrid = !1, this._showGalacticGridText = !1, this._showEclipticGrid = !1, this._showEclipticGridText = !1, this._showEclipticOverviewText = !1, this._showAltAzGrid = !1, this._eclipticGridColor = Pt.get_green(), this._galacticGridColor = Pt.get_cyan(), this._altAzGridColor = Pt.get_magenta(), this._precessionChartColor = Pt.get_orange(), this._eclipticColor = Pt.get_blue(), this._equatorialGridColor = Pt.get_white(), this._showAltAzGridText = !1, this._showPrecessionChart = !1, this._showConstellationPictures = !1, this._showConstellationLabels = !1, this._constellationLabelsHeight = 80, this._solarSystemCMB = !0, this._solarSystemMinorPlanets = !1, this._solarSystemPlanets = !0, this._showEarthSky = !0, this._solarSystemMinorOrbits = !1, this._constellationsEnabled = "", this._constellationFiguresFilter = new ke(), this._constellationBoundariesFilter = new ke(), this._constellationNamesFilter = new ke(), this._constellationArtFilter = new ke(), this._showSkyOverlays = !0, this._showConstellations = !0, this._showSkyNode = !0, this._showSkyGrids = !0, this._showSkyOverlaysIn3d = !0, this._earthCutawayView = !1, this._showISSModel = !1, this._milkyWayModel = !1, this._minorPlanetsFilter = 255, this._planetOrbitsFilter = 2147483647, this._constellations = !0;
        }
        X.get_current = function() {
          return X._active == null && (X._active = new X()), X._active;
        }, X.get_globalSettings = function() {
          return X._active == null && (X._active = new X()), X._active;
        }, X.get_active = function() {
          return X._active == null && (X._active = new X()), X.tourSettings != null ? X.tourSettings : X._active;
        };
        var Pc = {
          get_constellationFigureColor: function() {
            return this._constellationFigureColor;
          },
          set_constellationFigureColor: function(t) {
            return this._constellationFigureColor = t, t;
          },
          get_constellationBoundryColor: function() {
            return this._constellationBoundryColor;
          },
          set_constellationBoundryColor: function(t) {
            return this._constellationBoundryColor = t, t;
          },
          get_constellationSelectionColor: function() {
            return this._constellationSelectionColor;
          },
          set_constellationSelectionColor: function(t) {
            return this._constellationSelectionColor = t, t;
          },
          get_showCrosshairs: function() {
            return this._showCrosshairs;
          },
          set_showCrosshairs: function(t) {
            return this._showCrosshairs = t, t;
          },
          get_smoothPan: function() {
            return this._smoothPan;
          },
          set_smoothPan: function(t) {
            return this._smoothPan = t, t;
          },
          get_crosshairsColor: function() {
            return this._crosshairsColor;
          },
          set_crosshairsColor: function(t) {
            return this._crosshairsColor = t, t;
          },
          get_actualPlanetScale: function() {
            return this._actualPlanetScale;
          },
          set_actualPlanetScale: function(t) {
            return this._actualPlanetScale = t, t;
          },
          get_fovCamera: function() {
            return this._fovCamera;
          },
          get_fovEyepiece: function() {
            return this._fovEyepiece;
          },
          get_fovTelescope: function() {
            return this._fovTelescope;
          },
          get_locationAltitude: function() {
            return this._locationAltitude;
          },
          set_locationAltitude: function(t) {
            return this._locationAltitude = t, t;
          },
          get_locationLat: function() {
            return this._locationLat;
          },
          set_locationLat: function(t) {
            return this._locationLat = t, t;
          },
          get_locationLng: function() {
            return this._locationLng;
          },
          set_locationLng: function(t) {
            return this._locationLng = t, t;
          },
          get_showClouds: function() {
            return this._showClouds;
          },
          get_showConstellationBoundries: function() {
            return this._showConstellationBoundries;
          },
          set_showConstellationBoundries: function(t) {
            return this._showConstellationBoundries = t, t;
          },
          get_showConstellationFigures: function() {
            return this._showConstellationFigures;
          },
          set_showConstellationFigures: function(t) {
            return this._showConstellationFigures = t, t;
          },
          get_showConstellationSelection: function() {
            return this._showConstellationSelection;
          },
          set_showConstellationSelection: function(t) {
            return this._showConstellationSelection = t, t;
          },
          get_showEcliptic: function() {
            return this._showEcliptic;
          },
          set_showEcliptic: function(t) {
            return this._showEcliptic = t, t;
          },
          get_showElevationModel: function() {
            return this._showElevationModel;
          },
          set_showElevationModel: function(t) {
            return this._showElevationModel = t, t;
          },
          get_showFieldOfView: function() {
            return this._showFiledOfView;
          },
          get_showGrid: function() {
            return this._showGrid;
          },
          set_showGrid: function(t) {
            return this._showGrid = t, t;
          },
          get_showHorizon: function() {
            return this._showHorizon;
          },
          set_showHorizon: function(t) {
            return this._showHorizon = t, t;
          },
          get_showHorizonPanorama: function() {
            return this._showHorizonPanorama;
          },
          get_showMoonsAsPointSource: function() {
            return this._showMoonsAsPointSource;
          },
          get_showSolarSystem: function() {
            return this._showSolarSystem;
          },
          set_showSolarSystem: function(t) {
            return this._showSolarSystem = t, t;
          },
          get_localHorizonMode: function() {
            return this._localHorizonMode;
          },
          set_localHorizonMode: function(t) {
            return this._localHorizonMode = t, t;
          },
          get_galacticMode: function() {
            return this._galacticMode;
          },
          set_galacticMode: function(t) {
            return this._galacticMode = t, t;
          },
          get_solarSystemStars: function() {
            return this._solarSystemStars;
          },
          set_solarSystemStars: function(t) {
            return this._solarSystemStars = t, t;
          },
          get_solarSystemMilkyWay: function() {
            return this._solarSystemMilkyWay;
          },
          set_solarSystemMilkyWay: function(t) {
            return this._solarSystemMilkyWay = t, t;
          },
          get_solarSystemCosmos: function() {
            return this._solarSystemCosmos;
          },
          set_solarSystemCosmos: function(t) {
            return this._solarSystemCosmos = t, t;
          },
          get_solarSystemOrbits: function() {
            return this._solarSystemOrbits;
          },
          set_solarSystemOrbits: function(t) {
            return this._solarSystemOrbits = t, t;
          },
          get_solarSystemOverlays: function() {
            return this._solarSystemOverlays;
          },
          set_solarSystemOverlays: function(t) {
            return this._solarSystemOverlays = t, t;
          },
          get_solarSystemLighting: function() {
            return this._solarSystemLighting;
          },
          set_solarSystemLighting: function(t) {
            return this._solarSystemLighting = t, t;
          },
          get_solarSystemMultiRes: function() {
            return !0;
          },
          set_solarSystemMultiRes: function(t) {
            return this._solarSystemMultiRes = t, t;
          },
          get_solarSystemScale: function() {
            return this._solarSystemScale;
          },
          set_solarSystemScale: function(t) {
            return this._solarSystemScale = t, t;
          },
          get_showEquatorialGridText: function() {
            return this._showEquatorialGridText;
          },
          set_showEquatorialGridText: function(t) {
            return this._showEquatorialGridText = t, t;
          },
          get_showGalacticGrid: function() {
            return this._showGalacticGrid;
          },
          set_showGalacticGrid: function(t) {
            return this._showGalacticGrid = t, t;
          },
          get_showGalacticGridText: function() {
            return this._showGalacticGridText;
          },
          set_showGalacticGridText: function(t) {
            return this._showGalacticGridText = t, t;
          },
          get_showEclipticGrid: function() {
            return this._showEclipticGrid;
          },
          set_showEclipticGrid: function(t) {
            return this._showEclipticGrid = t, t;
          },
          get_showEclipticGridText: function() {
            return this._showEclipticGridText;
          },
          set_showEclipticGridText: function(t) {
            return this._showEclipticGridText = t, t;
          },
          get_showEclipticOverviewText: function() {
            return this._showEclipticOverviewText;
          },
          set_showEclipticOverviewText: function(t) {
            return this._showEclipticOverviewText = t, t;
          },
          get_showAltAzGrid: function() {
            return this._showAltAzGrid;
          },
          set_showAltAzGrid: function(t) {
            return this._showAltAzGrid = t, t;
          },
          get_eclipticGridColor: function() {
            return this._eclipticGridColor;
          },
          set_eclipticGridColor: function(t) {
            return this._eclipticGridColor = t, t;
          },
          get_galacticGridColor: function() {
            return this._galacticGridColor;
          },
          set_galacticGridColor: function(t) {
            return this._galacticGridColor = t, t;
          },
          get_altAzGridColor: function() {
            return this._altAzGridColor;
          },
          set_altAzGridColor: function(t) {
            return this._altAzGridColor = t, t;
          },
          get_precessionChartColor: function() {
            return this._precessionChartColor;
          },
          set_precessionChartColor: function(t) {
            return this._precessionChartColor = t, t;
          },
          get_eclipticColor: function() {
            return this._eclipticColor;
          },
          set_eclipticColor: function(t) {
            return this._eclipticColor = t, t;
          },
          get_equatorialGridColor: function() {
            return this._equatorialGridColor;
          },
          set_equatorialGridColor: function(t) {
            return this._equatorialGridColor = t, t;
          },
          get_showAltAzGridText: function() {
            return this._showAltAzGridText;
          },
          set_showAltAzGridText: function(t) {
            return this._showAltAzGridText = t, t;
          },
          get_showPrecessionChart: function() {
            return this._showPrecessionChart;
          },
          set_showPrecessionChart: function(t) {
            return this._showPrecessionChart = t, t;
          },
          get_showConstellationPictures: function() {
            return this._showConstellationPictures;
          },
          set_showConstellationPictures: function(t) {
            return this._showConstellationPictures = t, t;
          },
          get_showConstellationLabels: function() {
            return this._showConstellationLabels;
          },
          set_showConstellationLabels: function(t) {
            return this._showConstellationLabels = t, t;
          },
          get_constellationLabelsHeight: function() {
            return this._constellationLabelsHeight;
          },
          set_constellationLabelsHeight: function(t) {
            return this._constellationLabelsHeight = t, t;
          },
          get_solarSystemCMB: function() {
            return this._solarSystemCMB;
          },
          set_solarSystemCMB: function(t) {
            return this._solarSystemCMB = t, t;
          },
          get_solarSystemMinorPlanets: function() {
            return this._solarSystemMinorPlanets;
          },
          set_solarSystemMinorPlanets: function(t) {
            return this._solarSystemMinorPlanets = t, t;
          },
          get_solarSystemPlanets: function() {
            return this._solarSystemPlanets;
          },
          set_solarSystemPlanets: function(t) {
            return this._solarSystemPlanets = t, t;
          },
          get_showEarthSky: function() {
            return this._showEarthSky;
          },
          set_showEarthSky: function(t) {
            return this._showEarthSky = t, t;
          },
          get_solarSystemMinorOrbits: function() {
            return this._solarSystemMinorOrbits;
          },
          set_solarSystemMinorOrbits: function(t) {
            return this._solarSystemMinorOrbits = t, t;
          },
          get_constellationsEnabled: function() {
            return this._constellationsEnabled;
          },
          set_constellationsEnabled: function(t) {
            return this._constellationsEnabled = t, t;
          },
          get_constellationFiguresFilter: function() {
            return this._constellationFiguresFilter;
          },
          set_constellationFiguresFilter: function(t) {
            return this._constellationFiguresFilter = t, t;
          },
          get_constellationBoundariesFilter: function() {
            return this._constellationBoundariesFilter;
          },
          set_constellationBoundariesFilter: function(t) {
            return this._constellationBoundariesFilter = t, t;
          },
          get_constellationNamesFilter: function() {
            return this._constellationNamesFilter;
          },
          set_constellationNamesFilter: function(t) {
            return this._constellationNamesFilter = t, t;
          },
          get_constellationArtFilter: function() {
            return this._constellationArtFilter;
          },
          set_constellationArtFilter: function(t) {
            return this._constellationArtFilter = t, t;
          },
          get_showSkyOverlays: function() {
            return this._showSkyOverlays;
          },
          set_showSkyOverlays: function(t) {
            return this._showSkyOverlays = t, t;
          },
          get_showConstellations: function() {
            return this._showConstellations;
          },
          set_showConstellations: function(t) {
            return this._showConstellations = t, t;
          },
          get_showSkyNode: function() {
            return this._showSkyNode;
          },
          set_showSkyNode: function(t) {
            return this._showSkyNode = t, t;
          },
          get_showSkyGrids: function() {
            return this._showSkyGrids;
          },
          set_showSkyGrids: function(t) {
            return this._showSkyGrids = t, t;
          },
          get_showSkyOverlaysIn3d: function() {
            return this._showSkyOverlaysIn3d;
          },
          set_showSkyOverlaysIn3d: function(t) {
            return this._showSkyOverlaysIn3d = t, t;
          },
          get_earthCutawayView: function() {
            return this._earthCutawayView;
          },
          set_earthCutawayView: function(t) {
            return this._earthCutawayView = t, t;
          },
          get_showISSModel: function() {
            return this._showISSModel;
          },
          set_showISSModel: function(t) {
            return this._showISSModel = t, t;
          },
          get_milkyWayModel: function() {
            return this._milkyWayModel;
          },
          set_milkyWayModel: function(t) {
            return this._milkyWayModel = t, t;
          },
          get_minorPlanetsFilter: function() {
            return this._minorPlanetsFilter;
          },
          set_minorPlanetsFilter: function(t) {
            return this._minorPlanetsFilter = t, t;
          },
          get_planetOrbitsFilter: function() {
            return this._planetOrbitsFilter;
          },
          set_planetOrbitsFilter: function(t) {
            return this._planetOrbitsFilter = t, t;
          },
          get_constellations: function() {
            return this._constellations;
          },
          set_constellations: function(t) {
            return this._constellations = t, t;
          },
          getSetting: function(t) {
            return t === 17 ? new Na(!0, 0, !1, null) : new Na(!1, 1, !1, null);
          }
        };
        function vn(t) {
          this.height = 128, this.items = [], this._glyphVersion = -1, this.viewTransform = tt.get_identity(), this._textObject = new Rn(), this._vertCount = 0, this.height = t * 3;
        }
        var Ec = {
          add: function(t) {
            this.items.push(t);
          },
          draw: function(t, e, n) {
            if (t.gl == null)
              for (var a = $._transformCoordinate(t.get_viewPoint(), this.viewTransform), s = this.height / t.get_fovAngle() * t.height / 180, l = r.enumerate(this.items); l.moveNext(); ) {
                var g = l.current, _ = t.WVP.transform(g.center);
                if (!(_.z < 0) && !($.dot(a, g.center) < 0.55)) {
                  var m = t.WVP.transform(g.top), b = Math.atan2(_.x - m.x, _.y - m.y), y = t.device;
                  y.save(), y.translate(_.x, _.y), y.rotate(-b), y.globalAlpha = e, y.fillStyle = n.toString(), y.font = "normal normal " + Math.round(s * 1.2).toString() + "px Arial", y.textBaseline = "top";
                  var M = y.measureText(g.text);
                  y.fillText(g.text, -M.width / 2, -s / 2), y.restore();
                }
              }
            else {
              if ((this._glyphCache == null || this._glyphCache.get_version() > this._glyphVersion) && this.prepareBatch(), !this._glyphCache.ready)
                return;
              Ke.use(t, this._vertexBuffer.vertexBuffer, this._glyphCache.get_texture().texture2d), t.gl.drawArrays(4, 0, this._vertexBuffer.count);
            }
          },
          prepareBatch: function() {
            if (this._glyphCache == null && (this._glyphCache = Tr.getCache(this.height)), !!this._glyphCache.ready) {
              this._textObject.text = "", this._textObject.fontSize = this.height * 0.5;
              for (var t = [], e = r.enumerate(this.items); e.moveNext(); ) {
                for (var n = e.current, a = n.text, s = 0, l = this._textObject.fontSize / 128, g = 0.6666, _ = 0, m = 0, b = 0; b < a.length; b++) {
                  var y = this._glyphCache.getGlyphItem(a.substr(b, 1));
                  y != null && (_ += y.extents.x, m = Math.max(y.extents.y, m));
                }
                var M = Mt.create(_, m);
                n.width = M.x * n.scale * g * l, n.height = M.y * n.scale * g * l;
                for (var A = a.length, b = 0; b < A; b++) {
                  var y = this._glyphCache.getGlyphItem(a.substr(b, 1));
                  if (y != null) {
                    var R = Ji.create(s * n.scale * g, 0 * n.scale * g, y.extents.x * l * n.scale * g, y.extents.y * l * n.scale * g);
                    s += y.extents.x * l, n.addGlyphPoints(t, y.size, R, y.uvRect);
                  }
                }
              }
              this._vertCount = t.length, this._vertexBuffer = new wa(this._vertCount);
              for (var F = this._vertexBuffer.lock(), b = 0; b < this._vertCount; b++)
                F[b] = t[b];
              this._vertexBuffer.unlock(), this._glyphVersion = this._glyphCache.get_version();
            }
          },
          cleanUp: function() {
            this._vertexBuffer != null && (this._vertexBuffer = null), this.items.length = 0;
          }
        };
        function ta(t) {
          this.referenceCount = 0, this.glyph = t, this.uvRect = new Ji(), this.size = new Mt(), this.referenceCount = 1;
        }
        ta.create = function(t, e, n, a) {
          var s = new ta(t);
          return s.glyph = t, s.uvRect = e, s.size = n, s.extents = a, s.referenceCount = 1, s;
        }, ta._fromXML = function(t) {
          var e = t.attributes.getNamedItem("Glyph").nodeValue, n = new ta(e);
          return n.uvRect = Ji.create(parseFloat(t.attributes.getNamedItem("UVLeft").nodeValue), parseFloat(t.attributes.getNamedItem("UVTop").nodeValue), parseFloat(t.attributes.getNamedItem("UVWidth").nodeValue), parseFloat(t.attributes.getNamedItem("UVHeight").nodeValue)), n.size = Mt.create(parseFloat(t.attributes.getNamedItem("SizeWidth").nodeValue), parseFloat(t.attributes.getNamedItem("SizeHeight").nodeValue)), n.extents = Mt.create(parseFloat(t.attributes.getNamedItem("ExtentsWidth").nodeValue), parseFloat(t.attributes.getNamedItem("ExtentsHeight").nodeValue)), n;
        };
        var Rc = {
          addRef: function() {
            this.referenceCount++;
          },
          release: function() {
            this.referenceCount--;
          }
        };
        function Tr(t) {
          this._cellHeight = 128, this._gridSize = 8, this.ready = !1, this._glyphItems = {}, this.textObject = new Rn(), this._dirty = !0, this._textureDirty = !0, this._version = 0, this._cellHeight = t, this._texture = D.loadPlanetTexture(ze.singleton.engineAssetUrl("glyphs1.png")), this._webFile = new _r(ze.singleton.engineAssetUrl("glyphs1.xml")), this._webFile.onStateChange = r.bind("_glyphXmlReady", this), this._webFile.send();
        }
        Tr.getCache = function(t) {
          return r.keyExists(Tr._caches, t) || (Tr._caches[t] = new Tr(t)), Tr._caches[t];
        }, Tr.cleanUpAll = function() {
          r.clearKeys(Tr._caches);
        };
        var $c = {
          get_height: function() {
            return this._cellHeight;
          },
          _glyphXmlReady: function() {
            this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadXmlGlyph(this._webFile.getXml());
          },
          _loadXmlGlyph: function(t) {
            for (var e = xt.selectSingleNode(t, "GlyphItems"), n = r.enumerate(e.childNodes); n.moveNext(); ) {
              var a = n.current;
              if (a.nodeName === "GlyphItem") {
                var s = ta._fromXML(a);
                this._glyphItems[s.glyph] = s, Tr._allGlyphs = Tr._allGlyphs + s.glyph;
              }
            }
            this.ready = !0;
          },
          get_texture: function() {
            return this._texture;
          },
          _makeTexture: function() {
            this._calcOrMake(!0);
          },
          getGlyphItem: function(t) {
            return this._dirty && this._calculateGlyphDetails(), this._glyphItems[t];
          },
          _calculateGlyphDetails: function() {
            this._calcOrMake(!1);
          },
          _calcOrMake: function(t) {
          },
          get_version: function() {
            return this._version;
          },
          set_version: function(t) {
            return this._version = t, t;
          },
          addGlyph: function(t) {
            if (r.keyExists(this._glyphItems, t))
              this._glyphItems[t].addRef();
            else {
              var e = new ta(t);
              this._glyphItems[t] = e, this._dirty = !0, this._textureDirty = !0, this._version++, Tr._allGlyphs = Tr._allGlyphs + t;
            }
          },
          cleanUp: function() {
            this._dirty = !0, this._texture = null;
          },
          dispose: function() {
            this.cleanUp();
          },
          get_dirty: function() {
            return this._dirty;
          },
          set_dirty: function(t) {
            return this._dirty = t, t;
          }
        };
        function nr(t, e, n, a, s) {
          this.rotation = 0, this.tilt = 0, this.bank = 0, this._matInit = !1, this.color = Pt.get_white(), this.sky = !0, this.scale = 0, this.opacity = 1, this.text = "", this.width = 1, this.height = 1, this.alignment = 0, this.text = n, this.up = e, this.center = t, this.scale = s, this.top = $.addVectors(t, $.scale(e, s)), a < 0 && (this.sky = !1);
        }
        var Dc = {
          addGlyphPoints: function(t, e, n, a) {
            for (var s = new Array(6), l = 0; l < 6; l++)
              s[l] = new Ht();
            var g = $.cross(this.center, this.up), _ = $.cross(this.up, this.center);
            g.normalize(), _.normalize(), this.up.normalize();
            var m = $.cross(this.center, _);
            m.normalize(), this.alignment ? this.alignment === 1 && (g.multiply(-n.get_left() * 2), _.multiply(n.get_right() * 2)) : (g.multiply(this.width - n.get_left() * 2), _.multiply(this.width - (this.width * 2 - n.get_right() * 2)));
            var b = m.copy(), y = $.subtractVectors($.get_empty(), m);
            b.multiply(this.height - n.get_top() * 2), y.multiply(this.height - (this.height * 2 - n.get_bottom() * 2));
            var M = this.center.copy();
            M.add(b), this.sky ? M.add(g) : M.subtract(g);
            var A = this.center.copy();
            A.add(b), this.sky ? A.add(_) : A.subtract(_);
            var R = this.center.copy();
            this.sky ? R.add(g) : R.subtract(g), R.add(y);
            var F = this.center.copy();
            if (this.sky ? F.add(_) : F.subtract(_), F.add(y), s[0].position = M.copy(), s[0].tu = a.get_left(), s[0].tv = a.get_top(), s[2].tu = a.get_left(), s[2].tv = a.get_bottom(), s[2].position = R.copy(), s[1].tu = a.get_right(), s[1].tv = a.get_top(), s[1].position = A.copy(), s[3].tu = a.get_right(), s[3].tv = a.get_bottom(), s[3].position = F.copy(), s[5].tu = a.get_right(), s[5].tv = a.get_top(), s[5].position = A.copy(), s[4].tu = a.get_left(), s[4].tv = a.get_bottom(), s[4].position = R.copy(), this.rotation || this.tilt || this.bank) {
              if (!this._matInit) {
                var O = tt.lookAtLH(this.center, new $(), this.up), B = O.clone();
                B.invert(), this._rtbMat = tt.multiplyMatrix(tt.multiplyMatrix(tt.multiplyMatrix(tt.multiplyMatrix(O, tt._rotationZ(-this.rotation / 180 * Math.PI)), tt._rotationX(-this.tilt / 180 * Math.PI)), tt._rotationY(-this.bank / 180 * Math.PI)), B), this._matInit = !0;
              }
              for (var l = 0; l < 6; l++)
                s[l].position = $._transformCoordinate(s[l].position, this._rtbMat);
            }
            for (var H = r.enumerate(s); H.moveNext(); ) {
              var K = H.current;
              t.push(K);
            }
          }
        };
        function Q() {
        }
        Q.updateClock = function() {
          if (Q._syncToClock) {
            var t = Q.get_metaNow();
            if (Q._timeRate !== 1) {
              var e = t.getTime() - Q.last.getTime(), n = e * Q._timeRate;
              Q._offset += n;
            }
            Q.last = t;
            try {
              Q._now = new Date(t.getTime() + Q._offset);
            } catch {
              Q._now = new Date(1, 12, 25, 23, 59, 59), Q._offset = Q._now - Q.get_metaNow();
            }
            Q._now.getFullYear() > 4e3 && (Q._now = new Date(4e3, 12, 31, 23, 59, 59), Q._offset = Q._now - Q.get_metaNow()), Q._now.getFullYear() < 1 && (Q._now = new Date(0, 12, 25, 23, 59, 59), Q._offset = Q._now - Q.get_metaNow());
          }
        }, Q.getTimeForFutureTime = function(t) {
          try {
            if (Q._syncToClock) {
              var e = new Date(Q.get_now().getTime() + t * 1e3 * Q._timeRate);
              return e;
            } else
              return Q.get_now();
          } catch {
            return Q.get_now();
          }
        }, Q.getJNowForFutureTime = function(t) {
          try {
            if (Q._syncToClock) {
              var e = new Date(Q.get_now().getTime() + r.truncate(t * 1e3 * Q._timeRate));
              return Q.utcToJulian(e);
            } else
              return Q.utcToJulian(Q.get_now());
          } catch {
            return Q.utcToJulian(Q.get_now());
          }
        }, Q.get_now = function() {
          return Q._now;
        }, Q.set_now = function(t) {
          return Q._now = t, Q._offset = Q._now - Q.get_metaNow(), Q.last = Q.get_metaNow(), t;
        }, Q.get_metaNow = function() {
          return Q._metaNow;
        }, Q.set_metaNow = function(t) {
          return Q.frameDumping || (Q._metaNow = t), t;
        }, Q.nextFrame = function() {
          Q._metaNow.setMilliseconds(Q._metaNow.getMilliseconds() + Math.round(1e3 / Q.framesPerSecond)), Q.currentFrameNumber += 1;
        }, Q.get_doneDumping = function() {
          return !Q.frameDumping || Q.cancelFrameDump || Q.currentFrameNumber >= Q.totalFrames;
        }, Q.syncTime = function() {
          Q._offset = 0, Q._now = r.now(), Q._syncToClock = !0;
        }, Q.get_jNow = function() {
          return Q.utcToJulian(Q.get_now());
        }, Q.get_syncToClock = function() {
          return Q._syncToClock;
        }, Q.set_syncToClock = function(t) {
          return Q._syncToClock !== t && (Q._syncToClock = t, t ? (Q.last = r.now(), Q._offset = Q._now - r.now()) : Q._now = new Date(r.now().getTime() + Q._offset)), t;
        }, Q.get_timeRate = function() {
          return Q._timeRate;
        }, Q.set_timeRate = function(t) {
          return Q._timeRate = t, t;
        }, Q.get_altitude = function() {
          return Q._altitude;
        }, Q.set_altitude = function(t) {
          return Q._altitude = t, t;
        }, Q.get_location = function() {
          return Q._location = U.fromLatLng(X.get_active().get_locationLat(), X.get_active().get_locationLng()), Q._altitude = X.get_active().get_locationAltitude(), Q._location;
        }, Q.set_location = function(t) {
          return X.get_globalSettings().get_locationLat() !== t.get_lat() && X.get_globalSettings().set_locationLat(t.get_lat()), X.get_globalSettings().get_locationLng() !== t.get_lng() && X.get_globalSettings().set_locationLng(t.get_lng()), Q._location = t, t;
        }, Q.julianToUtc = function(t) {
          var e = new ui();
          e.setJD(t, !0);
          var n = (e.second() - r.truncate(e.second())) * 1e3;
          return new Date(e.year(), e.month() - 1, e.day(), e.hour(), e.minute(), r.truncate(e.second()), r.truncate(n));
        }, Q._twoLineDateToJulian = function(t) {
          var e = parseInt(t.substring(0, 1)) < 6, n = parseInt((e ? " 20" : "19") + t.substring(0, 2)), a = parseFloat(t.substring(2, 3)), s = parseFloat(t.substr(5)), l = new Date(n, 0, 1, 0, 0);
          return Q.utcToJulian(l) + (a - 1 + s);
        }, Q.julianToTwoLineDate = function(t) {
          return Q.dateToTwoLineDate(Q.julianToUtc(t));
        }, Q.dateToTwoLineDate = function(t) {
          var e = new r.StringBuilder();
          e.append(t.getFullYear() % 100);
          var n = new Date(t.getFullYear(), 0, 1, 0, 0), a = Math.floor((t - n) / (60 * 60 * 24 * 1e3)) + 2, s = a + t.getHours() / 24 + t.getMinutes() / 60 / 24 + t.getSeconds() / 60 / 60 / 24 + t.getMilliseconds() / 1e3 / 60 / 60 / 24, l = Q.tleDayString(s);
          return e.append(l), e.toString();
        }, Q.tleDayString = function(t) {
          var e = t.toString(), n = e.indexOf(".");
          n === -1 && (n = e.length, e += ".0");
          var a = e.length - n - 1, s = "00000000";
          return e = s.substr(0, 3 - n) + e + s.substr(0, 8 - a), e;
        }, Q.utcToJulian = function(t) {
          var e = t.getUTCFullYear(), n = t.getUTCMonth() + 1, a = t.getUTCDate(), s = t.getUTCHours(), l = t.getUTCMinutes(), g = t.getUTCSeconds() + t.getUTCMilliseconds() / 1e3, _ = a + s / 24 + l / 1440 + g / 86400;
          return ge.getJulianDay(e, n, _);
        }, Q.dateToJD = function(t, e, n, a) {
          var s = t, l = e;
          l < 3 && (s = s - 1, l = l + 12);
          var g = 0, _ = 0;
          return a && (g = r.truncate(s / 100), _ = 2 - g + r.truncate(g / 4)), r.truncate(365.25 * (s + 4716)) + r.truncate(30.6001 * (l + 1)) + n + _ - 1524.5;
        };
        var Nc = {};
        function Os(t) {
          this.magnitude = 0, this.RA = 0, this.dec = 0, this.BMV = 0, this.id = 0, this.absoluteMagnitude = 0, this.par = 0, this.distance = 0;
          var e = t.split("	");
          if (this.id = parseInt(r.replaceString(e[0], "HIP", "")), this.dec = parseFloat(e[3]), this.RA = parseFloat(e[2]) / 15, e.length > 4)
            try {
              e[4].toUpperCase() !== "NULL" && e[4] && (this.magnitude = parseFloat(e[4]));
            } catch {
            }
          if (e.length > 5)
            try {
              this.BMV = parseFloat(e[5]), this._makeColor(this.BMV);
            } catch {
            }
          e.length > 6 && (this.par = parseFloat(e[6]), this._makeDistanceAndMagnitude());
        }
        var Fc = {
          get_name: function() {
            return "HIP" + this.id.toString();
          },
          get_coordinates: function() {
            return U.fromRaDec(this.RA, this.dec);
          },
          get_asPlace: function() {
            var t = fr.create(this.get_name(), this.dec, this.RA, 1, jt.containment.findConstellationForPoint(this.RA, this.dec), 4, -1);
            return t.set_magnitude(this.magnitude), t.set_distance(this.distance), t;
          },
          stars: function(t, e) {
            var n = t.split("	");
            if (this.id = parseInt(n[0]), this.RA = parseFloat(n[1]) / 15, this.dec = parseFloat(n[2]), n.length > 3)
              try {
                this.magnitude = parseFloat(n[3]);
              } catch {
              }
            if (n.length > 4)
              try {
                this.col = j.load(n[4]);
              } catch {
              }
          },
          _makeDistanceAndMagnitude: function() {
            this.distance = 1 / (this.par / 1e3), this.absoluteMagnitude = this.magnitude - 5 * (xt.logN(this.distance, 10) - 1), this.distance *= 206264.806;
          },
          _makeColor: function(t) {
            var e = 4294967295;
            t <= -0.32 ? e = 4288854271 : t <= -0.31 ? e = 4288919807 : t <= -0.3 ? e = 4288985855 : t <= -0.3 ? e = 4289051391 : t <= -0.28 ? e = 4289182975 : t <= -0.26 ? e = 4289314303 : t <= -0.24 ? e = 4289445887 : t <= -0.2 ? e = 4289708799 : t <= -0.16 ? e = 4290037503 : t <= -0.14 ? e = 4290169087 : t <= -0.12 ? e = 4290366207 : t <= -0.09 ? e = 4290563583 : t <= -0.06 ? e = 4290892031 : t <= 0 ? e = 4291483391 : t <= 0.06 ? e = 4292009215 : t <= 0.14 ? e = 4292732159 : t <= 0.19 ? e = 4293126399 : t <= 0.31 ? e = 4294111999 : t <= 0.36 ? e = 4294571775 : t <= 0.43 ? e = 4294965756 : t <= 0.54 ? e = 4294964979 : t <= 0.59 ? e = 4294964203 : t <= 0.63 ? e = 4294963687 : t <= 0.66 ? e = 4294963169 : t <= 0.74 ? e = 4294962909 : t <= 0.82 ? e = 4294961877 : t <= 0.92 ? e = 4294960324 : t <= 1.15 ? e = 4294959032 : t <= 1.3 ? e = 4294958516 : t <= 1.41 ? e = 4294955933 : t <= 1.48 ? e = 4294954385 : t <= 1.52 ? e = 4294953351 : t <= 1.55 ? e = 4294952319 : t <= 1.56 ? e = 4294951287 : t <= 1.61 ? e = 4294950257 : t <= 1.72 ? e = 4294948966 : t <= 1.84 ? e = 4294947419 : t <= 2 && (e = 4294946129), this.col = j.fromInt(e);
          }
        };
        function ma(t) {
          this.RA = 0, this.dec = 0, this.distance = 0, this.type = 0, this.eTypeBucket = 0, this.size = 5, this.sdssID = 0, this.sdssID = t.readInt64(), this.RA = t.readSingle(), this.dec = t.readSingle(), this.distance = t.readSingle(), this.eTypeBucket = t.readByte(), this.size = t.readSingle();
        }
        ma.getEType = function(t) {
          for (var e = 0, n = ma._eTypeBuckets.length - 1; n - e > 1; ) {
            var a = (e + n) / 2;
            t > ma._eTypeBuckets[a] ? e = a : n = a;
          }
          return e;
        };
        var Bc = {};
        function Vs() {
          this.latMin = 0, this.latMax = 0, this.lngMin = 0, this.lngMax = 0;
        }
        var zc = {};
        function G() {
          this._renderTriangleLists = new Array(4), this._indexBuffers = new Array(4), this.level = 0, this.tileX = 0, this.tileY = 0, this.texture = null, this.texture2d = null, this.isCatalogTile = !1, this.readyToRender = !1, this.inViewFrustum = !0, this.globalCenter = $.zero, this.children = [null, null, null, null], this.parent = null, this.localCenter = new $(), this.renderedAtOrBelowGeneration = 0, this._demScaleFactor = 6371e3, this.demIndex = 0, this.demAverage = 0, this.demReady = !1, this.texReady = !1, this.demTile = !1, this.demDownloading = !1, this.renderedGeneration = 0, this.accomidation = 0, this.accessCount = 0, this.downloading = !1, this.geometryCreated = !1, this._isHdTile = !1, this.demSize = 33 * 33, this._topLeftScreen = new $(), this._bottomRightScreen = new $(), this._topRightScreen = new $(), this._bottomLeftScreen = new $(), this.sphereRadius = 0, this.sphereCenter = new $(), this.radius = 1, this.triangleCount = 0, this.requestHits = 0, this.requestPending = !1, this.errored = !1, this._key = null, this._tileId = null, this._vertexCount = 0, this.renderChildPart = null, this.renderChildPart = new Array(4);
          for (var t = 0; t < 4; t++)
            this.renderChildPart[t] = mn.create(!1, 500);
        }
        G.getFrustumList = function() {
          try {
            return G.frustumList;
          } catch {
            return null;
          }
        }, G.get_subDivisions = function() {
          return 32;
        };
        var Oc = {
          getIndexBuffer: function(t, e) {
            return this._indexBuffers[t];
          },
          isPointInTile: function(t, e) {
            return !1;
          },
          getSurfacePointAltitude: function(t, e, n) {
            return 0;
          },
          makeTexture: function() {
            if (G.prepDevice != null)
              try {
                if (this.texture2d = G.prepDevice.createTexture(), G.prepDevice.bindTexture(3553, this.texture2d), G.prepDevice.texParameteri(3553, 10242, 33071), G.prepDevice.texParameteri(3553, 10243, 33071), this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 && ti.useGlVersion2)
                  G.prepDevice.texImage2D(3553, 0, 33326, r.truncate(this.fitsImage.get_sizeX()), r.truncate(this.fitsImage.get_sizeY()), 0, 6403, 5126, this.fitsImage.dataUnit), G.prepDevice.texParameteri(3553, 10241, 9728), G.prepDevice.texParameteri(3553, 10240, 9728);
                else {
                  var t = this.texture;
                  if ((!di.isPowerOfTwo(this.texture.height) | !di.isPowerOfTwo(this.texture.width)) === 1) {
                    var e = document.createElement("canvas");
                    e.height = di.fitPowerOfTwo(t.height), e.width = di.fitPowerOfTwo(t.width);
                    var n = e.getContext("2d");
                    n.drawImage(t, 0, 0, e.width, e.height), t = e;
                  }
                  G.prepDevice.texImage2D(3553, 0, 6408, 6408, 5121, t), G.prepDevice.texParameteri(3553, 10241, 9985), G.prepDevice.generateMipmap(3553);
                }
                G.prepDevice.bindTexture(3553, null);
              } catch {
                this.errored = !0;
              }
          },
          addVertex: function(t, e, n) {
            return t[e++] = n.position.x, t[e++] = n.position.y, t[e++] = n.position.z, t[e++] = n.tu, t[e++] = n.tv, e;
          },
          geoTo3dWithAlt: function(t, e, n, a) {
            if (t = Math.max(Math.min(90, t), -90), e = Math.max(Math.min(180, e), -180), !G.demEnabled || this.demData == null)
              return this.geoTo3d(t, e, n);
            a && (e -= 180);
            var s = this.demData[this.demIndex], l = this.geoTo3dWithAltitude(t, e, s, n);
            return l;
          },
          geoTo3dWithAltitude: function(t, e, n, a) {
            var s = 1 + n / this.get__demScaleFactor(), l = $.create(Math.cos(e * G.RC) * Math.cos(t * G.RC) * s, Math.sin(t * G.RC) * s, Math.sin(e * G.RC) * Math.cos(t * G.RC) * s);
            return a && l.subtract(this.localCenter), l;
          },
          get__demScaleFactor: function() {
            return this._demScaleFactor;
          },
          set__demScaleFactor: function(t) {
            return this._demScaleFactor = t, t;
          },
          requestImage: function() {
            var t = this;
            if (this.dataset.get_extension().toLowerCase().indexOf("fits") > -1)
              !this.downloading && !this.readyToRender && (this.downloading = !0, ti.useGlVersion2 ? this.fitsImage = new jo(this.dataset, this.get_URL(), function(n) {
                t.downloading = !1, t.errored = t.fitsImage.errored, Ut.removeFromQueue(t.get_key(), !0), t.fitsImage.errored || (t.level || (t.dataset.get_fitsProperties()._fireMainImageLoaded(t.fitsImage), t.fitsImage.applyDisplaySettings()), t.texReady = !0, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1, t.makeTexture());
              }) : this.fitsImage = Kr.createTiledFits(this.dataset, this.get_URL(), function(n) {
                t.level || t.dataset.get_fitsProperties()._fireMainImageLoaded(t.fitsImage), t.texReady = !0, t.downloading = !1, t.errored = t.fitsImage.errored, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1, Ut.removeFromQueue(t.get_key(), !0), t.texture2d = n.getBitmap().getTexture();
              }));
            else {
              if (this.get_dataset().get_wcsImage() != null) {
                this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, Ut.removeFromQueue(this.get_key(), !0);
                return;
              }
              if (!this.downloading && !this.readyToRender) {
                this.downloading = !0, this.texture = document.createElement("img");
                var e = this.texture;
                this.texture.addEventListener("load", function(n) {
                  t.texReady = !0, t.downloading = !1, t.errored = !1, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1, Ut.removeFromQueue(t.get_key(), !0), t.makeTexture();
                }, !1), this.texture.addEventListener("error", function(n) {
                  if (!t.texture.hasAttribute("proxyattempt")) {
                    t.texture.setAttribute("proxyattempt", !0);
                    var a = ze.singleton.activateProxy(t.texture.src);
                    if (a != null) {
                      t.texture.src = a;
                      return;
                    }
                  }
                  t.downloading = !1, t.readyToRender = !1, t.errored = !0, t.requestPending = !1, Ut.removeFromQueue(t.get_key(), !0);
                }, !1), e.crossOrigin = "anonymous", this.texture.src = this.get_URL();
              }
            }
          },
          createDemFromParent: function() {
            return !1;
          },
          _loadDemData: function() {
            if (this.demFile == null)
              return this.createDemFromParent();
            if (this.demData = this.demFile, this.demFile.length !== 1089 && this.demFile.length !== 513)
              return this.createDemFromParent();
            for (var t = r.enumerate(this.demData); t.moveNext(); )
              t.current;
            return this.demAverage /= this.demData.length, !0;
          },
          requestDem: function() {
            var t = this;
            if (!this.readyToRender && !this.demDownloading) {
              this.demTile = !0, this.demDownloading = !0, G.callCount++;
              var e = new XMLHttpRequest();
              e.addEventListener("load", function(n) {
                t.demReady = !0, t.demDownloading = !1, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1;
                try {
                  t.demFile = new Float32Array(e.response);
                } catch {
                }
                Ut.removeFromQueue(t.get_key(), !0);
              }, !1), e.addEventListener("error", function(n) {
                t.demDownloading = !1, t.demReady = !1, t.readyToRender = !1, t.errored = !0, t.requestPending = !1, Ut.removeFromQueue(t.get_key(), !0);
              }, !1), e.open("GET", this.get_demURL(), !0), e.responseType = "arraybuffer", e.send();
            }
          },
          draw3D: function(t, e) {
            if (this.renderedGeneration = G.currentRenderGeneration, G.tilesTouched++, this.accessCount = Ut.accessID++, this.errored)
              return !1;
            var n = 2;
            if (this.inViewFrustum = !0, !this.readyToRender)
              return Ut.addTileToQueue(this), !1;
            var a = 0, s = 0;
            (this.dataset.get_mercator() || this.dataset.get_bottomsUp()) && (s = 1);
            for (var l = 0, g = !1, _ = !1, m = 0; m < 2; m++)
              for (var b = 0; b < n; b++)
                this.level < this.dataset.get_levels() ? (this.children[a] == null && (this.children[a] = Ut.getTile(this.level + 1, this.tileX * 2 + (b + l) % 2, this.tileY * 2 + (m + s) % 2, this.dataset, this)), this.children[a].isTileInFrustum(t.get_frustum()) ? (this.inViewFrustum = !0, this.children[a].isTileBigEnough(t) ? (this.renderChildPart[a].set_targetState(!this.children[a].draw3D(t, e)), this.renderChildPart[a].get_targetState() && (_ = !0)) : this.renderChildPart[a].set_targetState(!0)) : this.renderChildPart[a].set_targetState(this.renderChildPart[a].set_state(!1)), this.renderChildPart[a].get_targetState(), this.renderChildPart[a].get_state()) : this.renderChildPart[a].set_state(!0), this.renderChildPart[a].get_state() && (g = !0), a++;
            if ((_ || g) && (this.renderedAtOrBelowGeneration = G.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !g)
              return !0;
            if (!this.createGeometry(t))
              return !1;
            G.tilesInView++, this.accomidation = this._computeAccomidation();
            for (var y = 0; y < 4; y++)
              this.renderChildPart[y].get_targetState() && this.renderPart(t, y, e / 100, !1);
            return !0;
          },
          _computeAccomidation: function() {
            var t = 0;
            if (!G.useAccomidation)
              return 0;
            var e = Ut.getCachedTile(this.level, this.tileX, this.tileY + 1, this.dataset, this);
            (e == null || e.renderedAtOrBelowGeneration < G.currentRenderGeneration - 2) && (t += 1);
            var n = Ut.getCachedTile(this.level, this.tileX + 1, this.tileY, this.dataset, this);
            (n == null || n.renderedAtOrBelowGeneration < G.currentRenderGeneration - 2) && (t += 2);
            var a = Ut.getCachedTile(this.level, this.tileX, this.tileY - 1, this.dataset, this);
            (a == null || a.renderedAtOrBelowGeneration < G.currentRenderGeneration - 2) && (t += 4);
            var s = Ut.getCachedTile(this.level, this.tileX - 1, this.tileY, this.dataset, this);
            return (s == null || s.renderedAtOrBelowGeneration < G.currentRenderGeneration - 2) && (t += 8), t;
          },
          renderPart: function(t, e, n, a) {
            if (G.prepDevice == null)
              for (var s = t.lighting && t.get_sunPosition() != null, l = r.enumerate(this._renderTriangleLists[e]); l.moveNext(); ) {
                var g = l.current;
                if (g.opacity = n, s) {
                  var _ = g.normal.copy();
                  t.get_world().multiplyVector(_), _.normalize();
                  var m = $.dot(_, t.get_sunPosition());
                  m < 0 ? m = 0 : m = Math.min(1, m * 1), g.lighting = m;
                } else
                  g.lighting = 1;
                g.draw(t.device, t.WVP);
              }
            else
              ti.useGlVersion2 && this.fitsImage != null ? (Ce.bindColorMapTexture(G.prepDevice, this.dataset.get_fitsProperties().colorMapName), zt.min = this.dataset.get_fitsProperties().lowerCut, zt.max = this.dataset.get_fitsProperties().upperCut, zt.containsBlanks = this.dataset.get_fitsProperties().containsBlanks, zt.blankValue = this.dataset.get_fitsProperties().blankValue, zt.bZero = this.dataset.get_fitsProperties().bZero, zt.bScale = this.dataset.get_fitsProperties().bScale, zt.scaleType = this.dataset.get_fitsProperties().scaleType, zt.transparentBlack = this.dataset.get_fitsProperties().transparentBlack, zt.use(t, this._vertexBuffer, this.getIndexBuffer(e, this.accomidation), this.texture2d, n, !1, this.globalCenter)) : ne.use(t, this._vertexBuffer, this.getIndexBuffer(e, this.accomidation), this.texture2d, n, !1, this.globalCenter), t.gl.drawElements(4, this.triangleCount * 3, 5123, 0);
          },
          cleanUp: function(t) {
            if (this.readyToRender = !1, this.demData = null, this.demFile = null, this.demDownloading = !1, this.texReady = !1, this.demReady = !1, this.errored = !1, this.texture != null && (this.texture = null), this._renderTriangleLists = new Array(4), this.geometryCreated = !1, t && this.parent != null && (this.parent.removeChild(this), this.parent = null), G.prepDevice != null) {
              for (var e = r.enumerate(this._indexBuffers); e.moveNext(); ) {
                var n = e.current;
                G.prepDevice.deleteBuffer(n);
              }
              this._indexBuffers = new Array(4), this._vertexBuffer != null && (G.prepDevice.deleteBuffer(this._vertexBuffer), this._vertexBuffer = null), this.texture2d != null && (G.prepDevice.deleteTexture(this.texture2d), this.texture2d = null);
            }
          },
          removeChild: function(t) {
            for (var e = 0; e < 4; e++)
              if (this.children[e] === t) {
                this.children[e] = null;
                return;
              }
          },
          createGeometry: function(t) {
            return G.demEnabled && this.demReady && this.demData == null && !this._loadDemData() || G.demEnabled && this.demData == null ? !1 : (this.readyToRender = !0, !0);
          },
          calcSphere: function() {
            var t = new Array(4);
            t[0] = this.topLeft, t[1] = this.bottomRight, t[2] = this.topRight, t[3] = this.bottomLeft;
            var e = kn.findEnclosingSphere(t);
            this.sphereCenter = e.center, this.sphereRadius = e.radius;
          },
          isTileBigEnough: function(t) {
            if (this.level > 1) {
              var e = t.WVP;
              e._transformTo(this.topLeft, this._topLeftScreen), e._transformTo(this.bottomRight, this._bottomRightScreen), e._transformTo(this.topRight, this._topRightScreen), e._transformTo(this.bottomLeft, this._bottomLeftScreen);
              var n = this._topLeftScreen;
              n.subtract(this._topRightScreen);
              var a = n.length(), s = this._bottomLeftScreen;
              s.subtract(this._bottomRightScreen);
              var l = s.length(), g = this._bottomLeftScreen;
              g.subtract(this._topLeftScreen);
              var _ = g.length(), m = this._bottomRightScreen;
              m.subtract(this._topRightScreen);
              var b = m.length(), y = Math.max(Math.max(b, _), Math.max(l, a));
              if (y < 300)
                return !1;
              G.deepestLevel = this.level > G.deepestLevel ? this.level : G.deepestLevel;
            }
            return !0;
          },
          isTileInFrustum: function(t) {
            this.level < 2 && (!this.dataset.get_projection() || this.dataset.get_projection()), this.inViewFrustum = !1;
            for (var e = new Qa(this.sphereCenter.x, this.sphereCenter.y, this.sphereCenter.z, 1), n = 0; n < 6; n++)
              if (t[n].dot(e) < -this.sphereRadius)
                return !1;
            return this.inViewFrustum = !0, !0;
          },
          get_sphereRadius: function() {
            return this.sphereRadius;
          },
          get_sphereCenter: function() {
            return this.sphereCenter;
          },
          geoTo3d: function(t, e, n) {
            if (this.dataset.get_dataSetType() === 3) {
              var a = $.create(-(Math.cos(e * G.RC) * Math.cos(t * G.RC) * this.radius), Math.sin(t * G.RC) * this.radius, Math.sin(e * G.RC) * Math.cos(t * G.RC) * this.radius);
              return a;
            } else {
              e -= 180;
              var a = $.create(Math.cos(e * G.RC) * Math.cos(t * G.RC) * this.radius, Math.sin(t * G.RC) * this.radius, Math.sin(e * G.RC) * Math.cos(t * G.RC) * this.radius);
              return a;
            }
          },
          onCreateVertexBuffer: function(t, e) {
          },
          get_dataset: function() {
            return this.dataset;
          },
          set_dataset: function(t) {
            return this.dataset = t, t;
          },
          get_key: function() {
            return this._key == null && (this._key = Mi.getTileKey(this.dataset, this.level, this.tileX, this.tileY, this.parent)), this._key;
          },
          get_URL: function() {
            var t = ze.singleton.rewrite(this.dataset.get_url(), 0), e = t;
            if (t.indexOf("{1}") > -1)
              return !this.dataset.get_projection() && !r.emptyString(this.dataset.get_quadTreeTileMap()) ? (e = r.format(t, this.getServerID(), this.getTileID()), e.indexOf("virtualearth.net") > -1 && (e += "&n=z"), e) : r.format(t, this.dataset.get_imageSetID(), this.level, this.tileX, this.tileY);
            e = r.replaceString(e, "{X}", this.tileX.toString()), e = r.replaceString(e, "{Y}", this.tileY.toString()), e = r.replaceString(e, "{L}", this.level.toString());
            var n = 0;
            e.indexOf("{S:0}") > -1 && (n = 0, e = r.replaceString(e, "{S:0}", "{S}")), e.indexOf("{S:1}") > -1 && (n = 1, e = r.replaceString(e, "{S:1}", "{S}")), e.indexOf("{S:2}") > -1 && (n = 2, e = r.replaceString(e, "{S:2}", "{S}")), e.indexOf("{S:3}") > -1 && (n = 3, e = r.replaceString(e, "{S:3}", "{S}")), e.indexOf("a{S}") > -1 && (e = r.replaceString(e, "a{S}", "r{S}")), e.indexOf("h{S}") > -1 && (e = r.replaceString(e, "h{S}", "r{S}")), e.indexOf("//r{S}.ortho.tiles.virtualearth.net") > -1 && (e = r.replaceString(e, "//r{S}.ortho.tiles.virtualearth.net", "//ecn.t{S}.tiles.virtualearth.net"));
            var a = this.getTileID(), s = "";
            return a.length ? s = a.substr(a.length - 1, 1) : s = n.toString(), e = r.replaceString(e, "{Q}", a), e = r.replaceString(e, "{S}", s), e.indexOf("virtualearth.net") > -1 && (e += "&n=z"), e;
          },
          get_demURL: function() {
            var t = ze.singleton.rewrite(this.dataset.get_demUrl(), 0);
            if (!this.dataset.get_projection() && !Z.singleton.freestandingMode && (ze.singleton.coreStaticUrl("wwtweb/demtile.aspx?q={0},{1},{2},M"), r.emptyString(t)), t.indexOf("{1}") > -1)
              return r.format(t + "&new", this.level, this.tileX, this.tileY);
            var e = t;
            e = r.replaceString(e, "{X}", this.tileX.toString()), e = r.replaceString(e, "{Y}", this.tileY.toString()), e = r.replaceString(e, "{L}", this.level.toString());
            var n = 0;
            e.indexOf("{S:0}") > -1 && (n = 0, e = r.replaceString(e, "{S:0}", "{S}")), e.indexOf("{S:1}") > -1 && (n = 1, e = r.replaceString(e, "{S:1}", "{S}")), e.indexOf("{S:2}") > -1 && (n = 2, e = r.replaceString(e, "{S:2}", "{S}")), e.indexOf("{S:3}") > -1 && (n = 3, e = r.replaceString(e, "{S:3}", "{S}"));
            var a = this.getTileID(), s = "";
            return a.length ? s = a.substr(a.length - 1, 1) : s = n.toString(), e = r.replaceString(e, "{Q}", a), e = r.replaceString(e, "{S}", s), e;
          },
          getServerID: function() {
            var t = (this.tileX & 1) + ((this.tileY & 1) << 1);
            return t;
          },
          getTileID: function() {
            if (this._tileId != null)
              return this._tileId;
            var t = this.level, e = this.tileX, n = this.tileY;
            this.dataset.get_projection() === 1 && t++;
            var a = this.dataset.get_quadTreeTileMap();
            if (r.emptyString(a))
              return this._tileId = "0", this._tileId;
            for (var s = new r.StringBuilder(), l = t; l > 0; --l) {
              var g = 1 << l - 1, _ = 0;
              e & g && (_ = 1), n & g && (_ += 2), s.append(a.substr(_, 1));
            }
            return this._tileId = s.toString(), this._tileId;
          },
          get_vertexCount: function() {
            return this._vertexCount;
          },
          set_vertexCount: function(t) {
            return this._vertexCount = t, t;
          }
        };
        function Ut() {
        }
        Ut.get_queueCount = function() {
          return r.keyCount(Ut._queue);
        }, Ut.getTile = function(t, e, n, a, s) {
          var l = null, g = Mi.getTileKey(a, t, e, n, s);
          return r.keyExists(Ut._tiles, g) ? l = Ut._tiles[g] : (l = Mi.getNewTile(a, t, e, n, s), l != null && (Ut._tiles[g] = l)), l;
        }, Ut.getCachedTile = function(t, e, n, a, s) {
          if (t < a.get_baseLevel())
            return null;
          var l = null, g = Mi.getTileKey(a, t, e, n, s);
          try {
            if (r.keyExists(Ut._tiles, g))
              l = Ut._tiles[g];
            else
              return null;
          } catch {
          }
          return l;
        }, Ut.getReadyToRenderTileCount = function() {
          var t = [], e = [];
          try {
            try {
              for (var n = r.enumerate(r.keys(Ut._tiles)); n.moveNext(); ) {
                var a = n.current, s = Ut._tiles[a];
                s.renderedGeneration < G.currentRenderGeneration - 10 && !(s.requestPending || s.downloading) && (s.readyToRender ? e.push(s) : t.push(s));
              }
            } catch {
            }
            return e.length;
          } catch {
            return -1;
          }
        }, Ut.processQueue = function(t) {
          for (; r.keyCount(Ut._queue) > 0 && Ut.openThreads > 0; ) {
            for (var e = 1e5, n = !1, a = null, s = r.enumerate(r.keys(Ut._queue)); s.moveNext(); ) {
              var l = s.current, g = Ut._queue[l];
              if (!g.requestPending && g.inViewFrustum) {
                var _ = $.makeCopy(g.get_sphereCenter());
                _._transformByMatrics(t.get_world()), t.space ? _.subtract($.create(0, 0, -1)) : _.subtract(t.cameraPosition);
                var m = Math.max(0, _.length() - g.get_sphereRadius()), b = g.get_dataset().get_projection() === 2 || g.get_dataset().get_projection() === 5;
                m < e && (!n || b) && (e = m, a = g.get_key(), g.level, n = b);
              }
            }
            if (a != null) {
              var y = Ut._queue[a];
              y.requestPending = !0, Ut.openThreads--, Ut.openThreads < 0 && (Ut.openThreads = 0), y.requestImage(), y.get_dataset().get_elevationModel() && y.requestDem();
            } else
              return;
          }
        }, Ut.addTileToQueue = function(t) {
          var e;
          return e = 256, !t.downloading && !t.readyToRender && (r.keyExists(Ut._queue, t.get_key()) ? Ut._queue[t.get_key()].requestHits += e : (t.requestHits = e, Ut._queue[t.get_key()] = t)), !0;
        }, Ut.removeFromQueue = function(t, e) {
          if (e) {
            var n = Ut._queue[t];
            n != null && (n.requestPending = !1, delete Ut._queue[n.get_key()]), Ut.openThreads++;
          }
          delete Ut._queue[t];
        }, Ut.clearCache = function() {
          r.clearKeys(Ut._tiles);
        }, Ut.purgeQueue = function() {
          r.clearKeys(Ut._queue);
        }, Ut.purgeLRU = function() {
          if (!(r.keyCount(Ut._tiles) < Ut.maxReadyToRenderSize)) {
            var t = [], e = [];
            try {
              try {
                for (var n = r.enumerate(r.keys(Ut._tiles)); n.moveNext(); ) {
                  var a = n.current, s = Ut._tiles[a];
                  s.renderedGeneration < G.currentRenderGeneration - 10 && !(s.requestPending || s.downloading) && (s.readyToRender ? e.push(s) : t.push(s));
                }
              } catch {
              }
              if (Ut.readyToRenderCount = e.length, e.length > Ut.maxReadyToRenderSize) {
                e.sort(function(m, b) {
                  return b.accessCount < m.accessCount ? 1 : b.accessCount === m.accessCount ? 0 : -1;
                });
                for (var l = e.length - Ut.maxReadyToRenderSize, g = r.enumerate(e); g.moveNext(); ) {
                  var s = g.current;
                  if (l < 1)
                    break;
                  s.cleanUp(!1), l--;
                }
              }
              if (r.keyCount(Ut._tiles) < Ut.maxTileCacheSize)
                return;
              if (t.length > Ut.maxTileCacheSize) {
                t.sort(function(b, y) {
                  return y.accessCount < b.accessCount ? 1 : y.accessCount === b.accessCount ? 0 : -1;
                });
                var l = t.length - Ut.maxTileCacheSize;
                l > 20 && (l = 20);
                for (var _ = r.enumerate(t); _.moveNext(); ) {
                  var s = _.current;
                  if (l < 1)
                    break;
                  s.cleanUp(!0), delete Ut._tiles[s.get_key()], l--;
                }
              }
            } catch {
            } finally {
            }
          }
        }, Ut.decimateQueue = function() {
          for (var t = [], e = r.enumerate(r.keys(Ut._queue)); e.moveNext(); ) {
            var n = e.current, a = Ut._queue[n];
            if (!a.requestPending) {
              a.requestHits = a.requestHits / 2;
              try {
                a.requestHits < 2 ? t.push(a) : a.inViewFrustum || t.push(a);
              } catch {
              }
            }
          }
          for (var s = r.enumerate(t); s.moveNext(); ) {
            var a = s.current;
            delete Ut._queue[a.get_key()];
          }
        };
        var Vc = {};
        function wn() {
        }
        wn.lineToPoint = function(t, e, n) {
          var a = $.subtractVectors(e, t), s = $.subtractVectors(n, t), l = $.cross(s, a).length() / a.length();
          return l;
        }, wn.getUVFromInnerPoint = function(t, e, n, a, s) {
          t.normalize(), e.normalize(), n.normalize(), a.normalize(), s.normalize();
          var l = wn.lineToPoint(t, e, s), g = wn.lineToPoint(n, a, s), _ = l + g, m = wn.lineToPoint(e, a, s), b = wn.lineToPoint(t, n, s), y = m + b;
          return Mt.create(b / y, l / _);
        };
        var Uc = {};
        function Da() {
          this.userLevel = 0, this.classification = 0, this.averageRating = 0, this.lengthInSecs = 0, this._thumbnailUrlField = "";
        }
        Da._fromXml = function(t) {
          var e = new Da();
          return t.attributes.getNamedItem("ID") != null && (e.id = t.attributes.getNamedItem("ID").nodeValue), t.attributes.getNamedItem("TourUrl") != null && (e._tourUrl = t.attributes.getNamedItem("TourUrl").nodeValue), t.attributes.getNamedItem("Title") != null && (e.title = t.attributes.getNamedItem("Title").nodeValue), t.attributes.getNamedItem("Description") != null && (e.description = t.attributes.getNamedItem("Description").nodeValue), t.attributes.getNamedItem("Classification") != null && (e.classification = we.parse("Classification", t.attributes.getNamedItem("Classification").nodeValue)), t.attributes.getNamedItem("AuthorEmail") != null && (e.authorEmail = t.attributes.getNamedItem("AuthorEmail").nodeValue), t.attributes.getNamedItem("Author") != null && (e.author = t.attributes.getNamedItem("Author").nodeValue), t.attributes.getNamedItem("AuthorURL") != null && (e.authorURL = t.attributes.getNamedItem("AuthorURL").nodeValue), t.attributes.getNamedItem("AuthorImageUrl") != null && (e.authorImageUrl = t.attributes.getNamedItem("AuthorImageUrl").nodeValue), t.attributes.getNamedItem("AverageRating") != null && (e.averageRating = parseFloat(t.attributes.getNamedItem("AverageRating").nodeValue)), t.attributes.getNamedItem("LengthInSecs") != null && (e.lengthInSecs = parseFloat(t.attributes.getNamedItem("LengthInSecs").nodeValue)), t.attributes.getNamedItem("OrganizationUrl") != null && (e.organizationUrl = t.attributes.getNamedItem("OrganizationUrl").nodeValue), t.attributes.getNamedItem("OrganizationName") != null && (e.organizationName = t.attributes.getNamedItem("OrganizationName").nodeValue), t.attributes.getNamedItem("RelatedTours") != null && (e.relatedTours = t.attributes.getNamedItem("RelatedTours").nodeValue), t.attributes.getNamedItem("Keywords") != null && (e.keywords = t.attributes.getNamedItem("Keywords").nodeValue), t.attributes.getNamedItem("ThumbnailUrl") != null && e.set_thumbnailUrl(t.attributes.getNamedItem("ThumbnailUrl").nodeValue), e;
        };
        var Hc = {
          get_name: function() {
            return this.title;
          },
          get_thumbnail: function() {
            return this._thumbnail;
          },
          set_thumbnail: function(t) {
            return this._thumbnail = t, t;
          },
          get_thumbnailUrl: function() {
            if (r.emptyString(this._thumbnailUrlField)) {
              if (Z.singleton.freestandingMode)
                return ze.singleton.engineAssetUrl("thumb_star.jpg");
            } else
              return this._thumbnailUrlField;
            return r.format(ze.singleton.coreStaticUrl("wwtweb/GetTourThumbnail.aspx?GUID={0}"), this.id);
          },
          set_thumbnailUrl: function(t) {
            return this._thumbnailUrlField = t, t;
          },
          get_tourUrl: function() {
            return r.emptyString(this._tourUrl) && !Z.singleton.freestandingMode ? r.format(ze.singleton.coreStaticUrl("wwtweb/GetTour.aspx?GUID={0}"), this.id) : this._tourUrl;
          },
          set_tourUrl: function(t) {
            return this._tourUrl = t, t;
          },
          get_bounds: function() {
            return this._bounds;
          },
          set_bounds: function(t) {
            return this._bounds = t, t;
          },
          get_isImage: function() {
            return !1;
          },
          get_isTour: function() {
            return !0;
          },
          get_isFolder: function() {
            return !1;
          },
          get_isCloudCommunityItem: function() {
            return !1;
          },
          get_readOnly: function() {
            return !1;
          },
          get_children: function() {
            return [];
          }
        };
        function Us(t, e) {
          this.size = 0, this.offset = 0, this.filename = t, this.size = e;
        }
        var Gc = {
          toString: function() {
            return this.filename;
          }
        };
        function pa() {
          this.tempDirectory = "", this._currentOffset = 0, this._packageID = "", this.url = "", this.clearFileList();
        }
        pa.fromUrl = function(t, e) {
          var n = new pa();
          return n.url = t, n._callMe = e, n._webFile = new _r(t), n._webFile.responseType = "blob", n._webFile.onStateChange = r.bind("_loadCabinet", n), n._webFile.send(), n;
        };
        var qc = {
          get_packageID: function() {
            return this._packageID;
          },
          set_packageID: function(t) {
            return this._packageID = t, t;
          },
          addFile: function(t, e) {
            if (e != null && !r.keyExists(this._fileDirectory, t)) {
              var n = new Us(t, e.size);
              n.offset = this._currentOffset, n.blob = e, this.fileList.push(n), this._fileDirectory[t] = n, this._currentOffset += n.size;
            }
          },
          clearFileList: function() {
            this.fileList == null && (this.fileList = []), this._fileDirectory == null && (this._fileDirectory = {}), this.fileList.length = 0, r.clearKeys(this._fileDirectory), this._currentOffset = 0;
          },
          packageFiles: function() {
            var t = new ra();
            t.formatting = 1, t._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), t._writeStartElement("FileCabinet"), t._writeAttributeString("HeaderSize", "0x0BADFOOD"), t._writeStartElement("Files");
            for (var e = r.enumerate(this.fileList); e.moveNext(); ) {
              var n = e.current;
              t._writeStartElement("File"), t._writeAttributeString("Name", n.filename), t._writeAttributeString("Size", n.size.toString()), t._writeAttributeString("Offset", n.offset.toString()), t._writeEndElement();
            }
            t._writeEndElement(), t._writeFullEndElement(), t._close();
            var a = t.body, s = new Blob([a]), l = r.format("0x{0:x8}", s.size);
            a = r.replaceString(a, "0x0BADFOOD", l), s = new Blob([a]);
            var g = [];
            g.push(s);
            for (var _ = r.enumerate(this.fileList); _.moveNext(); ) {
              var n = _.current;
              g.push(n.blob);
            }
            var m = new Blob(g, { type: "application/x-wtt" });
            return m;
          },
          _loadCabinet: function() {
            var t = this;
            if (this._webFile.get_state() === 2)
              alert(this._webFile.get_message());
            else if (this._webFile.get_state() === 1) {
              this._mainBlob = this._webFile.getBlob();
              var e = new FileReader();
              e.onloadend = function(n) {
                var a = t._getSize(e.result), s = new FileReader();
                s.onloadend = function(l) {
                  var g = r.safeCast(s.result, String), _ = new DOMParser();
                  t.extract(_.parseFromString(g, "text/xml"), a), t._callMe();
                }, s.readAsText(t._mainBlob.slice(0, a));
              }, e.readAsText(this._mainBlob.slice(0, 255));
            }
          },
          _getSize: function(t) {
            var e = t.indexOf("0x");
            return e === -1 ? 0 : parseInt(t.substring(e, e + 10), 16);
          },
          extract: function(t, e) {
            try {
              var n = xt.selectSingleNode(t, "FileCabinet"), a = xt.selectSingleNode(n, "Files");
              this.fileList.length = 0;
              for (var s = r.enumerate(a.childNodes); s.moveNext(); ) {
                var l = s.current;
                if (l.nodeName === "File") {
                  var g = new Us(l.attributes.getNamedItem("Name").nodeValue, parseInt(l.attributes.getNamedItem("Size").nodeValue));
                  g.offset = e, e += g.size, this.fileList.push(g);
                }
              }
            } catch {
            }
          },
          getFileBlob: function(t) {
            var e = this.getFileEntry(t);
            if (e != null) {
              var n = t.substr(t.lastIndexOf(".")).toLowerCase(), a = null;
              switch (n) {
                case ".png":
                  a = "image/png";
                  break;
                case ".jpg":
                case ".jpeg":
                  a = "image/jpeg";
                  break;
                case ".mp3":
                  a = "audio/mpeg3";
                  break;
                case ".txt":
                  a = "text/plain";
                  break;
                case ".fit":
                case ".fits":
                  a = "application/octet-stream";
                  break;
              }
              return this._mainBlob.slice(e.offset, e.offset + e.size, a);
            }
            return null;
          },
          getFileEntry: function(t) {
            for (var e = r.enumerate(this.fileList); e.moveNext(); ) {
              var n = e.current;
              if (n.filename === t)
                return n;
            }
            return null;
          },
          get_masterFile: function() {
            return this.fileList.length > 0 ? this.fileList[0].filename : null;
          },
          clearTempFiles: function() {
            for (var t = r.enumerate(this.fileList); t.moveNext(); )
              t.current;
          }
        };
        function Na(t, e, n, a) {
          this.targetState = !1, this.edgeTrigger = !1, this.opacity = 0, this.edgeTrigger = t, this.opacity = e, this.targetState = n, this.filter = a;
        }
        var Xc = {};
        function gi() {
          this.isDynamic = !1, this.isDesignTimeOnly = !1, this._name = "", this.id = (gi.nextId++).toString(), this._owner = null, this._url = "", this._linkID = "", this._domeMatrix = tt.get_identity(), this._domeMatX = 0, this._domeMatY = 0, this._domeAngle = 0, this.points = null, this._animate = !1, this._tweenFactor = 0, this._endX = 0, this._endY = 0, this._endOpacity = 0, this._endColor = new j(), this._endWidth = 0, this._endHeight = 0, this._endRotationAngle = 0, this._anchor = 1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._color = Pt.get_white(), this._opacity = 0.5, this._rotationAngle = 0, this.currentRotation = 0, this.texture = null, this.texture2d = null, this._interpolationType = 5;
        }
        gi._fromXml = function(t, e) {
          if (e.attributes == null || e.attributes.getNamedItem("Type") == null)
            return null;
          var n = e.attributes.getNamedItem("Type").nodeValue, a = r.replaceString(n, "TerraViewer.", ""), s = null;
          switch (a) {
            case "AudioOverlay":
              s = new Oa();
              break;
            case "BitmapOverlay":
              s = new na();
              break;
            case "FlipBookOverlay":
              s = new ba();
              break;
            case "ShapeOverlay":
              s = new aa();
              break;
            case "TextOverlay":
              s = new Zr();
              break;
            default:
              return null;
          }
          return s._owner = t, s._initOverlayFromXml(e), s;
        };
        var Yc = {
          get_name: function() {
            return this._name;
          },
          set_name: function(t) {
            return this._name = t, t;
          },
          get_owner: function() {
            return this._owner;
          },
          set_owner: function(t) {
            return this._owner = t, t;
          },
          get_zOrder: function() {
            for (var t = 0, e = r.enumerate(this._owner.get_overlays()); e.moveNext(); ) {
              var n = e.current;
              if (n === this)
                break;
              t++;
            }
            return t;
          },
          get_url: function() {
            return this._url;
          },
          set_url: function(t) {
            return this._url = t, t;
          },
          get_linkID: function() {
            return this._linkID;
          },
          set_linkID: function(t) {
            return this._linkID = t, t;
          },
          play: function() {
          },
          pause: function() {
          },
          stop: function() {
          },
          seek: function(t) {
          },
          makePosition: function(t, e, n, a, s) {
            t -= 960, e -= 558;
            var l = $.create(t + n, e + a, 1347);
            return (this._domeMatX || this._domeMatY || this._domeAngle !== s) && (this._domeMatX = t, this._domeMatY = e, this._domeMatrix = tt.translation($.create(-t, -e, 0)), this._domeMatrix._multiply(tt._rotationZ(s / 180 * Math.PI)), this._domeMatrix._multiply(tt.translation($.create(t, e, 0)))), l = $._transformCoordinate(l, this._domeMatrix), l;
          },
          draw3D: function(t, e) {
            ti.useGl && ((this.texture == null || this.isDynamic) && this.initializeTexture(), (!this.isDesignTimeOnly || e) && (this.initializeGeometry(), this.updateRotation()));
          },
          cleanUp: function() {
            this.texture != null && (this.texture = null), this.texture2d = null;
          },
          initializeTexture: function() {
          },
          prepMultimedia: function() {
          },
          cleanUpGeometry: function() {
            this.currentRotation = 0, this.points = null;
          },
          initializeGeometry: function() {
            this.points == null && (this.currentRotation = 0, this.points = new Array(4), this.points[0] = new Ye(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new Ye(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new Ye(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new Ye(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 1, this.points[3].color = this.get_color());
          },
          updateRotation: function() {
          },
          get_animate: function() {
            return this._animate;
          },
          set_animate: function(t) {
            return this._animate !== t && (this._animate = t, this._animate ? (this._endX = this._x, this._endY = this._y, this._endRotationAngle = this._rotationAngle, this._endColor = this._color, this._endWidth = this._width, this._endHeight = this._height, this.cleanUpGeometry()) : (this._endX = this._x = this.get_x(), this._endY = this._y = this.get_y(), this._endRotationAngle = this._rotationAngle = this.get_rotationAngle(), this._endColor = this._color = this.get_color(), this._endWidth = this._width = this.get_width(), this._endHeight = this._height = this.get_height(), this.cleanUpGeometry(), this._tweenFactor = 0)), t;
          },
          get_tweenFactor: function() {
            return this._tweenFactor;
          },
          set_tweenFactor: function(t) {
            return this._animate ? this._tweenFactor !== t && (this._tweenFactor = t, this.cleanUpGeometry()) : this._tweenFactor = 0, t;
          },
          get_anchor: function() {
            return this._anchor;
          },
          set_anchor: function(t) {
            return this._anchor = t, t;
          },
          get_position: function() {
            return Mt.create(this.get_x(), this.get_y());
          },
          set_position: function(t) {
            return this.set_x(t.x), this.set_y(t.y), t;
          },
          get_x: function() {
            return this._x * (1 - this._tweenFactor) + this._endX * this._tweenFactor;
          },
          set_x: function(t) {
            return this._tweenFactor < 0.5 ? this._x !== t && (this._x = t, this.cleanUpGeometry()) : this._endX !== t && (this._endX = t, this.cleanUpGeometry()), t;
          },
          get_y: function() {
            return this._y * (1 - this._tweenFactor) + this._endY * this._tweenFactor;
          },
          set_y: function(t) {
            return this._tweenFactor < 0.5 ? this._y !== t && (this._y = t, this.cleanUpGeometry()) : this._endY !== t && (this._endY = t, this.cleanUpGeometry()), t;
          },
          get_width: function() {
            return this._width * (1 - this._tweenFactor) + this._endWidth * this._tweenFactor;
          },
          set_width: function(t) {
            return t < 5 && t && (t = 5), this._tweenFactor < 0.5 ? this._width !== t && (this._width = t, this.cleanUpGeometry()) : this._endWidth !== t && (this._endWidth = t, this.cleanUpGeometry()), t;
          },
          get_height: function() {
            return this._height * (1 - this._tweenFactor) + this._endHeight * this._tweenFactor;
          },
          set_height: function(t) {
            return t < 5 && t && (t = 5), this._tweenFactor < 0.5 ? this._height !== t && (this._height = t, this.cleanUpGeometry()) : this._endHeight !== t && (this._endHeight = t, this.cleanUpGeometry()), t;
          },
          get_color: function() {
            var t = r.truncate(this._color.r * (1 - this._tweenFactor) + this._endColor.r * this._tweenFactor), e = r.truncate(this._color.g * (1 - this._tweenFactor) + this._endColor.g * this._tweenFactor), n = r.truncate(this._color.b * (1 - this._tweenFactor) + this._endColor.b * this._tweenFactor), a = r.truncate(this._color.a * (1 - this._tweenFactor) + this._endColor.a * this._tweenFactor);
            return j.fromArgb(Math.max(0, Math.min(255, a)), Math.max(0, Math.min(255, t)), Math.max(0, Math.min(255, e)), Math.max(0, Math.min(255, n)));
          },
          set_color: function(t) {
            return this._tweenFactor < 0.5 ? this._color !== t && (this._color = t, this.cleanUpGeometry()) : this._endColor !== t && (this._endColor = t, this.cleanUpGeometry()), t;
          },
          get_opacity: function() {
            return this.get_color().a / 255;
          },
          set_opacity: function(t) {
            var e = this.get_color();
            return this.set_color(j.fromArgb(Math.min(255, r.truncate(t * 255)), e.r, e.g, e.b)), this._opacity = t, t;
          },
          get_rotationAngle: function() {
            return this._rotationAngle * (1 - this._tweenFactor) + this._endRotationAngle * this._tweenFactor;
          },
          set_rotationAngle: function(t) {
            return this._tweenFactor < 0.5 ? this._rotationAngle !== t && (this._rotationAngle = t, this.cleanUpGeometry()) : this._endRotationAngle !== t && (this._endRotationAngle = t, this.cleanUpGeometry()), t;
          },
          hitTest: function(t) {
            var e = new Array(1);
            e[0] = Mt.create(t.x, t.y);
            var n = Ti.rotateAt(-this.get_rotationAngle() / 180 * Math.PI, Mt.create(this.get_x(), this.get_y()));
            n._transformPoints(e);
            var a = Ji.create(this.get_x() - this.get_width() / 2, this.get_y() - this.get_height() / 2, this.get_width(), this.get_height());
            return a.contains(e[0]);
          },
          get_bounds: function() {
            return this._bounds;
          },
          set_bounds: function(t) {
            return this._bounds = t, t;
          },
          get_interpolationType: function() {
            return this._interpolationType;
          },
          set_interpolationType: function(t) {
            return this._interpolationType = t, t;
          },
          saveToXml: function(t, e) {
            t._writeStartElement("Overlay"), t._writeAttributeString("Id", this.id), t._writeAttributeString("Type", this.getTypeName()), t._writeAttributeString("Name", this.get_name()), t._writeAttributeString("X", this._x.toString()), t._writeAttributeString("Y", this._y.toString()), t._writeAttributeString("Width", this._width.toString()), t._writeAttributeString("Height", this._height.toString()), t._writeAttributeString("Rotation", this._rotationAngle.toString()), t._writeAttributeString("Color", this._color.save()), t._writeAttributeString("Url", this._url), t._writeAttributeString("LinkID", this._linkID), t._writeAttributeString("Animate", this._animate.toString()), this._animate && (t._writeAttributeString("EndX", this._endX.toString()), t._writeAttributeString("EndY", this._endY.toString()), t._writeAttributeString("EndWidth", this._endWidth.toString()), t._writeAttributeString("EndHeight", this._endHeight.toString()), t._writeAttributeString("EndRotation", this._endRotationAngle.toString()), t._writeAttributeString("EndColor", this._endColor.save()), t._writeAttributeString("InterpolationType", we.toXml("InterpolationType", this._interpolationType))), t._writeAttributeString("Anchor", we.toXml("OverlayAnchor", this._anchor)), this.writeOverlayProperties(t), t._writeEndElement();
          },
          getTypeName: function() {
            return "TerraViewer.Overlay";
          },
          addFilesToCabinet: function(t) {
          },
          writeOverlayProperties: function(t) {
          },
          _initOverlayFromXml: function(t) {
            this.id = t.attributes.getNamedItem("Id").nodeValue, this.set_name(t.attributes.getNamedItem("Name").nodeValue), this._x = parseFloat(t.attributes.getNamedItem("X").nodeValue), this._y = parseFloat(t.attributes.getNamedItem("Y").nodeValue), this._width = parseFloat(t.attributes.getNamedItem("Width").nodeValue), this._height = parseFloat(t.attributes.getNamedItem("Height").nodeValue), this._rotationAngle = parseFloat(t.attributes.getNamedItem("Rotation").nodeValue), this._color = j.load(t.attributes.getNamedItem("Color").nodeValue), t.attributes.getNamedItem("Url") != null && this.set_url(t.attributes.getNamedItem("Url").nodeValue), t.attributes.getNamedItem("LinkID") != null && this.set_linkID(t.attributes.getNamedItem("LinkID").nodeValue), t.attributes.getNamedItem("Animate") != null && (this._animate = r.boolean(t.attributes.getNamedItem("Animate").nodeValue), this._animate && (this._endX = parseFloat(t.attributes.getNamedItem("EndX").nodeValue), this._endY = parseFloat(t.attributes.getNamedItem("EndY").nodeValue), this._endColor = j.load(t.attributes.getNamedItem("EndColor").nodeValue), this._endWidth = parseFloat(t.attributes.getNamedItem("EndWidth").nodeValue), this._endHeight = parseFloat(t.attributes.getNamedItem("EndHeight").nodeValue), this._endRotationAngle = parseFloat(t.attributes.getNamedItem("EndRotation").nodeValue), t.attributes.getNamedItem("InterpolationType") != null && this.set_interpolationType(we.parse("InterpolationType", t.attributes.getNamedItem("InterpolationType").nodeValue)))), this.initializeFromXml(t);
          },
          initializeFromXml: function(t) {
          },
          toString: function() {
            return this.get_name();
          }
        };
        function mi() {
          this._singleSelectHandles = null, this._multiSelectHandles = null, this._focusHandles = null, this.selectionSet = [], this._focus = null, this._ratio = 1, this._sprite = new Kn(), this._centerX = 0, this._centerY = 0;
        }
        var jc = {
          clearSelection: function() {
            this.selectionSet.length = 0;
          },
          addSelection: function(t) {
            t != null && (this.selectionSet.indexOf(t) >= 0 || this.selectionSet.push(t));
          },
          addSelectionRange: function(t) {
            for (var e = r.enumerate(t); e.moveNext(); ) {
              var n = e.current;
              this.selectionSet.push(n);
            }
          },
          isOverlaySelected: function(t) {
            return this.selectionSet.indexOf(t) >= 0;
          },
          setSelection: function(t) {
            this.selectionSet.length = 0, t != null && this.selectionSet.push(t);
          },
          get_multiSelect: function() {
            return this.selectionSet.length > 1;
          },
          setSelectionRange: function(t) {
            this.selectionSet.length = 0;
            for (var e = r.enumerate(t); e.moveNext(); ) {
              var n = e.current;
              this.selectionSet.push(n);
            }
          },
          get_focus: function() {
            return this._focus;
          },
          set_focus: function(t) {
            return this._focus = t, t;
          },
          draw3D: function(t, e) {
            if (this._ratio = 1116 / t.height, this._singleSelectHandles == null && (this._singleSelectHandles = di.fromUrl("images/Selhand.bmp")), this._multiSelectHandles == null && (this._multiSelectHandles = di.fromUrl("images/multiSelhand.bmp")), this._focusHandles == null && (this._focusHandles = di.fromUrl("images/FocusHandles.png")), this.selectionSet.length > 1)
              for (var n = r.enumerate(this.selectionSet); n.moveNext(); ) {
                var a = n.current;
                a === this._focus ? this._drawSelectionHandles(t, a, this._focusHandles) : this._drawSelectionHandles(t, a, this._multiSelectHandles);
              }
            else
              for (var s = r.enumerate(this.selectionSet); s.moveNext(); ) {
                var a = s.current;
                this._drawSelectionHandles(t, a, this._singleSelectHandles);
              }
          },
          _drawSelectionHandles: function(t, e, n) {
            for (var a = this.makeHandles(e), s = e.get_rotationAngle(), l = 0, g = 0, _ = r.enumerate(a); _.moveNext(); ) {
              var m = _.current;
              mi._points[l + 0] = new Ye(), mi._points[l + 0].position = e.makePosition(this._centerX, this._centerY, m.get_left() - this._centerX, m.get_top() - this._centerY, s), mi._points[l + 0].tu = g * (1 / 9), mi._points[l + 0].tv = 0, mi._points[l + 0].color = Pt.get_white(), mi._points[l + 1] = new Ye(), mi._points[l + 1].position = e.makePosition(this._centerX, this._centerY, m.get_right() - this._centerX, m.get_top() - this._centerY, s), mi._points[l + 1].tu = (g + 1) * (1 / 9), mi._points[l + 1].tv = 0, mi._points[l + 1].color = Pt.get_white(), mi._points[l + 2] = new Ye(), mi._points[l + 2].position = e.makePosition(this._centerX, this._centerY, m.get_left() - this._centerX, m.get_bottom() - this._centerY, s), mi._points[l + 2].tu = g * (1 / 9), mi._points[l + 2].tv = 1, mi._points[l + 2].color = Pt.get_white(), mi._points[l + 3] = new Ye(), mi._points[l + 3].position = e.makePosition(this._centerX, this._centerY, m.get_right() - this._centerX, m.get_top() - this._centerY, s), mi._points[l + 3].tu = (g + 1) * (1 / 9), mi._points[l + 3].tv = 0, mi._points[l + 3].color = Pt.get_white(), mi._points[l + 4] = new Ye(), mi._points[l + 4].position = e.makePosition(this._centerX, this._centerY, m.get_right() - this._centerX, m.get_bottom() - this._centerY, s), mi._points[l + 4].tu = (g + 1) * (1 / 9), mi._points[l + 4].tv = 1, mi._points[l + 4].color = Pt.get_white(), mi._points[l + 5] = new Ye(), mi._points[l + 5].position = e.makePosition(this._centerX, this._centerY, m.get_left() - this._centerX, m.get_bottom() - this._centerY, s), mi._points[l + 5].tu = g * (1 / 9), mi._points[l + 5].tv = 1, mi._points[l + 5].color = Pt.get_white(), l += 6, g++;
            }
            this.get_multiSelect() ? this._sprite.draw(t, mi._points, mi._points.length - 6, n, !1, 1) : this._sprite.draw(t, mi._points, mi._points.length, n, !1, 1);
          },
          pointToSelectionSpace: function(t) {
            var e = new Array(1);
            e[0] = Mt.create(t.x, t.y);
            var n = Ti.rotateAt(-this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, Mt.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
            return n._transformPoints(e), e[0];
          },
          pointToScreenSpace: function(t) {
            var e = new Array(1);
            e[0] = Mt.create(t.x, t.y);
            var n = Ti.rotateAt(this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, Mt.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
            return n._transformPoints(e), e[0];
          },
          hitTest: function(t) {
            if (this.selectionSet.length === 1)
              for (var e = r.enumerate(this.selectionSet); e.moveNext(); )
                for (var n = e.current, a = this.makeHandles(n), s = 0, l = this.pointToSelectionSpace(t), g = r.enumerate(a); g.moveNext(); ) {
                  var _ = g.current;
                  if (_.contains(l))
                    return s;
                  s++;
                }
            return 11;
          },
          makeHandles: function(t) {
            var e = r.truncate(t.get_x() - t.get_width() / 2) + 0.5, n = r.truncate(t.get_y()) - t.get_height() / 2 + 0.5;
            this._centerX = t.get_x(), this._centerY = t.get_y();
            var a = t.get_width(), s = t.get_height(), l = 12 * this._ratio, g = new Array(9);
            return g[0] = Ji.create(e - l, n - l, l, l), g[1] = Ji.create(e + a / 2 - l / 2, n - l, l, l), g[2] = Ji.create(e + a, n - l, l, l), g[3] = Ji.create(e + a, n + s / 2 - l / 2, l, l), g[4] = Ji.create(e + a, n + s, l, l), g[5] = Ji.create(e + a / 2 - l / 2, n + s, l, l), g[6] = Ji.create(e - l, n + s, l, l), g[7] = Ji.create(e - l, n + s / 2 - l / 2, l, l), g[8] = Ji.create(e + a / 2 - l / 2, n - 30 * this._ratio, l, l), g;
          }
        };
        function Rn() {
          this.bold = !1, this.italic = !1, this.underline = !1, this.fontSize = 0, this.borderStyle = 0;
        }
        Rn.create = function(t, e, n, a, s, l, g, _, m) {
          var b = new Rn();
          return b.text = t, b.bold = e, b.italic = n, b.underline = a, b.fontSize = s, b.fontName = l, b.foregroundColor = g, b.backgroundColor = _, b.borderStyle = m, b;
        }, Rn._fromXml = function(t) {
          var e = new Rn();
          return e.text = xt.getInnerText(t), e.borderStyle = 0, e.bold = r.boolean(t.attributes.getNamedItem("Bold").nodeValue), e.italic = r.boolean(t.attributes.getNamedItem("Italic").nodeValue), e.underline = r.boolean(t.attributes.getNamedItem("Underline").nodeValue), e.fontSize = parseFloat(t.attributes.getNamedItem("FontSize").nodeValue), e.fontName = t.attributes.getNamedItem("FontName").nodeValue, e.foregroundColor = j.load(t.attributes.getNamedItem("ForgroundColor").nodeValue), e.backgroundColor = j.load(t.attributes.getNamedItem("BackgroundColor").nodeValue), t.attributes.getNamedItem("BorderStyle") != null && (e.borderStyle = we.parse("TextBorderStyle", t.attributes.getNamedItem("BorderStyle").nodeValue)), e;
        };
        var Zc = {
          toString: function() {
            return this.text;
          },
          _saveToXml: function(t) {
            t._writeStartElement("TextObject"), t._writeAttributeString("Bold", this.bold.toString()), t._writeAttributeString("Italic", this.italic.toString()), t._writeAttributeString("Underline", this.underline.toString()), t._writeAttributeString("FontSize", this.fontSize.toString()), t._writeAttributeString("FontName", this.fontName), t._writeAttributeString("ForgroundColor", this.foregroundColor.save()), t._writeAttributeString("BackgroundColor", this.backgroundColor.save()), t._writeAttributeString("BorderStyle", we.toXml("TextBorderStyle", this.borderStyle)), t._writeString(this.text), t._writeEndElement();
          }
        };
        function jr() {
          this._tourDirty = 0, this._workingDirectory = "", this.url = "", this._tagId = "", this._representativeThumbnailTourstop = 0, this._id = "", this._title = "", this._runTime = 0, this._lastDirtyCheck = 0, this._description = "", this._attributesAndCredits = "", this._authorEmailOther = "", this._authorEmail = "", this._authorUrl = "", this._authorPhone = "", this._authorContactText = "", this._orgName = "None", this._orgUrl = "", this._author = "", this._authorImageUrl = "", this._authorImage = null, this._organizationUrl = "", this._filename = "", this._level = 0, this._type = 268435456, this._taxonomy = "", this._keywords = "", this._objects = "", this._editMode = !1, this.explicitTourLinks = [], this.implicitTourLinks = [], this._tourStops = [], this._currentTourstopIndex = -1, this._textureList = {}, this._textureList2d = {}, this._fileCache = {}, this.dontCleanUpTempFiles = !1, this._id = er.newGuid().toString();
        }
        jr.get_baseWorkingDirectory = function() {
          return "";
        }, jr.fromUrl = function(t, e) {
          var n = new jr();
          return n.url = t, n._callMe = e, n._cabinet = pa.fromUrl(t, r.bind("_loadXmlDocument", n)), n;
        }, jr.fromUrlRaw = function(t, e) {
          var n = new jr();
          return n.url = t, n._callMe = e, n._cabinet = pa.fromUrl(t, e), n;
        };
        var Kc = {
          get_tourDirty: function() {
            return this._tourDirty > 0;
          },
          set_tourDirty: function(t) {
            return t ? this._tourDirty++ : this._tourDirty = 0, t;
          },
          get_workingDirectory: function() {
            return r.emptyString(this._workingDirectory) && (this._workingDirectory = jr.get_baseWorkingDirectory() + this._id + "\\"), this._workingDirectory;
          },
          set_workingDirectory: function(t) {
            return this._workingDirectory = t, t;
          },
          _loadXmlDocument: function() {
            var t = this;
            try {
              var e = this._cabinet.get_masterFile(), n = new FileReader();
              n.onloadend = function(a) {
                var s = r.safeCast(n.result, String), l = new DOMParser();
                t.fromXml(l.parseFromString(s, "text/xml")), t._callMe();
              }, n.readAsText(this._cabinet.getFileBlob(e));
            } catch (a) {
              Z.scriptInterface._fireTourError(a);
            }
          },
          fromXml: function(t) {
            var e = xt.selectSingleNode(t, "Tour");
            this._id = e.attributes.getNamedItem("ID").nodeValue, this.set_title(e.attributes.getNamedItem("Title").nodeValue), this.set_author(e.attributes.getNamedItem("Author").nodeValue), e.attributes.getNamedItem("Descirption") != null && this.set_description(e.attributes.getNamedItem("Descirption").nodeValue), e.attributes.getNamedItem("AuthorEmail") != null && (this._authorEmail = e.attributes.getNamedItem("AuthorEmail").nodeValue), e.attributes.getNamedItem("Keywords") != null && this.set_keywords(e.attributes.getNamedItem("Keywords").nodeValue), e.attributes.getNamedItem("OrganizationName") != null && this.set_orgName(e.attributes.getNamedItem("OrganizationName").nodeValue), this._organizationUrl = e.attributes.getNamedItem("OrganizationUrl").nodeValue, this._level = we.parse("UserLevel", e.attributes.getNamedItem("UserLevel").nodeValue), this._type = we.parse("Classification", e.attributes.getNamedItem("Classification").nodeValue), this._taxonomy = e.attributes.getNamedItem("Taxonomy").nodeValue;
            for (var n = xt.selectSingleNode(e, "TourStops"), a = r.enumerate(n.childNodes); a.moveNext(); ) {
              var s = a.current;
              s.nodeName === "TourStop" && this.addTourStop(Mr._fromXml(this, s));
            }
            var l = xt.selectSingleNode(e, "ReferenceFrames");
            if (l != null) {
              for (var g = r.enumerate(l.childNodes); g.moveNext(); ) {
                var _ = g.current;
                if (_.nodeName === "ReferenceFrame") {
                  var m = new Ki();
                  if (m.initializeFromXml(_), !r.keyExists(P.get_allMaps(), m.name)) {
                    var b = new xi(m.name, 18);
                    b.frame = m, b.loadedFromTour = !0, P.get_allMaps()[m.name] = b;
                  }
                }
              }
              P.connectAllChildren(), P.loadTree();
            }
            var y = xt.selectSingleNode(e, "Layers");
            if (y != null) {
              for (var M = r.enumerate(y.childNodes); M.moveNext(); ) {
                var A = M.current;
                if (A.nodeName === "Layer") {
                  var R = ai.fromXml(A, !0);
                  if (R != null) {
                    if (r.canCast(R, qi)) {
                      var F = R, O = F.get_imageSet();
                      if (O.get_projection() === 7 && O.get_extension() === ".tsv") {
                        Z.singleton.addCatalogHips(O);
                        continue;
                      }
                    }
                    var B = r.format("{0}.txt", R.id.toString());
                    r.keyExists(P.get_layerList(), R.id) && P.deleteLayerByID(R.id, !0, !1);
                    try {
                      R.loadedFromTour = !0, R.loadData(this, B), P.add(R, !1);
                    } catch {
                    }
                  }
                }
              }
              P.loadTree();
            }
            this._tourDirty = 0;
          },
          saveToDataUrl: function() {
            return URL.createObjectURL(this.saveToBlob());
          },
          saveToBlob: function() {
            var t = !1;
            this.cleanUp();
            var e = this.getTourXML(), n = new pa();
            n.set_packageID(this.get_id()), n.addFile("Tour.wwtxml", new Blob([e])), this._authorImage != null;
            for (var a = r.enumerate(this.get_tourStops()); a.moveNext(); ) {
              var s = a.current;
              s._addFilesToCabinet(n, t);
            }
            for (var l = this._createLayerMasterList(), g = r.enumerate(l); g.moveNext(); ) {
              var _ = g.current;
              r.keyExists(P.get_layerList(), _) && P.get_layerList()[_].addFilesToCabinet(n);
            }
            return this.set_tourDirty(!1), n.packageFiles();
          },
          getTourXML: function() {
            var t = new ra();
            t.formatting = 1, t._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), t._writeStartElement("Tour"), t._writeAttributeString("ID", this._id), t._writeAttributeString("Title", this._title), t._writeAttributeString("Descirption", this.get_description()), t._writeAttributeString("Description", this.get_description()), t._writeAttributeString("RunTime", (this.get_runTime() / 1e3).toString()), t._writeAttributeString("Author", this._author), t._writeAttributeString("AuthorEmail", this._authorEmail), t._writeAttributeString("OrganizationUrl", this._organizationUrl), t._writeAttributeString("OrganizationName", this.get_orgName()), t._writeAttributeString("Keywords", this.get_keywords()), t._writeAttributeString("UserLevel", we.toXml("UserLevel", this._level)), t._writeAttributeString("Classification", we.toXml("Classification", this._type)), t._writeAttributeString("Taxonomy", this._taxonomy);
            var e = this._isTimelineTour();
            t._writeAttributeString("TimeLineTour", e.toString()), t._writeStartElement("TourStops");
            for (var n = r.enumerate(this.get_tourStops()); n.moveNext(); ) {
              var a = n.current;
              a._saveToXml(t, !0);
            }
            t._writeEndElement();
            var s = this._createLayerMasterList(), l = this._getReferenceFrameList();
            t._writeStartElement("ReferenceFrames");
            for (var g = r.enumerate(l); g.moveNext(); ) {
              var _ = g.current;
              _.saveToXml(t);
            }
            t._writeEndElement(), t._writeStartElement("Layers");
            for (var m = r.enumerate(s); m.moveNext(); ) {
              var b = m.current;
              if (r.keyExists(P.get_layerList(), b)) {
                var y = P.get_layerList()[b], M = y.get_name(), A = Z.singleton.renderContext.getCatalogHipsByName(M);
                if (A != null) {
                  var R = qi.create(A);
                  R.id = b, R.set_name(M), R.set_referenceFrame("Sky"), R.saveToXml(t);
                } else
                  P.get_layerList()[b].saveToXml(t);
              }
            }
            return t._writeEndElement(), t._writeFullEndElement(), t._close(), t.body;
          },
          _getReferenceFrameList: function() {
            for (var t = [], e = r.enumerate(r.keys(P.get_allMaps())); e.moveNext(); ) {
              var n = e.current, a = P.get_allMaps()[n];
              (a.frame.reference === 18 || a.frame.reference === 19) && !(t.indexOf(a.frame) >= 0) && !a.frame._systemGenerated && t.push(a.frame);
            }
            return t;
          },
          _createLayerMasterList: function() {
            for (var t = [], e = r.enumerate(this.get_tourStops()); e.moveNext(); )
              for (var n = e.current, a = r.enumerate(r.keys(n.layers)); a.moveNext(); ) {
                var s = a.current;
                t.indexOf(s) >= 0 || r.keyExists(P.get_layerList(), s) && t.push(s);
              }
            return t;
          },
          _isTimelineTour: function() {
            return !1;
          },
          get_tagId: function() {
            return this._tagId;
          },
          set_tagId: function(t) {
            return this._tagId = t, t;
          },
          get_authorThumbnailFilename: function() {
            return "Author.Png";
          },
          get_tourThumbnailFilename: function() {
            return this._representativeThumbnailTourstop < this._tourStops.length ? this._tourStops[this._representativeThumbnailTourstop].get_tourStopThumbnailFilename() : null;
          },
          get_id: function() {
            return this._id;
          },
          set_id: function(t) {
            return this._id = t, t;
          },
          get_title: function() {
            return this._title;
          },
          set_title: function(t) {
            return this._title = t, this.set_tourDirty(!0), t;
          },
          get_runTime: function() {
            return (!this._runTime || this._lastDirtyCheck !== this._tourDirty) && (this._runTime = this._calculateRunTime(), this._lastDirtyCheck = this._tourDirty), this._runTime;
          },
          get_description: function() {
            return this._description;
          },
          set_description: function(t) {
            return this._description = t, this.set_tourDirty(!0), t;
          },
          get_attributesAndCredits: function() {
            return this._attributesAndCredits;
          },
          set_attributesAndCredits: function(t) {
            return this._attributesAndCredits = t, this.set_tourDirty(!0), t;
          },
          get_authorEmailOther: function() {
            return this._authorEmailOther;
          },
          set_authorEmailOther: function(t) {
            return this._authorEmailOther = t, this.set_tourDirty(!0), t;
          },
          get_authorEmail: function() {
            return this._authorEmail;
          },
          set_authorEmail: function(t) {
            return this._authorEmail = t, this.set_tourDirty(!0), t;
          },
          get_authorUrl: function() {
            return this._authorUrl;
          },
          set_authorUrl: function(t) {
            return this._authorUrl = t, this.set_tourDirty(!0), t;
          },
          get_authorPhone: function() {
            return this._authorPhone;
          },
          set_authorPhone: function(t) {
            return this._authorPhone = t, this.set_tourDirty(!0), t;
          },
          get_authorContactText: function() {
            return this._authorContactText;
          },
          set_authorContactText: function(t) {
            return this._authorContactText = t, this.set_tourDirty(!0), t;
          },
          get_orgName: function() {
            return this._orgName;
          },
          set_orgName: function(t) {
            return this._orgName = t, this.set_tourDirty(!0), t;
          },
          get_orgUrl: function() {
            return this._orgUrl;
          },
          set_orgUrl: function(t) {
            return this._orgUrl = t, this.set_tourDirty(!0), t;
          },
          get_author: function() {
            return this._author;
          },
          set_author: function(t) {
            return this._author = t, this.set_tourDirty(!0), t;
          },
          get_authorImageUrl: function() {
            return this._authorImageUrl;
          },
          set_authorImageUrl: function(t) {
            return this._authorImageUrl = t, this.set_tourDirty(!0), t;
          },
          get_authorImage: function() {
            return this._authorImage;
          },
          set_authorImage: function(t) {
            return this._authorImage = t, this.set_tourDirty(!0), t;
          },
          get_organizationUrl: function() {
            return this._organizationUrl;
          },
          set_organizationUrl: function(t) {
            return this._organizationUrl = t, this.set_tourDirty(!0), t;
          },
          get_fileName: function() {
            return this._filename;
          },
          set_fileName: function(t) {
            return this._filename = t, t;
          },
          get_level: function() {
            return this._level;
          },
          set_level: function(t) {
            return this._level = t, this.set_tourDirty(!0), t;
          },
          get_type: function() {
            return this._type;
          },
          set_type: function(t) {
            return this._type = t, this.set_tourDirty(!0), t;
          },
          get_taxonomy: function() {
            return this._taxonomy;
          },
          set_taxonomy: function(t) {
            return this._taxonomy = t, this.set_tourDirty(!0), t;
          },
          get_keywords: function() {
            return this._keywords;
          },
          set_keywords: function(t) {
            return this._keywords = t, this.set_tourDirty(!0), t;
          },
          get_objects: function() {
            return this._objects;
          },
          set_objects: function(t) {
            return this._objects = t, this.set_tourDirty(!0), t;
          },
          get_editMode: function() {
            return this._editMode;
          },
          set_editMode: function(t) {
            return this._editMode = t, t;
          },
          get_tourStops: function() {
            return this._tourStops;
          },
          set_tourStops: function(t) {
            return this._tourStops = t, t;
          },
          get_currentTourstopIndex: function() {
            return this._currentTourstopIndex;
          },
          set_currentTourstopIndex: function(t) {
            return this._currentTourstopIndex = t, t;
          },
          addTourStop: function(t) {
            t.set_owner(this), this.get_tourStops().push(t), this._currentTourstopIndex = this._tourStops.length - 1, this.set_tourDirty(!0);
          },
          insertTourStop: function(t) {
            t.set_owner(this), this._currentTourstopIndex > -1 ? this.get_tourStops().splice(this._currentTourstopIndex, 0, t) : (this.get_tourStops().push(t), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
          },
          insertAfterTourStop: function(t) {
            t.set_owner(this), this._currentTourstopIndex > -1 || this._currentTourstopIndex < this.get_tourStops().length ? this.get_tourStops().splice(this._currentTourstopIndex + 1, 0, t) : (this.get_tourStops().push(t), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
          },
          removeTourStop: function(t) {
            r.remove(this._tourStops, t), this._currentTourstopIndex > this._tourStops.length - 1 && this._currentTourstopIndex--, this.set_tourDirty(!0);
          },
          _calculateRunTime: function() {
            for (var t = 0, e = 0; e < this._tourStops.length; e++)
              if (t += this._tourStops[e].get_duration(), e > 0)
                switch (this._tourStops[e].get__transition()) {
                  case 0:
                    if (this._tourStops[e].get_target().get_backgroundImageset() == null || this._tourStops[e - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[e].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[e - 1].get_target().get_backgroundImageset().get_dataSetType() !== 4 || this._tourStops[e - 1].get_target().get_target() === this._tourStops[e].get_target().get_target())) {
                      var n = this._tourStops[e - 1].get_endTarget() == null ? this._tourStops[e - 1].get_target().get_camParams() : this._tourStops[e - 1].get_endTarget().get_camParams(), a = sn.create(n, this._tourStops[e].get_target().get_camParams());
                      t += a.get_moveTime() * 1e3;
                    }
                    break;
                }
            return r.truncate(t);
          },
          elapsedTimeTillTourstop: function(t) {
            if (!t && t >= this._tourStops.length)
              return 0;
            for (var e = 0, n = 0; n < t; n++)
              if (e += this._tourStops[n].get_duration(), n > 0)
                switch (this._tourStops[n].get__transition()) {
                  case 0:
                    var a = this._tourStops[n - 1].get_endTarget() == null ? this._tourStops[n - 1].get_target().get_camParams() : this._tourStops[n - 1].get_endTarget().get_camParams();
                    if (this._tourStops[n - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[n].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[n - 1].get_target().get_backgroundImageset().get_dataSetType() !== 4 || this._tourStops[n - 1].get_target().get_target() === this._tourStops[n].get_target().get_target())) {
                      var s = sn.create(a, this._tourStops[n].get_target().get_camParams());
                      e += s.get_moveTime() * 1e3;
                    }
                    break;
                }
            return e / 1e3;
          },
          elapsedTimeSinceLastMaster: function(t) {
            var e = null;
            if (!t && t >= this._tourStops.length)
              return null;
            for (var n = 0, a = 0; a < t; a++)
              if (this._tourStops[a].get_masterSlide() && (n = 0, e = this._tourStops[a]), n += this._tourStops[a].get_duration(), a > 0)
                switch (this._tourStops[a].get__transition()) {
                  case 0:
                    var s = this._tourStops[a - 1].get_endTarget() == null ? this._tourStops[a - 1].get_target().get_camParams() : this._tourStops[a - 1].get_endTarget().get_camParams();
                    if (this._tourStops[a - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[a].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[a - 1].get_target().get_backgroundImageset().get_dataSetType() !== 4 || this._tourStops[a - 1].get_target().get_target() === this._tourStops[a].get_target().get_target())) {
                      var l = sn.create(s, this._tourStops[a].get_target().get_camParams());
                      n += l.get_moveTime() * 1e3;
                    }
                    break;
                }
            return new Lo(e, n / 1e3);
          },
          getMasterSlideForIndex: function(t) {
            for (var e = -1, n = 0; n < t; n++)
              this._tourStops[n].get_masterSlide() && (e = n);
            return e === -1 ? null : this._tourStops[e];
          },
          getTourStopIndexByID: function(t) {
            if (!t || t === "Next")
              return this._currentTourstopIndex++;
            for (var e = 0, n = r.enumerate(this._tourStops); n.moveNext(); ) {
              var a = n.current;
              if (a.get_id() === t)
                return e;
              e++;
            }
            return -1;
          },
          cleanUp: function() {
          },
          getCachedTexture: function(t, e) {
            if (this._textureList == null && (this._textureList = {}), r.keyExists(this._textureList, t))
              return e(), this._textureList[t];
            var n = this.getFileStream(t);
            if (r.whitespace(n))
              return null;
            var a = document.createElement("img");
            return a.src = this.getFileStream(t), a.addEventListener("load", function() {
              e();
            }, !1), this._textureList[t] = a, a;
          },
          getCachedTexture2d: function(t) {
            if (this._textureList2d == null && (this._textureList2d = {}), r.keyExists(this._textureList2d, t))
              return this._textureList2d[t];
            var e = new di();
            return e.load(this.getFileStream(t)), this._textureList2d[t] = e, e;
          },
          addCachedFile: function(t, e) {
            this._fileCache[t] = e, r.keyExists(this._textureList2d, t) && delete this._textureList2d[t], r.keyExists(this._textureList, t) && delete this._textureList[t];
          },
          getFileStream: function(t) {
            var e = this.getFileBlob(t);
            return e == null ? null : URL.createObjectURL(e);
          },
          getFileBlob: function(t) {
            return r.keyExists(this._fileCache, t) ? this._fileCache[t] : this._cabinet != null ? this._cabinet.getFileBlob(this.get_workingDirectory() + t) : null;
          },
          get_currentTourStop: function() {
            return this._currentTourstopIndex > -1 ? this.get_tourStops()[this._currentTourstopIndex] : null;
          },
          set_currentTourStop: function(t) {
            for (var e = 0, n = r.enumerate(this.get_tourStops()); n.moveNext(); ) {
              var a = n.current;
              if (a === t) {
                this._currentTourstopIndex > -1, this._currentTourstopIndex = e;
                break;
              }
              e++;
            }
            return t;
          },
          clearTempFiles: function() {
          }
        };
        function Mo() {
          this.musicTrack = new Hs(), this.voiceTrack = new Hs(), this._tour = null, this.tourStopList = new xo(), this.tourEditorUI = new Oi(), this._contextMenu = new un(), this.nextSlideCallback = null, this.playing = !1, this._player = null, this._defultColor = Pt.get_white();
        }
        var Wc = {
          setUiStrings: function() {
          },
          get_tour: function() {
            return this._tour;
          },
          set_tour: function(t) {
            return this._tour = t, this.tourEditorUI.set_tour(this._tour), this.tourStopList.tour = this._tour, gi.defaultAnchor = 1, this._tour.get_tourStops().length > 0 && (Z.singleton.gotoTarget(this._tour.get_tourStops()[0].get_target(), !1, !0, !1), this._tour.set_currentTourstopIndex(0), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop(), P.setVisibleLayerList(this._tour.get_currentTourStop().layers)), this.setEditMode(this._tour.get_editMode()), t;
          },
          tour_CurrentTourstopChanged: function() {
            Vi._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection), this.tourEditorUI != null && this.tourEditorUI.clearSelection(), this.tourStopList.refresh();
          },
          setFocusedChild: function() {
          },
          selectCurrent: function() {
            this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.tourStopList.refresh();
          },
          tourEdit_Load: function(t, e) {
          },
          playNow: function(t) {
            this.playing = !0, (this.get_tour().get_editMode() || t) && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
          },
          _tourPlayer_TourEnded: function(t, e) {
          },
          _endTour_CloseTour: function(t, e) {
          },
          _endTour_LaunchTour: function(t, e) {
            this.playNow(!0);
          },
          setEditMode: function(t) {
          },
          tourStopList_ItemClicked: function(t, e) {
            this._tour.get_currentTourStop() !== e && (this._tour.set_currentTourStop(e), e != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection()), this.playing && this._playFromHere_Click(t, new r.EventArgs());
          },
          tourStopList_ItemDoubleClicked: function(t, e) {
            this.showSlideStartPosition(e);
          },
          showSlideStartPosition: function(t) {
            this._tour.set_currentTourStop(t), t != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection(), this._tour.get_currentTourStop() != null && (this._tour.get_currentTourStop().syncSettings(), Q.set_now(this._tour.get_currentTourStop().get_startTime()), Q.set_syncToClock(!1), Z.singleton.gotoTarget(t.get_target(), !1, !0, !1), this._tour.get_currentTourStop().set_tweenPosition(0), this._tour.get_currentTourStop()._updateLayerOpacity(), P.setVisibleLayerList(this._tour.get_currentTourStop().layers));
          },
          tourStopList_MouseClick: function(t, e) {
            if (this._tour.get_editMode(), this.tourStopList.multipleSelection) {
              this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new un();
              var n = $t.create(pt.getLocalizedText(1345, "Select All")), a = $t.create(pt.getLocalizedText(427, "Cut")), s = $t.create(pt.getLocalizedText(428, "Copy")), l = $t.create(pt.getLocalizedText(429, "Paste")), g = $t.create(pt.getLocalizedText(167, "Delete"));
              a.click = r.bind("_cutMenu_Click", this), s.click = r.bind("_copyMenu_Click", this), l.click = r.bind("_pasteMenu_Click", this), g.click = r.bind("_deleteMenu_Click", this), n.click = r.bind("_selectAllMenu_Click", this);
              var _ = new sr();
              this._contextMenu.items.push(n), this._contextMenu.items.push(_), this._contextMenu.items.push(a), this._contextMenu.items.push(s), l.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(l), this._contextMenu.items.push(g), this._contextMenu._show(Di.get_position());
            } else if (this._tour.get_currentTourStop() == null) {
              this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new un();
              var n = $t.create(pt.getLocalizedText(1345, "Select All")), l = $t.create(pt.getLocalizedText(425, "Paste")), _ = new sr(), m = new sr(), b = $t.create(pt.getLocalizedText(426, "Add New Slide"));
              l.click = r.bind("_pasteMenu_Click", this), n.click = r.bind("_selectAllMenu_Click", this), b.click = r.bind("_addNewSlide_Click", this), l.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(n), this._contextMenu.items.push(_), this._contextMenu.items.push(l), this._contextMenu.items.push(m), this._contextMenu.items.push(b), this._contextMenu._show(Di.get_position());
            } else {
              this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new un();
              var n = $t.create(pt.getLocalizedText(1345, "Select All")), a = $t.create(pt.getLocalizedText(427, "Cut")), s = $t.create(pt.getLocalizedText(428, "Copy")), l = $t.create(pt.getLocalizedText(429, "Paste")), g = $t.create(pt.getLocalizedText(167, "Delete")), _ = new sr(), y = new sr(), M = new sr(), A = new sr(), R = new sr(), F = new sr(), b = $t.create(pt.getLocalizedText(431, "Insert New Slide")), O = $t.create(pt.getLocalizedText(627, "Duplicate Slide at End Position")), B = $t.create(pt.getLocalizedText(628, "Merge Tour after slide...")), H = $t.create(pt.getLocalizedText(432, "Preview Tour From Here")), m = new sr(), K = $t.create(pt.getLocalizedText(433, "Capture New Thumbnail")), J = $t.create(pt.getLocalizedText(434, "Set Start Camera Position")), it = $t.create(pt.getLocalizedText(435, "Set End Camera Position")), ot = $t.create(pt.getLocalizedText(436, "Show Start Camera Position")), lt = $t.create(pt.getLocalizedText(437, "Show End Camera Position")), gt = $t.create(pt.getLocalizedText(438, "Master Slide"));
              $t.create(pt.getLocalizedText(1346, "Create Timeline")), $t.create(pt.getLocalizedText(1347, "Show Timeline"));
              var ut = this._tour.get_currentTourStop().get_nextSlide();
              switch (ut) {
                case "":
                case null:
                case "Next":
                  ut = " (" + pt.getLocalizedText(610, "Next Slide") + ")";
                  break;
                case "Return":
                  ut = " (" + pt.getLocalizedText(602, "Return to Caller") + ")";
                  break;
                default:
                  var St = this.get_tour().getTourStopIndexByID(ut);
                  St > -1 && (r.emptyString(this._tour.get_tourStops()[St].get_description()) ? ut = r.format(" (Slide {0})", St) : ut = " (" + this._tour.get_tourStops()[St].get_description() + ")");
                  break;
              }
              var mt = $t.create(pt.getLocalizedText(590, "Set Next Slide") + ut), Dt = $t.create(pt.getLocalizedText(439, "Track Date/Time/Location")), yt = $t.create(pt.getLocalizedText(629, "Fade In Slide Elements")), ue = $t.create(pt.getLocalizedText(20, "Properties")), _e = $t.create(pt.getLocalizedText(1029, "Animation Tween Type")), Qt = $t.create(pt.getLocalizedText(1030, "Linear")), Ft = $t.create(pt.getLocalizedText(1031, "Ease In/Out")), vi = $t.create(pt.getLocalizedText(1032, "Ease In")), Ei = $t.create(pt.getLocalizedText(1033, "Ease Out")), Li = $t.create(pt.getLocalizedText(1034, "Exponential"));
              switch (Qt.tag = 0, Ft.tag = 3, vi.tag = 1, Ei.tag = 2, Li.tag = 4, Qt.click = r.bind("_interpolation_Click", this), Ft.click = r.bind("_interpolation_Click", this), vi.click = r.bind("_interpolation_Click", this), Ei.click = r.bind("_interpolation_Click", this), Li.click = r.bind("_interpolation_Click", this), this._tour.get_currentTourStop().get_interpolationType()) {
                case 0:
                  Qt.checked = !0;
                  break;
                case 1:
                  vi.checked = !0;
                  break;
                case 2:
                  Ei.checked = !0;
                  break;
                case 3:
                  Ft.checked = !0;
                  break;
                case 4:
                  Li.checked = !0;
                  break;
              }
              _e.dropDownItems.push(Qt), _e.dropDownItems.push(Ft), _e.dropDownItems.push(vi), _e.dropDownItems.push(Ei), _e.dropDownItems.push(Li), n.click = r.bind("_selectAllMenu_Click", this), O.click = r.bind("_insertDuplicate_Click", this), a.click = r.bind("_cutMenu_Click", this), s.click = r.bind("_copyMenu_Click", this), l.click = r.bind("_pasteMenu_Click", this), g.click = r.bind("_deleteMenu_Click", this), b.click = r.bind("_insertNewSlide_Click", this), ue.click = r.bind("_properties_Click", this), K.click = r.bind("_captureThumbnail_Click", this), J.click = r.bind("_setSkyPosition_Click", this), it.click = r.bind("_setEndSkyPosition_Click", this), lt.click = r.bind("_showEndSkyPosition_Click", this), ot.click = r.bind("_showSkyPosition_Click", this), H.click = r.bind("_playFromHere_Click", this), gt.click = r.bind("_masterSlide_Click", this), mt.click = r.bind("_setNextSlide_Click", this), Dt.click = r.bind("_trackSpaceTime_Click", this), B.click = r.bind("_insertSlideshow_Click", this), yt.click = r.bind("_fadeInOverlays_Click", this), this._tour.get_currentTourStop().get_masterSlide() && (gt.checked = !0), this._tour.get_currentTourStop().get_hasTime() && (Dt.checked = !0), yt.checked = this._tour.get_currentTourStop().get_fadeInOverlays(), this._contextMenu.items.push(n), this._contextMenu.items.push(F), this._contextMenu.items.push(a), this._contextMenu.items.push(s), l.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(l), this._contextMenu.items.push(g), this._contextMenu.items.push(_), this._contextMenu.items.push(b), this._contextMenu.items.push(O), this._contextMenu.items.push(B), this._contextMenu.items.push(m), this._contextMenu.items.push(H), this._contextMenu.items.push(y), this._contextMenu.items.push(J), this._contextMenu.items.push(it), this._contextMenu.items.push(M), this._contextMenu.items.push(ot), this._contextMenu.items.push(lt), this._contextMenu.items.push(A), this._contextMenu.items.push(K), this._contextMenu.items.push(R), this._contextMenu.items.push(gt), this._contextMenu.items.push(mt), this._contextMenu.items.push(yt), this._contextMenu.items.push(Dt), this._contextMenu.items.push(_e), this._contextMenu._show(Mt.create(e.clientX, e.clientY));
            }
          },
          _selectAllMenu_Click: function(t, e) {
            this.tourStopList.selectAll();
          },
          _interpolation_Click: function(t, e) {
            var n = t;
            this._tour.get_currentTourStop().set_interpolationType(n.tag);
          },
          _nextSlideChosen: function() {
            this._selectDialog.get_OK() && this._tour.get_currentTourStop().set_nextSlide(this._selectDialog.get_id());
          },
          _setNextSlide_Click: function(t, e) {
            this._selectDialog = new qs(null), this.nextSlideCallback(this._selectDialog, r.bind("_nextSlideChosen", this));
          },
          _insertDuplicate_Click: function(t, e) {
            oe.push(new ea(pt.getLocalizedText(530, "Duplicate Slide at End Position"), this._tour));
            var n = this._tour.get_currentTourStop().copy();
            if (n != null) {
              n.get_endTarget() != null && (n.get_endTarget().set_backgroundImageset(n.get_target().get_backgroundImageset()), n.get_endTarget().set_studyImageset(n.get_target().get_studyImageset()), n.set_target(n.get_endTarget()), n.set_startTime(n.get_endTime()), n.set_endTarget(null));
              for (var a = r.enumerate(n.get_overlays()); a.moveNext(); ) {
                var s = a.current;
                s.set_tweenFactor(1), s.set_animate(!s.get_animate()), s.set_animate(!s.get_animate());
              }
              n.set_tweenPosition(0), n.set_fadeInOverlays(!1), this._tour.insertAfterTourStop(n), this.tourStopList.refresh();
            }
          },
          _fadeInOverlays_Click: function(t, e) {
            this._tour.get_currentTourStop().set_fadeInOverlays(!this._tour.get_currentTourStop().get_fadeInOverlays());
          },
          _insertSlideshow_Click: function(t, e) {
          },
          _trackSpaceTime_Click: function(t, e) {
            oe.push(new li(pt.getLocalizedText(532, "Track Time Edit"), this._tour)), this._tour.get_currentTourStop().set_hasTime(!this._tour.get_currentTourStop().get_hasTime());
          },
          _masterSlide_Click: function(t, e) {
            oe.push(new li(pt.getLocalizedText(533, "Master Slide State Edit"), this._tour)), this._tour.get_currentTourStop().set_masterSlide(!this._tour.get_currentTourStop().get_masterSlide()), this.tourStopList.refresh();
          },
          _playFromHere_Click: function(t, e) {
            this.playFromCurrentTourstop();
          },
          playFromCurrentTourstop: function() {
            this.playing = !0, Z.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), Q.set_now(this._tour.get_currentTourStop().get_startTime()), Q.set_syncToClock(!1), this.setPlayPauseMode();
          },
          playFromTourstop: function(t) {
            this._tour.set_currentTourStop(t), this.playFromCurrentTourstop();
          },
          _showSkyPosition_Click: function(t, e) {
            this._tour.get_currentTourStop() != null && (Z.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), this._tour.get_currentTourStop().syncSettings(), Q.set_now(this._tour.get_currentTourStop().get_startTime()), Q.set_syncToClock(!1), this._tour.get_currentTourStop().set_tweenPosition(0), P.setVisibleLayerList(this._tour.get_currentTourStop().layers), this.tourStopList.refresh());
          },
          _showEndSkyPosition_Click: function(t, e) {
            this._tour.get_currentTourStop().set_tweenPosition(1), this._tour.get_currentTourStop()._updateLayerOpacity(), this._tour.get_currentTourStop() != null && this._tour.get_currentTourStop().get_endTarget() != null && (Z.singleton.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), Z.singleton.renderContext.set_solarSystemTrack(this._tour.get_currentTourStop().get_endTarget().get_target()), Q.set_now(this._tour.get_currentTourStop().get_endTime()), this._tour.get_currentTourStop().syncSettings(), P.setVisibleLayerList(this._tour.get_currentTourStop().layers), Q.set_syncToClock(!1), this.tourStopList.refresh(), this.tourEditorUI.clearSelection());
          },
          _setEndSkyPosition_Click: function(t, e) {
            if (this._tour.get_currentTourStop() != null) {
              oe.push(new li(pt.getLocalizedText(435, "Set End Camera Position"), this._tour));
              var n = fr.createCameraParams("End Place", Z.singleton.renderContext.viewCamera.copy(), 268435456, Z.singleton.constellation, Z.singleton.renderContext.get_backgroundImageset().get_dataSetType(), Z.singleton.renderContext.get_solarSystemTrack());
              this._tour.get_currentTourStop().set_endTarget(n), this._tour.get_currentTourStop().get_endTarget().set_constellation(Z.singleton.constellation), this._tour.get_currentTourStop().set_endTime(Q.get_now()), this._tour.get_currentTourStop().set_tweenPosition(1);
              for (var a = r.enumerate(r.keys(this._tour.get_currentTourStop().layers)); a.moveNext(); ) {
                var s = a.current, l = this._tour.get_currentTourStop().layers[s];
                r.keyExists(P.get_layerList(), l.id) && (l.endOpacity = P.get_layerList()[l.id].get_opacity(), l.endParams = P.get_layerList()[l.id].getParams());
              }
              this._tour.get_currentTourStop()._updateLayerOpacity(), this.tourStopList.refresh(), Fa.refreshUi(), this.tourEditorUI.clearSelection();
            }
          },
          _setSkyPosition_Click: function(t, e) {
            this._tour.get_currentTourStop() != null && (oe.push(new li(pt.getLocalizedText(434, "Set Start Camera Position"), this._tour)), this._tour.get_currentTourStop().get_target().set_target(Z.singleton.renderContext.get_solarSystemTrack()), this._tour.get_currentTourStop().get_target().set_type(Z.singleton.renderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_camParams(Z.singleton.renderContext.viewCamera.copy()), this._tour.get_currentTourStop().get_target().set_constellation(Z.singleton.constellation), this._tour.get_currentTourStop().get_target().set_studyImageset(Z.singleton.renderContext.get_foregroundImageset()), this._tour.get_currentTourStop().get_target().set_type(Z.singleton.renderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_backgroundImageset(Z.singleton.renderContext.get_backgroundImageset().get_stockImageSet()), this._tour.get_currentTourStop().captureSettings(), this._tour.get_currentTourStop().layers = P._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().set_tweenPosition(0), this.tourStopList.refresh(), Fa.refreshUi(), this.tourEditorUI.clearSelection());
          },
          _captureThumbnail_Click: function(t, e) {
            this._tour.get_currentTourStop() != null && this._captureThumbnail(this._tour.get_currentTourStop());
          },
          _captureThumbnail: function(t) {
            var e = this;
            Z.singleton.captureThumbnail(function(n) {
              var a = r.format("{0}.thumb.png", t.get_id());
              e._tour.addCachedFile(a, n), t.set_thumbnail(e._tour.getCachedTexture(a, function() {
                e.tourStopList.refresh();
              }));
            });
          },
          _properties_Click: function(t, e) {
            throw new Error("The method or operation is not implemented.");
          },
          tourStopList_AddNewSlide: function(t, e) {
            this.addSlide(!1), this.tourStopList.ensureAddVisible();
          },
          _addNewSlide_Click: function(t, e) {
            this.addSlide(!1), this.tourStopList.ensureAddVisible();
          },
          _insertNewSlide_Click: function(t, e) {
            this.addSlide(!0);
          },
          addSlide: function(t) {
            oe.push(new ea(pt.getLocalizedText(426, "Add New Slide"), this._tour)), Di.set_current(wi.get_waitCursor());
            var e = "Current Screen", n = fr.createCameraParams(e, Z.singleton.renderContext.viewCamera.copy(), 268435456, Z.singleton.constellation, Z.singleton.renderContext.get_backgroundImageset().get_dataSetType(), Z.singleton.renderContext.get_solarSystemTrack());
            n.set_studyImageset(Z.singleton.renderContext.get_foregroundImageset()), n.set_backgroundImageset(Z.singleton.renderContext.get_backgroundImageset().get_stockImageSet());
            var a = Mr.create(n);
            t ? this._tour.insertTourStop(a) : this._tour.addTourStop(a), this._tour.get_currentTourStop() != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this._tour.get_currentTourStop().layers = P._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._captureThumbnail(a), this.tourStopList.selectedItem = this.tourStopList.findItem(a), this.tourStopList.refresh(), this.tourEditorUI.clearSelection(), Di.set_current(wi.get_defaultV()), Fa.refreshUi();
          },
          _deleteMenu_Click: function(t, e) {
            oe.push(new ea(pt.getLocalizedText(534, "Delete Slide"), this._tour));
            for (var n = r.enumerate(r.keys(this.tourStopList.selectedItems)); n.moveNext(); ) {
              var a = n.current, s = this.tourStopList.selectedItems[a];
              this._tour.removeTourStop(s);
            }
            r.clearKeys(this.tourStopList.selectedItems), this.tourStopList.selectedItem = -1, this._tour.set_currentTourStop(null), this.musicTrack.target = null, this.voiceTrack.target = null, this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
          },
          _pasteMenu_Click: function(t, e) {
            if (this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide") {
              oe.push(new ea(pt.getLocalizedText(535, "Paste Slide"), this._tour));
              for (var n = new DOMParser(), a = n.parseFromString(this.tourEditorUI.clipboardData, "text/xml"), s = xt.selectSingleNode(a, "TourStops"), l = new r.Stack(), g = r.enumerate(s.childNodes); g.moveNext(); ) {
                var _ = g.current;
                if (_.nodeName === "TourStop") {
                  var m = Mr._fromXml(this._tour, _);
                  m.set_id(er.newGuid().toString()), l.push(m);
                }
              }
              r.clearKeys(this.tourStopList.selectedItems);
              for (var b = this.tourStopList.selectedItem + l.count - 1; l.count > 0; ) {
                var m = l.pop();
                this._tour.insertTourStop(m), this.tourStopList.selectedItems[b--] = m;
              }
              this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
            }
          },
          _copyMenu_Click: function(t, e) {
            var n = new ra();
            n._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), n._writeStartElement("TourStops");
            for (var a = r.enumerate(r.keys(this.tourStopList.selectedItems)); a.moveNext(); ) {
              var s = a.current, l = this.tourStopList.selectedItems[s];
              l._saveToXml(n, !0);
            }
            n._writeEndElement(), this.tourEditorUI.clipboardType = "WorldWideTelescope.Slide", this.tourEditorUI.clipboardData = n.body;
          },
          _cutMenu_Click: function(t, e) {
            oe.push(new ea(pt.getLocalizedText(536, "Cut Slide"), this._tour)), this._copyMenu_Click(t, e);
            for (var n = r.enumerate(r.keys(this.tourStopList.selectedItems)); n.moveNext(); ) {
              var a = n.current, s = this.tourStopList.selectedItems[a];
              this._tour.removeTourStop(s);
            }
            r.clearKeys(this.tourStopList.selectedItems), this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
          },
          pauseTour: function() {
            this.playing && (this.playing = !1), this.setPlayPauseMode();
          },
          preview_Click: function(t, e) {
            this.playing = !this.playing, this.playing && this._tour.get_editMode() && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
          },
          setPlayPauseMode: function() {
            this._tour.get_editMode() ? this.playing ? (this._player == null && (this._player = new qe()), this._player.set_tour(this._tour), Z.singleton.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (Z.singleton.uiController = this.tourEditorUI, this._player != null && this._player.stop(!1), this._player = null, Z.singleton.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()) : this.playing ? (this._player == null && (this._player = new qe()), this._player.set_tour(this._tour), Z.singleton.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (Z.singleton.uiController = null, Z.singleton.renderContext.freezeView(), this._player != null && this._player.stop(!1), this._player = null, Z.singleton.uiController = null, Z.singleton.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()), this.tourStopList.refresh();
          },
          playerTimer_Tick: function(t, e) {
            this.playing && this._player != null && (qe.get_playing() ? this.tourStopList.selectedItem !== this._tour.get_currentTourstopIndex() && (this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex()) : (this.playing = !1, this.setPlayPauseMode()));
          },
          insertShapeCircle_Click: function(t, e) {
            this.tourEditorUI.addShape("", 0);
          },
          insertShapeRectangle_Click: function(t, e) {
            this.tourEditorUI.addShape("", 1);
          },
          insertShapeLine_Click: function(t, e) {
            this.tourEditorUI.addShape("", 5);
          },
          insertDonut_Click: function(t, e) {
            this.tourEditorUI.addShape("", 3);
          },
          _addArrow_Click: function(t, e) {
            this.tourEditorUI.addShape("", 4);
          },
          insertVideo_Click: function(t, e) {
          },
          insertAudio_Click: function(t, e) {
          },
          insertHyperlink_Click: function(t, e) {
          },
          colorPicker_Click: function(t, e) {
          },
          tourEditTab_Leave: function(t, e) {
          },
          editTourProperties_Click: function(t, e) {
          },
          saveTour_Click: function(t, e) {
            this.save(!1);
          },
          save: function(t) {
            return !0;
          },
          addVideo_Click: function(t, e) {
          },
          addPicture_Click: function(t, e) {
          },
          addShape_Click: function(t, e) {
          },
          _addOpenRectangle_Click: function(t, e) {
            this.tourEditorUI.addShape("", 6);
          },
          _addStar_Click: function(t, e) {
            this.tourEditorUI.addShape("", 2);
          },
          addText_Click: function(t, e) {
          },
          preview_EnabledChanged: function(t, e) {
            this.playing;
          },
          preview_MouseEnter: function(t, e) {
          },
          preview_MouseLeave: function(t, e) {
          },
          preview_MouseUp: function(t, e) {
          },
          preview_MouseDown: function(t, e) {
          },
          tourStopList_ItemHover: function(t, e) {
          },
          refresh: function() {
          },
          undoStep: function() {
            oe.peekAction() && (oe.stepBack(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
          },
          redoStep: function() {
            oe.peekRedoAction() && (oe.stepForward(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
          },
          tourStopList_ShowEndPosition: function(t, e) {
            this._showEndSkyPosition_Click(this, new r.EventArgs());
          },
          tourStopList_ShowStartPosition: function(t, e) {
            this.showSlideStartPosition(this.get_tour().get_currentTourStop()), this.tourEditorUI.clearSelection();
          },
          tourStopList_KeyDown: function(t, e) {
            if (e.ctrlKey)
              switch (e.keyCode) {
                case 67:
                  this._copyMenu_Click(null, new r.EventArgs());
                  break;
                case 86:
                  this._pasteMenu_Click(null, new r.EventArgs());
                  break;
                case 88:
                  this._cutMenu_Click(null, new r.EventArgs());
                  break;
                case 90:
                  oe.peekAction() ? Br._undoStep() : yi._beep();
                  break;
                case 89:
                  oe.peekRedoAction() ? Br._redoStep() : yi._beep();
                  break;
              }
            e.keyCode === 46 && this._deleteMenu_Click(null, new r.EventArgs());
          },
          _ensureSelectedVisible: function() {
            this.tourStopList.ensureSelectedVisible();
          }
        };
        function Oi() {
          this.selection = new mi(), this._contextMenu = new un(), this._tour = null, this._mouseDown = !1, this._selectionAction = 11, this._needUndoFrame = !1, this._contextPoint = new Mt(), this._dragCopying = !1, this._brokeThreshold = !1, this.nextSlideCallback = null, this.clipboardData = "", this.clipboardType = "", this.editTextCallback = null, this._defaultColor = Pt.get_white();
        }
        var Jc = {
          render: function(t) {
            if (t.setupMatricesOverlays(), !(this._tour == null || this._tour.get_currentTourStop() == null)) {
              for (var e = r.enumerate(this._tour.get_currentTourStop().get_overlays()); e.moveNext(); ) {
                var n = e.current;
                n.get_animate() && this.get_tour().get_currentTourStop().get_keyFramed() ? n.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition()) : this.get_tour().get_currentTourStop().get_keyFramed() || n.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition() < 0.5 ? 0 : 1), n.draw3D(t, !0);
              }
              this.selection.draw3D(t, 1), Oi.currentEditor != null && Oi.currentEditor.render(t), X.tourSettings = null;
            }
          },
          get_tour: function() {
            return this._tour;
          },
          set_tour: function(t) {
            return this._tour = t, t;
          },
          close: function() {
            this._tour != null && (this._tour = null, this.set_focus(null));
          },
          clearSelection: function() {
            this.selection.clearSelection(), Vi._updateOverlayListSelection(this.selection), this.set_focus(null);
          },
          get_focus: function() {
            return this.selection.get_focus();
          },
          set_focus: function(t) {
            return this.selection.set_focus(t), t;
          },
          pointToView: function(t) {
            var e = Z.singleton.renderContext.height, n = Z.singleton.renderContext.width, a = Z.singleton.renderContext.width / Z.singleton.renderContext.height * 1116, s = t.x / n * a - (a - 1920) / 2, l = t.y / e * 1116;
            return Mt.create(s, l);
          },
          mouseDown: function(t, e) {
            this._brokeThreshold = !1, this._needUndoFrame = !0;
            var n = this.pointToView(Mt.create(e.offsetX, e.offsetY));
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return this._needUndoFrame = !1, !1;
            if (Oi.currentEditor != null && Oi.currentEditor.mouseDown(t, e))
              return !0;
            if (this.get_focus() != null) {
              if (this.selection.get_multiSelect())
                for (var a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                  var s = a.current;
                  if (s.hitTest(n))
                    return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = n, this.set_focus(s), e.ctrlKey && (this._dragCopying = !0), !0;
                }
              else if (this.get_focus().hitTest(n))
                return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = n, e.ctrlKey && (this._dragCopying = !0), !0;
              var l = this.selection.hitTest(n);
              if (l !== 11)
                return this._selectionAction = l, this._mouseDown = !0, l === 8 ? this._pointDown = n : this._pointDown = this.selection.pointToSelectionSpace(n), !0;
            }
            for (var g = this._tour.get_currentTourStop().get_overlays().length - 1; g >= 0; g--)
              if (this._tour.get_currentTourStop().get_overlays()[g].hitTest(n))
                return this._selectionAction = 9, this.set_focus(this._tour.get_currentTourStop().get_overlays()[g]), e.ctrlKey || e.shiftKey ? this.selection.addSelection(this.get_focus()) : this.selection.setSelection(this.get_focus()), Vi._updateOverlayListSelection(this.selection), this._mouseDown = !0, this._pointDown = n, !0;
            return this.set_focus(null), this.clearSelection(), this._needUndoFrame = !1, !1;
          },
          mouseUp: function(t, e) {
            return this._brokeThreshold = !1, Oi.currentEditor != null && Oi.currentEditor.mouseUp(t, e) ? !0 : (this._contextPoint = Mt.create(e.offsetX, e.offsetY), this._mouseDown ? (this._mouseDown = !1, e.button === 2 && this.get_focus() != null && this.showSelectionContextMenu(Mt.create(e.offsetX, e.offsetY)), !0) : e.button === 2 ? (this.get_focus() == null && this._showNoSelectionContextMenu(Mt.create(e.offsetX, e.offsetY)), !0) : !1);
          },
          mouseMove: function(t, e) {
            if (Oi.currentEditor != null && Oi.currentEditor.mouseMove(t, e))
              return !0;
            var n = this.pointToView(Mt.create(e.offsetX, e.offsetY));
            if (this._mouseDown && this.get_focus() != null) {
              var a = null, s = pt.getLocalizedText(502, "Edit");
              this._needUndoFrame && (a = new li(pt.getLocalizedText(502, "Edit"), this._tour));
              var l, g;
              if (this._selectionAction !== 9 && this._selectionAction !== 8) {
                var _ = this.selection.pointToSelectionSpace(n);
                l = _.x - this._pointDown.x, g = _.y - this._pointDown.y, this._pointDown = _;
              } else {
                if (l = n.x - this._pointDown.x, g = n.y - this._pointDown.y, this._selectionAction === 9 && !this._brokeThreshold)
                  if (Math.abs(l) > 3 || Math.abs(g) > 3)
                    this._brokeThreshold = !0;
                  else
                    return !0;
                this._pointDown = n;
              }
              if (this._dragCopying)
                if (this.selection.get_multiSelect()) {
                  var m = this.selection.selectionSet;
                  this.clearSelection();
                  for (var b = r.enumerate(m); b.moveNext(); ) {
                    var y = b.current, M = this.addOverlay(y);
                    M.set_x(y.get_x()), M.set_y(y.get_y()), this.set_focus(M), this.selection.addSelection(this.get_focus());
                  }
                  Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
                } else {
                  var M = this.addOverlay(this.get_focus());
                  M.set_x(this.get_focus().get_x()), M.set_y(this.get_focus().get_y()), this.set_focus(M), this.selection.setSelection(this.get_focus()), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
                }
              var A = this.get_focus().get_width() / this.get_focus().get_height(), R = Mt.create(this.get_focus().get_x(), this.get_focus().get_y());
              if (e.ctrlKey)
                switch (s = pt.getLocalizedText(537, "Resize"), this._selectionAction) {
                  case 0:
                    this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - l / A * 2));
                    break;
                  case 1:
                    this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - g * 2));
                    break;
                  case 2:
                    this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + l / A * 2));
                    break;
                  case 3:
                    this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + l * 2));
                    break;
                  case 4:
                    this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + l / A * 2));
                    break;
                  case 5:
                    this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + g * 2));
                    break;
                  case 6:
                    this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - l / A * 2));
                    break;
                  case 7:
                    this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - l * 2));
                    break;
                  case 8:
                    s = pt.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + l / 10);
                    break;
                  case 9:
                    s = pt.getLocalizedText(539, "Drag Copy"), R.x += l, R.y += g;
                    break;
                }
              else
                switch (this._selectionAction !== 8 && this._selectionAction !== 9 && (l > this.get_focus().get_width() - 2 && (l = 0), g > this.get_focus().get_height() - 2 && (g = 0)), s = pt.getLocalizedText(537, "Resize"), this._selectionAction) {
                  case 0:
                    this.get_focus().set_width(this.get_focus().get_width() - l), this.get_focus().set_height(this.get_focus().get_height() - l / A), R.x += l / 2, R.y += l / A / 2;
                    break;
                  case 1:
                    this.get_focus().set_height(this.get_focus().get_height() - g), R.y += g / 2;
                    break;
                  case 2:
                    this.get_focus().set_width(this.get_focus().get_width() + l), this.get_focus().set_height(this.get_focus().get_height() + l / A), R.x += l / 2, R.y -= l / A / 2;
                    break;
                  case 3:
                    this.get_focus().set_width(this.get_focus().get_width() + l), R.x += l / 2;
                    break;
                  case 4:
                    this.get_focus().set_width(this.get_focus().get_width() + l), this.get_focus().set_height(this.get_focus().get_height() + l / A), R.x += l / 2, R.y += l / A / 2;
                    break;
                  case 5:
                    this.get_focus().set_height(this.get_focus().get_height() + g), R.y += g / 2;
                    break;
                  case 6:
                    this.get_focus().set_width(this.get_focus().get_width() - l), this.get_focus().set_height(this.get_focus().get_height() - l / A), R.x += l / 2, R.y -= l / A / 2;
                    break;
                  case 7:
                    this.get_focus().set_width(this.get_focus().get_width() - l), R.x += l / 2;
                    break;
                  case 8:
                    s = pt.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + l);
                    break;
                  case 9:
                    s = pt.getLocalizedText(540, "Move"), R.x += l, R.y += g;
                    break;
                }
              if (this._selectionAction !== 9 && this._selectionAction !== 8 && (R = this.selection.pointToScreenSpace(R)), this.selection.get_multiSelect())
                for (var F = r.enumerate(this.selection.selectionSet); F.moveNext(); ) {
                  var y = F.current;
                  y.set_x(y.get_x() + l), y.set_y(y.get_y() + g);
                }
              else
                this.get_focus().set_x(R.x), this.get_focus().set_y(R.y);
              this._needUndoFrame && (this._needUndoFrame = !1, a.set_actionText(s), oe.push(a));
            } else if (this.get_focus() != null) {
              if (this.get_focus().hitTest(n))
                return Di.set_current(wi.get_sizeAll()), !1;
              var O = this.selection.hitTest(n);
              if (O === 11)
                return !1;
              switch (O) {
                case 0:
                  Di.set_current(wi.get_sizeNWSE());
                  break;
                case 1:
                  Di.set_current(wi.get_sizeNS());
                  break;
                case 2:
                  Di.set_current(wi.get_sizeNESW());
                  break;
                case 3:
                  Di.set_current(wi.get_sizeWE());
                  break;
                case 4:
                  Di.set_current(wi.get_sizeNWSE());
                  break;
                case 5:
                  Di.set_current(wi.get_sizeNS());
                  break;
                case 6:
                  Di.set_current(wi.get_sizeNESW());
                  break;
                case 7:
                  Di.set_current(wi.get_sizeWE());
                  break;
                case 8:
                  Di.set_current(wi.get_sizeWE());
                  break;
              }
            }
            return !1;
          },
          _showNoSelectionContextMenu: function(t) {
            if (this._contextMenu != null && this._contextMenu._dispose(), this._tour.get_currentTourStop() != null) {
              this._contextMenu = new un();
              var e = $t.create(pt.getLocalizedText(425, "Paste"));
              e.enabled = this.clipboardType === "WorldWideTelescope.Overlay", e.click = r.bind("_pasteMenu_Click", this), this._contextMenu.items.push(e), this._contextMenu._show(t);
            }
          },
          _addOpenRectangle_Click: function(t, e) {
            this.addShape("", 6);
          },
          _addStar_Click: function(t, e) {
            this.addShape("", 2);
          },
          _insertShapeCircle_Click: function(t, e) {
            this.addShape("", 0);
          },
          _insertShapeRectangle_Click: function(t, e) {
            this.addShape("", 1);
          },
          _insertShapeLine_Click: function(t, e) {
            this.addShape("", 5);
          },
          _insertDonut_Click: function(t, e) {
            this.addShape("", 3);
          },
          _addArrow_Click: function(t, e) {
            this.addShape("", 4);
          },
          showSelectionContextMenu: function(t) {
            if (this.get_focus() != null) {
              var e = this.selection.get_multiSelect();
              this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new un();
              var n = $t.create(pt.getLocalizedText(427, "Cut")), a = $t.create(pt.getLocalizedText(428, "Copy")), s = $t.create(pt.getLocalizedText(425, "Paste")), l = $t.create(pt.getLocalizedText(167, "Delete")), g = new sr(), _ = new sr(), m = new sr(), b = $t.create(pt.getLocalizedText(452, "Bring to Front")), y = $t.create(pt.getLocalizedText(453, "Send to Back")), M = $t.create(pt.getLocalizedText(454, "Bring Forward")), A = $t.create(pt.getLocalizedText(455, "Send Backward")), R = $t.create(pt.getLocalizedText(20, "Properties")), F = $t.create(pt.getLocalizedText(502, "Edit")), O = $t.create(pt.getLocalizedText(587, "Hyperlink")), B = this.get_focus().get_linkID();
              switch (this.get_focus().get_linkID()) {
                case "":
                case null:
                  B = " (" + pt.getLocalizedText(609, "No Link") + ")";
                  break;
                case "Next":
                  B = " (" + pt.getLocalizedText(610, "Next Slide") + ")";
                  break;
                case "Return":
                  B = " (" + pt.getLocalizedText(602, "Return to Caller") + ")";
                  break;
                default:
                  var H = this.get_tour().getTourStopIndexByID(this.get_focus().get_linkID());
                  H > -1 && (r.emptyString(this._tour.get_tourStops()[H].get_description()) ? B = r.format(" (" + pt.getLocalizedText(1340, "Slide") + " {0})", H) : B = " (" + this._tour.get_tourStops()[H].get_description() + ")");
                  break;
              }
              var K = $t.create(pt.getLocalizedText(588, "Animate")), J = $t.create(pt.getLocalizedText(589, "Link to Slide") + B), it = $t.create(pt.getLocalizedText(458, "Color/Opacity")), ot = $t.create(pt.getLocalizedText(630, "Flipbook Properties")), lt = $t.create(pt.getLocalizedText(1029, "Animation Tween Type")), gt = $t.create(pt.getLocalizedText(1030, "Linear")), ut = $t.create(pt.getLocalizedText(1031, "Ease In/Out")), St = $t.create(pt.getLocalizedText(1032, "Ease In")), mt = $t.create(pt.getLocalizedText(1033, "Ease Out")), Dt = $t.create(pt.getLocalizedText(1034, "Exponential")), yt = $t.create(pt.getLocalizedText(1035, "Slide Default")), ue = $t.create(pt.getLocalizedText(790, "Align")), _e = $t.create(pt.getLocalizedText(1333, "Top")), Qt = $t.create(pt.getLocalizedText(1334, "Bottom")), Ft = $t.create(pt.getLocalizedText(1335, "Left")), vi = $t.create(pt.getLocalizedText(1336, "Right")), Ei = $t.create(pt.getLocalizedText(1337, "Horizontal")), Li = $t.create(pt.getLocalizedText(1338, "Vertical")), ri = $t.create(pt.getLocalizedText(1339, "Centered"));
              switch (ue.dropDownItems.push(_e), ue.dropDownItems.push(Qt), ue.dropDownItems.push(Ft), ue.dropDownItems.push(vi), ue.dropDownItems.push(Ei), ue.dropDownItems.push(Li), ue.dropDownItems.push(ri), gt.tag = 0, ut.tag = 3, St.tag = 1, mt.tag = 2, Dt.tag = 4, yt.tag = 5, gt.click = r.bind("_interpolation_Click", this), ut.click = r.bind("_interpolation_Click", this), St.click = r.bind("_interpolation_Click", this), mt.click = r.bind("_interpolation_Click", this), Dt.click = r.bind("_interpolation_Click", this), yt.click = r.bind("_interpolation_Click", this), this.get_focus().get_interpolationType()) {
                case 0:
                  gt.checked = !0;
                  break;
                case 1:
                  St.checked = !0;
                  break;
                case 2:
                  mt.checked = !0;
                  break;
                case 3:
                  ut.checked = !0;
                  break;
                case 4:
                  Dt.checked = !0;
                  break;
                case 5:
                  yt.checked = !0;
                  break;
              }
              lt.dropDownItems.push(yt), lt.dropDownItems.push(gt), lt.dropDownItems.push(ut), lt.dropDownItems.push(St), lt.dropDownItems.push(mt), lt.dropDownItems.push(Dt), n.click = r.bind("_cutMenu_Click", this), a.click = r.bind("_copyMenu_Click", this), l.click = r.bind("_deleteMenu_Click", this), b.click = r.bind("_bringToFront_Click", this), y.click = r.bind("_sendToBack_Click", this), A.click = r.bind("_sendBackward_Click", this), M.click = r.bind("_bringForward_Click", this), R.click = r.bind("_properties_Click", this), F.click = r.bind("_editText_Click", this), O.click = r.bind("_url_Click", this), it.click = r.bind("_pickColor_Click", this), s.click = r.bind("_pasteMenu_Click", this), K.click = r.bind("_animateMenu_Click", this), ot.click = r.bind("_flipbookProperties_Click", this), J.click = r.bind("_linkID_Click", this), _e.click = r.bind("_alignTop_Click", this), Qt.click = r.bind("_alignBottom_Click", this), Ft.click = r.bind("_alignLeft_Click", this), vi.click = r.bind("_alignRight_Click", this), Ei.click = r.bind("_alignHorizon_Click", this), Li.click = r.bind("_alignVertical_Click", this), ri.click = r.bind("_alignCenter_Click", this), this._contextMenu.items.push(n), this._contextMenu.items.push(a), this._contextMenu.items.push(s), this._contextMenu.items.push(l), this._contextMenu.items.push(g), this._contextMenu.items.push(b), this._contextMenu.items.push(y), this._contextMenu.items.push(M), this._contextMenu.items.push(A), this._contextMenu.items.push(ue), this._contextMenu.items.push(_), s.enabled = !1, this._contextMenu.items.push(it), this._contextMenu.items.push(O), this._contextMenu.items.push(J), this._contextMenu.items.push(K), this._contextMenu.items.push(m), this._contextMenu.items.push(ot), K.checked = this.get_focus().get_animate(), this._contextMenu.items.push(lt), lt.enabled = this.get_focus().get_animate(), ot.visible = r.canCast(this.get_focus(), ba), m.visible = r.canCast(this.get_focus(), ba), e ? (O.visible = !1, J.visible = !1, R.visible = !1, ot.visible = !1, M.visible = !1, A.visible = !1) : ue.visible = !1, this._contextMenu.items.push(R), this.get_focus() != null && r.typeOf(this.get_focus()) === Zr && this._contextMenu.items.push(F), this._contextMenu._show(t);
            }
          },
          _editText_Click: function(t, e) {
            this.get_focus() != null && r.typeOf(this.get_focus()) === Zr && this._editText();
          },
          _alignVertical_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1036, "Vertical Align"), this._tour));
              for (var n = this.get_focus().get_x(), a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_x(n);
              }
            }
          },
          _alignHorizon_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1037, "Horizontal Align"), this._tour));
              for (var n = this.get_focus().get_y(), a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_y(n);
              }
            }
          },
          _alignCenter_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1038, "Align Centers"), this._tour));
              for (var n = this.get_focus().get_y(), a = this.get_focus().get_x(), s = r.enumerate(this.selection.selectionSet); s.moveNext(); ) {
                var l = s.current;
                l.set_y(n), l.set_x(a);
              }
            }
          },
          _alignRight_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1040, "Align Right"), this._tour));
              for (var n = this.get_focus().get_x() + this.get_focus().get_width() / 2, a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_x(n - s.get_width() / 2);
              }
            }
          },
          _alignLeft_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1041, "Align Left"), this._tour));
              for (var n = this.get_focus().get_x() - this.get_focus().get_width() / 2, a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_x(n + s.get_width() / 2);
              }
            }
          },
          _alignBottom_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1042, "Align Bottoms"), this._tour));
              for (var n = this.get_focus().get_y() + this.get_focus().get_height() / 2, a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_y(n - s.get_height() / 2);
              }
            }
          },
          _alignTop_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(1039, "Align Tops"), this._tour));
              for (var n = this.get_focus().get_y() - this.get_focus().get_height() / 2, a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_y(n + s.get_height() / 2);
              }
            }
          },
          _interpolation_Click: function(t, e) {
            var n = t;
            if (this.get_focus() != null)
              for (var a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_interpolationType(n.tag);
              }
          },
          _linkSlideChosen: function() {
            this.selectDialog.get_OK() && this.get_focus().set_linkID(this.selectDialog.get_id());
          },
          _linkID_Click: function(t, e) {
            this.selectDialog = new qs(this.get_focus().get_linkID()), this.nextSlideCallback(this.selectDialog, r.bind("_linkSlideChosen", this));
          },
          _flipbookProperties_Click: function(t, e) {
          },
          _animateMenu_Click: function(t, e) {
            if (this.get_focus() != null) {
              oe.push(new li(pt.getLocalizedText(588, "Animate"), this._tour));
              for (var n = !this.get_focus().get_animate(), a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.set_animate(n);
              }
            }
          },
          _url_Click: function(t, e) {
            var n = this;
            if (this.get_focus() != null) {
              var a = new Ba(pt.getLocalizedText(541, "Edit Hyperlink"), pt.getLocalizedText(542, "Url"), this.get_focus().get_url());
              a.show(Di.get_position(), function() {
                oe.push(new li(pt.getLocalizedText(541, "Edit Hyperlink"), n._tour)), n.get_focus().set_url(a.text);
              });
            }
          },
          _pickColor_Click: function(t, e) {
            var n = this, a = new Xs();
            a.color = this.get_focus().get_color(), a.callBack = function() {
              oe.push(new li(pt.getLocalizedText(543, "Edit Color"), n._tour));
              for (var s = r.enumerate(n.selection.selectionSet); s.moveNext(); ) {
                var l = s.current;
                l.set_color(a.color);
              }
            }, a.show(e);
          },
          _volume_Click: function(t, e) {
            var n = new Ao();
            n.volume = this.get_focus().get_volume(), n.showDialog(), this.get_focus().set_volume(n.volume);
          },
          _deleteMenu_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              oe.push(new li(pt.getLocalizedText(167, "Delete"), this._tour));
              for (var n = r.enumerate(this.selection.selectionSet); n.moveNext(); ) {
                var a = n.current;
                this._tour.get_currentTourStop().removeOverlay(a);
              }
              this.set_focus(null), this.clearSelection(), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
            }
          },
          _properties_Click: function(t, e) {
            this._tour == null || this._tour.get_currentTourStop() == null, oe.push(new li(pt.getLocalizedText(549, "Properties Edit"), this._tour));
            var n = new ko();
            n.overlay = this.get_focus(), n.showDialog(), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          },
          _bringForward_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              oe.push(new li(pt.getLocalizedText(454, "Bring Forward"), this._tour));
              for (var n = r.enumerate(this._getSortedSelection(!1)); n.moveNext(); ) {
                var a = n.current;
                this._tour.get_currentTourStop().bringForward(a);
              }
              Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
            }
          },
          _sendBackward_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              oe.push(new li(pt.getLocalizedText(455, "Send Backward"), this._tour));
              for (var n = r.enumerate(this._getSortedSelection(!0)); n.moveNext(); ) {
                var a = n.current;
                this._tour.get_currentTourStop().sendBackward(a);
              }
              Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
            }
          },
          _sendToBack_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              oe.push(new li(pt.getLocalizedText(453, "Send to Back"), this._tour));
              for (var n = r.enumerate(this._getSortedSelection(!0)); n.moveNext(); ) {
                var a = n.current;
                this._tour.get_currentTourStop().sendToBack(a);
              }
              Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
            }
          },
          _bringToFront_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              oe.push(new li(pt.getLocalizedText(452, "Bring to Front"), this._tour));
              for (var n = r.enumerate(this._getSortedSelection(!1)); n.moveNext(); ) {
                var a = n.current;
                this._tour.get_currentTourStop().bringToFront(a);
              }
              Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
            }
          },
          _getSortedSelection: function(t) {
            for (var e = [], n = r.enumerate(this.selection.selectionSet); n.moveNext(); ) {
              var a = n.current;
              e.push(a);
            }
            return t ? e.sort(function(s, l) {
              return -xt.compare(s.get_zOrder(), l.get_zOrder());
            }) : e.sort(function(s, l) {
              return xt.compare(s.get_zOrder(), l.get_zOrder());
            }), e;
          },
          _copyMenu_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              var n = new ra();
              n._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), n._writeStartElement("Overlays");
              for (var a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                s.saveToXml(n, !0);
              }
              n._writeEndElement(), this.clipboardData = n.body, this.clipboardType = "WorldWideTelescope.Overlay";
            }
          },
          _cutMenu_Click: function(t, e) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
              oe.push(new li(pt.getLocalizedText(427, "Cut"), this._tour)), this._copyMenu_Click(t, e);
              for (var n = r.enumerate(this.selection.selectionSet); n.moveNext(); ) {
                var a = n.current;
                this._tour.get_currentTourStop().removeOverlay(a);
              }
              this.set_focus(null), this.clearSelection(), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
            }
          },
          _pasteMenu_Click: function(t, e) {
            if (oe.push(new ea(pt.getLocalizedText(544, "Paste Object"), this._tour)), this.clipboardType === "WorldWideTelescope.Overlay") {
              var n = new DOMParser(), a = n.parseFromString(this.clipboardData, "text/xml");
              this.clearSelection();
              for (var s = xt.selectSingleNode(a, "Overlays"), l = r.enumerate(s.childNodes); l.moveNext(); ) {
                var g = l.current;
                if (g.nodeName === "Overlay") {
                  for (var _ = gi._fromXml(this._tour.get_currentTourStop(), g), m = !1, b = 0, y = 0, M = r.enumerate(this._tour.get_currentTourStop().get_overlays()); M.moveNext(); ) {
                    var A = M.current;
                    A.id === _.id && r.typeOf(A) === r.typeOf(_) && (m = !0, (y < A.get_y() || b < A.get_x()) && (b = A.get_x(), y = A.get_y()));
                  }
                  m && (_.set_x(b + 20), _.set_y(y + 20)), this._tour.get_currentTourStop().addOverlay(_), this.set_focus(_), this.selection.addSelection(this.get_focus()), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              }
            }
          },
          mouseClick: function(t, e) {
            return !!(Oi.currentEditor != null && Oi.currentEditor.mouseClick(t, e));
          },
          click: function(t, e) {
            return !!(Oi.currentEditor != null && Oi.currentEditor.click(t, e));
          },
          mouseDoubleClick: function(t, e) {
            return Oi.currentEditor != null && Oi.currentEditor.mouseDoubleClick(t, e) || this.get_focus() != null && r.typeOf(this.get_focus()) === Zr && this._editText(), !0;
          },
          _doneEditing: function() {
            oe.push(new li(pt.getLocalizedText(545, "Text Edit"), this._tour)), this.get_focus().set_width(0), this.get_focus().set_height(0), this.get_focus().set_color(this.get_focus().textObject.foregroundColor), this.get_focus().cleanUp();
          },
          _editText: function() {
            var t = this.get_focus().textObject;
            this.editTextCallback(t, r.bind("_doneEditing", this));
          },
          keyDown: function(t, e) {
            if (Oi.currentEditor != null && Oi.currentEditor.keyDown(t, e))
              return !0;
            var n = 1;
            switch (e.ctrlKey && (n = 10), e.keyCode) {
              case 65:
                e.ctrlKey && (this.clearSelection(), this.selection.addSelectionRange(this._tour.get_currentTourStop().get_overlays()), Vi._updateOverlayListSelection(this.selection), this._tour.get_currentTourStop().get_overlays().length > 0 && this.set_focus(this._tour.get_currentTourStop().get_overlays()[0]));
                break;
              case 90:
                e.ctrlKey && (oe.peekAction() ? Br._undoStep() : yi._beep());
                break;
              case 89:
                e.ctrlKey && (oe.peekRedoAction() ? Br._redoStep() : yi._beep());
                break;
              case 67:
                e.ctrlKey && this._copyMenu_Click(this, new r.EventArgs());
                break;
              case 86:
                e.ctrlKey && this._pasteMenu_Click(this, new r.EventArgs());
                break;
              case 88:
                e.ctrlKey && this._cutMenu_Click(this, new r.EventArgs());
                break;
              case 46:
                return this._deleteMenu_Click(null, null), !0;
              case 9:
                return e.shiftKey ? this._selectLast() : this._selectNext(), !0;
              case 37:
                if (this.get_focus() != null) {
                  for (var a = r.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                    var s = a.current;
                    if (e.shiftKey)
                      if (e.altKey)
                        s.get_width() > n && (oe.push(new li(pt.getLocalizedText(537, "Resize"), this._tour)), s.set_width(s.get_width() - n));
                      else {
                        var l = s.get_width() / s.get_height();
                        s.get_width() > n && s.get_height() > n * l && (oe.push(new li(pt.getLocalizedText(537, "Resize"), this._tour)), s.set_width(s.get_width() - n), s.set_height(s.get_height() - n * l));
                      }
                    else
                      e.altKey ? (oe.push(new li(pt.getLocalizedText(538, "Rotate"), this._tour)), s.set_rotationAngle(s.get_rotationAngle() - n)) : (oe.push(new li(pt.getLocalizedText(540, "Move"), this._tour)), s.set_x(s.get_x() - n));
                  }
                  return !0;
                }
                break;
              case 39:
                if (this.get_focus() != null) {
                  for (var g = r.enumerate(this.selection.selectionSet); g.moveNext(); ) {
                    var s = g.current;
                    if (e.shiftKey)
                      if (oe.push(new li(pt.getLocalizedText(537, "Resize"), this._tour)), e.altKey)
                        s.set_width(s.get_width() + n);
                      else {
                        var l = s.get_width() / s.get_height();
                        s.set_width(s.get_width() + n), s.set_height(s.get_height() + n * l);
                      }
                    else
                      e.altKey ? (oe.push(new li(pt.getLocalizedText(538, "Rotate"), this._tour)), s.set_rotationAngle(s.get_rotationAngle() + n)) : (oe.push(new li(pt.getLocalizedText(540, "Move"), this._tour)), s.set_x(s.get_x() + n));
                  }
                  return !0;
                }
                break;
              case 38:
                if (this.get_focus() != null) {
                  for (var _ = r.enumerate(this.selection.selectionSet); _.moveNext(); ) {
                    var s = _.current;
                    if (e.shiftKey)
                      if (oe.push(new li(pt.getLocalizedText(537, "Resize"), this._tour)), e.altKey)
                        s.set_height(s.get_height() + n);
                      else {
                        var l = s.get_width() / s.get_height();
                        s.set_width(s.get_width() + n), s.set_height(s.get_height() + n * l);
                      }
                    else
                      e.altKey || (oe.push(new li(pt.getLocalizedText(540, "Move"), this._tour)), s.set_y(s.get_y() - n));
                  }
                  return !0;
                }
                break;
              case 40:
                if (this.get_focus() != null) {
                  for (var m = r.enumerate(this.selection.selectionSet); m.moveNext(); ) {
                    var s = m.current;
                    if (e.shiftKey)
                      if (e.altKey)
                        s.get_height() > n && (oe.push(new li(pt.getLocalizedText(537, "Resize"), this._tour)), s.set_height(s.get_height() - n));
                      else {
                        var l = s.get_width() / s.get_height();
                        s.get_width() > n && s.get_height() > n * l && (oe.push(new li(pt.getLocalizedText(537, "Resize"), this._tour)), s.set_width(s.get_width() - n), s.set_height(s.get_height() - n * l));
                      }
                    else
                      e.altKey || (oe.push(new li(pt.getLocalizedText(540, "Move"), this._tour)), s.set_y(s.get_y() + n));
                  }
                  return !0;
                }
                break;
              case 34:
                if (e.altKey)
                  return this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1, Br._selectCurrent(), Br._ensureSelectedVisible()), !0;
                break;
              case 33:
                if (e.altKey)
                  return this._tour.get_currentTourstopIndex() > 0 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() - 1) + 1, Br._selectCurrent(), Br._ensureSelectedVisible()), !0;
                break;
            }
            return !1;
          },
          _selectNext: function() {
            this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getNextOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
          },
          _selectLast: function() {
            this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getPerviousOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
          },
          keyUp: function(t, e) {
            return !!(Oi.currentEditor != null && Oi.currentEditor.keyUp(t, e));
          },
          addPicture: function(t) {
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return !1;
            oe.push(new li(pt.getLocalizedText(546, "Insert Picture"), this._tour));
            var e = na.create(this._tour.get_currentTourStop(), t);
            return e.set_x(960), e.set_y(600), this._tour.get_currentTourStop().addOverlay(e), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
          },
          addFlipbook: function(t) {
            return !1;
          },
          addAudio: function(t, e) {
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return !1;
            var n = Oa.create(this._tour.get_currentTourStop(), t);
            return n.set_x(900), n.set_y(600), e ? this._tour.get_currentTourStop().set_musicTrack(n) : this._tour.get_currentTourStop().set_voiceTrack(n), !0;
          },
          addVideo: function(t) {
            return !0;
          },
          addText: function(t, e) {
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return !1;
            var n = Zr.create(e);
            return n.set_color(e.foregroundColor), n.set_x(960), n.set_y(600), oe.push(new li(pt.getLocalizedText(547, "Insert Text"), this._tour)), this._tour.get_currentTourStop().addOverlay(n), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
          },
          addOverlay: function(t) {
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return null;
            if (r.typeOf(t) === aa) {
              var e = t;
              if (e != null) {
                var n = aa._create(this._tour.get_currentTourStop(), e.get_shapeType());
                return n.set_width(e.get_width()), n.set_height(e.get_height()), n.set_x(this._contextPoint.x), n.set_y(this._contextPoint.y), n.set_color(e.get_color()), n.set_rotationAngle(e.get_rotationAngle()), this._tour.get_currentTourStop().addOverlay(n), n;
              }
            } else if (r.typeOf(t) === Zr) {
              var a = t;
              if (a != null) {
                var s = Zr.create(a.textObject);
                return s.set_x(this._contextPoint.x), s.set_y(this._contextPoint.y), s.set_color(a.get_color()), this._tour.get_currentTourStop().addOverlay(s), s;
              }
            } else if (r.typeOf(t) === na) {
              var l = t;
              if (l != null) {
                var g = l.copy(this._tour.get_currentTourStop());
                return g.set_x(this._contextPoint.x), g.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(g), g;
              }
            } else if (r.typeOf(t) === ba) {
              var _ = t;
              if (_ != null) {
                var g = _.copy(this._tour.get_currentTourStop());
                return g.set_x(this._contextPoint.x), g.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(g), g;
              }
            }
            return null;
          },
          addShape: function(t, e) {
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return !1;
            oe.push(new li(pt.getLocalizedText(548, "Insert Shape"), this._tour));
            var n = aa._create(this._tour.get_currentTourStop(), e);
            return n.set_width(200), n.set_height(200), e === 4 && n.set_height(n.get_height() / 2), e === 5 && n.set_height(12), n.set_x(960), n.set_y(600), this._tour.get_currentTourStop().addOverlay(n), this.set_focus(n), this.selection.setSelection(this.get_focus()), Vi._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
          },
          getCurrentColor: function() {
            return this._tour == null || this._tour.get_currentTourStop() == null ? this._defaultColor : this.get_focus() != null ? this.get_focus().get_color() : this._defaultColor;
          },
          setCurrentColor: function(t) {
            this._defaultColor = t, !(this._tour == null || this._tour.get_currentTourStop() == null) && this.get_focus() != null && this.get_focus().set_color(t);
          },
          dispose: function() {
            this._contextMenu != null && (this._contextMenu._dispose(), this._contextMenu = null);
          },
          hover: function(t) {
            return Oi.currentEditor != null && Oi.currentEditor.hover(t), !0;
          }
        };
        function Vi() {
        }
        Vi._updateOverlayList = function(t, e) {
        }, Vi._updateOverlayListSelection = function(t) {
        };
        var Qc = {};
        function Br() {
        }
        Br._ensureSelectedVisible = function() {
        }, Br._selectCurrent = function() {
        }, Br._undoStep = function() {
          oe.peekAction() && oe.stepBack();
        }, Br._redoStep = function() {
          oe.peekRedoAction() && oe.stepForward();
        };
        var th = {};
        function Hs() {
          this.target = null;
        }
        var eh = {};
        function xo() {
          this.tour = null, this.showAddButton = !1, this.selectedItems = null, this.selectedItem = -1, this.refreshCallback = null, this.multipleSelection = !1, this.hitType = !1;
        }
        var ih = {
          selectAll: function() {
            this.selectedItems = {};
            for (var t = 0; t < this.tour.get_tourStops().length; t++)
              this.selectedItems[t] = this.tour.get_tourStops()[t];
          },
          refresh: function() {
            this.refreshCallback != null && this.refreshCallback();
          },
          findItem: function(t) {
            return -1;
          },
          ensureSelectedVisible: function() {
          },
          ensureAddVisible: function() {
          }
        };
        function Fa() {
        }
        Fa.refreshUi = function() {
        };
        var rh = {};
        function qe() {
          this._overlayBlend = mn.create(!1, 1e3), this._tour = null, this._onTarget = !1, this._currentMasterSlide = null, this._callStack = new r.Stack(), this._leaveSettingsWhenStopped = !1;
        }
        qe.get_playing = function() {
          return qe._playing;
        }, qe.set_playing = function(t) {
          return qe._playing = t, t;
        }, qe.add_tourEnded = function(t) {
          qe.__tourEnded = r.bindAdd(qe.__tourEnded, t);
        }, qe.remove_tourEnded = function(t) {
          qe.__tourEnded = r.bindSub(qe.__tourEnded, t);
        };
        var nh = {
          render: function(t) {
            if (!(this._tour == null || this._tour.get_currentTourStop() == null || !qe._playing)) {
              if (t.save(), this.updateSlideStates(), !this._onTarget && (this._slideStartTime = r.now(), t.onTarget(this.get_tour().get_currentTourStop().get_target()))) {
                this._onTarget = !0, this._overlayBlend.set_state(!this.get_tour().get_currentTourStop().get_fadeInOverlays()), this._overlayBlend.set_targetState(!0), this._tour.get_currentTourStop().get_musicTrack() != null && (this._tour.get_currentTourStop().get_musicTrack().seek(0), this._tour.get_currentTourStop().get_musicTrack().play()), this._tour.get_currentTourStop().get_voiceTrack() != null && (this._tour.get_currentTourStop().get_voiceTrack().seek(0), this._tour.get_currentTourStop().get_voiceTrack().play());
                for (var e = "", n = r.enumerate(this._tour.get_currentTourStop().get_overlays()); n.moveNext(); ) {
                  var a = n.current;
                  if (a.get_name().toLowerCase() === "caption") {
                    var s = r.safeCast(a, Zr);
                    s != null && (e = s.textObject.text);
                  }
                  a.play();
                }
                P.setVisibleLayerList(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().get_endTarget() != null && this._tour.get_currentTourStop().get_endTarget().get_zoomLevel() !== -1 && (this._tour.get_currentTourStop().get_target().get_type(), t.viewMover = new Ds(this._tour.get_currentTourStop().get_target().get_camParams(), this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_duration() / 1e3, this._tour.get_currentTourStop().get_startTime(), this._tour.get_currentTourStop().get_endTime(), this._tour.get_currentTourStop().get_interpolationType())), X.tourSettings = this._tour.get_currentTourStop(), Q.set_now(this._tour.get_currentTourStop().get_startTime()), Q.set_syncToClock(!1), Z.scriptInterface._fireSlideChanged(e);
              }
              if (t.gl != null) {
                if (t.setupMatricesOverlays(), this._currentMasterSlide != null)
                  for (var l = r.enumerate(this._currentMasterSlide.get_overlays()); l.moveNext(); ) {
                    var a = l.current;
                    a.set_tweenFactor(1), a.draw3D(t, !1);
                  }
                if (this._onTarget)
                  for (var g = r.enumerate(this._tour.get_currentTourStop().get_overlays()); g.moveNext(); ) {
                    var a = g.current;
                    (a.get_name().toLowerCase() !== "caption" || Z.scriptInterface.get_showCaptions()) && (a.set_tweenFactor(_i.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), a.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : a.get_interpolationType())), a.draw3D(t, !1));
                  }
                t.restore();
              } else {
                t.device.scale(t.height / 1116, t.height / 1116);
                var _ = t.width / t.height;
                if (t.device.translate(-((1920 - _ * 1116) / 2), 0), this._currentMasterSlide != null)
                  for (var m = r.enumerate(this._currentMasterSlide.get_overlays()); m.moveNext(); ) {
                    var a = m.current;
                    a.set_tweenFactor(1), a.draw3D(t, !1);
                  }
                if (this._onTarget)
                  for (var b = r.enumerate(this._tour.get_currentTourStop().get_overlays()); b.moveNext(); ) {
                    var a = b.current;
                    (a.get_name().toLowerCase() !== "caption" || Z.scriptInterface.get_showCaptions()) && (a.set_tweenFactor(_i.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), a.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : a.get_interpolationType())), a.draw3D(t, !1));
                  }
                t.restore();
              }
            }
          },
          get_tour: function() {
            return this._tour;
          },
          set_tour: function(t) {
            return this._tour = t, t;
          },
          nextSlide: function() {
            if (this._tour.get_currentTourStop() != null)
              if (this._tour.get_currentTourStop().get_masterSlide())
                this._currentMasterSlide = this._tour.get_currentTourStop();
              else {
                this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
                for (var t = r.enumerate(this._tour.get_currentTourStop().get_overlays()); t.moveNext(); ) {
                  var e = t.current;
                  e.stop();
                }
              }
            if (this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 || this._tour.get_currentTourStop().get_isLinked()) {
              if (this._tour.get_currentTourStop().get_endTarget() != null && (Z.singleton.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), Z.singleton.set__mover(null)), this._onTarget = !1, this._tour.get_currentTourStop().get_isLinked())
                try {
                  switch (this._tour.get_currentTourStop().get_nextSlide()) {
                    case "Return":
                      this._callStack.count > 0 ? this.playFromTourstop(this._tour.get_tourStops()[this._callStack.pop()]) : this._tour.set_currentTourstopIndex(this._tour.get_tourStops().length - 1);
                      break;
                    default:
                      this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_nextSlide())]);
                      break;
                  }
                } catch {
                  this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                }
              else
                this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
              this._currentMasterSlide != null && this._tour.get_currentTourStop().get_masterSlide() && this._stopCurrentMaster();
              var n = !1;
              switch (this._tour.get_currentTourStop().get__transition()) {
                case 0:
                  break;
                case 1:
                  n = !0;
                  break;
                case 2:
                  n = !0;
                  break;
                case 3:
                  n = !0;
                  break;
                case 5:
                  n = !0;
                  break;
                case 4:
                  n = !0;
                  break;
              }
              Z.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, n, !1), this._slideStartTime = r.now(), X.tourSettings = this._tour.get_currentTourStop(), Q.set_now(this._tour.get_currentTourStop().get_startTime()), Q.set_syncToClock(!1);
            } else
              this._stopCurrentMaster(), qe._playing = !1, X.get_current().autoRepeatTour ? (this._tour.set_currentTourstopIndex(-1), this.play()) : (Z.singleton._freezeView(), qe.__tourEnded != null && qe.__tourEnded(this, new r.EventArgs()), Z.singleton._hideUI(!1), Z.scriptInterface._fireTourEnded());
          },
          _stopCurrentMaster: function() {
            if (this._currentMasterSlide != null) {
              this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
              for (var t = r.enumerate(this._currentMasterSlide.get_overlays()); t.moveNext(); ) {
                var e = t.current;
                e.stop();
              }
              this._currentMasterSlide = null;
            }
          },
          get_leaveSettingsWhenStopped: function() {
            return this._leaveSettingsWhenStopped;
          },
          set_leaveSettingsWhenStopped: function(t) {
            return this._leaveSettingsWhenStopped = t, t;
          },
          play: function() {
            if (this._tour != null) {
              if (qe._playing ? this.stop(!0) : qe._playing = !0, Z.singleton._hideUI(!0), qe._playing = !0, this._tour.get_tourStops().length > 0) {
                this._onTarget = !1, this._tour.get_currentTourstopIndex() === -1 && this._tour.set_currentTourStop(this._tour.get_tourStops()[0]);
                for (var t = r.enumerate(this._tour.get_tourStops()); t.moveNext(); ) {
                  var e = t.current;
                  e.get_musicTrack() != null && e.get_musicTrack().prepMultimedia(), e.get_voiceTrack() != null && e.get_voiceTrack().prepMultimedia();
                  for (var n = r.enumerate(e.get_overlays()); n.moveNext(); ) {
                    var a = n.current;
                    a.prepMultimedia();
                  }
                }
                this._tour.get_currentTourstopIndex() > 0 && this._playMasterForCurrent(), Z.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1);
              }
              this._slideStartTime = r.now(), qe._playing = !0;
            }
          },
          _playMasterForCurrent: function() {
            if (!this._tour.get_currentTourStop().get_masterSlide()) {
              var t = this._tour.elapsedTimeSinceLastMaster(this._tour.get_currentTourstopIndex());
              if (t != null) {
                var e = t.duration;
                this._currentMasterSlide = t.master, this._currentMasterSlide.get_musicTrack() != null && (this._currentMasterSlide.get_musicTrack().seek(e), this._currentMasterSlide.get_musicTrack().play()), this._currentMasterSlide.get_voiceTrack() != null && (this._currentMasterSlide.get_voiceTrack().seek(e), this._currentMasterSlide.get_voiceTrack().play());
                for (var n = r.enumerate(this._currentMasterSlide.get_overlays()); n.moveNext(); ) {
                  var a = n.current;
                  a.seek(e), a.play();
                }
              }
            }
          },
          stop: function(t) {
            if (qe._switchedToFullScreen, this._leaveSettingsWhenStopped || (X.tourSettings = null), qe._playing = !1, this._tour.get_currentTourStop() != null) {
              this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
              for (var e = r.enumerate(this._tour.get_currentTourStop().get_overlays()); e.moveNext(); ) {
                var n = e.current;
                n.stop();
              }
            }
            if (this._currentMasterSlide != null) {
              this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
              for (var a = r.enumerate(this._currentMasterSlide.get_overlays()); a.moveNext(); ) {
                var n = a.current;
                n.stop();
              }
            }
            Z.singleton._hideUI(qe.noRestoreUIOnStop), Z.scriptInterface._fireTourEnded();
          },
          updateSlideStates: function() {
            var t = !1, e = r.now() - this._slideStartTime;
            if (e > this._tour.get_currentTourStop().get_duration() && qe._playing && (this.nextSlide(), t = !0), e = r.now() - this._slideStartTime, this._tour.get_currentTourStop() != null) {
              this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, e / this._tour.get_currentTourStop().get_duration())), this._tour.get_currentTourStop().faderOpacity = 0;
              var n = this._tour.get_currentTourStop().get_tweenPosition() * this._tour.get_currentTourStop().get_duration() / 1e3;
              switch (t && Z.singleton.set_crossFadeFrame(!1), this._tour.get_currentTourStop().get__transition()) {
                case 0:
                  this._tour.get_currentTourStop().faderOpacity = 0, Z.singleton.set_crossFadeFrame(!1);
                  break;
                case 2:
                  n < n - this._tour.get_currentTourStop().get__transitionHoldTime() ? (Z.singleton.set_crossFadeFrame(!0), this._tour.get_currentTourStop().faderOpacity = 1) : (this._tour.get_currentTourStop().faderOpacity = 0, Z.singleton.set_crossFadeFrame(!1));
                  break;
                case 1:
                  Z.singleton.set_crossFadeFrame(!0);
                  var a = Math.max(0, 1 - Math.min(1, (n - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime()));
                  this._tour.get_currentTourStop().faderOpacity = a;
                  break;
                case 3:
                case 4:
                  Z.singleton.set_crossFadeFrame(!1);
                  var a = Math.max(0, 1 - Math.max(0, n - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime());
                  this._tour.get_currentTourStop().faderOpacity = a;
                  break;
                case 5:
                  Z.singleton.set_crossFadeFrame(!1);
                  break;
              }
              if (!this._tour.get_currentTourStop().get_isLinked() && this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1) {
                var s = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transition(), l = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transitionOutTime();
                switch (s) {
                  case 5:
                  case 3:
                    if (!this._tour.get_currentTourStop().faderOpacity) {
                      Z.singleton.set_crossFadeFrame(!1);
                      var a = Math.max(0, 1 - Math.min(1, (this._tour.get_currentTourStop().get_duration() / 1e3 - n) / l));
                      this._tour.get_currentTourStop().faderOpacity = a;
                    }
                    break;
                }
              }
            }
          },
          updateTweenPosition: function(t) {
            var e = r.now() - this._slideStartTime;
            return t > -1 ? this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, t)) : this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, e / this._tour.get_currentTourStop().get_duration()));
          },
          close: function() {
            this._tour != null && (qe.get_playing() && this.stop(qe._switchedToFullScreen), this._tour = null);
          },
          mouseDown: function(t, e) {
            var n;
            if (n = this.pointToView(Mt.create(e.offsetX, e.offsetY)), this._tour == null || this._tour.get_currentTourStop() == null)
              return !1;
            for (var a = this._tour.get_currentTourStop().get_overlays().length - 1; a >= 0; a--)
              if (this._tour.get_currentTourStop().get_overlays()[a].hitTest(n)) {
                if (!r.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_url())) {
                  var s = this._tour.get_currentTourStop().get_overlays()[a];
                  return xt._openUrl(s.get_url()), !0;
                }
                if (!r.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_linkID()))
                  return this._callStack.push(this._tour.get_currentTourstopIndex()), this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_overlays()[a].get_linkID())]), !0;
              }
            return !1;
          },
          mouseUp: function(t, e) {
            return !1;
          },
          mouseMove: function(t, e) {
            var n;
            try {
              n = this.pointToView(Mt.create(e.offsetX, e.offsetY));
            } catch {
              return !1;
            }
            if (this._tour == null || this._tour.get_currentTourStop() == null)
              return !1;
            for (var a = this._tour.get_currentTourStop().get_overlays().length - 1; a >= 0; a--)
              if (this._tour.get_currentTourStop().get_overlays()[a].hitTest(n) && (!r.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_url()) || !r.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_linkID())))
                return !0;
            return !1;
          },
          mouseClick: function(t, e) {
            return !1;
          },
          click: function(t, e) {
            return !1;
          },
          mouseDoubleClick: function(t, e) {
            return !1;
          },
          keyDown: function(t, e) {
            switch (e.keyCode) {
              case 27:
                return this.stop(qe._switchedToFullScreen), Z.singleton._closeTour(), !0;
              case 32:
                return this.pauseTour(), !0;
              case 39:
                return this._playNextSlide(), !0;
              case 37:
                return this._playPreviousSlide(), !0;
              case 35:
                return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_tourStops().length - 1]), !0;
              case 36:
                return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[0]), !0;
            }
            return !1;
          },
          _playNextSlide: function() {
            this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1]);
          },
          _playPreviousSlide: function() {
            this._tour.get_currentTourstopIndex() > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() - 1]);
          },
          playFromTourstop: function(t) {
            this.stop(!0), this._tour.set_currentTourStop(t), Z.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), Q.set_now(this._tour.get_currentTourStop().get_startTime()), Q.set_syncToClock(!1), this.play();
          },
          pauseTour: function() {
            qe._playing ? (this.stop(qe._switchedToFullScreen), Z.singleton._freezeView(), Z.scriptInterface._fireTourPaused()) : (this.play(), Z.scriptInterface._fireTourResume());
          },
          keyUp: function(t, e) {
            return !1;
          },
          hover: function(t) {
            return !!qe._playing;
          },
          pointToView: function(t) {
            var e = Z.singleton.canvas.height, n = Z.singleton.canvas.width, a = n / e * 1116, s = t.x / n * a - (a - 1920) / 2, l = t.y / e * 1116;
            return Mt.create(s, l);
          }
        };
        function Lo(t, e) {
          this.duration = 0, this.master = t, this.duration = e;
        }
        var ah = {};
        function Mr() {
          this._tourStopType = 0, this._keyFramed = !1, this._tweenPosition = 0, this.faderOpacity = 0, this._owner = null, this._transition = 0, this._transitionTime = 2, this._transitionHoldTime = 4, this._transitionOutTime = 2, this._nextSlide = "Next", this._fadeInOverlays = !1, this._masterSlide = !1, this._id = "", this._description = "", this._name = "", this._duration = 1e4, this._interpolationType = 0, this._hasLocation = !0, this._hasTime = !0, this._startTime = Q.get_now(), this._endTime = Q.get_now(), this._actualPlanetScale = X.get_current().get_actualPlanetScale(), this._locationAltitude = X.get_current().get_locationAltitude(), this._locationLat = X.get_current().get_locationLat(), this._locationLng = X.get_current().get_locationLng(), this._showClouds = X.get_current().get_showClouds(), this._showConstellationBoundries = X.get_current().get_showConstellationBoundries(), this._showConstellationFigures = X.get_current().get_showConstellationFigures(), this._showConstellationSelection = X.get_current().get_showConstellationSelection(), this._showEcliptic = X.get_current().get_showEcliptic(), this._showElevationModel = X.get_current().get_showElevationModel(), this._showFieldOfView = X.get_current().get_showFieldOfView(), this._showGrid = X.get_current().get_showGrid(), this._showHorizon = X.get_current().get_showHorizon(), this._showHorizonPanorama = X.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = X.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = X.get_current().get_showSolarSystem(), this._fovTelescope = X.get_current().get_fovTelescope(), this._fovEyepiece = X.get_current().get_fovEyepiece(), this._fovCamera = X.get_current().get_fovCamera(), this._localHorizonMode = X.get_current().get_localHorizonMode(), this._galacticMode = X.get_current().get_galacticMode(), this._solarSystemStars = X.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = X.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = X.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = X.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = X.get_current().get_solarSystemOverlays(), this._solarSystemLighting = X.get_current().get_solarSystemLighting(), this._solarSystemScale = X.get_current().get_solarSystemScale(), this._solarSystemMultiRes = X.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = X.get_current().get_showEquatorialGridText(), this._showGalacticGrid = X.get_current().get_showGalacticGrid(), this._showGalacticGridText = X.get_current().get_showGalacticGridText(), this._showEclipticGrid = X.get_current().get_showEclipticGrid(), this._showEclipticGridText = X.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = X.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = X.get_current().get_showAltAzGrid(), this._showAltAzGridText = X.get_current().get_showAltAzGridText(), this._showPrecessionChart = X.get_current().get_showPrecessionChart(), this._showConstellationPictures = X.get_current().get_showConstellationPictures(), this._showConstellationLabels = X.get_current().get_showConstellationLabels(), this._solarSystemCMB = X.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = X.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = X.get_current().get_solarSystemPlanets(), this._showEarthSky = X.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = X.get_current().get_solarSystemMinorOrbits(), this._constellationsEnabled = "", this._constellationFiguresFilter = X.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = X.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = X.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = X.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = X.get_current().get_showSkyOverlays(), this._showConstellations = X.get_current().get_showConstellations(), this._showSkyNode = X.get_current().get_showSkyNode(), this._showSkyGrids = X.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = X.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = X.get_current().get_earthCutawayView(), this._showISSModel = X.get_current().get_showISSModel(), this._milkyWayModel = X.get_current().get_milkyWayModel(), this._minorPlanetsFilter = X.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = X.get_current().get_planetOrbitsFilter(), this._thumbnailString = "", this._thumbnail = null, this.layers = {}, this._overlays = [], this._musicTrack = null, this._voiceTrack = null, this._eclipticGridColor = Pt.get_green(), this._galacticGridColor = Pt.get_cyan(), this._altAzGridColor = Pt.get_magenta(), this._precessionChartColor = Pt.get_orange(), this._eclipticColor = Pt.get_blue(), this._equatorialGridColor = Pt.get_white(), this._constellationLabelsHeight = 80, this._id = er.newGuid().toString();
        }
        Mr.create = function(t) {
          var e = new Mr();
          return e._target = t, e;
        }, Mr.getXmlText = function(t) {
          var e = new ra();
          return e._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), t._saveToXml(e, !0), e._close(), e.body;
        }, Mr._fromXml = function(t, e) {
          try {
            var n = new Mr();
            n._owner = t, n.set_id(e.attributes.getNamedItem("Id").nodeValue), n.set_name(e.attributes.getNamedItem("Name").nodeValue), n.set_description(e.attributes.getNamedItem("Description").nodeValue), n._thumbnailString = e.attributes.getNamedItem("Thumbnail").nodeValue, n._duration = xt.parseTimeSpan(e.attributes.getNamedItem("Duration").nodeValue), e.attributes.getNamedItem("Master") != null && (n._masterSlide = r.boolean(e.attributes.getNamedItem("Master").nodeValue)), e.attributes.getNamedItem("NextSlide") != null && (n._nextSlide = e.attributes.getNamedItem("NextSlide").nodeValue), e.attributes.getNamedItem("InterpolationType") != null && n.set_interpolationType(we.parse("InterpolationType", e.attributes.getNamedItem("InterpolationType").nodeValue)), n._fadeInOverlays = !0, e.attributes.getNamedItem("FadeInOverlays") != null && (n._fadeInOverlays = r.boolean(e.attributes.getNamedItem("FadeInOverlays").nodeValue)), e.attributes.getNamedItem("Transition") != null && (n._transition = we.parse("TransitionType", e.attributes.getNamedItem("Transition").nodeValue)), e.attributes.getNamedItem("HasLocation") != null && (n._hasLocation = r.boolean(e.attributes.getNamedItem("HasLocation").nodeValue)), n._hasLocation && (e.attributes.getNamedItem("LocationAltitude") != null && (n._locationAltitude = parseFloat(e.attributes.getNamedItem("LocationAltitude").nodeValue)), e.attributes.getNamedItem("LocationLat") != null && (n._locationLat = parseFloat(e.attributes.getNamedItem("LocationLat").nodeValue)), e.attributes.getNamedItem("LocationLng") != null && (n._locationLng = parseFloat(e.attributes.getNamedItem("LocationLng").nodeValue))), e.attributes.getNamedItem("HasTime") != null && (n._hasTime = r.boolean(e.attributes.getNamedItem("HasTime").nodeValue), n._hasTime && (e.attributes.getNamedItem("StartTime") != null && (n._startTime = r.date(e.attributes.getNamedItem("StartTime").nodeValue + " UTC")), e.attributes.getNamedItem("EndTime") != null && (n._endTime = r.date(e.attributes.getNamedItem("EndTime").nodeValue + " UTC")))), e.attributes.getNamedItem("ActualPlanetScale") != null && (n._actualPlanetScale = r.boolean(e.attributes.getNamedItem("ActualPlanetScale").nodeValue)), e.attributes.getNamedItem("ShowClouds") != null && (n._showClouds = r.boolean(e.attributes.getNamedItem("ShowClouds").nodeValue)), e.attributes.getNamedItem("ShowConstellationBoundries") != null && (n._showConstellationBoundries = r.boolean(e.attributes.getNamedItem("ShowConstellationBoundries").nodeValue)), e.attributes.getNamedItem("ShowConstellationFigures") != null && (n._showConstellationFigures = r.boolean(e.attributes.getNamedItem("ShowConstellationFigures").nodeValue)), e.attributes.getNamedItem("ShowConstellationSelection") != null && (n._showConstellationSelection = r.boolean(e.attributes.getNamedItem("ShowConstellationSelection").nodeValue)), e.attributes.getNamedItem("ShowEcliptic") != null && (n._showEcliptic = r.boolean(e.attributes.getNamedItem("ShowEcliptic").nodeValue)), e.attributes.getNamedItem("EclipticColor") != null && (n._eclipticColor = j.load(e.attributes.getNamedItem("EclipticColor").nodeValue)), e.attributes.getNamedItem("ShowElevationModel") != null && (n._showElevationModel = r.boolean(e.attributes.getNamedItem("ShowElevationModel").nodeValue)), e.attributes.getNamedItem("ShowFieldOfView") != null && (n._showFieldOfView = r.boolean(e.attributes.getNamedItem("ShowFieldOfView").nodeValue)), e.attributes.getNamedItem("ShowGrid") != null && (n._showGrid = r.boolean(e.attributes.getNamedItem("ShowGrid").nodeValue)), e.attributes.getNamedItem("ShowHorizon") != null && (n._showHorizon = r.boolean(e.attributes.getNamedItem("ShowHorizon").nodeValue)), e.attributes.getNamedItem("ShowHorizonPanorama") != null && (n._showHorizonPanorama = r.boolean(e.attributes.getNamedItem("ShowHorizonPanorama").nodeValue)), e.attributes.getNamedItem("ShowMoonsAsPointSource") != null && (n._showMoonsAsPointSource = r.boolean(e.attributes.getNamedItem("ShowMoonsAsPointSource").nodeValue)), e.attributes.getNamedItem("ShowSolarSystem") != null && (n._showSolarSystem = r.boolean(e.attributes.getNamedItem("ShowSolarSystem").nodeValue)), e.attributes.getNamedItem("FovTelescope") != null && (n._fovTelescope = parseInt(e.attributes.getNamedItem("FovTelescope").nodeValue)), e.attributes.getNamedItem("FovEyepiece") != null && (n._fovEyepiece = parseInt(e.attributes.getNamedItem("FovEyepiece").nodeValue)), e.attributes.getNamedItem("FovCamera") != null && (n._fovCamera = parseInt(e.attributes.getNamedItem("FovCamera").nodeValue)), e.attributes.getNamedItem("LocalHorizonMode") != null && (n._localHorizonMode = r.boolean(e.attributes.getNamedItem("LocalHorizonMode").nodeValue)), e.attributes.getNamedItem("GalacticMode") != null && (n._galacticMode = r.boolean(e.attributes.getNamedItem("GalacticMode").nodeValue)), e.attributes.getNamedItem("SolarSystemStars") != null && (n._solarSystemStars = r.boolean(e.attributes.getNamedItem("SolarSystemStars").nodeValue)), e.attributes.getNamedItem("SolarSystemMilkyWay") != null && (n._solarSystemMilkyWay = r.boolean(e.attributes.getNamedItem("SolarSystemMilkyWay").nodeValue)), e.attributes.getNamedItem("SolarSystemCosmos") != null && (n._solarSystemCosmos = r.boolean(e.attributes.getNamedItem("SolarSystemCosmos").nodeValue)), e.attributes.getNamedItem("SolarSystemOrbits") != null && (n._solarSystemOrbits = r.boolean(e.attributes.getNamedItem("SolarSystemOrbits").nodeValue)), e.attributes.getNamedItem("SolarSystemOverlays") != null && (n._solarSystemOverlays = r.boolean(e.attributes.getNamedItem("SolarSystemOverlays").nodeValue)), e.attributes.getNamedItem("SolarSystemLighting") != null && (n._solarSystemLighting = r.boolean(e.attributes.getNamedItem("SolarSystemLighting").nodeValue)), e.attributes.getNamedItem("SolarSystemScale") != null && (n._solarSystemScale = parseInt(e.attributes.getNamedItem("SolarSystemScale").nodeValue)), e.attributes.getNamedItem("SolarSystemMultiRes") != null && (n._solarSystemMultiRes = r.boolean(e.attributes.getNamedItem("SolarSystemMultiRes").nodeValue)), e.attributes.getNamedItem("ShowEquatorialGridText") != null && (n._showEquatorialGridText = r.boolean(e.attributes.getNamedItem("ShowEquatorialGridText").nodeValue)), e.attributes.getNamedItem("EquatorialGridColor") != null && (n._equatorialGridColor = j.load(e.attributes.getNamedItem("EquatorialGridColor").nodeValue)), e.attributes.getNamedItem("ShowGalacticGrid") != null && (n._showGalacticGrid = r.boolean(e.attributes.getNamedItem("ShowGalacticGrid").nodeValue)), e.attributes.getNamedItem("ShowGalacticGridText") != null && (n._showGalacticGridText = r.boolean(e.attributes.getNamedItem("ShowGalacticGridText").nodeValue)), e.attributes.getNamedItem("GalacticGridColor") != null && (n._galacticGridColor = j.load(e.attributes.getNamedItem("GalacticGridColor").nodeValue)), e.attributes.getNamedItem("ShowEclipticGrid") != null && (n._showEclipticGrid = r.boolean(e.attributes.getNamedItem("ShowEclipticGrid").nodeValue)), e.attributes.getNamedItem("ShowEclipticGridText") != null && (n._showEclipticGridText = r.boolean(e.attributes.getNamedItem("ShowEclipticGridText").nodeValue)), e.attributes.getNamedItem("EclipticGridColor") != null && (n._eclipticGridColor = j.load(e.attributes.getNamedItem("EclipticGridColor").nodeValue)), e.attributes.getNamedItem("ShowEclipticOverviewText") != null && (n._showEclipticOverviewText = r.boolean(e.attributes.getNamedItem("ShowEclipticOverviewText").nodeValue)), e.attributes.getNamedItem("ShowAltAzGrid") != null && (n._showAltAzGrid = r.boolean(e.attributes.getNamedItem("ShowAltAzGrid").nodeValue)), e.attributes.getNamedItem("ShowAltAzGridText") != null && (n._showAltAzGridText = r.boolean(e.attributes.getNamedItem("ShowAltAzGridText").nodeValue)), e.attributes.getNamedItem("AltAzGridColor") != null && (n._altAzGridColor = j.load(e.attributes.getNamedItem("AltAzGridColor").nodeValue)), e.attributes.getNamedItem("ShowPrecessionChart") != null && (n._showPrecessionChart = r.boolean(e.attributes.getNamedItem("ShowPrecessionChart").nodeValue)), e.attributes.getNamedItem("PrecessionChartColor") != null && (n._precessionChartColor = j.load(e.attributes.getNamedItem("PrecessionChartColor").nodeValue)), e.attributes.getNamedItem("ShowConstellationPictures") != null && (n._showConstellationPictures = r.boolean(e.attributes.getNamedItem("ShowConstellationPictures").nodeValue)), e.attributes.getNamedItem("ShowConstellationLabels") != null && (n._showConstellationLabels = r.boolean(e.attributes.getNamedItem("ShowConstellationLabels").nodeValue)), e.attributes.getNamedItem("SolarSystemCMB") != null && (n._solarSystemCMB = r.boolean(e.attributes.getNamedItem("SolarSystemCMB").nodeValue)), e.attributes.getNamedItem("SolarSystemMinorPlanets") != null && (n._solarSystemMinorPlanets = r.boolean(e.attributes.getNamedItem("SolarSystemMinorPlanets").nodeValue)), e.attributes.getNamedItem("SolarSystemPlanets") != null && (n._solarSystemPlanets = r.boolean(e.attributes.getNamedItem("SolarSystemPlanets").nodeValue)), e.attributes.getNamedItem("ShowEarthSky") != null && (n._showEarthSky = r.boolean(e.attributes.getNamedItem("ShowEarthSky").nodeValue)), e.attributes.getNamedItem("SolarSystemMinorOrbits") != null && (n._solarSystemMinorOrbits = r.boolean(e.attributes.getNamedItem("SolarSystemMinorOrbits").nodeValue)), e.attributes.getNamedItem("ShowSkyOverlays") != null ? n._showSkyOverlays = r.boolean(e.attributes.getNamedItem("ShowSkyOverlays").nodeValue) : n._showSkyOverlays = !0, e.attributes.getNamedItem("ShowConstellations") != null ? n._showConstellations = r.boolean(e.attributes.getNamedItem("ShowConstellations").nodeValue) : n._showConstellations = !0, e.attributes.getNamedItem("ShowSkyNode") != null ? n._showSkyNode = r.boolean(e.attributes.getNamedItem("ShowSkyNode").nodeValue) : n._showSkyNode = !0, e.attributes.getNamedItem("ShowSkyGrids") != null ? n._showSkyGrids = r.boolean(e.attributes.getNamedItem("ShowSkyGrids").nodeValue) : n._showSkyGrids = !0, e.attributes.getNamedItem("ShowSkyOverlaysIn3d") != null && (n._showSkyOverlaysIn3d = r.boolean(e.attributes.getNamedItem("ShowSkyOverlaysIn3d").nodeValue)), e.attributes.getNamedItem("EarthCutawayView") != null && (n._earthCutawayView = r.boolean(e.attributes.getNamedItem("EarthCutawayView").nodeValue)), e.attributes.getNamedItem("ShowISSModel") != null && (n._showISSModel = r.boolean(e.attributes.getNamedItem("ShowISSModel").nodeValue)), e.attributes.getNamedItem("MilkyWayModel") != null && (n._milkyWayModel = r.boolean(e.attributes.getNamedItem("MilkyWayModel").nodeValue)), e.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? n._constellationBoundariesFilter = ke.parse(e.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : n._constellationBoundariesFilter = ke.get_allConstellation(), e.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? n._constellationFiguresFilter = ke.parse(e.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : n._constellationFiguresFilter = new ke(), e.attributes.getNamedItem("ConstellationNamesFilter") != null ? n._constellationNamesFilter = ke.parse(e.attributes.getNamedItem("ConstellationNamesFilter").nodeValue) : n._constellationNamesFilter = new ke(), e.attributes.getNamedItem("ConstellationArtFilter") != null ? n._constellationArtFilter = ke.parse(e.attributes.getNamedItem("ConstellationArtFilter").nodeValue) : n._constellationArtFilter = new ke(), e.attributes.getNamedItem("MinorPlanetsFilter") != null && (n._minorPlanetsFilter = parseInt(e.attributes.getNamedItem("MinorPlanetsFilter").nodeValue)), e.attributes.getNamedItem("PlanetOrbitsFilter") != null && (n._planetOrbitsFilter = parseInt(e.attributes.getNamedItem("PlanetOrbitsFilter").nodeValue));
            var a = xt.selectSingleNode(e, "Place");
            n._target = fr._fromXml(a);
            var s = xt.selectSingleNode(e, "EndTarget");
            s != null && (n._endTarget = fr._fromXml(s));
            for (var l = xt.selectSingleNode(e, "Overlays"), g = r.enumerate(l.childNodes); g.moveNext(); ) {
              var _ = g.current;
              _.nodeName === "Overlay" && n.addOverlay(gi._fromXml(n, _));
            }
            var m = xt.selectSingleNode(e, "MusicTrack");
            m != null && (n._musicTrack = gi._fromXml(n, xt.selectSingleNode(m, "Overlay")));
            var b = xt.selectSingleNode(e, "VoiceTrack");
            b != null && (n._voiceTrack = gi._fromXml(n, xt.selectSingleNode(b, "Overlay")));
            var y = xt.selectSingleNode(e, "VisibleLayers");
            return y != null && n._loadLayerList(y), n._thumbnail = t.getCachedTexture(r.format("{0}.thumb.png", n._id), function() {
              var M = 0;
            }), n;
          } catch (M) {
            return Z.scriptInterface._fireTourError(M), null;
          }
        };
        var sh = {
          get_keyFramed: function() {
            return this._keyFramed;
          },
          get_tourStopType: function() {
            return this._target.get_backgroundImageset() != null ? this._target.get_backgroundImageset().get_dataSetType() : this._tourStopType;
          },
          set_tourStopType: function(t) {
            return this._target.get_backgroundImageset() != null && this._target.get_backgroundImageset().get_dataSetType() !== t && this._target.set_backgroundImageset(null), this._tourStopType = t, t;
          },
          get_tweenPosition: function() {
            return this._tweenPosition;
          },
          set_tweenPosition: function(t) {
            return this._tweenPosition !== t && (this._tweenPosition = Math.max(0, Math.min(1, t)), this.updateTweenPosition()), t;
          },
          updateTweenPosition: function() {
            this.get_keyFramed();
          },
          copy: function() {
            var t = new ra();
            t._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), this._saveToXml(t, !0);
            try {
              var e = new DOMParser(), n = e.parseFromString(t.body, "text/xml"), a = xt.selectSingleNode(n, "TourStop"), s = Mr._fromXml(this.get_owner(), a);
              return s.set_id(er.newGuid().toString()), s;
            } catch {
            }
            return null;
          },
          get_owner: function() {
            return this._owner;
          },
          set_owner: function(t) {
            return this._owner = t, t;
          },
          get__transition: function() {
            return this._transition;
          },
          set__transition: function(t) {
            return this._transition !== t && (this._transition = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get__transitionTime: function() {
            return this._transitionTime;
          },
          set__transitionTime: function(t) {
            return this._transitionTime !== t && (this._transitionTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get__transitionHoldTime: function() {
            return this._transitionHoldTime;
          },
          set__transitionHoldTime: function(t) {
            return this._transitionHoldTime !== t && (this._transitionHoldTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get__transitionOutTime: function() {
            return this._transitionOutTime;
          },
          set__transitionOutTime: function(t) {
            return this._transitionOutTime !== t && (this._transitionOutTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_nextSlide: function() {
            return this._nextSlide;
          },
          set_nextSlide: function(t) {
            return this._nextSlide = t, t;
          },
          get_isLinked: function() {
            return !(this._nextSlide == null || this._nextSlide === "Next" || !this._nextSlide);
          },
          get_fadeInOverlays: function() {
            return this._fadeInOverlays;
          },
          set_fadeInOverlays: function(t) {
            return this._fadeInOverlays = t, t;
          },
          get_masterSlide: function() {
            return this._masterSlide;
          },
          set_masterSlide: function(t) {
            return this._masterSlide !== t && (this._masterSlide = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_id: function() {
            return this._id;
          },
          set_id: function(t) {
            return this._id = t, this._owner != null && this._owner.set_tourDirty(!0), t;
          },
          toString: function() {
            return this._target != null ? this.get_target().get_name() : this._description;
          },
          get_description: function() {
            return this._description;
          },
          set_description: function(t) {
            return this._description !== t && (this._description = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_name: function() {
            return this._target != null ? this._target.get_name() : this._name;
          },
          set_name: function(t) {
            return this._name !== t && (this._name = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_duration: function() {
            return this._duration;
          },
          set_duration: function(t) {
            return this._duration !== t && (this._duration = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_target: function() {
            return this._target;
          },
          set_target: function(t) {
            return this._target !== t && (this._target = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_endTarget: function() {
            return this._endTarget;
          },
          set_endTarget: function(t) {
            return this._endTarget !== t && (this._endTarget = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_interpolationType: function() {
            return this._interpolationType;
          },
          set_interpolationType: function(t) {
            return this._interpolationType = t, t;
          },
          get_hasLocation: function() {
            return this._hasTime;
          },
          set_hasLocation: function(t) {
            return this._hasLocation !== t && (this._hasLocation = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_hasTime: function() {
            return this._hasTime;
          },
          set_hasTime: function(t) {
            return this._hasTime !== t && (this._hasTime = this._hasLocation = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_startTime: function() {
            return this._startTime;
          },
          set_startTime: function(t) {
            return this._startTime = t, r.compareDates(this._startTime, t) || (this._startTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_endTime: function() {
            return this._endTime;
          },
          set_endTime: function(t) {
            return r.compareDates(this._endTime, t) || (this._endTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          captureSettings: function() {
            this._startTime = Q.get_now(), this._actualPlanetScale = X.get_current().get_actualPlanetScale(), this._locationAltitude = X.get_current().get_locationAltitude(), this._locationLat = X.get_current().get_locationLat(), this._locationLng = X.get_current().get_locationLng(), this._showClouds = X.get_current().get_showClouds(), this._showConstellationBoundries = X.get_current().get_showConstellationBoundries(), this._showConstellationFigures = X.get_current().get_showConstellationFigures(), this._showConstellationSelection = X.get_current().get_showConstellationSelection(), this._showEcliptic = X.get_current().get_showEcliptic(), this._showElevationModel = X.get_current().get_showElevationModel(), this._showFieldOfView = X.get_current().get_showFieldOfView(), this._showGrid = X.get_current().get_showGrid(), this._showHorizon = X.get_current().get_showHorizon(), this._showHorizonPanorama = X.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = X.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = X.get_current().get_showSolarSystem(), this._fovTelescope = X.get_current().get_fovTelescope(), this._fovEyepiece = X.get_current().get_fovEyepiece(), this._fovCamera = X.get_current().get_fovCamera(), this._localHorizonMode = X.get_current().get_localHorizonMode(), this._galacticMode = X.get_current().get_galacticMode(), this._solarSystemStars = X.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = X.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = X.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = X.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = X.get_current().get_solarSystemOverlays(), this._solarSystemLighting = X.get_current().get_solarSystemLighting(), this._solarSystemScale = X.get_current().get_solarSystemScale(), this._solarSystemMultiRes = X.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = X.get_current().get_showEquatorialGridText(), this._showGalacticGrid = X.get_current().get_showGalacticGrid(), this._showGalacticGridText = X.get_current().get_showGalacticGridText(), this._showEclipticGrid = X.get_current().get_showEclipticGrid(), this._showEclipticGridText = X.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = X.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = X.get_current().get_showAltAzGrid(), this._showAltAzGridText = X.get_current().get_showAltAzGridText(), this._showPrecessionChart = X.get_current().get_showPrecessionChart(), this._showConstellationPictures = X.get_current().get_showConstellationPictures(), this._showConstellationLabels = X.get_current().get_showConstellationLabels(), this._solarSystemCMB = X.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = X.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = X.get_current().get_solarSystemPlanets(), this._showEarthSky = X.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = X.get_current().get_solarSystemMinorOrbits(), this._constellationFiguresFilter = X.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = X.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = X.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = X.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = X.get_current().get_showSkyOverlays(), this._showConstellations = X.get_current().get_showConstellations(), this._showSkyNode = X.get_current().get_showSkyNode(), this._showSkyGrids = X.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = X.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = X.get_current().get_earthCutawayView(), this._showISSModel = X.get_current().get_showISSModel(), this._milkyWayModel = X.get_current().get_milkyWayModel(), this._minorPlanetsFilter = X.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = X.get_current().get_planetOrbitsFilter();
          },
          syncSettings: function() {
            X.get_globalSettings().set_actualPlanetScale(this._actualPlanetScale), X.get_globalSettings().set_locationAltitude(this._locationAltitude), X.get_globalSettings().set_locationLat(this._locationLat), X.get_globalSettings().set_locationLng(this._locationLng), X.get_globalSettings().set_earthCutawayView(this._earthCutawayView), X.get_globalSettings().set_showConstellationBoundries(this._showConstellationBoundries), X.get_globalSettings().set_showConstellationFigures(this._showConstellationFigures), X.get_globalSettings().set_showConstellationSelection(this._showConstellationSelection), X.get_globalSettings().set_showEcliptic(this._showEcliptic), X.get_globalSettings().set_showElevationModel(this._showElevationModel), X.get_globalSettings().set_showGrid(this._showGrid), X.get_globalSettings().set_showHorizon(this._showHorizon), X.get_globalSettings().set_showSolarSystem(this._showSolarSystem), X.get_globalSettings().set_localHorizonMode(this._localHorizonMode), X.get_globalSettings().set_galacticMode(this._galacticMode), X.get_globalSettings().set_solarSystemStars(this._solarSystemStars), X.get_globalSettings().set_solarSystemMilkyWay(this._solarSystemMilkyWay), X.get_globalSettings().set_solarSystemCosmos(this._solarSystemCosmos), X.get_globalSettings().set_solarSystemCMB(this._solarSystemCMB), X.get_globalSettings().set_solarSystemOrbits(this._solarSystemOrbits), X.get_globalSettings().set_solarSystemMinorOrbits(this._solarSystemMinorOrbits), X.get_globalSettings().set_solarSystemMinorPlanets(this._solarSystemMinorPlanets), X.get_globalSettings().set_solarSystemOverlays(this._solarSystemOverlays), X.get_globalSettings().set_solarSystemLighting(this._solarSystemLighting), X.get_globalSettings().set_showISSModel(this._showISSModel), X.get_globalSettings().set_solarSystemScale(this._solarSystemScale), X.get_globalSettings().set_solarSystemMultiRes(this._solarSystemMultiRes), X.get_globalSettings().set_showEarthSky(this._showEarthSky), X.get_globalSettings().set_minorPlanetsFilter(this._minorPlanetsFilter), X.get_globalSettings().set_planetOrbitsFilter(this._planetOrbitsFilter), X.get_globalSettings().set_showEquatorialGridText(this._showEquatorialGridText), X.get_globalSettings().set_showGalacticGrid(this._showGalacticGrid), X.get_globalSettings().set_showGalacticGridText(this._showGalacticGridText), X.get_globalSettings().set_showEclipticGrid(this._showEclipticGrid), X.get_globalSettings().set_showEclipticGridText(this._showEclipticGridText), X.get_globalSettings().set_showEclipticOverviewText(this._showEclipticOverviewText), X.get_globalSettings().set_showAltAzGrid(this._showAltAzGrid), X.get_globalSettings().set_showAltAzGridText(this._showAltAzGridText), X.get_globalSettings().set_showPrecessionChart(this._showPrecessionChart), X.get_globalSettings().set_showConstellationPictures(this._showConstellationPictures), X.get_globalSettings().set_constellationsEnabled(this._constellationsEnabled), X.get_globalSettings().set_showSkyOverlays(this._showSkyOverlays), X.get_globalSettings().set_constellations(this._showConstellations), X.get_globalSettings().set_showSkyNode(this._showSkyNode), X.get_globalSettings().set_showSkyGrids(this._showSkyGrids), X.get_globalSettings().set_constellationFiguresFilter(this._constellationFiguresFilter.clone()), X.get_globalSettings().set_constellationBoundariesFilter(this._constellationBoundariesFilter.clone()), X.get_globalSettings().set_constellationNamesFilter(this._constellationNamesFilter.clone()), X.get_globalSettings().set_constellationArtFilter(this._constellationArtFilter.clone());
          },
          get_solarSystemStars: function() {
            return this._solarSystemStars;
          },
          get_solarSystemMultiRes: function() {
            return this._solarSystemMultiRes;
          },
          get_solarSystemMilkyWay: function() {
            return this._solarSystemMilkyWay;
          },
          get_solarSystemCosmos: function() {
            return this._solarSystemCosmos;
          },
          get_solarSystemOrbits: function() {
            return this._solarSystemOrbits;
          },
          get_solarSystemOverlays: function() {
            return this._solarSystemOverlays;
          },
          get_solarSystemLighting: function() {
            return this._solarSystemLighting;
          },
          get_solarSystemScale: function() {
            return this._solarSystemScale;
          },
          get_actualPlanetScale: function() {
            return this._actualPlanetScale;
          },
          get_fovCamera: function() {
            return this._fovCamera;
          },
          get_fovEyepiece: function() {
            return this._fovEyepiece;
          },
          get_fovTelescope: function() {
            return this._fovTelescope;
          },
          get_locationAltitude: function() {
            return this._hasLocation ? this._locationAltitude : X.get_current().get_locationAltitude();
          },
          get_locationLat: function() {
            return this._hasLocation ? this._locationLat : X.get_current().get_locationLat();
          },
          get_locationLng: function() {
            return this._hasLocation ? this._locationLng : X.get_current().get_locationLng();
          },
          get_showClouds: function() {
            return this._showClouds;
          },
          get_showConstellationBoundries: function() {
            return this._showConstellationBoundries;
          },
          get_showConstellationFigures: function() {
            return this._showConstellationFigures;
          },
          get_showConstellationSelection: function() {
            return this._showConstellationSelection;
          },
          get_showEcliptic: function() {
            return this._showEcliptic;
          },
          get_showElevationModel: function() {
            return this._showElevationModel;
          },
          get_showFieldOfView: function() {
            return this._showFieldOfView;
          },
          get_showGrid: function() {
            return this._showGrid;
          },
          get_showHorizon: function() {
            return this._showHorizon;
          },
          get_showHorizonPanorama: function() {
            return this._showHorizonPanorama;
          },
          get_showMoonsAsPointSource: function() {
            return this._showMoonsAsPointSource;
          },
          get_showSolarSystem: function() {
            return this._showSolarSystem;
          },
          get_localHorizonMode: function() {
            return this._localHorizonMode;
          },
          get_galacticMode: function() {
            return this._galacticMode;
          },
          get_thumbnail: function() {
            return this._target != null && this._thumbnail == null ? null : this._thumbnail;
          },
          set_thumbnail: function(t) {
            return this._thumbnail = t, this._owner != null && this._owner.set_tourDirty(!0), t;
          },
          get_overlays: function() {
            return this._overlays;
          },
          get_musicTrack: function() {
            return this._musicTrack;
          },
          set_musicTrack: function(t) {
            return this._musicTrack !== t && (this._musicTrack = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          get_voiceTrack: function() {
            return this._voiceTrack;
          },
          set_voiceTrack: function(t) {
            return this._voiceTrack !== t && (this._voiceTrack = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
          },
          addOverlay: function(t) {
            t != null && (t.set_owner(this), this._overlays.push(t), this._owner != null && this._owner.set_tourDirty(!0));
          },
          removeOverlay: function(t) {
            r.remove(this._overlays, t), this._owner != null && this._owner.set_tourDirty(!0);
          },
          cleanUp: function() {
            for (var t = r.enumerate(this.get_overlays()); t.moveNext(); ) {
              var e = t.current;
              e.cleanUp();
            }
            this._voiceTrack != null && this._voiceTrack.cleanUp(), this._musicTrack != null && this._musicTrack.cleanUp();
          },
          sendToBack: function(t) {
            r.remove(this._overlays, t), this._overlays.splice(0, 0, t), this._owner != null && this._owner.set_tourDirty(!0);
          },
          bringToFront: function(t) {
            r.remove(this._overlays, t), this._overlays.push(t), this._owner != null && this._owner.set_tourDirty(!0);
          },
          bringForward: function(t) {
            var e = this._overlays.indexOf(t);
            e < this._overlays.length - 1 && (r.remove(this._overlays, t), this._overlays.splice(e + 1, 0, t)), this._owner != null && this._owner.set_tourDirty(!0);
          },
          sendBackward: function(t) {
            var e = this._overlays.indexOf(t);
            e > 0 && (r.remove(this._overlays, t), this._overlays.splice(e - 1, 0, t)), this._owner != null && this._owner.set_tourDirty(!0);
          },
          getNextOverlay: function(t) {
            if (t == null)
              return this._overlays.length > 0 ? this._overlays[0] : null;
            var e = this._overlays.indexOf(t);
            return e < this._overlays.length - 1 ? this._overlays[e + 1] : this._overlays[0];
          },
          getPerviousOverlay: function(t) {
            if (t == null)
              return this._overlays.length > 0 ? this._overlays[0] : null;
            var e = this._overlays.indexOf(t);
            return e > 0 ? this._overlays[e - 1] : this._overlays[this._overlays.length - 1];
          },
          getOverlayById: function(t) {
            for (var e = r.enumerate(this._overlays); e.moveNext(); ) {
              var n = e.current;
              if (n.id === t)
                return n;
            }
            return null;
          },
          get_tourStopThumbnailFilename: function() {
            return r.format("{0}.thumb.png", this._id);
          },
          _saveToXml: function(t, e) {
            e && this._thumbnail != null, t._writeStartElement("TourStop"), t._writeAttributeString("Id", this._id), t._writeAttributeString("Name", this._name), t._writeAttributeString("Description", this._description), t._writeAttributeString("Thumbnail", this._thumbnailString), t._writeAttributeString("Duration", xt.xmlDuration(this._duration)), t._writeAttributeString("Master", this._masterSlide.toString()), t._writeAttributeString("TransitionType", we.toXml("TransitionType", this._transition)), t._writeAttributeString("TransitionTime", this._transitionTime.toString()), t._writeAttributeString("TransitionOutTime", this._transitionOutTime.toString()), t._writeAttributeString("TransitionHoldTime", this._transitionHoldTime.toString()), t._writeAttributeString("NextSlide", this._nextSlide), t._writeAttributeString("InterpolationType", we.toXml("InterpolationType", this._interpolationType)), t._writeAttributeString("HasLocation", this._hasLocation.toString()), this._hasLocation && (t._writeAttributeString("LocationAltitude", this._locationAltitude.toString()), t._writeAttributeString("LocationLat", this._locationLat.toString()), t._writeAttributeString("LocationLng", this._locationLng.toString())), t._writeAttributeString("HasTime", this._hasTime.toString()), this._hasTime && (t._writeAttributeString("StartTime", xt.xmlDate(this._startTime)), t._writeAttributeString("EndTime", xt.xmlDate(this._endTime))), t._writeAttributeString("ActualPlanetScale", this._actualPlanetScale.toString()), t._writeAttributeString("ShowClouds", this._showClouds.toString()), t._writeAttributeString("EarthCutawayView", this._earthCutawayView.toString()), t._writeAttributeString("ShowConstellationBoundries", this._showConstellationBoundries.toString()), t._writeAttributeString("ShowConstellationFigures", this._showConstellationFigures.toString()), t._writeAttributeString("ShowConstellationSelection", this._showConstellationSelection.toString()), t._writeAttributeString("ShowEcliptic", this._showEcliptic.toString()), t._writeAttributeString("EclipticColor", this._eclipticColor.save()), t._writeAttributeString("ShowElevationModel", this._showElevationModel.toString()), this._showFieldOfView = !1, t._writeAttributeString("ShowFieldOfView", this._showFieldOfView.toString()), t._writeAttributeString("ShowGrid", this._showGrid.toString()), t._writeAttributeString("ShowHorizon", this._showHorizon.toString()), t._writeAttributeString("ShowHorizonPanorama", this._showHorizonPanorama.toString()), t._writeAttributeString("ShowMoonsAsPointSource", this._showMoonsAsPointSource.toString()), t._writeAttributeString("ShowSolarSystem", this._showSolarSystem.toString()), t._writeAttributeString("FovTelescope", this._fovTelescope.toString()), t._writeAttributeString("FovEyepiece", this._fovEyepiece.toString()), t._writeAttributeString("FovCamera", this._fovCamera.toString()), t._writeAttributeString("LocalHorizonMode", this._localHorizonMode.toString()), t._writeAttributeString("GalacticMode", this._galacticMode.toString()), t._writeAttributeString("FadeInOverlays", this._fadeInOverlays.toString()), t._writeAttributeString("SolarSystemStars", this._solarSystemStars.toString()), t._writeAttributeString("SolarSystemMilkyWay", this._solarSystemMilkyWay.toString()), t._writeAttributeString("SolarSystemCosmos", this._solarSystemCosmos.toString()), t._writeAttributeString("SolarSystemCMB", this._solarSystemCMB.toString()), t._writeAttributeString("SolarSystemOrbits", this._solarSystemOrbits.toString()), t._writeAttributeString("SolarSystemMinorOrbits", this._solarSystemMinorOrbits.toString()), t._writeAttributeString("SolarSystemOverlays", this._solarSystemOverlays.toString()), t._writeAttributeString("SolarSystemLighting", this._solarSystemLighting.toString()), t._writeAttributeString("ShowISSModel", this._showISSModel.toString()), t._writeAttributeString("SolarSystemScale", this._solarSystemScale.toString()), t._writeAttributeString("MinorPlanetsFilter", this._minorPlanetsFilter.toString()), t._writeAttributeString("PlanetOrbitsFilter", this._planetOrbitsFilter.toString()), t._writeAttributeString("SolarSystemMultiRes", this._solarSystemMultiRes.toString()), t._writeAttributeString("SolarSystemMinorPlanets", this._solarSystemMinorPlanets.toString()), t._writeAttributeString("SolarSystemPlanets", this._solarSystemPlanets.toString()), t._writeAttributeString("ShowEarthSky", this._showEarthSky.toString()), t._writeAttributeString("ShowEquatorialGridText", this.get_showEquatorialGridText().toString()), t._writeAttributeString("EquatorialGridColor", this.get_equatorialGridColor().save()), t._writeAttributeString("ShowGalacticGrid", this.get_showGalacticGrid().toString()), t._writeAttributeString("ShowGalacticGridText", this.get_showGalacticGridText().toString()), t._writeAttributeString("GalacticGridColor", this.get_galacticGridColor().save()), t._writeAttributeString("ShowEclipticGrid", this.get_showEclipticGrid().toString()), t._writeAttributeString("ShowEclipticGridText", this.get_showEclipticGridText().toString()), t._writeAttributeString("EclipticGridColor", this.get_eclipticGridColor().save()), t._writeAttributeString("ShowEclipticOverviewText", this.get_showEclipticOverviewText().toString()), t._writeAttributeString("ShowAltAzGrid", this.get_showAltAzGrid().toString()), t._writeAttributeString("ShowAltAzGridText", this.get_showAltAzGridText().toString()), t._writeAttributeString("AltAzGridColor", this.get_altAzGridColor().save()), t._writeAttributeString("ShowPrecessionChart", this.get_showPrecessionChart().toString()), t._writeAttributeString("PrecessionChartColor", this.get_precessionChartColor().save()), t._writeAttributeString("ConstellationPictures", this.get_showConstellationPictures().toString()), t._writeAttributeString("ConstellationsEnabled", this.get_constellationsEnabled()), t._writeAttributeString("ShowConstellationLabels", this.get_showConstellationLabels().toString()), t._writeAttributeString("ShowSkyOverlays", this.get_showSkyOverlays().toString()), t._writeAttributeString("ShowConstellations", this.get_showConstellations().toString()), t._writeAttributeString("ShowSkyNode", this.get_showSkyNode().toString()), t._writeAttributeString("ShowSkyGrids", this.get_showSkyGrids().toString()), t._writeAttributeString("SkyOverlaysIn3d", this.get_showSkyOverlaysIn3d().toString()), t._writeAttributeString("ConstellationFiguresFilter", this._constellationFiguresFilter.toString()), t._writeAttributeString("ConstellationBoundariesFilter", this._constellationBoundariesFilter.toString()), t._writeAttributeString("ConstellationNamesFilter", this._constellationNamesFilter.toString()), t._writeAttributeString("ConstellationArtFilter", this._constellationArtFilter.toString()), this._target._saveToXml(t, "Place"), this._endTarget != null && this._endTarget._saveToXml(t, "EndTarget"), t._writeStartElement("Overlays");
            for (var n = r.enumerate(this._overlays); n.moveNext(); ) {
              var a = n.current;
              a.saveToXml(t, !1);
            }
            t._writeEndElement(), this._musicTrack != null && (t._writeStartElement("MusicTrack"), this._musicTrack.saveToXml(t, !1), t._writeEndElement()), this._voiceTrack != null && (t._writeStartElement("VoiceTrack"), this._voiceTrack.saveToXml(t, !1), t._writeEndElement()), this._writeLayerList(t), t._writeEndElement();
          },
          _writeLayerList: function(t) {
            if (r.keyCount(this.layers) > 0) {
              t._writeStartElement("VisibleLayers");
              for (var e = r.enumerate(r.keys(this.layers)); e.moveNext(); ) {
                var n = e.current, a = this.layers[n];
                t._writeStartElement("Layer"), t._writeAttributeString("StartOpacity", a.startOpacity.toString()), t._writeAttributeString("EndOpacity", a.endOpacity.toString());
                var s = a.startParams.length;
                t._writeAttributeString("ParamCount", s.toString());
                for (var l = 0; l < s; l++)
                  t._writeAttributeString(r.format("StartParam{0}", l), a.startParams[l].toString()), t._writeAttributeString(r.format("EndParam{0}", l), a.endParams[l].toString());
                t._writeValue(a.id.toString()), t._writeEndElement();
              }
              t._writeEndElement();
            }
          },
          _addFilesToCabinet: function(t, e) {
            if (this._thumbnail != null) {
              var n = r.format("{0}.thumb.png", this._id), a = this._owner.getFileBlob(n);
              t.addFile(this._owner.get_workingDirectory() + n, a);
            }
            e || (this._musicTrack != null && this._musicTrack.addFilesToCabinet(t), this._voiceTrack != null && this._voiceTrack.addFilesToCabinet(t));
            for (var s = r.enumerate(this._overlays); s.moveNext(); ) {
              var l = s.current;
              l.addFilesToCabinet(t);
            }
          },
          getNextDefaultName: function(t) {
            for (var e = 1, n = r.enumerate(this._overlays); n.moveNext(); ) {
              var a = n.current;
              if (r.startsWith(a.get_name(), t)) {
                var s = 0;
                try {
                  s = parseInt(a.get_name().substr(t.length));
                } catch {
                }
                s >= e && (e = s + 1);
              }
            }
            return r.format("{0} {1}", t, e);
          },
          _loadLayerList: function(t) {
            for (var e = r.enumerate(t.childNodes); e.moveNext(); ) {
              var n = e.current;
              if (n.nodeName === "Layer") {
                var a = new Gs(), s = n.innerHTML;
                a.id = er.fromString(s), a.startOpacity = parseFloat(n.attributes.getNamedItem("StartOpacity").nodeValue), a.endOpacity = parseFloat(n.attributes.getNamedItem("EndOpacity").nodeValue);
                var l = 0;
                n.attributes.getNamedItem("ParamCount") != null && (l = parseInt(n.attributes.getNamedItem("ParamCount").nodeValue)), a.startParams = new Array(l), a.endParams = new Array(l), a.frameParams = new Array(l);
                for (var g = 0; g < l; g++)
                  a.startParams[g] = parseFloat(n.attributes.getNamedItem(r.format("StartParam{0}", g)).nodeValue), a.endParams[g] = parseFloat(n.attributes.getNamedItem(r.format("EndParam{0}", g)).nodeValue), a.frameParams[g] = a.startParams[g];
                this.layers[a.id] = a;
              }
            }
          },
          _updateLayerOpacity: function() {
            this.get_keyFramed() && this.updateTweenPosition();
          },
          get_showEquatorialGridText: function() {
            return this._showEquatorialGridText;
          },
          set_showEquatorialGridText: function(t) {
            return this._showEquatorialGridText = t, t;
          },
          get_showGalacticGrid: function() {
            return this._showGalacticGrid;
          },
          set_showGalacticGrid: function(t) {
            return this._showGalacticGrid = t, t;
          },
          get_showGalacticGridText: function() {
            return this._showGalacticGridText;
          },
          set_showGalacticGridText: function(t) {
            return this._showGalacticGridText = t, t;
          },
          get_showEclipticGrid: function() {
            return this._showEclipticGrid;
          },
          set_showEclipticGrid: function(t) {
            return this._showEclipticGrid = t, t;
          },
          get_showEclipticGridText: function() {
            return this._showEclipticGridText;
          },
          set_showEclipticGridText: function(t) {
            return this._showEclipticGridText = t, t;
          },
          get_showEclipticOverviewText: function() {
            return this._showEclipticOverviewText;
          },
          set_showEclipticOverviewText: function(t) {
            return this._showEclipticOverviewText = t, t;
          },
          get_showAltAzGrid: function() {
            return this._showAltAzGrid;
          },
          set_showAltAzGrid: function(t) {
            return this._showAltAzGrid = t, t;
          },
          get_showAltAzGridText: function() {
            return this._showAltAzGridText;
          },
          set_showAltAzGridText: function(t) {
            return this._showAltAzGridText = t, t;
          },
          get_showPrecessionChart: function() {
            return this._showPrecessionChart;
          },
          set_showPrecessionChart: function(t) {
            return this._showPrecessionChart = t, t;
          },
          get_showConstellationPictures: function() {
            return this._showConstellationPictures;
          },
          set_showConstellationPictures: function(t) {
            return this._showConstellationPictures = t, t;
          },
          get_showConstellationLabels: function() {
            return this._showConstellationLabels;
          },
          set_showConstellationLabels: function(t) {
            return this._showConstellationLabels = t, t;
          },
          get_solarSystemCMB: function() {
            return this._solarSystemCMB;
          },
          set_solarSystemCMB: function(t) {
            return this._solarSystemCMB = t, t;
          },
          get_solarSystemMinorPlanets: function() {
            return this._solarSystemMinorPlanets;
          },
          set_solarSystemMinorPlanets: function(t) {
            return this._solarSystemMinorPlanets = t, t;
          },
          get_solarSystemPlanets: function() {
            return this._solarSystemPlanets;
          },
          set_solarSystemPlanets: function(t) {
            return this._solarSystemPlanets = t, t;
          },
          get_showEarthSky: function() {
            return this._showEarthSky;
          },
          set_showEarthSky: function(t) {
            return this._showEarthSky = t, t;
          },
          get_solarSystemMinorOrbits: function() {
            return this._solarSystemMinorOrbits;
          },
          set_solarSystemMinorOrbits: function(t) {
            return this._solarSystemMinorOrbits = t, t;
          },
          get_constellationsEnabled: function() {
            return this._constellationsEnabled;
          },
          set_constellationsEnabled: function(t) {
            return this._constellationsEnabled = t, t;
          },
          get_constellationFiguresFilter: function() {
            return this._constellationFiguresFilter;
          },
          set_constellationFiguresFilter: function(t) {
            return this._constellationFiguresFilter = t, t;
          },
          get_constellationBoundariesFilter: function() {
            return this._constellationBoundariesFilter;
          },
          set_constellationBoundariesFilter: function(t) {
            return this._constellationBoundariesFilter = t, t;
          },
          get_constellationNamesFilter: function() {
            return this._constellationNamesFilter;
          },
          set_constellationNamesFilter: function(t) {
            return this._constellationNamesFilter = t, t;
          },
          get_constellationArtFilter: function() {
            return this._constellationArtFilter;
          },
          set_constellationArtFilter: function(t) {
            return this._constellationArtFilter = t, t;
          },
          get_showSkyOverlays: function() {
            return this._showSkyOverlays;
          },
          set_showSkyOverlays: function(t) {
            return this._showSkyOverlays = t, t;
          },
          get_showConstellations: function() {
            return this._showConstellations;
          },
          set_showConstellations: function(t) {
            return this._showConstellations = t, t;
          },
          get_showSkyNode: function() {
            return this._showSkyNode;
          },
          set_showSkyNode: function(t) {
            return this._showSkyNode = t, t;
          },
          get_showSkyGrids: function() {
            return this._showSkyGrids;
          },
          set_showSkyGrids: function(t) {
            return this._showSkyGrids = t, t;
          },
          get_showSkyOverlaysIn3d: function() {
            return this._showSkyOverlaysIn3d;
          },
          set_showSkyOverlaysIn3d: function(t) {
            return this._showSkyOverlaysIn3d = t, t;
          },
          get_earthCutawayView: function() {
            return this._earthCutawayView;
          },
          set_earthCutawayView: function(t) {
            return this._earthCutawayView = t, t;
          },
          get_showISSModel: function() {
            return this._showISSModel;
          },
          set_showISSModel: function(t) {
            return this._showISSModel = t, t;
          },
          get_milkyWayModel: function() {
            return this._milkyWayModel;
          },
          set_milkyWayModel: function(t) {
            return this._milkyWayModel = t, t;
          },
          get_minorPlanetsFilter: function() {
            return this._minorPlanetsFilter;
          },
          set_minorPlanetsFilter: function(t) {
            return this._minorPlanetsFilter = t, t;
          },
          get_planetOrbitsFilter: function() {
            return this._planetOrbitsFilter;
          },
          set_planetOrbitsFilter: function(t) {
            return this._planetOrbitsFilter = t, t;
          },
          getSetting: function(t) {
            return t === 17 ? new Na(!0, this.faderOpacity, !!this.faderOpacity, null) : new Na(!1, 1, !1, null);
          },
          get_eclipticGridColor: function() {
            return this._eclipticGridColor;
          },
          set_eclipticGridColor: function(t) {
            return this._eclipticGridColor = t, t;
          },
          get_galacticGridColor: function() {
            return this._galacticGridColor;
          },
          set_galacticGridColor: function(t) {
            return this._galacticGridColor = t, t;
          },
          get_altAzGridColor: function() {
            return this._altAzGridColor;
          },
          set_altAzGridColor: function(t) {
            return this._altAzGridColor = t, t;
          },
          get_precessionChartColor: function() {
            return this._precessionChartColor;
          },
          set_precessionChartColor: function(t) {
            return this._precessionChartColor = t, t;
          },
          get_eclipticColor: function() {
            return this._eclipticColor;
          },
          set_eclipticColor: function(t) {
            return this._eclipticColor = t, t;
          },
          get_equatorialGridColor: function() {
            return this._equatorialGridColor;
          },
          set_equatorialGridColor: function(t) {
            return this._equatorialGridColor = t, t;
          },
          get_constellationLabelsHeight: function() {
            return this._constellationLabelsHeight;
          },
          set_constellationLabelsHeight: function(t) {
            return this._constellationLabelsHeight = t, t;
          }
        };
        function Gs() {
          this.id = er.newGuid(), this.startOpacity = 1, this.endOpacity = 1, this.frameOpacity = 1, this.startParams = new Array(0), this.endParams = new Array(0), this.frameParams = new Array(0);
        }
        var oh = {};
        function li(t, e) {
          this._undoXml = "", this._redoXml = "", this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._currentIndex = e.get_currentTourstopIndex(), this._actionText = t, this._targetTour = e, this._undoXml = Mr.getXmlText(e.get_currentTourStop()), this._targetTour.set_tourDirty(!0);
        }
        var lh = {
          get_actionText: function() {
            return this._actionText;
          },
          set_actionText: function(t) {
            return this._actionText = t, t;
          },
          undo: function() {
            var t = this._targetTour.get_tourStops()[this._currentIndex], e = new DOMParser(), n = e.parseFromString(this._undoXml, "text/xml"), a = xt.selectSingleNode(n, "TourStop");
            this._targetTour.get_tourStops()[this._currentIndex] = Mr._fromXml(this._targetTour, a), this._targetTour.set_currentTourstopIndex(this._currentIndex), r.emptyString(this._redoXml) && (this._redoXml = Mr.getXmlText(t)), this._targetTour.set_tourDirty(!0);
          },
          redo: function() {
            var t = new DOMParser(), e = t.parseFromString(this._redoXml, "text/xml"), n = xt.selectSingleNode(e, "TourStop");
            this._targetTour.get_tourStops()[this._currentIndex] = Mr._fromXml(this._targetTour, n), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
          },
          toString: function() {
            return this._actionText;
          }
        };
        function oe() {
        }
        oe.clear = function() {
          oe._undoStack = new r.Stack(), oe._redoStack = new r.Stack();
        }, oe.push = function(t) {
          oe._undoStack.push(t), oe._redoStack = new r.Stack();
        }, oe.peekActionString = function() {
          return oe._undoStack.count > 0 ? oe._undoStack.peek().toString() : pt.getLocalizedText(551, "Nothing to Undo");
        }, oe.peekRedoActionString = function() {
          return oe._redoStack.count > 0 ? oe._redoStack.peek().toString() : "";
        }, oe.peekAction = function() {
          return oe._undoStack.count > 0;
        }, oe.peekRedoAction = function() {
          return oe._redoStack.count > 0;
        }, oe.stepBack = function() {
          var t = oe._undoStack.pop();
          t.undo(), oe._redoStack.push(t);
        }, oe.stepForward = function() {
          var t = oe._redoStack.pop();
          t.redo(), oe._undoStack.push(t);
        };
        var uh = {};
        function ch() {
        }
        var hh = {
          undo: function() {
          },
          redo: function() {
          },
          toString: function() {
            return pt.getLocalizedText(551, "Nothing to Undo");
          }
        };
        function ea(t, e) {
          this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._undoList = [];
          for (var n = 0; n < e.get_tourStops().length; n++)
            this._undoList.push(e.get_tourStops()[n]);
          this._currentIndex = e.get_currentTourstopIndex(), this._actionText = t, this._targetTour = e, this._targetTour.set_tourDirty(!0);
        }
        var fh = {
          get_actionText: function() {
            return this._actionText;
          },
          set_actionText: function(t) {
            return this._actionText = t, t;
          },
          undo: function() {
            this._redoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._undoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
          },
          redo: function() {
            this._undoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._redoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
          },
          toString: function() {
            return this._actionText;
          }
        };
        function _h(t, e) {
          this._actionText = "", this._targetTour = null, this._undoDomeMode = !1, this._undoLevel = 0, this._redoDomeMode = !1, this._redoLevel = 0, this._undoTitle = e.get_title(), this._undoAuthor = e.get_author(), this._undoAuthorEmail = e.get_authorEmail(), this._undoDescription = e.get_description(), this._undoAuthorImage = e.get_authorImage(), this._undoOrganizationUrl = e.get_organizationUrl(), this._undoOrgName = e.get_orgName(), this._undoKeywords = e.get_keywords(), this._undoTaxonomy = e.get_taxonomy(), this._undoLevel = e.get_level(), this._actionText = t, this._targetTour = e, this._targetTour.set_tourDirty(!0);
        }
        var dh = {
          get_actionText: function() {
            return this._actionText;
          },
          set_actionText: function(t) {
            return this._actionText = t, t;
          },
          undo: function() {
            this._redoTitle = this._targetTour.get_title(), this._redoAuthor = this._targetTour.get_author(), this._redoAuthorEmail = this._targetTour.get_authorEmail(), this._redoDescription = this._targetTour.get_description(), this._redoAuthorImage = this._targetTour.get_authorImage(), this._redoOrganizationUrl = this._targetTour.get_organizationUrl(), this._redoOrgName = this._targetTour.get_orgName(), this._redoKeywords = this._targetTour.get_keywords(), this._redoTaxonomy = this._targetTour.get_taxonomy(), this._redoLevel = this._targetTour.get_level(), this._targetTour.set_title(this._undoTitle), this._targetTour.set_author(this._undoAuthor), this._targetTour.set_authorEmail(this._undoAuthorEmail), this._targetTour.set_description(this._undoDescription), this._targetTour.set_authorImage(this._undoAuthorImage), this._targetTour.set_organizationUrl(this._undoOrganizationUrl), this._targetTour.set_orgName(this._undoOrgName), this._targetTour.set_keywords(this._undoKeywords), this._targetTour.set_taxonomy(this._undoTaxonomy), this._targetTour.set_level(this._undoLevel), this._targetTour.set_tourDirty(!0);
          },
          redo: function() {
            this._targetTour.set_title(this._redoTitle), this._targetTour.set_author(this._redoAuthor), this._targetTour.set_authorEmail(this._redoAuthorEmail), this._targetTour.set_description(this._redoDescription), this._targetTour.set_authorImage(this._redoAuthorImage), this._targetTour.set_organizationUrl(this._redoOrganizationUrl), this._targetTour.set_orgName(this._redoOrgName), this._targetTour.set_keywords(this._redoKeywords), this._targetTour.set_taxonomy(this._redoTaxonomy), this._targetTour.set_level(this._redoLevel), this._targetTour.set_tourDirty(!0);
          },
          toString: function() {
            return this._actionText;
          }
        };
        function pi() {
          this.a = 0, this.b = 0, this.c = 0, this.a = -1, this.b = -1, this.c = -1;
        }
        pi.create = function(t, e, n) {
          var a = new pi();
          return a.a = t, a.b = e, a.c = n, a;
        };
        var gh = {
          subDivide: function(t, e) {
            var n = $.lerp(e[this.b].position, e[this.c].position, 0.5), a = $.lerp(e[this.c].position, e[this.a].position, 0.5), s = $.lerp(e[this.a].position, e[this.b].position, 0.5), l = Mt.lerp(Mt.create(e[this.b].tu, e[this.b].tv), Mt.create(e[this.c].tu, e[this.c].tv), 0.5), g = Mt.lerp(Mt.create(e[this.c].tu, e[this.c].tv), Mt.create(e[this.a].tu, e[this.a].tv), 0.5), _ = Mt.lerp(Mt.create(e[this.a].tu, e[this.a].tv), Mt.create(e[this.b].tu, e[this.b].tv), 0.5);
            n.normalize(), a.normalize(), s.normalize();
            var m = e.length, b = e.length + 1, y = e.length + 2;
            e.push(Ht.createPosRaw(n, l.x, l.y)), e.push(Ht.createPosRaw(a, g.x, g.y)), e.push(Ht.createPosRaw(s, _.x, _.y)), t.push(pi.create(this.a, y, b)), t.push(pi.create(this.b, m, y)), t.push(pi.create(this.c, b, m)), t.push(pi.create(m, b, y));
          },
          subDivideNoNormalize: function(t, e) {
            var n = $.lerp(e[this.b].position, e[this.c].position, 0.5), a = $.lerp(e[this.c].position, e[this.a].position, 0.5), s = $.lerp(e[this.a].position, e[this.b].position, 0.5), l = Mt.lerp(Mt.create(e[this.b].tu, e[this.b].tv), Mt.create(e[this.c].tu, e[this.c].tv), 0.5), g = Mt.lerp(Mt.create(e[this.c].tu, e[this.c].tv), Mt.create(e[this.a].tu, e[this.a].tv), 0.5), _ = Mt.lerp(Mt.create(e[this.a].tu, e[this.a].tv), Mt.create(e[this.b].tu, e[this.b].tv), 0.5), m = e.length, b = e.length + 1, y = e.length + 2;
            e.push(Ht.createPosRaw(n, l.x, l.y)), e.push(Ht.createPosRaw(a, g.x, g.y)), e.push(Ht.createPosRaw(s, _.x, _.y)), t.push(pi.create(this.a, y, b)), t.push(pi.create(this.b, m, y)), t.push(pi.create(this.c, b, m)), t.push(pi.create(m, b, y));
          }
        };
        function yi() {
        }
        yi.gamma = function(t, e) {
          return Math.min(255, r.truncate(255 * Math.pow(t / 255, 1 / e) + 0.5));
        }, yi.getNamesStringFromArray = function(t) {
          for (var e = "", n = "", a = r.enumerate(t); a.moveNext(); ) {
            var s = a.current;
            e += n, e += s, n = ";";
          }
          return e;
        }, yi.solarSystemToMeters = function(t) {
          return t * 149598e3 * 370;
        }, yi.metersToSolarSystemDistance = function(t) {
          return t / 370 * 149598e3;
        }, yi.metersToZoom = function(t) {
          return (t / 1e3 / 370 - 1e-6) / 4 * 9;
        }, yi.formatDistance = function(t) {
          if (t < 0.1) {
            var e = t * 149598e3;
            if (e < 10) {
              var n = r.truncate(e * 1e3);
              return r.format("{0} m", n);
            } else
              return e = r.truncate(e), r.format("{0} km", e);
          } else if (t < 10) {
            var a = r.truncate(t * 10) / 10;
            return r.format("{0} au", a);
          } else if (t < 63239.6717 / 10) {
            var a = r.truncate(t);
            return r.format("{0} au", a);
          } else if (t < 63239.6717 * 10) {
            var s = r.truncate(t * 10 / 63239.6717) / 10;
            return r.format("{0} ly", s);
          } else if (t < 63239.6717 * 1e6) {
            var s = r.truncate(t / 63239.6717);
            return r.format("{0} ly", s);
          } else if (t < 206264.806 * 1e7) {
            var l = r.truncate(t * 10 / 206264806e3) / 10;
            return r.format("{0} Mpc", l);
          } else if (t < 206264.806 * 1e9) {
            var l = r.truncate(t / 206264806e3);
            return r.format("{0} Mpc", l);
          } else {
            var l = r.truncate(t * 10 / 206264806e6) / 10;
            return r.format("{0} Gpc", l);
          }
        }, yi.formatDecimalHours = function(t) {
          var e = r.now(), n = e.getTimezoneOffset() / 60;
          n = 0;
          for (var a = t - n + 0.0083333334; a > 24; )
            a -= 24;
          for (; a < 0; )
            a += 24;
          var s = r.truncate(a), l = r.truncate(a * 60 - s * 60), g = r.truncate(a * 3600 - (s * 3600 + l * 60));
          return r.format("{0}:{1}", s, l, g);
        }, yi.splitString = function(t, e) {
          for (var n = [], a = 0, s = 0, l = 0, g = 0; s < t.length; ) {
            if (t.substr(s, 1) === "(" && a++, t.substr(s, 1) === ")" && a--, s === t.length - 1) {
              if (t.substr(s, 1) === e)
                return n.push(t.substr(g, l)), n.push(""), n;
              l++;
            }
            s === t.length - 1 || t.substr(s, 1) === e && e === "	" || !a && t.substr(s, 1) === e ? (n.push(t.substr(g, l)), g = s + 1, l = 0) : l++, s++;
          }
          return n;
        }, yi.split = function(t, e) {
          for (var n = [], a = 0, s = 0, l = 0; a < t.length; )
            a === t.length - 1 && s++, a === t.length - 1 || e.indexOf(t.substr(a, 1)) > -1 ? (n.push(t.substr(l, s)), l = a + 1, s = 0) : s++, a++;
          return n;
        }, yi._beep = function() {
        };
        var mh = {};
        function xt() {
        }
        xt.splitString = function(t, e) {
          for (var n = [], a = 0, s = 0, l = 0; l < t.length; l++) {
            for (var g = !1, _ = 0; _ < e.length; _++) {
              if (t[l] === e[_]) {
                n.push(t.substring(a, s - a)), g = !0;
                continue;
              }
              a = l + 1, s = l + 1;
            }
            g || s++;
          }
          return s > a && n.push(t.substring(a, s - a)), n;
        }, xt.stringContains = function(t, e) {
          for (var n = 0; n < e.length; n++)
            if (t.indexOf(e[n]) > -1)
              return !0;
          return !1;
        }, xt.getHashCode = function(t) {
          var e = 0;
          if (!t.length)
            return e;
          for (var n = 0; n < t.length; n++) {
            var a = t.charCodeAt(n);
            e = (e << 5) - e + a;
          }
          return e;
        }, xt.compare = function(t, e) {
          return t === e ? 0 : t > e ? 1 : -1;
        }, xt.logN = function(t, e) {
          return Math.log(t) / Math.log(e);
        }, xt.parseTimeSpan = function(t) {
          var e = 0, n = t.split(":");
          return n.length === 3 && (e += parseInt(n[0]) * 36e5, e += parseInt(n[1]) * 6e4, e += r.truncate(parseFloat(n[2]) * 1e3)), e;
        }, xt.xmlDuration = function(t) {
          var e = t / 1e3, n = Math.floor(e / 3600), a = Math.floor(e / 60) - n * 60, s = e - (n * 3600 + a * 60);
          return r.format("{0}:{1}:{2}", n, a, s);
        }, xt.xmlDate = function(t) {
          var e = t.getHours(), n = "AM";
          return e > 12 && (e -= 12, n = "PM"), (t.getMonth() + 1).toString() + "/" + t.getDate().toString() + "/" + t.getFullYear().toString() + " " + e.toString() + ":" + t.getMinutes().toString() + ":" + t.getSeconds().toString() + " " + n;
        }, xt.selectSingleNode = function(t, e) {
          for (var n = null, a = r.enumerate(t.childNodes); a.moveNext(); ) {
            var s = a.current;
            if (s.nodeName === e) {
              n = s;
              break;
            }
          }
          return n;
        }, xt.getInnerText = function(t) {
          if (r.emptyString(t.text)) {
            var e = t;
            return e.textContent;
          } else
            return t.text;
        }, xt.getWrappedText = function(t, e, n) {
          var a = [];
          return a.push(e), a;
        }, xt.toHex = function(t) {
          var e = Math.max(0, Math.min(r.truncate(t), 255));
          return "0123456789ABCDEF".substr((e - e % 16) / 16, 1) + "0123456789ABCDEF".substr(e % 16, 1);
        }, xt.fromHex = function(t) {
          var e = 0;
          switch (t.substr(1, 1).toUpperCase()) {
            case "A":
              e += 10;
              break;
            case "B":
              e += 11;
              break;
            case "C":
              e += 12;
              break;
            case "D":
              e += 13;
              break;
            case "E":
              e += 14;
              break;
            case "F":
              e += 15;
              break;
            default:
              e += parseInt(t.substr(1, 1));
              break;
          }
          switch (t.substr(0, 1).toUpperCase()) {
            case "A":
              e += 10 * 16;
              break;
            case "B":
              e += 11 * 16;
              break;
            case "C":
              e += 12 * 16;
              break;
            case "D":
              e += 13 * 16;
              break;
            case "E":
              e += 14 * 16;
              break;
            case "F":
              e += 15 * 16;
              break;
            default:
              e += parseInt(t.substr(0, 1)) * 16;
              break;
          }
          return e;
        }, xt._openUrl = function(t) {
          window.open(t);
        }, xt.log10 = function(t) {
          return Math.log(t) / 2.30258509299405;
        }, xt.sign = function(t) {
          return t < 0 ? -1 : 1;
        };
        var ph = {};
        function Ji() {
          this.x = 0, this.y = 0, this.width = 0, this.height = 0;
        }
        Ji.create = function(t, e, n, a) {
          var s = new Ji();
          return s.x = t, s.y = e, s.width = n, s.height = a, s;
        };
        var vh = {
          get_left: function() {
            return this.x;
          },
          get_right: function() {
            return this.x + this.width;
          },
          get_top: function() {
            return this.y;
          },
          get_bottom: function() {
            return this.y + this.height;
          },
          contains: function(t) {
            return this._between(t.x, this.x, this.x + this.width) && this._between(t.y, this.y, this.y + this.height);
          },
          _between: function(t, e, n) {
            return e > n ? !(t > e) && !(t < n) : !(t < e) && !(t > n);
          },
          copy: function() {
            var t = new Ji();
            return t.x = this.x, t.y = this.y, t.width = this.width, t.height = this.height, t;
          }
        };
        function er() {
          this._guid = er.create();
        }
        er.newGuid = function() {
          return new er();
        }, er.fromString = function(t) {
          var e = new er();
          return e._guid = r.trim(t), e;
        }, er.create = function() {
          return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t) {
            var e = Math.random() * 16 | 0, n = t == "x" ? e : e & 3 | 8;
            return n.toString(16);
          });
        }, er.createFrom = function(t) {
          var e = to.v5(t, "1420736a-a637-40a7-813a-ba692e72204e");
          return er.fromString(e);
        };
        var wh = {
          toString: function() {
            return this._guid;
          }
        };
        function we() {
        }
        we.parse = function(t, e) {
          if (e === "Default" && (e = "DefaultV"), e === "0")
            return 0;
          var n = e.substr(0, 1).toLowerCase() + e.substr(1);
          return this._wwtlib[t][n];
        }, we.toXml = function(t, e) {
          var n = "0", a = Object.keys(this._wwtlib[t]);
          for (var s in a)
            if (this._wwtlib[t][a[s]] == e) {
              n = a[s];
              break;
            }
          var l = n, g = l.substr(0, 1).toUpperCase() + l.substr(1);
          return g === "DefaultV" && (g = "Default"), g;
        };
        var bh = {};
        function Ii() {
        }
        Ii.offsetX = function(t, e) {
          var n = 0, a = t, s = e;
          if (a.offsetParent != null)
            do
              n += a.offsetLeft;
            while ((a = a.offsetParent) != null);
          return s.pageX - n;
        }, Ii.offsetY = function(t, e) {
          var n = 0, a = t, s = e;
          if (a.offsetParent != null)
            do
              n += a.offsetTop;
            while ((a = a.offsetParent) != null);
          return s.pageY - n;
        };
        function pt() {
        }
        pt.getLocalizedText = function(t, e) {
          return e;
        };
        var yh = {};
        function Di() {
        }
        Di.get_position = function() {
          return new Mt();
        }, Di.get_current = function() {
          return document.body.style.cursor;
        }, Di.set_current = function(t) {
          return document.body.style.cursor = t, t;
        };
        var Sh = {};
        function wi() {
        }
        wi.get_arrow = function() {
          return "default";
        }, wi.get_cross = function() {
          return "crosshair";
        }, wi.get_defaultV = function() {
          return "default";
        }, wi.get_hand = function() {
          return "grab";
        }, wi.get_help = function() {
          return "help";
        }, wi.get_hSplit = function() {
          return "row-resize";
        }, wi.get_iBeam = function() {
          return "text";
        }, wi.get_no = function() {
          return "not-allowed";
        }, wi.get_sizeAll = function() {
          return "help";
        }, wi.get_sizeNESW = function() {
          return "nwse-resize";
        }, wi.get_sizeNS = function() {
          return "ns-resize";
        }, wi.get_sizeNWSE = function() {
          return "nwse-resize";
        }, wi.get_sizeWE = function() {
          return "ew-resize";
        }, wi.get_upArrow = function() {
          return "help";
        }, wi.get_vSplit = function() {
          return "col-resize";
        }, wi.get_waitCursor = function() {
          return "wait";
        };
        var Ch = {};
        function qs(t) {
          this._return = !1, this._next = !0, this._linkSlide = !1, this._slide = null, this._ok = !1, t != null ? this.set_id(t) : this.set_next(!0);
        }
        var Th = {
          get_returnCaller: function() {
            return this._return;
          },
          set_returnCaller: function(t) {
            return t && (this._slide = "Return"), this._return = t, t;
          },
          get_next: function() {
            return this._next;
          },
          set_next: function(t) {
            return t && (this._slide = "Next"), this._next = t, t;
          },
          get_linkToSlide: function() {
            return this._linkSlide;
          },
          set_linkToSlide: function(t) {
            return t && (this._slide = "Next"), this._linkSlide = t, t;
          },
          get_id: function() {
            return this._slide;
          },
          set_id: function(t) {
            return this._return = !1, this._next = !1, this._linkSlide = !0, this._slide = t, t;
          },
          get_OK: function() {
            return this._ok;
          },
          set_OK: function(t) {
            return this._ok = t, t;
          }
        };
        function Ao() {
          this.volume = 0;
        }
        var Mh = {
          showDialog: function() {
            return 1;
          }
        };
        function xh() {
          this.volume = 0, this.location = new Mt(), this.color = new j();
        }
        var Lh = {
          showDialog: function() {
            return 1;
          }
        };
        function ko() {
          this.volume = 0, this.location = new Mt(), this.overlay = null;
        }
        var Ah = {
          showDialog: function() {
            return 1;
          }
        };
        function ia(t) {
          this.position = 0, this._data = null, this._data = t;
        }
        var kh = {
          get_position: function() {
            return this.position;
          },
          seek: function(t) {
            this.position = t;
          },
          seekRelative: function(t) {
            this.position += t;
          },
          get_length: function() {
            return this._data.length;
          },
          get_endOfStream: function() {
            return this.position >= this.get_length();
          },
          readByte: function() {
            var t;
            return t = this._data[this.position], this.position += 1, t;
          },
          readSByte: function() {
            var t;
            return t = this._data[this.position], this.position += 1, t;
          },
          readBytes: function(t) {
            for (var e = new Array(t), n = 0; n < t; n++)
              e[n] = this._data[this.position + n];
            return this.position += t, e;
          },
          readRemainingI16: function(t) {
            for (var e = new Float32Array(t), n = 0; n < t; n++)
              e[n] = this.readInt16(!0);
            return e;
          },
          readByteString: function(t) {
            for (var e = "", n = 0; n < t; n++)
              e += String.fromCharCode(this._data[this.position + n]);
            return this.position += t, e;
          },
          readSingle: function() {
            var t = new Uint8Array(4);
            t[0] = this._data[this.position], t[1] = this._data[this.position + 1], t[2] = this._data[this.position + 2], t[3] = this._data[this.position + 3];
            var e = new Float32Array(t.buffer, 0, 1)[0];
            return this.position += 4, e;
          },
          readUInt32: function() {
            var t = this._data[this.position] + (this._data[this.position + 1] << 8) + (this._data[this.position + 2] << 16) + (this._data[this.position + 3] << 24);
            return this.position += 4, t;
          },
          readUInt16: function() {
            var t = this._data[this.position] + (this._data[this.position + 1] << 8);
            return this.position += 2, t;
          },
          readUInt16LittleEndian: function() {
            var t = (this._data[this.position] << 8) + this._data[this.position + 1];
            return this.position += 2, t;
          },
          readInt16: function(t) {
            var e = t ? this.readUInt16LittleEndian() : this.readUInt16();
            return e & 32768 ? -(e - 1 ^ 65535) : e;
          },
          readInt32: function() {
            var t = this.readUInt32();
            return t & 2147483648 ? -(t - 1 ^ 4294967295) : t;
          },
          readInt64: function() {
            return this.position += 8, ia.id++;
          },
          close: function() {
          }
        };
        function ln() {
          this.width = 0, this.height = 0;
        }
        ln.create = function(t, e) {
          e = di.fitPowerOfTwo(e), t = di.fitPowerOfTwo(t);
          var n = new ln();
          return n.height = e, n.width = t, n._buffer = new Uint8Array(t * e * 4), n;
        };
        var Ih = {
          setPixel: function(t, e, n, a, s, l) {
            var g = (t + e * this.width) * 4;
            this._buffer[g++] = n, this._buffer[g++] = a, this._buffer[g++] = s, this._buffer[g++] = l;
          },
          getTexture: function() {
            var t = G.prepDevice.createTexture();
            return G.prepDevice.bindTexture(3553, t), G.prepDevice.texParameteri(3553, 10242, 33071), G.prepDevice.texParameteri(3553, 10243, 33071), G.prepDevice.texImage2D(3553, 0, 6408, this.width, this.height, 0, 6408, 5121, this._buffer), G.prepDevice.texParameteri(3553, 10241, 9985), G.prepDevice.generateMipmap(3553), G.prepDevice.bindTexture(3553, null), t;
          }
        };
        function Xs() {
          this.callBack = null, this.color = Pt.get_white();
        }
        var Ph = {
          nonMenuClick: function(t) {
          },
          show: function(t) {
            Z.scriptInterface.showColorPicker(this, t);
          },
          getColorFromClick: function(t) {
            var e = document.getElementById("colorhex"), n = document.createElement("canvas");
            n.width = e.width, n.height = e.height;
            var a = n.getContext("2d");
            a.drawImage(e, 0, 0);
            var s = a.getImageData(t.offsetX, t.offsetY, 1, 1).data;
            return this.color = j.fromArgb(s[3], s[0], s[1], s[2]), this.color;
          },
          pickColor: function(t) {
            this.callBack(this.color);
          }
        };
        function un() {
          this.items = [];
        }
        var Eh = {
          _dispose: function() {
          },
          _nonMenuClick: function(t) {
            var e = document.getElementById("contextmenu");
            e.style.display = "none", window.removeEventListener("click", r.bind("_nonMenuClick", this), !1);
            for (var n = document.getElementById("popoutmenu"); n.firstChild != null; )
              n.removeChild(n.firstChild);
            n.style.display = "none";
          },
          _menuItemClicked: function(t) {
            var e = t.currentTarget;
            e.itemTag.click(e.itemTag, new r.EventArgs());
          },
          _show: function(t) {
            for (var e = document.getElementById("contextmenu"); e.firstChild != null; )
              e.removeChild(e.firstChild);
            e.className = "contextmenu", e.style.display = "block", e.style.left = t.x.toString() + "px", e.style.top = t.y.toString() + "px", window.addEventListener("click", r.bind("_nonMenuClick", this), !0);
            for (var n = r.enumerate(this.items); n.moveNext(); ) {
              var a = n.current;
              if (a.visible) {
                var s = document.createElement("div");
                a.dropDownItems.length > 0 ? s.className = "contextmenuitem submenu" : a.checked ? s.className = "contextmenuitem checkedmenu" : s.className = "contextmenuitem", s.innerText = a.name;
                var l = s;
                l.itemTag = a, s.addEventListener("mouseover", r.bind("_openSubMenu", this), !1), a.click != null && s.addEventListener("click", r.bind("_menuItemClicked", this), !1), e.appendChild(s);
              }
            }
          },
          _openSubMenu: function(t) {
            for (var e = t.currentTarget, n = e.itemTag, a = document.getElementById("popoutmenu"); a.firstChild != null; )
              a.removeChild(a.firstChild);
            if (a.style.display = "none", !!n.dropDownItems.length) {
              var s = new Mt();
              s.x = t.currentTarget.parentNode.offsetLeft + t.currentTarget.parentNode.clientWidth, s.y = t.currentTarget.parentNode.offsetTop + t.currentTarget.offsetTop, a.className = "contextmenu", a.style.display = "block", a.style.left = s.x.toString() + "px", a.style.top = s.y.toString() + "px", window.addEventListener("click", r.bind("_nonMenuClick", this), !0);
              for (var l = r.enumerate(n.dropDownItems); l.moveNext(); ) {
                var g = l.current;
                if (g.visible) {
                  var _ = document.createElement("div");
                  _.className = g.checked ? "contextmenuitem checkedmenu" : "contextmenuitem", _.innerText = g.name;
                  var m = _;
                  m.itemTag = g, _.addEventListener("click", r.bind("_menuItemClicked", this), !1), a.appendChild(_);
                }
              }
            }
          }
        };
        function $t() {
          this.tag = null, this.dropDownItems = [], this.checked = !1, this.enabled = !0, this.visible = !0;
        }
        $t.create = function(t) {
          var e = new $t();
          return e.name = t, e;
        };
        var Rh = {};
        function $h() {
        }
        var Dh = {};
        function bn() {
        }
        var Nh = {
          add_showDialogHook: function(t) {
            this.__showDialogHook = r.bindAdd(this.__showDialogHook, t);
          },
          remove_showDialogHook: function(t) {
            this.__showDialogHook = r.bindSub(this.__showDialogHook, t);
          },
          show: function(t, e) {
            this.__showDialogHook != null && this.__showDialogHook(t, e);
          }
        };
        function $n() {
          this.image = null, this.layer = null, this.tile = null, this._dropDown = null, this._downPosition = 0, this._lowPosition = 0, this._highPosition = 255, this._center = 127, this._ignoreNextClick = !1, this._dragType = 4, this._updated = !1, this.selectedCurveStyle = 0;
        }
        $n.updateImage = function(t, e) {
          if (!ti.useGlVersion2) {
            var n = r.safeCast(t.get_imageSet().get_wcsImage(), Kr), a = Ut.getTile(0, 0, 0, t.get_imageSet(), null);
            a.texture2d = n.getBitmap().getTexture();
          }
        }, $n.updateScale = function(t, e, n, a) {
          if (t.get_imageSet().get_fitsProperties().scaleType = e, t.get_imageSet().get_fitsProperties().lowerCut = n, t.get_imageSet().get_fitsProperties().upperCut = a, !ti.useGlVersion2) {
            var s = r.safeCast(t.get_imageSet().get_wcsImage(), Kr), l = Ut.getTile(0, 0, 0, t.get_imageSet(), null);
            l.texture2d = s.getBitmap().getTexture();
          }
        }, $n.updateColorMapper = function(t, e) {
          if (t.get_imageSet().get_fitsProperties().colorMapName = e, !ti.useGlVersion2) {
            var n = r.safeCast(t.get_imageSet().get_wcsImage(), Kr), a = Ut.getTile(0, 0, 0, t.get_imageSet(), null);
            a.texture2d = n.getBitmap().getTexture();
          }
        };
        var Fh = {
          close: function(t) {
            var e = document.getElementById("histogram");
            document.getElementById("histogramClose"), e.style.display = "none", window.removeEventListener("click", r.bind("close", this), !0);
            var n = document.getElementById("graph");
            n.removeEventListener("mousedown", r.bind("onPointerDown", this), !1), n.removeEventListener("mousemove", r.bind("onPointerMove", this), !1), n.removeEventListener("mouseup", r.bind("onPointerUp", this), !1), this._dropDown.removeEventListener("change", r.bind("curveStyleSelected", this), !1), this._dropDown.removeEventListener("click", r.bind("ignoreMe", this), !0);
          },
          show: function(t) {
            this.tile = Ut.getTile(0, 0, 0, this.layer.get_imageSet(), null);
            var e = document.getElementById("histogram"), n = document.getElementById("histogramClose");
            e.style.display = "block", e.style.left = t.x.toString() + "px", e.style.top = t.y.toString() + "px", this.selectedCurveStyle = this.layer.get_imageSet().get_fitsProperties().scaleType, this._dropDown = document.getElementById("ScaleTypePicker"), this._dropDown.addEventListener("change", r.bind("curveStyleSelected", this), !1), this._dropDown.addEventListener("click", r.bind("ignoreMe", this), !0);
            var a = document.getElementById("graph");
            a.addEventListener("pointerdown", r.bind("onPointerDown", this), !1), a.addEventListener("pointermove", r.bind("onPointerMove", this), !1), a.addEventListener("pointerup", r.bind("onPointerUp", this), !1), n.addEventListener("click", r.bind("close", this), !0), this.draw();
          },
          ignoreMe: function(t) {
            this._ignoreNextClick = !0;
          },
          curveStyleSelected: function(t) {
            this.selectedCurveStyle = this._dropDown.selectedIndex, this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, this.draw(), this._ignoreNextClick = !0;
          },
          onPointerDown: function(t) {
            var e = document.getElementById("graph"), n = Ii.offsetX(e, t), a = Ii.offsetY(e, t);
            e.setPointerCapture(t.pointerId), Math.abs(n - this._center) < 10 && Math.abs(a - 75) < 10 ? this._dragType = 3 : Math.abs(n - this._lowPosition) < 10 ? this._dragType = 0 : Math.abs(n - this._highPosition) < 10 ? this._dragType = 1 : (this._dragType = 2, this._downPosition = Math.min(255, Math.max(0, n)), this.draw()), t.cancelBubble = !0;
          },
          onPointerMove: function(t) {
            var e = document.getElementById("graph"), n = Ii.offsetX(e, t);
            switch (Ii.offsetY(e, t), this._dragType) {
              case 0:
                this._lowPosition = Math.min(255, Math.max(0, n));
                break;
              case 1:
                this._highPosition = Math.min(255, Math.max(0, n));
                break;
              case 2:
                this._lowPosition = this._downPosition, this._highPosition = Math.min(255, Math.max(0, n));
                break;
              case 3:
                var a = Math.abs(this._highPosition - this._lowPosition) / 2, s = Math.min(255 - a, Math.max(a, n)), l = this._center - s;
                this._lowPosition -= l, this._highPosition -= l;
                break;
              case 4:
                return;
            }
            this._center = (this._lowPosition + this._highPosition) / 2, this.draw();
            var g = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, _ = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * g, m = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * g;
            this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().upperCut = m, this.layer.get_imageSet().get_fitsProperties().lowerCut = _, this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, t.cancelBubble = !0;
          },
          onPointerUp: function(t) {
            t.srcElement.releasePointerCapture(t.pointerId), this._dragType !== 4 && (this._dragType = 4, this.setUpdateTimer(), this._ignoreNextClick = !0), t.cancelBubble = !0;
          },
          setUpdateTimer: function() {
            var t = this;
            ti.useGlVersion2 || (setTimeout(function() {
              t.update();
            }, 500), this._updated = !1);
          },
          update: function() {
            if (!this._updated) {
              if (r.canCast(this.image, Kr)) {
                var t = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, e = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * t, n = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * t;
                this.tile.texture2d = this.image.getScaledBitmap(e, n, this.selectedCurveStyle, 0, null).getTexture();
              }
              this._updated = !0;
            }
          },
          draw: function() {
            var t = document.getElementById("graph"), e = t.getContext("2d");
            this.image != null && this.image.drawHistogram(e);
            var n = "rgba(255,0,0,255)", a = "rgba(0,255,0,255)", s = "rgba(0,0,255,255)";
            e.strokeStyle = n, e.beginPath(), e.moveTo(this._lowPosition, 0), e.lineTo(this._lowPosition, 150), e.stroke(), e.strokeStyle = a, e.beginPath(), e.moveTo(this._highPosition, 0), e.lineTo(this._highPosition, 150), e.stroke(), e.strokeStyle = s, e.beginPath(), e.arc(this._center, 75, 10, 0, Math.PI * 2, !1), e.closePath(), e.stroke();
            var l = [];
            switch (this.selectedCurveStyle) {
              case 0:
                l.length = 0, l.push(Mt.create(this._lowPosition, 150)), l.push(Mt.create(this._highPosition, 0));
                break;
              case 1:
                l.length = 0;
                for (var _ = 150 / Math.log(255), m = this._highPosition - this._lowPosition, b = m < 0 ? -1 : 1, y = Math.abs(256 / (m || 1e-6)), M = 1e-6, g = this._lowPosition; g !== this._highPosition; g += b)
                  l.push(Mt.create(g, 150 - Math.log(M) * _)), M += y;
                break;
              case 2:
                l.length = 0;
                for (var _ = 150 / Math.pow(255, 2), m = this._highPosition - this._lowPosition, b = m < 0 ? -1 : 1, y = Math.abs(256 / (m || 1e-6)), M = 1e-6, g = this._lowPosition; g !== this._highPosition; g += b)
                  l.push(Mt.create(g, 150 - Math.pow(M, 2) * _)), M += y;
                break;
              case 3:
                l.length = 0;
                for (var _ = 150 / Math.sqrt(255), m = this._highPosition - this._lowPosition, b = m < 0 ? -1 : 1, y = Math.abs(256 / (m || 1e-6)), M = 1e-6, g = this._lowPosition; g !== this._highPosition; g += b)
                  l.push(Mt.create(g, 150 - Math.sqrt(M) * _)), M += y;
                break;
            }
            if (l.length > 1) {
              e.beginPath(), e.strokeStyle = s, e.moveTo(l[0].x, l[0].y);
              for (var g = 1; g < l.length; g++)
                e.lineTo(l[g].x, l[g].y);
              e.stroke();
            }
          }
        };
        function Ba(t, e, n, a) {
          this.title = "Tile", this.label = "Enter Text Below", this.text = "", this._textElement = null, this._ignoreNextClick = !1, this.title = t, this.label = e, this.text = n;
        }
        var Bh = {
          showDialog: function() {
            return 1;
          },
          nonMenuClick: function(t) {
            this._ignoreNextClick || this._close(), this._ignoreNextClick = !1;
          },
          show: function(t, e) {
            var n = document.getElementById("simpleinput"), a = document.getElementById("simplemodal");
            a.style.display = "block", n.style.display = "block", n.style.marginLeft = t.x.toString() + "px", n.style.marginTop = t.y.toString() + "px", this._textElement = document.getElementById("inputtext"), this._textElement.value = this.text;
            var s = document.getElementById("simpletitle"), l = document.getElementById("inputlabel");
            s.innerText = this.title, l.innerText = this.label, this._textElement.addEventListener("change", r.bind("textChanged", this), !1), this._textElement.addEventListener("click", r.bind("ignoreMe", this), !0);
            var g = document.getElementById("simpleinputok"), _ = document.getElementById("simpleinputcancel");
            g.addEventListener("click", r.bind("okClicked", this), !1), _.addEventListener("click", r.bind("cancelClicked", this), !1), this._okCallback = e;
          },
          okClicked: function(t) {
            this._close(), this._okCallback != null && this._okCallback();
          },
          cancelClicked: function(t) {
            this._close();
          },
          _close: function() {
            var t = document.getElementById("simplemodal");
            t.style.display = "none", this._textElement.removeEventListener("change", r.bind("textChanged", this), !1);
            var e = document.getElementById("simpleinputok"), n = document.getElementById("simpleinputcancel");
            e.removeEventListener("click", r.bind("okClicked", this), !1), n.removeEventListener("click", r.bind("cancelClicked", this), !1);
          },
          ignoreMe: function(t) {
            this._ignoreNextClick = !0;
          },
          textChanged: function(t) {
            this.text = this._textElement.value, this._ignoreNextClick = !0;
          }
        };
        function ra() {
          this.body = `<?xml version='1.0' encoding='UTF-8'?>\r
`, this.formatting = 1, this._elementStack = new r.Stack(), this._pending = !1, this._currentName = "", this._attributes = {}, this._value = "";
        }
        var zh = {
          _pushNewElement: function(t) {
            this._writePending(!1), this._elementStack.push(t), this._pending = !0, this._currentName = t;
          },
          _writePending: function(t) {
            var e = !0;
            if (this._pending) {
              for (var n = 1; n < this._elementStack.count; n++)
                this.body += "  ";
              if (this.body += "<" + this._currentName, r.keyCount(this._attributes) > 0)
                for (var a = r.enumerate(r.keys(this._attributes)); a.moveNext(); ) {
                  var s = a.current;
                  this.body += r.format(' {0}="{1}"', s, this._attributes[s]);
                }
              return r.emptyString(this._value) ? t ? (this.body += ` />\r
`, e = !0) : this.body += `>\r
` : (this.body += ">", e = !1, r.emptyString(this._value) || (this.body += this._value)), this._pending = !1, this._currentName = "", this._value = "", this._attributes = {}, e;
            }
            return !1;
          },
          _writeProcessingInstruction: function(t, e) {
          },
          _writeStartElement: function(t) {
            this._pushNewElement(t);
          },
          _writeAttributeString: function(t, e) {
            e != null ? this._attributes[t] = r.replaceString(e.toString(), "&", "&amp;") : this._attributes[t] = "";
          },
          _writeEndElement: function() {
            if (this._writePending(!0))
              this._elementStack.pop();
            else {
              for (var t = 1; t < this._elementStack.count; t++)
                this.body += "  ";
              this.body += r.format(`</{0}>\r
`, this._elementStack.pop());
            }
          },
          _writeString: function(t) {
            this._value = r.replaceString(t, "&", "&amp;");
          },
          _writeFullEndElement: function() {
            this._writePending(!1);
            for (var t = 1; t < this._elementStack.count; t++)
              this.body += "  ";
            this.body += r.format(`</{0}>\r
`, this._elementStack.pop());
          },
          _close: function() {
          },
          _writeElementString: function(t, e) {
            this._writeStartElement(t), this._writeValue(r.replaceString(e, "&", "&amp;")), this._writeEndElement();
          },
          _writeValue: function(t) {
            this._value = r.replaceString(t, "&", "&amp;");
          },
          _writeCData: function(t) {
            this._value = r.format("<![CDATA[{0}]]>", t);
          }
        };
        function Io() {
          this.table = [], this.items = [], this._imageReady = !1, this._dateColumn = 0, this._latColumn = 1, this._lngColumn = 2, this._depthColumn = 3, this._magColumn = 4;
        }
        var Oh = {
          load: function(t) {
            var e = this, n = t.split(`\r
`);
            this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(g) {
              e._imageReady = !0;
            }, !1), this._starProfile.src = ze.singleton.engineAssetUrl("StarProfileAlpha.png");
            for (var a = !1, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              a ? this.table.push(l.split("	")) : (this.header = l.split("	"), a = !0);
            }
          },
          prepare: function() {
            this._worldList = new Array(this.table.length), this._transformedList = new Array(this.table.length);
            for (var t = 0, e = r.enumerate(this.table); e.moveNext(); ) {
              var n = e.current, a = new Ys();
              a.eventTime = r.date(n[this._dateColumn]);
              var s = (6371e3 - parseFloat(n[this._depthColumn]) * 1e3) / 6371e3;
              a.location = U.geoTo3dRad(parseFloat(n[this._latColumn]), parseFloat(n[this._lngColumn]) + 180, s), a.tranformed = new $(), a.size = Math.pow(2, parseFloat(n[this._magColumn])) / 50, this._worldList[t] = a.location, this._transformedList[t] = a.tranformed, this.items.push(a), t++;
            }
          },
          draw: function(t) {
            if (this._imageReady) {
              t.device.save(), t.WVP.projectArrayToScreen(this._worldList, this._transformedList);
              var e = t.device;
              e.globalAlpha = 0.4;
              var n = t.width, a = t.height;
              $.makeCopy(t.get_viewPoint());
              for (var s = t.get_fovScale() / 100, l = r.enumerate(this.items); l.moveNext(); ) {
                var g = l.current;
                if (g.tranformed.z < 1) {
                  var _ = g.tranformed.x, m = g.tranformed.y, b = 4 * g.size / s, y = b / 2;
                  _ > -y && _ < n + y && m > -y && m < a + y && e.drawImage(this._starProfile, _ - b / 2, m - b / 2, b, b);
                }
              }
              t.device.restore();
            }
          }
        };
        function Ys() {
          this.size = 0;
        }
        var Vh = {
          getColor: function() {
            return "Red";
          }
        };
        function _r(t) {
          this._state = 0, this.responseType = "", this._triedOnce = !1, this._url = t;
        }
        var Uh = {
          send: function() {
            if (!(typeof navigator > "u")) {
              var t = navigator.appVersion;
              t.indexOf("MSIE 8") > -1 || t.indexOf("MSIE 9") > -1 ? this._ieCrossDomain() : this._CORS(), this.set_state(0);
            }
          },
          get_message: function() {
            return this._message;
          },
          get_state: function() {
            return this._state;
          },
          set_state: function(t) {
            return this._state = t, this.onStateChange != null && this.onStateChange(), t;
          },
          _loadData: function(t) {
            this._data = t, this.set_state(1);
          },
          _loadBlob: function(t) {
            this._blobdata = t, this.set_state(1);
          },
          _error: function() {
            this._message = r.format("Error encountered loading {0}", this._url), this.set_state(2);
          },
          _timeOut: function() {
            this._message = r.format("Timeout encountered loading {0}", this._url), this.set_state(2);
          },
          _ieCrossDomain: function() {
            var t = this;
            this._xdr = new XDomainRequest(), this._xdr.onload = function() {
              t._loadData(t._xdr.responseText);
            }, this._xdr.onTimeout = r.bind("_error", this), this._xdr.onError = r.bind("_timeOut", this), this._xdr.open("get", this._url), this._xdr.send();
          },
          _CORS: function() {
            var t = this;
            this._xhr = new XMLHttpRequest();
            try {
              this._xhr.open("GET", this._url), this.responseType != null && (this._xhr.responseType = this.responseType), this._xhr.onreadystatechange = function() {
                if (t._xhr.readyState === 4) {
                  if (t._xhr.status)
                    t._xhr.status >= 400 ? (t._message = t._xhr.statusText, t.set_state(2)) : t.responseType ? t._loadBlob(t._xhr.response) : t._loadData(t._xhr.responseText);
                  else if (!t._triedOnce) {
                    t._triedOnce = !0, t._xhr.onreadystatechange = null;
                    var e = ze.singleton.activateProxy(t._url);
                    e != null ? (t._url = e, t._CORS()) : (t._message = t._xhr.statusText, t.set_state(2));
                  }
                }
              }, this._xhr.send();
            } catch (e) {
              throw this._message = e.message, this.set_state(2), e;
            }
          },
          getText: function() {
            return this._data;
          },
          getBlob: function() {
            return this._blobdata;
          },
          getXml: function() {
            var t = new DOMParser();
            return t.parseFromString(this._data, "text/xml");
          }
        };
        function Po(t, e) {
          this.loadChildFolders = !1, this._numLoadingFolders = 0, this._onComplete = t, this.loadChildFolders = e;
        }
        var Hh = {
          _folderLoaded: function() {
            this._numLoadingFolders--, this._numLoadingFolders || this._onComplete();
          },
          startingNewFolderLoad: function(t) {
            var e = this;
            this._numLoadingFolders++, t.childLoadCallback(function() {
              va.loadImagesets(t, e), e._folderLoaded();
            });
          }
        };
        function va() {
        }
        va.getWtmlFile = function(t, e, n) {
          n == null && (n = !1);
          var a = new pn();
          a.set_url(t);
          var s = new Po(e, n);
          return s.startingNewFolderLoad(a), a;
        }, va.loadImagesets = function(t, e) {
          for (var n = t.get_children(), a = r.enumerate(n); a.moveNext(); ) {
            var s = a.current;
            if (r.canCast(s, Mi)) {
              var l = s;
              Z.addImageSetToRepository(l);
            }
            if (r.canCast(s, fr)) {
              var g = s;
              g.get_studyImageset() != null && Z.addImageSetToRepository(g.get_studyImageset()), g.get_backgroundImageset() != null && Z.addImageSetToRepository(g.get_backgroundImageset());
            }
            r.canCast(s, pn) && e.loadChildFolders && e.startingNewFolderLoad(s);
          }
          if (!r.emptyString(Z.imageSetName))
            for (var _ = Z.imageSetName.toLowerCase(), m = r.enumerate(Z.getImageSets()); m.moveNext(); ) {
              var b = m.current;
              b.get_name().toLowerCase() === _ && Z.singleton.renderContext.set_backgroundImageset(b);
            }
        };
        var Gh = {};
        function Z() {
          this.freestandingMode = !1, this.uiController = null, this._annotations = [], this._hoverText = "", this._hoverTextPoint = new Mt(), this._lastMouseMove = new Date(1900, 1, 0, 0, 0, 0, 0), this.layers = [], this._frameCount = 0, this._zoomMax = 360, this._zoomMaxSolarSystem = 1e16, this._zoomMin = 0.001373291015625, this._zoomMinSolarSystem = 1e-8, this.constellation = "UMA", this._fadePoints = null, this.fader = mn.create(!0, 2e3), this._crossFadeFrame = !1, this._crossFadeTexture = null, this._sprite = new Kn(), this.renderType = 2, this._milkyWayBackground = null, this.capturingVideo = !1, this._videoBlobReady = null, this.dumpFrameParams = null, this._videoBlobQueue = {}, this._videoQueueIndex = 0, this._emptyFrames = [], this._beginZoom = 1, this._dragging = !1, this._mouseDown = !1, this._hasTwoTouches = !1, this._lastX = 0, this._lastY = 0, this._pointerIds = new Array(2), this._pinchingZoomRect = new Array(2), this._moved = !1, this._foregroundCanvas = null, this._fgDevice = null, this._tracking = !1, this._trackingObject = null, this.sandboxMode = !1, this._solarSystemTrack = 65536, this._moving = !1, this._targetStudyImageset = null, this._targetBackgroundImageset = null, this.tour = null, this.tourEdit = null, this._crossHairs = null;
        }
        Z.addImageSetToRepository = function(t) {
          for (var e = r.enumerate(Z.imageSets); e.moveNext(); ) {
            var n = e.current;
            if (n.get_imageSetID() === t.get_imageSetID())
              return n;
          }
          return Z.imageSets.push(t), t;
        }, Z.getImageSets = function() {
          return Z.imageSets;
        }, Z.get_renderNeeded = function() {
          return Z._renderNeeded;
        }, Z.set_renderNeeded = function(t) {
          return Z._renderNeeded = !0, t;
        }, Z.initControl = function(t) {
          return Z.initControl2(t, !0);
        }, Z.initControlParam = function(t, e) {
          return Z.initControl2(t, !0);
        }, Z.initControl2 = function(t, e) {
          return Z.initControl6(t, e, 0, 0, 360, "Sky");
        }, Z.initControl6 = function(t, e, n, a, s, l) {
          if (Z.singleton.renderContext.device == null) {
            Z.scriptInterface = new on(), Z.scriptInterface.settings = X.get_current();
            var g = Z._createCanvasElement(t), _ = g.getContext("webgl2");
            if (_ != null ? ti.useGlVersion2 = !0 : (console.warn("This browser does not support WebGL 2.0. Some features will work suboptimally. To get the full AAS WWT experience, consider using the latest version of Chrome, Firefox or Edge. In case you would like to use Safari, we recommend that you enable WebGL 2.0"), _ = g.getContext("webgl")), _ == null && (_ = g.getContext("experimental-webgl")), _ == null) {
              var m = g.getContext("2d");
              Z.singleton.renderContext.device = m;
            } else
              G.prepDevice = _, Z.singleton.renderContext.gl = _, ti.useGl = !0;
            Z.singleton.canvas = g, Z.singleton.renderContext.width = g.width, Z.singleton.renderContext.height = g.height, Z.singleton.setup(g, n, a, s), jt.initializeConstellations(), P.oneTimeInitialization(), l === "earth" ? Z.singleton.renderContext.set_backgroundImageset(Mi.create("Blue Marble", ze.singleton.coreStaticUrl("wwtweb/tiles.aspx?q={1},{2},{3},bm200407"), 0, 3, 3, 101, 0, 7, 256, 180, ".png", !1, "", 0, 0, 0, !1, ze.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=bm200407"), !0, !1, 0, 0, 0, "", "", "", "", 6371e3, "Earth")) : l === "black" ? Z.singleton.renderContext.set_backgroundImageset(Mi.create("Black Sky Background", "", 2, 3, 3, 102, 0, 0, 256, 180, ".png", !1, "0123", 0, 0, 0, !1, "", !1, !1, 2, 0, 0, "", "", "", "", 1, "Sky")) : Z.singleton.renderContext.set_backgroundImageset(Mi.create("DSS", ze.singleton.coreStaticUrl("wwtweb/dss.aspx?q={1},{2},{3}"), 2, 3, 3, 100, 0, 12, 256, 180, ".png", !1, "", 0, 0, 0, !1, ze.singleton.coreStaticUrl("thumbnails/DSS.png"), !0, !1, 0, 0, 0, "", "", "", "", 1, "Sky"));
          }
          return Z.singleton.renderContext.viewCamera.lng += 0, Z.singleton.renderContext._initGL(), e && Z.singleton.render(), Z.scriptInterface;
        }, Z._createCanvasElement = function(t) {
          var e = document.getElementById(t), n = document.createElement("canvas");
          return n.height = e.clientHeight, n.width = e.clientWidth, e.appendChild(n), n;
        }, Z.useUserLocation = function() {
          navigator.geolocation.getCurrentPosition(Z._getLocation, Z._getLocationError);
        }, Z._getLocation = function(t) {
          t.coords.latitude && X.get_globalSettings().set_locationLat(t.coords.latitude), t.coords.longitude && X.get_globalSettings().set_locationLng(t.coords.longitude), t.coords.altitude && X.get_globalSettings().set_locationAltitude(t.coords.altitude);
        }, Z._getLocationError = function(t) {
          t != null && t.coords != null && (t.coords.latitude, t.coords.longitude);
        }, Z.setBackgroundImageName = function(t) {
          Z.imageSetName = t;
        }, Z.setForegroundImageName = function(t) {
          Z.imageSetName = t;
        }, Z.showLayers = function(t) {
          Z.showDataLayers = t;
        };
        var qh = {
          _addAnnotation: function(t) {
            this._annotations.push(t), ve.batchDirty = !0;
          },
          _removeAnnotation: function(t) {
            r.remove(this._annotations, t), ve.batchDirty = !0;
          },
          _clearAnnotations: function() {
            this._annotations.length = 0, ve.batchDirty = !0;
          },
          _annotationclicked: function(t, e, n, a) {
            if (this._annotations != null && this._annotations.length > 0)
              for (var s = r.enumerate(this._annotations); s.moveNext(); ) {
                var l = s.current;
                if (l.hitTest(this.renderContext, t, e, n, a))
                  return Z.scriptInterface._fireAnnotationclicked(t, e, l.get_id()), !0;
              }
            return !1;
          },
          _annotationHover: function(t, e, n, a) {
            if (this._annotations != null && this._annotations.length > 0)
              for (var s = r.enumerate(this._annotations); s.moveNext(); ) {
                var l = s.current;
                if (l.hitTest(this.renderContext, t, e, n, a))
                  return this._hoverText = l.get_label(), this._hoverTextPoint = Mt.create(n, a), !0;
              }
            return !1;
          },
          get_zoomMax: function() {
            return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() === 4 ? this._zoomMaxSolarSystem : this._zoomMax;
          },
          set_zoomMax: function(t) {
            return this._zoomMax = t, t;
          },
          setSolarSystemMaxZoom: function(t) {
            this._zoomMaxSolarSystem = t;
          },
          get_zoomMin: function() {
            return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() === 4 ? this._zoomMinSolarSystem : this._zoomMin;
          },
          set_zoomMin: function(t) {
            return this._zoomMin = t, t;
          },
          setSolarSystemMinZoom: function(t) {
            this._zoomMinSolarSystem = t;
          },
          _notifyMoveComplete: function() {
          },
          get_crossFadeFrame: function() {
            return this._crossFadeFrame;
          },
          set_crossFadeFrame: function(t) {
            return t && this._crossFadeFrame !== t && (this._crossFadeTexture != null, this._crossFadeTexture = this.renderContext._getScreenTexture()), this._crossFadeFrame = t, t || this._crossFadeTexture != null && (this._crossFadeTexture = null), t;
          },
          _fadeFrame: function() {
            if (this.renderContext.gl != null) {
              var t = X.get_active().getSetting(17);
              if (t.opacity > 0) {
                var e = j._fromArgbColor(255 - yi.gamma(255 - r.truncate(t.opacity * 255), 0.45454545454545453), Pt.get_black());
                if (t.opacity > 0 || (e = j._fromArgbColor(255 - yi.gamma(255 - r.truncate(t.opacity * 255), 1 / 2.2), Pt.get_black())), this._crossFadeFrame ? e = j._fromArgbColor(yi.gamma(r.truncate(t.opacity * 255), 1 / 2.2), Pt.get_white()) : this._crossFadeTexture != null && (this._crossFadeTexture = null), this._fadePoints == null) {
                  this._fadePoints = new Array(4);
                  for (var n = 0; n < 4; n++)
                    this._fadePoints[n] = new Ye();
                }
                this._fadePoints[0].position.x = -this.renderContext.width / 2, this._fadePoints[0].position.y = this.renderContext.height / 2, this._fadePoints[0].position.z = 1347, this._fadePoints[0].tu = 0, this._fadePoints[0].tv = 1, this._fadePoints[0].color = e, this._fadePoints[1].position.x = -this.renderContext.width / 2, this._fadePoints[1].position.y = -this.renderContext.height / 2, this._fadePoints[1].position.z = 1347, this._fadePoints[1].tu = 0, this._fadePoints[1].tv = 0, this._fadePoints[1].color = e, this._fadePoints[2].position.x = this.renderContext.width / 2, this._fadePoints[2].position.y = this.renderContext.height / 2, this._fadePoints[2].position.z = 1347, this._fadePoints[2].tu = 1, this._fadePoints[2].tv = 1, this._fadePoints[2].color = e, this._fadePoints[3].position.x = this.renderContext.width / 2, this._fadePoints[3].position.y = -this.renderContext.height / 2, this._fadePoints[3].position.z = 1347, this._fadePoints[3].tu = 1, this._fadePoints[3].tv = 0, this._fadePoints[3].color = e, this._sprite.draw(this.renderContext, this._fadePoints, 4, this._crossFadeTexture, !0, 1);
              }
            }
          },
          captureVideo: function(t, e, n, a, s, l) {
            this.capturingVideo = !0, this._videoBlobReady = t, r.clearKeys(this._videoBlobQueue), this._videoQueueIndex = 0, this._emptyFrames.length = 0, this.dumpFrameParams = new co(e, n, a, l, !0), Q.frameDumping = !0, Q.framesPerSecond = a, Q.totalFrames = s, Q.currentFrameNumber = 0;
          },
          render: function() {
            var t = this;
            this.renderOneFrame(), setTimeout(function() {
              t.render();
            }, 10);
          },
          renderOneFrame: function() {
            this.renderContext.get_backgroundImageset() != null ? this.renderType = this.renderContext.get_backgroundImageset().get_dataSetType() : this.renderType = 2;
            var t = !1;
            if (this.canvas.width !== this.canvas.parentNode.clientWidth && (this.canvas.width = this.canvas.parentNode.clientWidth, t = !0), this.canvas.height !== this.canvas.parentNode.clientHeight && (this.canvas.height = this.canvas.parentNode.clientHeight, t = !0), t && this.explorer != null && this.explorer.refresh(), !(this.canvas.width < 1 || this.canvas.height < 1)) {
              if (t && (this._crossHairs = null), G.lastDeepestLevel = G.deepestLevel, Me.width = this.renderContext.width = this.canvas.width, Me.height = this.renderContext.height = this.canvas.height, G.tilesInView = 0, G.tilesTouched = 0, G.deepestLevel = 0, Q.set_metaNow(r.now()), this.get__mover() != null) {
                if (Q.set_now(this.get__mover().get_currentDateTime()), D.updatePlanetLocations(this.get_solarSystemMode()), this.get__mover() != null) {
                  var e = this.get__mover().get_currentPosition();
                  if (this.renderContext.targetCamera = e.copy(), this.renderContext.viewCamera = e.copy(), this.renderContext.space && X.get_active().get_galacticMode()) {
                    var n = U.j2000toGalactic(e.get_RA() * 15, e.get_dec());
                    this.renderContext.targetAlt = this.renderContext.alt = n[1], this.renderContext.targetAz = this.renderContext.az = n[0];
                  } else if (this.renderContext.space && X.get_active().get_localHorizonMode()) {
                    var a = U.equitorialToHorizon(U.fromRaDec(e.get_RA(), e.get_dec()), Q.get_location(), Q.get_now());
                    this.renderContext.targetAlt = this.renderContext.alt = a.get_alt(), this.renderContext.targetAz = this.renderContext.az = a.get_az();
                  }
                  this.get__mover().get_complete() && (Z.scriptInterface._fireArrived(this.get__mover().get_currentPosition().get_RA(), this.get__mover().get_currentPosition().get_dec(), Z.singleton.renderContext.viewCamera.zoom), this.set__mover(null), this._notifyMoveComplete());
                }
              } else
                Q.updateClock(), D.updatePlanetLocations(this.get_solarSystemMode()), this._updateViewParameters();
              if (this.renderContext.clear(), this.renderType === 4) {
                this._solarSystemTrack < 20 && (D.getAdjustedPlanetRadius(this._solarSystemTrack), this.renderContext.get_solarSystemCameraDistance(), this.renderContext.get_fovLocal()), this._trackingObject == null, this.renderContext.setupMatricesSolarSystem(!0);
                var s = this.renderContext.viewCamera.zoom, l = Math.min(1, Math.max(0, Math.log(s) - 8.4) / 4.2), g = Math.min(1, Math.max(0, Math.log(s) - 17.9) / 2.3), _ = this.renderContext.get_world(), m = this.renderContext.get_world().clone();
                m._multiply(tt._scaling(1e5, 1e5, 1e5)), m._multiply(tt._rotationX(23.5 / 180 * Math.PI)), m._multiply(tt.translation(this.renderContext.cameraPosition)), this.renderContext.set_world(m), this.renderContext.set_worldBase(m), this.renderContext.space = !0, this.renderContext.makeFrustum();
                var b = this.renderContext.lighting;
                if (this.renderContext.lighting = !1, X.get_active().get_solarSystemMilkyWay() && l < 1 && (this._milkyWayBackground == null && (this._milkyWayBackground = this.getImagesetByName("Digitized Sky Survey (Color)")), this._milkyWayBackground != null)) {
                  Me.cullInside = !0;
                  var y = (1 - l) / 2;
                  this.renderContext.drawImageSet(this._milkyWayBackground, y * 100), Me.cullInside = !1;
                }
                this._drawSkyOverlays(), this.renderContext.lighting = b, this.renderContext.space = !1, this.renderContext.set_world(_), this.renderContext.set_worldBase(_), this.renderContext.makeFrustum();
                var M = this.renderContext.cameraPosition, A = this.renderContext.get_world(), R = this.renderContext.get_world();
                R._multiply(tt.translation(this.renderContext.viewCamera.viewTarget)), this.renderContext.cameraPosition = $.subtractVectors(this.renderContext.cameraPosition, this.renderContext.viewCamera.viewTarget), this.renderContext.set_world(R), this.renderContext.makeFrustum(), X.get_active().get_solarSystemCosmos() && W.drawCosmos3D(this.renderContext, 1), X.get_active().get_solarSystemMilkyWay() && g > 0 && W.drawGalaxyImage(this.renderContext, g), X.get_active().get_solarSystemStars() && W.drawStars3D(this.renderContext, 1), R = A;
                var F = this.renderContext.viewCamera.viewTarget, O = $.create(-F.x, -F.y, -F.z);
                this.renderContext.cameraPosition = M, R._multiply(tt.translation(O)), this.renderContext.set_world(R), this.renderContext.makeFrustum(), P._draw(this.renderContext, 1, !0, "Sky", !0, !1), this.renderContext.set_world(A), this.renderContext.makeFrustum(), this.renderContext.get_solarSystemCameraDistance() < 15e3 && (this.renderContext.setupMatricesSolarSystem(!1), X.get_active().get_solarSystemMinorPlanets() && Ge.drawMPC3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget), X.get_active().get_solarSystemPlanets() && D.drawPlanets3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget));
              } else {
                if (!this.renderType || this.renderType === 1 ? this.renderContext._setupMatricesLand3d() : this.renderContext.setupMatricesSpace3d(this.renderContext.width, this.renderContext.height), this.renderContext.drawImageSet(this.renderContext.get_backgroundImageset(), 100), this.renderContext.get_foregroundImageset() != null)
                  if (this.renderContext.get_foregroundImageset().get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType())
                    this.renderContext.set_foregroundImageset(null);
                  else if (this.renderContext.viewCamera.opacity !== 100 && this.renderContext.gl == null) {
                    (this._foregroundCanvas.width !== this.renderContext.width || this._foregroundCanvas.height !== this.renderContext.height) && (this._foregroundCanvas.width = r.truncate(this.renderContext.width), this._foregroundCanvas.height = r.truncate(this.renderContext.height));
                    var B = this.renderContext.device;
                    this._fgDevice.clearRect(0, 0, this.renderContext.width, this.renderContext.height), this.renderContext.device = this._fgDevice, this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), 100), this.renderContext.device = B, this.renderContext.device.save(), this.renderContext.device.globalAlpha = this.renderContext.viewCamera.opacity / 100, this.renderContext.device.drawImage(this._foregroundCanvas, 0, 0), this.renderContext.device.restore();
                  } else
                    this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), this.renderContext.viewCamera.opacity);
                if (this.renderType === 2)
                  for (var H = r.enumerate(this.renderContext.get_catalogHipsImagesets()); H.moveNext(); ) {
                    var K = H.current;
                    K.get_hipsProperties().get_catalogSpreadSheetLayer().enabled && K.get_hipsProperties().get_catalogSpreadSheetLayer().lastVersion === K.get_hipsProperties().get_catalogSpreadSheetLayer().get_version() && this.renderContext.drawImageSet(K, 100);
                  }
                if (this.renderType === 2 && X.get_active().get_showSolarSystem() && (D.drawPlanets(this.renderContext, 1), this.constellation = jt.containment.findConstellationForPoint(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), this._drawSkyOverlays()), this.get_planetLike() || this.get_space()) {
                  if (this.get_space())
                    this.renderContext.set_worldBaseNonRotating(this.renderContext.get_world()), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                  else {
                    var J = U.mstFromUTC2(Q.get_now(), 0) / 180 * Math.PI;
                    this.renderContext.set_worldBaseNonRotating(tt.multiplyMatrix(tt._rotationY(J), this.renderContext.get_worldBase())), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                  }
                  var it = this.getCurrentReferenceFrame();
                  P._draw(this.renderContext, 1, this.get_space(), it, !0, this.get_space());
                }
              }
              var ot = this.renderContext.get_world(), lt = this.renderContext.get_view(), gt = this.renderContext.get_projection();
              if (X.get_current().get_showCrosshairs() && this._drawCrosshairs(this.renderContext), this.uiController != null)
                this.uiController.render(this.renderContext);
              else {
                ve.prepBatch(this.renderContext);
                for (var ut = r.enumerate(this._annotations); ut.moveNext(); ) {
                  var St = ut.current;
                  St.draw(this.renderContext);
                }
                if (ve.drawBatch(this.renderContext), r.now() - this._lastMouseMove > 400) {
                  var mt = this.getCoordinatesForScreenPoint(this._hoverTextPoint.x, this._hoverTextPoint.y);
                  this._annotationHover(mt.x, mt.y, this._hoverTextPoint.x, this._hoverTextPoint.y), this._lastMouseMove = new Date(2100, 1, 1);
                }
                r.emptyString(this._hoverText) || this._drawHoverText(this.renderContext);
              }
              var Dt = !Ut.get_queueCount();
              this.renderContext.setupMatricesOverlays(), this._fadeFrame(), this._frameCount++, Ut.decimateQueue(), Ut.processQueue(this.renderContext), G.currentRenderGeneration++, qe.get_playing() || this.set_crossFadeFrame(!1), this.renderContext.set_world(ot), this.renderContext.set_view(lt), this.renderContext.set_projection(gt);
              var yt = r.now(), ue = yt - this._lastUpdate;
              ue > 1e3 && (this._lastUpdate = yt, this._frameCount = 0, Me.trianglesRendered = 0, Me.trianglesCulled = 0), this.capturingVideo && (this.dumpFrameParams != null && (!this.dumpFrameParams.waitDownload || Dt) && (this.captureFrameForVideo(this._videoBlobReady, this.dumpFrameParams.width, this.dumpFrameParams.height, this.dumpFrameParams.format), Q.nextFrame()), Q.get_doneDumping() && (Q.frameDumping = !1, Q.cancelFrameDump = !1, this.capturingVideo = !1));
            }
          },
          getCurrentReferenceFrame: function() {
            if (this.renderContext.get_backgroundImageset() == null)
              return "Sun";
            if (!r.emptyString(this.renderContext.get_backgroundImageset().get_referenceFrame()))
              return this.renderContext.get_backgroundImageset().get_referenceFrame();
            if (!this.renderContext.get_backgroundImageset().get_dataSetType())
              return "Earth";
            if (this.renderContext.get_backgroundImageset().get_name() === "Visible Imagery" && this.renderContext.get_backgroundImageset().get_url().toLowerCase().indexOf("mars") > -1)
              return this.renderContext.get_backgroundImageset().set_referenceFrame("Mars"), this.renderContext.get_backgroundImageset().get_referenceFrame();
            if (this.renderContext.get_backgroundImageset().get_dataSetType() === 1)
              for (var t = r.enumerate(Z.solarSystemObjectsNames); t.moveNext(); ) {
                var e = t.current;
                if (this.renderContext.get_backgroundImageset().get_name().toLowerCase().indexOf(e.toLowerCase()) > -1)
                  return this.renderContext.get_backgroundImageset().set_referenceFrame(e), e;
              }
            return this.renderContext.get_backgroundImageset().get_dataSetType() === 2 ? "Sky" : "";
          },
          get_planetLike: function() {
            return this.renderContext.get_backgroundImageset() != null ? !this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 : !0;
          },
          get_space: function() {
            return this.renderContext.get_backgroundImageset() != null ? this.renderContext.get_backgroundImageset().get_dataSetType() === 2 : !0;
          },
          _drawSkyOverlays: function() {
            X.get_active().get_showConstellationPictures() && !this.freestandingMode && jt.drawArtwork(this.renderContext), X.get_active().get_showConstellationFigures() && (Z.constellationsFigures == null && (Z.constellationsFigures = jt.create("Constellations", ze.singleton.engineAssetUrl("figures.txt"), !1, !1, !1)), Z.constellationsFigures.draw(this.renderContext, !1, "UMA", !1)), X.get_active().get_showEclipticGrid() && (W.drawEclipticGrid(this.renderContext, 1, X.get_active().get_eclipticGridColor()), X.get_active().get_showEclipticGridText() && W.drawEclipticGridText(this.renderContext, 1, X.get_active().get_eclipticGridColor())), X.get_active().get_showGalacticGrid() && (W.drawGalacticGrid(this.renderContext, 1, X.get_active().get_galacticGridColor()), X.get_active().get_showGalacticGridText() && W.drawGalacticGridText(this.renderContext, 1, X.get_active().get_galacticGridColor())), X.get_active().get_showAltAzGrid() && (W.drawAltAzGrid(this.renderContext, 1, X.get_active().get_altAzGridColor()), X.get_active().get_showAltAzGridText() && W.drawAltAzGridText(this.renderContext, 1, X.get_active().get_altAzGridColor())), X.get_active().get_showPrecessionChart() && W.drawPrecessionChart(this.renderContext, 1, X.get_active().get_precessionChartColor()), X.get_active().get_showEcliptic() && (W.drawEcliptic(this.renderContext, 1, X.get_active().get_eclipticColor()), X.get_active().get_showEclipticOverviewText() && W.drawEclipticText(this.renderContext, 1, X.get_active().get_eclipticColor())), X.get_active().get_showGrid() && (W.drawEquitorialGrid(this.renderContext, 1, X.get_active().get_equatorialGridColor()), X.get_active().get_showEquatorialGridText() && W.drawEquitorialGridText(this.renderContext, 1, X.get_active().get_equatorialGridColor())), X.get_active().get_showConstellationBoundries() && (Z.constellationsBoundries == null && (Z.constellationsBoundries = jt.create("Constellations", ze.singleton.engineAssetUrl("constellations.txt"), !0, !1, !1)), Z.constellationsBoundries.draw(this.renderContext, X.get_active().get_showConstellationSelection(), this.constellation, !1)), X.get_active().get_showConstellationLabels() && jt.drawConstellationNames(this.renderContext, 1, Pt.get_yellow());
          },
          _drawHoverText: function(t) {
            if (t.gl == null) {
              var e = t.device;
              e.save(), e.fillStyle = "White", e.font = "15px Arial", e.fillText(this._hoverText, this._hoverTextPoint.x, this._hoverTextPoint.y), e.restore();
            }
          },
          rAtoViewLng: function(t) {
            return (180 - t / 24 * 360 - 180 + 540) % 360 - 180;
          },
          _updateViewParameters: function() {
            if (this.renderContext.space && this._tracking && this._trackingObject != null)
              if (X.get_active().get_galacticMode() && this.renderContext.space) {
                var t = U.j2000toGalactic(this._trackingObject.get_RA() * 15, this._trackingObject.get_dec());
                this.renderContext.targetAlt = this.renderContext.alt = t[1], this.renderContext.targetAz = this.renderContext.az = t[0];
              } else if (this.renderContext.space && X.get_active().get_localHorizonMode()) {
                var e = U.equitorialToHorizon(U.fromRaDec(this._trackingObject.get_RA(), this._trackingObject.get_dec()), Q.get_location(), Q.get_now());
                this.renderContext.targetAlt = e.get_alt(), this.renderContext.targetAz = e.get_az();
              } else
                this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng = this.rAtoViewLng(this._trackingObject.get_RA()), this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat = this._trackingObject.get_dec();
            else
              this.get_solarSystemMode() || (this._tracking = !1, this._trackingObject = null);
            var n = 1 - 0.8, a = 0.8;
            if (!this._tracking) {
              var s = this.renderContext.viewCamera.zoom / 4e3;
              this.renderContext.viewCamera.zoom > 360 && (s = 360 / 4e4), this.renderContext.space && (X.get_active().get_localHorizonMode() || X.get_active().get_galacticMode()) ? (Math.abs(this.renderContext.targetAlt - this.renderContext.alt) >= s | Math.abs(this.renderContext.targetAz - this.renderContext.az) >= s) === 1 && (this.renderContext.alt += (this.renderContext.targetAlt - this.renderContext.alt) / 10, Math.abs(this.renderContext.targetAz - this.renderContext.az) > 170 ? this.renderContext.targetAz > this.renderContext.az ? this.renderContext.az += (this.renderContext.targetAz - (360 + this.renderContext.az)) / 10 : this.renderContext.az += (360 + this.renderContext.targetAz - this.renderContext.az) / 10 : this.renderContext.az += (this.renderContext.targetAz - this.renderContext.az) / 10, this.renderContext.az = (this.renderContext.az + 720) % 360) : (Math.abs(this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) >= s | Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) >= s) === 1 ? (this.renderContext.viewCamera.lat += (this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) / 10, Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) > 170 ? this.renderContext.targetCamera.lng > this.renderContext.viewCamera.lng ? this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - (360 + this.renderContext.viewCamera.lng)) / 10 : this.renderContext.viewCamera.lng += (360 + this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10 : this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10, this.renderContext.viewCamera.lng = (this.renderContext.viewCamera.lng + 720) % 360) : (this.renderContext.viewCamera.lat !== this.renderContext.targetCamera.lat || this.renderContext.viewCamera.lng !== this.renderContext.targetCamera.lng) && (this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat, this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng);
            }
            this.renderContext.viewCamera.zoom = a * this.renderContext.viewCamera.zoom + n * this.renderContext.targetCamera.zoom, this.renderContext.viewCamera.rotation = a * this.renderContext.viewCamera.rotation + n * this.renderContext.targetCamera.rotation, this.renderContext.viewCamera.angle = a * this.renderContext.viewCamera.angle + n * this.renderContext.targetCamera.angle;
          },
          move: function(t, e) {
            var n = Math.atan2(e, t), a = Math.sqrt(t * t + e * e);
            this.get_solarSystemMode() || this.get_planetLike() ? (t = Math.cos(n + this.renderContext.viewCamera.rotation) * a, e = Math.sin(n + this.renderContext.viewCamera.rotation) * a) : (t = Math.cos(n - this.renderContext.viewCamera.rotation) * a, e = Math.sin(n - this.renderContext.viewCamera.rotation) * a);
            var s = this.renderContext.get_fovScale() / 3600;
            this.renderContext.get_backgroundImageset().get_dataSetType() === 4 && (s = 0.06);
            var l = s / Math.max(0.2, Math.cos(this.renderContext.viewCamera.lat / 180 * Math.PI));
            (!this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 || this.renderContext.get_backgroundImageset().get_dataSetType() === 4) && (l *= 6.3, s *= 6.3), this.renderContext.space && (X.get_active().get_galacticMode() || X.get_active().get_localHorizonMode()) ? (t = X.get_active().get_localHorizonMode() ? -t : t, this.renderContext.targetAz += t * l, this.renderContext.targetAz = (this.renderContext.targetAz + 720) % 360, this.renderContext.targetAlt += e * s, this.renderContext.targetAlt > 90 && (this.renderContext.targetAlt = 90), this.renderContext.targetAlt < -90 && (this.renderContext.targetAlt = -90)) : (this.renderContext.targetCamera.lng -= t * l, this.renderContext.targetCamera.lng = (this.renderContext.targetCamera.lng + 720) % 360, this.renderContext.targetCamera.lat += e * s, this.renderContext.targetCamera.lat > 90 && (this.renderContext.targetCamera.lat = 90), this.renderContext.targetCamera.lat < -90 && (this.renderContext.targetCamera.lat = -90)), X.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy()), t && e && (this._tracking = !1, this._trackingObject = null);
          },
          zoom: function(t) {
            this.renderContext.targetCamera.zoom *= t, this.renderContext.targetCamera.zoom > this.get_zoomMax() && (this.renderContext.targetCamera.zoom = this.get_zoomMax()), X.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy());
          },
          roll: function(t) {
            this.renderContext.targetCamera.rotation += t;
          },
          onGestureStart: function(t) {
            this._mouseDown = !1, this._beginZoom = this.renderContext.viewCamera.zoom;
          },
          onGestureChange: function(t) {
            var e = t;
            this._mouseDown = !1, this.renderContext.targetCamera.zoom = this.renderContext.viewCamera.zoom = Math.min(360, this._beginZoom * (1 / e.scale));
          },
          onGestureEnd: function(t) {
            this._mouseDown = !1;
          },
          onTouchStart: function(t) {
            var e = t;
            if (e.preventDefault(), e.stopPropagation(), this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY, e.targetTouches.length === 2) {
              this._hasTwoTouches = !0;
              return;
            }
            if (this.uiController != null) {
              var n = new js(this._lastX, this._lastY);
              if (this.uiController.mouseDown(this, n)) {
                this._mouseDown = !1, this._dragging = !1;
                return;
              }
            }
            this._mouseDown = !0;
          },
          onTouchMove: function(t) {
            var e = t;
            if (this._hasTwoTouches) {
              var n = e.touches[0], a = e.touches[1], s = new Array(2);
              if (s[0] = Mt.create(n.pageX, n.pageY), s[1] = Mt.create(a.pageX, a.pageY), this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
                var l = Mt.create(this.renderContext.width / 2, this.renderContext.height / 2), g = Mt.subtract(s[0], this._pinchingZoomRect[0]), _ = Mt.subtract(s[1], this._pinchingZoomRect[1]), m = Mt.subtract(this._pinchingZoomRect[0], l), b = Mt.subtract(this._pinchingZoomRect[1], l);
                m.normalize(), b.normalize();
                var y = g.x * m.x + g.y * m.y, M = _.x * b.x + _.y * b.y, A = Mt.create(y * m.x, y * m.y), R = Mt.create(M * b.x, M * b.y), F = Mt.subtract(g, A), O = Mt.subtract(_, R), B = A.get_length() + R.get_length(), H = F.get_length() + O.get_length();
                if (B >= H) {
                  var K = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), J = this.getDistance(s[0], s[1]), it = K / J;
                  this.zoom(it);
                } else {
                  var ot = Mt.subtract(this._pinchingZoomRect[0], l), lt = Mt.subtract(this._pinchingZoomRect[1], l), gt = Mt.subtract(s[0], l), ut = Mt.subtract(s[1], l), St = this.crossProductZ(ot, gt), mt = this.crossProductZ(lt, ut), Dt = Math.asin(St / (ot.get_length() * gt.get_length())), yt = Math.asin(mt / (lt.get_length() * ut.get_length()));
                  if (Dt * yt >= 0) {
                    var ue = Dt + yt;
                    (this.get_planetLike() || this.get_solarSystemMode()) && (ue *= -1), this.roll(ue);
                  }
                }
              }
              this._pinchingZoomRect = s, e.stopPropagation(), e.preventDefault();
              return;
            }
            if (e.preventDefault(), e.stopPropagation(), this._mouseDown) {
              this._dragging = !0;
              var _e = e.targetTouches[0].pageX - this._lastX, Qt = e.targetTouches[0].pageY - this._lastY;
              this.move(_e, Qt), this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY;
            } else if (this.uiController != null && this.uiController.mouseMove(this, t)) {
              t.preventDefault(), t.stopPropagation();
              return;
            }
          },
          onTouchEnd: function(t) {
            var e = t;
            if (e.preventDefault(), e.stopPropagation(), this._pinchingZoomRect[0] = null, this._pinchingZoomRect[1] = null, this._hasTwoTouches) {
              e.touches.length < 2 && (this._hasTwoTouches = !1);
              return;
            }
            if (this.uiController != null) {
              var n = new js(this._lastX, this._lastY);
              if (this.uiController.mouseUp(this, n)) {
                this._mouseDown = !1, this._dragging = !1;
                return;
              }
            }
            this._mouseDown = !1, this._dragging = !1;
          },
          onPointerDown: function(t) {
            var e = t, n = 0, a = arguments[0], s = arguments[0].target;
            if (s.setPointerCapture ? s.setPointerCapture(a.pointerId) : s.msSetPointerCapture && s.msSetPointerCapture(a.pointerId), this._pointerIds[0] === e.pointerId)
              n = 0;
            else if (this._pointerIds[1] === e.pointerId)
              n = 1;
            else if (!this._pointerIds[0])
              n = 0;
            else if (!this._pointerIds[1])
              n = 1;
            else
              return;
            this._pointerIds[n] = e.pointerId, this._pinchingZoomRect[n] = Mt.create(t.offsetX, t.offsetY);
          },
          onPointerMove: function(t) {
            var e = t, n = 0;
            if (this._pointerIds[0] === e.pointerId)
              n = 0;
            else if (this._pointerIds[1] === e.pointerId)
              n = 1;
            else
              return;
            if (this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
              var a = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), s = Mt.create(t.offsetX, t.offsetY), l = this.getDistance(s, this._pinchingZoomRect[0]), g = a / l, _ = Math.abs(Math.log(g));
              isFinite(_) || (_ = 1e3);
              var m = this.getDistance(s, this._pinchingZoomRect[1]), b = a / m, y = Math.abs(Math.log(b));
              isFinite(y) || (y = 1e3), y < _ ? (this._pinchingZoomRect[0] = s, this.zoom(b)) : (this._pinchingZoomRect[1] = s, this.zoom(g));
            } else
              this._pinchingZoomRect[n] = Mt.create(t.offsetX, t.offsetY);
            t.stopPropagation(), t.preventDefault();
          },
          onPointerUp: function(t) {
            var e = t;
            this._pointerIds[0] === e.pointerId && (this._pointerIds[0] = -2, this._pinchingZoomRect[0] = null), this._pointerIds[1] === e.pointerId && (this._pointerIds[1] = -2, this._pinchingZoomRect[1] = null);
          },
          onMouseDown: function(t) {
            document.addEventListener("mousemove", r.bind("onMouseMove", this), !1), document.addEventListener("mouseup", r.bind("onMouseUp", this), !1), !(this.uiController != null && this.uiController.mouseDown(this, t)) && (this._mouseDown = !0, this._lastX = Ii.offsetX(this.canvas, t), this._lastY = Ii.offsetY(this.canvas, t));
          },
          onMouseMove: function(t) {
            if (this._lastMouseMove = r.now(), this._hoverTextPoint = Mt.create(Ii.offsetX(this.canvas, t), Ii.offsetY(this.canvas, t)), this._hoverText = "", this._mouseDown)
              t.preventDefault(), t.stopPropagation(), this._moved = !0, t.ctrlKey ? this._tilt(Ii.offsetX(this.canvas, t) - this._lastX, Ii.offsetY(this.canvas, t) - this._lastY) : this.move(Ii.offsetX(this.canvas, t) - this._lastX, Ii.offsetY(this.canvas, t) - this._lastY), this._lastX = Ii.offsetX(this.canvas, t), this._lastY = Ii.offsetY(this.canvas, t);
            else if (this.uiController != null && this.uiController.mouseMove(this, t)) {
              t.preventDefault(), t.stopPropagation();
              return;
            }
          },
          onMouseUp: function(t) {
            if (document.removeEventListener("mousemove", r.bind("onMouseMove", this), !1), document.removeEventListener("mouseup", r.bind("onMouseUp", this), !1), this.uiController != null && this.uiController.mouseUp(this, t)) {
              this._mouseDown = !1, t.preventDefault();
              return;
            }
            if (this._mouseDown && !this._moved) {
              var e = this.getCoordinatesForScreenPoint(Ii.offsetX(this.canvas, t), Ii.offsetY(this.canvas, t));
              this._annotationclicked(e.x, e.y, Ii.offsetX(this.canvas, t), Ii.offsetY(this.canvas, t)) || Z.scriptInterface._fireClick(e.x, e.y);
            }
            this._mouseDown = !1, this._moved = !1;
          },
          onMouseWheel: function(t) {
            var e = t, n;
            e.deltaY ? n = -e.deltaY : e.detail ? n = e.detail * -1 : n = e.wheelDelta, n > 0 ? this.zoom(0.9) : this.zoom(1.1), t.stopPropagation(), t.preventDefault();
          },
          onDoubleClick: function(t) {
            Z.showDataLayers = !0;
          },
          onKeyDown: function(t) {
            this.uiController != null && this.uiController.keyDown(this, t);
          },
          getDistance: function(t, e) {
            var n, a;
            return n = t.x - e.x, a = t.y - e.y, Math.sqrt(n * n + a * a);
          },
          crossProductZ: function(t, e) {
            return t.x * e.y - t.y * e.x;
          },
          onContextMenu: function(t) {
            t.preventDefault(), t.stopPropagation();
          },
          _tilt: function(t, e) {
            this.renderContext.targetCamera.rotation += t * 1e-3, this.renderContext.targetCamera.angle += e * 1e-3, this.renderContext.targetCamera.angle < -1.52 && (this.renderContext.targetCamera.angle = -1.52), this.renderContext.targetCamera.angle > 0 && (this.renderContext.targetCamera.angle = 0);
          },
          getCoordinatesForScreenPoint: function(t, e) {
            var n = Mt.create(t, e), a = this.transformPickPointToWorldSpace(n, this.renderContext.width, this.renderContext.height);
            return U.cartesianToSphericalSky(a);
          },
          transformPickPointToWorldSpace: function(t, e, n) {
            var a = new $();
            if (this.renderContext.get_projection() != null) {
              var s = new $();
              s.x = (2 * t.x / e - 1) / this.renderContext.get_projection().get_m11(), s.y = (2 * t.y / n - 1) / this.renderContext.get_projection().get_m22(), s.z = 1;
              var l = tt.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
              l.invert(), a.x = s.x * l.get_m11() + s.y * l.get_m21() + s.z * l.get_m31(), a.y = s.x * l.get_m12() + s.y * l.get_m22() + s.z * l.get_m32(), a.z = s.x * l.get_m13() + s.y * l.get_m23() + s.z * l.get_m33(), a.normalize();
            }
            return a;
          },
          transformWorldPointToPickSpace: function(t, e, n) {
            var a = tt.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
            a.invert();
            var s = new Mt(), l = t.x * a.get_m31() + t.y * a.get_m32() + t.z * a.get_m33(), g = (t.x * a.get_m11() + t.y * a.get_m12() + t.z * a.get_m13()) / l, _ = (t.x * a.get_m21() + t.y * a.get_m22() + t.z * a.get_m23()) / l;
            return s.x = Math.round((1 + this.renderContext.get_projection().get_m11() * g) * (e / 2)), s.y = Math.round((1 + this.renderContext.get_projection().get_m22() * _) * (n / 2)), s;
          },
          getScreenPointForCoordinates: function(t, e) {
            var n = Mt.create(t, e), a = U.sphericalSkyToCartesian(n), s = this.transformWorldPointToPickSpace(a, this.renderContext.width, this.renderContext.height);
            return s;
          },
          setup: function(t, e, n, a) {
            var s = this;
            window.addEventListener("contextmenu", r.bind("onContextMenu", this), !1), document.body.addEventListener("keydown", r.bind("onKeyDown", this), !1), t.addEventListener("dblclick", r.bind("onDoubleClick", this), !1), t.addEventListener("mousedown", r.bind("onMouseDown", this), !1), t.addEventListener("wheel", r.bind("onMouseWheel", this), !1), t.addEventListener("mousewheel", r.bind("onMouseWheel", this), !1), t.addEventListener("DOMMouseScroll", r.bind("onMouseWheel", this), !1), t.addEventListener("touchstart", r.bind("onTouchStart", this), !1), t.addEventListener("touchmove", r.bind("onTouchMove", this), !1), t.addEventListener("touchend", r.bind("onTouchEnd", this), !1), t.addEventListener("gesturechange", r.bind("onGestureChange", this), !1), t.addEventListener("gesturestart", r.bind("onGestureStart", this), !1), t.addEventListener("gestureend", r.bind("onGestureEnd", this), !1), t.addEventListener("pointerdown", r.bind("onPointerDown", this), !1), t.addEventListener("pointermove", r.bind("onPointerMove", this), !1), t.addEventListener("pointerup", r.bind("onPointerUp", this), !1), this.renderContext.viewCamera.lat = e, this.renderContext.viewCamera.lng = n, this.renderContext.viewCamera.zoom = a, this.renderContext.targetCamera = this.renderContext.viewCamera.copy(), this.renderContext.gl == null && (this._foregroundCanvas = document.createElement("canvas"), this._foregroundCanvas.width = t.width, this._foregroundCanvas.height = t.height, this._fgDevice = this._foregroundCanvas.getContext("2d")), this.freestandingMode ? setTimeout(function() {
              s._setupComplete();
            }, 0) : va.getWtmlFile(ze.singleton.coreDynamicUrl("wwtweb/catalog.aspx?X=ImageSets6"), r.bind("_setupComplete", this), !0);
          },
          _setupComplete: function() {
            Z.scriptInterface._fireReady();
          },
          gotoRADecZoom: function(t, e, n, a, s) {
            this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(!1, a, this._cameraParametersFromRADecZoom(t, e, n, s), Z.singleton.renderContext.get_foregroundImageset(), Z.singleton.renderContext.get_backgroundImageset());
          },
          _cameraParametersFromRADecZoom: function(t, e, n, a) {
            for (; t > 24; )
              t -= 24;
            for (; t < 0; )
              t += 24;
            e = Fr.clamp(e, -90, 90), n = Fr.clamp(n, this.get_zoomMin(), this.get_zoomMax());
            var s = a ?? Z.singleton.renderContext.viewCamera.rotation, l = _i.create(e, Z.singleton.renderContext.rAtoViewLng(t), n, s, Z.singleton.renderContext.viewCamera.angle, Z.singleton.renderContext.viewCamera.opacity);
            return l;
          },
          timeToRADecZoom: function(t, e, n, a) {
            var s = this._cameraParametersFromRADecZoom(t, e, n, a);
            return this.timeToTargetFull(s, !1);
          },
          get_solarSystemMode: function() {
            return this.renderContext.get_backgroundImageset() == null ? !1 : this.renderContext.get_backgroundImageset().get_dataSetType() === 4;
          },
          gotoTarget: function(t, e, n, a) {
            if (t != null) {
              if (a && this.get_solarSystemMode() && (t.get_classification() === 536870912 && t.get_type() !== 4 || t.get_classification() === 1 || t.get_classification() === 1048576 && t.get_distance() > 0)) {
                var s = 65536;
                if (t.get_classification() === 1 || t.get_classification() === 1048576)
                  s = 20;
                else
                  try {
                    t.get_target() !== 65536 ? s = t.get_target() : s = D.getPlanetIDFromName(t.get_name());
                  } catch {
                  }
                if (s !== 65536) {
                  if (this._trackingObject = t, s === this._solarSystemTrack && !(t.get_classification() === 1 || t.get_classification() === 1048576)) {
                    this.gotoTarget3(t.get_camParams(), e, n);
                    return;
                  }
                  var l = 4;
                  s === 20 ? l = 17 : l += 13 * (101 - X.get_active().get_solarSystemScale()) / 100, n && (l = 1);
                  var g = this.renderContext.viewCamera.copy();
                  g.targetReferenceFrame = "", g.target = s;
                  var _ = 10;
                  if (s === 20) {
                    t.get_classification() === 1048576 ? _ = 1404946007758 : _ = 63239.6717 * 100;
                    var m = U.raDecTo3dAu(t.get_RA(), t.get_dec(), t.get_distance()), b = U.meanObliquityOfEcliptic(Q.get_jNow()) / 180 * Math.PI;
                    m.rotateX(b), g.viewTarget = $.negate(g.viewTarget);
                  } else {
                    switch (g.viewTarget = D.getPlanet3dLocationJD(s, Q.getJNowForFutureTime(l)), s) {
                      case 0:
                        _ = 0.6;
                        break;
                      case 1:
                        _ = 4e-4;
                        break;
                      case 2:
                        _ = 4e-4;
                        break;
                      case 3:
                        _ = 4e-4;
                        break;
                      case 4:
                        _ = 7e-3;
                        break;
                      case 5:
                        _ = 7e-3;
                        break;
                      case 6:
                        _ = 4e-3;
                        break;
                      case 7:
                        _ = 4e-3;
                        break;
                      case 8:
                        _ = 4e-4;
                        break;
                      case 9:
                        _ = 4e-4;
                        break;
                      case 10:
                        _ = 4e-4;
                        break;
                      case 11:
                        _ = 4e-4;
                        break;
                      case 12:
                        _ = 4e-4;
                        break;
                      case 13:
                        _ = 4e-4;
                        break;
                      case 19:
                        _ = 4e-4;
                        break;
                      case 20:
                        _ = 10;
                        break;
                    }
                    _ = _ * X.get_active().get_solarSystemScale();
                  }
                  var y = this.renderContext.viewCamera.copy();
                  this._solarSystemTrack === 20 && !r.emptyString(this.renderContext.get_trackingFrame()) && (y = this.renderContext.customTrackingParams, this.renderContext.set_trackingFrame("")), g.zoom = _;
                  var M = g.viewTarget;
                  if (M.subtract(y.viewTarget), t.get_classification() === 1 && (M = $.negate(M)), M.length()) {
                    var A = M.toRaDec();
                    s === 20 ? g.lat = -A.y : g.lat = A.y, g.lng = A.x * 15 - 90;
                  } else
                    g.lat = this.renderContext.viewCamera.lat, g.lng = this.renderContext.viewCamera.lng;
                  s !== 20 && (g.viewTarget = D.getPlanetTargetPoint(s, g.lat, g.lng, Q.getJNowForFutureTime(l)));
                  var R = new Ds(y, g, l, Q.get_now(), Q.getTimeForFutureTime(l), 3);
                  R.fastDirectionMove = !0, this.set__mover(R);
                  return;
                }
              }
              this._tracking = !1, this._trackingObject = null;
              var F = t.get_camParams().copy();
              this.renderContext.get_backgroundImageset() != null && t.get_type() !== this.renderContext.get_backgroundImageset().get_dataSetType() ? (this.renderContext.targetCamera = t.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.set_backgroundImageset(this.getDefaultImageset(t.get_type(), 3)), n = !0) : this.get_solarSystemMode() && t.get_target() !== this._solarSystemTrack && (this.renderContext.targetCamera = t.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this._solarSystemTrack = t.get_target(), n = !0), t.get_classification() === 128 ? (F.zoom = this.get_zoomMax(), this.gotoTargetFull(!1, n, F, null, null)) : (this._solarSystemTrack = t.get_target(), this.gotoTargetFull(e, n, F, t.get_studyImageset(), t.get_backgroundImageset()), a && (this._tracking = !0, this._trackingObject = t));
            }
          },
          gotoTarget3: function(t, e, n) {
            this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(e, n, t, this.renderContext.get_foregroundImageset(), this.renderContext.get_backgroundImageset());
          },
          _tooCloseForSlewMove: function(t) {
            return Math.abs(this.renderContext.viewCamera.lat - t.lat) < 1e-12 && Math.abs(this.renderContext.viewCamera.lng - t.lng) < 1e-12 && Math.abs(this.renderContext.viewCamera.zoom - t.zoom) < 1e-12 && Math.abs(this.renderContext.viewCamera.rotation - t.rotation) < 1e-12;
          },
          gotoTargetFull: function(t, e, n, a, s) {
            if (Z.set_renderNeeded(!0), this._tracking = !1, this._trackingObject = null, this._targetStudyImageset = a, this._targetBackgroundImageset = s, t ? (n.zoom = this.renderContext.viewCamera.zoom, n.angle = this.renderContext.viewCamera.angle, n.rotation = this.renderContext.viewCamera.rotation) : (n.zoom === -1 || !n.zoom) && (this.renderContext.space ? n.zoom = 1.40625 : n.zoom = 0.09), e || this._tooCloseForSlewMove(n)) {
              if (this.set__mover(null), this.renderContext.targetCamera = n.copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.space && X.get_active().get_galacticMode()) {
                var l = U.j2000toGalactic(this.renderContext.viewCamera.get_RA() * 15, this.renderContext.viewCamera.get_dec());
                this.renderContext.targetAlt = this.renderContext.alt = l[1], this.renderContext.targetAz = this.renderContext.az = l[0];
              } else if (this.renderContext.space && X.get_active().get_localHorizonMode()) {
                var g = U.equitorialToHorizon(U.fromRaDec(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), Q.get_location(), Q.get_now());
                this.renderContext.targetAlt = this.renderContext.alt = g.get_alt(), this.renderContext.targetAz = this.renderContext.az = g.get_az();
              }
              this._mover_Midpoint();
            } else
              this.set__mover(sn.create(this.renderContext.viewCamera, n)), Z.set_renderNeeded(!0), this.get__mover().set_midpoint(r.bind("_mover_Midpoint", this));
          },
          _slewTimeBetweenTargets: function(t, e) {
            var n = sn.create(t, e);
            return n.get_moveTime();
          },
          timeToTargetFull: function(t, e) {
            return e && (t.zoom = this.renderContext.viewCamera.zoom, t.angle = this.renderContext.viewCamera.angle, t.rotation = this.renderContext.viewCamera.rotation), this._tooCloseForSlewMove(t) ? 0 : this._slewTimeBetweenTargets(Z.singleton.renderContext.viewCamera, t);
          },
          _freezeView: function() {
            this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.set__mover(null);
          },
          get__mover: function() {
            return this.renderContext.viewMover;
          },
          set__mover: function(t) {
            return this.renderContext.viewMover = t, Z.set_renderNeeded(!0), t;
          },
          fadeInImageSet: function(t) {
            this.renderContext.get_backgroundImageset() != null && t.get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType() && (Ut.purgeQueue(), Ut.clearCache()), this.renderContext.set_backgroundImageset(t);
          },
          _mover_Midpoint: function() {
            (this._targetStudyImageset != null && this.renderContext.get_foregroundImageset() == null || this.renderContext.get_foregroundImageset() != null && !this.renderContext.get_foregroundImageset().equals(this._targetStudyImageset)) && this.renderContext.set_foregroundImageset(this._targetStudyImageset), this.renderContext.get_backgroundImageset() != null && this._targetBackgroundImageset != null && !this.renderContext.get_backgroundImageset().equals(this._targetBackgroundImageset) && (this._targetBackgroundImageset != null && this._targetBackgroundImageset.get_generic() ? this.fadeInImageSet(this._getRealImagesetFromGeneric(this._targetBackgroundImageset)) : this.fadeInImageSet(this._targetBackgroundImageset));
          },
          getDefaultImageset: function(t, e) {
            for (var n = r.enumerate(Z.imageSets); n.moveNext(); ) {
              var a = n.current;
              if (a.get_defaultSet() && a.get_bandPass() === e && a.get_dataSetType() === t)
                return a;
            }
            for (var s = r.enumerate(Z.imageSets); s.moveNext(); ) {
              var a = s.current;
              if (a.get_bandPass() === e && a.get_dataSetType() === t)
                return a;
            }
            for (var l = r.enumerate(Z.imageSets); l.moveNext(); ) {
              var a = l.current;
              if (a.get_dataSetType() === t)
                return a;
            }
            return Z.imageSets[0];
          },
          _getRealImagesetFromGeneric: function(t) {
            for (var e = r.enumerate(Z.imageSets); e.moveNext(); ) {
              var n = e.current;
              if (n.get_defaultSet() && n.get_bandPass() === t.get_bandPass() && n.get_dataSetType() === t.get_dataSetType())
                return n;
            }
            for (var a = r.enumerate(Z.imageSets); a.moveNext(); ) {
              var n = a.current;
              if (n.get_bandPass() === t.get_bandPass() && n.get_dataSetType() === t.get_dataSetType())
                return n;
            }
            return Z.imageSets[0];
          },
          _hideUI: function(t) {
          },
          createTour: function(t) {
            if (r.canCast(this.uiController, qe)) {
              var e = this.uiController;
              e.stop(!1);
            }
            return this.tour = new jr(), this.tour.set_title(t), this.setupTour(), this.tour.set_editMode(!0), this.tour;
          },
          setupTour: function() {
            this.tourEdit = new Mo(), this.tourEdit.set_tour(this.tour), this.tour.set_currentTourstopIndex(0), this.tour.set_editMode(!1), this.uiController = this.tourEdit.tourEditorUI;
          },
          loadTour: function(t) {
            var e = this;
            if (r.canCast(this.uiController, qe)) {
              var n = this.uiController;
              n.stop(!1);
            }
            this.tour = jr.fromUrl(t, function() {
              e.setupTour();
              var a = new qe();
              a.set_tour(e.tour), Z.singleton.uiController = a, Z.scriptInterface._fireTourReady();
            });
          },
          playTour: function(t) {
            var e = this;
            if (r.canCast(this.uiController, qe)) {
              var n = this.uiController;
              n.stop(!1);
            }
            this.tour = jr.fromUrl(t, function() {
              e.setupTour(), e.tourEdit.playNow(!0), Z.scriptInterface._fireTourReady();
            });
          },
          playCurrentTour: function() {
            if (r.canCast(this.uiController, qe)) {
              var t = this.uiController;
              t.play();
            }
          },
          pauseCurrentTour: function() {
            if (r.canCast(this.uiController, qe)) {
              var t = this.uiController;
              t.pauseTour();
            }
          },
          stopCurrentTour: function() {
            if (r.canCast(this.uiController, qe)) {
              var t = this.uiController;
              t.stop(!1);
            }
          },
          _closeTour: function() {
          },
          getImagesetByName: function(t) {
            for (var e = r.enumerate(Z.imageSets); e.moveNext(); ) {
              var n = e.current;
              if (n.get_name().toLowerCase().indexOf(t.toLowerCase()) > -1)
                return n;
            }
            return null;
          },
          getImageSetByUrl: function(t) {
            for (var e = r.enumerate(Z.imageSets); e.moveNext(); ) {
              var n = e.current;
              if (n.get_url() === t)
                return n;
            }
            return null;
          },
          setBackgroundImageByName: function(t) {
            var e = this.getImagesetByName(t);
            e != null && this.renderContext.set_backgroundImageset(e);
          },
          setForegroundImageByName: function(t) {
            var e = this.getImagesetByName(t);
            e != null && this.renderContext.set_foregroundImageset(e);
          },
          addCatalogHips: function(t) {
            this.renderContext.addCatalogHips(t, null);
          },
          addCatalogHipsByName: function(t) {
            this.addCatalogHipsByNameWithCallback(t, null);
          },
          addCatalogHipsByNameWithCallback: function(t, e) {
            var n = this.getImagesetByName(t);
            n != null && this.renderContext.addCatalogHips(n, e);
          },
          removeCatalogHipsByName: function(t) {
            var e = this.getImagesetByName(t);
            e != null && this.renderContext.removeCatalogHips(e);
          },
          getCatalogHipsByName: function(t) {
            return this.renderContext.getCatalogHipsByName(t);
          },
          getCatalogHipsDataInView: function(t, e, n) {
            var a = this.getImagesetByName(t);
            a != null && this.renderContext.getCatalogHipsDataInView(a, e, n);
          },
          setCutsForFits: function(t, e, n) {
            var a = this.getImagesetByName(t);
            a != null && a.get_fitsProperties() != null ? (a.get_fitsProperties().lowerCut = e, a.get_fitsProperties().upperCut = n) : console.log(t + " not found");
          },
          setColorMapForFits: function(t, e) {
            var n = this.getImagesetByName(t);
            n != null && n.get_fitsProperties() != null ? n.get_fitsProperties().colorMapName = e : console.log(t + " not found");
          },
          setScaleTypeForFits: function(t, e) {
            var n = this.getImagesetByName(t);
            n != null && n.get_fitsProperties() != null ? n.get_fitsProperties().scaleType = e : console.log(t + " not found");
          },
          _drawCrosshairs: function(t) {
            if (t.gl == null) {
              var e = t.device;
              e.save(), e.beginPath(), e.strokeStyle = X.get_current().get_crosshairsColor(), e.lineWidth = 2;
              var n = t.width / 2, a = t.height / 2, s = 5;
              e.moveTo(n, a + s), e.lineTo(n, a - s), e.moveTo(n + s, a), e.lineTo(n - s, a), e.stroke(), e.restore();
            } else {
              if (this._crossHairs == null) {
                var l = 0.03, g = l * t.height / t.width;
                this._crossHairs = new an(), this._crossHairs.set_depthBuffered(!1), this._crossHairs.pure2D = !0, this._crossHairs.addLine($.create(-g, 0, 0), $.create(g, 0, 0)), this._crossHairs.addLine($.create(0, -l, 0), $.create(0, l, 0));
              }
              this._crossHairs.drawLines(t, 1, j.load(X.get_current().get_crosshairsColor()));
            }
          },
          captureThumbnail: function(t) {
            this.captureFrame(t, 96, 45, "image/jpeg", !0);
          },
          captureCurrentFrame: function(t, e, n, a) {
            this.captureFrame(t, e, n, a, !1);
          },
          captureFrameForVideo: function(t, e, n, a) {
            var s = this, l = Q.currentFrameNumber, g = function(_) {
              var m;
              if (l === s._videoQueueIndex)
                for (t(_), s._videoQueueIndex += 1; (m = r.keyExists(s._videoBlobQueue, s._videoQueueIndex)) || s._emptyFrames.indexOf(s._videoQueueIndex) >= 0; )
                  m ? (t(s._videoBlobQueue[s._videoQueueIndex]), s._videoBlobQueue[s._videoQueueIndex] = null) : r.remove(s._emptyFrames, s._videoQueueIndex), s._videoQueueIndex += 1;
              else
                _ != null ? s._videoBlobQueue[l] = _ : s._emptyFrames.push(l);
              s._videoQueueIndex >= Q.totalFrames && (s._videoBlobReady = null, s._videoBlobQueue = null, s._videoQueueIndex = 0, s._emptyFrames.length = 0);
            };
            this.captureCurrentFrame(g, e, n, a);
          },
          captureFrame: function(t, e, n, a, s) {
            s && this.renderOneFrame();
            var l = document.createElement("img");
            l.addEventListener("load", function(g) {
              var _ = l.width / l.height, m = e / n, b = e, y = n;
              _ < m ? y = r.truncate(b / _) : b = r.truncate(y * _);
              var M = (e - b) / 2, A = (n - y) / 2, R = document.createElement("canvas");
              R.height = n, R.width = e;
              var F = R.getContext("2d");
              if (F.drawImage(l, M, A, b, y), typeof R.msToBlob == "function") {
                var O = R.msToBlob();
                t(O);
              } else
                R.toBlob(t, a);
            }, !1), l.src = Z.singleton.canvas.toDataURL();
          },
          clampZooms: function(t) {
            t.viewCamera.zoom = Fr.clamp(t.viewCamera.zoom, this.get_zoomMin(), this.get_zoomMax()), t.targetCamera.zoom = Fr.clamp(t.targetCamera.zoom, this.get_zoomMin(), this.get_zoomMax());
          }
        };
        function Xh(t) {
          this._divId = null, this._startRenderLoop = !1, this._startLat = 0, this._startLng = 0, this._startZoom = 360, this._freestandingAssetBaseurl = "", this._startMode = "", this._divId = t;
        }
        var Yh = {
          startRenderLoop: function(t) {
            this._startRenderLoop = t;
          },
          initialView: function(t, e, n) {
            this._startLat = t, this._startLng = e, this._startZoom = n;
          },
          freestandingMode: function(t) {
            this._freestandingAssetBaseurl = t;
          },
          initialMode: function(t) {
            this._startMode = t;
          },
          create: function() {
            var t = !!this._freestandingAssetBaseurl, e;
            return this._startMode ? e = this._startMode : t ? e = "black" : e = "sky", Z.singleton.freestandingMode = t, t && ze.singleton.overrideAssetBaseurl(this._freestandingAssetBaseurl), Z.initControl6(this._divId, this._startRenderLoop, this._startLat, this._startLng, this._startZoom, e);
          }
        };
        function js(t, e) {
          this.offsetX = 0, this.offsetY = 0, this.offsetX = t, this.offsetY = e;
        }
        var jh = {};
        function U(t, e) {
          this._ascention = 0, this._declination = 0, this._ascention = t + Math.PI * 80 % (Math.PI * 2), this._declination = e;
        }
        U.geoTo3d = function(t, e) {
          return $.create(Math.cos(e * U.RC) * Math.cos(t * U.RC) * 1, Math.sin(t * U.RC) * 1, Math.sin(e * U.RC) * Math.cos(t * U.RC) * 1);
        }, U.geoTo3dDouble = function(t, e) {
          return $.create(Math.cos(e * U.RC) * Math.cos(t * U.RC) * 1, Math.sin(t * U.RC) * 1, Math.sin(e * U.RC) * Math.cos(t * U.RC) * 1);
        }, U.geoTo3dRad = function(t, e, n) {
          return $.create(Math.cos(e * U.RC) * Math.cos(t * U.RC) * n, Math.sin(t * U.RC) * n, Math.sin(e * U.RC) * Math.cos(t * U.RC) * n);
        }, U.raDecTo3d = function(t, e) {
          return $.create(Math.cos(t * U.RCRA) * Math.cos(e * U.RC) * 1, Math.sin(e * U.RC) * 1, Math.sin(t * U.RCRA) * Math.cos(e * U.RC) * 1);
        }, U.raDecTo3dAu = function(t, e, n) {
          return $.create(Math.cos(t * U.RCRA) * Math.cos(e * U.RC) * n, Math.sin(e * U.RC) * n, Math.sin(t * U.RCRA) * Math.cos(e * U.RC) * n);
        }, U.raDecTo3dMat = function(t, e, n) {
          return $._transformCoordinate($.create(Math.cos(t * U.RCRA) * Math.cos(e * U.RC) * 1, Math.sin(e * U.RC) * 1, Math.sin(t * U.RCRA) * Math.cos(e * U.RC) * 1), n);
        }, U.raDecTo3dPointRad = function(t, e) {
          return t.set_dec(-t.get_dec()), $.create(Math.cos(t.get_RA() * U.RCRA) * Math.cos(t.get_dec() * U.RC) * e, Math.sin(t.get_dec() * U.RC) * e, Math.sin(t.get_RA() * U.RCRA) * Math.cos(t.get_dec() * U.RC) * e);
        }, U.sterographicTo3d = function(t, e, n, a, s, l, g, _, m) {
          var b = 90, y = 0;
          if (t -= l, e -= g, t || e) {
            var M = (1 + Math.sin(Math.abs(a) / 180 * Math.PI)) * 6371e3 / _, A = M * M, R = 180 / Math.PI;
            t ? y = Math.atan2(e, t) * R : y = 90 * e < 0 ? -1 : 1;
            var F = t * t + e * e;
            b = (A - F) / (A + F), b = Math.asin(b) * R, m || (b = -b, y = -y, s = -s);
          }
          return U.geoTo3dRad(b, 90 + y + s, n);
        }, U.equitorialToHorizon = function(t, e, n) {
          var a = U.mstFromUTC2(n, e.get_lng()) - t.get_RA() * 15;
          a < 0 && (a += 360);
          var s = a * U.RC, l = t.get_dec() * U.RC, g = e.get_lat() * U.RC, _ = Math.sin(l) * Math.sin(g) + Math.cos(l) * Math.cos(g) * Math.cos(s), m = Math.asin(_), b = (Math.sin(l) - Math.sin(m) * Math.sin(g)) / (Math.cos(m) * Math.cos(g)), y = Math.acos(b), M = new U(y, m);
          return Math.sin(s) > 0 && M.set_az(360 - M.get_az()), M;
        }, U.horizonToEquitorial = function(t, e, n) {
          var a = U.mstFromUTC2(n, e.get_lng()), s, l, g = U._altAzToRaDec(t.get_alt() * U.RC, t.get_az() * U.RC, e.get_lat() * U.RC);
          s = g.x, l = g.y;
          var _ = s / U.RC;
          return a += _, a < 0 && (a += 360), a > 360 && (a -= 360), U.fromRaDec(a / 15, l / U.RC);
        }, U._altAzToRaDec = function(t, e, n) {
          var a = 0, s = 0;
          return e = Math.PI - e, e < 0 && (e += Math.PI * 2), a = Math.atan2(Math.sin(e), Math.cos(e) * Math.sin(n) + Math.tan(t) * Math.cos(n)), a < 0 && (a += Math.PI * 2), s = Math.asin(Math.sin(n) * Math.sin(t) - Math.cos(n) * Math.cos(t) * Math.cos(e)), Mt.create(a, s);
        }, U.mstFromUTC2 = function(t, e) {
          var n = t.getUTCFullYear(), a = t.getUTCMonth() + 1, s = t.getUTCDate(), l = t.getUTCHours(), g = t.getUTCMinutes(), _ = t.getUTCSeconds() + t.getUTCMilliseconds() / 1e3;
          (a === 1 || a === 2) && (n -= 1, a += 12);
          var m = r.truncate(n / 100), b = 2 - m + Math.floor(m / 4), y = Math.floor(365.25 * n), M = Math.floor(30.6001 * (a + 1)), A, R, F;
          if (A = b + y + M - 730550.5 + s + (l + g / 60 + _ / 3600) / 24, R = A / 36525, F = 280.46061837 + 360.98564736629 * A + 387933e-9 * R * R - R * R * R / 3871e4 + e, F > 0)
            for (; F > 360; )
              F = F - 360;
          else
            for (; F < 0; )
              F = F + 360;
          return F;
        }, U.cartesianToSpherical = function(t) {
          var e, n, a = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), s = Math.sqrt(t.x * t.x + t.z * t.z);
          return n = Math.asin(t.y / a), 0 < t.x ? e = Math.asin(t.z / s) : 0 > t.x ? e = Math.PI - Math.asin(t.z / s) : e = 0, new U(e, n);
        }, U.cartesianToSpherical2 = function(t) {
          var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), n = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
          return new U(n, a);
        }, U.cartesianToSphericalSky = function(t) {
          var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), n = Math.atan2(t.z, t.x), a = Math.asin(-t.y / e);
          return Mt.create(n / Math.PI * 12, a / Math.PI * 180);
        }, U.sphericalSkyToCartesian = function(t) {
          var e = t.x * (Math.PI / 12), n = t.y * (Math.PI / 180), a = Math.cos(e) * Math.cos(n), s = -Math.sin(n), l = Math.sin(e) * Math.cos(n);
          return $.create(a, s, l);
        }, U.cartesianToLatLng = function(t) {
          var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), n = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
          return Mt.create(n * 180 / Math.PI, a * 180 / Math.PI);
        }, U.cartesianToSpherical3 = function(t) {
          var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), n = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
          return new U(n, a);
        }, U.sign = function(t) {
          return t < 0 ? -1 : 1;
        }, U.formatDMSSign = function(t, e) {
          try {
            t += U.sign(t) * 1388888888889e-16;
            var n = r.truncate(t), a = (t - r.truncate(t)) * 60, s = (a - r.truncate(a)) * 60;
            if (e) {
              var l = t > 0 ? "+" : "-";
              return r.format("{3}{0:00;00}:{1:00}:{2:00}", n, Math.abs(r.truncate(a)), Math.abs(r.truncate(s)), l);
            } else
              return r.format("{0:00}:{1:00}:{2:00}", n, Math.abs(r.truncate(a)), Math.abs(r.truncate(s)));
          } catch {
            return "";
          }
        }, U.twoPlaces = function(t) {
          var e = t.toString();
          return e.length < 2 && (e = "0" + e), e;
        }, U.formatDMS = function(t) {
          try {
            t += (t < 0 ? -1 : 1) * 1388888888889e-16;
            var e = Math.abs(r.truncate(t)), n = (t - r.truncate(t)) * 60, a = (n - r.truncate(n)) * 60, s = t < 0 ? "-" : "";
            return r.format("{3}{0}:{1}:{2}", Math.abs(e), U.twoPlaces(Math.abs(r.truncate(n))), U.twoPlaces(Math.abs(r.truncate(a))), s);
          } catch {
            return "";
          }
        }, U.formatDMSWide = function(t) {
          try {
            t += U.sign(t) * 1388888888889e-16;
            var e = Math.abs(r.truncate(t)), n = (t - r.truncate(t)) * 60, a = (n - r.truncate(n)) * 60, s = t < 0 ? "-" : "";
            return r.format("{3}{0:00} : {1:00} : {2:00}", e, Math.abs(r.truncate(n)), Math.abs(r.truncate(a)), s);
          } catch {
            return "";
          }
        }, U.formatHMS = function(t) {
          try {
            t += U.sign(t) * 1388888888889e-16;
            var e = r.truncate(t), n = (t - r.truncate(t)) * 60, a = (n - r.truncate(n)) * 60;
            return r.format("{0:00}h{1:00}m{2:00}s", e, Math.abs(r.truncate(n)), Math.abs(r.truncate(a)));
          } catch {
            return "";
          }
        }, U.parseRA = function(t, e) {
          t = r.trim(t).toLowerCase(), (t.indexOf("d") > -1 || t.indexOf("°") > -1) && (e = !0), (t.indexOf("h") > -1 || t.indexOf(":") > -1) && (e = !1);
          var n = U.parse(t) / (e ? 15 : 1);
          return Math.max(Math.min(n, 24), 0);
        }, U.parseDec = function(t) {
          var e = U.parse(t);
          return Math.max(Math.min(e, 90), -90);
        }, U.parse = function(t) {
          try {
            if (t = r.trim(t).toLowerCase(), t = r.replaceString(r.replaceString(r.replaceString(r.replaceString(r.replaceString(r.replaceString(t, "d ", "d"), "h ", "h"), "m ", "m"), "s ", "s"), "' ", "'"), '" ', '"'), xt.stringContains(t, [":", " ", "d", "h", "m", "s", "'", '"', "°"])) {
              var e = 0, n = 0, a = 0, s = 0, l = xt.splitString(t, [":", " ", "d", "h", "m", "s", "'", '"', "°"]);
              return l.length > 0 && (r.emptyString(l[0]) || (e = Math.abs(parseFloat(l[0])), s = parseFloat(l[0]) < 0 ? -1 : 1, l[0].indexOf("-") > -1 && (s = -1))), l.length > 1 && (r.emptyString(l[1]) || (n = parseFloat(l[1]))), l.length > 2 && (r.emptyString(l[2]) || (a = parseFloat(l[2]))), s || (s = 1), s * (e + n / 60 + a / 3600);
            } else {
              var g = 0;
              try {
                g = parseFloat(t);
              } catch {
                g = 0;
              }
              return g;
            }
          } catch {
            return 0;
          }
        }, U.fromRaDec = function(t, e) {
          return new U((t - 12) * 15 * U.RC, e * U.RC);
        }, U.fromLatLng = function(t, e) {
          return new U(e * U.RC, t * U.RC);
        }, U.dmsToDegrees = function(t, e, n) {
          return t + e / 60 + n / 3600;
        }, U.degreesToRadians = function(t) {
          return t * 0.0174532925199433;
        }, U.radiansToDegrees = function(t) {
          return t * 57.2957795130823;
        }, U.radiansToHours = function(t) {
          return t * 3.81971863420549;
        }, U.hoursToRadians = function(t) {
          return t * 0.261799387799149;
        }, U.hoursToDegrees = function(t) {
          return t * 15;
        }, U.degreesToHours = function(t) {
          return t / 15;
        }, U.PI = function() {
          return 3.14159265358979;
        }, U.mapTo0To360Range = function(t) {
          for (var e = t; e < 0; )
            e += 360;
          for (; e > 360; )
            e -= 360;
          return e;
        }, U.mapTo0To24Range = function(t) {
          for (var e = t; e < 0; )
            e += 24;
          for (; e > 24; )
            e -= 24;
          return e;
        }, U.meanObliquityOfEcliptic = function(t) {
          var e = (t - 2451545) / 3652500, n = e * e, a = n * e, s = a * e, l = s * e, g = l * e, _ = g * e, m = _ * e, b = m * e, y = b * e;
          return U.dmsToDegrees(23, 26, 21.448) - U.dmsToDegrees(0, 0, 4680.93) * e - U.dmsToDegrees(0, 0, 1.55) * n + U.dmsToDegrees(0, 0, 1999.25) * a - U.dmsToDegrees(0, 0, 51.38) * s - U.dmsToDegrees(0, 0, 249.67) * l - U.dmsToDegrees(0, 0, 39.05) * g + U.dmsToDegrees(0, 0, 7.12) * _ + U.dmsToDegrees(0, 0, 27.87) * m + U.dmsToDegrees(0, 0, 5.79) * b + U.dmsToDegrees(0, 0, 2.45) * y;
        }, U.j2000toGalactic = function(t, e) {
          var n = [Math.cos(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(e / 180 * Math.PI)];
          U._rotationMatrix == null && (U._rotationMatrix = new Array(3), U._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], U._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], U._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
          for (var a = new Array(3), s = 0; s < 3; s++)
            a[s] = n[0] * U._rotationMatrix[s][0] + n[1] * U._rotationMatrix[s][1] + n[2] * U._rotationMatrix[s][2];
          var l = Math.atan2(a[1], a[0]);
          l < 0 && (l = l + 2 * Math.PI), l > 2 * Math.PI && (l = l - 2 * Math.PI);
          var g = Math.atan2(a[2], Math.sqrt(a[0] * a[0] + a[1] * a[1]));
          return [l / Math.PI * 180, g / Math.PI * 180];
        }, U.galacticTo3dDouble = function(t, e) {
          var n = U.galactictoJ2000(t, e);
          return U.raDecTo3dAu(n[0] / 15, n[1], 1);
        }, U.galactictoJ2000 = function(t, e) {
          var n = [Math.cos(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(e / 180 * Math.PI)];
          U._rotationMatrix == null && (U._rotationMatrix = new Array(3), U._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], U._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], U._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
          for (var a = new Array(3), s = 0; s < 3; s++)
            a[s] = n[0] * U._rotationMatrix[0][s] + n[1] * U._rotationMatrix[1][s] + n[2] * U._rotationMatrix[2][s];
          var l = Math.atan2(a[1], a[0]);
          l < 0 && (l = l + 2 * Math.PI), l > 2 * Math.PI && (l = l - 2 * Math.PI);
          var g = Math.atan2(a[2], Math.sqrt(a[0] * a[0] + a[1] * a[1]));
          return [l / Math.PI * 180, g / Math.PI * 180];
        };
        var Zh = {
          distance: function(t) {
            var e = this.get_lat(), n = this.get_lng() * Math.cos(e * U.RC), a = t.get_lat(), s = t.get_lng() * Math.cos(a * U.RC);
            return Math.sqrt((e - a) * (e - a) + (n - s) * (n - s));
          },
          distance3d: function(t) {
            var e = U.geoTo3dDouble(t.get_lat(), t.get_lng()), n = U.geoTo3dDouble(this.get_lat(), this.get_lng()), a = $.subtractVectors(e, n);
            return a.length() / U.RC;
          },
          angle: function(t) {
            var e = this.get_lat(), n = this.get_lng() * Math.cos(e * U.RC), a = t.get_lat(), s = t.get_lng() * Math.cos(a * U.RC);
            return Math.atan2(a - e, s - n);
          },
          get_RA: function() {
            return (this._ascention / Math.PI * 12 + 12) % 24;
          },
          set_RA: function(t) {
            return this._ascention = t / 12 * Math.PI, t;
          },
          get_dec: function() {
            return this._declination / U.RC;
          },
          set_dec: function(t) {
            return this._declination = t * U.RC, t;
          },
          get_lat: function() {
            return this._declination / U.RC;
          },
          set_lat: function(t) {
            return this._declination = t * U.RC, t;
          },
          get_lng: function() {
            var t = this._ascention / U.RC;
            return t <= 180 ? t : -180 + (180 - t);
          },
          set_lng: function(t) {
            return this._ascention = t * U.RC + Math.PI * 2 % (Math.PI * 2), t;
          },
          get_alt: function() {
            return this._declination / U.RC;
          },
          set_alt: function(t) {
            return this._declination = t * U.RC, t;
          },
          get_az: function() {
            return this._ascention / U.RC;
          },
          set_az: function(t) {
            return this._ascention = t * U.RC, t;
          },
          toString: function() {
            return r.format("Lat: {0}, Lng: {1}", this.get_lat(), this.get_lng());
          }
        };
        function Qi() {
          this.fx = 0, this.fy = 0, this.face = 0, qr.call(this);
        }
        Qi.create = function(t, e, n) {
          var a = new Qi();
          return a.fx = t, a.fy = e, a.face = n, a;
        }, Qi._fromHploc$1 = function(t) {
          var e = new Qi(), n = t.z, a = t.phi, s = Math.abs(n), l = rn.fmodulo(a * Qi._inv_halfpi$1, 4);
          if (s <= Qi._twothird$1) {
            var g = 0.5 + l, _ = n * 0.75, m = g - _, b = g + _, y = m, M = b, A = y === M ? y | 4 : y < M ? y : M + 8;
            e.fx = rn.fmodulo(b, 1), e.fy = 1 - rn.fmodulo(m, 1), e.face = A;
          } else {
            var R = Math.min(3, r.truncate(l)), F = l - R, O;
            s < 0.99 || !t.have_sth ? O = Math.sqrt(3 * (1 - s)) : O = t.sth / Math.sqrt((1 + s) / 3);
            var m = F * O, b = (1 - F) * O;
            m >= 1 && (m = 1), b >= 1 && (b = 1), n >= 0 ? (e.fx = 1 - b, e.fy = 1 - m, e.face = R) : (e.fx = m, e.fy = b, e.face = R + 8);
          }
          return e;
        }, Qi.fromVector = function(t) {
          return Qi._fromHploc$1(Pa.create(t));
        };
        var Kh = {
          toHploc: function() {
            var t = new Pa(), e = qr.jrll[this.face] - this.fx - this.fy, n, a;
            return e < 1 ? (n = e, a = n * n / 3, t.z = 1 - a, t.z > 0.99 && (t.sth = Math.sqrt(a * (2 - a)), t.have_sth = !0)) : e > 3 ? (n = 4 - e, a = n * n / 3, t.z = a - 1, t.z < -0.99 && (t.sth = Math.sqrt(a * (2 - a)), t.have_sth = !0)) : (n = 1, t.z = (2 - e) * 2 / 3), a = qr.jpll[this.face] * n + this.fx - this.fy, a < 0 && (a += 8), a >= 8 && (a -= 8), t.phi = n < 1e-15 ? 0 : 0.5 * Qi._halfpi$1 * a / n, t;
          },
          toVec3: function() {
            return this.toHploc().toVec3();
          }
        };
        function rs(t, e, n, a, s) {
          if (this.ipix = 0, this.indexBuffer = new Array(4), this._vertexList$1 = null, this._nside$1 = 0, this._tileIndex$1 = 0, this._face$1 = 0, this._faceX$1 = 0, this._faceY$1 = 0, this._step$1 = 0, this._subDivided$1 = !1, this._catalogRows$1 = [], G.call(this), this.level = t, this.tileX = e, this.tileY = n, this.dataset = a, G.demEnabled = !1, t ? this._nside$1 = Math.pow(2, t + 1) : this._nside$1 = 4, s == null)
            this._face$1 = e * 4 + n, this.ipix = this._face$1;
          else {
            this.parent = s;
            var l = s;
            this._face$1 = l._face$1, this._tileIndex$1 = l._tileIndex$1 * 4 + n * 2 + e, this.ipix = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1, this._faceX$1 = l._faceX$1 * 2 + e, this._faceY$1 = l._faceY$1 * 2 + n;
          }
          this.isCatalogTile = r.keyExists(a.get_hipsProperties().get_properties(), "dataproduct_type") && a.get_hipsProperties().get_properties().dataproduct_type.toLowerCase() === "catalog", this._computeBoundingSphere$1();
        }
        var Wh = {
          get_URL: function() {
            return this._url$1 == null ? (this._url$1 = this._getUrl$1(this.dataset, this.level, this.tileX, this.tileY), this._url$1) : this._url$1;
          },
          _computeBoundingSphere$1: function() {
            this._setStep$1(), this.createGeometry(null);
            for (var t = new Array(this._vertexList$1.length), e = 0; e < this._vertexList$1.length; e++)
              t[e] = this._vertexList$1[e].position;
            this._calcSphere$1(t), this._setCorners$1();
          },
          createGeometry: function(t) {
            if (this._vertexList$1 != null)
              return !0;
            if (this._vertexList$1 = [], this._populateVertexList$1(this._vertexList$1, this._step$1), r.keyExists(this.dataset.get_hipsProperties().get_properties(), "hips_frame") && this.dataset.get_hipsProperties().get_properties().hips_frame === "galactic")
              for (var e = 0; e < this._vertexList$1.length; e++) {
                var n = this._vertexList$1[e];
                rs._galacticMatrix$1.multiplyVector(n.position);
              }
            this.triangleCount = this._step$1 * this._step$1 / 2;
            var a = new Uint16Array(3 * this.triangleCount), s = a;
            if (!this._subDivided$1)
              try {
                this._vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this._vertexBuffer);
                for (var l = new Float32Array(this._vertexList$1.length * 5), g = l, _ = 0, m = r.enumerate(this._vertexList$1); m.moveNext(); ) {
                  var n = m.current;
                  _ = this.addVertex(g, _, n);
                }
                G.prepDevice.bufferData(34962, l, 35044), _ = 0;
                var b = this._vertexList$1.length / (4 * this._step$1);
                this._setIndexBufferForQuadrant$1(s, 0, 1), this._step$1 > 1 && (this._setIndexBufferForQuadrant$1(s, 0, 0), this._setIndexBufferForQuadrant$1(s, 1, 1), this._setIndexBufferForQuadrant$1(s, 1, 0));
              } catch {
              }
            return !0;
          },
          _setIndexBufferForQuadrant$1: function(t, e, n) {
            for (var a = 0, s = e * this._step$1 / 2; s < this._step$1 / 2 * (e + 1); s++)
              for (var l = n * this._step$1 / 2; l < this._step$1 / 2 * (n + 1); l++)
                t[a++] = s * (this._step$1 + 1) + l, t[a++] = 1 + s * (this._step$1 + 1) + l, t[a++] = this._step$1 + 1 + s * (this._step$1 + 1) + l, t[a++] = 1 + s * (this._step$1 + 1) + l, t[a++] = this._step$1 + 1 + s * (this._step$1 + 1) + l, t[a++] = this._step$1 + 2 + s * (this._step$1 + 1) + l;
            this._processIndexBuffer$1(t, e * 2 + n);
          },
          _getUrl$1: function(t, e, n, a) {
            var s = this._getHipsFileExtension$1(), l = -1;
            e ? l = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1 : l = this._face$1, new r.StringBuilder();
            var g = Math.floor(l / 1e4) * 1e4;
            return r.format(t.get_url(), e.toString(), g.toString(), l.toString() + s);
          },
          _getHipsFileExtension$1: function() {
            return this.dataset.get_extension().toLowerCase().indexOf("png") > -1 ? ".png" : this.dataset.get_extension().toLowerCase().indexOf("jpeg") > -1 || this.dataset.get_extension().toLowerCase().indexOf("jpg") > -1 ? ".jpg" : this.dataset.get_extension().toLowerCase().indexOf("tsv") > -1 ? ".tsv" : this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 ? ".fits" : ".jpg";
          },
          isTileBigEnough: function(t) {
            if (this.dataset.get_dataSetType() === 1) {
              var e = 180 / (Math.pow(2, this.level) * 4);
              return t.get_fovScale() < e;
            } else {
              var e = 3600 / (Math.pow(2, this.level) * 4);
              return t.get_fovScale() < e;
            }
          },
          _boundaries$1: function(t, e, n) {
            var a = n * Math.pow(2, this.level), s = new Array(4), l = Ia.create(t + this._faceX$1 * n, e + this._faceY$1 * n, this._face$1), g = 0.5 / a, _ = (l.ix + 0.5) / a, m = (l.iy + 0.5) / a;
            return s[0] = Qi.create(_ + g, m + g, l.face).toVec3(), s[1] = Qi.create(_ - g, m + g, l.face).toVec3(), s[2] = Qi.create(_ - g, m - g, l.face).toVec3(), s[3] = Qi.create(_ + g, m - g, l.face).toVec3(), s;
          },
          _setCorners$1: function() {
            var t = Ia.create(this.tileX, this.tileY, this._face$1), e = 0.5 / this._nside$1, n = (t.ix + 0.5) / this._nside$1, a = (t.iy + 0.5) / this._nside$1;
            this.topLeft = Qi.create(n + e, a + e, t.face).toVec3(), this.bottomLeft = Qi.create(n - e, a + e, t.face).toVec3(), this.bottomRight = Qi.create(n - e, a - e, t.face).toVec3(), this.topRight = Qi.create(n + e, a - e, t.face).toVec3();
          },
          draw3D: function(t, e) {
            if (this.isCatalogTile)
              return this.drawCatalogTile(t, e), !0;
            this.renderedGeneration = G.currentRenderGeneration, G.tilesTouched++, this.inViewFrustum = !0;
            var n = !1;
            if (!this.readyToRender) {
              if (!this.errored)
                return Ut.addTileToQueue(this), !1;
              if (this.errored && this.level < 3)
                n = !0;
              else
                return !1;
            }
            var a = this.triangleCount;
            G.trianglesRendered += a;
            for (var s = !1, l = !1, g = 0, _ = 0; _ < 2; _++)
              for (var m = 0; m < 2; m++)
                this.level < this.dataset.get_levels() ? (this.children[g] == null && (this.children[g] = Ut.getTile(this.level + 1, m, _, this.dataset, this)), this.children[g].isTileInFrustum(t.get_frustum()) ? (this.inViewFrustum = !0, this.children[g].isTileBigEnough(t) || n ? (this.renderChildPart[g].set_targetState(!this.children[g].draw3D(t, e)), this.renderChildPart[g].get_targetState() && (l = !0)) : this.renderChildPart[g].set_targetState(!0)) : this.renderChildPart[g].set_targetState(this.renderChildPart[g].set_state(!1))) : this.renderChildPart[g].set_state(!0), this.renderChildPart[g].get_state() && (s = !0), g++;
            if ((l || s) && (this.renderedAtOrBelowGeneration = G.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !s)
              return !0;
            if (!this.createGeometry(t))
              return !1;
            if (n)
              return !0;
            G.tilesInView++;
            for (var b = 0; b < 4; b++)
              this.renderChildPart[b].get_targetState() && this.renderPart(t, b, e / 100, !1);
            return !0;
          },
          drawCatalogTile: function(t, e) {
            this.renderedGeneration = G.currentRenderGeneration, G.tilesTouched++, this.inViewFrustum = !0;
            var n = !1;
            if (!this.readyToRender) {
              if (!this.errored) {
                Ut.addTileToQueue(this);
                return;
              }
              if (this.errored && this.level < 3)
                n = !0;
              else
                return;
            }
            for (var a = !1, s = 0, l = 0; l < 2; l++)
              for (var g = 0; g < 2; g++)
                this.level < this.dataset.get_levels() && (this.children[s] == null && (this.children[s] = Ut.getTile(this.level + 1, g, l, this.dataset, this)), this.children[s].isTileInFrustum(t.get_frustum()) ? (this.inViewFrustum = !0, a = !0, this.children[s].isTileBigEnough(t) || n ? this.children[s].drawCatalogTile(t, e) : this.children[s].removeCatalogTile()) : this.children[s].removeCatalogTile()), s++;
            !this.level && !a && !n ? this.removeCatalogTile() : a && (G.tilesInView++, this._addCatalogTile$1());
          },
          removeCatalogTile: function() {
            this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().removeTileRows(this.get_key(), this._catalogRows$1);
          },
          _addCatalogTile$1: function() {
            this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().addTileRows(this.get_key(), this._catalogRows$1);
          },
          _extractCatalogTileRows$1: function() {
            for (var t = !1, e = r.enumerate(this._catalogData$1.getText().split(`
`)); e.moveNext(); ) {
              var n = e.current;
              if (!r.startsWith(n, "#") && !t) {
                t = !0;
                continue;
              }
              if (!r.startsWith(n, "#")) {
                var a = yi.splitString(n, this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().get__table().delimiter);
                this._catalogRows$1.push(a);
              }
            }
          },
          getDataInView: function(t, e, n) {
            if (!this.readyToRender) {
              if (this.errored) {
                if (this.level >= 3)
                  return !0;
              } else if (this.requestImage(), e)
                return !1;
            }
            for (var a = !0, s = !1, l = 0, g = 0; g < 2; g++)
              for (var _ = 0; _ < 2; _++)
                this.level < this.dataset.get_levels() && (this.children[l] == null && (this.children[l] = Ut.getTile(this.level + 1, _, g, this.dataset, this)), this.children[l].isTileInFrustum(t.get_frustum()) && (s = !0, a = a && this.children[l].getDataInView(t, e, n))), l++;
            return s && n.addTileRows(this.get_key(), this._catalogRows$1), a && !this.downloading;
          },
          _setStep$1: function() {
            if (this.isCatalogTile)
              this._step$1 = 2;
            else
              switch (this.level) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                  this._step$1 = 16;
                  break;
                case 5:
                  this._step$1 = 8;
                  break;
                case 6:
                  this._step$1 = 4;
                  break;
                default:
                  this._step$1 = 2;
                  break;
              }
          },
          requestImage: function() {
            this.isCatalogTile ? !this.downloading && !this.readyToRender && (this.downloading = !0, this._catalogData$1 = new _r(this.get_URL()), this._catalogData$1.onStateChange = r.bind("_loadCatalogData$1", this), this._catalogData$1.send()) : G.prototype.requestImage.call(this);
          },
          _loadCatalogData$1: function() {
            this._catalogData$1.get_state() === 2 ? (this.requestPending = !1, this.downloading = !1, this.errored = !0, Ut.removeFromQueue(this.get_key(), !0)) : this._catalogData$1.get_state() === 1 && (this._extractCatalogTileRows$1(), this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, Ut.removeFromQueue(this.get_key(), !0));
          },
          getIndexBuffer: function(t, e) {
            return this.indexBuffer[t];
          },
          _calcSphere$1: function(t) {
            var e = kn.findEnclosingSphere(t);
            this.sphereCenter = e.center, this.sphereRadius = e.radius;
          },
          isPointInTile: function(t, e) {
            if (!this.level || this.level === 1 && (e >= 0 && e <= 90 && !this.tileX && this.tileY === 1 || e > 90 && e <= 180 && this.tileX === 1 && this.tileY === 1 || e < 0 && e >= -90 && !this.tileX && !this.tileY || e < -90 && e >= -180 && this.tileX === 1 && !this.tileY))
              return !0;
            var n = U.geoTo3dDouble(t, e), a = this._isLeftOfHalfSpace$1(this.topLeft, this.topRight, n), s = this._isLeftOfHalfSpace$1(this.topRight, this.bottomRight, n), l = this._isLeftOfHalfSpace$1(this.bottomRight, this.bottomLeft, n), g = this._isLeftOfHalfSpace$1(this.bottomLeft, this.topLeft, n);
            return !!(a && s && l && g);
          },
          _isLeftOfHalfSpace$1: function(t, e, n) {
            t.normalize(), e.normalize();
            var a = $.cross(t, e), s = $.dot(a, n);
            return s > 0;
          },
          getSurfacePointAltitude: function(t, e, n) {
            if (this.level < G.lastDeepestLevel)
              for (var a = r.enumerate(this.children); a.moveNext(); ) {
                var s = a.current;
                if (s != null && s.isPointInTile(t, e)) {
                  var l = s.getSurfacePointAltitude(t, e, n);
                  if (l)
                    return l;
                  break;
                }
              }
            return this._getAltitudeFromLatLng$1(t, e, n);
          },
          _getAltitudeFromLatLng$1: function(t, e, n) {
            var a = U.geoTo3dDouble(t, e), s = wn.getUVFromInnerPoint(this.topLeft, this.topRight, this.bottomLeft, this.bottomRight, a), l = Math.max(0, Math.min(16, s.x * 16)), g = Math.max(0, Math.min(16, s.y * 16)), _ = Math.max(0, Math.min(15, r.truncate(s.x * 16))), m = Math.max(0, Math.min(15, r.truncate(s.y * 16))), b = l - _, y = g - m;
            if (this.demArray != null) {
              var M = this.demArray[_ + 17 * m], A = this.demArray[_ + 1 + 17 * m], R = this.demArray[_ + 17 * (m + 1)], F = this.demArray[_ + 1 + 17 * (m + 1)], O = M * (1 - b) + b * A, B = R * (1 - b) + b * F, H = O * (1 - y) + y * B;
              return H / (n ? 1 : this.get__demScaleFactor());
            }
            return this.demAverage / (n ? 1 : this.get__demScaleFactor());
          },
          _processIndexBuffer$1: function(t, e) {
            this.indexBuffer[e] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this.indexBuffer[e]), G.prepDevice.bufferData(34963, t, 35044);
          },
          cleanUp: function(t) {
            G.prototype.cleanUp.call(this, t), this._returnBuffers$1(), this._subDivided$1 = !1;
          },
          _returnBuffers$1: function() {
            this._vertexList$1 != null && (this._vertexList$1 = null);
          },
          _populateVertexList$1: function(t, e) {
            for (var n = 0; n < e; n += 2)
              for (var a = 0; a < e; a += 2) {
                var s = this._boundaries$1(a, n, e);
                t[n * (e + 1) + a] = Ht.createPos(s[2], 1 / e * n, 1 / e * a), t[n * (e + 1) + a + 1] = Ht.createPos(s[3], 1 / e * n, 1 / e + 1 / e * a), t[(n + 1) * (e + 1) + a] = Ht.createPos(s[1], 1 / e + 1 / e * n, 1 / e * a), t[(n + 1) * (e + 1) + a + 1] = Ht.createPos(s[0], 1 / e + 1 / e * n, 1 / e + 1 / e * a), a + 2 >= e && e > 1 && (a = e - 1, s = this._boundaries$1(a, n, e), t[n * (e + 1) + e] = Ht.createPos(s[3], 1 / e * n, 1 / e + 1 / e * a), t[(n + 1) * (e + 1) + e] = Ht.createPos(s[0], 1 / e + 1 / e * n, 1 / e + 1 / e * a));
              }
            e > 1 && this._vertexOfLastRow$1(t, e);
          },
          _vertexOfLastRow$1: function(t, e) {
            for (var n = e - 1, a = 0; a < e; a += 2) {
              var s = this._boundaries$1(a, n, e);
              t[(n + 1) * (e + 1) + a] = Ht.createPos(s[1], 1 / e + 1 / e * n, 1 / e * a), t[(n + 1) * (e + 1) + a + 1] = Ht.createPos(s[0], 1 / e + 1 / e * n, 1 / e + 1 / e * a), a + 2 >= e && (a = e - 1, s = this._boundaries$1(a, n, e), t[(n + 1) * (e + 1) + e] = Ht.createPos(s[0], 1 / e + 1 / e * n, 1 / e + 1 / e * a));
            }
          }
        };
        function ar(t, e, n, a) {
          this.errored = !1, this.numAxis = 0, this.histogramMaxCount = 0, this.sourceBlob = null, this.header = {}, this.position = 0, this.bufferSize = 1, this._parseSuccessful$1 = !1, is.call(this), this.dataset = t, this.fitsProperties = t.get_fitsProperties(), this._callBack$1 = a, this.filename = e, n != null ? this._readFromBlob$1(n) : this.getFile(e);
        }
        var Jh = {
          getFile: function(t) {
            this._webFile$1 = new _r(t), this._webFile$1.responseType = "blob", this._webFile$1.onStateChange = r.bind("fileStateChange", this), this._webFile$1.send();
          },
          fileStateChange: function() {
            if (this._webFile$1.get_state() === 2)
              this.errored = !0, this._callBack$1 != null && this._callBack$1(this);
            else if (this._webFile$1.get_state() === 1) {
              var t = this._webFile$1.getBlob();
              this._readFromBlob$1(t);
            }
          },
          _readFromBlob$1: function(t) {
            var e = this;
            this.sourceBlob = t;
            var n = new FileReader();
            n.onloadend = function(a) {
              e.readFromBin(new DataView(n.result)), e.errored = !e._parseSuccessful$1, e._callBack$1 != null && e._callBack$1(e);
            }, n.readAsArrayBuffer(t);
          },
          _readByteString$1: function(t, e) {
            for (var n = "", a = 0; a < e; a++)
              n += String.fromCharCode(t.getUint8(this.position)), this.position++;
            return n;
          },
          _validateFitsSimple$1: function(t) {
            var e = this._readByteString$1(t, 8), n = r.trimEnd(e);
            return this.position -= 8, n.toUpperCase() === "SIMPLE";
          },
          readFromBin: function(t) {
            if (!this._validateFitsSimple$1(t)) {
              console.log("The requested file is not a valid FITS file.");
              return;
            }
            for (var e = !1; !e; )
              for (var n = 0; n < 36; n++) {
                var a = this._readByteString$1(t, 80);
                if (!e) {
                  var s = r.trimEnd(a.substring(0, 8)), l = a.substring(10).split("/");
                  if (s.toUpperCase() === "END") {
                    for (e = !0, n++, a = this._readByteString$1(t, 80); r.whitespace(a); )
                      n++, a = this._readByteString$1(t, 80);
                    s = r.trimEnd(a.substring(0, 8)), s.toUpperCase() === "XTENSION" ? e = !1 : this.position -= 80;
                  } else
                    this._addKeyword$1(s, l);
                }
              }
            if (!e) {
              console.log("Unable to parse requested FITS file.");
              return;
            }
            this.numAxis = parseInt(this.header.NAXIS), r.keyExists(this.header, "BLANK") && (this.fitsProperties.blankValue = parseFloat(this.header.BLANK), this.fitsProperties.containsBlanks = !0), r.keyExists(this.header, "BZERO") && (this.fitsProperties.bZero = parseFloat(this.header.BZERO)), r.keyExists(this.header, "BSCALE") && (this.fitsProperties.bScale = parseFloat(this.header.BSCALE)), this.axisSize = new Array(this.numAxis);
            for (var g = 0; g < this.numAxis; g++)
              this.axisSize[g] = parseInt(this.header[r.format("NAXIS{0}", g + 1)]), this.bufferSize *= this.axisSize[g];
            var _ = parseInt(this.header.BITPIX);
            this.readDataUnit(t, _), this.numAxis > 1 && (this.sizeX = this.axisSize[0], this.sizeY = this.axisSize[1], this.histogram = this.computeHistogram(256), this.histogramMaxCount = this.histogram[256]), this.computeWcs(), this._parseSuccessful$1 = !0;
          },
          _addKeyword$1: function(t, e) {
            if (t !== "CONTINUE" && t !== "COMMENT" && t !== "HISTORY" && !r.emptyString(t))
              try {
                r.keyExists(this.header, t) ? this.header[t] = r.trim(e[0]) : this.header[t.toUpperCase()] = r.trim(e[0]);
              } catch {
              }
          },
          readDataUnit: function(t, e) {
            switch (this.dataUnit = new Float32Array(this.bufferSize), e) {
              case -64:
                this.readDataUnitFloat64(t);
                break;
              case -32:
                this.readDataUnitFloat32(t);
                break;
              case 8:
                this.readDataUnitUint8(t);
                break;
              case 16:
                this.readDataUnitInt16(t);
                break;
              case 32:
                this.readDataUnitInt32(t);
                break;
              case 64:
                console.log("64 bit integer FITS are not yet supported");
                break;
            }
          },
          readDataUnitFloat64: function(t) {
            for (var e = 0; this.position < t.byteLength; ) {
              this.dataUnit[e] = t.getFloat64(this.position, !1);
              var n = this.dataUnit[e] * this.fitsProperties.bScale + this.fitsProperties.bZero;
              this.fitsProperties.minVal > n && (this.fitsProperties.minVal = n), this.fitsProperties.maxVal < n && (this.fitsProperties.maxVal = n), e++, this.position += 8;
            }
            this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
          },
          readDataUnitFloat32: function(t) {
            for (var e = 0; this.position < t.byteLength; ) {
              this.dataUnit[e] = t.getFloat32(this.position, !1);
              var n = this.dataUnit[e] * this.fitsProperties.bScale + this.fitsProperties.bZero;
              this.fitsProperties.minVal > n && (this.fitsProperties.minVal = n), this.fitsProperties.maxVal < n && (this.fitsProperties.maxVal = n), e++, this.position += 4;
            }
            this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
          },
          readDataUnitUint8: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getUint8(this.position), this.fitsProperties.minVal > this.dataUnit[e] && (this.fitsProperties.minVal = this.dataUnit[e]), this.fitsProperties.maxVal < this.dataUnit[e] && (this.fitsProperties.maxVal = this.dataUnit[e]), e++, this.position += 1;
            this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
          },
          readDataUnitInt16: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getInt16(this.position, !1), this.fitsProperties.minVal > this.dataUnit[e] && (this.fitsProperties.minVal = this.dataUnit[e]), this.fitsProperties.maxVal < this.dataUnit[e] && (this.fitsProperties.maxVal = this.dataUnit[e]), e++, this.position += 2;
            this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
          },
          readDataUnitInt32: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getInt32(this.position, !1), this.fitsProperties.minVal > this.dataUnit[e] && (this.fitsProperties.minVal = this.dataUnit[e]), this.fitsProperties.maxVal < this.dataUnit[e] && (this.fitsProperties.maxVal = this.dataUnit[e]), e++, this.position += 4;
            this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
          },
          computeWcs: function() {
            r.keyExists(this.header, "CROTA2") && (this.rotation = parseFloat(r.trim(this.header.CROTA2)), this.hasRotation = !0), r.keyExists(this.header, "CDELT1") && (this.scaleX = parseFloat(r.trim(this.header.CDELT1)), r.keyExists(this.header, "CDELT2") && (this.scaleY = parseFloat(r.trim(this.header.CDELT2)), this.hasScale = !0)), r.keyExists(this.header, "CRPIX1") && (this.referenceX = parseFloat(r.trim(this.header.CRPIX1)) - 0.5, r.keyExists(this.header, "CRPIX2") && (this.referenceY = parseFloat(r.trim(this.header.CRPIX2)) - 0.5, this.hasPixel = !0));
            var t = !1, e = !1;
            if (r.keyExists(this.header, "CTYPE1") && (this.header.CTYPE1.indexOf("GLON-") > -1 && (t = !0, e = !0), this.header.CTYPE2.indexOf("GLAT-") > -1 && (t = !0, e = !0), this.header.CTYPE1.indexOf("-TAN") > -1 && (e = !0), this.header.CTYPE1.indexOf("-SIN") > -1 && (e = !0)), !e)
              throw new Error("Only TAN projected images are supported: ");
            if (this.hasSize = !0, r.keyExists(this.header, "CRVAL1") && (this.centerX = parseFloat(r.trim(this.header.CRVAL1)), r.keyExists(this.header, "CRVAL2") && (this.centerY = parseFloat(r.trim(this.header.CRVAL2)), this.hasLocation = !0)), t) {
              var n = U.galactictoJ2000(this.centerX, this.centerY);
              this.centerX = n[0], this.centerY = n[1];
            }
            r.keyExists(this.header, "CD1_1") && r.keyExists(this.header, "CD1_2") && r.keyExists(this.header, "CD2_1") && r.keyExists(this.header, "CD2_2") && (this.cd1_1 = parseFloat(r.trim(this.header.CD1_1)), this.cd1_2 = parseFloat(r.trim(this.header.CD1_2)), this.cd2_1 = parseFloat(r.trim(this.header.CD2_1)), this.cd2_2 = parseFloat(r.trim(this.header.CD2_2)), this.hasRotation || this.calculateRotationFromCD(), this.hasScale || this.calculateScaleFromCD(), this.hasScale = !0, this.hasRotation = !0), this.set_validWcs(this.hasScale && this.hasRotation && this.hasPixel && this.hasLocation);
          },
          applyDisplaySettings: function() {
            r.keyExists(this.header, "DATAMIN") && (this.fitsProperties.lowerCut = parseFloat(r.trim(this.header.DATAMIN)), this.fitsProperties.minVal = this.fitsProperties.lowerCut), r.keyExists(this.header, "DATAMAX") && (this.fitsProperties.upperCut = parseFloat(r.trim(this.header.DATAMAX)), this.fitsProperties.maxVal = this.fitsProperties.upperCut), r.keyExists(this.header, "PXCUTMIN") && (this.fitsProperties.lowerCut = parseFloat(r.trim(this.header.PXCUTMIN))), r.keyExists(this.header, "PXCUTMAX") && (this.fitsProperties.upperCut = parseFloat(r.trim(this.header.PXCUTMAX)));
          },
          computeHistogram: function(t) {
            for (var e = new Array(t + 1), n = 0; n < t + 1; n++)
              e[n] = 0;
            this.populateHistogram(e);
            for (var a = 1, s = r.enumerate(e); s.moveNext(); ) {
              var l = s.current;
              l > a && (a = l);
            }
            return e[t] = a, e;
          },
          populateHistogram: function(t) {
            for (var e = t.length, n = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, a = 0; a < this.dataUnit.length; a++)
              this.dataUnit[a] !== ar.naN && t[Math.min(e - 1, r.truncate((this.fitsProperties.bZero + this.fitsProperties.bScale * this.dataUnit[a] - this.fitsProperties.minVal) / n))]++;
          },
          drawHistogram: function(t) {
            t.clearRect(0, 0, 255, 150), t.beginPath(), t.strokeStyle = "rgba(255,255,255,255)";
            for (var e = Math.log(this.histogramMaxCount), n = 0; n < this.histogram.length; n++) {
              var a = Math.log(this.histogram[n]) / e;
              a < 0 && (a = 0), t.moveTo(n, 150), t.lineTo(n, 150 - a * 150), t.stroke();
            }
          }
        };
        function Eo() {
          this._fill$1 = !1, this._skyRelative$1 = !1, this._strokeWidth$1 = 1, this._radius$1 = 10, this._lineColor$1 = Pt.get_white(), this._fillColor$1 = Pt.get_white(), this._ra$1 = 0, this._dec$1 = 0, ve.call(this);
        }
        var Qh = {
          get_fill: function() {
            return this._fill$1;
          },
          set_fill: function(t) {
            return ve.batchDirty = !0, this._fill$1 = t, t;
          },
          get_skyRelative: function() {
            return this._skyRelative$1;
          },
          set_skyRelative: function(t) {
            return ve.batchDirty = !0, this._skyRelative$1 = t, t;
          },
          get_lineWidth: function() {
            return this._strokeWidth$1;
          },
          set_lineWidth: function(t) {
            return ve.batchDirty = !0, this._strokeWidth$1 = t, t;
          },
          get_radius: function() {
            return this._radius$1;
          },
          set_radius: function(t) {
            return ve.batchDirty = !0, this._radius$1 = t, t;
          },
          get_lineColor: function() {
            return this._lineColor$1.toString();
          },
          set_lineColor: function(t) {
            return ve.batchDirty = !0, this._lineColor$1 = j.load(t), t;
          },
          get_fillColor: function() {
            return this._fillColor$1.toString();
          },
          set_fillColor: function(t) {
            return ve.batchDirty = !0, this._fillColor$1 = j.fromName(t), t;
          },
          setCenter: function(t, e) {
            ve.batchDirty = !0, this._ra$1 = t / 15, this._dec$1 = e, this.center = U.raDecTo3d(this._ra$1, this._dec$1);
          },
          draw: function(t) {
            var e = !0, n = this._radius$1;
            this._skyRelative$1 && (n /= t.get_fovScale() / 3600);
            var a = t.WVP.transform(this.center);
            if (a.z < 0 && (e = !1), $.dot(t.get_viewPoint(), this.center) < 0.55 && (e = !1), t.gl != null) {
              if (ve.batchDirty || this.annotationDirty) {
                for (var s = $.create(0, 1, 0), l = $.cross(this.center, s), g = $.cross(this.center, l), _ = this._radius$1 / 44, m = 72, b = Math.PI * 2 / m, y = [], M = 0; M <= m; M++) {
                  var A = Math.cos(M * b) * _, R = Math.sin(M * b) * _;
                  y.push($.create(this.center.x + A * l.x + R * g.x, this.center.y + A * l.y + R * g.y, this.center.z + A * l.z + R * g.z));
                }
                if (this._strokeWidth$1 > 0 && y.length > 1) {
                  var F = this._lineColor$1._clone();
                  F.a = Math.round(F.a * this.get_opacity());
                  for (var O = 0; O < y.length - 1; O++)
                    ve.lineList.addLine(y[O], y[O + 1], F, new ni(0, 1));
                }
                if (this._fill$1) {
                  var B = this._fillColor$1._clone();
                  B.a = Math.round(B.a * this.get_opacity());
                  var H = $.create(this.center.x, this.center.y, this.center.z);
                  y.splice(0, 0, H), ve.triangleFanPointList.addShape(y, B, new ni(0, 1));
                }
                this.annotationDirty = !1;
              }
            } else if (e) {
              var K = t.device;
              K.save(), K.globalAlpha = this.get_opacity(), K.beginPath(), K.arc(a.x, a.y, n, 0, Math.PI * 2, !0), K.lineWidth = this._strokeWidth$1, K.fillStyle = this._fillColor$1.toString(), this._fill$1 && K.fill(), K.globalAlpha = 1, K.strokeStyle = this._lineColor$1.toString(), K.stroke(), K.restore();
            }
          },
          hitTest: function(t, e, n, a, s) {
            if (r.emptyString(this.get_id()))
              return !1;
            var l = this._radius$1;
            return this._skyRelative$1 || (l *= t.get_fovScale() / 3600), ve.separation(e, n, this._ra$1, this._dec$1) < l;
          }
        };
        function Ro() {
          this._points$1 = [], this._fill$1 = !1, this._strokeWidth$1 = 1, this._lineColor$1 = Pt.get_white(), this._fillColor$1 = Pt.get_white(), ve.call(this);
        }
        var tf = {
          addPoint: function(t, e) {
            ve.batchDirty = !0, this._points$1.push(U.raDecTo3d(t / 15, e));
          },
          get_fill: function() {
            return this._fill$1;
          },
          set_fill: function(t) {
            return ve.batchDirty = !0, this._fill$1 = t, t;
          },
          get_lineWidth: function() {
            return this._strokeWidth$1;
          },
          set_lineWidth: function(t) {
            return ve.batchDirty = !0, this._strokeWidth$1 = t, t;
          },
          get_lineColor: function() {
            return this._lineColor$1.toString();
          },
          set_lineColor: function(t) {
            return ve.batchDirty = !0, this._lineColor$1 = j.fromName(t), t;
          },
          get_fillColor: function() {
            return this._fillColor$1.toString();
          },
          set_fillColor: function(t) {
            return ve.batchDirty = !0, this._fillColor$1 = j.fromName(t), t;
          },
          draw: function(t) {
            if (t.gl != null) {
              if (ve.batchDirty || this.annotationDirty) {
                var e = this._points$1;
                if (this._strokeWidth$1 > 0 && this._points$1.length > 1) {
                  var n = this._lineColor$1._clone();
                  n.a = Math.round(n.a * this.get_opacity());
                  for (var a = 0; a < this._points$1.length - 1; a++)
                    ve.lineList.addLine(e[a], e[a + 1], n, new ni(0, 1));
                  ve.lineList.addLine(e[this._points$1.length - 1], e[0], n, new ni(0, 1));
                }
                if (this._fill$1) {
                  var s = this._fillColor$1._clone();
                  s.a = Math.round(s.a * this.get_opacity());
                  for (var l = da.tesselateSimplePoly(e), a = 0; a < l.length; a += 3)
                    ve.triangleList.addSubdividedTriangles(e[l[a]], e[l[a + 1]], e[l[a + 2]], s, new ni(0, 1), 2);
                }
                this.annotationDirty = !1;
              }
            } else {
              var g = t.device;
              g.save(), g.globalAlpha = this.get_opacity(), g.beginPath();
              for (var _ = !0, m = r.enumerate(this._points$1); m.moveNext(); ) {
                var b = m.current, y = t.WVP.transform(b);
                if (y.z < 0) {
                  g.restore();
                  return;
                }
                if ($.dot(t.get_viewPoint(), b) < 0.75) {
                  g.restore();
                  return;
                }
                _ ? (_ = !1, g.moveTo(y.x, y.y)) : g.lineTo(y.x, y.y);
              }
              g.closePath(), g.lineWidth = this._strokeWidth$1, this._fill$1 && (g.fillStyle = this._fillColor$1.toString(), g.fill()), g.strokeStyle = this._lineColor$1.toString(), g.globalAlpha = 1, g.stroke(), g.restore();
            }
          }
        };
        function $o() {
          this._points$1 = [], this._strokeWidth$1 = 1, this._lineColor$1 = Pt.get_white(), ve.call(this);
        }
        var ef = {
          addPoint: function(t, e) {
            ve.batchDirty = !0, this._points$1.push(U.raDecTo3d(t / 15, e));
          },
          get_lineWidth: function() {
            return this._strokeWidth$1;
          },
          set_lineWidth: function(t) {
            return ve.batchDirty = !0, this._strokeWidth$1 = t, t;
          },
          get_lineColor: function() {
            return this._lineColor$1.toString();
          },
          set_lineColor: function(t) {
            return ve.batchDirty = !0, this._lineColor$1 = j.fromName(t), t;
          },
          draw: function(t) {
            if (t.gl != null) {
              if (ve.batchDirty || this.annotationDirty) {
                var e = this._points$1;
                if (this._strokeWidth$1 > 0) {
                  var n = this._lineColor$1._clone();
                  n.a = Math.round(n.a * this.get_opacity());
                  for (var a = 0; a < this._points$1.length - 1; a++)
                    ve.lineList.addLine(e[a], e[a + 1], n, new ni(0, 1));
                }
                this.annotationDirty = !1;
              }
            } else {
              var s = t.device;
              s.save(), s.globalAlpha = this.get_opacity();
              for (var l = !0, g = r.enumerate(this._points$1); g.moveNext(); ) {
                var _ = g.current, m = t.WVP.transform(_);
                if (m.z < 0) {
                  s.restore();
                  return;
                }
                if ($.dot(t.get_viewPoint(), _) < 0.75) {
                  s.restore();
                  return;
                }
                l ? (l = !1, s.beginPath(), s.moveTo(m.x, m.y)) : s.lineTo(m.x, m.y);
              }
              s.lineWidth = this._strokeWidth$1, s.strokeStyle = this._lineColor$1.toString(), s.stroke(), s.restore();
            }
          }
        };
        function ns() {
          this._tileDegrees$1 = 0, this._topDown$1 = !0, this._subDivisionLevel$1 = 1, G.call(this);
        }
        ns.create = function(t, e, n, a, s) {
          var l = new ns();
          return l.parent = s, l.level = t, l.tileX = e, l.tileY = n, l.dataset = a, l._topDown$1 = !a.get_bottomsUp(), l.computeBoundingSphere(), l;
        };
        var rf = {
          computeBoundingSphere: function() {
            if (!this._topDown$1) {
              this.computeBoundingSphereBottomsUp();
              return;
            }
            this._tileDegrees$1 = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
            var t = 90 - this.tileY * this._tileDegrees$1, e = 90 - (this.tileY + 1) * this._tileDegrees$1, n = this.tileX * this._tileDegrees$1 - 180, a = (this.tileX + 1) * this._tileDegrees$1 - 180, s = (t + e) / 2, l = (n + a) / 2;
            this.sphereCenter = this.geoTo3d(s, l, !1), this.topLeft = this.geoTo3d(t, n, !1), this.bottomRight = this.geoTo3d(e, a, !1), this.topRight = this.geoTo3d(t, a, !1), this.bottomLeft = this.geoTo3d(e, n, !1);
            var g = this.geoTo3d(t, n, !1);
            g.subtract(this.sphereCenter), this.sphereRadius = g.length(), this._tileDegrees$1 = a - n;
          },
          computeBoundingSphereBottomsUp: function() {
            var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = -90 + (this.tileY + 1) * t, n = -90 + this.tileY * t, a = this.tileX * t - 180, s = (this.tileX + 1) * t - 180, l = (e + n) / 2, g = (a + s) / 2;
            this.sphereCenter = this.geoTo3d(l, g, !1), this.topLeft = this.geoTo3d(e, a, !1), this.bottomRight = this.geoTo3d(n, s, !1), this.topRight = this.geoTo3d(e, s, !1), this.bottomLeft = this.geoTo3d(n, a, !1);
            var _ = this.topLeft;
            _.subtract(this.sphereCenter), this.sphereRadius = _.length(), t = s - a;
          },
          createGeometry: function(t) {
            G.prototype.createGeometry.call(this, t), t.gl == null ? (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (4 - this.level) * 2)) : this._subDivisionLevel$1 = 32;
            try {
              for (var e = 0; e < 4; e++)
                this._renderTriangleLists[e] = [];
              if (!this._topDown$1)
                return this._createGeometryBottomsUp$1(t);
              var n, a, s = 0, l = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), g = 90 - this.tileY * l, _ = 90 - (this.tileY + 1) * l, m = this.tileX * l - 180, b = (this.tileX + 1) * l - 180, y = b - m, M = _ - g;
              this.topLeft = this.geoTo3d(g, m, !1), this.bottomRight = this.geoTo3d(_, b, !1), this.topRight = this.geoTo3d(g, b, !1), this.bottomLeft = this.geoTo3d(_, m, !1);
              var A = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), R, F, O = 1 / this._subDivisionLevel$1;
              for (F = 0; F <= this._subDivisionLevel$1; F++)
                for (F !== this._subDivisionLevel$1 ? n = g + O * M * F : n = _, R = 0; R <= this._subDivisionLevel$1; R++)
                  R !== this._subDivisionLevel$1 ? a = m + O * y * R : a = b, s = F * (this._subDivisionLevel$1 + 1) + R, A[s] = Ht.createPos(this.geoTo3d(n, a, !1), R * O, F * O);
              this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
              var B = this._subDivisionLevel$1 / 2, H = 0;
              if (t.gl == null)
                for (var K = 0; K < 2; K++)
                  for (var J = 0; J < 2; J++) {
                    s = 0;
                    for (var it = B * K; it < B * (K + 1); it++)
                      for (var ot = B * J; ot < B * (J + 1); ot++) {
                        var lt, gt, ut;
                        lt = A[it * (this._subDivisionLevel$1 + 1) + ot], gt = A[(it + 1) * (this._subDivisionLevel$1 + 1) + ot], ut = A[it * (this._subDivisionLevel$1 + 1) + (ot + 1)], this._renderTriangleLists[H].push(Me.create(lt, ut, gt, this.texture, this.level)), lt = A[it * (this._subDivisionLevel$1 + 1) + (ot + 1)], gt = A[(it + 1) * (this._subDivisionLevel$1 + 1) + ot], ut = A[(it + 1) * (this._subDivisionLevel$1 + 1) + (ot + 1)], this._renderTriangleLists[H].push(Me.create(lt, ut, gt, this.texture, this.level));
                      }
                    H++;
                  }
              else {
                this._vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this._vertexBuffer);
                var St = new Float32Array(A.length * 5), mt = St;
                s = 0;
                for (var Dt = r.enumerate(A); Dt.moveNext(); ) {
                  var yt = Dt.current;
                  s = this.addVertex(mt, s, yt);
                }
                G.prepDevice.bufferData(34962, St, 35044);
                for (var K = 0; K < 2; K++)
                  for (var J = 0; J < 2; J++) {
                    var ue = new Uint16Array(this.triangleCount * 3), _e = ue;
                    s = 0;
                    for (var it = B * K; it < B * (K + 1); it++)
                      for (var ot = B * J; ot < B * (J + 1); ot++)
                        _e[s++] = it * (this._subDivisionLevel$1 + 1) + ot, _e[s++] = (it + 1) * (this._subDivisionLevel$1 + 1) + ot, _e[s++] = it * (this._subDivisionLevel$1 + 1) + (ot + 1), _e[s++] = it * (this._subDivisionLevel$1 + 1) + (ot + 1), _e[s++] = (it + 1) * (this._subDivisionLevel$1 + 1) + ot, _e[s++] = (it + 1) * (this._subDivisionLevel$1 + 1) + (ot + 1);
                    this._indexBuffers[H] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this._indexBuffers[H]), G.prepDevice.bufferData(34963, ue, 35044), H++;
                  }
              }
            } catch {
            }
            return !0;
          },
          _createGeometryBottomsUp$1: function(t) {
            var e, n, a = 0, s = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), l = -90 + (this.tileY + 1) * s, g = -90 + this.tileY * s, _ = this.tileX * s - 180, m = (this.tileX + 1) * s - 180, b = m - _, y = g - l, M = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), A, R, F = 1 / this._subDivisionLevel$1;
            for (R = 0; R <= this._subDivisionLevel$1; R++)
              for (R !== this._subDivisionLevel$1 ? e = l + F * y * R : e = g, A = 0; A <= this._subDivisionLevel$1; A++)
                A !== this._subDivisionLevel$1 ? n = _ + F * b * A : n = m, a = R * (this._subDivisionLevel$1 + 1) + A, M[a] = Ht.createPos(this.geoTo3d(e, n, !1), A * F, R * F);
            this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
            var O = this._subDivisionLevel$1 / 2, B = 0;
            if (t.gl == null)
              for (var H = 0; H < 2; H++)
                for (var K = 0; K < 2; K++) {
                  a = 0;
                  for (var J = O * H; J < O * (H + 1); J++)
                    for (var it = O * K; it < O * (K + 1); it++) {
                      var ot, lt, gt;
                      ot = M[J * (this._subDivisionLevel$1 + 1) + it], lt = M[(J + 1) * (this._subDivisionLevel$1 + 1) + it], gt = M[J * (this._subDivisionLevel$1 + 1) + (it + 1)], this._renderTriangleLists[B].push(Me.create(ot, gt, lt, this.texture, this.level)), ot = M[J * (this._subDivisionLevel$1 + 1) + (it + 1)], lt = M[(J + 1) * (this._subDivisionLevel$1 + 1) + it], gt = M[(J + 1) * (this._subDivisionLevel$1 + 1) + (it + 1)], this._renderTriangleLists[B].push(Me.create(ot, gt, lt, this.texture, this.level));
                    }
                  B++;
                }
            else {
              this._vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this._vertexBuffer);
              var ut = new Float32Array(M.length * 5), St = ut;
              a = 0;
              for (var mt = r.enumerate(M); mt.moveNext(); ) {
                var Dt = mt.current;
                a = this.addVertex(St, a, Dt);
              }
              G.prepDevice.bufferData(34962, ut, 35044);
              for (var H = 0; H < 2; H++)
                for (var K = 0; K < 2; K++) {
                  var yt = new Uint16Array(this.triangleCount * 3), ue = yt;
                  a = 0;
                  for (var J = O * H; J < O * (H + 1); J++)
                    for (var it = O * K; it < O * (K + 1); it++)
                      ue[a++] = J * (this._subDivisionLevel$1 + 1) + it, ue[a++] = (J + 1) * (this._subDivisionLevel$1 + 1) + it, ue[a++] = J * (this._subDivisionLevel$1 + 1) + (it + 1), ue[a++] = J * (this._subDivisionLevel$1 + 1) + (it + 1), ue[a++] = (J + 1) * (this._subDivisionLevel$1 + 1) + it, ue[a++] = (J + 1) * (this._subDivisionLevel$1 + 1) + (it + 1);
                  this._indexBuffers[B] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this._indexBuffers[B]), G.prepDevice.bufferData(34963, yt, 35044), B++;
                }
            }
            return !0;
          }
        };
        function as(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        var nf = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 3), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.x, e[n++] = s.y, e[n++] = s.z;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function wa(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        wa.create = function(t) {
          var e = new wa(t.length);
          return e._verts$1 = t, e.unlock(), e;
        };
        var af = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 5), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.position.x, e[n++] = s.position.y, e[n++] = s.position.z, e[n++] = s.tu, e[n++] = s.tv;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function os(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        os.create = function(t) {
          var e = new os(t.length);
          return e._verts$1 = t, e.unlock(), e;
        };
        var sf = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 8), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.x, e[n++] = s.y, e[n++] = s.z, e[n++] = s.nx, e[n++] = s.ny, e[n++] = s.nz, e[n++] = s.tu, e[n++] = s.tv;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function ls(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        ls.create = function(t) {
          var e = new ls(t.length);
          return e._verts$1 = t, e.unlock(), e;
        };
        var of = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 11), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.x, e[n++] = s.y, e[n++] = s.z, e[n++] = s.nx, e[n++] = s.ny, e[n++] = s.nz, e[n++] = s.tanx, e[n++] = s.tany, e[n++] = s.tanz, e[n++] = s.tu, e[n++] = s.tv;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function us(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        us.create = function(t) {
          var e = new us(t.length);
          return e._verts$1 = t, e;
        };
        var lf = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 19), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.ABC.x, e[n++] = s.ABC.y, e[n++] = s.ABC.z, e[n++] = s.abc1.x, e[n++] = s.abc1.y, e[n++] = s.abc1.z, e[n++] = s.pointSize, e[n++] = s.color.r / 255, e[n++] = s.color.g / 255, e[n++] = s.color.b / 255, e[n++] = s.color.a / 255, e[n++] = s.w, e[n++] = s.e, e[n++] = s.n, e[n++] = s.t, e[n++] = s.a, e[n++] = s.z, e[n++] = s.orbitPos, e[n++] = s.orbits;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function cs(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        var uf = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 9), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.position.x, e[n++] = s.position.y, e[n++] = s.position.z, e[n++] = s.get_color().r / 255, e[n++] = s.get_color().g / 255, e[n++] = s.get_color().b / 255, e[n++] = s.get_color().a / 255, e[n++] = s.tu, e[n++] = s.tv;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function Do(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        var cf = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 10), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.position.x, e[n++] = s.position.y, e[n++] = s.position.z, e[n++] = s.get_color().r / 255, e[n++] = s.get_color().g / 255, e[n++] = s.get_color().b / 255, e[n++] = s.get_color().a / 255, e[n++] = s.tu, e[n++] = s.tv, e[n++] = s.pointSize;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          },
          dispose: function() {
            G.prepDevice.bindBuffer(34962, null), G.prepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
          }
        };
        function No(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        var hf = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 7), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.position.x, e[n++] = s.position.y, e[n++] = s.position.z, e[n++] = s.color.r / 255, e[n++] = s.color.g / 255, e[n++] = s.color.b / 255, e[n++] = s.color.a / 255;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function ff(t) {
          this.count = 0, this._verts$1 = null, rr.call(this), this.count = t;
        }
        var _f = {
          lock: function() {
            return this._verts$1 = new Array(this.count), this._verts$1;
          },
          unlock: function() {
            this.vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this.vertexBuffer);
            for (var t = new Float32Array(this.count * 9), e = t, n = 0, a = r.enumerate(this._verts$1); a.moveNext(); ) {
              var s = a.current;
              e[n++] = s.position.x, e[n++] = s.position.y, e[n++] = s.position.z, e[n++] = s.color.r / 255, e[n++] = s.color.g / 255, e[n++] = s.color.b / 255, e[n++] = s.color.a / 255, e[n++] = s.tu, e[n++] = s.tv;
            }
            G.prepDevice.bufferData(34962, t, 35044);
          }
        };
        function Fo(t, e) {
          this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, Yr.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t;
        }
        var df = {
          map: function(t) {
            return Math.min(255, Math.max(0, r.truncate((t - this._min$1) / this._factor$1 * 255)));
          }
        };
        function Bo(t, e) {
          this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, Yr.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t, this._logFactor$1 = 255 / Math.log(255);
        }
        var gf = {
          map: function(t) {
            return Math.min(255, Math.max(0, r.truncate(Math.log((t - this._min$1) / this._factor$1 * 255) * this._logFactor$1)));
          }
        };
        function zo(t, e) {
          this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._powFactor$1 = 0, Yr.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t, this._powFactor$1 = 255 / Math.pow(255, 2);
        }
        var mf = {
          map: function(t) {
            return Math.min(255, Math.max(0, r.truncate(Math.pow((t - this._min$1) / this._factor$1 * 255, 2) * this._powFactor$1)));
          }
        };
        function Oo(t, e) {
          this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._sqrtFactor$1 = 0, Yr.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t, this._sqrtFactor$1 = 255 / Math.sqrt(255);
        }
        var pf = {
          map: function(t) {
            return Math.min(255, Math.max(0, r.truncate(Math.sqrt((t - this._min$1) / this._factor$1 * 255) * this._sqrtFactor$1)));
          }
        };
        function Vo(t, e, n) {
          this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._maxHistogramValue$1 = 1, Yr.call(this), this._min$1 = e, this._max$1 = n, this._factor$1 = n - e, this._histogram$1 = t.computeHistogram(1e4), this._maxHistogramValue$1 = this._histogram$1[1e4], this._lookup$1 = new Array(1e4);
          for (var a = r.truncate(t.get_sizeX() * t.get_sizeY()), s = 0, l = 0; l < 1e4; l++)
            s += this._histogram$1[l], this._lookup$1[l] = Math.min(255, s * 255 / a) + 0.5;
        }
        var vf = {
          map: function(t) {
            return this._lookup$1[Math.min(1e4 - 1, Math.max(0, r.truncate((t - this._min$1) / this._factor$1 * (1e4 - 1))))];
          }
        };
        function za() {
          this._triangleList$1 = null, this._latStart$1 = 0, this._lngStart$1 = 0, this._latEnd$1 = 0, this._lngEnd$1 = 0, this._width$1 = 4, this._percentComplete$1 = 100, ai.call(this);
        }
        var wf = {
          getTypeName: function() {
            return "TerraViewer.GreatCirlceRouteLayer";
          },
          cleanUp: function() {
            this._triangleList$1 != null && this._triangleList$1.clear(), this._triangleList$1 = null, ai.prototype.cleanUp.call(this);
          },
          draw: function(t, e, n) {
            return this._triangleList$1 == null && this._initializeRoute$1(t), this._triangleList$1.jNow = this._percentComplete$1 / 100, this._triangleList$1.draw(t, e * this.get_opacity(), 2), !0;
          },
          _initializeRoute$1: function(t) {
            this._triangleList$1 = new In(), this._triangleList$1.decay = 1e3, this._triangleList$1.sky = this.get_astronomical(), this._triangleList$1.timeSeries = !0, this._triangleList$1.depthBuffered = !1, this._triangleList$1.autoTime = !1;
            var e = 500, n = U.geoTo3dDouble(this._latStart$1, this._lngStart$1), a = U.geoTo3dDouble(this._latEnd$1, this._lngEnd$1), s = $.subtractVectors(a, n);
            s.normalize();
            var l = n;
            l.normalize();
            var g = $.cross(l, s), _ = $.cross(s, l);
            g.normalize(), _.normalize(), g.multiply(1e-3 * this._width$1), _.multiply(1e-3 * this._width$1);
            for (var m = new $(), b = new $(), y = !0, M = 0; M <= e; M++) {
              var A = $.lerp(n, a, M / e);
              A.normalize();
              var R = A, F = A;
              R.add(g), F.add(_), y ? y = !1 : this._triangleList$1.addQuad(b, m, F, R, this.get_color(), new ni(M / e, 2)), m = R, b = F;
            }
          },
          getParams: function() {
            return [this._percentComplete$1];
          },
          getParamNames: function() {
            return ["Percentage"];
          },
          setParams: function(t) {
            t.length > 0 && (this._percentComplete$1 = t[0]);
          },
          get_latStart: function() {
            return this._latStart$1;
          },
          set_latStart: function(t) {
            return this._latStart$1 !== t && (this._latStart$1 = t, this.version++), t;
          },
          get_lngStart: function() {
            return this._lngStart$1;
          },
          set_lngStart: function(t) {
            return this._lngStart$1 !== t && (this._lngStart$1 = t, this.version++), t;
          },
          get_latEnd: function() {
            return this._latEnd$1;
          },
          set_latEnd: function(t) {
            return this._latEnd$1 !== t && (this._latEnd$1 = t, this.version++), t;
          },
          get_lngEnd: function() {
            return this._lngEnd$1;
          },
          set_lngEnd: function(t) {
            return this._lngEnd$1 !== t && (this._lngEnd$1 = t, this.version++), t;
          },
          get_width: function() {
            return this._width$1;
          },
          set_width: function(t) {
            return this._width$1 !== t && (this._width$1 = t, this.version++), t;
          },
          get_percentComplete: function() {
            return this._percentComplete$1;
          },
          set_percentComplete: function(t) {
            return this._percentComplete$1 !== t && (this._percentComplete$1 = t, this.version++), t;
          },
          writeLayerProperties: function(t) {
            t._writeAttributeString("LatStart", this.get_latStart().toString()), t._writeAttributeString("LngStart", this.get_lngStart().toString()), t._writeAttributeString("LatEnd", this.get_latEnd().toString()), t._writeAttributeString("LngEnd", this.get_lngEnd().toString()), t._writeAttributeString("Width", this.get_width().toString()), t._writeAttributeString("PercentComplete", this.get_percentComplete().toString());
          },
          initializeFromXml: function(t) {
            this._latStart$1 = parseFloat(t.attributes.getNamedItem("LatStart").nodeValue), this._lngStart$1 = parseFloat(t.attributes.getNamedItem("LngStart").nodeValue), this._latEnd$1 = parseFloat(t.attributes.getNamedItem("LatEnd").nodeValue), this._lngEnd$1 = parseFloat(t.attributes.getNamedItem("LngEnd").nodeValue), this._width$1 = parseFloat(t.attributes.getNamedItem("Width").nodeValue), this._percentComplete$1 = parseFloat(t.attributes.getNamedItem("PercentComplete").nodeValue);
          }
        };
        function Zs() {
          ai.call(this);
        }
        var bf = {
          draw: function(t, e, n) {
            return W.drawPlanetGrid(t, e * this.get_opacity(), this.get_color()), W.drawPlanetGridText(t, e * this.get_opacity(), this.get_color()), !0;
          }
        };
        function qi() {
          this._imageSet$1 = null, this._extension$1 = ".txt", this._overrideDefaultLayer$1 = !1, this._loaded$1 = !1, ai.call(this);
        }
        qi.create = function(t) {
          var e = new qi();
          return e._imageSet$1 = t, e;
        };
        var yf = {
          get_imageSet: function() {
            return this._imageSet$1;
          },
          set_imageSet: function(t) {
            return this._imageSet$1 = t, t;
          },
          get_overrideDefaultLayer: function() {
            return this._overrideDefaultLayer$1;
          },
          set_overrideDefaultLayer: function(t) {
            return this._overrideDefaultLayer$1 = t, t;
          },
          getFitsImage: function() {
            return r.safeCast(this._imageSet$1.get_wcsImage(), ar);
          },
          _isFitsImageset$1: function() {
            var t = this._imageSet$1.get_extension() === ".fits";
            return r.canCast(this._imageSet$1.get_wcsImage(), ar) || this._imageSet$1.get_wcsImage() == null && t;
          },
          initializeFromXml: function(t) {
            var e = xt.selectSingleNode(t, "ImageSet");
            this._imageSet$1 = Mi.fromXMLNode(e), t.attributes.getNamedItem("Extension") != null && (this._extension$1 = t.attributes.getNamedItem("Extension").nodeValue), t.attributes.getNamedItem("ScaleType") != null && (this.get_imageSet().get_fitsProperties().scaleType = we.parse("ScaleTypes", t.attributes.getNamedItem("ScaleType").nodeValue)), t.attributes.getNamedItem("MinValue") != null && (this.get_imageSet().get_fitsProperties().minVal = parseFloat(t.attributes.getNamedItem("MinValue").nodeValue), this.get_imageSet().get_fitsProperties().lowerCut = t.attributes.getNamedItem("LowerCut") != null ? parseFloat(t.attributes.getNamedItem("LowerCut").nodeValue) : this.get_imageSet().get_fitsProperties().minVal), t.attributes.getNamedItem("MaxValue") != null && (this.get_imageSet().get_fitsProperties().maxVal = parseFloat(t.attributes.getNamedItem("MaxValue").nodeValue), this.get_imageSet().get_fitsProperties().upperCut = t.attributes.getNamedItem("UpperCut") != null ? parseFloat(t.attributes.getNamedItem("UpperCut").nodeValue) : this.get_imageSet().get_fitsProperties().maxVal), t.attributes.getNamedItem("ColorMapperName") != null && (this.get_imageSet().get_fitsProperties().colorMapName = t.attributes.getNamedItem("ColorMapperName").nodeValue), t.attributes.getNamedItem("OverrideDefault") != null && (this._overrideDefaultLayer$1 = r.boolean(t.attributes.getNamedItem("OverrideDefault").nodeValue));
          },
          draw: function(t, e, n) {
            return this._loaded$1 ? (t.set_worldBase(t.get_world()), t.set_viewBase(t.get_view()), t.makeFrustum(), t.drawImageSet(this._imageSet$1, this.get_opacity() * e * 100), !0) : !1;
          },
          writeLayerProperties: function(t) {
            this._imageSet$1.get_wcsImage() != null && (this._isFitsImageset$1() ? this._extension$1 = ".fit" : this._extension$1 = ".png", t._writeAttributeString("Extension", this._extension$1)), this._isFitsImageset$1() && (t._writeAttributeString("ScaleType", we.toXml("ScaleTypes", this._imageSet$1.get_fitsProperties().scaleType)), t._writeAttributeString("MinValue", this._imageSet$1.get_fitsProperties().minVal.toString()), t._writeAttributeString("MaxValue", this._imageSet$1.get_fitsProperties().maxVal.toString()), t._writeAttributeString("LowerCut", this._imageSet$1.get_fitsProperties().lowerCut.toString()), t._writeAttributeString("UpperCut", this._imageSet$1.get_fitsProperties().upperCut.toString()), this._imageSet$1.get_fitsProperties().colorMapName != null && t._writeAttributeString("ColorMapperName", this._imageSet$1.get_fitsProperties().colorMapName)), t._writeAttributeString("OverrideDefault", this._overrideDefaultLayer$1.toString()), Mi.saveToXml(t, this._imageSet$1, ""), ai.prototype.writeLayerProperties.call(this, t);
          },
          getTypeName: function() {
            return "TerraViewer.ImageSetLayer";
          },
          cleanUp: function() {
            ai.prototype.cleanUp.call(this);
          },
          addFilesToCabinet: function(t) {
            if (r.canCast(this._imageSet$1.get_wcsImage(), ar)) {
              this._imageSet$1.get_wcsImage().get_filename();
              var e = t.tempDirectory + r.format("{0}\\{1}{2}", t.get_packageID(), this.id.toString(), this._extension$1);
              t.addFile(e, this._imageSet$1.get_wcsImage().sourceBlob);
            }
          },
          getParamNames: function() {
            return ai.prototype.getParamNames.call(this);
          },
          getParams: function() {
            return ai.prototype.getParams.call(this);
          },
          setParams: function(t) {
            ai.prototype.setParams.call(this, t);
          },
          setImageScale: function(t, e, n) {
            console.warn("SetImageScale is considered deprecated. Use setImageScaleRaw or setImageScalePhysical instead."), this.setImageScaleRaw(t, e, n);
          },
          setImageScaleRaw: function(t, e, n) {
            this.get_imageSet().get_fitsProperties().lowerCut = e, this.get_imageSet().get_fitsProperties().upperCut = n, this.get_imageSet().get_fitsProperties().scaleType = t, r.canCast(this._imageSet$1.get_wcsImage(), Kr) && $n.updateScale(this, t, e, n);
          },
          setImageScalePhysical: function(t, e, n) {
            var a = e, s = n;
            this._isFitsImageset$1() && (a = (a - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale, s = (s - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale), this.setImageScaleRaw(t, a, s);
          },
          setImageZ: function(t) {
            this._isFitsImageset$1() && $n.updateImage(this, t);
          },
          get_colorMapperName: function() {
            return this.get_imageSet().get_fitsProperties().colorMapName;
          },
          set_colorMapperName: function(t) {
            if (Ce.fromNamedColormap(t) == null)
              throw new Error("Invalid colormap name");
            return this.version++, this._isFitsImageset$1() && (ti.useGlVersion2 ? this._imageSet$1.get_fitsProperties().colorMapName = t : $n.updateColorMapper(this, t)), t;
          },
          get_colorMapper: function() {
            return this.get_imageSet().get_fitsProperties().colorMapName == null ? null : Ce.fromNamedColormap(this.get_imageSet().get_fitsProperties().colorMapName);
          },
          loadData: function(t, e) {
            if (r.startsWith(this._extension$1.toLowerCase(), ".fit")) {
              var n = t.getFileBlob(r.replaceString(e, ".txt", this._extension$1)), a;
              ti.useGlVersion2 ? a = new ar(this._imageSet$1, "image.fit", n, r.bind("doneLoading", this)) : a = new Kr(this._imageSet$1, "image.fit", n, r.bind("doneLoading", this)), this._imageSet$1.set_wcsImage(a);
            } else
              this._loaded$1 = !0;
          },
          doneLoading: function(t) {
            this._loaded$1 = !0;
          }
        };
        function Sf() {
          ai.call(this);
        }
        var Cf = {
          draw: function(t, e, n) {
            return ai.prototype.draw.call(this, t, e, !1);
          }
        };
        function Ne() {
          this._primaryUI$1 = null, this._heading$1 = 0, this._flipV$1 = !0, this._flipHandedness$1 = !1, this._smooth$1 = !0, this._twoSidedGeometry$1 = !1, this._pitch$1 = 0, this._roll$1 = 0, this._scale$1 = $.create(1, 1, 1), this._translate$1 = $.create(0, 0, 0), this._lightID$1 = 0, this._dirty$1 = !1, this.objType = !1, this._xHandle$1 = new Mt(), this._yHandle$1 = new Mt(), this._zHandle$1 = new Mt(), this._hprHandles$1 = new Array(6), this._uiScale$1 = 1, this._showEditUi$1 = !1, this._dragMode$1 = 0, this._pntDown$1 = new Mt(), this._valueOnDown$1 = 0, this._valueOnDown2$1 = 0, this._hitDist$1 = 20, this._lockPreferedAxis$1 = !1, this._preferY$1 = !1, ai.call(this);
        }
        Ne._initTranslateUI$1 = function() {
          Ne._translateUILines$1 = new fa(), Ne._translateUILines$1.timeSeries = !1, Ne._translateUILines$1.set_depthBuffered(!1), Ne._translateUILines$1.showFarSide = !0, Ne._translateUI$1 = new In(), Ne._translateUI$1.depthBuffered = !1, Ne._translateUI$1.timeSeries = !1, Ne._translateUI$1.writeZbuffer = !1;
          for (var t = Math.PI * 2, e = t / 45, n = 0.05, a = 0; a < t; a += e) {
            var s = $.create(1 - n * 4, 0, 0), l = $.create(1 - n * 4, Math.cos(a) * n, Math.sin(a) * n), g = $.create(1 - n * 4, Math.cos(a + e) * n, Math.sin(a + e) * n);
            Ne._translateUI$1.addTriangle(s, l, g, Pt.get_red(), ni.empty());
          }
          for (var a = 0; a < t; a += e) {
            var s = $.create(1, 0, 0), g = $.create(1 - n * 4, Math.cos(a) * n, Math.sin(a) * n), l = $.create(1 - n * 4, Math.cos(a + e) * n, Math.sin(a + e) * n);
            Ne._translateUI$1.addTriangle(s, l, g, j.fromArgb(255, 255, Math.max(0, Math.sin(a) * 128), Math.max(0, Math.sin(a) * 128)), ni.empty());
          }
          Ne._translateUILines$1.addLine($.create(0, 0, 0), $.create(1, 0, 0), Pt.get_red(), ni.empty());
          for (var a = 0; a < t; a += e) {
            var s = $.create(0, 1 - n * 4, 0), g = $.create(Math.cos(a) * n, 1 - n * 4, Math.sin(a) * n), l = $.create(Math.cos(a + e) * n, 1 - n * 4, Math.sin(a + e) * n);
            Ne._translateUI$1.addTriangle(s, l, g, Pt.get_green(), ni.empty());
          }
          for (var a = 0; a < t; a += e) {
            var s = $.create(0, 1, 0), l = $.create(Math.cos(a) * n, 1 - n * 4, Math.sin(a) * n), g = $.create(Math.cos(a + e) * n, 1 - n * 4, Math.sin(a + e) * n);
            Ne._translateUI$1.addTriangle(s, l, g, j.fromArgb(255, Math.max(0, Math.sin(a) * 128), 255, Math.max(0, Math.sin(a) * 128)), ni.empty());
          }
          Ne._translateUILines$1.addLine($.create(0, 0, 0), $.create(0, 1, 0), Pt.get_green(), ni.empty());
          for (var a = 0; a < t; a += e) {
            var s = $.create(0, 0, 1 - n * 4), l = $.create(Math.cos(a) * n, Math.sin(a) * n, 1 - n * 4), g = $.create(Math.cos(a + e) * n, Math.sin(a + e) * n, 1 - n * 4);
            Ne._translateUI$1.addTriangle(s, l, g, Pt.get_blue(), ni.empty());
          }
          for (var a = 0; a < t; a += e) {
            var s = $.create(0, 0, 1), g = $.create(Math.cos(a) * n, Math.sin(a) * n, 1 - n * 4), l = $.create(Math.cos(a + e) * n, Math.sin(a + e) * n, 1 - n * 4);
            Ne._translateUI$1.addTriangle(s, l, g, j.fromArgb(255, Math.max(0, Math.sin(a) * 128), Math.max(0, Math.sin(a) * 128), 255), ni.empty());
          }
          Ne._translateUILines$1.addLine($.create(0, 0, 0), $.create(0, 0, 1), Pt.get_blue(), ni.empty()), Ne._initRotateUI$1(), Ne._initScaleUI$1();
        }, Ne._initScaleUI$1 = function() {
          Ne._scaleUI$1 = new In(), Ne._scaleUI$1.depthBuffered = !1, Ne._scaleUI$1.timeSeries = !1, Ne._scaleUI$1.writeZbuffer = !1;
          var t = 0.05;
          Ne._makeCube$1(Ne._scaleUI$1, $.create(1 - t * 2, 0, 0), t * 2, Pt.get_red()), Ne._makeCube$1(Ne._scaleUI$1, $.create(0, 1 - t * 2, 0), t * 2, Pt.get_green()), Ne._makeCube$1(Ne._scaleUI$1, $.create(0, 0, 1 - t * 2), t * 2, Pt.get_blue());
        }, Ne._makeCube$1 = function(t, e, n, a) {
          var s = j.fromArgb(255, r.truncate(a.r * 0.6), a.g, r.truncate(a.b * 0.6)), l = j.fromArgb(255, r.truncate(a.r * 0.8), r.truncate(a.g * 0.8), r.truncate(a.b * 0.8));
          t.addQuad($.create(e.x + n, e.y + n, e.z + n), $.create(e.x + n, e.y + n, e.z - n), $.create(e.x - n, e.y + n, e.z + n), $.create(e.x - n, e.y + n, e.z - n), a, ni.empty()), t.addQuad($.create(e.x + n, e.y - n, e.z + n), $.create(e.x - n, e.y - n, e.z + n), $.create(e.x + n, e.y - n, e.z - n), $.create(e.x - n, e.y - n, e.z - n), a, ni.empty()), t.addQuad($.create(e.x - n, e.y + n, e.z + n), $.create(e.x - n, e.y + n, e.z - n), $.create(e.x - n, e.y - n, e.z + n), $.create(e.x - n, e.y - n, e.z - n), s, ni.empty()), t.addQuad($.create(e.x + n, e.y + n, e.z + n), $.create(e.x + n, e.y - n, e.z + n), $.create(e.x + n, e.y + n, e.z - n), $.create(e.x + n, e.y - n, e.z - n), s, ni.empty()), t.addQuad($.create(e.x + n, e.y + n, e.z + n), $.create(e.x - n, e.y + n, e.z + n), $.create(e.x + n, e.y - n, e.z + n), $.create(e.x - n, e.y - n, e.z + n), l, ni.empty()), t.addQuad($.create(e.x + n, e.y + n, e.z - n), $.create(e.x + n, e.y - n, e.z - n), $.create(e.x - n, e.y + n, e.z - n), $.create(e.x - n, e.y - n, e.z - n), l, ni.empty());
        }, Ne._initRotateUI$1 = function() {
          Ne._rotateUi$1 = new In(), Ne._rotateUi$1.depthBuffered = !1, Ne._rotateUi$1.timeSeries = !1, Ne._rotateUi$1.writeZbuffer = !1;
          for (var t = Math.PI * 2, e = t / 40, n = 0.05, a = 0, s = 0; s < t; s += e) {
            var l = !(a % 10), g = !((a + 1) % 10), _ = $.create(n * (l ? 0 : g ? 1.5 : 1), Math.cos(s), Math.sin(s)), m = $.create(-n * (l ? 0 : g ? 1.5 : 1), Math.cos(s), Math.sin(s)), b = $.create(n * (l ? 1.5 : g ? 0 : 1), Math.cos(s + e), Math.sin(s + e)), y = $.create(-n * (l ? 1.5 : g ? 0 : 1), Math.cos(s + e), Math.sin(s + e));
            Ne._rotateUi$1.addQuad(_, b, m, y, j._fromArgbColor(192, Pt.get_red()), ni.empty()), a++;
          }
          a = 0;
          for (var s = 0; s < t; s += e) {
            var l = !(a % 10), g = !((a + 1) % 10), _ = $.create(Math.cos(s), Math.sin(s), n * (l ? 0 : g ? 1.5 : 1)), m = $.create(Math.cos(s), Math.sin(s), -n * (l ? 0 : g ? 1.5 : 1)), b = $.create(Math.cos(s + e), Math.sin(s + e), n * (l ? 1.5 : g ? 0 : 1)), y = $.create(Math.cos(s + e), Math.sin(s + e), -n * (l ? 1.5 : g ? 0 : 1));
            Ne._rotateUi$1.addQuad(_, b, m, y, j._fromArgbColor(192, Pt.get_blue()), ni.empty()), a++;
          }
          a = 0;
          for (var s = 0; s < t; s += e) {
            var l = !(a % 10), g = !((a + 1) % 10), _ = $.create(Math.cos(s), n * (l ? 0 : g ? 1.5 : 1), Math.sin(s)), m = $.create(Math.cos(s), -n * (l ? 0 : g ? 1.5 : 1), Math.sin(s)), b = $.create(Math.cos(s + e), n * (l ? 1.5 : g ? 0 : 1), Math.sin(s + e)), y = $.create(Math.cos(s + e), -n * (l ? 1.5 : g ? 0 : 1), Math.sin(s + e));
            Ne._rotateUi$1.addQuad(_, m, b, y, j._fromArgbColor(192, Pt.get_green()), ni.empty()), a++;
          }
          a = 0;
          for (var s = 0; s < t; s += e) {
            var l = !(a % 10), g = !((a + 1) % 10), _ = $.create(-n * (l ? 0 : g ? 1.5 : 1), Math.cos(s), Math.sin(s)), m = $.create(n * (l ? 0 : g ? 1.5 : 1), Math.cos(s), Math.sin(s)), b = $.create(-n * (l ? 1.5 : g ? 0 : 1), Math.cos(s + e), Math.sin(s + e)), y = $.create(n * (l ? 1.5 : g ? 0 : 1), Math.cos(s + e), Math.sin(s + e));
            Ne._rotateUi$1.addQuad(_, b, m, y, Pt.get_red(), ni.empty()), a++;
          }
          a = 0;
          for (var s = 0; s < t; s += e) {
            var l = !(a % 10), g = !((a + 1) % 10), _ = $.create(Math.cos(s), Math.sin(s), -n * (l ? 0 : g ? 1.5 : 1)), m = $.create(Math.cos(s), Math.sin(s), n * (l ? 0 : g ? 1.5 : 1)), b = $.create(Math.cos(s + e), Math.sin(s + e), -n * (l ? 1.5 : g ? 0 : 1)), y = $.create(Math.cos(s + e), Math.sin(s + e), n * (l ? 1.5 : g ? 0 : 1));
            Ne._rotateUi$1.addQuad(_, b, m, y, Pt.get_blue(), ni.empty()), a++;
          }
          a = 0;
          for (var s = 0; s < t; s += e) {
            var l = !(a % 10), g = !((a + 1) % 10), _ = $.create(Math.cos(s), -n * (l ? 0 : g ? 1.5 : 1), Math.sin(s)), m = $.create(Math.cos(s), n * (l ? 0 : g ? 1.5 : 1), Math.sin(s)), b = $.create(Math.cos(s + e), -n * (l ? 1.5 : g ? 0 : 1), Math.sin(s + e)), y = $.create(Math.cos(s + e), n * (l ? 1.5 : g ? 0 : 1), Math.sin(s + e));
            Ne._rotateUi$1.addQuad(_, m, b, y, Pt.get_green(), ni.empty()), a++;
          }
        };
        var Tf = {
          getPrimaryUI: function() {
            return this._primaryUI$1 == null && (this._primaryUI$1 = new Uo(this)), this._primaryUI$1;
          },
          get_flipV: function() {
            return this._flipV$1;
          },
          set_flipV: function(t) {
            return this._flipV$1 !== t && (this._flipV$1 = t, this.object3d != null && (this.object3d.flipV = this._flipV$1, this.object3d._reload()), this.version++), t;
          },
          get_flipHandedness: function() {
            return this._flipHandedness$1;
          },
          set_flipHandedness: function(t) {
            return this._flipHandedness$1 !== t && (this._flipHandedness$1 = t, this.object3d != null && (this.object3d.flipHandedness = this._flipHandedness$1, this.object3d._reload()), this.version++), t;
          },
          get_smooth: function() {
            return this._smooth$1;
          },
          set_smooth: function(t) {
            return this._smooth$1 !== t && (this._smooth$1 = t, this.object3d != null && (this.object3d.smooth = this._smooth$1, this.object3d._reload()), this.version++), t;
          },
          get_twoSidedGeometry: function() {
            return this._twoSidedGeometry$1;
          },
          set_twoSidedGeometry: function(t) {
            return this._twoSidedGeometry$1 !== t && (this._twoSidedGeometry$1 = t, this.version++), t;
          },
          get_heading: function() {
            return this._heading$1;
          },
          set_heading: function(t) {
            return this._heading$1 !== t && (this.version++, this._heading$1 = t), t;
          },
          get_pitch: function() {
            return this._pitch$1;
          },
          set_pitch: function(t) {
            return this._pitch$1 !== t && (this.version++, this._pitch$1 = t), t;
          },
          get_roll: function() {
            return this._roll$1;
          },
          set_roll: function(t) {
            return this._roll$1 !== t && (this.version++, this._roll$1 = t), t;
          },
          get_scale: function() {
            return this._scale$1;
          },
          set_scale: function(t) {
            return this._scale$1 !== t && (this.version++, this._scale$1 = t), t;
          },
          get_translate: function() {
            return this._translate$1;
          },
          set_translate: function(t) {
            return this._translate$1 !== t && (this.version++, this._translate$1 = t), t;
          },
          get_lightID: function() {
            return this._lightID$1;
          },
          set_lightID: function(t) {
            return this._lightID$1 = t, t;
          },
          cleanUp: function() {
            this._dirty$1 = !0;
          },
          colorChanged: function() {
            this.object3d != null && (this.object3d.color = this.get_color());
          },
          writeLayerProperties: function(t) {
            t._writeAttributeString("FlipV", this.get_flipV().toString()), t._writeAttributeString("FlipHandedness", this.get_flipHandedness().toString()), t._writeAttributeString("Smooth", this.get_smooth().toString()), t._writeAttributeString("TwoSidedGeometry", this.get_twoSidedGeometry().toString()), t._writeAttributeString("Heading", this.get_heading().toString()), t._writeAttributeString("Pitch", this.get_pitch().toString()), t._writeAttributeString("Roll", this.get_roll().toString()), t._writeAttributeString("Scale", this.get_scale().toString()), t._writeAttributeString("Translate", this.get_translate().toString()), t._writeAttributeString("LightID", this.get_lightID().toString()), t._writeAttributeString("Obj", this.objType.toString());
          },
          getParams: function() {
            var t = new Array(14);
            return t[0] = this._heading$1, t[1] = this._pitch$1, t[2] = this._roll$1, t[3] = this._scale$1.x, t[4] = this._scale$1.y, t[5] = this._scale$1.z, t[6] = this._translate$1.x, t[7] = this._translate$1.y, t[8] = this._translate$1.z, t[9] = this.get_color().r / 255, t[10] = this.get_color().g / 255, t[11] = this.get_color().b / 255, t[12] = this.get_color().a / 255, t[13] = this.get_opacity(), t;
          },
          getParamNames: function() {
            return ["Heading", "Pitch", "Roll", "Scale.X", "Scale.Y", "Scale.Z", "Translate.X", "Translate.Y", "Translate.Z", "Colors.Red", "Colors.Green", "Colors.Blue", "Colors.Alpha", "Opacity"];
          },
          setParams: function(t) {
            if (t.length === 14) {
              this._heading$1 = t[0], this._pitch$1 = t[1], this._roll$1 = t[2], this._scale$1.x = t[3], this._scale$1.y = t[4], this._scale$1.z = t[5], this._translate$1.x = t[6], this._translate$1.y = t[7], this._translate$1.z = t[8], this.set_opacity(t[13]);
              var e = j.fromArgb(r.truncate(t[12] * 255), r.truncate(t[9] * 255), r.truncate(t[10] * 255), r.truncate(t[11] * 255));
              this.set_color(e);
            }
          },
          add_propertiesChanged: function(t) {
            this.__propertiesChanged$1 = r.bindAdd(this.__propertiesChanged$1, t);
          },
          remove_propertiesChanged: function(t) {
            this.__propertiesChanged$1 = r.bindSub(this.__propertiesChanged$1, t);
          },
          fireChanged: function() {
            this.__propertiesChanged$1 != null && this.__propertiesChanged$1(this, new r.EventArgs());
          },
          getEditUI: function() {
            return r.safeCast(this, ht);
          },
          initializeFromXml: function(t) {
            this.set_flipV(r.boolean(t.attributes.getNamedItem("FlipV").nodeValue)), t.attributes.getNamedItem("FlipHandedness") != null ? this.set_flipHandedness(r.boolean(t.attributes.getNamedItem("FlipHandedness").nodeValue)) : this.set_flipHandedness(!1), t.attributes.getNamedItem("Smooth") != null ? this.set_smooth(r.boolean(t.attributes.getNamedItem("Smooth").nodeValue)) : this.set_smooth(!0), t.attributes.getNamedItem("TwoSidedGeometry") != null ? this.set_twoSidedGeometry(r.boolean(t.attributes.getNamedItem("TwoSidedGeometry").nodeValue)) : this.set_twoSidedGeometry(!1), t.attributes.getNamedItem("Obj") != null ? this.objType = r.boolean(t.attributes.getNamedItem("Obj").nodeValue) : this.objType = !1, this.set_heading(parseFloat(t.attributes.getNamedItem("Heading").nodeValue)), this.set_pitch(parseFloat(t.attributes.getNamedItem("Pitch").nodeValue)), this.set_roll(parseFloat(t.attributes.getNamedItem("Roll").nodeValue)), this.set_scale($.parse(t.attributes.getNamedItem("Scale").nodeValue)), this.set_translate($.parse(t.attributes.getNamedItem("Translate").nodeValue)), t.attributes.getNamedItem("LightID") != null && this.set_lightID(parseInt(t.attributes.getNamedItem("LightID").nodeValue));
          },
          draw: function(t, e, n) {
            var a = t.get_world(), s = tt.multiplyMatrix(tt.multiplyMatrix(tt._rotationZ(-this._roll$1 / 180 * Math.PI), tt._rotationX(-this._pitch$1 / 180 * Math.PI)), tt._rotationY(this._heading$1 / 180 * Math.PI));
            return t.set_world(tt.multiplyMatrix(tt.multiplyMatrix(tt.multiplyMatrix(s, tt._scaling(this._scale$1.x, this._scale$1.y, this._scale$1.z)), tt.translation(this._translate$1)), a)), t.set_twoSidedLighting(this.get_twoSidedGeometry()), D.drawPointPlanet(t, new $(), 1, Pt.get_red(), !1), this._lightID$1 > 0 || this.object3d != null && (this.object3d.color = this.get_color(), this.object3d.render(t, e * this.get_opacity())), t.set_twoSidedLighting(!1), t.set_world(a), !0;
          },
          addFilesToCabinet: function(t) {
          },
          loadData: function(t, e) {
            r.endsWith(e.toLowerCase(), ".obj") && (this.objType = !0), this._lightID$1 || (this.objType ? this.object3d = new cr(t, r.replaceString(e, ".txt", ".obj"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()) : this.object3d = new cr(t, r.replaceString(e, ".txt", ".3ds"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()));
          },
          pointToView: function(t) {
            var e = Z.singleton.renderContext.height, n = Z.singleton.renderContext.width, a = Z.singleton.renderContext.width / Z.singleton.renderContext.height * 1116, s = t.x / n * a - (a - 1920) / 2, l = t.y / e * 1116;
            return Mt.create(s, l);
          },
          render: function(t) {
            this._showEditUi$1 = !0;
          },
          preRender: function(t) {
            this._showEditUi$1 = !0;
          },
          mouseDown: function(t, e) {
            var n = this.pointToView(Mt.create(e.offsetX, e.offsetY));
            this._pntDown$1 = n;
            var a = n;
            if (e.shiftKey) {
              if (Mt.subtract(a, this._xHandle$1).get_length() < this._hitDist$1)
                return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.x, !0;
              if (Mt.subtract(a, this._yHandle$1).get_length() < this._hitDist$1)
                return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.y, !0;
              if (Mt.subtract(a, this._zHandle$1).get_length() < this._hitDist$1)
                return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.z, !0;
            } else {
              if (Mt.subtract(a, this._xHandle$1).get_length() < this._hitDist$1)
                return this._dragMode$1 = 1, this._valueOnDown$1 = this._translate$1.x, !0;
              if (Mt.subtract(a, this._yHandle$1).get_length() < this._hitDist$1)
                return this._dragMode$1 = 2, this._valueOnDown$1 = this._translate$1.y, !0;
              if (Mt.subtract(a, this._zHandle$1).get_length() < this._hitDist$1)
                return this._dragMode$1 = 3, this._valueOnDown$1 = this._translate$1.z, !0;
            }
            for (var s = 0; s < this._hprHandles$1.length; s++)
              if (Mt.subtract(a, this._hprHandles$1[s]).get_length() < this._hitDist$1)
                switch (s) {
                  case 0:
                    return this._dragMode$1 = 4, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                  case 1:
                    return this._dragMode$1 = 7, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                  case 2:
                    return this._dragMode$1 = 5, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                  case 3:
                    return this._dragMode$1 = 8, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                  case 4:
                    return this._dragMode$1 = 6, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                  case 5:
                    return this._dragMode$1 = 9, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                }
            return !1;
          },
          mouseUp: function(t, e) {
            return this._dragMode$1 ? (this._dragMode$1 = 0, this._lockPreferedAxis$1 = !1, !0) : !1;
          },
          mouseMove: function(t, e) {
            var n = this.pointToView(Mt.create(e.offsetX, e.offsetY));
            if (this._dragMode$1) {
              var a = 0, s = n.x - this._pntDown$1.x, l = -(n.y - this._pntDown$1.y);
              switch (this._lockPreferedAxis$1 ? this._preferY$1 ? (a = l, this._preferY$1 = !0, Di.set_current(wi.get_sizeNS())) : (a = s, this._preferY$1 = !1, Di.set_current(wi.get_sizeWE())) : (Math.abs(s) > Math.abs(l) ? (a = s, this._preferY$1 = !1) : (a = l, this._preferY$1 = !0), a > 5 && (this._lockPreferedAxis$1 = !0)), this._dragMode$1) {
                case 0:
                  break;
                case 1:
                  this._translate$1.x = this._valueOnDown$1 + 12 * this._uiScale$1 * (a / Z.singleton.renderContext.width);
                  break;
                case 2:
                  this._translate$1.y = this._valueOnDown$1 + 12 * this._uiScale$1 * (a / Z.singleton.renderContext.width);
                  break;
                case 3:
                  this._translate$1.z = this._valueOnDown$1 + 12 * this._uiScale$1 * (a / Z.singleton.renderContext.width);
                  break;
                case 4:
                  this._heading$1 = this._valueOnDown$1 - s / 4, this._pitch$1 = this._valueOnDown2$1 + l / 4;
                  break;
                case 5:
                  this._pitch$1 = this._valueOnDown$1 + l / 4, this._roll$1 = this._valueOnDown2$1 - s / 4;
                  break;
                case 6:
                  this._roll$1 = this._valueOnDown$1 + l / 4, this._heading$1 = this._valueOnDown2$1 - s / 4;
                  break;
                case 7:
                  this._heading$1 = this._valueOnDown$1 - s / 4, this._pitch$1 = this._valueOnDown2$1 - l / 4;
                  break;
                case 8:
                  this._pitch$1 = this._valueOnDown$1 + l / 4, this._roll$1 = this._valueOnDown2$1 + s / 4;
                  break;
                case 9:
                  this._roll$1 = this._valueOnDown$1 - l / 4, this._heading$1 = this._valueOnDown2$1 - s / 4;
                  break;
                case 10:
                  this._scale$1.x = this._scale$1.y = this._scale$1.z = this._valueOnDown$1 * Math.pow(2, a / 100);
                  break;
              }
              return this.fireChanged(), !0;
            } else {
              var g = n;
              if (Mt.subtract(g, this._xHandle$1).get_length() < this._hitDist$1 || Mt.subtract(g, this._yHandle$1).get_length() < this._hitDist$1 || Mt.subtract(g, this._zHandle$1).get_length() < this._hitDist$1)
                return Di.set_current(wi.get_sizeAll()), !0;
              for (var _ = 0; _ < this._hprHandles$1.length; _++)
                if (Mt.subtract(g, this._hprHandles$1[_]).get_length() < this._hitDist$1)
                  return Di.set_current(wi.get_sizeAll()), !0;
            }
            return !1;
          },
          mouseClick: function(t, e) {
            return !1;
          },
          click: function(t, e) {
            return !1;
          },
          mouseDoubleClick: function(t, e) {
            return !1;
          },
          keyDown: function(t, e) {
            return !1;
          },
          keyUp: function(t, e) {
            return !1;
          },
          hover: function(t) {
            return !1;
          }
        };
        function Uo(t) {
          this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, Pn.call(this), this._layer$1 = t;
        }
        var Mf = {
          setUICallbacks: function(t) {
            this._callbacks$1 = t;
          },
          get_hasTreeViewNodes: function() {
            return !0;
          },
          getTreeNodes: function() {
            var t = [];
            return this._layer$1.object3d.objects.length > 0 && this._layer$1.object3d.objects[0].children != null && this._loadTree$1(t, this._layer$1.object3d.objects[0].children), t;
          },
          _loadTree$1: function(t, e) {
            for (var n = r.enumerate(e); n.moveNext(); ) {
              var a = n.current, s = new ts();
              s.set_name(a.name), s.set_tag(a), s.set_checked(a.enabled), s.add_nodeSelected(r.bind("_node_NodeSelected$1", this)), s.add_nodeChecked(r.bind("_node_NodeChecked$1", this)), t.push(s), this._loadTree$1(s.get_nodes(), a.children);
            }
          },
          _node_NodeChecked$1: function(t, e) {
            var n = t.get_tag();
            n != null && (n.enabled = e);
          },
          _node_NodeSelected$1: function(t) {
            if (this._callbacks$1 != null) {
              var e = t.get_tag(), n = {};
              n.Name = e.name, n["Pivot.X"] = e.pivotPoint.x.toString(), n["Pivot.Y"] = e.pivotPoint.y.toString(), n["Pivot.Z"] = e.pivotPoint.z.toString(), this._callbacks$1.showRowData(n);
            }
          },
          getNodeContextMenu: function(t) {
            return Pn.prototype.getNodeContextMenu.call(this, t);
          }
        };
        function Ks() {
          this._frames$1 = [], this._primaryUI$1 = null, this._pointOpacity$1 = 1, this._pointColor$1 = Pt.get_yellow(), this._filename$1 = "", this._dataFile$1 = "", ai.call(this);
        }
        var xf = {
          get_frames: function() {
            return this._frames$1;
          },
          set_frames: function(t) {
            return this._frames$1 = t, t;
          },
          getPrimaryUI: function() {
            return this._primaryUI$1 == null && (this._primaryUI$1 = new Ho(this)), this._primaryUI$1;
          },
          cleanUp: function() {
            for (var t = r.enumerate(this._frames$1); t.moveNext(); ) {
              var e = t.current;
              e.get_orbit() != null && (e.get_orbit().cleanUp(), e.set_orbit(null));
            }
          },
          writeLayerProperties: function(t) {
            t._writeAttributeString("PointOpacity", this.get_pointOpacity().toString()), t._writeAttributeString("PointColor", this._pointColor$1.save());
          },
          get_pointOpacity: function() {
            return this._pointOpacity$1;
          },
          set_pointOpacity: function(t) {
            return this._pointOpacity$1 !== t && (this.version++, this._pointOpacity$1 = t), t;
          },
          get_pointColor: function() {
            return this._pointColor$1;
          },
          set_pointColor: function(t) {
            return this._pointColor$1 !== t && (this.version++, this._pointColor$1 = t), t;
          },
          getParams: function() {
            var t = new Array(6);
            return t[0] = this._pointOpacity$1, t[1] = this.get_color().r / 255, t[2] = this.get_color().g / 255, t[3] = this.get_color().b / 255, t[4] = this.get_color().a / 255, t[5] = this.get_opacity(), t;
          },
          getParamNames: function() {
            return ["PointOpacity", "Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
          },
          setParams: function(t) {
            if (t.length === 6) {
              this._pointOpacity$1 = t[0], this.set_opacity(t[5]);
              var e = j.fromArgb(r.truncate(t[4] * 255), r.truncate(t[1] * 255), r.truncate(t[2] * 255), r.truncate(t[3] * 255));
              this.set_color(e);
            }
          },
          initializeFromXml: function(t) {
            this.set_pointOpacity(parseFloat(t.attributes.getNamedItem("PointOpacity").nodeValue)), this.set_pointColor(j.load(t.attributes.getNamedItem("PointColor").nodeValue));
          },
          draw: function(t, e, n) {
            var a = t.get_world();
            t.set_world(t.get_worldBaseNonRotating());
            for (var s = r.enumerate(this._frames$1); s.moveNext(); ) {
              var l = s.current;
              l.showOrbitPath && (l.get_orbit() == null && l.set_orbit(new ga(l.get_elements(), 360, this.get_color(), 1, t.get_nominalRadius())), l.get_orbit().draw3D(t, e * this.get_opacity(), new $()));
            }
            return t.set_world(a), !0;
          },
          addFilesToCabinet: function(t) {
            this._filename$1 = t.tempDirectory + r.format("{0}\\{1}.txt", t.get_packageID(), this.id.toString()), this._filename$1.substring(0, this._filename$1.lastIndexOf("\\"));
            var e = new Blob([this._dataFile$1]);
            t.addFile(this._filename$1, e), ai.prototype.addFilesToCabinet.call(this, t);
          },
          loadData: function(t, e) {
            var n = this, a = t.getFileBlob(e), s = new FileReader();
            s.onloadend = function(l) {
              n._dataFile$1 = r.safeCast(s.result, String), n.loadString(n._dataFile$1);
            }, s.readAsText(a);
          },
          loadString: function(t) {
            var e = t.split(`
`);
            this._frames$1.length = 0;
            for (var n = 0; n < e.length; n += 2) {
              var a = n, s = n + 1;
              if (e[n].length > 0) {
                var l = new Ki();
                if (e[n].substring(0, 1) !== "1")
                  a++, s++, l.name = r.trim(e[n]), n++;
                else if (e[n].substring(0, 1) === "1")
                  l.name = e[n].substring(2, 5);
                else {
                  n -= 2;
                  continue;
                }
                l.reference = 18, l.oblateness = 0, l.showOrbitPath = !0, l.showAsPoint = !0, l.referenceFrameType = 1, l.scale = 1, l.semiMajorAxisUnits = 1, l.meanRadius = 10, l.oblateness = 0, l.fromTLE(e[a], e[s], 3986004418e5), this._frames$1.push(l);
              } else
                n -= 1;
            }
          }
        };
        function Ho(t) {
          this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, Pn.call(this), this._layer$1 = t;
        }
        var Lf = {
          setUICallbacks: function(t) {
            this._callbacks$1 = t;
          },
          get_hasTreeViewNodes: function() {
            return !0;
          },
          getTreeNodes: function() {
            for (var t = [], e = r.enumerate(this._layer$1.get_frames()); e.moveNext(); ) {
              var n = e.current, a = new ts();
              a.set_name(n.name), a.set_tag(n), a.set_checked(n.showOrbitPath), a.add_nodeSelected(r.bind("_node_NodeSelected$1", this)), a.add_nodeChecked(r.bind("_node_NodeChecked$1", this)), t.push(a);
            }
            return t;
          },
          _node_NodeChecked$1: function(t, e) {
            var n = t.get_tag();
            n != null && (n.showOrbitPath = e);
          },
          _node_NodeSelected$1: function(t) {
            if (this._callbacks$1 != null) {
              var e = t.get_tag(), n = {};
              n.Name = e.name, n["SemiMajor Axis"] = e.semiMajorAxis.toString(), n["SMA Units"] = e.semiMajorAxisUnits.toString(), n.Inclination = e.inclination.toString(), n.Eccentricity = e.eccentricity.toString(), n["Long of Asc. Node"] = e.longitudeOfAscendingNode.toString(), n["Argument Of Periapsis"] = e.argumentOfPeriapsis.toString(), n.Epoch = e.epoch.toString(), n["Mean Daily Motion"] = e.meanDailyMotion.toString(), n["Mean Anomoly at Epoch"] = e.meanAnomolyAtEpoch.toString(), this._callbacks$1.showRowData(n);
            }
          },
          getNodeContextMenu: function(t) {
            return Pn.prototype.getNodeContextMenu.call(this, t);
          }
        };
        function Ui() {
          this._dataDirty$1 = !1, this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1, this._table_backcompat$1 = null, this._barChartBitmask$1 = 0, this._barScaleFactor$1 = 20, this._meanRadius$1 = 6371e3, this._table$1 = new $a(), this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this.colorMap = 3, this.colorMapperName = "Greys", this._dynamicColorColumnName$1 = "2efc32e3-b9d9-47ff-8036-8cc344c585bd", this.dynamicColor = !1, this.normalizeColorMap = !1, this.normalizeColorMapMin = 0, this.normalizeColorMapMax = 1, this._markerColumn$1 = -1, this.colorMapColumn = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this._normalizeSizeColumnName$1 = "dfe78b4c-f972-4796-b04f-68c5efd4ecb0", this.normalizeSize = !1, this.normalizeSizeClip = !1, this.normalizeSizeMin = 0, this.normalizeSizeMax = 1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, ai.call(this);
        }
        Ui._getDatafromFeed$1 = function(t) {
          return "";
        }, Ui._executeQuery$1 = function(t) {
          return "";
        }, Ui.parseDate = function(t) {
          var e = r.now();
          try {
            e = new Date(t);
          } catch {
            try {
              return Ui.execlToDateTime(parseFloat(t));
            } catch {
            }
          }
          return e;
        }, Ui.execlToDateTime = function(t) {
          t > 59 && (t -= 1), t > 73e4 && (t = 73e4);
          var e = new Date(1899, 12, 31);
          return new Date(e.getDate() + r.truncate(t * 24 * 60 * 60 * 1e3));
        }, Ui.get__circleTexture$1 = function() {
          if (Ui._circleTexture$1 == null) {
            var t = ze.singleton.engineAssetUrl("circle.png");
            Ui._circleTexture$1 = D.loadPlanetTexture(t);
          }
          return Ui._circleTexture$1;
        };
        var Af = {
          getTypeName: function() {
            return "TerraViewer.SpreadSheetLayer";
          },
          get_header: function() {
            return this._table$1.header;
          },
          canCopyToClipboard: function() {
            return !0;
          },
          copyToClipboard: function() {
          },
          dynamicUpdate: function() {
            var t = Ui._getDatafromFeed$1(this.get_dataSourceUrl());
            return t != null ? (this.updateData(t, !1, !0, !0), this.guessHeaderAssignments(), !0) : !1;
          },
          updateData: function(t, e, n, a) {
            return this.loadFromString(r.safeCast(t, String), !0, e, n, a), this.computeDateDomainRange(-1, -1), this._dataDirty$1 = !0, this.dirty = !0, !0;
          },
          loadData: function(t, e) {
            var n = this;
            this._table$1 = new $a();
            var a = t.getFileBlob(e);
            this.getStringFromGzipBlob(a, function(s) {
              n._table$1.loadFromString(s, !1, !0, !0), n._table$1.header.indexOf(n._normalizeSizeColumnName$1) > -1 && n._table$1.removeColumn(n._normalizeSizeColumnName$1), n.computeDateDomainRange(-1, -1), n.get_dynamicData() && n.get_autoUpdate() && n.dynamicUpdate(), n._dataDirty$1 = !0, n.dirty = !0;
            });
          },
          addFilesToCabinet: function(t) {
            this._fileName$1 = t.tempDirectory + r.format("{0}\\{1}.txt", t.get_packageID(), this.id.toString()), this._fileName$1.substring(0, this._fileName$1.lastIndexOf("\\"));
            var e = "";
            this._table_backcompat$1 == null ? e = this._table$1.save() : e = this._table_backcompat$1.save();
            var n = new Blob([e]);
            t.addFile(this._fileName$1, n), ai.prototype.addFilesToCabinet.call(this, t);
          },
          _prepareBackCompatTable$1: function() {
            if ((this.sizeColumn === -1 || !this.get_normalizeSize()) && (this.colorMapColumn === -1 || !this.get_dynamicColor())) {
              this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1;
              return;
            }
            if (this._table_backcompat$1 = this._table$1.clone(), this.sizeColumn > -1 && this.get_normalizeSize()) {
              for (var t = [], e = r.enumerate(this._table_backcompat$1.rows); e.moveNext(); ) {
                var n = e.current;
                t.push(this.normalizePointSize(parseFloat(n[this.sizeColumn])).toString());
              }
              this._table_backcompat$1.addColumn(this._normalizeSizeColumnName$1, t), this._lastNormalizeSizeColumnIndex$1 = this._table_backcompat$1.header.length - 1;
            } else
              this._lastNormalizeSizeColumnIndex$1 = -1;
            if (this.colorMapColumn > -1 && this.get_dynamicColor()) {
              for (var a = [], s = r.enumerate(this._table_backcompat$1.rows); s.moveNext(); ) {
                var n = s.current;
                a.push(this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(n[this.get_colorMapColumn()]))).toSimpleHex());
              }
              this._table_backcompat$1.addColumn(this._dynamicColorColumnName$1, a), this._lastDynamicColorColumnIndex$1 = this._table_backcompat$1.header.length - 1;
            } else
              this._lastDynamicColorColumnIndex$1 = -1;
          },
          guessHeaderAssignments: function() {
            for (var t = 0, e = r.enumerate(this._table$1.header); e.moveNext(); ) {
              var n = e.current;
              this._guessHeaderAssignment$1(n, t++);
            }
            this._table$1.header.length > 0 && (this.nameColumn = 0);
          },
          guessHeaderAssignmentsFromVoTable: function(t) {
            var e = t.getDecColumn();
            e != null && (this.latColumn = e.index, this.astronomical = !0);
            var n = t.getRAColumn();
            n != null && (this.lngColumn = n.index, this.astronomical = !0, this.pointScaleType = 4);
            var a = t.getMagColumn();
            a != null && (this.sizeColumn = a.index);
            for (var s = 0, l = r.enumerate(t.column); l.moveNext(); ) {
              var g = l.current;
              this._guessHeaderAssignment$1(g.name, s++);
            }
            this._table$1.header.length > 0 && (this.nameColumn = 0);
          },
          _guessHeaderAssignment$1: function(t, e) {
            t = t.toLowerCase(), t.indexOf("lat") > -1 && this.latColumn === -1 && (this.latColumn = e), (t.indexOf("lon") > -1 || t.indexOf("lng") > -1) && this.lngColumn === -1 && (this.lngColumn = e), t.indexOf("dec") > -1 && this.latColumn === -1 && (this.latColumn = e, this.astronomical = !0), (t.indexOf("ra") > -1 || t.indexOf("ascen") > -1) && this.lngColumn === -1 && (this.lngColumn = e, this.astronomical = !0, this.pointScaleType = 4), (t.indexOf("mag") > -1 || t.indexOf("size") > -1) && this.sizeColumn === -1 && (this.sizeColumn = e), (t.indexOf("date") > -1 || t.indexOf("time") > -1 || t.indexOf("dt") > -1 || t.indexOf("tm") > -1) && (t.indexOf("end") > -1 && this.endDateColumn === -1 ? this.endDateColumn = e : this.startDateColumn === -1 && (this.startDateColumn = e)), (t.indexOf("altitude") > -1 || t.indexOf("alt") > -1) && this.altColumn === -1 && (this.altColumn = e, this.set_altType(1), this.set_altUnit(1)), t.indexOf("depth") > -1 && this.altColumn === -1 && (this.altColumn = e, this.set_altType(0), this.set_altUnit(5)), r.startsWith(t, "x") && this.get_xAxisColumn() === -1 && this.set_xAxisColumn(e), r.startsWith(t, "y") && this.get_yAxisColumn() === -1 && this.set_yAxisColumn(e), r.startsWith(t, "z") && this.get_zAxisColumn() === -1 && this.set_zAxisColumn(e), t.indexOf("color") > -1 && this.get_colorMapColumn() === -1 && this.set_colorMapColumn(e), (t.indexOf("geometry") > -1 || t.indexOf("geography") > -1) && this.geometryColumn === -1 && (this.geometryColumn = e);
          },
          computeDateDomainRange: function(t, e) {
            t === -1 && (t = this.startDateColumn), e === -1 && (e = this.endDateColumn), e === -1 && (e = t), this.set_beginRange(/* @__PURE__ */ new Date("12/31/2100")), this.set_endRange(/* @__PURE__ */ new Date("12/31/1890"));
            for (var n = r.enumerate(this._table$1.rows); n.moveNext(); ) {
              var a = n.current;
              try {
                if (t > -1) {
                  var s = !0, l = /* @__PURE__ */ new Date("12/31/2100");
                  try {
                    l = new Date(a[t]), l < this.get_beginRange() && this.set_beginRange(l);
                  } catch {
                  }
                  try {
                    var g = /* @__PURE__ */ new Date("12/31/1890");
                    e > -1 && (g = new Date(a[e]), s && g > this.get_endRange() && this.set_endRange(g));
                  } catch {
                  }
                }
              } catch {
              }
            }
          },
          checkState: function() {
          },
          getMaxValue: function(t) {
            var e = 0;
            this._table$1.lock();
            for (var n = r.enumerate(this._table$1.rows); n.moveNext(); ) {
              var a = n.current;
              try {
                if (t > -1) {
                  var s = !0;
                  try {
                    var l = parseFloat(a[t]);
                    s && l > e && (e = l);
                  } catch {
                  }
                }
              } catch {
              }
            }
            return this._table$1.unlock(), e;
          },
          getDomainValues: function(t) {
            var e = [];
            this._table$1.lock();
            for (var n = r.enumerate(this._table$1.rows); n.moveNext(); ) {
              var a = n.current;
              try {
                t > -1 && (e.indexOf(a[t]) >= 0 || e.push(a[t]));
              } catch {
              }
            }
            return e.sort(), this._table$1.unlock(), e;
          },
          get_barChartBitmask: function() {
            return this._barChartBitmask$1;
          },
          set_barChartBitmask: function(t) {
            return this._barChartBitmask$1 = t, t;
          },
          _isPointInFrustum$1: function(t, e) {
            for (var n = new Qa(t.x, t.y, t.z, 1), a = 0; a < 6; a++)
              if (e[a].dot(n) < 0)
                return !1;
            return !0;
          },
          getTableDataInView: function() {
            for (var t = "", e = !0, n = r.enumerate(this.get_header()); n.moveNext(); ) {
              var a = n.current;
              e ? e = !1 : t += "	", t += a;
            }
            t += `\r
`;
            for (var s = r.enumerate(this.get__table().rows); s.moveNext(); ) {
              var l = s.current, g = parseFloat(l[this.get_lngColumn()]), _ = parseFloat(l[this.get_latColumn()]), m = U.geoTo3dDouble(_, g);
              if (this._isPointInFrustum$1(m, Z.singleton.renderContext.get_frustum())) {
                e = !0;
                for (var b = r.enumerate(l); b.moveNext(); ) {
                  var a = b.current;
                  e ? e = !1 : t += "	", t += a;
                }
                t += `\r
`;
              }
            }
            return t;
          },
          prepVertexBuffer: function(t, e) {
            this._table$1.lock(), this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList != null && this.triangleList.clear(), this.pointList != null && this.pointList.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.lineList == null && (this.lineList = new fa()), this.pointList == null && (this.pointList = new Xr(t)), this.lineList.timeSeries = this.timeSeries, this.lineList2d == null && (this.lineList2d = new fa(), this.lineList2d.set_depthBuffered(!1)), this.lineList.timeSeries = this.timeSeries, this.triangleList == null && (this.triangleList = new In()), this.triangleList2d == null && (this.triangleList2d = new In(), this.triangleList2d.depthBuffered = !1), this.positions.length = 0;
            var n = 0, a = this.get_color(), s = U.meanObliquityOfEcliptic(Q.get_jNow()) / 180 * Math.PI, l = P.get_allMaps()[this.get_referenceFrame()].frame.meanRadius;
            l && (this._meanRadius$1 = l);
            for (var g = new $(), _ = 2e-4, m = Pt.get_white(), b = 0, y = 0, M = r.enumerate(this._table$1.rows); M.moveNext(); ) {
              var A = M.current;
              try {
                if (this.geometryColumn > -1 || !this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1 || this.get_coordinatesType() === 1 && this.get_xAxisColumn() > -1 && this.get_yAxisColumn() > -1) {
                  var R = 0, F = 0, O = 0, B = 1, H = 0, K = 0, J = this.getScaleFactor(this.get_altUnit(), 1);
                  if (this.altColumn === -1 || this.get_altType() === 3 || this.bufferIsFlat)
                    B = 1, (this.astronomical & !this.bufferIsFlat) === 1 && (B = 63239.6717 * 100);
                  else {
                    this.get_altType() || (J = -J), B = 0;
                    try {
                      B = parseFloat(A[this.altColumn]);
                    } catch {
                    }
                    this.astronomical ? (J = J / (1e3 * 149598e3), K = B * J / 206264.806, H = J * B, B = J * B) : this.get_altType() === 2 ? (H = J * B, B = J * B / this._meanRadius$1) : (H = J * B, B = 1 + J * B / this._meanRadius$1);
                  }
                  if (!this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1) {
                    R = parseFloat(A[this.lngColumn]), F = parseFloat(A[this.latColumn]), this.astronomical ? (this.get_raUnits() || (R *= 15), this.bufferIsFlat) : R += 180;
                    var it = U.geoTo3dRad(F, R, B);
                    this.astronomical && !this.bufferIsFlat && it.rotateX(s), g = it, this.positions.push(g);
                  } else if (this.get_coordinatesType() === 1) {
                    var ot = this.getScaleFactor(this.get_cartesianScale(), this.get_cartesianCustomScale());
                    this.astronomical ? ot /= 1e3 * 149598e3 : ot /= this._meanRadius$1, this.get_zAxisColumn() > -1 && (O = parseFloat(A[this.get_zAxisColumn()])), R = parseFloat(A[this.get_xAxisColumn()]), F = parseFloat(A[this.get_yAxisColumn()]), this.get_xAxisReverse() && (R = -R), this.get_yAxisReverse() && (F = -F), this.get_zAxisReverse() && (O = -O), g = $.create(R * ot, O * ot, F * ot), this.positions.push(g);
                  }
                  switch (this.get_colorMap()) {
                    case 0:
                      m = a;
                      break;
                    case 3:
                      this.get_colorMapColumn() > -1 ? this.get_dynamicColor() ? m = this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(A[this.get_colorMapColumn()]))) : m = this._parseColor$1(A[this.get_colorMapColumn()], a) : m = a;
                      break;
                    default:
                      break;
                  }
                  if (m == null && (m = Pt.get_transparent()), this.sizeColumn > -1)
                    switch (this.pointScaleType) {
                      case 0:
                        _ = parseFloat(A[this.sizeColumn]), _ = this.normalizePointSize(_);
                        break;
                      case 2:
                        _ = parseFloat(A[this.sizeColumn]), _ = Math.log(_);
                        break;
                      case 1:
                        try {
                          _ = parseFloat(A[this.sizeColumn]), _ = this.normalizePointSize(_), _ = Math.pow(2, _);
                        } catch {
                          _ = 0;
                        }
                        break;
                      case 4:
                        var lt = 0;
                        try {
                          lt = parseFloat(A[this.sizeColumn]), this.bufferIsFlat ? _ = 40 / Math.pow(1.6, lt) : (lt = lt - 5 * (xt.logN(K, 10) - 1), _ = 12e7 / Math.pow(1.6, lt));
                        } catch {
                          _ = 0;
                        }
                        break;
                      case 3:
                        _ = 1;
                        break;
                      default:
                        break;
                    }
                  else
                    _ = 0.2;
                  if (this.get_plotType() === 1 && (_ = 1), this.astronomical & !this.bufferIsFlat, this.startDateColumn > -1) {
                    var gt = new Date(A[this.startDateColumn]);
                    b = Q.utcToJulian(gt) - Q.utcToJulian(this.baseDate), this.endDateColumn > -1 ? (gt = new Date(A[this.endDateColumn]), y = Q.utcToJulian(gt) - Q.utcToJulian(this.baseDate)) : y = b;
                  }
                  this.pointList.addPoint(g, m, new ni(b, y), _), this.geometryColumn > -1 && this._parseGeometry$1(A[this.geometryColumn], m, m, H, new ni(b, y)), n++;
                }
              } catch {
              }
              this.lines = !1;
            }
            return this._table$1.unlock(), this._dataDirty$1 = !1, this.dirty = !1, !1;
          },
          _parseGeometry$1: function(t, e, n, a, s) {
            t = r.trim(t).toLowerCase();
            var l = t.indexOf("(");
            if (!(l < 0) && r.endsWith(t, ")")) {
              var g = r.trim(t.substring(0, l)), _ = t.substr(l), m = g.split(" "), b = null, y = null;
              if (m.length > 0)
                for (var M = r.enumerate(m); M.moveNext(); ) {
                  var A = M.current;
                  r.emptyString(b) ? b = A : r.emptyString(y) && (y = A);
                }
              switch (b) {
                case "multipolygon":
                case "polygon":
                  this._parsePolygon$1(_, y, e, n, a, s);
                  break;
                case "multilinestring":
                  this._parseLineString$1(_, y, e, a, !1, s);
                  break;
                case "linestring":
                  this._parseLineString$1(_, y, e, a, !0, s);
                  break;
                case "geometrycollection":
                  _ = _.substring(1, _.length - 2);
                  for (var R = yi.splitString(_, ","), F = r.enumerate(R); F.moveNext(); ) {
                    var O = F.current;
                    this._parseGeometry$1(O, e, n, a, s);
                  }
                  break;
              }
            }
          },
          _parsePolygon$1: function(t, e, n, a, s, l) {
            if (!(!r.startsWith(t, "(") && r.endsWith(t, ")"))) {
              t = t.substring(1, t.length - 2);
              for (var g = yi.splitString(t, ","), _ = r.enumerate(g); _.moveNext(); ) {
                var m = _.current, b = new Bs();
                b.astronomical = this.astronomical, b.meanRadius = this._meanRadius$1, b.parseWkt(m, e, s, l), s ? this._addPolygon$1(!1, b, 1, a, n, !0, !0, l) : this._addPolygonFlat$1(!1, b, 1, a, n, !0, !0, l);
              }
            }
          },
          _parseLineString$1: function(t, e, n, a, s, l) {
            if (!(!r.startsWith(t, "(") && r.endsWith(t, ")"))) {
              s || (t = t.substring(1, t.length - 2));
              for (var g = yi.splitString(t, ","), _ = r.enumerate(g); _.moveNext(); ) {
                var m = _.current, b = new Bs();
                b.astronomical = this.astronomical, b.meanRadius = this._meanRadius$1, b.parseWkt(m, e, a, l), this._addPolygon$1(!1, b, 1, Pt.get_white(), n, !1, !1, l);
              }
            }
          },
          _splitShapes$1: function(t) {
            for (var e = [], n = 0; n < t.length; )
              t.substr(n, 1);
            return e;
          },
          _addPolygon$1: function(t, e, n, a, s, l, g, _) {
            for (var m = [], b = [], y = 0; y < e.pointList.length; y++)
              m.push(U.geoTo3dRad(e.pointList[y].lat, e.pointList[y].lng, 1 + e.pointList[y].alt / this._meanRadius$1)), b.push(U.geoTo3dRad(e.pointList[y].lat, e.pointList[y].lng, 1));
            for (var y = 0; y < e.pointList.length - 1; y++)
              t || (l && this.triangleList.addQuad(m[y], m[y + 1], b[y], b[y + 1], a, _), n > 0 && (l ? this.lineList.addLine(m[y], m[y + 1], s, _) : this.lineList2d.addLine(m[y], m[y + 1], s, _), l && (this.lineList.addLine(b[y], b[y + 1], s, _), this.lineList.addLine(m[y], b[y], s, _), this.lineList.addLine(m[y + 1], b[y + 1], s, _))));
            if (g)
              for (var M = da.tesselateSimplePoly(m), y = 0; y < M.length; y += 3)
                this.triangleList.addTriangle(m[M[y]], m[M[y + 1]], m[M[y + 2]], a, _);
          },
          _addPolygonFlat$1: function(t, e, n, a, s, l, g, _) {
            for (var m = [], b = 0; b < e.pointList.length; b++)
              m.push(U.geoTo3dRad(e.pointList[b].lat, e.pointList[b].lng, 1 + e.pointList[b].alt / this._meanRadius$1));
            for (var b = 0; b < e.pointList.length - 1; b++)
              t || n > 0 && this.lineList2d.addLine(m[b], m[b + 1], s, _);
            if (g)
              for (var y = da.tesselateSimplePoly(m), b = 0; b < y.length; b += 3)
                this.triangleList2d.addSubdividedTriangles(m[y[b]], m[y[b + 1]], m[y[b + 2]], a, _, 2);
          },
          _parseColor$1: function(t, e) {
            return j.load(t);
          },
          getScaleFactor: function(t, e) {
            var n = 1;
            switch (t) {
              case 1:
                n = 1;
                break;
              case 2:
                n = 1 * 0.3048;
                break;
              case 3:
                n = 1 / 12 * 0.3048;
                break;
              case 4:
                n = 5280 * 0.3048;
                break;
              case 5:
                n = 1e3;
                break;
              case 6:
                n = 1e3 * 149598e3;
                break;
              case 7:
                n = 1e3 * 149598e3 * 63239.6717;
                break;
              case 8:
                n = 1e3 * 149598e3 * 206264.806;
                break;
              case 9:
                n = 1e3 * 149598e3 * 206264.806 * 1e6;
                break;
              case 10:
                n = e;
                break;
            }
            return n;
          },
          get__table: function() {
            return this._table$1;
          },
          set__table: function(t) {
            return this._table$1 = t, t;
          },
          useHeadersFromVoTable: function(t) {
            for (var e = r.enumerate(t.column); e.moveNext(); ) {
              var n = e.current;
              this.get_header().push(n.name);
            }
            this.guessHeaderAssignmentsFromVoTable(t), t.getRAColumn() != null && t.getRAColumn().unit.toLowerCase() === "deg" && this.set_raUnits(1);
          },
          loadFromString: function(t, e, n, a, s) {
            if (e || (this._table$1 = new $a()), this._table$1.lock(), this._table$1.loadFromString(t, e, a, s), !e && (this.guessHeaderAssignments(), this.astronomical && this.lngColumn > -1)) {
              var l = this.getMaxValue(this.lngColumn);
              l > 24 && this.set_raUnits(1);
            }
            n && this.purgeByTime(), this._table$1.unlock();
          },
          purgeByTime: function() {
            if (!(this.startDateColumn < 0)) {
              var t = this.startDateColumn;
              this.endDateColumn > -1 && (t = this.endDateColumn);
              var e = Q.get_now(), n = r.truncate(this.decay) * 24 * 60 * 60 * 1e3;
              e = new Date(e.getDate() - n);
              for (var a = this._table$1.rows.length, s = 0; s < a; s++)
                try {
                  var l = this._table$1.rows[s], g = new Date(l[t]);
                  g < e && (this._table$1.rows.splice(s, 1), a--, s--);
                } catch {
                }
            }
          },
          cleanUp: function() {
            this.cleanUpBase(), this._table$1.lock(), ai.prototype.cleanUp.call(this), this._table$1.unlock(), this.dirty = !0;
          },
          writeLayerProperties: function(t) {
            t._writeAttributeString("TimeSeries", this.get_timeSeries().toString()), t._writeAttributeString("BeginRange", xt.xmlDate(this.get_beginRange())), t._writeAttributeString("EndRange", xt.xmlDate(this.get_endRange())), t._writeAttributeString("Decay", this.get_decay().toString()), t._writeAttributeString("CoordinatesType", we.toXml("CoordinatesTypes", this.get_coordinatesType())), t._writeAttributeString("LatColumn", this.get_latColumn().toString()), t._writeAttributeString("LngColumn", this.get_lngColumn().toString()), t._writeAttributeString("GeometryColumn", this.get_geometryColumn().toString()), t._writeAttributeString("AltType", we.toXml("AltTypes", this.get_altType())), t._writeAttributeString("MarkerMix", we.toXml("MarkerMixes", this.get_markerMix())), t._writeAttributeString("ColorMap", we.toXml("ColorMaps", this.get_colorMap())), t._writeAttributeString("MarkerColumn", this.get_markerColumn().toString()), t._writeAttributeString("PlotType", we.toXml("PlotTypes", this.get_plotType())), t._writeAttributeString("MarkerIndex", this.get_markerIndex().toString()), t._writeAttributeString("MarkerScale", we.toXml("MarkerScales", this.get_markerScale())), t._writeAttributeString("AltUnit", we.toXml("AltUnits", this.get_altUnit())), t._writeAttributeString("AltColumn", this.get_altColumn().toString()), t._writeAttributeString("StartDateColumn", this.get_startDateColumn().toString()), t._writeAttributeString("EndDateColumn", this.get_endDateColumn().toString()), this._prepareBackCompatTable$1(), this._lastNormalizeSizeColumnIndex$1 > -1 ? (t._writeAttributeString("SizeColumn", this._lastNormalizeSizeColumnIndex$1), t._writeAttributeString("NormalizeSizeColumn", this.sizeColumn.toString())) : t._writeAttributeString("SizeColumn", this.get_sizeColumn().toString()), t._writeAttributeString("NormalizeSize", this.get_normalizeSize().toString()), t._writeAttributeString("NormalizeSizeClip", this.get_normalizeSizeClip().toString()), t._writeAttributeString("NormalizeSizeMin", this.get_normalizeSizeMin().toString()), t._writeAttributeString("NormalizeSizeMax", this.get_normalizeSizeMax().toString()), this._lastDynamicColorColumnIndex$1 > -1 ? (t._writeAttributeString("ColorMapColumn", this._lastDynamicColorColumnIndex$1), t._writeAttributeString("DynamicColorColumn", this.get_colorMapColumn().toString())) : t._writeAttributeString("ColorMapColumn", this.get_colorMapColumn().toString()), t._writeAttributeString("DynamicColor", this.get_dynamicColor().toString()), t._writeAttributeString("ColorMapperName", this.get_colorMapperName()), t._writeAttributeString("NormalizeColorMap", this.get_normalizeColorMap().toString()), t._writeAttributeString("NormalizeColorMapMin", this.get_normalizeColorMapMin().toString()), t._writeAttributeString("NormalizeColorMapMax", this.get_normalizeColorMapMax().toString()), t._writeAttributeString("HyperlinkFormat", this.get_hyperlinkFormat()), t._writeAttributeString("HyperlinkColumn", this.get_hyperlinkColumn().toString()), t._writeAttributeString("ScaleFactor", this.get_scaleFactor().toString()), t._writeAttributeString("PointScaleType", we.toXml("PointScaleTypes", this.get_pointScaleType())), t._writeAttributeString("ShowFarSide", this.get_showFarSide().toString()), t._writeAttributeString("RaUnits", we.toXml("RAUnits", this.get_raUnits())), t._writeAttributeString("HoverTextColumn", this.get_nameColumn().toString()), t._writeAttributeString("XAxisColumn", this.get_xAxisColumn().toString()), t._writeAttributeString("XAxisReverse", this.get_xAxisReverse().toString()), t._writeAttributeString("YAxisColumn", this.get_yAxisColumn().toString()), t._writeAttributeString("YAxisReverse", this.get_yAxisReverse().toString()), t._writeAttributeString("ZAxisColumn", this.get_zAxisColumn().toString()), t._writeAttributeString("ZAxisReverse", this.get_zAxisReverse().toString()), t._writeAttributeString("CartesianScale", we.toXml("AltUnits", this.get_cartesianScale())), t._writeAttributeString("CartesianCustomScale", this.get_cartesianCustomScale().toString()), t._writeAttributeString("DynamicData", this.get_dynamicData().toString()), t._writeAttributeString("AutoUpdate", this.get_autoUpdate().toString()), t._writeAttributeString("DataSourceUrl", this.get_dataSourceUrl());
          },
          get_dynamicData: function() {
            return this._dynamicData$1;
          },
          set_dynamicData: function(t) {
            return this._dynamicData$1 = t, t;
          },
          get_autoUpdate: function() {
            return this._autoUpdate$1;
          },
          set_autoUpdate: function(t) {
            return this._autoUpdate$1 = t, t;
          },
          get_dataSourceUrl: function() {
            return this._dataSourceUrl$1;
          },
          set_dataSourceUrl: function(t) {
            return this._dataSourceUrl$1 = t, t;
          },
          get_timeSeries: function() {
            return this.timeSeries;
          },
          set_timeSeries: function(t) {
            return this.timeSeries !== t && (this.version++, this.timeSeries = t), t;
          },
          get_beginRange: function() {
            return this._beginRange$1;
          },
          set_beginRange: function(t) {
            return r.compareDates(this._beginRange$1, t) || (this.version++, this._beginRange$1 = t), t;
          },
          get_endRange: function() {
            return this._endRange$1;
          },
          set_endRange: function(t) {
            return r.compareDates(this._endRange$1, t) || (this.version++, this._endRange$1 = t), t;
          },
          initializeFromXml: function(t) {
            this.set_timeSeries(r.boolean(t.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(t.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(t.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(t.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(we.parse("CoordinatesTypes", t.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(t.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(t.attributes.getNamedItem("LngColumn").nodeValue)), t.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(t.attributes.getNamedItem("GeometryColumn").nodeValue)), this.set_altType(we.parse("AltTypes", t.attributes.getNamedItem("AltType").nodeValue)), this.set_markerMix(0), this.set_colorMap(we.parse("ColorMaps", t.attributes.getNamedItem("ColorMap").nodeValue)), this.set_markerColumn(parseInt(t.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), this.set_plotType(we.parse("PlotTypes", t.attributes.getNamedItem("PlotType").nodeValue)), this.set_markerIndex(parseInt(t.attributes.getNamedItem("MarkerIndex").nodeValue)), this.set_markerScale(we.parse("MarkerScales", t.attributes.getNamedItem("MarkerScale").nodeValue)), this.set_altUnit(we.parse("AltUnits", t.attributes.getNamedItem("AltUnit").nodeValue)), this.set_altColumn(parseInt(t.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(t.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(t.attributes.getNamedItem("EndDateColumn").nodeValue)), t.attributes.getNamedItem("NormalizeSizeColumn") != null ? this.set_sizeColumn(parseInt(t.attributes.getNamedItem("NormalizeSizeColumn").nodeValue)) : this.set_sizeColumn(parseInt(t.attributes.getNamedItem("SizeColumn").nodeValue)), t.attributes.getNamedItem("NormalizeSize") != null && (this.set_normalizeSize(r.boolean(t.attributes.getNamedItem("NormalizeSize").nodeValue)), this.set_normalizeSizeClip(r.boolean(t.attributes.getNamedItem("NormalizeSizeClip").nodeValue)), this.set_normalizeSizeMin(parseFloat(t.attributes.getNamedItem("NormalizeSizeMin").nodeValue)), this.set_normalizeSizeMax(parseFloat(t.attributes.getNamedItem("NormalizeSizeMax").nodeValue))), t.attributes.getNamedItem("DynamicColorColumn") != null ? this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("DynamicColorColumn").nodeValue)) : this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), t.attributes.getNamedItem("DynamicColor") != null && (this.set_dynamicColor(r.boolean(t.attributes.getNamedItem("DynamicColor").nodeValue)), this.set_colorMapperName(t.attributes.getNamedItem("ColorMapperName").nodeValue), this.set_normalizeColorMap(r.boolean(t.attributes.getNamedItem("NormalizeColorMap").nodeValue)), this.set_normalizeColorMapMin(parseFloat(t.attributes.getNamedItem("NormalizeColorMapMin").nodeValue)), this.set_normalizeColorMapMax(parseFloat(t.attributes.getNamedItem("NormalizeColorMapMax").nodeValue))), this.set_hyperlinkFormat(t.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(t.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(t.attributes.getNamedItem("ScaleFactor").nodeValue)), this.set_pointScaleType(we.parse("PointScaleTypes", t.attributes.getNamedItem("PointScaleType").nodeValue)), t.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(r.boolean(t.attributes.getNamedItem("ShowFarSide").nodeValue)), t.attributes.getNamedItem("RaUnits") != null && this.set_raUnits(we.parse("RAUnits", t.attributes.getNamedItem("RaUnits").nodeValue)), t.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(t.attributes.getNamedItem("HoverTextColumn").nodeValue)), t.attributes.getNamedItem("XAxisColumn") != null && (this.set_xAxisColumn(parseInt(t.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(r.boolean(t.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(t.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(r.boolean(t.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(t.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(r.boolean(t.attributes.getNamedItem("ZAxisReverse").nodeValue)), this.set_cartesianScale(we.parse("AltUnits", t.attributes.getNamedItem("CartesianScale").nodeValue)), this.set_cartesianCustomScale(parseFloat(t.attributes.getNamedItem("CartesianCustomScale").nodeValue))), t.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(r.boolean(t.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(r.boolean(t.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(t.attributes.getNamedItem("DataSourceUrl").nodeValue));
          },
          get_decay: function() {
            return this.decay;
          },
          set_decay: function(t) {
            return this.decay !== t && (this.version++, this.decay = t), t;
          },
          get_coordinatesType: function() {
            return this._coordinatesType$1;
          },
          set_coordinatesType: function(t) {
            return this._coordinatesType$1 !== t && (this.version++, this._coordinatesType$1 = t), t;
          },
          get_latColumn: function() {
            return this.latColumn;
          },
          set_latColumn: function(t) {
            return this.latColumn !== t && (this.version++, this.latColumn = t), t;
          },
          get_lngColumn: function() {
            return this.lngColumn;
          },
          set_lngColumn: function(t) {
            return this.lngColumn !== t && (this.version++, this.lngColumn = t), t;
          },
          get_geometryColumn: function() {
            return this.geometryColumn;
          },
          set_geometryColumn: function(t) {
            return this.geometryColumn !== t && (this.version++, this.geometryColumn = t), t;
          },
          get_xAxisColumn: function() {
            return this._xAxisColumn$1;
          },
          set_xAxisColumn: function(t) {
            return this._xAxisColumn$1 !== t && (this.version++, this._xAxisColumn$1 = t), t;
          },
          get_yAxisColumn: function() {
            return this._yAxisColumn$1;
          },
          set_yAxisColumn: function(t) {
            return this._yAxisColumn$1 !== t && (this.version++, this._yAxisColumn$1 = t), t;
          },
          get_zAxisColumn: function() {
            return this._zAxisColumn$1;
          },
          set_zAxisColumn: function(t) {
            return this._zAxisColumn$1 !== t && (this.version++, this._zAxisColumn$1 = t), t;
          },
          get_xAxisReverse: function() {
            return this._xAxisReverse$1;
          },
          set_xAxisReverse: function(t) {
            return this._xAxisReverse$1 !== t && (this.version++, this._xAxisReverse$1 = t), t;
          },
          get_yAxisReverse: function() {
            return this._yAxisReverse$1;
          },
          set_yAxisReverse: function(t) {
            return this._yAxisReverse$1 !== t && (this.version++, this._yAxisReverse$1 = t), t;
          },
          get_zAxisReverse: function() {
            return this._zAxisReverse$1;
          },
          set_zAxisReverse: function(t) {
            return this._zAxisReverse$1 !== t && (this.version++, this._zAxisReverse$1 = t), t;
          },
          get_altType: function() {
            return this._altType$1;
          },
          set_altType: function(t) {
            return this._altType$1 !== t && (this.version++, this._altType$1 = t), t;
          },
          get_markerMix: function() {
            return this._markerMix$1;
          },
          set_markerMix: function(t) {
            return this._markerMix$1 !== t && (this.version++, this._markerMix$1 = t), t;
          },
          get_raUnits: function() {
            return this._raUnits$1;
          },
          set_raUnits: function(t) {
            return this._raUnits$1 !== t && (this.version++, this._raUnits$1 = t), t;
          },
          get_colorMap: function() {
            return this.colorMap;
          },
          set_colorMap: function(t) {
            return this.colorMap !== t && (this.version++, this.colorMap = t), t;
          },
          get_colorMapperName: function() {
            return this.colorMapperName;
          },
          set_colorMapperName: function(t) {
            if (Ce.fromNamedColormap(t) == null)
              throw new Error("Invalid colormap name");
            return this.version++, this.colorMapperName = t, t;
          },
          get_colorMapper: function() {
            return Ce.fromNamedColormap(this.colorMapperName);
          },
          get_dynamicColor: function() {
            return this.dynamicColor;
          },
          set_dynamicColor: function(t) {
            return this.version++, this.dynamicColor = t, t;
          },
          get_normalizeColorMap: function() {
            return this.normalizeColorMap;
          },
          set_normalizeColorMap: function(t) {
            return this.version++, this.normalizeColorMap = t, t;
          },
          get_normalizeColorMapMin: function() {
            return this.normalizeColorMapMin;
          },
          set_normalizeColorMapMin: function(t) {
            return this.version++, this.normalizeColorMapMin = t, t;
          },
          get_normalizeColorMapMax: function() {
            return this.normalizeColorMapMax;
          },
          set_normalizeColorMapMax: function(t) {
            return this.version++, this.normalizeColorMapMax = t, t;
          },
          normalizeColorMapValue: function(t) {
            if (!this.get_normalizeColorMap())
              return t;
            var e = (t - this.get_normalizeColorMapMin()) / (this.get_normalizeColorMapMax() - this.get_normalizeColorMapMin());
            return e < 0 ? e = 0 : e > 1 && (e = 1), e;
          },
          get_markerColumn: function() {
            return this._markerColumn$1;
          },
          set_markerColumn: function(t) {
            return this._markerColumn$1 !== t && (this.version++, this._markerColumn$1 = t), t;
          },
          get_colorMapColumn: function() {
            return this.colorMapColumn;
          },
          set_colorMapColumn: function(t) {
            return this.colorMapColumn !== t && (this.version++, this.colorMapColumn = t), t;
          },
          get_plotType: function() {
            return this._plotType$1;
          },
          set_plotType: function(t) {
            return this._plotType$1 !== t && (this.version++, this._plotType$1 = t), t;
          },
          get_markerIndex: function() {
            return this._markerIndex$1;
          },
          set_markerIndex: function(t) {
            return this._markerIndex$1 !== t && (this.version++, this._markerIndex$1 = t), t;
          },
          get_showFarSide: function() {
            return this._showFarSide$1;
          },
          set_showFarSide: function(t) {
            return this._showFarSide$1 !== t && (this.version++, this._showFarSide$1 = t), t;
          },
          get_markerScale: function() {
            return this._markerScale$1;
          },
          set_markerScale: function(t) {
            return this._markerScale$1 !== t && (this.version++, this._markerScale$1 = t), t;
          },
          get_altUnit: function() {
            return this._altUnit$1;
          },
          set_altUnit: function(t) {
            return this._altUnit$1 !== t && (this.version++, this._altUnit$1 = t), t;
          },
          get_cartesianScale: function() {
            return this._cartesianScale$1;
          },
          set_cartesianScale: function(t) {
            return this._cartesianScale$1 !== t && (this.version++, this._cartesianScale$1 = t), t;
          },
          get_cartesianCustomScale: function() {
            return this._cartesianCustomScale$1;
          },
          set_cartesianCustomScale: function(t) {
            return this._cartesianCustomScale$1 !== t && (this.version++, this._cartesianCustomScale$1 = t), t;
          },
          get_altColumn: function() {
            return this.altColumn;
          },
          set_altColumn: function(t) {
            return this.altColumn !== t && (this.version++, this.altColumn = t), t;
          },
          get_startDateColumn: function() {
            return this.startDateColumn;
          },
          set_startDateColumn: function(t) {
            return this.startDateColumn !== t && (this.version++, this.startDateColumn = t), t;
          },
          get_endDateColumn: function() {
            return this.endDateColumn;
          },
          set_endDateColumn: function(t) {
            return this.endDateColumn !== t && (this.version++, this.endDateColumn = t), t;
          },
          get_sizeColumn: function() {
            return this.sizeColumn;
          },
          set_sizeColumn: function(t) {
            return this.sizeColumn !== t && (this.version++, this.sizeColumn = t), t;
          },
          get_normalizeSize: function() {
            return this.normalizeSize;
          },
          set_normalizeSize: function(t) {
            return this.normalizeSize !== t && (this.version++, this.normalizeSize = t), t;
          },
          get_normalizeSizeClip: function() {
            return this.normalizeSizeClip;
          },
          set_normalizeSizeClip: function(t) {
            return this.normalizeSizeClip !== t && (this.version++, this.normalizeSizeClip = t), t;
          },
          get_normalizeSizeMin: function() {
            return this.normalizeSizeMin;
          },
          set_normalizeSizeMin: function(t) {
            return this.normalizeSizeMin !== t && (this.version++, this.normalizeSizeMin = t), t;
          },
          get_normalizeSizeMax: function() {
            return this.normalizeSizeMax;
          },
          set_normalizeSizeMax: function(t) {
            return this.normalizeSizeMax !== t && (this.version++, this.normalizeSizeMax = t), t;
          },
          normalizePointSize: function(t) {
            if (!this.get_normalizeSize())
              return t;
            var e = (t - this.get_normalizeSizeMin()) / (this.get_normalizeSizeMax() - this.get_normalizeSizeMin());
            return this.get_normalizeSizeClip() && (e < 0 ? e = 0 : e > 1 && (e = 1)), e;
          },
          get_nameColumn: function() {
            return this.nameColumn;
          },
          set_nameColumn: function(t) {
            return this.nameColumn !== t && (this.version++, this.nameColumn = t), t;
          },
          get_hyperlinkFormat: function() {
            return this._hyperlinkFormat$1;
          },
          set_hyperlinkFormat: function(t) {
            return this._hyperlinkFormat$1 !== t && (this.version++, this._hyperlinkFormat$1 = t), t;
          },
          get_hyperlinkColumn: function() {
            return this._hyperlinkColumn$1;
          },
          set_hyperlinkColumn: function(t) {
            return this._hyperlinkColumn$1 !== t && (this.version++, this._hyperlinkColumn$1 = t), t;
          },
          get_scaleFactor: function() {
            return this.scaleFactor;
          },
          set_scaleFactor: function(t) {
            return this.scaleFactor !== t && (this.version++, this.scaleFactor = t), t;
          },
          get_pointScaleType: function() {
            return this.pointScaleType;
          },
          set_pointScaleType: function(t) {
            return this.pointScaleType !== t && (this.version++, this.pointScaleType = t), t;
          },
          draw: function(t, e, n) {
            var a = t;
            this.version !== this.lastVersion && this.cleanUp(), this.lastVersion = this.version, this.bufferIsFlat !== n && (this.cleanUp(), this.bufferIsFlat = n), this.dirty && this.prepVertexBuffer(a, e);
            var s = Q.get_jNow() - Q.utcToJulian(this.baseDate), l = this.scaleFactor * 3;
            if (n && this.astronomical && this._markerScale$1 === 1 && (l = this.scaleFactor / (t.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = s, this.triangleList2d.draw(t, e * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = s, this.triangleList.draw(t, e * this.get_opacity(), 1)), this.pointList != null)
              switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = s, this.pointList.scale = this._markerScale$1 === 1 ? l : -l, this._plotType$1) {
                case 0:
                  this.pointList.draw(t, e * this.get_opacity(), !1);
                  break;
                case 2:
                  this.pointList.drawTextured(t, Ui.get__circleTexture$1().texture2d, e * this.get_opacity());
                  break;
                case 1:
                  this.pointList.drawTextured(t, hr.getPushPinTexture(19), e * this.get_opacity());
                  break;
                case 3:
                  this.pointList.drawTextured(t, hr.getPushPinTexture(35), e * this.get_opacity());
                  break;
                case 5:
                case 4:
                  this.pointList.drawTextured(t, hr.getPushPinTexture(this._markerIndex$1), e * this.get_opacity());
                  break;
              }
            return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = s, this.lineList.drawLines(t, e * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = s, this.lineList2d.drawLines(t, e * this.get_opacity())), !0;
          },
          cleanUpBase: function() {
            this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
          }
        };
        function hs() {
          this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, ai.call(this);
        }
        hs.get__circleTexture$1 = function() {
          return hs._circleTexture$1;
        };
        var kf = {
          get_dynamicData: function() {
            return this._dynamicData$1;
          },
          set_dynamicData: function(t) {
            return this._dynamicData$1 = t, t;
          },
          get_autoUpdate: function() {
            return this._autoUpdate$1;
          },
          set_autoUpdate: function(t) {
            return this._autoUpdate$1 = t, t;
          },
          get_dataSourceUrl: function() {
            return this._dataSourceUrl$1;
          },
          set_dataSourceUrl: function(t) {
            return this._dataSourceUrl$1 = t, t;
          },
          get_timeSeries: function() {
            return this.timeSeries;
          },
          set_timeSeries: function(t) {
            return this.timeSeries !== t && (this.version++, this.timeSeries = t), t;
          },
          get_header: function() {
            return null;
          },
          get_beginRange: function() {
            return this._beginRange$1;
          },
          set_beginRange: function(t) {
            return r.compareDates(this._beginRange$1, t) || (this.version++, this._beginRange$1 = t), t;
          },
          get_endRange: function() {
            return this._endRange$1;
          },
          set_endRange: function(t) {
            return r.compareDates(this._endRange$1, t) || (this.version++, this._endRange$1 = t), t;
          },
          initializeFromXml: function(t) {
            switch (this.set_timeSeries(r.boolean(t.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(t.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(t.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(t.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(we.parse("CoordinatesTypes", t.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(t.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(t.attributes.getNamedItem("LngColumn").nodeValue)), t.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(t.attributes.getNamedItem("GeometryColumn").nodeValue)), t.attributes.getNamedItem("AltType").nodeValue) {
              case "Depth":
                this.set_altType(0);
                break;
              case "Altitude":
                this.set_altType(1);
                break;
              case "Distance":
                this.set_altType(2);
                break;
              case "SeaLevel":
                this.set_altType(3);
                break;
              case "Terrain":
                this.set_altType(4);
                break;
            }
            switch (this.set_markerMix(0), t.attributes.getNamedItem("ColorMap").nodeValue) {
              case "Same_For_All":
                this.set__colorMap(0);
                break;
              case "Group_by_Values":
                this.set__colorMap(2);
                break;
              case "Per_Column_Literal":
                this.set__colorMap(3);
                break;
            }
            switch (this.set_markerColumn(parseInt(t.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), t.attributes.getNamedItem("PlotType").nodeValue) {
              case "Gaussian":
                this.set_plotType(0);
                break;
              case "Point":
                this.set_plotType(1);
                break;
              case "Circle":
                this.set_plotType(2);
                break;
              case "PushPin":
                this.set_plotType(4);
                break;
            }
            switch (this.set_markerIndex(parseInt(t.attributes.getNamedItem("MarkerIndex").nodeValue)), t.attributes.getNamedItem("MarkerScale").nodeValue) {
              case "Screen":
                this.set_markerScale(0);
                break;
              case "World":
                this.set_markerScale(1);
                break;
            }
            switch (t.attributes.getNamedItem("AltUnit").nodeValue) {
              case "Meters":
                this.set_altUnit(1);
                break;
              case "Feet":
                this.set_altUnit(2);
                break;
              case "Inches":
                this.set_altUnit(3);
                break;
              case "Miles":
                this.set_altUnit(4);
                break;
              case "Kilometers":
                this.set_altUnit(5);
                break;
              case "AstronomicalUnits":
                this.set_altUnit(6);
                break;
              case "LightYears":
                this.set_altUnit(7);
                break;
              case "Parsecs":
                this.set_altUnit(8);
                break;
              case "MegaParsecs":
                this.set_altUnit(9);
                break;
              case "Custom":
                this.set_altUnit(10);
                break;
            }
            switch (this.set_altColumn(parseInt(t.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(t.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(t.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(t.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(t.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(t.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(t.attributes.getNamedItem("ScaleFactor").nodeValue)), t.attributes.getNamedItem("PointScaleType").nodeValue) {
              case "Linear":
                this.set_pointScaleType(0);
                break;
              case "Power":
                this.set_pointScaleType(1);
                break;
              case "Log":
                this.set_pointScaleType(2);
                break;
              case "Constant":
                this.set_pointScaleType(3);
                break;
              case "StellarMagnitude":
                this.set_pointScaleType(4);
                break;
            }
            if (t.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(r.boolean(t.attributes.getNamedItem("ShowFarSide").nodeValue)), t.attributes.getNamedItem("RaUnits") != null)
              switch (t.attributes.getNamedItem("RaUnits").nodeValue) {
                case "Hours":
                  this.set_raUnits(0);
                  break;
                case "Degrees":
                  this.set_raUnits(1);
                  break;
              }
            if (t.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(t.attributes.getNamedItem("HoverTextColumn").nodeValue)), t.attributes.getNamedItem("XAxisColumn") != null) {
              switch (this.set_xAxisColumn(parseInt(t.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(r.boolean(t.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(t.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(r.boolean(t.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(t.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(r.boolean(t.attributes.getNamedItem("ZAxisReverse").nodeValue)), t.attributes.getNamedItem("CartesianScale").nodeValue) {
                case "Meters":
                  this.set_cartesianScale(1);
                  break;
                case "Feet":
                  this.set_cartesianScale(2);
                  break;
                case "Inches":
                  this.set_cartesianScale(3);
                  break;
                case "Miles":
                  this.set_cartesianScale(4);
                  break;
                case "Kilometers":
                  this.set_cartesianScale(5);
                  break;
                case "AstronomicalUnits":
                  this.set_cartesianScale(6);
                  break;
                case "LightYears":
                  this.set_cartesianScale(7);
                  break;
                case "Parsecs":
                  this.set_cartesianScale(8);
                  break;
                case "MegaParsecs":
                  this.set_cartesianScale(9);
                  break;
                case "Custom":
                  this.set_cartesianScale(10);
                  break;
              }
              this.set_cartesianCustomScale(parseFloat(t.attributes.getNamedItem("CartesianCustomScale").nodeValue));
            }
            t.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(r.boolean(t.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(r.boolean(t.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(t.attributes.getNamedItem("DataSourceUrl").nodeValue));
          },
          computeDateDomainRange: function(t, e) {
          },
          getDomainValues: function(t) {
            return [];
          },
          get_decay: function() {
            return this.decay;
          },
          set_decay: function(t) {
            return this.decay !== t && (this.version++, this.decay = t), t;
          },
          get_coordinatesType: function() {
            return this._coordinatesType$1;
          },
          set_coordinatesType: function(t) {
            return this._coordinatesType$1 !== t && (this.version++, this._coordinatesType$1 = t), t;
          },
          get_latColumn: function() {
            return this.latColumn;
          },
          set_latColumn: function(t) {
            return this.latColumn !== t && (this.version++, this.latColumn = t), t;
          },
          get_lngColumn: function() {
            return this.lngColumn;
          },
          set_lngColumn: function(t) {
            return this.lngColumn !== t && (this.version++, this.lngColumn = t), t;
          },
          get_geometryColumn: function() {
            return this.geometryColumn;
          },
          set_geometryColumn: function(t) {
            return this.geometryColumn !== t && (this.version++, this.geometryColumn = t), t;
          },
          get_xAxisColumn: function() {
            return this._xAxisColumn$1;
          },
          set_xAxisColumn: function(t) {
            return this._xAxisColumn$1 !== t && (this.version++, this._xAxisColumn$1 = t), t;
          },
          get_yAxisColumn: function() {
            return this._yAxisColumn$1;
          },
          set_yAxisColumn: function(t) {
            return this._yAxisColumn$1 !== t && (this.version++, this._yAxisColumn$1 = t), t;
          },
          get_zAxisColumn: function() {
            return this._zAxisColumn$1;
          },
          set_zAxisColumn: function(t) {
            return this._zAxisColumn$1 !== t && (this.version++, this._zAxisColumn$1 = t), t;
          },
          get_xAxisReverse: function() {
            return this._xAxisReverse$1;
          },
          set_xAxisReverse: function(t) {
            return this._xAxisReverse$1 !== t && (this.version++, this._xAxisReverse$1 = t), t;
          },
          get_yAxisReverse: function() {
            return this._yAxisReverse$1;
          },
          set_yAxisReverse: function(t) {
            return this._yAxisReverse$1 !== t && (this.version++, this._yAxisReverse$1 = t), t;
          },
          get_zAxisReverse: function() {
            return this._zAxisReverse$1;
          },
          set_zAxisReverse: function(t) {
            return this._zAxisReverse$1 !== t && (this.version++, this._zAxisReverse$1 = t), t;
          },
          get_altType: function() {
            return this._altType$1;
          },
          set_altType: function(t) {
            return this._altType$1 !== t && (this.version++, this._altType$1 = t), t;
          },
          get_markerMix: function() {
            return this._markerMix$1;
          },
          set_markerMix: function(t) {
            return this._markerMix$1 !== t && (this.version++, this._markerMix$1 = t), t;
          },
          get_raUnits: function() {
            return this._raUnits$1;
          },
          set_raUnits: function(t) {
            return this._raUnits$1 !== t && (this.version++, this._raUnits$1 = t), t;
          },
          get__colorMap: function() {
            return this._colorMap$1;
          },
          set__colorMap: function(t) {
            return this._colorMap$1 !== t && (this.version++, this._colorMap$1 = t), t;
          },
          get_markerColumn: function() {
            return this._markerColumn$1;
          },
          set_markerColumn: function(t) {
            return this._markerColumn$1 !== t && (this.version++, this._markerColumn$1 = t), t;
          },
          get_colorMapColumn: function() {
            return this._colorMapColumn$1;
          },
          set_colorMapColumn: function(t) {
            return this._colorMapColumn$1 !== t && (this.version++, this._colorMapColumn$1 = t), t;
          },
          get_plotType: function() {
            return this._plotType$1;
          },
          set_plotType: function(t) {
            return this._plotType$1 !== t && (this.version++, this._plotType$1 = t), t;
          },
          get_markerIndex: function() {
            return this._markerIndex$1;
          },
          set_markerIndex: function(t) {
            return this._markerIndex$1 !== t && (this.version++, this._markerIndex$1 = t), t;
          },
          get_showFarSide: function() {
            return this._showFarSide$1;
          },
          set_showFarSide: function(t) {
            return this._showFarSide$1 !== t && (this.version++, this._showFarSide$1 = t), t;
          },
          get_markerScale: function() {
            return this._markerScale$1;
          },
          set_markerScale: function(t) {
            return this._markerScale$1 !== t && (this.version++, this._markerScale$1 = t), t;
          },
          get_altUnit: function() {
            return this._altUnit$1;
          },
          set_altUnit: function(t) {
            return this._altUnit$1 !== t && (this.version++, this._altUnit$1 = t), t;
          },
          get_cartesianScale: function() {
            return this._cartesianScale$1;
          },
          set_cartesianScale: function(t) {
            return this._cartesianScale$1 !== t && (this.version++, this._cartesianScale$1 = t), t;
          },
          get_cartesianCustomScale: function() {
            return this._cartesianCustomScale$1;
          },
          set_cartesianCustomScale: function(t) {
            return this._cartesianCustomScale$1 !== t && (this.version++, this._cartesianCustomScale$1 = t), t;
          },
          get_altColumn: function() {
            return this.altColumn;
          },
          set_altColumn: function(t) {
            return this.altColumn !== t && (this.version++, this.altColumn = t), t;
          },
          get_startDateColumn: function() {
            return this.startDateColumn;
          },
          set_startDateColumn: function(t) {
            return this.startDateColumn !== t && (this.version++, this.startDateColumn = t), t;
          },
          get_endDateColumn: function() {
            return this.endDateColumn;
          },
          set_endDateColumn: function(t) {
            return this.endDateColumn !== t && (this.version++, this.endDateColumn = t), t;
          },
          get_sizeColumn: function() {
            return this.sizeColumn;
          },
          set_sizeColumn: function(t) {
            return this.sizeColumn !== t && (this.version++, this.sizeColumn = t), t;
          },
          get_nameColumn: function() {
            return this.nameColumn;
          },
          set_nameColumn: function(t) {
            return this.nameColumn !== t && (this.version++, this.nameColumn = t), t;
          },
          get_hyperlinkFormat: function() {
            return this._hyperlinkFormat$1;
          },
          set_hyperlinkFormat: function(t) {
            return this._hyperlinkFormat$1 !== t && (this.version++, this._hyperlinkFormat$1 = t), t;
          },
          get_hyperlinkColumn: function() {
            return this._hyperlinkColumn$1;
          },
          set_hyperlinkColumn: function(t) {
            return this._hyperlinkColumn$1 !== t && (this.version++, this._hyperlinkColumn$1 = t), t;
          },
          get_scaleFactor: function() {
            return this.scaleFactor;
          },
          set_scaleFactor: function(t) {
            return this.scaleFactor !== t && (this.version++, this.scaleFactor = t), t;
          },
          get_pointScaleType: function() {
            return this.pointScaleType;
          },
          set_pointScaleType: function(t) {
            return this.pointScaleType !== t && (this.version++, this.pointScaleType = t), t;
          },
          prepVertexBuffer: function(t, e) {
            return !0;
          },
          draw: function(t, e, n) {
            var a = t;
            this.version !== this.lastVersion && this.cleanUp(), this.bufferIsFlat !== n && (this.cleanUp(), this.bufferIsFlat = n), this.dirty && this.prepVertexBuffer(a, e);
            var s = Q.get_jNow() - Q.utcToJulian(this.baseDate), l = this.scaleFactor;
            return n && this.astronomical && this._markerScale$1 === 1 && (l = this.scaleFactor / (t.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = s, this.triangleList2d.draw(t, e * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = s, this.triangleList.draw(t, e * this.get_opacity(), 1)), this.pointList != null && (this.pointList.depthBuffered = !1, this.pointList.decay = this.decay, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = s, this.pointList.scale = this._markerScale$1 === 1 ? l : -l, this.pointList.draw(t, e * this.get_opacity(), !1)), this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = s, this.lineList.drawLines(t, e * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = s, this.lineList2d.drawLines(t, e * this.get_opacity())), !0;
          },
          initFromXml: function(t) {
            ai.prototype.initFromXml.call(this, t);
          },
          cleanUp: function() {
            this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
          },
          dynamicUpdate: function() {
            return !1;
          }
        };
        function kr() {
          this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 0, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this._filename$1 = "", ai.call(this), this._table$1 = null, this._filename$1 = "", this.set_plotType(2);
        }
        kr.get__circleTexture$1 = function() {
          if (kr._circleTexture$1 == null) {
            var t = ze.singleton.engineAssetUrl("circle.png");
            kr._circleTexture$1 = D.loadPlanetTexture(t);
          }
          return kr._circleTexture$1;
        }, kr.create = function(t, e) {
          var n = new kr();
          return n._table$1 = t, n._filename$1 = t.loadFilename, n.set_lngColumn(t.getRAColumn().index), n.set_latColumn(t.getDecColumn().index), n.sizeColumn = t.getColumnByUcd("phot.mag").index, n.set_plotType(e), n;
        };
        var If = {
          get_dynamicData: function() {
            return this._dynamicData$1;
          },
          set_dynamicData: function(t) {
            return this._dynamicData$1 = t, t;
          },
          get_autoUpdate: function() {
            return this._autoUpdate$1;
          },
          set_autoUpdate: function(t) {
            return this._autoUpdate$1 = t, t;
          },
          get_dataSourceUrl: function() {
            return this._dataSourceUrl$1;
          },
          set_dataSourceUrl: function(t) {
            return this._dataSourceUrl$1 = t, t;
          },
          get_timeSeries: function() {
            return this.timeSeries;
          },
          set_timeSeries: function(t) {
            return this.timeSeries !== t && (this.version++, this.timeSeries = t), t;
          },
          get_beginRange: function() {
            return this._beginRange$1;
          },
          set_beginRange: function(t) {
            return r.compareDates(this._beginRange$1, t) || (this.version++, this._beginRange$1 = t), t;
          },
          get_endRange: function() {
            return this._endRange$1;
          },
          set_endRange: function(t) {
            return r.compareDates(this._endRange$1, t) || (this.version++, this._endRange$1 = t), t;
          },
          initializeFromXml: function(t) {
            switch (this.set_timeSeries(r.boolean(t.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(t.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(t.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(t.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(we.parse("CoordinatesTypes", t.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(t.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(t.attributes.getNamedItem("LngColumn").nodeValue)), t.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(t.attributes.getNamedItem("GeometryColumn").nodeValue)), t.attributes.getNamedItem("AltType").nodeValue) {
              case "Depth":
                this.set_altType(0);
                break;
              case "Altitude":
                this.set_altType(1);
                break;
              case "Distance":
                this.set_altType(2);
                break;
              case "SeaLevel":
                this.set_altType(3);
                break;
              case "Terrain":
                this.set_altType(4);
                break;
            }
            switch (this.set_markerMix(0), t.attributes.getNamedItem("ColorMap").nodeValue) {
              case "Same_For_All":
                this.set__colorMap(0);
                break;
              case "Group_by_Values":
                this.set__colorMap(2);
                break;
              case "Per_Column_Literal":
                this.set__colorMap(3);
                break;
            }
            switch (this.set_markerColumn(parseInt(t.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), t.attributes.getNamedItem("PlotType").nodeValue) {
              case "Gaussian":
                this.set_plotType(0);
                break;
              case "Point":
                this.set_plotType(1);
                break;
              case "Circle":
                this.set_plotType(2);
                break;
              case "PushPin":
                this.set_plotType(4);
                break;
            }
            switch (this.set_markerIndex(parseInt(t.attributes.getNamedItem("MarkerIndex").nodeValue)), t.attributes.getNamedItem("MarkerScale").nodeValue) {
              case "Screen":
                this.set_markerScale(0);
                break;
              case "World":
                this.set_markerScale(1);
                break;
            }
            switch (t.attributes.getNamedItem("AltUnit").nodeValue) {
              case "Meters":
                this.set_altUnit(1);
                break;
              case "Feet":
                this.set_altUnit(2);
                break;
              case "Inches":
                this.set_altUnit(3);
                break;
              case "Miles":
                this.set_altUnit(4);
                break;
              case "Kilometers":
                this.set_altUnit(5);
                break;
              case "AstronomicalUnits":
                this.set_altUnit(6);
                break;
              case "LightYears":
                this.set_altUnit(7);
                break;
              case "Parsecs":
                this.set_altUnit(8);
                break;
              case "MegaParsecs":
                this.set_altUnit(9);
                break;
              case "Custom":
                this.set_altUnit(10);
                break;
            }
            switch (this.set_altColumn(parseInt(t.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(t.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(t.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(t.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(t.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(t.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(t.attributes.getNamedItem("ScaleFactor").nodeValue)), t.attributes.getNamedItem("PointScaleType").nodeValue) {
              case "Linear":
                this.set_pointScaleType(0);
                break;
              case "Power":
                this.set_pointScaleType(1);
                break;
              case "Log":
                this.set_pointScaleType(2);
                break;
              case "Constant":
                this.set_pointScaleType(3);
                break;
              case "StellarMagnitude":
                this.set_pointScaleType(4);
                break;
            }
            if (t.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(r.boolean(t.attributes.getNamedItem("ShowFarSide").nodeValue)), t.attributes.getNamedItem("RaUnits") != null)
              switch (t.attributes.getNamedItem("RaUnits").nodeValue) {
                case "Hours":
                  this.set_raUnits(0);
                  break;
                case "Degrees":
                  this.set_raUnits(1);
                  break;
              }
            if (t.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(t.attributes.getNamedItem("HoverTextColumn").nodeValue)), t.attributes.getNamedItem("XAxisColumn") != null) {
              switch (this.set_xAxisColumn(parseInt(t.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(r.boolean(t.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(t.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(r.boolean(t.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(t.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(r.boolean(t.attributes.getNamedItem("ZAxisReverse").nodeValue)), t.attributes.getNamedItem("CartesianScale").nodeValue) {
                case "Meters":
                  this.set_cartesianScale(1);
                  break;
                case "Feet":
                  this.set_cartesianScale(2);
                  break;
                case "Inches":
                  this.set_cartesianScale(3);
                  break;
                case "Miles":
                  this.set_cartesianScale(4);
                  break;
                case "Kilometers":
                  this.set_cartesianScale(5);
                  break;
                case "AstronomicalUnits":
                  this.set_cartesianScale(6);
                  break;
                case "LightYears":
                  this.set_cartesianScale(7);
                  break;
                case "Parsecs":
                  this.set_cartesianScale(8);
                  break;
                case "MegaParsecs":
                  this.set_cartesianScale(9);
                  break;
                case "Custom":
                  this.set_cartesianScale(10);
                  break;
              }
              this.set_cartesianCustomScale(parseFloat(t.attributes.getNamedItem("CartesianCustomScale").nodeValue));
            }
            t.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(r.boolean(t.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(r.boolean(t.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(t.attributes.getNamedItem("DataSourceUrl").nodeValue));
          },
          get_decay: function() {
            return this.decay;
          },
          set_decay: function(t) {
            return this.decay !== t && (this.version++, this.decay = t), t;
          },
          get_coordinatesType: function() {
            return this._coordinatesType$1;
          },
          set_coordinatesType: function(t) {
            return this._coordinatesType$1 !== t && (this.version++, this._coordinatesType$1 = t), t;
          },
          get_latColumn: function() {
            return this.latColumn;
          },
          set_latColumn: function(t) {
            return this.latColumn !== t && (this.version++, this.latColumn = t), t;
          },
          get_lngColumn: function() {
            return this.lngColumn;
          },
          set_lngColumn: function(t) {
            return this.lngColumn !== t && (this.version++, this.lngColumn = t), t;
          },
          get_geometryColumn: function() {
            return this.geometryColumn;
          },
          set_geometryColumn: function(t) {
            return this.geometryColumn !== t && (this.version++, this.geometryColumn = t), t;
          },
          get_xAxisColumn: function() {
            return this._xAxisColumn$1;
          },
          set_xAxisColumn: function(t) {
            return this._xAxisColumn$1 !== t && (this.version++, this._xAxisColumn$1 = t), t;
          },
          get_yAxisColumn: function() {
            return this._yAxisColumn$1;
          },
          set_yAxisColumn: function(t) {
            return this._yAxisColumn$1 !== t && (this.version++, this._yAxisColumn$1 = t), t;
          },
          get_zAxisColumn: function() {
            return this._zAxisColumn$1;
          },
          set_zAxisColumn: function(t) {
            return this._zAxisColumn$1 !== t && (this.version++, this._zAxisColumn$1 = t), t;
          },
          get_xAxisReverse: function() {
            return this._xAxisReverse$1;
          },
          set_xAxisReverse: function(t) {
            return this._xAxisReverse$1 !== t && (this.version++, this._xAxisReverse$1 = t), t;
          },
          get_yAxisReverse: function() {
            return this._yAxisReverse$1;
          },
          set_yAxisReverse: function(t) {
            return this._yAxisReverse$1 !== t && (this.version++, this._yAxisReverse$1 = t), t;
          },
          get_zAxisReverse: function() {
            return this._zAxisReverse$1;
          },
          set_zAxisReverse: function(t) {
            return this._zAxisReverse$1 !== t && (this.version++, this._zAxisReverse$1 = t), t;
          },
          get_altType: function() {
            return this._altType$1;
          },
          set_altType: function(t) {
            return this._altType$1 !== t && (this.version++, this._altType$1 = t), t;
          },
          get_markerMix: function() {
            return this._markerMix$1;
          },
          set_markerMix: function(t) {
            return this._markerMix$1 !== t && (this.version++, this._markerMix$1 = t), t;
          },
          get_raUnits: function() {
            return this._raUnits$1;
          },
          set_raUnits: function(t) {
            return this._raUnits$1 !== t && (this.version++, this._raUnits$1 = t), t;
          },
          get__colorMap: function() {
            return this._colorMap$1;
          },
          set__colorMap: function(t) {
            return this._colorMap$1 !== t && (this.version++, this._colorMap$1 = t), t;
          },
          get_markerColumn: function() {
            return this._markerColumn$1;
          },
          set_markerColumn: function(t) {
            return this._markerColumn$1 !== t && (this.version++, this._markerColumn$1 = t), t;
          },
          get_colorMapColumn: function() {
            return this._colorMapColumn$1;
          },
          set_colorMapColumn: function(t) {
            return this._colorMapColumn$1 !== t && (this.version++, this._colorMapColumn$1 = t), t;
          },
          get_plotType: function() {
            return this._plotType$1;
          },
          set_plotType: function(t) {
            return this._plotType$1 !== t && (this.version++, this._plotType$1 = t), t;
          },
          get_markerIndex: function() {
            return this._markerIndex$1;
          },
          set_markerIndex: function(t) {
            return this._markerIndex$1 !== t && (this.version++, this._markerIndex$1 = t), t;
          },
          get_showFarSide: function() {
            return this._showFarSide$1;
          },
          set_showFarSide: function(t) {
            return this._showFarSide$1 !== t && (this.version++, this._showFarSide$1 = t), t;
          },
          get_markerScale: function() {
            return this._markerScale$1;
          },
          set_markerScale: function(t) {
            return this._markerScale$1 !== t && (this.version++, this._markerScale$1 = t), t;
          },
          get_altUnit: function() {
            return this._altUnit$1;
          },
          set_altUnit: function(t) {
            return this._altUnit$1 !== t && (this.version++, this._altUnit$1 = t), t;
          },
          get_cartesianScale: function() {
            return this._cartesianScale$1;
          },
          set_cartesianScale: function(t) {
            return this._cartesianScale$1 !== t && (this.version++, this._cartesianScale$1 = t), t;
          },
          get_cartesianCustomScale: function() {
            return this._cartesianCustomScale$1;
          },
          set_cartesianCustomScale: function(t) {
            return this._cartesianCustomScale$1 !== t && (this.version++, this._cartesianCustomScale$1 = t), t;
          },
          get_altColumn: function() {
            return this.altColumn;
          },
          set_altColumn: function(t) {
            return this.altColumn !== t && (this.version++, this.altColumn = t), t;
          },
          get_startDateColumn: function() {
            return this.startDateColumn;
          },
          set_startDateColumn: function(t) {
            return this.startDateColumn !== t && (this.version++, this.startDateColumn = t), t;
          },
          get_endDateColumn: function() {
            return this.endDateColumn;
          },
          set_endDateColumn: function(t) {
            return this.endDateColumn !== t && (this.version++, this.endDateColumn = t), t;
          },
          get_sizeColumn: function() {
            return this.sizeColumn;
          },
          set_sizeColumn: function(t) {
            return this.sizeColumn !== t && (this.version++, this.sizeColumn = t), t;
          },
          get_nameColumn: function() {
            return this.nameColumn;
          },
          set_nameColumn: function(t) {
            return this.nameColumn !== t && (this.version++, this.nameColumn = t), t;
          },
          get_hyperlinkFormat: function() {
            return this._hyperlinkFormat$1;
          },
          set_hyperlinkFormat: function(t) {
            return this._hyperlinkFormat$1 !== t && (this.version++, this._hyperlinkFormat$1 = t), t;
          },
          get_hyperlinkColumn: function() {
            return this._hyperlinkColumn$1;
          },
          set_hyperlinkColumn: function(t) {
            return this._hyperlinkColumn$1 !== t && (this.version++, this._hyperlinkColumn$1 = t), t;
          },
          get_scaleFactor: function() {
            return this.scaleFactor;
          },
          set_scaleFactor: function(t) {
            return this.scaleFactor !== t && (this.version++, this.scaleFactor = t), t;
          },
          get_pointScaleType: function() {
            return this.pointScaleType;
          },
          set_pointScaleType: function(t) {
            return this.pointScaleType !== t && (this.version++, this.pointScaleType = t), t;
          },
          draw: function(t, e, n) {
            this.bufferIsFlat !== n && (this.cleanUp(), this.bufferIsFlat = n), this.dirty && (this.prepVertexBuffer(t, e), this.dirty = !1);
            var a = Q.get_jNow() - Q.utcToJulian(this.baseDate), s = this.scaleFactor;
            if (n && this.astronomical && this._markerScale$1 === 1 && (s = this.scaleFactor / (t.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = a, this.triangleList2d.draw(t, e * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = a, this.triangleList.draw(t, e * this.get_opacity(), 1)), this.pointList != null)
              switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = a, this.pointList.scale = this._markerScale$1 === 1 ? s : -s, this._plotType$1) {
                case 0:
                  this.pointList.draw(t, e * this.get_opacity(), !1);
                  break;
                case 2:
                  this.pointList.drawTextured(t, kr.get__circleTexture$1().texture2d, e * this.get_opacity());
                  break;
                case 1:
                  this.pointList.drawTextured(t, hr.getPushPinTexture(19), e * this.get_opacity());
                  break;
                case 3:
                  this.pointList.drawTextured(t, hr.getPushPinTexture(35), e * this.get_opacity());
                  break;
                case 5:
                case 4:
                  this.pointList.drawTextured(t, hr.getPushPinTexture(this._markerIndex$1), e * this.get_opacity());
                  break;
              }
            return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = a, this.lineList.drawLines(t, e * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = a, this.lineList2d.drawLines(t, e * this.get_opacity())), !0;
          },
          initFromXml: function(t) {
            ai.prototype.initFromXml.call(this, t);
          },
          cleanUp: function() {
            this.dirty = !0, this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
          },
          dynamicUpdate: function() {
            return !1;
          },
          addFilesToCabinet: function(t) {
            var e = this._filename$1, n = t.tempDirectory + r.format("{0}\\{1}.txt", t.get_packageID(), this.id.toString());
            e.substring(0, e.lastIndexOf("\\") + 1), n.substring(0, n.lastIndexOf("\\") + 1);
          },
          loadData: function(t, e) {
            var n = this, a = t.getFileBlob(e), s = new FileReader();
            s.onloadend = function(l) {
              var g = r.safeCast(s.result, String);
              n._table$1 = Jn.loadFromString(g), n.set_lngColumn(n._table$1.getRAColumn().index), n.set_latColumn(n._table$1.getDecColumn().index);
            }, s.readAsText(a);
          },
          canCopyToClipboard: function() {
            return !0;
          },
          copyToClipboard: function() {
          },
          findClosest: function(t, e, n, a) {
            var s = U.geoTo3dDouble(t.get_lat(), t.get_lng()), l;
            if (n != null) {
              var g = U.raDecTo3dAu(n.get_RA(), -n.get_dec(), -1);
              l = $.subtractVectors(s, g), e = l.length();
            }
            for (var _ = -1, m = 0, b = r.enumerate(this.positions); b.moveNext(); ) {
              var y = b.current;
              l = $.subtractVectors(s, y), l.length() < e && (e = l.length(), _ = m), m++;
            }
            if (_ === -1)
              return n;
            var M = U.cartesianToSpherical2(this.positions[_]), A = this._table$1.rows[_].columnData[this.nameColumn].toString();
            (this.nameColumn === this.startDateColumn || this.nameColumn === this.endDateColumn) && (A = Ui.parseDate(A).toString()), r.emptyString(A) && (A = r.format("RA={0}, Dec={1}", U.formatHMS(M.get_RA()), U.formatDMS(M.get_dec())));
            for (var R = fr.create(A, M.get_lat(), M.get_RA(), 268435456, "", 2, -1), F = {}, O = 0; O < r.keyCount(this._table$1.columns); O++) {
              var B = this._table$1.rows[_].get_item(O).toString();
              (O === this.startDateColumn || O === this.endDateColumn) && (B = Ui.parseDate(B).toString()), !r.keyExists(F, this._table$1.column[O].name) && !r.emptyString(this._table$1.column[O].name) ? F[this._table$1.column[O].name] = B : F["Column" + O.toString()] = B;
            }
            return R.set_tag(F), R;
          },
          prepVertexBuffer: function(t, e) {
            var n = this._table$1.getColumnByUcd("meta.id");
            n == null && (n = this._table$1.column[0]);
            var a = this.isSiapResultSet();
            this.pointList == null && (this.pointList = new Xr(t)), this.lineList2d == null && (this.lineList2d = new fa()), this.lineList2d.clear();
            var s = this._table$1.getColumnByUcd("phys.area;obs.field");
            s == null && r.keyExists(this._table$1.columns, "regionSTCS") && (s = this._table$1.columns.regionSTCS), this.get_plotType() ? this.set_markerScale(0) : this.set_markerScale(1);
            var l = [], g = new Ea();
            this.positions.length = 0;
            var _ = 0, m = j.fromArgb(r.truncate(e * this.get_color().a), this.get_color().r, this.get_color().g, this.get_color().b);
            this.pointScaleType = 4;
            for (var b = r.enumerate(this._table$1.rows); b.moveNext(); ) {
              var y = b.current;
              try {
                if (this.lngColumn > -1 && this.latColumn > -1) {
                  var M = parseFloat(y.get_item(this.get_lngColumn()).toString()), A = parseFloat(y.get_item(this.get_latColumn()).toString()), R = U.geoTo3dDouble(A, M);
                  if (g.position = R, this.positions.push(g.position), g.set_color(m), this.sizeColumn > -1)
                    try {
                      if (!this.get_markerScale())
                        g.pointSize = 20;
                      else
                        switch (this.pointScaleType) {
                          case 0:
                            g.pointSize = parseFloat(y.get_item(this.sizeColumn).toString());
                            break;
                          case 2:
                            g.pointSize = Math.log(parseFloat(y.get_item(this.sizeColumn).toString()));
                            break;
                          case 1:
                            g.pointSize = Math.pow(2, parseFloat(y.get_item(this.sizeColumn).toString()));
                            break;
                          case 4:
                            var F = parseFloat(y.get_item(this.sizeColumn).toString());
                            g.pointSize = 40 / Math.pow(1.6, F) * 10;
                            break;
                          case 3:
                            g.pointSize = 1;
                            break;
                          default:
                            break;
                        }
                    } catch {
                      g.pointSize = 0.01;
                    }
                  else
                    this.get_markerScale() ? g.pointSize = Math.pow(2, 1) * 100 : g.pointSize = 20;
                  if (this.startDateColumn > -1) {
                    var O = r.date(y.get_item(this.startDateColumn).toString());
                    g.tu = Q.utcToJulian(O), g.tv = 0;
                  }
                  l.push(g), this.pointList.addPoint(g.position, g.color, new ni(g.tu, g.tv), g.pointSize), _++;
                }
                a && s != null && this._addSiapStcRow$1(s.name, y, y === this._table$1.selectedRow);
              } catch {
              }
              this.lines = !1;
            }
            return a && s != null && this._addSiapStcRow$1(s.name, this._table$1.selectedRow, !0), !0;
          },
          _addSiapStcRow$1: function(t, e, n) {
            var a = r.replaceString(e.getColumnData(t).toString(), "  ", " "), s = j.fromArgb(120, 255, 255, 255);
            if (n && (s = Pt.get_yellow()), r.startsWith(a, "Polygon J2000")) {
              for (var l = a.split(" "), g = l.length, _ = 0; _ < g; )
                if (l[_] === "Polygon") {
                  _ += 2;
                  for (var m = new $(), b = new $(), y = !0, M = _; M < g; M += 2) {
                    if (l[M] === "Polygon") {
                      y = !0;
                      break;
                    } else {
                      var A = U.parseRA(l[M], !0) * 15 + 180, R = U.parseDec(l[M + 1]), F = U.geoTo3dDouble(R, A);
                      y ? (b = F, y = !1) : this.lineList2d.addLine(m, F, s, new ni(0, 0)), m = F;
                    }
                    _ += 2;
                  }
                  g > 4 && this.lineList2d.addLine(b, m, s, new ni(0, 0));
                }
            }
          },
          isSiapResultSet: function() {
            return this._table$1.getColumnByUcd("vox:image.title") != null && this._table$1.getColumnByUcd("VOX:Image.AccessReference") != null;
          },
          get_header: function() {
            for (var t = new Array(r.keyCount(this._table$1.columns)), e = 0, n = r.enumerate(this._table$1.column); n.moveNext(); ) {
              var a = n.current;
              t[e++] = a.name;
            }
            return t;
          },
          get_table: function() {
            return this._table$1;
          },
          set_table: function(t) {
            return this._table$1 = t, t;
          }
        };
        function We() {
          this._tileDegrees$1 = 0, this._latMin$1 = 0, this._latMax$1 = 0, this._lngMin$1 = 0, this._lngMax$1 = 0, this._subDivisionLevel$1 = 32, G.call(this);
        }
        We.create = function(t, e, n, a, s) {
          var l = new We();
          return l.parent = s, l.level = t, l.tileX = e, l.tileY = n, l.dataset = a, l.computeBoundingSphere(), l;
        }, We.getCentrePointOffsetAsTileRatio = function(t, e, n) {
          var a = We.absoluteLonToMetersAtZoom(e, n), s = a / 256 - Math.floor(a / 256), l = We.absoluteLatToMetersAtZoom(t, n), g = l / 256 - Math.floor(l / 256);
          return Mt.create(s, g);
        }, We.relativeMetersToLatAtZoom = function(t, e) {
          var n = We.metersPerPixel2(e), a = t * n;
          return We._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - a / 6378137)));
        }, We.relativeMetersToLonAtZoom = function(t, e) {
          var n = We.metersPerPixel2(e), a = t * n;
          return We._radToDeg$1(a / 6378137);
        }, We.absoluteLatToMetersAtZoom = function(t, e) {
          var n = Math.sin(We._degToRad$1(t)), a = 6378137 / 2 * Math.log((1 + n) / (1 - n)), s = We.metersPerPixel2(e);
          return r.truncate(Math.round(20037508 - a) / s);
        }, We.absoluteMetersToLatAtZoom = function(t, e) {
          var n = We.metersPerPixel2(e), a = 20037508 - t * n;
          return We._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - a / 6378137)));
        }, We.absoluteLonToMetersAtZoom = function(t, e) {
          var n = 6378137 * We._degToRad$1(t), a = We.metersPerPixel2(e);
          return r.truncate((n + 20037508) / a);
        }, We.absoluteMetersToLonAtZoom = function(t, e) {
          var n = We.metersPerPixel2(e), a = t * n - 20037508;
          return We._radToDeg$1(a / 6378137);
        }, We.absoluteLonToMetersAtZoomTile = function(t, e, n) {
          var a = 6378137 * We._degToRad$1(t), s = We.metersPerPixel2(e);
          return r.truncate((a + 20037508) / s);
        }, We.absoluteLatToMetersAtZoomTile = function(t, e, n) {
          var a = Math.sin(We._degToRad$1(t)), s = 6378137 / 2 * Math.log((1 + a) / (1 - a)), l = We.metersPerPixel2(e);
          return r.truncate(Math.round(20037508 - s) / l);
        }, We.absoluteMetersToLonAtZoomByTileY = function(t, e, n) {
          var a = We.metersPerPixel2(e), s = t * a - 20037508;
          return We._radToDeg$1(s / 6378137);
        }, We._degToRad$1 = function(t) {
          return t * Math.PI / 180;
        }, We.metersPerPixel2 = function(t) {
          return 156543 / (1 << t);
        }, We._radToDeg$1 = function(t) {
          return t * 180 / Math.PI;
        };
        var Pf = {
          computeBoundingSphere: function() {
            this._tileDegrees$1 = 360 / Math.pow(2, this.level), this._latMin$1 = We.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = We.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * this._tileDegrees$1 - 180, this._lngMax$1 = (this.tileX + 1) * this._tileDegrees$1 - 180;
            var t = (this._latMin$1 + this._latMax$1) / 2, e = (this._lngMin$1 + this._lngMax$1) / 2;
            this.sphereCenter = this.geoTo3d(t, e, !1), this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1), this.tileY || (this.topLeft = $.create(0, 1, 0), this.topRight = $.create(0, 1, 0)), this.tileY === Math.pow(2, this.level) - 1 && (this.bottomRight = $.create(0, -1, 0), this.bottomLeft = $.create(0, -1, 0));
            var n = this.topLeft;
            n.subtract(this.sphereCenter), this.sphereRadius = n.length(), n = this.bottomRight, n.subtract(this.sphereCenter);
            var a = n.length();
            this.sphereRadius < a && (this.sphereRadius = a), this._tileDegrees$1 = Math.abs(this._latMax$1 - this._latMin$1);
          },
          isPointInTile: function(t, e) {
            return !(!this.demReady || this.demData == null || t < Math.min(this._latMin$1, this._latMax$1) || t > Math.max(this._latMax$1, this._latMin$1) || e < Math.min(this._lngMin$1, this._lngMax$1) || e > Math.max(this._lngMin$1, this._lngMax$1));
          },
          getSurfacePointAltitude: function(t, e, n) {
            if (this.level < G.lastDeepestLevel)
              for (var a = r.enumerate(this.children); a.moveNext(); ) {
                var s = a.current;
                if (s != null && s.isPointInTile(t, e)) {
                  var l = s.getSurfacePointAltitude(t, e, n);
                  if (l)
                    return l;
                  break;
                }
              }
            var g = this._getAltitudeAtLatLng$1(t, e, n ? 1 : this.get__demScaleFactor());
            return g;
          },
          _getAltitudeAtLatLng$1: function(t, e, n) {
            var a = Math.abs(this._latMax$1 - this._latMin$1), s = Math.abs(this._lngMax$1 - this._lngMin$1), l = (t - Math.min(this._latMax$1, this._latMin$1)) / a * 32, g = (e - Math.min(this._lngMax$1, this._lngMin$1)) / s * 32, _ = Math.min(31, r.truncate(l)), m = Math.min(31, r.truncate(g)), b = g - m, y = l - _, M = this.demData[_ * 33 + m], A = this.demData[_ * 33 + (m + 1)], R = this.demData[(_ + 1) * 33 + m], F = this.demData[(_ + 1) * 33 + (m + 1)], O = M * (1 - b) + b * A, B = R * (1 - b) + b * F, H = O * (1 - y) + y * B;
            return H / n;
          },
          createGeometry: function(t) {
            if (G.prototype.createGeometry.call(this, t), this.geometryCreated)
              return !0;
            this.geometryCreated = !0, G.uvMultiple === 256 && (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (6 - this.level) * 2));
            for (var e = 0; e < 4; e++)
              this._renderTriangleLists[e] = [];
            var n, a, s = 0, l = 360 / Math.pow(2, this.level);
            this._latMin$1 = We.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = We.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * l - 180, this._lngMax$1 = (this.tileX + 1) * l - 180;
            var g = We.absoluteMetersToLatAtZoom((this.tileY * 2 + 1) * 256, this.level + 1);
            this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1);
            var _ = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
            l = this._lngMax$1 - this._lngMin$1, l / this._subDivisionLevel$1;
            var m, b, y = 1 / this._subDivisionLevel$1, M = this._latMax$1 - g;
            for (b = 0; b < this._subDivisionLevel$1 / 2; b++)
              for (b !== this._subDivisionLevel$1 / 2 ? n = this._latMax$1 - 2 * y * M * b : n = g, m = 0; m <= this._subDivisionLevel$1; m++)
                m !== this._subDivisionLevel$1 ? a = this._lngMin$1 + y * l * m : a = this._lngMax$1, s = b * (this._subDivisionLevel$1 + 1) + m, _[s] = new Ht(), _[s].position = this.geoTo3dWithAlt(n, a, !1, !0), _[s].tu = m * y * G.uvMultiple, _[s].tv = (We.absoluteLatToMetersAtZoom(n, this.level) - this.tileY * 256) / 256 * G.uvMultiple, this.demIndex++;
            for (M = this._latMin$1 - g, b = this._subDivisionLevel$1 / 2; b <= this._subDivisionLevel$1; b++)
              for (b !== this._subDivisionLevel$1 ? n = g + 2 * y * M * (b - this._subDivisionLevel$1 / 2) : n = this._latMin$1, m = 0; m <= this._subDivisionLevel$1; m++)
                m !== this._subDivisionLevel$1 ? a = this._lngMin$1 + y * l * m : a = this._lngMax$1, s = b * (this._subDivisionLevel$1 + 1) + m, _[s] = new Ht(), _[s].position = this.geoTo3dWithAlt(n, a, !1, !0), _[s].tu = m * y * G.uvMultiple, _[s].tv = (We.absoluteLatToMetersAtZoom(n, this.level) - this.tileY * 256) / 256 * G.uvMultiple, this.demIndex++;
            if (!this.tileY)
              for (b = this._subDivisionLevel$1, m = 0; m <= this._subDivisionLevel$1; m++)
                s = b * (this._subDivisionLevel$1 + 1) + m, _[s].position = $.create(0, 1, 0);
            if (this.tileY === Math.pow(2, this.level) - 1)
              for (b = 0, m = 0; m <= this._subDivisionLevel$1; m++)
                s = b * (this._subDivisionLevel$1 + 1) + m, _[s].position = $.create(0, -1, 0);
            this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
            var A = this._subDivisionLevel$1 / 2, R = 0;
            if (t.gl == null)
              for (var F = 0; F < 2; F++)
                for (var O = 0; O < 2; O++) {
                  for (s = 0, b = A * F; b < A * (F + 1); b++)
                    for (m = A * O; m < A * (O + 1); m++) {
                      var B, H, K;
                      B = _[b * (this._subDivisionLevel$1 + 1) + m], H = _[(b + 1) * (this._subDivisionLevel$1 + 1) + m], K = _[b * (this._subDivisionLevel$1 + 1) + (m + 1)];
                      var J = Me.create(B, H, K, this.texture, this.level);
                      this._renderTriangleLists[R].push(J), B = _[b * (this._subDivisionLevel$1 + 1) + (m + 1)], H = _[(b + 1) * (this._subDivisionLevel$1 + 1) + m], K = _[(b + 1) * (this._subDivisionLevel$1 + 1) + (m + 1)], J = Me.create(B, H, K, this.texture, this.level), this._renderTriangleLists[R].push(J);
                    }
                  R++;
                }
            else {
              this._vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this._vertexBuffer);
              var it = new Float32Array(_.length * 5), ot = it;
              s = 0;
              for (var lt = r.enumerate(_); lt.moveNext(); ) {
                var gt = lt.current;
                s = this.addVertex(ot, s, gt);
              }
              G.prepDevice.bufferData(34962, it, 35044);
              for (var F = 0; F < 2; F++)
                for (var O = 0; O < 2; O++) {
                  var ut = new Uint16Array(this.triangleCount * 3), St = ut;
                  for (s = 0, b = A * F; b < A * (F + 1); b++)
                    for (m = A * O; m < A * (O + 1); m++)
                      St[s++] = b * (this._subDivisionLevel$1 + 1) + m, St[s++] = (b + 1) * (this._subDivisionLevel$1 + 1) + m, St[s++] = b * (this._subDivisionLevel$1 + 1) + (m + 1), St[s++] = b * (this._subDivisionLevel$1 + 1) + (m + 1), St[s++] = (b + 1) * (this._subDivisionLevel$1 + 1) + m, St[s++] = (b + 1) * (this._subDivisionLevel$1 + 1) + (m + 1);
                  this._indexBuffers[R] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this._indexBuffers[R]), G.prepDevice.bufferData(34963, ut, 35044), R++;
                }
            }
            return !0;
          },
          _getDemSample$1: function(t, e) {
            return this.demData[(32 - e) * 33 + t];
          },
          createDemFromParent: function() {
            var t = r.safeCast(this.parent, We);
            if (t == null || t.demData == null)
              return !1;
            var e = this.tileX % 2 === 1 ? 16 : 0, n = this.tileY % 2 === 1 ? 16 : 0;
            this.demData = new Array(this.demSize);
            for (var a = 0; a < 33; a += 2)
              for (var s = !0, l = 0; l < 33; l++)
                s ? this.demData[(32 - a) * 33 + l] = t._getDemSample$1(l / 2 + e, a / 2 + n) : this.demData[(32 - a) * 33 + l] = (t._getDemSample$1(l / 2 + e, a / 2 + n) + t._getDemSample$1(l / 2 + e + 1, a / 2 + n)) / 2, s = !s;
            for (var a = 1; a < 33; a += 2)
              for (var l = 0; l < 33; l++)
                this.demData[(32 - a) * 33 + l] = (this._getDemSample$1(l, a - 1) + this._getDemSample$1(l, a + 1)) / 2;
            for (var g = r.enumerate(this.demData); g.moveNext(); ) {
              var _ = g.current;
              this.demAverage += _;
            }
            return this.demAverage /= this.demData.length, this.demReady = !0, !0;
          }
        };
        function fs() {
          this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._stars$1 = [], this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, G.call(this);
        }
        fs.create = function(t, e, n, a, s) {
          var l = new fs();
          return l.parent = s, l.level = t, l.tileX = e, l.tileY = n, l.dataset = a, l._topDown$1 = !a.get_bottomsUp(), l.tileX !== e && alert("bad"), a.get_meanRadius() ? l.set__demScaleFactor(a.get_meanRadius()) : a.get_dataSetType() ? l.set__demScaleFactor(3396010) : l.set__demScaleFactor(6371e3), l.computeBoundingSphere(), l;
        };
        var Ef = {
          computeBoundingSphere: function() {
            this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
          },
          renderPart: function(t, e, n, a) {
            if (t.gl == null) {
              if (!e)
                for (var s = r.enumerate(this._stars$1); s.moveNext(); ) {
                  var l = s.current, g = 25 / Math.pow(1.6, l.magnitude);
                  D.drawPointPlanet(t, l.position, g, l.col, !1);
                }
            }
          },
          requestImage: function() {
            !this.downloading && !this.readyToRender && (this.downloading = !0, this._webFile$1 = new _r(ze.singleton.rewrite(this.get_URL(), 0)), this._webFile$1.onStateChange = r.bind("fileStateChange", this), this._webFile$1.send());
          },
          fileStateChange: function() {
            this._webFile$1.get_state() === 2 ? (this.downloading = !1, this.readyToRender = !1, this.errored = !0, this.requestPending = !1, Ut.removeFromQueue(this.get_key(), !0)) : this._webFile$1.get_state() === 1 && (this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = this.texReady && (this.demReady || !this.demTile), this.requestPending = !1, Ut.removeFromQueue(this.get_key(), !0), this._loadData$1(this._webFile$1.getText()));
          },
          _loadData$1: function(t) {
            for (var e = r.replaceString(t, `\r
`, `
`).split(`
`), n = !0, a = null, s = r.enumerate(e); s.moveNext(); ) {
              var l = s.current;
              if (n) {
                n = !1;
                continue;
              }
              r.trim(l).length > 5 && (a = new Os(l), a.position = U.raDecTo3dAu(a.RA, a.dec, 1), this._stars$1.push(a));
            }
          },
          isPointInTile: function(t, e) {
            if (!this.level)
              return !0;
            if (this.level === 1)
              return e >= 0 && e <= 90 && !this.tileX && this.tileY === 1 || e > 90 && e <= 180 && this.tileX === 1 && this.tileY === 1 || e < 0 && e >= -90 && !this.tileX && !this.tileY || e < -90 && e >= -180 && this.tileX === 1 && !this.tileY;
            if (!this.demReady || this.demData == null)
              return !1;
            var n = U.geoTo3dDouble(-t, e), a = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), n), s = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), n), l = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), n), g = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), n);
            return !!(a && s && l && g);
          },
          _isLeftOfHalfSpace$1: function(t, e, n) {
            t.normalize(), e.normalize();
            var a = $.cross(t, e), s = $.dot(a, n);
            return s < 0;
          },
          _initializeGrids$1: function() {
            if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
              this.parent == null && (this.parent = Ut.getTile(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
              var t = this.parent, e = this.tileX % 2, n = this.tileY % 2;
              this.level > 1 ? this.backslash = t.backslash : this.backslash = (e === 1 ^ n === 1) === 1, this.bounds[0 + 3 * 0] = t.bounds[e + 3 * n].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(t.bounds[e + 3 * n], t.bounds[e + 1 + 3 * n]), this.bounds[2 + 3 * 0] = t.bounds[e + 1 + 3 * n].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * n], t.bounds[e + 3 * (n + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * n], t.bounds[e + 1 + 3 * (n + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * n], t.bounds[e + 3 * (n + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * n], t.bounds[e + 1 + 3 * (n + 1)]), this.bounds[0 + 3 * 2] = t.bounds[e + 3 * (n + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(t.bounds[e + 3 * (n + 1)], t.bounds[e + 1 + 3 * (n + 1)]), this.bounds[2 + 3 * 2] = t.bounds[e + 1 + 3 * (n + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * G.uvMultiple, this.bounds[0 + 3 * 0].tv = 0 * G.uvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 0].tv = 0 * G.uvMultiple, this.bounds[2 + 3 * 0].tu = 1 * G.uvMultiple, this.bounds[2 + 3 * 0].tv = 0 * G.uvMultiple, this.bounds[0 + 3 * 1].tu = 0 * G.uvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * G.uvMultiple, this.bounds[2 + 3 * 1].tu = 1 * G.uvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * G.uvMultiple, this.bounds[0 + 3 * 2].tu = 0 * G.uvMultiple, this.bounds[0 + 3 * 2].tv = 1 * G.uvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 2].tv = 1 * G.uvMultiple, this.bounds[2 + 3 * 2].tu = 1 * G.uvMultiple, this.bounds[2 + 3 * 2].tv = 1 * G.uvMultiple;
            } else
              this.bounds[0 + 3 * 0] = Ht.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = Ht.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = Ht.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = Ht.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = Ht.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = Ht.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = Ht.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = Ht.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = Ht.create(0, -1, 0, 1, 1);
          },
          _midpoint$1: function(t, e) {
            var n = $.lerp(t.position, e.position, 0.5), a = Mt.lerp(Mt.create(t.tu, t.tv), Mt.create(e.tu, e.tv), 0.5);
            return n.normalize(), Ht.createPos(n, a.x, a.y);
          },
          createGeometry: function(t) {
            return this.geometryCreated || (this.geometryCreated = !0, G.prototype.createGeometry.call(this, t)), !0;
          },
          cleanUp: function(t) {
            G.prototype.cleanUp.call(this, t), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
          }
        };
        function _s(t, e, n, a, s) {
          this._topDown$1 = !0, G.call(this), this.parent = s, this.level = t, this.tileX = e, this.tileY = n, this.dataset = a, this._topDown$1 = !a.get_bottomsUp(), this.computeBoundingSphere();
        }
        var Rf = {
          computeBoundingSphere: function() {
            if (!this._topDown$1) {
              this.computeBoundingSphereBottomsUp();
              return;
            }
            var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = this.dataset.get_baseTileDegrees() / 2 - this.tileY * t + this.dataset.get_offsetY(), n = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * t + this.dataset.get_offsetY(), a = this.tileX * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), s = (this.tileX + 1) * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), l = (e + n) / 2, g = (a + s) / 2;
            this.sphereCenter = this.geoTo3dTan(l, g), this.topLeft = this.geoTo3dTan(e, a), this.bottomRight = this.geoTo3dTan(n, s), this.topRight = this.geoTo3dTan(e, s), this.bottomLeft = this.geoTo3dTan(n, a);
            var _ = this.geoTo3dTan(e, a);
            _.subtract(this.sphereCenter), this.sphereRadius = _.length();
          },
          computeBoundingSphereBottomsUp: function() {
            var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = this.dataset.get_baseTileDegrees() / 2 + (this.tileY + 1) * t + this.dataset.get_offsetY(), n = this.dataset.get_baseTileDegrees() / 2 + this.tileY * t + this.dataset.get_offsetY(), a = this.tileX * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), s = (this.tileX + 1) * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX();
            this.topLeft = this.geoTo3dTan(e, a), this.bottomRight = this.geoTo3dTan(n, s), this.topRight = this.geoTo3dTan(e, s), this.bottomLeft = this.geoTo3dTan(n, a);
          },
          getLatLngEdges: function() {
            var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = new Vs();
            return e.latMin = this.dataset.get_baseTileDegrees() / 2 - this.tileY * t + this.dataset.get_offsetY(), e.latMax = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * t + this.dataset.get_offsetY(), e.lngMin = this.tileX * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), e.lngMax = (this.tileX + 1) * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), e;
          },
          geoTo3dTan: function(t, e) {
            e = -e;
            var n = this.dataset.get_baseTileDegrees() / 2, a = Math.tan(n * G.RC);
            return this.dataset.get_matrix().transform($.create(1, t / n * a, e / n * a));
          },
          requestImage: function() {
            this.fitsImage = r.safeCast(this.dataset.get_wcsImage(), ar), this.fitsImage != null ? (this.texReady = !0, this.downloading = !1, this.errored = this.fitsImage.errored, this.requestPending = !1, Ut.removeFromQueue(this.get_key(), !0), ti.useGlVersion2 ? (this.makeTexture(), this.readyToRender = !0) : (this.bmp = this.fitsImage.getBitmap(), this.texture2d = this.bmp.getTexture(), this.readyToRender = !0)) : G.prototype.requestImage.call(this);
          },
          createGeometry: function(t) {
            if (this.geometryCreated)
              return !0;
            this.geometryCreated = !0;
            for (var e = 0; e < 4; e++)
              this._renderTriangleLists[e] = [];
            this.globalCenter = this.geoTo3dTan(0, 0);
            var n = this.getLatLngEdges();
            this.topLeft = this.geoTo3dTan(n.latMin, n.lngMin).subtract(this.globalCenter), this.bottomRight = this.geoTo3dTan(n.latMax, n.lngMax).subtract(this.globalCenter), this.topRight = this.geoTo3dTan(n.latMin, n.lngMax).subtract(this.globalCenter), this.bottomLeft = this.geoTo3dTan(n.latMax, n.lngMin).subtract(this.globalCenter);
            var a = $.midPoint(this.topLeft, this.bottomRight), s = $.midPoint(this.topLeft, this.bottomLeft), l = $.midPoint(this.topRight, this.bottomRight), g = $.midPoint(this.topLeft, this.topRight), _ = $.midPoint(this.bottomLeft, this.bottomRight);
            if (t.gl == null)
              this._renderTriangleLists[0].push(Me.create(Ht.createPos(this.topLeft, 0, 0), Ht.createPos(s, 0, 0.5), Ht.createPos(g, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[0].push(Me.create(Ht.createPos(s, 0, 0.5), Ht.createPos(a, 0.5, 0.5), Ht.createPos(g, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[1].push(Me.create(Ht.createPos(g, 0.5, 0), Ht.createPos(l, 1, 0.5), Ht.createPos(this.topRight, 1, 0), this.texture, this.level)), this._renderTriangleLists[1].push(Me.create(Ht.createPos(g, 0.5, 0), Ht.createPos(a, 0.5, 0.5), Ht.createPos(l, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(Me.create(Ht.createPos(s, 0, 0.5), Ht.createPos(_, 0.5, 1), Ht.createPos(a, 0.5, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(Me.create(Ht.createPos(s, 0, 0.5), Ht.createPos(this.bottomLeft, 0, 1), Ht.createPos(_, 0.5, 1), this.texture, this.level)), this._renderTriangleLists[3].push(Me.create(Ht.createPos(a, 0.5, 0.5), Ht.createPos(this.bottomRight, 1, 1), Ht.createPos(l, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[3].push(Me.create(Ht.createPos(a, 0.5, 0.5), Ht.createPos(_, 0.5, 1), Ht.createPos(this.bottomRight, 1, 1), this.texture, this.level)), this.readyToRender = !0;
            else {
              this._vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this._vertexBuffer);
              var m = new Float32Array(9 * 5), b = m, y = 0;
              y = this.addVertex(b, y, Ht.createPos(_, 0.5, 1)), y = this.addVertex(b, y, Ht.createPos(this.bottomLeft, 0, 1)), y = this.addVertex(b, y, Ht.createPos(this.bottomRight, 1, 1)), y = this.addVertex(b, y, Ht.createPos(a, 0.5, 0.5)), y = this.addVertex(b, y, Ht.createPos(s, 0, 0.5)), y = this.addVertex(b, y, Ht.createPos(l, 1, 0.5)), y = this.addVertex(b, y, Ht.createPos(g, 0.5, 0)), y = this.addVertex(b, y, Ht.createPos(this.topLeft, 0, 0)), y = this.addVertex(b, y, Ht.createPos(this.topRight, 1, 0)), G.prepDevice.bufferData(34962, m, 35044);
              for (var e = 0; e < 4; e++) {
                y = 0, this.triangleCount = 2;
                var M = new Uint16Array(this.triangleCount * 3), A = M;
                switch (e) {
                  case 0:
                    A[y++] = 7, A[y++] = 4, A[y++] = 6, A[y++] = 4, A[y++] = 3, A[y++] = 6;
                    break;
                  case 1:
                    A[y++] = 6, A[y++] = 5, A[y++] = 8, A[y++] = 6, A[y++] = 3, A[y++] = 5;
                    break;
                  case 2:
                    A[y++] = 4, A[y++] = 0, A[y++] = 3, A[y++] = 4, A[y++] = 1, A[y++] = 0;
                    break;
                  case 3:
                    A[y++] = 3, A[y++] = 2, A[y++] = 5, A[y++] = 3, A[y++] = 0, A[y++] = 2;
                    break;
                }
                this._indexBuffers[e] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, this._indexBuffers[e]), G.prepDevice.bufferData(34963, M, 35044);
              }
            }
            return !0;
          }
        };
        function Pi() {
          this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, G.call(this);
        }
        Pi._cloneArray$1 = function(t) {
          for (var e = t.length, n = new Uint16Array(e), a = n, s = 0; s < e; s++)
            a[s] = t[s];
          return a;
        }, Pi.create = function(t, e, n, a, s) {
          var l = new Pi();
          return l.parent = s, l.level = t, l.tileX = e, l.tileY = n, l.dataset = a, l._topDown$1 = !a.get_bottomsUp(), l.tileX !== e && alert("bad"), a.get_meanRadius() ? l.set__demScaleFactor(a.get_meanRadius()) : a.get_dataSetType() ? l.set__demScaleFactor(3396010) : l.set__demScaleFactor(6371e3), l.computeBoundingSphere(), l;
        };
        var $f = {
          computeBoundingSphere: function() {
            this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
          },
          getIndexBuffer: function(t, e) {
            return this.level ? this.backslash ? Pi.backSlashIndexBuffer[t * 16 + e] : Pi.slashIndexBuffer[t * 16 + e] : Pi.rootIndexBuffer[t];
          },
          _processIndexBuffer$1: function(t, e) {
            if (!this.level) {
              Pi.rootIndexBuffer[e] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, Pi.rootIndexBuffer[e]), G.prepDevice.bufferData(34963, t, 35044);
              return;
            }
            for (var n = 0; n < 16; n++) {
              var a = Pi._cloneArray$1(t);
              this._processAccomindations$1(a, n), this.backslash ? (Pi.backSlashIndexBuffer[e * 16 + n] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, Pi.backSlashIndexBuffer[e * 16 + n]), G.prepDevice.bufferData(34963, a, 35044)) : (Pi.slashIndexBuffer[e * 16 + n] = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34963, Pi.slashIndexBuffer[e * 16 + n]), G.prepDevice.bufferData(34963, a, 35044));
            }
          },
          _processAccomindations$1: function(t, e) {
            for (var n = {}, a = {}, s = r.enumerate(t); s.moveNext(); ) {
              var l = s.current, g = this._vertexList$1[l], _ = r.truncate(g.tu * 16 + 0.5), m = r.truncate(g.tv * 16 + 0.5), b = (m << 8) + _;
              r.keyExists(a, b) || (a[b] = l);
            }
            var y = 16;
            if ((e & 1) === 1)
              for (var M = 1; M < y; M += 2) {
                var A = y, R = (A << 8) + M, F = (A << 8) + M + 1;
                r.keyExists(a, R) && (n[a[R]] = a[F]);
              }
            if ((e & 2) === 2)
              for (var A = 1; A < y; A += 2) {
                var M = y, R = (A << 8) + M, F = (A + 1 << 8) + M;
                r.keyExists(a, R) && (n[a[R]] = a[F]);
              }
            if ((e & 4) === 4)
              for (var M = 1; M < y; M += 2) {
                var A = 0, R = (A << 8) + M, F = (A << 8) + M + 1;
                r.keyExists(a, R) && (n[a[R]] = a[F]);
              }
            if ((e & 8) === 8)
              for (var A = 1; A < y; A += 2) {
                var M = 0, R = (A << 8) + M, F = (A + 1 << 8) + M;
                r.keyExists(a, R) && (n[a[R]] = a[F]);
              }
            if (r.keyCount(n))
              for (var O = 0; O < t.length; O++)
                r.keyExists(n, t[O]) && (t[O] = n[t[O]]);
          },
          calculateFullSphere: function(t) {
            var e = kn.findEnclosingSphere(t);
            this.sphereCenter = e.center, this.sphereRadius = e.radius;
          },
          isPointInTile: function(t, e) {
            if (!this.level)
              return !0;
            if (this.level === 1)
              return e >= 0 && e <= 90 && !this.tileX && this.tileY === 1 || e > 90 && e <= 180 && this.tileX === 1 && this.tileY === 1 || e < 0 && e >= -90 && !this.tileX && !this.tileY || e < -90 && e >= -180 && this.tileX === 1 && !this.tileY;
            if (!this.demReady || this.demData == null)
              return !1;
            var n = U.geoTo3dDouble(-t, e), a = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), n), s = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), n), l = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), n), g = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), n);
            return !!(a && s && l && g);
          },
          _isLeftOfHalfSpace$1: function(t, e, n) {
            t.normalize(), e.normalize();
            var a = $.cross(t, e), s = $.dot(a, n);
            return s < 0;
          },
          getSurfacePointAltitude: function(t, e, n) {
            if (this.level < G.lastDeepestLevel)
              for (var a = 0; a < 4; a++) {
                var s = this.children[a];
                if (s != null && s.isPointInTile(t, e)) {
                  var l = s.getSurfacePointAltitude(t, e, n);
                  if (l)
                    return l;
                  break;
                }
              }
            G.tileTargetLevel = this.level, G.tileTargetX = this.tileX, G.tileTargetY = this.tileY;
            var g = U.geoTo3dDouble(-t, e);
            g = $.subtractVectors(new $(), g);
            var _ = wn.getUVFromInnerPoint(this.topLeft.copy(), this.topRight.copy(), this.bottomLeft.copy(), this.bottomRight.copy(), g.copy()), m = Math.max(0, Math.min(16, _.x * 16)), b = Math.max(0, Math.min(16, _.y * 16)), y = Math.max(0, Math.min(15, r.truncate(_.x * 16))), M = Math.max(0, Math.min(15, r.truncate(_.y * 16))), A = m - y, R = b - M;
            if (this.demArray != null) {
              var F = this.demArray[y + 17 * M], O = this.demArray[y + 1 + 17 * M], B = this.demArray[y + 17 * (M + 1)], H = this.demArray[y + 1 + 17 * (M + 1)], K = F * (1 - A) + A * O, J = B * (1 - A) + A * H, it = K * (1 - R) + R * J;
              return it / this.get__demScaleFactor();
            }
            return this.demAverage / this.get__demScaleFactor();
          },
          _initializeGrids$1: function() {
            if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
              this.parent == null && (this.parent = Ut.getTile(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
              var t = this.parent, e = this.tileX % 2, n = this.tileY % 2;
              this.level > 1 ? this.backslash = t.backslash : this.backslash = (e === 1 ^ n === 1) === 1, this.bounds[0 + 3 * 0] = t.bounds[e + 3 * n].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(t.bounds[e + 3 * n], t.bounds[e + 1 + 3 * n]), this.bounds[2 + 3 * 0] = t.bounds[e + 1 + 3 * n].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * n], t.bounds[e + 3 * (n + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * n], t.bounds[e + 1 + 3 * (n + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * n], t.bounds[e + 3 * (n + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * n], t.bounds[e + 1 + 3 * (n + 1)]), this.bounds[0 + 3 * 2] = t.bounds[e + 3 * (n + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(t.bounds[e + 3 * (n + 1)], t.bounds[e + 1 + 3 * (n + 1)]), this.bounds[2 + 3 * 2] = t.bounds[e + 1 + 3 * (n + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * G.uvMultiple, this.bounds[0 + 3 * 0].tv = 0 * G.uvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 0].tv = 0 * G.uvMultiple, this.bounds[2 + 3 * 0].tu = 1 * G.uvMultiple, this.bounds[2 + 3 * 0].tv = 0 * G.uvMultiple, this.bounds[0 + 3 * 1].tu = 0 * G.uvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * G.uvMultiple, this.bounds[2 + 3 * 1].tu = 1 * G.uvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * G.uvMultiple, this.bounds[0 + 3 * 2].tu = 0 * G.uvMultiple, this.bounds[0 + 3 * 2].tv = 1 * G.uvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * G.uvMultiple, this.bounds[1 + 3 * 2].tv = 1 * G.uvMultiple, this.bounds[2 + 3 * 2].tu = 1 * G.uvMultiple, this.bounds[2 + 3 * 2].tv = 1 * G.uvMultiple, this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this.backslash ? (this._childTriangleList$1[0].push(pi.create(4, 1, 0)), this._childTriangleList$1[0].push(pi.create(3, 4, 0)), this._childTriangleList$1[1].push(pi.create(5, 2, 1)), this._childTriangleList$1[1].push(pi.create(4, 5, 1)), this._childTriangleList$1[2].push(pi.create(7, 4, 3)), this._childTriangleList$1[2].push(pi.create(6, 7, 3)), this._childTriangleList$1[3].push(pi.create(8, 5, 4)), this._childTriangleList$1[3].push(pi.create(7, 8, 4))) : (this._childTriangleList$1[0].push(pi.create(3, 1, 0)), this._childTriangleList$1[0].push(pi.create(4, 1, 3)), this._childTriangleList$1[1].push(pi.create(4, 2, 1)), this._childTriangleList$1[1].push(pi.create(5, 2, 4)), this._childTriangleList$1[2].push(pi.create(6, 4, 3)), this._childTriangleList$1[2].push(pi.create(7, 4, 6)), this._childTriangleList$1[3].push(pi.create(7, 5, 4)), this._childTriangleList$1[3].push(pi.create(8, 5, 7)));
            } else
              this.bounds[0 + 3 * 0] = Ht.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = Ht.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = Ht.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = Ht.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = Ht.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = Ht.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = Ht.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = Ht.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = Ht.create(0, -1, 0, 1, 1), this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this._childTriangleList$1[0].push(pi.create(3, 1, 0)), this._childTriangleList$1[0].push(pi.create(4, 1, 3)), this._childTriangleList$1[1].push(pi.create(5, 2, 1)), this._childTriangleList$1[1].push(pi.create(4, 5, 1)), this._childTriangleList$1[2].push(pi.create(7, 4, 3)), this._childTriangleList$1[2].push(pi.create(6, 7, 3)), this._childTriangleList$1[3].push(pi.create(7, 5, 4)), this._childTriangleList$1[3].push(pi.create(8, 5, 7));
          },
          _midpoint$1: function(t, e) {
            var n = $.lerp(t.position, e.position, 0.5), a = Mt.lerp(Mt.create(t.tu, t.tv), Mt.create(e.tu, e.tv), 0.5);
            return n.normalize(), Ht.createPos(n, a.x, a.y);
          },
          createGeometry: function(t) {
            if (this.geometryCreated)
              return !0;
            if (this.geometryCreated = !0, G.prototype.createGeometry.call(this, t), !this._subDivided$1) {
              this._vertexList$1 == null && this._initializeGrids$1(), G.uvMultiple === 256 ? !this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1 ? this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this.demTile && this.level > 1 && (this.demArray = new Array(17 * 17), this.demSize = 17 * 17, this.backslash ? Pi._backslashYIndex$1 == null && (this._tempBackslashYIndex$1 = new Array(this.demSize), this._tempBackslashXIndex$1 = new Array(this.demSize)) : Pi._slashYIndex$1 == null && (this._tempSlashYIndex$1 = new Array(this.demSize), this._tempSlashXIndex$1 = new Array(this.demSize)));
              for (var e = 0; e < 4; e++)
                for (var n = this._subDivisionLevel$1; n-- > 1; ) {
                  for (var a = [], s = r.enumerate(this._childTriangleList$1[e]); s.moveNext(); ) {
                    var l = s.current;
                    l.subDivide(a, this._vertexList$1);
                  }
                  this._childTriangleList$1[e] = a;
                }
              if (t.gl == null)
                for (var e = 0; e < 4; e++) {
                  this._renderTriangleLists[e] = [];
                  for (var g = r.enumerate(this._childTriangleList$1[e]); g.moveNext(); ) {
                    var l = g.current, _ = this._vertexList$1[l.c], m = this._vertexList$1[l.b], b = this._vertexList$1[l.a];
                    this._renderTriangleLists[e].push(Me.create(_, m, b, this.texture, this.level));
                  }
                }
              else {
                this._vertexBuffer = G.prepDevice.createBuffer(), G.prepDevice.bindBuffer(34962, this._vertexBuffer);
                for (var y = new Float32Array(this._vertexList$1.length * 5), M = y, A = 0, R = r.enumerate(this._vertexList$1); R.moveNext(); ) {
                  var F = R.current;
                  this.demTile ? (A = this.addVertex(M, A, this._getMappedVertex(F)), this.demIndex++) : A = this.addVertex(M, A, F);
                }
                this.demTile && (this.backslash ? this._tempBackslashXIndex$1 != null && (Pi._backslashXIndex$1 = this._tempBackslashXIndex$1, Pi._backslashYIndex$1 = this._tempBackslashYIndex$1, this._tempBackslashXIndex$1 = null, this._tempBackslashYIndex$1 = null) : this._tempSlashYIndex$1 != null && (Pi._slashXIndex$1 = this._tempSlashXIndex$1, Pi._slashYIndex$1 = this._tempSlashYIndex$1, this._tempSlashYIndex$1 = null, this._tempSlashXIndex$1 = null)), G.prepDevice.bufferData(34962, y, 35044);
                for (var e = 0; e < 4; e++)
                  if (this.triangleCount = this._childTriangleList$1[e].length, this.getIndexBuffer(e, 0) == null) {
                    var O = new Uint16Array(this.triangleCount * 3), B = O;
                    A = 0;
                    for (var H = r.enumerate(this._childTriangleList$1[e]); H.moveNext(); ) {
                      var l = H.current;
                      B[A++] = l.c, B[A++] = l.b, B[A++] = l.a;
                    }
                    this._processIndexBuffer$1(B, e);
                  }
              }
              this._subDivided$1 = !0;
            }
            return !0;
          },
          _getMappedVertex: function(t) {
            var e = new Ht(), n = U.cartesianToSpherical2(t.position);
            if (n.get_lng() < -180 && n.set_lng(n.get_lng() + 360), n.get_lng() > 180 && n.set_lng(n.get_lng() - 360), this.level > 1) {
              var a = r.truncate(t.tu * 16 + 0.5), s = r.truncate(t.tv * 16 + 0.5);
              this.demArray[a + s * 17] = this.demData[this.demIndex], this.backslash ? this._tempBackslashYIndex$1 != null && (this._tempBackslashXIndex$1[this.demIndex] = a, this._tempBackslashYIndex$1[this.demIndex] = s) : this._tempSlashYIndex$1 != null && (this._tempSlashXIndex$1[this.demIndex] = a, this._tempSlashYIndex$1[this.demIndex] = s);
            }
            var l = this.geoTo3dWithAlt(n.get_lat(), n.get_lng(), !1, !1);
            return e.tu = t.tu, e.tv = t.tv, l.subtract(this.localCenter), e.position = l, e;
          },
          cleanUp: function(t) {
            G.prototype.cleanUp.call(this, t), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
          },
          _getDemSample$1: function(t, e) {
            return this.demArray[(16 - e) * 17 + t];
          },
          createDemFromParent: function() {
            var t = r.safeCast(this.parent, Pi);
            if (t == null)
              return !1;
            var e = this.tileX % 2 === 1 ? 8 : 0, n = this.tileY % 2 ? 0 : 8;
            this.demArray = new Array(17 * 17);
            for (var a = 0; a < 17; a += 2)
              for (var s = !0, l = 0; l < 17; l++)
                s ? this.demArray[(16 - a) * 17 + l] = t._getDemSample$1(l / 2 + e, a / 2 + n) : this.demArray[(16 - a) * 17 + l] = (t._getDemSample$1(l / 2 + e, a / 2 + n) + t._getDemSample$1(l / 2 + e + 1, a / 2 + n)) / 2, s = !s;
            for (var g = 1; g < 17; g += 2)
              for (var _ = 0; _ < 17; _++)
                this.demArray[(16 - g) * 17 + _] = (this._getDemSample$1(_, g - 1) + this._getDemSample$1(_, g + 1)) / 2;
            this.demData = new Array(this.demSize);
            for (var m = 0; m < this.demSize; m++)
              this.backslash ? this.demData[m] = this.demArray[Pi._backslashXIndex$1[m] + Pi._backslashYIndex$1[m] * 17] : this.demData[m] = this.demArray[Pi._slashXIndex$1[m] + Pi._slashYIndex$1[m] * 17], this.demAverage += this.demData[m];
            return this.demAverage /= this.demData.length, this.demReady = !0, !0;
          }
        };
        function na() {
          this._textureReady$1 = !1, this._sprite$1 = new Kn(), gi.call(this);
        }
        na.create = function(t, e) {
          var n = new na();
          return n.set_owner(t), n._filename$1 = e.name, n.set_name(t.getNextDefaultName("Image")), n.set_x(0), n.set_y(0), t.get_owner().addCachedFile(e.name, e), n;
        };
        var Df = {
          getTypeName: function() {
            return "TerraViewer.BitmapOverlay";
          },
          copy: function(t) {
            var e = new na();
            return e.set_owner(t), e._filename$1 = this._filename$1, e.set_x(this.get_x()), e.set_y(this.get_y()), e.set_width(this.get_width()), e.set_height(this.get_height()), e.set_color(this.get_color()), e.set_opacity(this.get_opacity()), e.set_rotationAngle(this.get_rotationAngle()), e.set_name(this.get_name() + " - Copy"), e;
          },
          cleanUp: function() {
            this.texture = null, this.texture2d != null && (this.texture2d.cleanUp(), this.texture2d = null);
          },
          initializeTexture: function() {
            var t = this;
            try {
              ti.useGl ? (this.texture2d = this.get_owner().get_owner().getCachedTexture2d(this._filename$1), this._textureReady$1 = !0) : this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
                t._textureReady$1 = !0;
              });
            } catch {
            }
          },
          draw3D: function(t, e) {
            if (ti.useGl)
              this.texture2d == null && this.initializeTexture(), !this.get_width() && !this.get_height() && (this.set_width(this.texture2d.imageElement.width), this.set_height(this.texture2d.imageElement.height)), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(t, this.points, this.points.length, this.texture2d, !0, 1);
            else {
              if (this.texture == null && this.initializeTexture(), !this._textureReady$1)
                return;
              !this.get_width() && !this.get_height() && (this.set_width(this.texture.width), this.set_height(this.texture.height));
              var n = t.device;
              n.save(), n.translate(this.get_x(), this.get_y()), n.rotate(this.get_rotationAngle() * gi.RC), n.globalAlpha = this.get_opacity(), n.drawImage(this.texture, -this.get_width() / 2, -this.get_height() / 2, this.get_width(), this.get_height()), n.restore();
            }
          },
          addFilesToCabinet: function(t) {
            t.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
          },
          writeOverlayProperties: function(t) {
            t._writeStartElement("Bitmap"), t._writeAttributeString("Filename", this._filename$1), t._writeEndElement();
          },
          initializeFromXml: function(t) {
            var e = xt.selectSingleNode(t, "Bitmap");
            this._filename$1 = e.attributes.getNamedItem("Filename").nodeValue;
          }
        };
        function Zr() {
          this._sprite$1 = new Kn(), this._ctx$1 = null, this._ce$1 = null, gi.call(this);
        }
        Zr.create = function(t) {
          var e = new Zr();
          return e.textObject = t, e._calculateTextSize$1(), e;
        };
        var Nf = {
          getTypeName: function() {
            return "TerraViewer.TextOverlay";
          },
          get_color: function() {
            return gi.prototype.get_color.call(this);
          },
          set_color: function(t) {
            return this.textObject.foregroundColor !== t && (this.textObject.foregroundColor = t, gi.prototype.set_color.call(this, t), this.cleanUp()), t;
          },
          draw3D: function(t, e) {
            if (ti.useGl)
              this.initializeTexture(), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(t, this.points, this.points.length, this.texture2d, !0, 1);
            else {
              var n = t.device;
              n.save(), n.translate(this.get_x(), this.get_y()), n.rotate(this.get_rotationAngle() * gi.RC), n.globalAlpha = this.get_opacity(), this._drawCanvasText$1(n), n.restore();
            }
          },
          _drawCanvasText$1: function(t) {
            t.fillStyle = this.textObject.foregroundColor.toString(), t.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, t.textBaseline = "top";
            var e = this.textObject.text;
            if (e.indexOf("{$") > -1) {
              if (e.indexOf("{$DATE}") > -1) {
                var n = r.format("{0:yyyy/MM/dd}", Q.get_now());
                e = r.replaceString(e, "{$DATE}", n);
              }
              if (e.indexOf("{$TIME}") > -1) {
                var a = r.format("{0:HH:mm:ss}", Q.get_now());
                e = r.replaceString(e, "{$TIME}", a);
              }
              e = r.replaceString(e, "{$DIST}", yi.formatDistance(Z.singleton.renderContext.get_solarSystemCameraDistance())), e = r.replaceString(e, "{$LAT}", U.formatDMS(Z.singleton.renderContext.viewCamera.lat)), e = r.replaceString(e, "{$LNG}", U.formatDMS(Z.singleton.renderContext.viewCamera.lat)), e = r.replaceString(e, "{$RA}", U.formatDMS(Z.singleton.renderContext.viewCamera.get_RA())), e = r.replaceString(e, "{$DEC}", U.formatDMS(Z.singleton.renderContext.viewCamera.get_dec())), e = r.replaceString(e, "{$FOV}", U.formatDMS(Z.singleton.renderContext.get_fovAngle()));
            }
            for (var s = e.split(`
`), l = -(this.get_height() / 2), g = this.textObject.fontSize * 1.7, _ = r.enumerate(s); _.moveNext(); )
              for (var m = _.current, b = xt.getWrappedText(t, m, this.get_width()), y = r.enumerate(b); y.moveNext(); ) {
                var M = y.current;
                t.fillText(M, -this.get_width() / 2, l), l += g;
              }
          },
          _calculateTextSize$1: function() {
            (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = 100, this._ce$1.width = 100, this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.fillStyle = this.textObject.foregroundColor.toString(), this._ctx$1.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, this._ctx$1.textBaseline = "top";
            var t = this.textObject.text;
            if (t.indexOf("{$") > -1) {
              if (t.indexOf("{$DATE}") > -1) {
                var e = r.format("{0:yyyy/MM/dd}", Q.get_now());
                t = r.replaceString(t, "{$DATE}", e);
              }
              if (t.indexOf("{$TIME}") > -1) {
                var n = r.format("{0:HH:mm:ss}", Q.get_now());
                t = r.replaceString(t, "{$TIME}", n);
              }
              t = r.replaceString(t, "{$DIST}", yi.formatDistance(Z.singleton.renderContext.get_solarSystemCameraDistance())), t = r.replaceString(t, "{$LAT}", U.formatDMS(Z.singleton.renderContext.viewCamera.lat)), t = r.replaceString(t, "{$LNG}", U.formatDMS(Z.singleton.renderContext.viewCamera.lat)), t = r.replaceString(t, "{$RA}", U.formatDMS(Z.singleton.renderContext.viewCamera.get_RA())), t = r.replaceString(t, "{$DEC}", U.formatDMS(Z.singleton.renderContext.viewCamera.get_dec())), t = r.replaceString(t, "{$FOV}", U.formatDMS(Z.singleton.renderContext.get_fovAngle()));
            }
            for (var a = t.split(`
`), s = 0, l = this.textObject.fontSize * 1.7, g = 0, _ = r.enumerate(a); _.moveNext(); ) {
              var m = _.current, b = this._ctx$1.measureText(m).width;
              g = Math.max(b, g), s += l;
            }
            this.set_width(g * 1.01), this.set_height(s), this._ce$1 = null, this._ctx$1 = null;
          },
          initializeTexture: function() {
            (this.texture2d == null || this.textObject.text.indexOf("{$") > -1) && ((!this.get_height() || !this.get_width()) && this._calculateTextSize$1(), (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = r.truncate(this.get_height()), this._ce$1.width = r.truncate(this.get_width()), this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.translate(this.get_width() / 2, this.get_height() / 2), this._ctx$1.clearRect(0, 0, this.get_width(), this.get_height()), this._drawCanvasText$1(this._ctx$1), this.texture2d = new di(), this.texture2d.imageElement = this._ce$1, this.texture2d.makeTexture(), this._ce$1 = null, this._ctx$1 = null);
          },
          writeOverlayProperties: function(t) {
            t._writeStartElement("Text"), this.textObject._saveToXml(t), t._writeEndElement();
          },
          initializeFromXml: function(t) {
            var e = xt.selectSingleNode(t, "Text");
            this.textObject = Rn._fromXml(xt.selectSingleNode(e, "TextObject"));
          },
          initializeGeometry: function() {
            ti.useGl && gi.prototype.initializeGeometry.call(this);
          }
        };
        function aa() {
          this._shapeType$1 = 1, this._sprite$1 = new Kn(), this._triangleStrip$1 = !0, gi.call(this);
        }
        aa._create = function(t, e) {
          var n = new aa();
          return n._shapeType$1 = e, n.set_owner(t), n;
        };
        var Ff = {
          getTypeName: function() {
            return "TerraViewer.ShapeOverlay";
          },
          get_shapeType: function() {
            return this._shapeType$1;
          },
          set_shapeType: function(t) {
            return this._shapeType$1 = t, this.cleanUpGeometry(), t;
          },
          draw3D: function(t, e) {
            if (ti.useGl)
              this.initializeGeometry(), this._sprite$1.draw(t, this.points, this.points.length, null, this._triangleStrip$1, this.get_opacity());
            else
              switch (this._shapeType$1) {
                case 0:
                  this._drawCircleGeometry$1(t);
                  break;
                case 1:
                  this._drawRectGeometry$1(t);
                  break;
                case 6:
                  this._drawOpenRectGeometry$1(t);
                  break;
                case 2:
                  this._drawStarGeometry$1(t);
                  break;
                case 3:
                  this._drawDonutGeometry$1(t);
                  break;
                case 4:
                  this._drawArrowGeometry$1(t);
                  break;
                case 5:
                  this._drawLineGeometry$1(t);
                  break;
              }
          },
          initializeGeometry: function() {
            if (this.points == null)
              switch (this._shapeType$1) {
                case 0:
                  this._createCircleGeometry$1();
                  break;
                case 1:
                  gi.prototype.initializeGeometry.call(this);
                  break;
                case 6:
                  this._createOpenRectGeometry$1();
                  break;
                case 2:
                  this._createStarGeometry$1();
                  break;
                case 3:
                  this._createDonutGeometry$1();
                  break;
                case 4:
                  this._createArrowGeometry$1();
                  break;
                case 5:
                  this._createLineGeometry$1();
                  break;
              }
          },
          _createLineGeometry$1: function() {
            this.get_x(), this.get_y(), this.get_width() / 2;
            var t = this.get_width(), e = r.truncate(t / 12) + 1;
            this.points == null && (this.points = new Array(e * 2 + 2));
            for (var n = 0; n <= e; n++) {
              var a = n * 2;
              this.points[a] = new Ye(), this.points[a].position = this.makePosition(this.get_x(), this.get_y(), n / e * this.get_width() - this.get_width() / 2, 6, this.get_rotationAngle()), this.points[a].tu = n % 2, this.points[a].tv = 0, this.points[a].color = this.get_color(), this.points[a + 1] = new Ye(), this.points[a + 1].position = this.makePosition(this.get_x(), this.get_y(), n / e * this.get_width() - this.get_width() / 2, -6, this.get_rotationAngle()), this.points[a + 1].tu = n % 2, this.points[a + 1].tv = 1, this.points[a + 1].color = this.get_color();
            }
          },
          _createOpenRectGeometry$1: function() {
            var t = this.get_x(), e = this.get_y();
            this.get_width() / 2;
            var n = this.get_width(), a = r.truncate(n / 12) + 1, s = r.truncate(this.get_height() / 12) + 1, l = ((a + 1) * 2 + (s + 1) * 2) * 2;
            this.points == null && (this.points = new Array(l));
            for (var g = 0; g <= a; g++) {
              var _ = g * 2;
              this.points[_] = new Ye(), this.points[_].position = this.makePosition(t, e, g / a * this.get_width() - this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[_].tu = g % 2, this.points[_].tv = 0, this.points[_].color = this.get_color(), this.points[_ + 1] = new Ye(), this.points[_ + 1].position = this.makePosition(t, e, g / a * this.get_width() - this.get_width() / 2, this.get_height() / 2 - 12, this.get_rotationAngle()), this.points[_ + 1].tu = g % 2, this.points[_ + 1].tv = 1, this.points[_ + 1].color = this.get_color();
              var m = (a + 1) * 4 + (s + 1) * 2 - 2 - _;
              this.points[m] = new Ye(), this.points[m].position = this.makePosition(t, e, g / a * this.get_width() - this.get_width() / 2, -(this.get_height() / 2) + 12, this.get_rotationAngle()), this.points[m].tu = g % 2, this.points[m].tv = 0, this.points[m].color = this.get_color(), this.points[m + 1] = new Ye(), this.points[m + 1].position = this.makePosition(t, e, g / a * this.get_width() - this.get_width() / 2, -(this.get_height() / 2), this.get_rotationAngle()), this.points[m + 1].tu = g % 2, this.points[m + 1].tv = 1, this.points[m + 1].color = this.get_color();
            }
            for (var b = (a + 1) * 2, g = 0; g <= s; g++) {
              var y = (s + 1) * 2 + b - 2, _ = g * 2;
              this.points[y - _] = new Ye(), this.points[y - _].position = this.makePosition(t, e, this.get_width() / 2, g / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[y - _].tu = g % 2, this.points[y - _].tv = 0, this.points[y - _].color = this.get_color(), this.points[y - _ + 1] = new Ye(), this.points[y - _ + 1].position = this.makePosition(t, e, this.get_width() / 2 - 12, g / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[y - _ + 1].tu = g % 2, this.points[y - _ + 1].tv = 1, this.points[y - _ + 1].color = this.get_color();
              var m = _ + (a + 1) * 4 + (s + 1) * 2;
              this.points[m] = new Ye(), this.points[m].position = this.makePosition(t, e, -(this.get_width() / 2) + 12, g / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[m].tu = g % 2, this.points[m].tv = 0, this.points[m].color = this.get_color(), this.points[m + 1] = new Ye(), this.points[m + 1].position = this.makePosition(t, e, -(this.get_width() / 2), g / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[m + 1].tu = g % 2, this.points[m + 1].tv = 1, this.points[m + 1].color = this.get_color();
            }
          },
          _createStarGeometry$1: function() {
            var t = this.get_x(), e = this.get_y();
            this.get_width() / 2;
            var n = Math.PI * 2 / 5;
            this.points == null && (this.points = new Array(12)), this._pnts$1 == null && (this._pnts$1 = new Array(10));
            for (var a = 0; a < 5; a++) {
              var s = a * n - Math.PI / 2;
              this._pnts$1[a] = new Ye(), this._pnts$1[a].position = this.makePosition(t, e, Math.cos(s) * (this.get_width() / 2), Math.sin(s) * (this.get_height() / 2), this.get_rotationAngle()), this._pnts$1[a].tu = 0, this._pnts$1[a].tv = 0, this._pnts$1[a].color = this.get_color();
            }
            for (var a = 5; a < 10; a++) {
              var s = a * n + n / 2 - Math.PI / 2;
              this._pnts$1[a] = new Ye(), this._pnts$1[a].position = this.makePosition(t, e, Math.cos(s) * (this.get_width() / 5.3), Math.sin(s) * (this.get_height() / 5.3), this.get_rotationAngle()), this._pnts$1[a].tu = 0, this._pnts$1[a].tv = 0, this._pnts$1[a].color = this.get_color();
            }
            this.points[0] = this._pnts$1[0], this.points[1] = this._pnts$1[5], this.points[2] = this._pnts$1[9], this.points[3] = this._pnts$1[1], this.points[4] = this._pnts$1[7], this.points[5] = this._pnts$1[4], this.points[6] = this._pnts$1[6], this.points[7] = this._pnts$1[2], this.points[8] = this._pnts$1[7], this.points[9] = this._pnts$1[7], this.points[10] = this._pnts$1[3], this.points[11] = this._pnts$1[8], this._triangleStrip$1 = !1;
          },
          _createArrowGeometry$1: function() {
            this.points == null && (this.points = new Array(9)), this.points[0] = new Ye(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 4, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new Ye(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new Ye(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new Ye(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 0, this.points[3].color = this.get_color(), this.points[4] = new Ye(), this.points[4].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[4].tu = 0, this.points[4].tv = 1, this.points[4].color = this.get_color(), this.points[5] = new Ye(), this.points[5].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 4, this.get_rotationAngle()), this.points[5].tu = 1, this.points[5].tv = 1, this.points[5].color = this.get_color(), this.points[6] = new Ye(), this.points[6].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 2, this.get_rotationAngle()), this.points[6].tu = 1, this.points[6].tv = 1, this.points[6].color = this.get_color(), this.points[7] = new Ye(), this.points[7].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, 0, this.get_rotationAngle()), this.points[7].tu = 1, this.points[7].tv = 0.5, this.points[7].color = this.get_color(), this.points[8] = new Ye(), this.points[8].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 2, this.get_rotationAngle()), this.points[8].tu = 1, this.points[8].tv = 1, this.points[8].color = this.get_color(), this._triangleStrip$1 = !1;
          },
          _createDonutGeometry$1: function() {
            var t = this.get_x(), e = this.get_y(), n = this.get_width() / 2, a = Math.PI * 2 * n, s = r.truncate(a / 12) + 1, l = Math.PI * 2 / s;
            this.points == null && (this.points = new Array(s * 2 + 2));
            for (var g = 0; g <= s; g++) {
              var _ = g * 2;
              this.points[_] = new Ye(), this.points[_].position = this.makePosition(t, e, Math.cos(g * l) * (this.get_width() / 2), Math.sin(g * l) * (this.get_height() / 2), this.get_rotationAngle()), this.points[_].tu = g % 2, this.points[_].tv = 0, this.points[_].color = this.get_color(), this.points[_ + 1] = new Ye(), this.points[_ + 1].position = this.makePosition(t, e, Math.cos(g * l) * (this.get_width() / 2 - 10), Math.sin(g * l) * (this.get_height() / 2 - 10), this.get_rotationAngle()), this.points[_ + 1].tu = g % 2, this.points[_ + 1].tv = 1, this.points[_ + 1].color = this.get_color();
            }
          },
          _createCircleGeometry$1: function() {
            var t = this.get_x(), e = this.get_y(), n = this.get_width() / 2, a = Math.PI * 2 * n, s = r.truncate(a / 12) + 1, l = Math.PI * 2 / s;
            this.points == null && (this.points = new Array(s * 2 + 2));
            for (var g = 0; g <= s; g++) {
              var _ = g * 2;
              this.points[_] = new Ye(), this.points[_].position = this.makePosition(t, e, Math.cos(g * l) * (this.get_width() / 2), Math.sin(g * l) * (this.get_height() / 2), this.get_rotationAngle()), this.points[_].tu = g % 2, this.points[_].tv = 0, this.points[_].color = this.get_color(), this.points[_ + 1] = new Ye(), this.points[_ + 1].position = this.makePosition(t, e, 0, 0, this.get_rotationAngle()), this.points[_ + 1].tu = g % 2, this.points[_ + 1].tv = 1, this.points[_ + 1].color = this.get_color();
            }
          },
          initializeTexture: function() {
            switch (this.get_shapeType()) {
              case 5:
              case 3:
              case 6:
                break;
              case 0:
              case 1:
              case 2:
              case 4:
              default:
                this.texture = null;
                break;
            }
          },
          _drawLineGeometry$1: function(t) {
            var e = t.device;
            e.save();
            var n = this.get_width() / 2;
            e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * gi.RC), e.moveTo(-n, 0), e.lineTo(n, 0), e.lineWidth = 9, e.strokeStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.stroke(), e.restore();
          },
          _drawOpenRectGeometry$1: function(t) {
            var e = t.device;
            e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * gi.RC), e.beginPath(), e.moveTo(-this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, this.get_height() / 2), e.lineTo(-this.get_width() / 2, this.get_height() / 2), e.closePath(), e.lineWidth = 9, e.strokeStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.stroke(), e.restore();
          },
          _drawRectGeometry$1: function(t) {
            var e = t.device;
            e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * gi.RC), e.beginPath(), e.moveTo(-this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, this.get_height() / 2), e.lineTo(-this.get_width() / 2, this.get_height() / 2), e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
          },
          _drawStarGeometry$1: function(t) {
            var e = t.device;
            e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * gi.RC), e.beginPath();
            var n = 0, a = 0;
            this.get_width() / 2;
            for (var s = Math.PI * 2 / 5, l = !0, g = 0; g < 5; g++) {
              var _ = g * s - Math.PI / 2;
              l ? (l = !1, e.moveTo(n + Math.cos(_) * (this.get_width() / 2), a + Math.sin(_) * (this.get_height() / 2))) : e.lineTo(n + Math.cos(_) * (this.get_width() / 2), a + Math.sin(_) * (this.get_height() / 2));
              var m = g * s + s / 2 - Math.PI / 2;
              e.lineTo(n + Math.cos(m) * (this.get_width() / 5.3), a + Math.sin(m) * (this.get_height() / 5.3));
            }
            e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
          },
          _drawArrowGeometry$1: function(t) {
            var e = t.device;
            e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * gi.RC), e.beginPath(), e.moveTo(-(this.get_width() / 2), -(this.get_height() / 4)), e.lineTo(this.get_width() / 4, -(this.get_height() / 4)), e.lineTo(this.get_width() / 4, -(this.get_height() / 2)), e.lineTo(this.get_width() / 2, 0), e.lineTo(this.get_width() / 4, this.get_height() / 2), e.lineTo(this.get_width() / 4, this.get_height() / 4), e.lineTo(-(this.get_width() / 2), this.get_height() / 4), e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
          },
          _drawDonutGeometry$1: function(t) {
            var e = t.device;
            e.save(), e.translate(this.get_x(), this.get_y()), e.scale(1, this.get_height() / this.get_width()), e.rotate(this.get_rotationAngle() * gi.RC), e.beginPath(), e.arc(0, 0, this.get_width() / 2, 0, Math.PI * 2, !1), e.closePath(), e.lineWidth = 9, e.strokeStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.stroke(), e.restore();
          },
          _drawCircleGeometry$1: function(t) {
            var e = t.device;
            e.save(), e.scale(1, this.get_width() / this.get_height()), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * gi.RC), e.beginPath(), e.arc(0, 0, this.get_width(), 0, Math.PI * 2, !1), e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
          },
          cleanUpGeometry: function() {
            gi.prototype.cleanUpGeometry.call(this), this.cleanUp();
          },
          writeOverlayProperties: function(t) {
            t._writeStartElement("Shape"), t._writeAttributeString("ShapeType", we.toXml("ShapeType", this._shapeType$1)), t._writeEndElement();
          },
          initializeFromXml: function(t) {
            var e = xt.selectSingleNode(t, "Shape");
            this._shapeType$1 = we.parse("ShapeType", e.attributes.getNamedItem("ShapeType").nodeValue);
          }
        };
        function Oa() {
          this._audio$1 = null, this._audioReady$1 = !1, this._wantPlaying$1 = !1, this._volume$1 = 100, this._mute$1 = !1, this._position$1 = 0, this._trackType$1 = 0, gi.call(this), this.isDesignTimeOnly = !0;
        }
        Oa.create = function(t, e) {
          var n = new Oa();
          return n.set_owner(t), n._filename$1 = e.name, n.get_owner().get_owner().addCachedFile(e.name, e), n;
        };
        var Bf = {
          getTypeName: function() {
            return "TerraViewer.AudioOverlay";
          },
          get_mute: function() {
            return this._mute$1;
          },
          set_mute: function(t) {
            return this._mute$1 = t, this.set_volume(this.get_volume()), t;
          },
          get_volume: function() {
            return this._volume$1;
          },
          set_volume: function(t) {
            return this._volume$1 = t, this._audio$1 != null && (this._audio$1.volume = this._mute$1 ? 0 : this._volume$1 / 100), t;
          },
          addFilesToCabinet: function(t) {
            t.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
          },
          play: function() {
            this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !0, this._audio$1 != null && this._audioReady$1 && (this._audio$1.play(), this.set_volume(this.get_volume()), this._audio$1.currentTime = this._position$1);
          },
          pause: function() {
            this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !1, this._audio$1 != null && this._audioReady$1 && this._audio$1.pause();
          },
          stop: function() {
            this.pause();
          },
          seek: function(t) {
            this._position$1 = t, this._audio$1 == null && this.prepMultimedia(), this._audioReady$1 && (this._audio$1.duration < t ? this._audio$1.pause() : this._audio$1.currentTime = this._position$1);
          },
          prepMultimedia: function() {
            var t = this;
            if (this._audio$1 == null) {
              this._audio$1 = document.createElement("audio"), this._audio$1.addEventListener("canplaythrough", function() {
                t._audioReady$1 || (t._audioReady$1 = !0, t._wantPlaying$1 && t.play());
              }, !1);
              var e = document.createElement("source");
              this._audio$1.appendChild(e), e.src = this.get_owner().get_owner().getFileStream(this._filename$1), e.type = "audio/mp3", this._audio$1.load();
            }
          },
          initializeTexture: function() {
            this.prepMultimedia();
          },
          cleanUp: function() {
            gi.prototype.cleanUp.call(this), this._wantPlaying$1 = !1, this._audio$1 != null && (this._audio$1.pause(), this._audio$1.src = null, this._audio$1 = null);
          },
          get_trackType: function() {
            return this._trackType$1;
          },
          set_trackType: function(t) {
            return this._trackType$1 = t, t;
          },
          writeOverlayProperties: function(t) {
            t._writeStartElement("Audio"), t._writeAttributeString("Filename", this._filename$1), t._writeAttributeString("Volume", this._volume$1.toString()), t._writeAttributeString("Mute", this._mute$1.toString()), t._writeAttributeString("TrackType", we.toXml("AudioType", this._trackType$1)), t._writeEndElement();
          },
          initializeFromXml: function(t) {
            var e = xt.selectSingleNode(t, "Audio");
            this._filename$1 = e.attributes.getNamedItem("Filename").nodeValue, e.attributes.getNamedItem("Volume") != null && (this._volume$1 = parseInt(e.attributes.getNamedItem("Volume").nodeValue)), e.attributes.getNamedItem("Mute") != null && (this._mute$1 = r.boolean(e.attributes.getNamedItem("Mute").nodeValue)), e.attributes.getNamedItem("TrackType") != null && (this._trackType$1 = we.parse("AudioType", e.attributes.getNamedItem("TrackType").nodeValue));
          }
        };
        function ba() {
          this._loopType$1 = 1, this._startFrame$1 = 0, this._framesList$1 = [], this._frames$1 = 1, this._framesX$1 = 8, this._framesY$1 = 8, this._textureReady$1 = !1, this._currentFrame$1 = 0, this._cellHeight$1 = 256, this._cellWidth$1 = 256, this._timeStart$1 = r.now(), this._playing$1 = !0, gi.call(this);
        }
        var zf = {
          getTypeName: function() {
            return "TerraViewer.FlipbookOverlay";
          },
          get_loopType: function() {
            return this._loopType$1;
          },
          set_loopType: function(t) {
            return this._loopType$1 = t, t;
          },
          get_startFrame: function() {
            return this._startFrame$1;
          },
          set_startFrame: function(t) {
            return this._startFrame$1 = t, t;
          },
          get_frameSequence: function() {
            return this._frameSequence$1;
          },
          set_frameSequence: function(t) {
            if (this._frameSequence$1 !== t && (this._frameSequence$1 = t, this._framesList$1 = [], !r.emptyString(this._frameSequence$1)))
              try {
                for (var e = this._frameSequence$1.split(","), n = r.enumerate(e); n.moveNext(); ) {
                  var a = n.current, s = parseInt(r.trim(a));
                  this._framesList$1.push(s);
                }
              } catch {
              }
            return t;
          },
          get_frames: function() {
            return this._frames$1;
          },
          set_frames: function(t) {
            return this._frames$1 = t, t;
          },
          get_framesX: function() {
            return this._framesX$1;
          },
          set_framesX: function(t) {
            return this._framesX$1 = t, t;
          },
          get_framesY: function() {
            return this._framesY$1;
          },
          set_framesY: function(t) {
            return this._framesY$1 = t, t;
          },
          copy: function(t) {
            var e = new ba();
            return e.set_owner(t), e._filename$1 = this._filename$1, e.set_x(this.get_x()), e.set_y(this.get_y()), e.set_width(this.get_width()), e.set_height(this.get_height()), e.set_color(this.get_color()), e.set_opacity(this.get_opacity()), e.set_rotationAngle(this.get_rotationAngle()), e.set_name(this.get_name() + " - Copy"), e.set_startFrame(this.get_startFrame()), e.set_frames(this.get_frames()), e.set_loopType(this.get_loopType()), e.set_frameSequence(this.get_frameSequence()), e.set_framesX(this.get_framesX()), e.set_framesY(this.get_framesY()), e;
          },
          cleanUp: function() {
            this.texture = null;
          },
          initializeTexture: function() {
            var t = this;
            try {
              var e = r.endsWith(this._filename$1.toLowerCase(), ".jpg");
              this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
                t._textureReady$1 = !0;
              });
            } catch {
            }
          },
          addFilesToCabinet: function(t) {
            t.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
          },
          writeOverlayProperties: function(t) {
            t._writeStartElement("Flipbook"), t._writeAttributeString("Filename", this._filename$1), t._writeAttributeString("Frames", this._frames$1.toString()), t._writeAttributeString("Loop", we.toXml("LoopTypes", this._loopType$1)), t._writeAttributeString("FramesX", this._framesX$1.toString()), t._writeAttributeString("FramesY", this._framesY$1.toString()), t._writeAttributeString("StartFrame", this._startFrame$1.toString()), r.emptyString(this._frameSequence$1) || t._writeAttributeString("FrameSequence", this._frameSequence$1), t._writeEndElement();
          },
          initializeFromXml: function(t) {
            var e = xt.selectSingleNode(t, "Flipbook");
            this._filename$1 = e.attributes.getNamedItem("Filename").nodeValue, this._frames$1 = parseInt(e.attributes.getNamedItem("Frames").nodeValue), this._loopType$1 = we.parse("LoopTypes", e.attributes.getNamedItem("Loop").nodeValue), e.attributes.getNamedItem("FramesX") != null && this.set_framesX(parseInt(e.attributes.getNamedItem("FramesX").nodeValue)), e.attributes.getNamedItem("FramesY") != null && this.set_framesY(parseInt(e.attributes.getNamedItem("FramesY").nodeValue)), e.attributes.getNamedItem("StartFrame") != null && this.set_startFrame(parseInt(e.attributes.getNamedItem("StartFrame").nodeValue)), e.attributes.getNamedItem("FrameSequence") != null && this.set_frameSequence(e.attributes.getNamedItem("FrameSequence").nodeValue);
          },
          play: function() {
            this._playing$1 = !0, this._timeStart$1 = r.now();
          },
          pause: function() {
            this._playing$1 = !1;
          },
          stop: function() {
            this._playing$1 = !1, this._currentFrame$1 = 0;
          },
          initializeGeometry: function() {
            var t = this._frames$1;
            if (r.emptyString(this._frameSequence$1) || (t = this._framesList$1.length), this._playing$1) {
              var e = r.now() - this._timeStart$1;
              switch (this._loopType$1) {
                case 0:
                  this._currentFrame$1 = r.truncate(e / 1e3 * 24 % t) + this._startFrame$1;
                  break;
                case 1:
                  this._currentFrame$1 = Math.abs(r.truncate((e / 1e3 * 24 + t) % (t * 2 - 1)) - (t - 1)) + this._startFrame$1, this._currentFrame$1 < 0 || this._currentFrame$1 > t - 1;
                  break;
                case 2:
                  this._currentFrame$1 = Math.max(0, t - r.truncate(e / 1e3 * 24 % t)) + this._startFrame$1;
                  break;
                case 3:
                  var n = Math.min(e / 1e3 * 24, t * 2 + 1) + t;
                  this._currentFrame$1 = Math.abs(n % (t * 2 - 1) - (t - 1)) + this._startFrame$1;
                  break;
                case 4:
                  this._currentFrame$1 = Math.min(t - 1, r.truncate(e / 1e3 * 24));
                  break;
                case 5:
                  this._currentFrame$1 = this._startFrame$1;
                  break;
                case 6:
                  this._currentFrame$1 = t - 1 + this._startFrame$1;
                  break;
                default:
                  this._currentFrame$1 = this._startFrame$1;
                  break;
              }
            }
            r.emptyString(this._frameSequence$1) || (this._currentFrame$1 < this._framesList$1.length && this._currentFrame$1 > -1 ? this._currentFrame$1 = this._framesList$1[this._currentFrame$1] : this._currentFrame$1 = 0), this.currentRotation = 0;
          }
        };
        function sr() {
          $t.call(this), this.name = "--------------------------------------";
        }
        var Of = {};
        function Go() {
          bn.call(this);
        }
        var Vf = {
          OK: function(t) {
            P.referenceFrameWizardFinished(t);
          }
        };
        function qo() {
          bn.call(this);
        }
        var Uf = {
          OK: function(t) {
            P.loadTree();
          }
        };
        function Xo() {
          bn.call(this);
        }
        var Hf = {
          OK: function(t) {
          }
        };
        function Yo() {
          bn.call(this);
        }
        var Gf = {
          OK: function() {
          }
        };
        function jo(t, e, n) {
          ar.call(this, t, e, null, n);
        }
        var qf = {
          readDataUnitFloat64: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getFloat64(this.position, !1), e++, this.position += 8;
          },
          readDataUnitFloat32: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getFloat32(this.position, !1), e++, this.position += 4;
          },
          readDataUnitUint8: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getUint8(this.position), e++, this.position += 1;
          },
          readDataUnitInt16: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getInt16(this.position, !1), e++, this.position += 2;
          },
          readDataUnitInt32: function(t) {
            for (var e = 0; this.position < t.byteLength; )
              this.dataUnit[e] = t.getInt32(this.position, !1), e++, this.position += 4;
          },
          computeWcs: function() {
          }
        };
        function Kr(t, e, n, a) {
          this.dataType = 5, this._color$2 = !1, this.isTiledFits = !1, ar.call(this, t, e, n, a);
        }
        Kr.createTiledFits = function(t, e, n) {
          var a = new Kr(t, e, null, n);
          return a.isTiledFits = !0, a;
        };
        var Xf = {
          readFromBin: function(t) {
            ar.prototype.readFromBin.call(this, t), this.numAxis === 3 && this.axisSize[2] === 3 && (this._color$2 = !0);
          },
          readDataUnit: function(t, e) {
            var n = new ia(new Uint8Array(t.buffer));
            switch (n.position = this.position, e) {
              case -64:
                this.dataType = 4, this._readDataUnitFloat64$2(n);
                break;
              case -32:
                this.dataType = 3, this._readDataUnitFloat32$2(n);
                break;
              case 8:
                this.dataType = 0, this._readDataUnitUint8$2(n);
                break;
              case 16:
                this.dataType = 1, this._readDataUnitInt16$2(n);
                break;
              case 32:
                this.dataType = 2, this._readDataUnitInt32$2(n);
                break;
            }
            this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
          },
          _readDataUnitUint8$2: function(t) {
            var e = new Array(this.bufferSize);
            this._dataBuffer$2 = e;
            for (var n = 0; n < this.bufferSize; n++)
              e[n] = t.readByte(), this.fitsProperties.minVal > e[n] && (this.fitsProperties.minVal = e[n]), this.fitsProperties.maxVal < e[n] && (this.fitsProperties.maxVal = e[n]);
          },
          _readDataUnitInt16$2: function(t) {
            var e = new Array(this.bufferSize);
            this._dataBuffer$2 = e;
            for (var n = 0; n < this.bufferSize; n++)
              e[n] = t.readSByte() * 256 + t.readByte(), this.fitsProperties.minVal > e[n] && (this.fitsProperties.minVal = e[n]), this.fitsProperties.maxVal < e[n] && (this.fitsProperties.maxVal = e[n]);
          },
          _readDataUnitInt32$2: function(t) {
            var e = new Array(this.bufferSize);
            this._dataBuffer$2 = e;
            for (var n = 0; n < this.bufferSize; n++)
              e[n] = (t.readSByte() << 24) + (t.readSByte() << 16) + (t.readSByte() << 8) + t.readByte(), this.fitsProperties.minVal > e[n] && (this.fitsProperties.minVal = e[n]), this.fitsProperties.maxVal < e[n] && (this.fitsProperties.maxVal = e[n]);
          },
          _readDataUnitFloat32$2: function(t) {
            var e = new Array(this.bufferSize);
            this._dataBuffer$2 = e;
            for (var n = new Uint8Array(4), a = 0; a < this.bufferSize; a++)
              n[3] = t.readByte(), n[2] = t.readByte(), n[1] = t.readByte(), n[0] = t.readByte(), e[a] = new Float32Array(n.buffer, 0, 1)[0], this.fitsProperties.minVal > e[a] && (this.fitsProperties.minVal = e[a]), this.fitsProperties.maxVal < e[a] && (this.fitsProperties.maxVal = e[a]);
          },
          _readDataUnitFloat64$2: function(t) {
            var e = new Array(this.bufferSize), n = new Uint8Array(8);
            this._dataBuffer$2 = e;
            for (var a = 0; a < this.bufferSize; a++)
              n[7] = t.readByte(), n[6] = t.readByte(), n[5] = t.readByte(), n[4] = t.readByte(), n[3] = t.readByte(), n[2] = t.readByte(), n[1] = t.readByte(), n[0] = t.readByte(), e[a] = new Float64Array(n.buffer, 0, 1)[0], this.fitsProperties.minVal > e[a] && (this.fitsProperties.minVal = e[a]), this.fitsProperties.maxVal < e[a] && (this.fitsProperties.maxVal = e[a]);
          },
          getBitmap: function() {
            return !this.fitsProperties.upperCut && !this.fitsProperties.lowerCut && (this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal), this.getScaledBitmap(this.fitsProperties.lowerCut, this.fitsProperties.upperCut, this.fitsProperties.scaleType, 0, this.fitsProperties.colorMapName);
          },
          getScaledBitmap: function(t, e, n, a, s) {
            var l;
            this.fitsProperties.scaleType = n, this.fitsProperties.lowerCut = t, this.fitsProperties.upperCut = e, this.fitsProperties.colorMapName = s;
            var g = Ce.fromNamedColormap(s);
            switch (n) {
              case 0:
              default:
                l = new Fo(t, e);
                break;
              case 1:
                l = new Bo(t, e);
                break;
              case 2:
                l = new zo(t, e);
                break;
              case 3:
                l = new Oo(t, e);
                break;
              case 4:
                l = new Vo(this, t, e);
                break;
            }
            try {
              switch (this.dataType) {
                case 0:
                  return this._getBitmapByte$2(t, e, l, 0, g);
                case 1:
                  return this.getBitmapShort(t, e, l, 0, g);
                case 2:
                  return this._getBitmapInt$2(t, e, l, 0, g);
                case 3:
                  return this._getBitmapFloat$2(t, e, l, 0, g);
                case 4:
                  return this._getBitmapDouble$2(t, e, l, 0, g);
                case 5:
                default:
                  return ln.create(100, 100);
              }
            } catch {
              return ln.create(10, 10);
            }
          },
          _setPixelWithColorMap$2: function(t, e, n, a, s) {
            if (s == null) {
              t.setPixel(e, n, a, a, a, this.fitsProperties.transparentBlack && !a ? 0 : 255);
              return;
            }
            var l = a / 255;
            if (l !== l) {
              t.setPixel(e, n, 0, 0, 0, 0);
              return;
            }
            var g = s.findClosestColor(l);
            t.setPixel(e, n, r.truncate(g.r), r.truncate(g.g), r.truncate(g.b), this.fitsProperties.transparentBlack && !a ? 0 : 255);
          },
          _getBitmapByte$2: function(t, e, n, a, s) {
            for (var l = this._dataBuffer$2, g = this.axisSize[0], _ = this.axisSize[0] * this.axisSize[1] * a, m = ln.create(this.axisSize[0], this.axisSize[1]), b = 0; b < this.axisSize[1]; b++)
              for (var y = this.axisSize[1] - 1 - b, M = 0; M < this.axisSize[0]; M++)
                if (this._color$2) {
                  var A = l[M + y * g], R = l[M + y * g + _], F = l[M + y * g + _ * 2];
                  if (this.fitsProperties.containsBlanks && A === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var O = n.map(A), B = n.map(R), H = n.map(F);
                    m.setPixel(M, b, O, B, H, 255);
                  }
                } else {
                  var K = l[M + y * g + _];
                  if (this.fitsProperties.containsBlanks && K === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var J = n.map(K);
                    this._setPixelWithColorMap$2(m, M, b, J, s);
                  }
                }
            return m;
          },
          _getBitmapDouble$2: function(t, e, n, a, s) {
            for (var l = this._dataBuffer$2, g = this.axisSize[0], _ = this.axisSize[0] * this.axisSize[1] * a, m = ln.create(this.axisSize[0], this.axisSize[1]), b = 0; b < this.axisSize[1]; b++)
              for (var y = this.axisSize[1] - 1 - b, M = 0; M < this.axisSize[0]; M++)
                if (this._color$2) {
                  var A = l[M + y * g], R = l[M + y * g + _], F = l[M + y * g + _ * 2];
                  if (this.fitsProperties.containsBlanks && A === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var O = n.map(A), B = n.map(R), H = n.map(F);
                    m.setPixel(M, b, O, B, H, 255);
                  }
                } else {
                  var K = l[M + y * g + _];
                  if (this.fitsProperties.containsBlanks && K === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var J = n.map(K);
                    this._setPixelWithColorMap$2(m, M, b, J, s);
                  }
                }
            return m;
          },
          _getBitmapFloat$2: function(t, e, n, a, s) {
            for (var l = this._dataBuffer$2, g = this.axisSize[0], _ = this.axisSize[0] * this.axisSize[1] * a, m = ln.create(this.axisSize[0], this.axisSize[1]), b = 0; b < this.axisSize[1]; b++)
              for (var y = this.axisSize[1] - 1 - b, M = 0; M < this.axisSize[0]; M++)
                if (this._color$2) {
                  var A = l[M + y * g], R = l[M + y * g + _], F = l[M + y * g + _ * 2];
                  if (this.fitsProperties.containsBlanks && A === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var O = n.map(A), B = n.map(R), H = n.map(F);
                    m.setPixel(M, b, O, B, H, 255);
                  }
                } else {
                  var K = l[M + y * g + _];
                  if (this.fitsProperties.containsBlanks && K === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var J = n.map(K);
                    this._setPixelWithColorMap$2(m, M, b, J, s);
                  }
                }
            return m;
          },
          _getBitmapInt$2: function(t, e, n, a, s) {
            for (var l = this._dataBuffer$2, g = this.axisSize[0], _ = this.axisSize[0] * this.axisSize[1] * a, m = ln.create(this.axisSize[0], this.axisSize[1]), b = 0; b < this.axisSize[1]; b++)
              for (var y = this.axisSize[1] - 1 - b, M = 0; M < this.axisSize[0]; M++)
                if (this._color$2) {
                  var A = l[M + y * g], R = l[M + y * g + _], F = l[M + y * g + _ * 2];
                  if (this.fitsProperties.containsBlanks && A === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var O = n.map(A), B = n.map(R), H = n.map(F);
                    m.setPixel(M, b, O, B, H, 255);
                  }
                } else {
                  var K = l[M + y * g + _];
                  if (this.fitsProperties.containsBlanks && K === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var J = n.map(K);
                    this._setPixelWithColorMap$2(m, M, b, J, s);
                  }
                }
            return m;
          },
          getBitmapShort: function(t, e, n, a, s) {
            for (var l = this._dataBuffer$2, g = this.axisSize[0], _ = this.axisSize[0] * this.axisSize[1] * a, m = ln.create(this.axisSize[0], this.axisSize[1]), b = 0; b < this.axisSize[1]; b++)
              for (var y = this.axisSize[1] - 1 - b, M = 0; M < this.axisSize[0]; M++)
                if (this._color$2) {
                  var A = l[M + y * g], R = l[M + y * g + _], F = l[M + y * g + _ * 2];
                  if (this.fitsProperties.containsBlanks && A === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var O = n.map(A), B = n.map(R), H = n.map(F);
                    m.setPixel(M, b, O, B, H, 255);
                  }
                } else {
                  var K = l[M + y * g + _];
                  if (this.fitsProperties.containsBlanks && K === this.fitsProperties.blankValue)
                    m.setPixel(M, b, 0, 0, 0, 0);
                  else {
                    var J = n.map(K);
                    this._setPixelWithColorMap$2(m, M, b, J, s);
                  }
                }
            return m;
          },
          computeWcs: function() {
            this.isTiledFits || ar.prototype.computeWcs.call(this);
          },
          populateHistogram: function(t) {
            switch (this.dataType) {
              case 0:
                this._populateHistogramByte$2(t);
                break;
              case 1:
                this._populateHistogramInt16$2(t);
                break;
              case 2:
                this._populateHistogramInt32$2(t);
                break;
              case 3:
                this._populateHistogramFloat$2(t);
                break;
              case 4:
                this._populateHistogramDouble$2(t);
                break;
            }
          },
          _populateHistogramDouble$2: function(t) {
            for (var e = t.length, n = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              l !== Number.NaN && t[Math.min(e - 1, r.truncate((l - this.fitsProperties.minVal) / a))]++;
            }
          },
          _populateHistogramFloat$2: function(t) {
            for (var e = t.length, n = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              l !== ar.naN && t[Math.min(e - 1, r.truncate((l - this.fitsProperties.minVal) / a))]++;
            }
          },
          _populateHistogramInt32$2: function(t) {
            for (var e = t.length, n = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              t[Math.min(e - 1, r.truncate((l - this.fitsProperties.minVal) / a))]++;
            }
          },
          _populateHistogramInt16$2: function(t) {
            for (var e = t.length, n = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              t[Math.min(e - 1, r.truncate((l - this.fitsProperties.minVal) / a))]++;
            }
          },
          _populateHistogramByte$2: function(t) {
            for (var e = t.length, n = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = r.enumerate(n); s.moveNext(); ) {
              var l = s.current;
              t[Math.min(e - 1, r.truncate((l - this.fitsProperties.minVal) / a))]++;
            }
          }
        };
        function ir() {
          Ne.call(this), this.id = ir.issGuid;
        }
        ir.loadBackground = function() {
          if (!(ir._loading$2 || Z.singleton.freestandingMode)) {
            ir._loading$2 = !0;
            var t = ze.singleton.coreStaticUrl("data/iss.wtt");
            ir._doc$2 = jr.fromUrlRaw(t, function() {
              ir.createSpaceStation();
            });
          }
        }, ir.createSpaceStation = function() {
          ir._doc$2.set_id("28016047-97a9-4b33-a226-cd820262a151");
          var t = "0c10ae54-b6da-4282-bfda-f34562d403bc.3ds", e = new cr(ir._doc$2, t, !0, !1, !0, Pt.get_white());
          e != null && (e.issLayer = !0, ir._issmodel$2 = e);
        };
        var Yf = {
          draw: function(t, e, n) {
            if (this.object3d == null && ir._issmodel$2 == null && !ir._loading$2) {
              var a = tt.multiplyMatrix(t.get_world(), t.get_view()), s = a.transform($.get_empty()), l = Math.sqrt(a.get_m11() * a.get_m11() + a.get_m22() * a.get_m22() + a.get_m33() * a.get_m33()), g = s.length(), _ = l, m = r.truncate(t.height), b = t.get_projection().get_m11(), y = t.get_projection().get_m34(), M = t.get_projection().get_m44(), A = Math.abs(y) * g + M, R = b / A * m, F = _ * R;
              F > 0.5 && ir.loadBackground();
            }
            return this.object3d = ir._issmodel$2, Ne.prototype.draw.call(this, t, e, n);
          },
          getPrimaryUI: function() {
            return null;
          },
          addFilesToCabinet: function(t) {
          },
          loadData: function(t, e) {
          },
          cleanUp: function() {
          }
        };
        function Ws() {
          this._addedTiles$2 = {}, Ui.call(this);
        }
        var jf = {
          addTileRows: function(t, e) {
            if (!r.keyExists(this._addedTiles$2, t)) {
              for (var n = r.enumerate(e); n.moveNext(); ) {
                var a = n.current;
                this.get__table().rows.push(a);
              }
              this.dirty = !0, this._addedTiles$2[t] = !0;
            }
          },
          removeTileRows: function(t, e) {
            if (r.keyExists(this._addedTiles$2, t)) {
              for (var n = r.enumerate(e); n.moveNext(); ) {
                var a = n.current;
                r.remove(this.get__table().rows, a);
              }
              this.dirty = !0, delete this._addedTiles$2[t];
            }
          },
          cleanUp: function() {
            Ui.prototype.cleanUp.call(this), r.clearKeys(this._addedTiles$2), this.get__table().rows.length = 0;
          }
        };
        function Zo(t) {
          r.EventArgs.call(this), this.set_caption(t);
        }
        var Zf = {
          get_caption: function() {
            return this._caption$2;
          },
          set_caption: function(t) {
            return this._caption$2 = t, t;
          }
        };
        function Js(t, e, n) {
          this._ra$2 = 0, this._dec$2 = 0, this._zoom$2 = 0, r.EventArgs.call(this), this.set_RA(t * 15), this.set_dec(e), this.set_zoom(n / 6);
        }
        var Kf = {
          get_RA: function() {
            return this._ra$2;
          },
          set_RA: function(t) {
            return this._ra$2 = t, t;
          },
          get_dec: function() {
            return this._dec$2;
          },
          set_dec: function(t) {
            return this._dec$2 = t, t;
          },
          get_zoom: function() {
            return this._zoom$2;
          },
          set_zoom: function(t) {
            return this._zoom$2 = t, t;
          }
        };
        function Ko(t, e, n) {
          this._ra$2 = 0, this._dec$2 = 0, r.EventArgs.call(this), this.set_RA(t * 15), this.set_dec(e), this.set_id(n);
        }
        var Wf = {
          get_RA: function() {
            return this._ra$2;
          },
          set_RA: function(t) {
            return this._ra$2 = t, t;
          },
          get_dec: function() {
            return this._dec$2;
          },
          set_dec: function(t) {
            return this._dec$2 = t, t;
          },
          get_id: function() {
            return this._id$2;
          },
          set_id: function(t) {
            return this._id$2 = t, t;
          }
        };
        function Wo(t) {
          r.EventArgs.call(this), this._url$2 = t;
        }
        var Jf = {
          get_url: function() {
            return this._url$2;
          },
          set_url: function(t) {
            return this._url$2 = t, t;
          }
        };
        function Jo(t, e, n, a, s) {
          this.pixelCenterX = 0, this.pixelCenterY = 0, this.scaleX = 0.01, this.scaleY = 0.01, this.height = 0, this.width = 0, _s.call(this, t, e, n, a, s), this.pixelCenterX = a.get_offsetX(), this.pixelCenterY = a.get_offsetY(), this.scaleX = -(this.scaleY = a.get_baseTileDegrees()), a.get_bottomsUp() && (this.scaleX = -this.scaleX), this.sphereCenter = this.geoTo3dTan(0, 0), this.radius = 1.25, this.computeBoundingSphere();
        }
        var Qf = {
          getLatLngEdges: function() {
            var t = new Vs(), e = r.safeCast(this.dataset.get_wcsImage(), is);
            return e != null && ti.useGl ? ti.useGlVersion2 ? (this.width = e.get_sizeX(), this.height = e.get_sizeY()) : (this.height = this.bmp.height, this.width = this.bmp.width, this.bmp.height !== e.get_sizeY() && (this.pixelCenterY += this.bmp.height - e.get_sizeY())) : this.texture != null ? (this.height = this.texture.naturalHeight, this.width = this.texture.naturalWidth) : (this.height = 256, this.width = 256), t.latMin = 0 + this.scaleY * (this.height - this.pixelCenterY), t.latMax = 0 - this.scaleY * this.pixelCenterY, t.lngMin = 0 + this.scaleX * this.pixelCenterX, t.lngMax = 0 - this.scaleX * (this.width - this.pixelCenterX), t;
          }
        }, t_ = r.module(
          "wwtlib",
          {
            IFolder: [xn],
            Sprite2d: [Kn, Nu, null],
            ViewMoverSlew: [sn, Uu, null, It],
            VertexPosition: [Ns, oc, null],
            MainView: [Co, null, null],
            MinorPlanets: [Ge, yc, null],
            TileCache: [Ut, Vc, null],
            DistanceCalc: [wn, Uc, null],
            Triangle: [pi, gh, null],
            PositionTextureVertexBuffer: [wa, af, rr],
            KeplerVertexBuffer: [us, lf, rr],
            TimeSeriesLineVertexBuffer: [cs, uf, rr],
            TimeSeriesPointVertexBuffer: [Do, cf, rr],
            PositionColoredVertexBuffer: [No, hf, rr],
            PositionColoredTexturedVertexBuffer: [ff, _f, rr],
            LayerCollection: [Sf, Cf, ai]
          },
          {
            DAY_OF_WEEK: u,
            EO: d,
            ScaleTypes: v,
            URLRewriteMode: w,
            SolarSystemObjects: C,
            InterpolationType: L,
            PointType: E,
            LocationHint: V,
            FolderGroup: N,
            FolderRefreshType: z,
            FolderType: st,
            ThumbnailSize: et,
            CullMode: ct,
            PointScaleTypes: Ct,
            ProjectionType: At,
            ImageSetType: qt,
            BandPass: vt,
            Classification: _t,
            DataTypes: Et,
            AltUnits: ft,
            FadeType: wt,
            ReferenceFrames: Zt,
            ReferenceFrameTypes: Ot,
            CoordinatesTypes: bt,
            AltTypes: Xt,
            MarkerMixes: ie,
            ColorMaps: Yt,
            PlotTypes: ae,
            MarkerScales: Re,
            RAUnits: me,
            Primitives: Fi,
            Alignment: ei,
            StockSkyOverlayTypes: si,
            OverlayAnchor: $e,
            AudioType: Ai,
            ShapeType: ki,
            LoopTypes: Hr,
            SelectionAnchor: gr,
            TextBorderStyle: Fn,
            UserLevel: Ca,
            TransitionType: la,
            Keys: Rr,
            DialogResult: Mn,
            Formatting: Bn,
            StateType: Or,
            IThumbnail: [$r],
            IPlace: [rt],
            IUiController: [ht],
            IViewMover: [It],
            IUIServicesCallbacks: [Bt],
            ISettings: [Nt],
            IUndoStep: [Jt],
            Imports: [le, null, null],
            GFX: [S, null, null],
            ABR: [te, Vt, null],
            ACFT: [Kt, be, null],
            ASEP: [Te, Ue, null],
            COR: [Le, Ci, null],
            C3D: [pe, Ri, null],
            CT: [x, Vr, null],
            CalD: [dn, Jr, null],
            DT: [ui, mr, null],
            DYT: [pr, zn, null],
            CAAEarth: [ii, Ga, null],
            VSC: [o, ua, null],
            CAAEclipticalElementDetails: [On, qa, null],
            CAAEclipticalElements: [Ta, Xa, null],
            EPO: [re, Ya, null],
            EOE: [Vn, ja, null],
            EPD: [Ma, Un, null],
            EOD: [Za, bs, null],
            ELL: [hi, ys, null],
            EOT: [xa, Ln, null],
            CAAFK5: [tr, Hn, null],
            GMD: [Gn, Ss, null],
            GMDS: [La, Ka, null],
            GM: [$i, Cs, null],
            CAAGlobe: [Dr, Ts, null],
            IFR: [Bi, T, null],
            INTP: [k, I, null],
            CAAJupiter: [Y, at, null],
            CAAKepler: [nt, Tt, null],
            CAAMars: [Rt, Ae, null],
            CAAMercury: [Wt, Fe, null],
            CAAMoon: [Se, vr, null],
            MoonCoefficient1: [Lt, Gr, null],
            MoonCoefficient2: [ye, ca, null],
            MIFR: [Ur, Ms, null],
            CAAMoonNodes: [Aa, xs, null],
            CAAMoonPerigeeApogee: [Gi, qn, null],
            MPAC: [dt, zi, null],
            CAAMoonPhases: [Ar, Xn, null],
            CAANeptune: [br, Ls, null],
            CAANutation: [ci, Yn, null],
            NUC: [fe, Qo, null],
            CAATopocentricEclipticDetails: [ro, tl, null],
            CAAParallax: [gn, el, null],
            CAAPhysicalJupiterDetails: [As, il, null],
            CAAPhysicalJupiter: [ks, rl, null],
            CAAPhysicalMarsDetails: [no, nl, null],
            CAAPhysicalMars: [ao, al, null],
            CAAPhysicalSunDetails: [so, sl, null],
            CAAPhysicalSun: [Is, ol, null],
            CAAPluto: [Qr, ll, null],
            PlutoCoefficient1: [Qe, ul, null],
            PlutoCoefficient2: [kt, cl, null],
            CAAPrecession: [jn, hl, null],
            CAARiseTransitSetDetails: [oo, fl, null],
            CAARiseTransitSet: [Ps, _l, null],
            CAASaturn: [Nr, dl, null],
            CAASaturnRingDetails: [lo, gl, null],
            CAASaturnRings: [uo, ml, null],
            CAASidereal: [An, pl, null],
            CAAStellarMagnitudes: [ka, vl, null],
            CAASun: [fi, wl, null],
            CAAUranus: [tn, bl, null],
            CAAVenus: [en, yl, null],
            VideoOutputType: [co, Sl, null],
            FitsProperties: [ho, Cl, null],
            HipsProperties: [Wa, Tl, null],
            FastMath: [Be, Ml, null],
            HealpixTables: [qr, xl, null],
            Xyf: [Ia, Ll, null],
            HealpixUtils: [rn, Al, null],
            Hploc: [Pa, kl, null],
            Pointing: [Es, Il, null],
            URLHelpers: [ze, Pl, null],
            Annotation: [ve, El, null],
            AstroRaDec: [Zn, Rl, null],
            RiseSetDetails: [fo, $l, null],
            AstroCalc: [ge, Dl, null],
            BlendState: [mn, Nl, null],
            CameraParameters: [_i, Fl, null],
            Color: [j, Bl, null],
            Colors: [Pt, zl, null],
            Constellations: [jt, Ol, null],
            Lineset: [Rs, Vl, null],
            Linepoint: [_o, Ul, null],
            ConstellationFilter: [ke, Hl, null],
            PositionTexture: [Ht, Gl, null],
            PositionColoredTextured: [Ye, ql, null],
            PositionColored: [Ja, Xl, null],
            PositionNormalTexturedTangent: [go, Yl, null],
            Vector3d: [$, jl, null],
            Vector2d: [Mt, Zl, null],
            Matrix3d: [tt, Kl, null],
            Matrix2d: [Ti, Wl, null],
            DoubleUtilities: [Fr, null, null],
            PlaneD: [mo, Jl, null],
            Vector4d: [Qa, Ql, null],
            PositionNormalTexturedX2: [nn, tu, null],
            PositionNormalTextured: [Cr, eu, null],
            SphereHull: [ha, iu, null],
            ConvexHull: [kn, ru, null],
            Folder: [pn, nu, null, $r],
            FolderBrowser: [De, au, null],
            FolderUp: [$s, su, null, $r],
            ShortIndexBuffer: [ou, lu, null],
            IndexBuffer: [po, uu, null, r.IDisposable],
            VertexBufferBase: [rr, cu, null, r.IDisposable],
            Dates: [ni, hu, null],
            SimpleLineList: [an, fu, null],
            OrbitLineList: [vo, _u, null],
            LineList: [fa, du, null],
            TriangleList: [In, gu, null],
            TriangleFanList: [wo, mu, null],
            PointList: [Xr, pu, null],
            TimeSeriesLineVertex: [_a, vu, null],
            TimeSeriesPointVertex: [Ea, wu, null],
            SimpleLineShader: [oi, bu, null],
            SimpleLineShader2D: [bi, yu, null],
            OrbitLineShader: [je, Su, null],
            LineShaderNormalDates: [Ie, Cu, null],
            TimeSeriesPointSpriteShader: [se, Tu, null],
            KeplerPointSpriteShader: [Gt, Mu, null],
            EllipseShader: [Pe, xu, null],
            ModelShader: [ce, Lu, null],
            ModelShaderTan: [de, Au, null],
            TileShader: [ne, ku, null],
            FitsShader: [zt, Iu, null],
            ImageShader: [Oe, Pu, null],
            ImageShader2: [He, Eu, null],
            SpriteShader: [Ve, Ru, null],
            ShapeSpriteShader: [Ze, $u, null],
            TextShader: [Ke, Du, null],
            Tessellator: [da, Fu, null],
            Texture: [di, Bu, null, r.IDisposable],
            Grids: [W, zu, null],
            Imageset: [Mi, Ou, null, $r],
            ViewMoverKenBurnsStyle: [Ds, Vu, null, It],
            KeplerVertex: [ur, Hu, null],
            ScaleMap: [Yr, Gu, null],
            ColorMapContainer: [Ce, qu, null],
            Layer: [ai, Xu, null],
            DomainValue: [Yu, ju, null],
            LayerManager: [P, Zu, null],
            LayerMap: [xi, Ku, null],
            SkyOverlays: [bo, Wu, null],
            GroundOverlayLayer: [Ju, Qu, null],
            FrameTarget: [yo, tc, null],
            LayerUI: [Pn, ec, null],
            LayerUIMenuItem: [ic, rc, null],
            LayerUITreeNode: [ts, nc, null],
            Group: [Ra, ac, null],
            Mesh: [En, sc, null, r.IDisposable],
            Object3d: [cr, lc, null],
            ObjectNode: [Wn, uc, null],
            Orbit: [ga, cc, null],
            EllipseRenderer: [Zi, hc, null],
            ReferenceFrame: [Ki, fc, null],
            KmlCoordinate: [Fs, _c, null],
            KmlLineList: [Bs, dc, null],
            PushPin: [hr, gc, null],
            Table: [$a, mc, null],
            VoTable: [Jn, pc, null],
            VoRow: [So, vc, null],
            VoColumn: [es, wc, null],
            WcsImage: [is, bc, null],
            Place: [fr, Sc, null, $r, rt],
            KeplerianElements: [To, Cc, null],
            BodyAngles: [Wi, Tc, null],
            Planets: [D, Mc, null],
            Material: [Qn, xc, null],
            InViewReturnMessage: [zs, Lc, null],
            RenderContext: [ti, Ac, null],
            RenderTriangle: [Me, kc, null],
            ScriptInterface: [on, Ic, null],
            Settings: [X, Pc, null, Nt],
            Text3dBatch: [vn, Ec, null],
            GlyphItem: [ta, Rc, null],
            GlyphCache: [Tr, $c, null, r.IDisposable],
            Text3d: [nr, Dc, null],
            SpaceTimeController: [Q, Nc, null],
            Star: [Os, Fc, null],
            Galaxy: [ma, Bc, null],
            LatLngEdges: [Vs, zc, null],
            Tile: [G, Oc, null],
            Tour: [Da, Hc, null, $r],
            FileEntry: [Us, Gc, null],
            FileCabinet: [pa, qc, null],
            SettingParameter: [Na, Xc, null],
            Overlay: [gi, Yc, null],
            Selection: [mi, jc, null],
            TextObject: [Rn, Zc, null],
            TourDocument: [jr, Kc, null],
            TourEditTab: [Mo, Wc, null],
            TourEditor: [Oi, Jc, null, ht],
            OverlayList: [Vi, Qc, null],
            TourEdit: [Br, th, null],
            SoundEditor: [Hs, eh, null],
            TourStopList: [xo, ih, null],
            TimeLine: [Fa, rh, null],
            TourPlayer: [qe, nh, null, ht],
            MasterTime: [Lo, ah, null],
            TourStop: [Mr, sh, null, Nt],
            LayerInfo: [Gs, oh, null],
            UndoTourStopChange: [li, lh, null, Jt],
            Undo: [oe, uh, null],
            UndoStep: [ch, hh, null, Jt],
            UndoTourSlidelistChange: [ea, fh, null, Jt],
            UndoTourPropertiesChange: [_h, dh, null, Jt],
            UiTools: [yi, mh, null],
            Util: [xt, ph, null],
            Rectangle: [Ji, vh, null],
            Guid: [er, wh, null],
            Enums: [we, bh, null],
            Mouse: [Ii, null, null],
            Language: [pt, yh, null],
            Cursor: [Di, Sh, null],
            Cursors: [wi, Ch, null],
            SelectLink: [qs, Th, null],
            PopupVolume: [Ao, Mh, null],
            PopupColorPicker: [xh, Lh, null],
            OverlayProperties: [ko, Ah, null],
            BinaryReader: [ia, kh, null],
            Bitmap: [ln, Ih, null],
            ColorPicker: [Xs, Ph, null],
            ContextMenuStrip: [un, Eh, null],
            ToolStripMenuItem: [$t, Rh, null],
            TagMe: [$h, Dh, null],
            Dialog: [bn, Nh, null],
            Histogram: [$n, Fh, null],
            SimpleInput: [Ba, Bh, null],
            XmlTextWriter: [ra, zh, null],
            VizLayer: [Io, Oh, null],
            DataItem: [Ys, Vh, null],
            WebFile: [_r, Uh, null],
            FolderDownloadAction: [Po, Hh, null],
            Wtml: [va, Gh, null],
            WWTControl: [Z, qh, null],
            WWTControlBuilder: [Xh, Yh, null],
            WWTElementEvent: [js, jh, null],
            Coordinates: [U, Zh, null],
            Fxyf: [Qi, Kh, qr],
            HealpixTile: [rs, Wh, G],
            FitsImage: [ar, Jh, is],
            Circle: [Eo, Qh, ve],
            Poly: [Ro, tf, ve],
            PolyLine: [$o, ef, ve],
            EquirectangularTile: [ns, rf, G],
            PositionVertexBuffer: [as, nf, rr],
            PositionNormalTexturedVertexBuffer: [os, sf, rr],
            PositionNormalTexturedTangentVertexBuffer: [ls, of, rr],
            ScaleLinear: [Fo, df, Yr],
            ScaleLog: [Bo, gf, Yr],
            ScalePow: [zo, mf, Yr],
            ScaleSqrt: [Oo, pf, Yr],
            HistogramEqualization: [Vo, vf, Yr],
            GreatCirlceRouteLayer: [za, wf, ai],
            GridLayer: [Zs, bf, ai],
            ImageSetLayer: [qi, yf, ai],
            Object3dLayer: [Ne, Tf, ai, ht],
            Object3dLayerUI: [Uo, Mf, Pn],
            OrbitLayer: [Ks, xf, ai],
            OrbitLayerUI: [Ho, Lf, Pn],
            SpreadSheetLayer: [Ui, Af, ai],
            TimeSeriesLayer: [hs, kf, ai],
            VoTableLayer: [kr, If, ai],
            MercatorTile: [We, Pf, G],
            PlotTile: [fs, Ef, G],
            TangentTile: [_s, Rf, G],
            ToastTile: [Pi, $f, G],
            BitmapOverlay: [na, Df, gi],
            TextOverlay: [Zr, Nf, gi],
            ShapeOverlay: [aa, Ff, gi],
            AudioOverlay: [Oa, Bf, gi],
            FlipbookOverlay: [ba, zf, gi],
            ToolStripSeparator: [sr, Of, $t],
            FrameWizard: [Go, Vf, bn],
            ReferenceFrameProps: [qo, Uf, bn],
            GreatCircleDialog: [Xo, Hf, bn],
            DataVizWizard: [Yo, Gf, bn],
            FitsImageTile: [jo, qf, ar],
            FitsImageJs: [Kr, Xf, ar],
            ISSLayer: [ir, Yf, Ne],
            CatalogSpreadSheetLayer: [Ws, jf, Ui],
            SlideChangedEventArgs: [Zo, Zf, r.EventArgs],
            ArrivedEventArgs: [Js, Kf, r.EventArgs],
            AnnotationClickEventArgs: [Ko, Wf, r.EventArgs],
            CollectionLoadedEventArgs: [Wo, Jf, r.EventArgs],
            SkyImageTile: [Jo, Qf, _s]
          }
        );
        let Qs;
        typeof window < "u" && "pako" in window ? Qs = window.pako : Promise.resolve().then(() => index$2).then(function(t) {
          Qs = t;
        });
        let to;
        return typeof window < "u" && "uuid" in window ? to = window.uuid : Promise.resolve().then(() => index).then(function(t) {
          to = t;
        }), S.g_ACft = [new Kt(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1719914, -2, -25, 0, 25, -13, 1578089, 156, 10, 32, 684185, -358), new Kt(0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6434, 141, 28007, -107, 25697, -95, -5904, -130, 11141, -48, -2559, -55), new Kt(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 715, 0, 0, 0, 6, 0, -657, 0, -15, 0, -282, 0), new Kt(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 715, 0, 0, 0, 0, 0, -656, 0, 0, 0, -285, 0), new Kt(0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 486, -5, -236, -4, -216, -4, -446, 5, -94, 0, -193, 0), new Kt(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 2, 0, -147, 0, -6, 0, -61, 0), new Kt(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, -59, 0), new Kt(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 39, 0, 0, 0, 0, 0, -36, 0, 0, 0, -16, 0), new Kt(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 33, 0, -10, 0, -9, 0, -30, 0, -5, 0, -13, 0), new Kt(0, 2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 31, 0, 1, 0, 1, 0, -28, 0, 0, 0, -12, 0), new Kt(0, 3, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, 25, 0, 8, 0, 11, 0, 3, 0), new Kt(0, 5, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, -25, 0, -8, 0, -11, 0, -3, 0), new Kt(2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, -19, 0, 0, 0, -8, 0), new Kt(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, 0, 17, 0, 0, 0, 8, 0), new Kt(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, -16, 0, 0, 0, -7, 0), new Kt(0, 1, 0, -2, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 1, 0, 7, 0), new Kt(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, -15, 0, -3, 0, -6, 0), new Kt(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, -1, 0, -1, 0, -10, 0, -1, 0, -5, 0), new Kt(2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, -10, 0, 0, 0, -4, 0, 0, 0), new Kt(0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, -11, 0, -2, 0, -2, 0, 9, 0, -1, 0, 4, 0), new Kt(0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -8, 0, -8, 0, 6, 0, -3, 0, 3, 0), new Kt(0, 3, 0, -2, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 9, 0, 0, 0, 4, 0), new Kt(1, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -9, 0, 0, 0, -4, 0), new Kt(2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -8, 0, 0, 0, -4, 0), new Kt(0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, -8, 0, 0, 0, -3, 0, 0, 0), new Kt(2, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 8, 0, 0, 0, 3, 0, 0, 0), new Kt(0, 3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, -8, 0, 0, 0, -3, 0), new Kt(0, 0, 0, 0, 0, 0, 0, 1, 2, -1, 0, 8, 0, 0, 0, 0, 0, -7, 0, 0, 0, -3, 0), new Kt(8, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, -6, 0, 4, 0, -3, 0, 2, 0), new Kt(8, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, 6, 0, -4, 0, 3, 0, -2, 0), new Kt(0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, -5, 0, -4, 0, 5, 0, -2, 0, 2, 0), new Kt(3, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -2, 0, -7, 0, 1, 0, -4, 0), new Kt(0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 4, 0, -6, 0, -5, 0, -4, 0, -2, 0, -2, 0), new Kt(3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -6, 0, 0, 0, -3, 0, 0, 0), new Kt(0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, -5, 0, -4, 0, -5, 0, -2, 0, -2, 0), new Kt(0, 0, 0, 0, 0, 0, 0, 1, -2, 0, 0, 5, 0, 0, 0, 0, 0, -5, 0, 0, 0, -2, 0)], S.deltaTTable = [121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51, 48, 46, 44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14, 12, 11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12, 11.9, 11.6, 11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6, 5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7, 1.4, -1.2, -2.8, -3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6, -6.3, -6.5, -6.2, -4.7, -2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16, 18.2, 20.2, 21.2, 22.4, 23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7, 24, 24.3, 25.3, 26.2, 27.3, 28.2, 29.1, 30, 30.7, 31.4, 32.2, 33.1, 34, 35, 36.5, 38.3, 40.18, 42.2, 44.5, 46.5, 48.5, 50.54, 52.2, 53.8, 54.9, 55.8, 56.86, 58.31, 59.99, 61.63, 62.97], S.g_L0EarthCoefficients = [new o(175347046, 0, 0), new o(3341656, 4.6692568, 6283.07585), new o(34894, 4.6261, 12566.1517), new o(3497, 2.7441, 5753.3849), new o(3418, 2.8289, 3.5231), new o(3136, 3.6277, 77713.7715), new o(2676, 4.4181, 7860.4194), new o(2343, 6.1352, 3930.2097), new o(1324, 0.7425, 11506.7698), new o(1273, 2.0371, 529.691), new o(1199, 1.1096, 1577.3435), new o(990, 5.233, 5884.927), new o(902, 2.045, 26.298), new o(857, 3.508, 398.149), new o(780, 1.179, 5223.694), new o(753, 2.533, 5507.553), new o(505, 4.583, 18849.228), new o(492, 4.205, 775.523), new o(357, 2.92, 0.067), new o(317, 5.849, 11790.629), new o(284, 1.899, 796.288), new o(271, 0.315, 10977.079), new o(243, 0.345, 5486.778), new o(206, 4.806, 2544.314), new o(205, 1.869, 5573.143), new o(202, 2.458, 6069.777), new o(156, 0.833, 213.299), new o(132, 3.411, 2942.463), new o(126, 1.083, 20.775), new o(115, 0.645, 0.98), new o(103, 0.636, 4694.003), new o(102, 0.976, 15720.839), new o(102, 4.267, 7.114), new o(99, 6.21, 2146.17), new o(98, 0.68, 155.42), new o(86, 5.98, 161000.69), new o(85, 1.3, 6275.96), new o(85, 3.67, 71430.7), new o(80, 1.81, 17260.15), new o(79, 3.04, 12036.46), new o(75, 1.76, 5088.63), new o(74, 3.5, 3154.69), new o(74, 4.68, 801.82), new o(70, 0.83, 9437.76), new o(62, 3.98, 8827.39), new o(61, 1.82, 7084.9), new o(57, 2.78, 6286.6), new o(56, 4.39, 14143.5), new o(56, 3.47, 6279.55), new o(52, 0.19, 12139.55), new o(52, 1.33, 1748.02), new o(51, 0.28, 5856.48), new o(49, 0.49, 1194.45), new o(41, 5.37, 8429.24), new o(41, 2.4, 19651.05), new o(39, 6.17, 10447.39), new o(37, 6.04, 10213.29), new o(37, 2.57, 1059.38), new o(36, 1.71, 2352.87), new o(36, 1.78, 6812.77), new o(33, 0.59, 17789.85), new o(30, 0.44, 83996.85), new o(30, 2.74, 1349.87), new o(25, 3.16, 4690.48)], S.g_L1EarthCoefficients = [new o(628331966747, 0, 0), new o(206059, 2.678235, 6283.07585), new o(4303, 2.6351, 12566.1517), new o(425, 1.59, 3.523), new o(119, 5.796, 26.298), new o(109, 2.966, 1577.344), new o(93, 2.59, 18849.23), new o(72, 1.14, 529.69), new o(68, 1.87, 398.15), new o(67, 4.41, 5507.55), new o(59, 2.89, 5223.69), new o(56, 2.17, 155.42), new o(45, 0.4, 796.3), new o(36, 0.47, 775.52), new o(29, 2.65, 7.11), new o(21, 5.43, 0.98), new o(19, 1.85, 5486.78), new o(19, 4.97, 213.3), new o(17, 2.99, 6275.96), new o(16, 0.03, 2544.31), new o(16, 1.43, 2146.17), new o(15, 1.21, 10977.08), new o(12, 2.83, 1748.02), new o(12, 3.26, 5088.63), new o(12, 5.27, 1194.45), new o(12, 2.08, 4694), new o(11, 0.77, 553.57), new o(10, 1.3, 6286.6), new o(10, 4.24, 1349.87), new o(9, 2.7, 242.73), new o(9, 5.64, 951.72), new o(8, 5.3, 2352.87), new o(6, 2.65, 9437.76), new o(6, 4.67, 4690.48)], S.g_L2EarthCoefficients = [new o(52919, 0, 0), new o(8720, 1.0721, 6283.0758), new o(309, 0.867, 12566.152), new o(27, 0.05, 3.52), new o(16, 5.19, 26.3), new o(16, 3.68, 155.42), new o(10, 0.76, 18849.23), new o(9, 2.06, 77713.77), new o(7, 0.83, 775.52), new o(5, 4.66, 1577.34), new o(4, 1.03, 7.11), new o(4, 3.44, 5573.14), new o(3, 5.14, 796.3), new o(3, 6.05, 5507.55), new o(3, 1.19, 242.73), new o(3, 6.12, 529.69), new o(3, 0.31, 398.15), new o(3, 2.28, 553.57), new o(2, 4.38, 5223.69), new o(2, 3.75, 0.98)], S.g_L3EarthCoefficients = [new o(289, 5.844, 6283.076), new o(35, 0, 0), new o(17, 5.49, 12566.15), new o(3, 5.2, 155.42), new o(1, 4.72, 3.52), new o(1, 5.3, 18849.23), new o(1, 5.97, 242.73)], S.g_L4EarthCoefficients = [new o(114, 3.142, 0), new o(8, 4.13, 6283.08), new o(1, 3.84, 12566.15)], S.g_L5EarthCoefficients = [new o(1, 3.14, 0)], S.g_B0EarthCoefficients = [new o(280, 3.199, 84334.662), new o(102, 5.422, 5507.553), new o(80, 3.88, 5223.69), new o(44, 3.7, 2352.87), new o(32, 4, 1577.34)], S.g_B1EarthCoefficients = [new o(9, 3.9, 5507.55), new o(6, 1.73, 5223.69)], S.g_B2EarthCoefficients = [new o(22378, 3.38509, 10213.28555), new o(282, 0, 0), new o(173, 5.256, 20426.571), new o(27, 3.87, 30639.86)], S.g_B3EarthCoefficients = [new o(647, 4.992, 10213.286), new o(20, 3.14, 0), new o(6, 0.77, 20426.57), new o(3, 5.44, 30639.86)], S.g_B4EarthCoefficients = [new o(14, 0.32, 10213.29)], S.g_R0EarthCoefficients = [new o(100013989, 0, 0), new o(1670700, 3.0984635, 6283.07585), new o(13956, 3.05525, 12566.1517), new o(3084, 5.1985, 77713.7715), new o(1628, 1.1739, 5753.3849), new o(1576, 2.8469, 7860.4194), new o(925, 5.453, 11506.77), new o(542, 4.564, 3930.21), new o(472, 3.661, 5884.927), new o(346, 0.964, 5507.553), new o(329, 5.9, 5223.694), new o(307, 0.299, 5573.143), new o(243, 4.273, 11790.629), new o(212, 5.847, 1577.344), new o(186, 5.022, 10977.079), new o(175, 3.012, 18849.228), new o(110, 5.055, 5486.778), new o(98, 0.89, 6069.78), new o(86, 5.69, 15720.84), new o(86, 1.27, 161000.69), new o(65, 0.27, 17260.15), new o(63, 0.92, 529.69), new o(57, 2.01, 83996.85), new o(56, 5.24, 71430.7), new o(49, 3.25, 2544.31), new o(47, 2.58, 775.52), new o(45, 5.54, 9437.76), new o(43, 6.01, 6275.96), new o(39, 5.36, 4694), new o(38, 2.39, 8827.39), new o(37, 0.83, 19651.05), new o(37, 4.9, 12139.55), new o(36, 1.67, 12036.46), new o(35, 1.84, 2942.46), new o(33, 0.24, 7084.9), new o(32, 0.18, 5088.63), new o(32, 1.78, 398.15), new o(28, 1.21, 6286.6), new o(28, 1.9, 6279.55), new o(26, 4.59, 10447.39)], S.g_R1EarthCoefficients = [new o(103019, 1.10749, 6283.07585), new o(1721, 1.0644, 12566.1517), new o(702, 3.142, 0), new o(32, 1.02, 18849.23), new o(31, 2.84, 5507.55), new o(25, 1.32, 5223.69), new o(18, 1.42, 1577.34), new o(10, 5.91, 10977.08), new o(9, 1.42, 6275.96), new o(9, 0.27, 5486.78)], S.g_R2EarthCoefficients = [new o(4359, 5.7846, 6283.0758), new o(124, 5.579, 12566.152), new o(12, 3.14, 0), new o(9, 3.63, 77713.77), new o(6, 1.87, 5573.14), new o(3, 5.47, 18849.23)], S.g_R3EarthCoefficients = [new o(145, 4.273, 6283.076), new o(7, 3.92, 12566.15)], S.g_R4EarthCoefficients = [new o(4, 2.56, 6283.08)], S.g_L1EarthCoefficientsJ2000 = [new o(628307584999, 0, 0), new o(206059, 2.678235, 6283.07585), new o(4303, 2.6351, 12566.1517), new o(425, 1.59, 3.523), new o(119, 5.796, 26.298), new o(109, 2.966, 1577.344), new o(93, 2.59, 18849.23), new o(72, 1.14, 529.69), new o(68, 1.87, 398.15), new o(67, 4.41, 5507.55), new o(59, 2.89, 5223.69), new o(56, 2.17, 155.42), new o(45, 0.4, 796.3), new o(36, 0.47, 775.52), new o(29, 2.65, 7.11), new o(21, 5.43, 0.98), new o(19, 1.85, 5486.78), new o(19, 4.97, 213.3), new o(17, 2.99, 6275.96), new o(16, 0.03, 2544.31), new o(16, 1.43, 2146.17), new o(15, 1.21, 10977.08), new o(12, 2.83, 1748.02), new o(12, 3.26, 5088.63), new o(12, 5.27, 1194.45), new o(12, 2.08, 4694), new o(11, 0.77, 553.57), new o(10, 1.3, 6286.6), new o(10, 4.24, 1349.87), new o(9, 2.7, 242.73), new o(9, 5.64, 951.72), new o(8, 5.3, 2352.87), new o(6, 2.65, 9437.76), new o(6, 4.67, 4690.48)], S.g_L2EarthCoefficientsJ2000 = [new o(8722, 1.0725, 6283.0758), new o(991, 3.1416, 0), new o(295, 0.437, 12566.152), new o(27, 0.05, 3.52), new o(16, 5.19, 26.3), new o(16, 3.69, 155.42), new o(9, 0.3, 18849.23), new o(9, 2.06, 77713.77), new o(7, 0.83, 775.52), new o(5, 4.66, 1577.34), new o(4, 1.03, 7.11), new o(4, 3.44, 5573.14), new o(3, 5.14, 796.3), new o(3, 6.05, 5507.55), new o(3, 1.19, 242.73), new o(3, 6.12, 529.69), new o(3, 0.3, 398.15), new o(3, 2.28, 553.57), new o(2, 4.38, 5223.69), new o(2, 3.75, 0.98)], S.g_L3EarthCoefficientsJ2000 = [new o(289, 5.842, 6283.076), new o(21, 6.05, 12566.15), new o(3, 5.2, 155.42), new o(3, 3.14, 0), new o(1, 4.72, 3.52), new o(1, 5.97, 242.73), new o(1, 5.54, 18849.23)], S.g_L4EarthCoefficientsJ2000 = [new o(8, 4.14, 6283.08), new o(1, 3.28, 12566.15)], S.g_B1EarthCoefficientsJ2000 = [new o(227778, 3.413766, 6283.07585), new o(3806, 3.3706, 12566.1517), new o(3620, 0, 0), new o(72, 3.33, 18849.23), new o(8, 3.89, 5507.55), new o(8, 1.79, 5223.69), new o(6, 5.2, 2352.87)], S.g_B2EarthCoefficientsJ2000 = [new o(9721, 5.1519, 6283.07585), new o(233, 3.1416, 0), new o(134, 0.644, 12566.152), new o(7, 1.07, 18849.23)], S.g_B3EarthCoefficientsJ2000 = [new o(276, 0.595, 6283.076), new o(17, 3.14, 0), new o(4, 0.12, 12566.15)], S.g_B4EarthCoefficientsJ2000 = [new o(6, 2.27, 6283.08), new o(1, 0, 0)], S.g_L0JupiterCoefficients = [new o(59954691, 0, 0), new o(9695899, 5.0619179, 529.6909651), new o(573610, 1.444062, 7.113547), new o(306389, 5.417347, 1059.38193), new o(97178, 4.14265, 632.78374), new o(72903, 3.64043, 522.57742), new o(64264, 3.41145, 103.09277), new o(39806, 2.29377, 419.48464), new o(38858, 1.27232, 316.39187), new o(27965, 1.78455, 536.80451), new o(13590, 5.77481, 1589.0729), new o(8769, 3.63, 949.1756), new o(8246, 3.5823, 206.1855), new o(7368, 5.081, 735.8765), new o(6263, 0.025, 213.2991), new o(6114, 4.5132, 1162.4747), new o(5305, 4.1863, 1052.2684), new o(5305, 1.3067, 14.2271), new o(4905, 1.3208, 110.2063), new o(4647, 4.6996, 3.9322), new o(3045, 4.3168, 426.5982), new o(2610, 1.5667, 846.0828), new o(2028, 1.0638, 3.1814), new o(1921, 0.9717, 639.8973), new o(1765, 2.1415, 1066.4955), new o(1723, 3.8804, 1265.5675), new o(1633, 3.582, 515.4639), new o(1432, 4.2968, 625.6702), new o(973, 4.098, 95.979), new o(884, 2.437, 412.371), new o(733, 6.085, 838.969), new o(731, 3.806, 1581.959), new o(709, 1.293, 742.99), new o(692, 6.134, 2118.764), new o(614, 4.109, 1478.867), new o(582, 4.54, 309.278), new o(495, 3.756, 323.505), new o(441, 2.958, 454.909), new o(417, 1.036, 2.488), new o(390, 4.897, 1692.166), new o(376, 4.703, 1368.66), new o(341, 5.715, 533.623), new o(330, 4.74, 0.048), new o(262, 1.877, 0.963), new o(261, 0.82, 380.128), new o(257, 3.724, 199.072), new o(244, 5.22, 728.763), new o(235, 1.227, 909.819), new o(220, 1.651, 543.918), new o(207, 1.855, 525.759), new o(202, 1.807, 1375.774), new o(197, 5.293, 1155.361), new o(175, 3.73, 942.062), new o(175, 3.226, 1898.351), new o(175, 5.91, 956.289), new o(158, 4.365, 1795.258), new o(151, 3.906, 74.782), new o(149, 4.377, 1685.052), new o(141, 3.136, 491.558), new o(138, 1.318, 1169.588), new o(131, 4.169, 1045.155), new o(117, 2.5, 1596.186), new o(117, 3.389, 0.521), new o(106, 4.554, 526.51)], S.g_L1JupiterCoefficients = [new o(52993480757, 0, 0), new o(489741, 4.220667, 529.690965), new o(228919, 6.026475, 7.113547), new o(27655, 4.57266, 1059.38193), new o(20721, 5.45939, 522.57742), new o(12106, 0.16986, 536.80451), new o(6068, 4.4242, 103.0928), new o(5434, 3.9848, 419.4846), new o(4238, 5.8901, 14.2271), new o(2212, 5.2677, 206.1855), new o(1746, 4.9267, 1589.0729), new o(1296, 5.5513, 3.1814), new o(1173, 5.8565, 1052.2684), new o(1163, 0.5145, 3.9322), new o(1099, 5.307, 515.4639), new o(1007, 0.4648, 735.8765), new o(1004, 3.1504, 426.5982), new o(848, 5.758, 110.206), new o(827, 4.803, 213.299), new o(816, 0.586, 1066.495), new o(725, 5.518, 639.897), new o(568, 5.989, 625.67), new o(474, 4.132, 412.371), new o(413, 5.737, 95.979), new o(345, 4.242, 632.784), new o(336, 3.732, 1162.475), new o(234, 4.035, 949.176), new o(234, 6.243, 309.278), new o(199, 1.505, 838.969), new o(195, 2.219, 323.505), new o(187, 6.086, 742.99), new o(184, 6.28, 543.918), new o(171, 5.417, 199.072), new o(131, 0.626, 728.763), new o(115, 0.68, 846.083), new o(115, 5.286, 2118.764), new o(108, 4.493, 956.289), new o(80, 5.82, 1045.15), new o(72, 5.34, 942.06), new o(70, 5.97, 532.87), new o(67, 5.73, 21.34), new o(66, 0.13, 526.51), new o(65, 6.09, 1581.96), new o(59, 0.59, 1155.36), new o(58, 0.99, 1596.19), new o(57, 5.97, 1169.59), new o(57, 1.41, 533.62), new o(55, 5.43, 10.29), new o(52, 5.73, 117.32), new o(52, 0.23, 1368.66), new o(50, 6.08, 525.76), new o(47, 3.63, 1478.87), new o(47, 0.51, 1265.57), new o(40, 4.16, 1692.17), new o(34, 0.1, 302.16), new o(33, 5.04, 220.41), new o(32, 5.37, 508.35), new o(29, 5.42, 1272.68), new o(29, 3.36, 4.67), new o(29, 0.76, 88.87), new o(25, 1.61, 831.86)], S.g_L2JupiterCoefficients = [new o(47234, 4.32148, 7.11355), new o(38966, 0, 0), new o(30629, 2.93021, 529.69097), new o(3189, 1.055, 522.5774), new o(2729, 4.8455, 536.8045), new o(2723, 3.4141, 1059.3819), new o(1721, 4.1873, 14.2271), new o(383, 5.768, 419.485), new o(378, 0.76, 515.464), new o(367, 6.055, 103.093), new o(337, 3.786, 3.181), new o(308, 0.694, 206.186), new o(218, 3.814, 1589.073), new o(199, 5.34, 1066.495), new o(197, 2.484, 3.932), new o(156, 1.406, 1052.268), new o(146, 3.814, 639.897), new o(142, 1.634, 426.598), new o(130, 5.837, 412.371), new o(117, 1.414, 625.67), new o(97, 4.03, 110.21), new o(91, 1.11, 95.98), new o(87, 2.52, 632.78), new o(79, 4.64, 543.92), new o(72, 2.22, 735.88), new o(58, 0.83, 199.07), new o(57, 3.12, 213.3), new o(49, 1.67, 309.28), new o(40, 4.02, 21.34), new o(40, 0.62, 323.51), new o(36, 2.33, 728.76), new o(29, 3.61, 10.29), new o(28, 3.24, 838.97), new o(26, 4.5, 742.99), new o(26, 2.51, 1162.47), new o(25, 1.22, 1045.15), new o(24, 3.01, 956.29), new o(19, 4.29, 532.87), new o(18, 0.81, 508.35), new o(17, 4.2, 2118.76), new o(17, 1.83, 526.51), new o(15, 5.81, 1596.19), new o(15, 0.68, 942.06), new o(15, 4, 117.32), new o(14, 5.95, 316.39), new o(14, 1.8, 302.16), new o(13, 2.52, 88.87), new o(13, 4.37, 1169.59), new o(11, 4.44, 525.76), new o(10, 1.72, 1581.96), new o(9, 2.18, 1155.36), new o(9, 3.29, 220.41), new o(9, 3.32, 831.86), new o(8, 5.76, 846.08), new o(8, 2.71, 533.62), new o(7, 2.18, 1265.57), new o(6, 0.5, 949.18)], S.g_L3JupiterCoefficients = [new o(6502, 2.5986, 7.1135), new o(1357, 1.3464, 529.691), new o(471, 2.475, 14.227), new o(417, 3.245, 536.805), new o(353, 2.974, 522.577), new o(155, 2.076, 1059.382), new o(87, 2.51, 515.46), new o(44, 0, 0), new o(34, 3.83, 1066.5), new o(28, 2.45, 206.19), new o(24, 1.28, 412.37), new o(23, 2.98, 543.92), new o(20, 2.1, 639.9), new o(20, 1.4, 419.48), new o(19, 1.59, 103.09), new o(17, 2.3, 21.34), new o(17, 2.6, 1589.07), new o(16, 3.15, 625.67), new o(16, 3.36, 1052.27), new o(13, 2.76, 95.98), new o(13, 2.54, 199.07), new o(13, 6.27, 426.6), new o(9, 1.76, 10.29), new o(9, 2.27, 110.21), new o(7, 3.43, 309.28), new o(7, 4.04, 728.76), new o(6, 2.52, 508.35), new o(5, 2.91, 1045.15), new o(5, 5.25, 323.51), new o(4, 4.3, 88.87), new o(4, 3.52, 302.16), new o(4, 4.09, 735.88), new o(3, 1.43, 956.29), new o(3, 4.36, 1596.19), new o(3, 1.25, 213.3), new o(3, 5.02, 838.97), new o(3, 2.24, 117.32), new o(2, 2.9, 742.99), new o(2, 2.36, 942.06)], S.g_L4JupiterCoefficients = [new o(669, 0.853, 7.114), new o(114, 3.142, 0), new o(100, 0.743, 14.227), new o(50, 1.65, 536.8), new o(44, 5.82, 529.69), new o(32, 4.86, 522.58), new o(15, 4.29, 515.46), new o(9, 0.71, 1059.38), new o(5, 1.3, 543.92), new o(4, 2.32, 1066.5), new o(4, 0.48, 21.34), new o(3, 3, 412.37), new o(2, 0.4, 639.9), new o(2, 4.26, 199.07), new o(2, 4.91, 625.67), new o(2, 4.26, 206.19), new o(1, 5.26, 1052.27), new o(1, 4.72, 95.98), new o(1, 1.29, 1589.07)], S.g_L5JupiterCoefficients = [new o(50, 5.26, 7.11), new o(16, 5.25, 14.23), new o(4, 0.01, 536.8), new o(2, 1.1, 522.58), new o(1, 3.14, 0)], S.g_B0JupiterCoefficients = [new o(2268616, 3.5585261, 529.6909651), new o(110090, 0, 0), new o(109972, 3.908093, 1059.38193), new o(8101, 3.6051, 522.5774), new o(6438, 0.3063, 536.8045), new o(6044, 4.2588, 1589.0729), new o(1107, 2.9853, 1162.4747), new o(944, 1.675, 426.598), new o(942, 2.936, 1052.268), new o(894, 1.754, 7.114), new o(836, 5.179, 103.093), new o(767, 2.155, 632.784), new o(684, 3.678, 213.299), new o(629, 0.643, 1066.495), new o(559, 0.014, 846.083), new o(532, 2.703, 110.206), new o(464, 1.173, 949.176), new o(431, 2.608, 419.485), new o(351, 4.611, 2118.764), new o(132, 4.778, 742.99), new o(123, 3.35, 1692.166), new o(116, 1.387, 323.505), new o(115, 5.049, 316.392), new o(104, 3.701, 515.464), new o(103, 2.319, 1478.867), new o(102, 3.153, 1581.959)], S.g_B1JupiterCoefficients = [new o(177352, 5.701665, 529.690965), new o(3230, 5.7794, 1059.3819), new o(3081, 5.4746, 522.5774), new o(2212, 4.7348, 536.8045), new o(1694, 3.1416, 0), new o(346, 4.746, 1052.268), new o(234, 5.189, 1066.495), new o(196, 6.186, 7.114), new o(150, 3.927, 1589.073), new o(114, 3.439, 632.784), new o(97, 2.91, 949.18), new o(82, 5.08, 1162.47), new o(77, 2.51, 103.09), new o(77, 0.61, 419.48), new o(74, 5.5, 515.46), new o(61, 5.45, 213.3), new o(50, 3.95, 735.88), new o(46, 0.54, 110.21), new o(45, 1.9, 846.08), new o(37, 4.7, 543.92), new o(36, 6.11, 316.39), new o(32, 4.92, 1581.96)], S.g_B2JupiterCoefficients = [new o(8094, 1.4632, 529.691), new o(813, 3.1416, 0), new o(742, 0.957, 522.577), new o(399, 2.899, 536.805), new o(342, 1.447, 1059.382), new o(74, 0.41, 1052.27), new o(46, 3.48, 1066.5), new o(30, 1.93, 1589.07), new o(29, 0.99, 515.46), new o(23, 4.27, 7.11), new o(14, 2.92, 543.92), new o(12, 5.22, 632.78), new o(11, 4.88, 949.18), new o(6, 6.21, 1045.15)], S.g_B3JupiterCoefficients = [new o(252, 3.381, 529.691), new o(122, 2.733, 522.577), new o(49, 1.04, 536.8), new o(11, 2.31, 1052.27), new o(8, 2.77, 515.46), new o(7, 4.25, 1059.38), new o(6, 1.78, 1066.5), new o(4, 1.13, 543.92), new o(3, 3.14, 0)], S.g_B4JupiterCoefficients = [new o(15, 4.53, 522.58), new o(5, 4.47, 529.69), new o(4, 5.44, 536.8), new o(3, 0, 0), new o(2, 4.52, 515.46), new o(1, 4.2, 1052.27)], S.g_B5JupiterCoefficients = [new o(1, 0.09, 522.58)], S.g_R0JupiterCoefficients = [new o(520887429, 0, 0), new o(25209327, 3.4910864, 529.69096509), new o(610600, 3.841154, 1059.38193), new o(282029, 2.574199, 632.783739), new o(187647, 2.075904, 522.577418), new o(86793, 0.71001, 419.48464), new o(72063, 0.21466, 536.80451), new o(65517, 5.97996, 316.39187), new o(30135, 2.16132, 949.17561), new o(29135, 1.67759, 103.09277), new o(23947, 0.27458, 7.11355), new o(23453, 3.54023, 735.87651), new o(22284, 4.19363, 1589.0729), new o(13033, 2.96043, 1162.4747), new o(12749, 2.7155, 1052.26838), new o(9703, 1.9067, 206.1855), new o(9161, 4.4135, 213.2991), new o(7895, 2.4791, 426.5982), new o(7058, 2.1818, 1265.5675), new o(6138, 6.2642, 846.0828), new o(5477, 5.6573, 639.8973), new o(4170, 2.0161, 515.4639), new o(4137, 2.7222, 625.6702), new o(3503, 0.5653, 1066.4955), new o(2617, 2.0099, 1581.9593), new o(2500, 4.5518, 838.9693), new o(2128, 6.1275, 742.9901), new o(1912, 0.8562, 412.3711), new o(1611, 3.0887, 1368.6603), new o(1479, 2.6803, 1478.8666), new o(1231, 1.8904, 323.5054), new o(1217, 1.8017, 110.2063), new o(1015, 1.3867, 454.9094), new o(999, 2.872, 309.278), new o(961, 4.549, 2118.764), new o(886, 4.148, 533.623), new o(821, 1.593, 1898.351), new o(812, 5.941, 909.819), new o(777, 3.677, 728.763), new o(727, 3.988, 1155.361), new o(655, 2.791, 1685.052), new o(654, 3.382, 1692.166), new o(621, 4.823, 956.289), new o(615, 2.276, 942.062), new o(562, 0.081, 543.918), new o(542, 0.284, 525.759)], S.g_R1JupiterCoefficients = [new o(1271802, 2.6493751, 529.6909651), new o(61662, 3.00076, 1059.38193), new o(53444, 3.89718, 522.57742), new o(41390, 0, 0), new o(31185, 4.88277, 536.80451), new o(11847, 2.4133, 419.48464), new o(9166, 4.7598, 7.1135), new o(3404, 3.3469, 1589.0729), new o(3203, 5.2108, 735.8765), new o(3176, 2.793, 103.0928), new o(2806, 3.7422, 515.4639), new o(2677, 4.3305, 1052.2684), new o(2600, 3.6344, 206.1855), new o(2412, 1.4695, 426.5982), new o(2101, 3.9276, 639.8973), new o(1646, 4.4163, 1066.4955), new o(1641, 4.4163, 625.6702), new o(1050, 3.1611, 213.2991), new o(1025, 2.5543, 412.3711), new o(806, 2.678, 632.784), new o(741, 2.171, 1162.475), new o(677, 6.25, 838.969), new o(567, 4.577, 742.99), new o(485, 2.469, 949.176), new o(469, 4.71, 543.918), new o(445, 0.403, 323.505), new o(416, 5.368, 728.763), new o(402, 4.605, 309.278), new o(347, 4.681, 14.227), new o(338, 3.168, 956.289), new o(261, 5.343, 846.083), new o(247, 3.923, 942.062), new o(220, 4.842, 1368.66), new o(203, 5.6, 1155.361), new o(200, 4.439, 1045.155), new o(197, 3.706, 2118.764), new o(196, 3.759, 199.072), new o(184, 4.265, 95.979), new o(180, 4.402, 532.872), new o(170, 4.846, 526.51), new o(146, 6.13, 533.623), new o(133, 1.322, 110.206), new o(132, 4.512, 525.759)], S.g_R2JupiterCoefficients = [new o(79645, 1.35866, 529.69097), new o(8252, 5.7777, 522.5774), new o(7030, 3.2748, 536.8045), new o(5314, 1.8384, 1059.3819), new o(1861, 2.9768, 7.1135), new o(964, 5.48, 515.464), new o(836, 4.199, 419.485), new o(498, 3.142, 0), new o(427, 2.228, 639.897), new o(406, 3.783, 1066.495), new o(377, 2.242, 1589.073), new o(363, 5.368, 206.186), new o(342, 6.099, 1052.268), new o(339, 6.127, 625.67), new o(333, 3e-3, 426.598), new o(280, 4.262, 412.371), new o(257, 0.963, 632.784), new o(230, 0.705, 735.877), new o(201, 3.069, 543.918), new o(200, 4.429, 103.093), new o(139, 2.932, 14.227), new o(114, 0.787, 728.763), new o(95, 1.7, 838.97), new o(86, 5.14, 323.51), new o(83, 0.06, 309.28), new o(80, 2.98, 742.99), new o(75, 1.6, 956.29), new o(70, 1.51, 213.3), new o(67, 5.47, 199.07), new o(62, 6.1, 1045.15), new o(56, 0.96, 1162.47), new o(52, 5.58, 942.06), new o(50, 2.72, 532.87), new o(45, 5.52, 508.35), new o(44, 0.27, 526.51), new o(40, 5.95, 95.98)], S.g_R3JupiterCoefficients = [new o(3519, 6.058, 529.691), new o(1073, 1.6732, 536.8045), new o(916, 1.413, 522.577), new o(342, 0.523, 1059.382), new o(255, 1.196, 7.114), new o(222, 0.952, 515.464), new o(90, 3.14, 0), new o(69, 2.27, 1066.5), new o(58, 1.41, 543.92), new o(58, 0.53, 639.9), new o(51, 5.98, 412.37), new o(47, 1.58, 625.67), new o(43, 6.12, 419.48), new o(37, 1.18, 14.23), new o(34, 1.67, 1052.27), new o(34, 0.85, 206.19), new o(31, 1.04, 1589.07), new o(30, 4.63, 426.6), new o(21, 2.5, 728.76), new o(15, 0.89, 199.07), new o(14, 0.96, 508.35), new o(13, 1.5, 1045.15), new o(12, 2.61, 735.88), new o(12, 3.56, 323.51), new o(11, 1.79, 309.28), new o(11, 6.28, 956.29), new o(10, 6.26, 103.09), new o(9, 3.45, 838.97)], S.g_R4JupiterCoefficients = [new o(129, 0.084, 536.805), new o(113, 4.249, 529.691), new o(83, 3.3, 522.58), new o(38, 2.73, 515.46), new o(27, 5.69, 7.11), new o(18, 5.4, 1059.38), new o(13, 6.02, 543.92), new o(9, 0.77, 1066.5), new o(8, 5.68, 14.23), new o(7, 1.43, 412.37), new o(6, 5.12, 639.9), new o(5, 3.34, 625.67), new o(3, 3.4, 1052.27), new o(3, 4.16, 728.76), new o(3, 2.9, 426.6)], S.g_R5JupiterCoefficients = [new o(11, 4.75, 536.8), new o(4, 5.92, 522.58), new o(2, 5.57, 515.46), new o(2, 4.3, 543.92), new o(2, 3.69, 7.11), new o(2, 4.13, 1059.38), new o(2, 5.49, 1066.5)], S.g_L0MarsCoefficients = [new o(620347712, 0, 0), new o(18656368, 5.050371, 3340.6124267), new o(1108217, 5.4009984, 6681.2248534), new o(91798, 5.75479, 10021.83728), new o(27745, 5.9705, 3.52312), new o(12316, 0.84956, 2810.92146), new o(10610, 2.93959, 2281.2305), new o(8927, 4.157, 0.0173), new o(8716, 6.1101, 13362.4497), new o(7775, 3.3397, 5621.8429), new o(6798, 0.3646, 398.149), new o(4161, 0.2281, 2942.4634), new o(3575, 1.6619, 2544.3144), new o(3075, 0.857, 191.4483), new o(2938, 6.0789, 0.0673), new o(2628, 0.6481, 3337.0893), new o(2580, 0.03, 3344.1355), new o(2389, 5.039, 796.298), new o(1799, 0.6563, 529.691), new o(1546, 2.9158, 1751.5395), new o(1528, 1.1498, 6151.5339), new o(1286, 3.068, 2146.1654), new o(1264, 3.6228, 5092.152), new o(1025, 3.6933, 8962.4553), new o(892, 0.183, 16703.062), new o(859, 2.401, 2914.014), new o(833, 4.495, 3340.63), new o(833, 2.464, 3340.595), new o(749, 3.822, 155.42), new o(724, 0.675, 3738.761), new o(713, 3.663, 1059.382), new o(655, 0.489, 3127.313), new o(636, 2.922, 8432.764), new o(553, 4.475, 1748.016), new o(550, 3.81, 0.98), new o(472, 3.625, 1194.447), new o(426, 0.554, 6283.076), new o(415, 0.497, 213.299), new o(312, 0.999, 6677.702), new o(307, 0.381, 6684.748), new o(302, 4.486, 3532.061), new o(299, 2.783, 6254.627), new o(293, 4.221, 20.775), new o(284, 5.769, 3149.164), new o(281, 5.882, 1349.867), new o(274, 0.542, 3340.545), new o(274, 0.134, 3340.68), new o(239, 5.372, 4136.91), new o(236, 5.755, 3333.499), new o(231, 1.282, 3870.303), new o(221, 3.505, 382.897), new o(204, 2.821, 1221.849), new o(193, 3.357, 3.59), new o(189, 1.491, 9492.146), new o(179, 1.006, 951.718), new o(174, 2.414, 553.569), new o(172, 0.439, 5486.778), new o(160, 3.949, 4562.461), new o(144, 1.419, 135.065), new o(140, 3.326, 2700.715), new o(138, 4.301, 7.114), new o(131, 4.045, 12303.068), new o(128, 2.208, 1592.596), new o(128, 1.807, 5088.629), new o(117, 3.128, 7903.073), new o(113, 3.701, 1589.073), new o(110, 1.052, 242.729), new o(105, 0.785, 8827.39), new o(100, 3.243, 11773.377)], S.g_L1MarsCoefficients = [new o(334085627474, 0, 0), new o(1458227, 3.6042605, 3340.6124267), new o(164901, 3.926313, 6681.224853), new o(19963, 4.26594, 10021.83728), new o(3452, 4.7321, 3.5231), new o(2485, 4.6128, 13362.4497), new o(842, 4.459, 2281.23), new o(538, 5.016, 398.149), new o(521, 4.994, 3344.136), new o(433, 2.561, 191.448), new o(430, 5.316, 155.42), new o(382, 3.539, 796.298), new o(314, 4.963, 16703.062), new o(283, 3.16, 2544.314), new o(206, 4.569, 2146.165), new o(169, 1.329, 3337.089), new o(158, 4.185, 1751.54), new o(134, 2.233, 0.98), new o(134, 5.974, 1748.016), new o(118, 6.024, 6151.534), new o(117, 2.213, 1059.382), new o(114, 2.129, 1194.447), new o(114, 5.428, 3738.761), new o(91, 1.1, 1349.87), new o(85, 3.91, 553.57), new o(83, 5.3, 6684.75), new o(81, 4.43, 529.69), new o(80, 2.25, 8962.46), new o(73, 2.5, 951.72), new o(73, 5.84, 242.73), new o(71, 3.86, 2914.01), new o(68, 5.02, 382.9), new o(65, 1.02, 3340.6), new o(65, 3.05, 3340.63), new o(62, 4.15, 3149.16), new o(57, 3.89, 4136.91), new o(48, 4.87, 213.3), new o(48, 1.18, 3333.5), new o(47, 1.31, 3185.19), new o(41, 0.71, 1592.6), new o(40, 2.73, 7.11), new o(40, 5.32, 20043.67), new o(33, 5.41, 6283.08), new o(28, 0.05, 9492.15), new o(27, 3.89, 1221.85), new o(27, 5.11, 2700.72)], S.g_L2MarsCoefficients = [new o(58016, 2.04979, 3340.61243), new o(54188, 0, 0), new o(13908, 2.45742, 6681.22485), new o(2465, 2.8, 10021.8373), new o(398, 3.141, 13362.45), new o(222, 3.194, 3.523), new o(121, 0.543, 155.42), new o(62, 3.49, 16703.06), new o(54, 3.54, 3344.14), new o(34, 6, 2281.23), new o(32, 4.14, 191.45), new o(30, 2, 796.3), new o(23, 4.33, 242.73), new o(22, 3.45, 398.15), new o(20, 5.42, 553.57), new o(16, 0.66, 0.98), new o(16, 6.11, 2146.17), new o(16, 1.22, 1748.02), new o(15, 6.1, 3185.19), new o(14, 4.02, 951.72), new o(14, 2.62, 1349.87), new o(13, 0.6, 1194.45), new o(12, 3.86, 6684.75), new o(11, 4.72, 2544.31), new o(10, 0.25, 382.9), new o(9, 0.68, 1059.38), new o(9, 3.83, 20043.67), new o(9, 3.88, 3738.76), new o(8, 5.46, 1751.54), new o(7, 2.58, 3149.16), new o(7, 2.38, 4136.91), new o(6, 5.48, 1592.6), new o(6, 2.34, 3097.88)], S.g_L3MarsCoefficients = [new o(1482, 0.4443, 3340.6124), new o(662, 0.885, 6681.225), new o(188, 1.288, 10021.837), new o(41, 1.65, 13362.45), new o(26, 0, 0), new o(23, 2.05, 155.42), new o(10, 1.58, 3.52), new o(8, 2, 16703.06), new o(5, 2.82, 242.73), new o(4, 2.02, 3344.14), new o(3, 4.59, 3185.19), new o(3, 0.65, 553.57)], S.g_L4MarsCoefficients = [new o(114, 3.1416, 0), new o(29, 5.64, 6681.22), new o(24, 5.14, 3340.61), new o(11, 6.03, 10021.84), new o(3, 0.13, 13362.45), new o(3, 3.56, 155.42), new o(1, 0.49, 16703.06), new o(1, 1.32, 242.73)], S.g_L5MarsCoefficients = [new o(1, 3.14, 0), new o(1, 4.04, 6681.22)], S.g_B0MarsCoefficients = [new o(3197135, 3.7683204, 3340.6124267), new o(298033, 4.10617, 6681.224853), new o(289105, 0, 0), new o(31366, 4.44651, 10021.83728), new o(3484, 4.7881, 13362.4497), new o(443, 5.026, 3344.136), new o(443, 5.652, 3337.089), new o(399, 5.131, 16703.062), new o(293, 3.793, 2281.23), new o(182, 6.136, 6151.534), new o(163, 4.264, 529.691), new o(160, 2.232, 1059.382), new o(149, 2.165, 5621.843), new o(143, 1.182, 3340.595), new o(143, 3.213, 3340.63), new o(139, 2.418, 8962.455)], S.g_B1MarsCoefficients = [new o(350069, 5.368478, 3340.612427), new o(14116, 3.14159, 0), new o(9671, 5.4788, 6681.2249), new o(1472, 3.2021, 10021.8373), new o(426, 3.408, 13362.45), new o(102, 0.776, 3337.089), new o(79, 3.72, 16703.06), new o(33, 3.46, 5621.84), new o(26, 2.48, 2281.23)], S.g_B2MarsCoefficients = [new o(16727, 0.60221, 3340.61243), new o(4987, 4.1416, 0), new o(302, 3.559, 6681.225), new o(26, 1.9, 13362.45), new o(21, 0.92, 10021.84), new o(12, 2.24, 3337.09), new o(8, 2.25, 16703.06)], S.g_B3MarsCoefficients = [new o(607, 1.981, 3340.612), new o(43, 0, 0), new o(14, 1.8, 6681.22), new o(3, 3.45, 10021.84)], S.g_B4MarsCoefficients = [new o(13, 0, 0), new o(11, 3.46, 3340.61), new o(1, 0.5, 6681.22)], S.g_R0MarsCoefficients = [new o(153033488, 0, 0), new o(14184953, 3.47971284, 3340.6124267), new o(660776, 3.817834, 6681.224853), new o(46179, 4.15595, 10021.83728), new o(8110, 5.5596, 2810.9215), new o(7485, 1.7724, 5621.8429), new o(5523, 1.3644, 2281.2305), new o(3825, 4.4941, 13362.4497), new o(2484, 4.9255, 2942.4634), new o(2307, 0.0908, 2544.3144), new o(1999, 5.3606, 3337.0893), new o(1960, 4.7425, 3344.1355), new o(1167, 2.1126, 5092.152), new o(1103, 5.0091, 398.149), new o(992, 5.839, 6151.534), new o(899, 4.408, 529.691), new o(807, 2.102, 1059.382), new o(798, 3.448, 796.298), new o(741, 1.499, 2146.165), new o(726, 1.245, 8432.764), new o(692, 2.134, 8962.455), new o(633, 0.894, 3340.595), new o(633, 2.924, 3340.63), new o(630, 1.287, 1751.54), new o(574, 0.829, 2914.014), new o(526, 5.383, 3738.761), new o(473, 5.199, 3127.313), new o(348, 4.832, 16703.062), new o(284, 2.907, 3532.061), new o(280, 5.257, 6283.076), new o(276, 1.218, 6254.627), new o(275, 2.908, 1748.016), new o(270, 3.764, 5884.927), new o(239, 2.037, 1194.447), new o(234, 5.105, 5486.778), new o(228, 3.255, 6872.673), new o(223, 4.199, 3149.164), new o(219, 5.583, 191.448), new o(208, 5.255, 3340.545), new o(208, 4.846, 3340.68), new o(186, 5.699, 6677.702), new o(183, 5.081, 6684.748), new o(179, 4.184, 3333.499), new o(176, 5.953, 3870.303), new o(164, 3.799, 4136.91)], S.g_R1MarsCoefficients = [new o(1107433, 2.0325052, 3340.6124267), new o(103176, 2.370718, 6681.224853), new o(12877, 0, 0), new o(10816, 2.70888, 10021.83728), new o(1195, 3.047, 13362.4497), new o(439, 2.888, 2281.23), new o(396, 3.423, 3344.136), new o(183, 1.584, 2544.314), new o(136, 3.385, 16703.062), new o(128, 6.043, 3337.089), new o(128, 0.63, 1059.382), new o(127, 1.954, 796.298), new o(118, 2.998, 2146.165), new o(88, 3.42, 398.15), new o(83, 3.86, 3738.76), new o(76, 4.45, 6151.53), new o(72, 2.76, 529.69), new o(67, 2.55, 1751.54), new o(66, 4.41, 1748.02), new o(58, 0.54, 1194.45), new o(54, 0.68, 8962.46), new o(51, 3.73, 6684.75), new o(49, 5.73, 3340.6), new o(49, 1.48, 3340.63), new o(48, 2.58, 3149.16), new o(48, 2.29, 2914.01), new o(39, 2.32, 4136.91)], S.g_R2MarsCoefficients = [new o(44242, 0.47931, 3340.61243), new o(8138, 0.87, 6681.2249), new o(1275, 1.2259, 10021.8373), new o(187, 1.573, 13362.45), new o(52, 3.14, 0), new o(41, 1.97, 3344.14), new o(27, 1.92, 16703.06), new o(18, 4.43, 2281.23), new o(12, 4.53, 3185.19), new o(10, 5.39, 1059.38), new o(10, 0.42, 796.3)], S.g_R3MarsCoefficients = [new o(1113, 5.1499, 3340.6124), new o(424, 5.613, 6681.225), new o(100, 5.997, 10021.837), new o(20, 0.08, 13362.45), new o(5, 3.14, 0), new o(3, 0.43, 16703.06)], S.g_R4MarsCoefficients = [new o(20, 3.58, 3340.61), new o(16, 4.05, 6681.22), new o(6, 4.46, 10021.84), new o(2, 4.84, 13362.45)], S.g_L0MercuryCoefficients = [new o(440250710, 0, 0), new o(40989415, 1.48302034, 26087.90314157), new o(5046294, 4.47785449, 52175.8062831), new o(855347, 1.165203, 78263.709425), new o(165590, 4.119692, 104351.612566), new o(34562, 0.77931, 130439.51571), new o(7583, 3.7135, 156527.4188), new o(3560, 1.512, 1109.3786), new o(1803, 4.1033, 5661.332), new o(1726, 0.3583, 182615.322), new o(1590, 2.9951, 25028.5212), new o(1365, 4.5992, 27197.2817), new o(1017, 0.8803, 31749.2352), new o(714, 1.541, 24978.525), new o(644, 5.303, 21535.95), new o(451, 6.05, 51116.424), new o(404, 3.282, 208703.225), new o(352, 5.242, 20426.571), new o(345, 2.792, 15874.618), new o(343, 5.765, 955.6), new o(339, 5.863, 25558.212), new o(325, 1.337, 53285.185), new o(273, 2.495, 529.691), new o(264, 3.917, 57837.138), new o(260, 0.987, 4551.953), new o(239, 0.113, 1059.382), new o(235, 0.267, 11322.664), new o(217, 0.66, 13521.751), new o(209, 2.092, 47623.853), new o(183, 2.629, 27043.503), new o(182, 2.434, 25661.305), new o(176, 4.536, 51066.428), new o(173, 2.452, 24498.83), new o(142, 3.36, 37410.567), new o(138, 0.291, 10213.286), new o(125, 3.721, 39609.655), new o(118, 2.781, 77204.327), new o(106, 4.206, 19804.827)], S.g_L1MercuryCoefficients = [new o(2608814706223, 0, 0), new o(1126008, 6.2170397, 26087.9031416), new o(303471, 3.055655, 52175.806283), new o(80538, 6.10455, 78263.70942), new o(21245, 2.83532, 104351.61257), new o(5592, 5.8268, 130439.5157), new o(1472, 2.5185, 156527.4188), new o(388, 5.48, 182615.322), new o(352, 3.052, 1109.379), new o(103, 2.149, 208703.225), new o(94, 6.12, 27197.28), new o(91, 0, 24978.52), new o(52, 5.62, 5661.33), new o(44, 4.57, 25028.52), new o(28, 3.04, 51066.43), new o(27, 5.09, 234791.13)], S.g_L2MercuryCoefficients = [new o(53050, 0, 0), new o(16904, 4.69072, 26087.90314), new o(7397, 1.3474, 52175.8063), new o(3018, 4.4564, 78263.7094), new o(1107, 1.264, 104351.6126), new o(378, 4.32, 130439.516), new o(123, 1.069, 156527.419), new o(39, 4.08, 182615.32), new o(15, 4.63, 1109.38), new o(12, 0.79, 208703.23)], S.g_L3MercuryCoefficients = [new o(188, 0.035, 52175.806), new o(142, 3.125, 26087.903), new o(97, 3, 78263.71), new o(44, 6.02, 104351.61), new o(35, 0, 0), new o(18, 2.78, 130439.52), new o(7, 5.82, 156527.42), new o(3, 2.57, 182615.32)], S.g_L4MercuryCoefficients = [new o(114, 3.1416, 0), new o(2, 2.03, 26087.9), new o(2, 1.42, 78263.71), new o(2, 4.5, 52175.81), new o(1, 4.5, 104351.61), new o(1, 1.27, 130439.52)], S.g_L5MercuryCoefficients = [new o(1, 3.14, 0)], S.g_B0MercuryCoefficients = [new o(11737529, 1.98357499, 26087.90314157), new o(2388077, 5.0373896, 52175.8062831), new o(1222840, 3.1415927, 0), new o(543252, 1.796444, 78263.709425), new o(129779, 4.832325, 104351.612566), new o(31867, 1.58088, 130439.51571), new o(7963, 4.6097, 156527.4188), new o(2014, 1.3532, 182615.322), new o(514, 4.378, 208703.325), new o(209, 2.02, 24978.525), new o(208, 4.918, 27197.282), new o(132, 1.119, 234791.128), new o(121, 1.813, 53285.185), new o(100, 5.657, 20426.571)], S.g_B1MercuryCoefficients = [new o(429151, 3.501698, 26087.903142), new o(146234, 3.141593, 0), new o(22675, 0.01515, 52175.80628), new o(10895, 0.4854, 78263.70942), new o(6353, 3.4294, 104351.6126), new o(2496, 0.1605, 130439.5157), new o(860, 3.185, 156527.419), new o(278, 6.21, 182615.322), new o(86, 2.95, 208703.23), new o(28, 0.29, 27197.28), new o(26, 5.98, 234791.13)], S.g_B2MercuryCoefficients = [new o(11831, 4.79066, 26087.90314), new o(1914, 0, 0), new o(1045, 1.2122, 52175.8063), new o(266, 4.434, 78263.709), new o(170, 1.623, 104351.613), new o(96, 4.8, 130439.52), new o(45, 1.61, 156527.42), new o(18, 4.67, 182615.32), new o(7, 1.43, 208703.23)], S.g_B3MercuryCoefficients = [new o(235, 0.354, 26087.903), new o(161, 0, 0), new o(19, 4.36, 52175.81), new o(6, 2.51, 78263.71), new o(5, 6.14, 104351.61), new o(3, 3.12, 130439.52), new o(2, 6.27, 156527.42)], S.g_B4MercuryCoefficients = [new o(4, 1.75, 26087.9), new o(1, 3.14, 0)], S.g_R0MercuryCoefficients = [new o(39528272, 0, 0), new o(7834132, 6.1923372, 26087.9031416), new o(795526, 2.959897, 52175.806283), new o(121282, 6.010642, 78263.709425), new o(21922, 2.7782, 104351.61257), new o(4354, 5.8289, 130439.5157), new o(918, 2.597, 156527.419), new o(290, 1.424, 25028.521), new o(260, 3.028, 27197.282), new o(202, 5.647, 182615.322), new o(201, 5.592, 31749.235), new o(142, 6.253, 24978.525), new o(100, 3.734, 21535.95)], S.g_R1MercuryCoefficients = [new o(217348, 4.656172, 26087.903142), new o(44142, 1.42386, 52175.80628), new o(10094, 4.47466, 78263.70942), new o(2433, 1.2423, 104351.6126), new o(1624, 0, 0), new o(604, 4.293, 130439.516), new o(153, 1.061, 156527.419), new o(39, 4.11, 182615.32)], S.g_R2MercuryCoefficients = [new o(3118, 3.0823, 26087.9031), new o(1245, 6.1518, 52175.8063), new o(425, 2.926, 78263.709), new o(136, 5.98, 104351.613), new o(42, 2.75, 130439.52), new o(22, 3.14, 0), new o(13, 5.8, 156527.42)], S.g_R3MercuryCoefficients = [new o(33, 1.68, 26087.9), new o(24, 4.63, 52175.81), new o(12, 1.39, 78263.71), new o(5, 4.44, 104351.61), new o(2, 1.21, 130439.52)], S.g_MoonCoefficients1 = [new Lt(0, 0, 1, 0), new Lt(2, 0, -1, 0), new Lt(2, 0, 0, 0), new Lt(0, 0, 2, 0), new Lt(0, 1, 0, 0), new Lt(0, 0, 0, 2), new Lt(2, 0, -2, 0), new Lt(2, -1, -1, 0), new Lt(2, 0, 1, 0), new Lt(2, -1, 0, 0), new Lt(0, 1, -1, 0), new Lt(1, 0, 0, 0), new Lt(0, 1, 1, 0), new Lt(2, 0, 0, -2), new Lt(0, 0, 1, 2), new Lt(0, 0, 1, -2), new Lt(4, 0, -1, 0), new Lt(0, 0, 3, 0), new Lt(4, 0, -2, 0), new Lt(2, 1, -1, 0), new Lt(2, 1, 0, 0), new Lt(1, 0, -1, 0), new Lt(1, 1, 0, 0), new Lt(2, -1, 1, 0), new Lt(2, 0, 2, 0), new Lt(4, 0, 0, 0), new Lt(2, 0, -3, 0), new Lt(0, 1, -2, 0), new Lt(2, 0, -1, 2), new Lt(2, -1, -2, 0), new Lt(1, 0, 1, 0), new Lt(2, -2, 0, 0), new Lt(0, 1, 2, 0), new Lt(0, 2, 0, 0), new Lt(2, -2, -1, 0), new Lt(2, 0, 1, -2), new Lt(2, 0, 0, 2), new Lt(4, -1, -1, 0), new Lt(0, 0, 2, 2), new Lt(3, 0, -1, 0), new Lt(2, 1, 1, 0), new Lt(4, -1, -2, 0), new Lt(0, 2, -1, 0), new Lt(2, 2, -1, 0), new Lt(2, 1, -2, 0), new Lt(2, -1, 0, -2), new Lt(4, 0, 1, 0), new Lt(0, 0, 4, 0), new Lt(4, -1, 0, 0), new Lt(1, 0, -2, 0), new Lt(2, 1, 0, -2), new Lt(0, 0, 2, -2), new Lt(1, 1, 1, 0), new Lt(3, 0, -2, 0), new Lt(4, 0, -3, 0), new Lt(2, -1, 2, 0), new Lt(0, 2, 1, 0), new Lt(1, 1, -1, 0), new Lt(2, 0, 3, 0), new Lt(2, 0, -1, -2)], S.g_MoonCoefficients2 = [new ye(6288774, -20905355), new ye(1274027, -3699111), new ye(658314, -2955968), new ye(213618, -569925), new ye(-185116, 48888), new ye(-114332, -3149), new ye(58793, 246158), new ye(57066, -152138), new ye(53322, -170733), new ye(45758, -204586), new ye(-40923, -129620), new ye(-34720, 108743), new ye(-30383, 104755), new ye(15327, 10321), new ye(-12528, 0), new ye(10980, 79661), new ye(10675, -34782), new ye(10034, -23210), new ye(8548, -21636), new ye(-7888, 24208), new ye(-6766, 30824), new ye(-5163, -8379), new ye(4987, -16675), new ye(4036, -12831), new ye(3994, -10445), new ye(3861, -11650), new ye(3665, 14403), new ye(-2689, -7003), new ye(-2602, 0), new ye(2390, 10056), new ye(-2348, 6322), new ye(2236, -9884), new ye(-2120, 5751), new ye(-2069, 0), new ye(2048, -4950), new ye(-1773, 4130), new ye(-1595, 0), new ye(1215, -3958), new ye(-1110, 0), new ye(-892, 3258), new ye(-810, 2616), new ye(759, -1897), new ye(-713, -2117), new ye(-700, 2354), new ye(691, 0), new ye(596, 0), new ye(549, -1423), new ye(537, -1117), new ye(520, -1571), new ye(-487, -1739), new ye(-399, 0), new ye(-381, -4421), new ye(351, 0), new ye(-340, 0), new ye(330, 0), new ye(327, 0), new ye(-323, 1165), new ye(299, 0), new ye(294, 0), new ye(0, 8752)], S.g_MoonCoefficients3 = [new Lt(0, 0, 0, 1), new Lt(0, 0, 1, 1), new Lt(0, 0, 1, -1), new Lt(2, 0, 0, -1), new Lt(2, 0, -1, 1), new Lt(2, 0, -1, -1), new Lt(2, 0, 0, 1), new Lt(0, 0, 2, 1), new Lt(2, 0, 1, -1), new Lt(0, 0, 2, -1), new Lt(2, -1, 0, -1), new Lt(2, 0, -2, -1), new Lt(2, 0, 1, 1), new Lt(2, 1, 0, -1), new Lt(2, -1, -1, 1), new Lt(2, -1, 0, 1), new Lt(2, -1, -1, -1), new Lt(0, 1, -1, -1), new Lt(4, 0, -1, -1), new Lt(0, 1, 0, 1), new Lt(0, 0, 0, 3), new Lt(0, 1, -1, 1), new Lt(1, 0, 0, 1), new Lt(0, 1, 1, 1), new Lt(0, 1, 1, -1), new Lt(0, 1, 0, -1), new Lt(1, 0, 0, -1), new Lt(0, 0, 3, 1), new Lt(4, 0, 0, -1), new Lt(4, 0, -1, 1), new Lt(0, 0, 1, -3), new Lt(4, 0, -2, 1), new Lt(2, 0, 0, -3), new Lt(2, 0, 2, -1), new Lt(2, -1, 1, -1), new Lt(2, 0, -2, 1), new Lt(0, 0, 3, -1), new Lt(2, 0, 2, 1), new Lt(2, 0, -3, -1), new Lt(2, 1, -1, 1), new Lt(2, 1, 0, 1), new Lt(4, 0, 0, 1), new Lt(2, -1, 1, 1), new Lt(2, -2, 0, -1), new Lt(0, 0, 1, 3), new Lt(2, 1, 1, -1), new Lt(1, 1, 0, -1), new Lt(1, 1, 0, 1), new Lt(0, 1, -2, -1), new Lt(2, 1, -1, -1), new Lt(1, 0, 1, 1), new Lt(2, -1, -2, -1), new Lt(0, 1, 2, 1), new Lt(4, 0, -2, -1), new Lt(4, -1, -1, -1), new Lt(1, 0, 1, -1), new Lt(4, 0, 1, -1), new Lt(1, 0, -1, -1), new Lt(4, -1, 0, -1), new Lt(2, -2, 0, 1)], S.g_MoonCoefficients4 = [5128122, 280602, 277693, 173237, 55413, 46271, 32573, 17198, 9266, 8822, 8216, 4324, 4200, -3359, 2463, 2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833, 777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107], S.g_MoonPerigeeApogeeCoefficients1 = [new dt(2, 0, 0, -1.6769, 0), new dt(4, 0, 0, 0.4589, 0), new dt(6, 0, 0, -0.1856, 0), new dt(8, 0, 0, 0.0883, 0), new dt(2, -1, 0, -0.0773, 19e-5), new dt(0, 1, 0, 0.0502, -13e-5), new dt(10, 0, 0, -0.046, 0), new dt(4, -1, 0, 0.0422, -11e-5), new dt(6, -1, 0, -0.0256, 0), new dt(12, 0, 0, 0.0253, 0), new dt(1, 0, 0, 0.0237, 0), new dt(8, -1, 0, 0.0162, 0), new dt(14, 0, 0, -0.0145, 0), new dt(0, 0, 2, 0.0129, 0), new dt(3, 0, 0, -0.0112, 0), new dt(10, -1, 0, -0.0104, 0), new dt(16, 0, 0, 86e-4, 0), new dt(12, -1, 0, 69e-4, 0), new dt(5, 0, 0, 66e-4, 0), new dt(2, 0, 2, -53e-4, 0), new dt(18, 0, 0, -52e-4, 0), new dt(14, -1, 0, -46e-4, 0), new dt(7, 0, 0, -41e-4, 0), new dt(2, 1, 0, 4e-3, 0), new dt(20, 0, 0, 32e-4, 0), new dt(1, 1, 0, -32e-4, 0), new dt(16, -1, 0, 31e-4, 0), new dt(4, 1, 0, -29e-4, 0), new dt(9, 0, 0, 27e-4, 0), new dt(4, 0, 2, 27e-4, 0), new dt(2, -2, 0, -27e-4, 0), new dt(4, -2, 0, 24e-4, 0), new dt(6, -2, 0, -21e-4, 0), new dt(22, 0, 0, -21e-4, 0), new dt(18, -1, 0, -21e-4, 0), new dt(6, 1, 0, 19e-4, 0), new dt(11, 0, 0, -18e-4, 0), new dt(8, 1, 0, -14e-4, 0), new dt(4, 0, -2, -14e-4, 0), new dt(6, 0, 2, -14e-4, 0), new dt(3, 1, 0, 14e-4, 0), new dt(5, 1, 0, -14e-4, 0), new dt(13, 0, 0, 13e-4, 0), new dt(20, -1, 0, 13e-4, 0), new dt(3, 2, 0, 11e-4, 0), new dt(4, -2, 2, -11e-4, 0), new dt(1, 2, 0, -11e-4, 0), new dt(22, -1, 0, -9e-4, 0), new dt(0, 0, 4, -8e-4, 0), new dt(6, 0, -2, 8e-4, 0), new dt(2, 1, -2, 8e-4, 0), new dt(0, 2, 0, 7e-4, 0), new dt(0, -1, 2, 7e-4, 0), new dt(2, 0, 4, 7e-4, 0), new dt(0, -2, 2, -6e-4, 0), new dt(2, 2, -2, -6e-4, 0), new dt(24, 0, 0, 6e-4, 0), new dt(4, 0, -4, 5e-4, 0), new dt(2, 2, 0, 5e-4, 0), new dt(1, -1, 0, -4e-4, 0)], S.g_MoonPerigeeApogeeCoefficients2 = [new dt(2, 0, 0, 0.4392, 0), new dt(4, 0, 0, 0.0684, 0), new dt(0, 1, 0, 0.0456, -11e-5), new dt(2, -1, 0, 0.0426, -11e-5), new dt(0, 0, 2, 0.0212, 0), new dt(1, 0, 0, -0.0189, 0), new dt(6, 0, 0, 0.0144, 0), new dt(4, -1, 0, 0.0113, 0), new dt(2, 0, 2, 47e-4, 0), new dt(1, 1, 0, 36e-4, 0), new dt(8, 0, 0, 35e-4, 0), new dt(6, -1, 0, 34e-4, 0), new dt(2, 0, -2, -34e-4, 0), new dt(2, -2, 0, 22e-4, 0), new dt(3, 0, 0, -17e-4, 0), new dt(4, 0, 2, 13e-4, 0), new dt(8, -1, 0, 11e-4, 0), new dt(4, -2, 0, 1e-3, 0), new dt(10, 0, 0, 9e-4, 0), new dt(3, 1, 0, 7e-4, 0), new dt(0, 2, 0, 6e-4, 0), new dt(2, 1, 0, 5e-4, 0), new dt(2, 2, 0, 5e-4, 0), new dt(6, 0, 2, 4e-4, 0), new dt(6, -2, 0, 4e-4, 0), new dt(10, -1, 0, 4e-4, 0), new dt(5, 0, 0, -4e-4, 0), new dt(4, 0, -2, -4e-4, 0), new dt(0, 1, 2, 3e-4, 0), new dt(12, 0, 0, 3e-4, 0), new dt(2, -1, 2, 3e-4, 0), new dt(1, -1, 0, -3e-4, 0)], S.g_MoonPerigeeApogeeCoefficients3 = [new dt(2, 0, 0, 63.224, 0), new dt(4, 0, 0, -6.99, 0), new dt(2, -1, 0, 2.834, 0), new dt(2, -1, 0, 0, -71e-4), new dt(6, 0, 0, 1.927, 0), new dt(1, 0, 0, -1.263, 0), new dt(8, 0, 0, -0.702, 0), new dt(0, 1, 0, 0.696, 0), new dt(0, 1, 0, 0, -17e-4), new dt(0, 0, 2, -0.69, 0), new dt(4, -1, 0, -0.629, 0), new dt(4, -1, 0, 0, 16e-4), new dt(2, 0, -2, -0.392, 0), new dt(10, 0, 0, 0.297, 0), new dt(6, -1, 0, 0.26, 0), new dt(3, 0, 0, 0.201, 0), new dt(2, 1, 0, -0.161, 0), new dt(1, 1, 0, 0.157, 0), new dt(12, 0, 0, -0.138, 0), new dt(8, -1, 0, -0.127, 0), new dt(2, 0, 2, 0.104, 0), new dt(2, -2, 0, 0.104, 0), new dt(5, 0, 0, -0.079, 0), new dt(14, 0, 0, 0.068, 0), new dt(10, -1, 0, 0.067, 0), new dt(4, 1, 0, 0.054, 0), new dt(12, -1, 0, -0.038, 0), new dt(4, -2, 0, -0.038, 0), new dt(7, 0, 0, 0.037, 0), new dt(4, 0, 2, -0.037, 0), new dt(16, 0, 0, -0.035, 0), new dt(3, 1, 0, -0.03, 0), new dt(1, -1, 0, 0.029, 0), new dt(6, 1, 0, -0.025, 0), new dt(0, 2, 0, 0.023, 0), new dt(14, -1, 0, 0.023, 0), new dt(2, 2, 0, -0.023, 0), new dt(6, -2, 0, 0.022, 0), new dt(2, -1, -2, -0.021, 0), new dt(9, 0, 0, -0.02, 0), new dt(18, 0, 0, 0.019, 0), new dt(6, 0, 2, 0.017, 0), new dt(0, -1, 2, 0.014, 0), new dt(16, -1, 0, -0.014, 0), new dt(4, 0, -20, 0.013, 0), new dt(8, 1, 0, 0.012, 0), new dt(11, 0, 0, 0.011, 0), new dt(5, 1, 0, 0.01, 0), new dt(20, 0, 0, -0.01, 0)], S.g_MoonPerigeeApogeeCoefficients4 = [new dt(2, 0, 0, -9.147, 0), new dt(1, 0, 0, -0.841, 0), new dt(0, 0, 2, 0.697, 0), new dt(0, 1, 0, -0.656, 16e-4), new dt(4, 0, 0, 0.355, 0), new dt(2, -1, 0, 0.159, 0), new dt(1, 1, 0, 0.127, 0), new dt(4, -1, 0, 0.065, 0), new dt(6, 0, 0, 0.052, 0), new dt(2, 1, 0, 0.043, 0), new dt(2, 0, 2, 0.031, 0), new dt(2, 0, -2, -0.023, 0), new dt(2, -2, 0, 0.022, 0), new dt(2, 2, 0, 0.019, 0), new dt(0, 2, 0, -0.016, 0), new dt(6, -1, 0, 0.014, 0), new dt(8, 0, 0, 0.01, 0)], S.g_L0NC = [new o(531188633, 0, 0), new o(1798476, 2.9010127, 38.1330356), new o(1019728, 0.4858092, 1.4844727), new o(124532, 4.830081, 36.648563), new o(42064, 5.41055, 2.96895), new o(37715, 6.09222, 35.16409), new o(33785, 1.24489, 76.26607), new o(16483, 8e-5, 491.55793), new o(9199, 4.9375, 39.6175), new o(8994, 0.2746, 175.1661), new o(4216, 1.9871, 73.2971), new o(3365, 1.0359, 33.6796), new o(2285, 4.2061, 4.4534), new o(1434, 2.7834, 74.7816), new o(900, 2.076, 109.946), new o(745, 3.19, 71.813), new o(506, 5.748, 114.399), new o(400, 0.35, 1021.249), new o(345, 3.462, 41.102), new o(340, 3.304, 77.751), new o(323, 2.248, 32.195), new o(306, 0.497, 0.521), new o(287, 4.505, 0.048), new o(282, 2.246, 146.594), new o(267, 4.889, 0.963), new o(252, 5.782, 388.465), new o(245, 1.247, 9.561), new o(233, 2.505, 137.033), new o(227, 1.797, 453.425), new o(170, 3.324, 108.461), new o(151, 2.192, 33.94), new o(150, 2.997, 5.938), new o(148, 0.859, 111.43), new o(119, 3.677, 2.448), new o(109, 2.416, 183.243), new o(103, 0.041, 0.261), new o(103, 4.404, 70.328), new o(102, 5.705, 0.112)], S.g_L1NC = [new o(3837687717, 0, 0), new o(16604, 4.86319, 1.48447), new o(15807, 2.27923, 38.13304), new o(3335, 3.682, 76.2661), new o(1306, 3.6732, 2.9689), new o(605, 1.505, 35.164), new o(179, 3.453, 39.618), new o(107, 2.451, 4.453), new o(106, 2.755, 33.68), new o(73, 5.49, 36.65), new o(57, 1.86, 114.4), new o(57, 5.22, 0.52), new o(35, 4.52, 74.78), new o(32, 5.9, 77.75), new o(30, 3.67, 388.47), new o(29, 5.17, 9.56), new o(29, 5.17, 2.45), new o(26, 5.25, 168.05)], S.g_L2NC = [new o(53893, 0, 0), new o(296, 1.855, 1.484), new o(281, 1.191, 38.133), new o(270, 5.721, 76.266), new o(23, 1.21, 2.97), new o(9, 4.43, 35.16), new o(7, 0.54, 2.45)], S.g_L3NC = [new o(31, 0, 0), new o(15, 1.35, 76.27), new o(12, 6.04, 1.48), new o(12, 6.11, 38.13)], S.g_L4NC = [new o(114, 3.142, 0)], S.g_B0NC = [new o(3088623, 1.4410437, 38.1330356), new o(27789, 5.91272, 76.26607), new o(27624, 0, 0), new o(15448, 3.50877, 39.61751), new o(15355, 2.52124, 36.64856), new o(2e3, 1.51, 74.7816), new o(1968, 4.3778, 1.4845), new o(1015, 3.2156, 35.1641), new o(606, 2.802, 73.297), new o(595, 2.129, 41.102), new o(589, 3.187, 2.969), new o(402, 4.169, 114.399), new o(280, 1.682, 77.751), new o(262, 3.767, 213.299), new o(254, 3.271, 453.425), new o(206, 4.257, 529.691), new o(140, 3.53, 137.033)], S.g_B1NC = [new o(227279, 3.807931, 38.133036), new o(1803, 1.9758, 76.2661), new o(1433, 3.1416, 0), new o(1386, 4.8256, 36.6486), new o(1073, 6.0805, 39.6175), new o(148, 3.858, 74.782), new o(136, 0.478, 1.484), new o(70, 6.19, 35.16), new o(52, 5.05, 73.3), new o(43, 0.31, 114.4), new o(37, 4.89, 41.1), new o(37, 5.76, 2.97), new o(26, 5.22, 213.3)], S.g_B2NC = [new o(9691, 5.5712, 38.133), new o(79, 3.63, 76.27), new o(72, 0.45, 36.65), new o(59, 3.14, 0), new o(30, 1.61, 39.62), new o(6, 5.61, 74.78)], S.g_B3NC = [new o(273, 1.017, 38.133), new o(2, 0, 0), new o(2, 2.37, 36.65), new o(2, 5.33, 76.27)], S.g_B4NC = [new o(6, 2.67, 38.13)], S.g_R0NC = [new o(3007013206, 0, 0), new o(27062259, 1.32999459, 38.13303564), new o(1691764, 3.2518614, 36.6485629), new o(807831, 5.185928, 1.484473), new o(537761, 4.521139, 35.16409), new o(495726, 1.571057, 491.557929), new o(274572, 1.845523, 175.16606), new o(135134, 3.372206, 39.617508), new o(121802, 5.797544, 76.266071), new o(100895, 0.377027, 73.297126), new o(69792, 3.79617, 2.96895), new o(46688, 5.74938, 33.67962), new o(24594, 0.50802, 109.94569), new o(16939, 1.59422, 71.81265), new o(14230, 1.07786, 74.7816), new o(12012, 1.92062, 1021.24889), new o(8395, 0.6782, 146.5943), new o(7572, 1.0715, 388.4652), new o(5721, 2.5906, 4.4534), new o(4840, 1.9069, 41.102), new o(4483, 2.9057, 529.691), new o(4421, 1.7499, 108.4612), new o(4354, 0.6799, 32.1951), new o(4270, 3.4134, 453.4249), new o(3381, 0.8481, 183.2428), new o(2881, 1.986, 137.033), new o(2879, 3.6742, 350.3321), new o(2636, 3.0976, 213.2991), new o(2530, 5.7984, 490.0735), new o(2523, 0.4863, 493.0424), new o(2306, 2.8096, 70.3282), new o(2087, 0.6186, 33.9402)], S.g_R1NC = [new o(236339, 0.70498, 38.133036), new o(13220, 3.32015, 1.48447), new o(8622, 6.2163, 35.1641), new o(2702, 1.8814, 39.6175), new o(2155, 2.0943, 2.9689), new o(2153, 5.1687, 76.2661), new o(1603, 0, 0), new o(1464, 1.1842, 33.6796), new o(1136, 3.9189, 36.6486), new o(898, 5.241, 388.465), new o(790, 0.533, 168.053), new o(760, 0.021, 182.28), new o(607, 1.077, 1021.249), new o(572, 3.401, 484.444), new o(561, 2.887, 498.671)], S.g_R2NC = [new o(4247, 5.8991, 38.133), new o(218, 0.346, 1.484), new o(163, 2.239, 168.053), new o(156, 4.594, 182.28), new o(127, 2.848, 35.164)], S.g_R3NC = [new o(166, 4.552, 38.133)], S.g_NuC = [new fe(0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9), new fe(-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1), new fe(0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5), new fe(0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5), new fe(0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1), new fe(0, 0, 1, 0, 0, 712, 0.1, -7, 0), new fe(-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6), new fe(0, 0, 0, 2, 1, -386, -0.4, 200, 0), new fe(0, 0, 1, 2, 2, -301, 0, 129, -0.1), new fe(-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3), new fe(-2, 0, 1, 0, 0, -158, 0, 0, 0), new fe(-2, 0, 0, 2, 1, 129, 0.1, -70, 0), new fe(0, 0, -1, 2, 2, 123, 0, -53, 0), new fe(2, 0, 0, 0, 0, 63, 0, 0, 0), new fe(0, 0, 1, 0, 1, 63, 0.1, -33, 0), new fe(2, 0, -1, 2, 2, -59, 0, 26, 0), new fe(0, 0, -1, 0, 1, -58, -0.1, 32, 0), new fe(0, 0, 1, 2, 1, -51, 0, 27, 0), new fe(-2, 0, 2, 0, 0, 48, 0, 0, 0), new fe(0, 0, -2, 2, 1, 46, 0, -24, 0), new fe(2, 0, 0, 2, 2, -38, 0, 16, 0), new fe(0, 0, 2, 2, 2, -31, 0, 13, 0), new fe(0, 0, 2, 0, 0, 29, 0, 0, 0), new fe(-2, 0, 1, 2, 2, 29, 0, -12, 0), new fe(0, 0, 0, 2, 0, 26, 0, 0, 0), new fe(-2, 0, 0, 2, 0, -22, 0, 0, 0), new fe(0, 0, -1, 2, 1, 21, 0, -10, 0), new fe(0, 2, 0, 0, 0, 17, -0.1, 0, 0), new fe(2, 0, -1, 0, 1, 16, 0, -8, 0), new fe(-2, 2, 0, 2, 2, -16, 0.1, 7, 0), new fe(0, 1, 0, 0, 1, -15, 0, 9, 0), new fe(-2, 0, 1, 0, 1, -13, 0, 7, 0), new fe(0, -1, 0, 0, 1, -12, 0, 6, 0), new fe(0, 0, 2, -2, 0, 11, 0, 0, 0), new fe(2, 0, -1, 2, 1, -10, 0, 5, 0), new fe(2, 0, 1, 2, 2, -8, 0, 3, 0), new fe(0, 1, 0, 2, 2, 7, 0, -3, 0), new fe(-2, 1, 1, 0, 0, -7, 0, 0, 0), new fe(0, -1, 0, 2, 2, -7, 0, 3, 0), new fe(2, 0, 0, 2, 1, -7, 0, 3, 0), new fe(2, 0, 1, 0, 0, 6, 0, 0, 0), new fe(-2, 0, 2, 2, 2, 6, 0, -3, 0), new fe(-2, 0, 1, 2, 1, 6, 0, -3, 0), new fe(2, 0, -2, 0, 1, -6, 0, 3, 0), new fe(2, 0, 0, 0, 1, -6, 0, 3, 0), new fe(0, -1, 1, 0, 0, 5, 0, 0, 0), new fe(-2, -1, 0, 2, 1, -5, 0, 3, 0), new fe(-2, 0, 0, 0, 1, -5, 0, 3, 0), new fe(0, 0, 2, 2, 1, -5, 0, 3, 0), new fe(-2, 0, 2, 0, 1, 4, 0, 0, 0), new fe(-2, 1, 0, 2, 1, 4, 0, 0, 0), new fe(0, 0, 1, -2, 0, 4, 0, 0, 0), new fe(-1, 0, 1, 0, 0, -4, 0, 0, 0), new fe(-2, 1, 0, 0, 0, -4, 0, 0, 0), new fe(1, 0, 0, 0, 0, -4, 0, 0, 0), new fe(0, 0, 1, 2, 0, 3, 0, 0, 0), new fe(0, 0, -2, 2, 2, -3, 0, 0, 0), new fe(-1, -1, 1, 0, 0, -3, 0, 0, 0), new fe(0, 1, 1, 0, 0, -3, 0, 0, 0), new fe(0, -1, 1, 2, 2, -3, 0, 0, 0), new fe(2, -1, -1, 2, 2, -3, 0, 0, 0), new fe(0, 0, 3, 2, 2, -3, 0, 0, 0), new fe(2, -1, 0, 2, 2, -3, 0, 0, 0)], S.g_AAParallax_C1 = Math.sin(x.d2R(x.dmS2D(0, 0, 8.794))), S.g_PlutoArgumentCoefficients = [new Qe(0, 0, 1), new Qe(0, 0, 2), new Qe(0, 0, 3), new Qe(0, 0, 4), new Qe(0, 0, 5), new Qe(0, 0, 6), new Qe(0, 1, -1), new Qe(0, 1, 0), new Qe(0, 1, 1), new Qe(0, 1, 2), new Qe(0, 1, 3), new Qe(0, 2, -2), new Qe(0, 2, -1), new Qe(0, 2, 0), new Qe(1, -1, 0), new Qe(1, -1, 1), new Qe(1, 0, -3), new Qe(1, 0, -2), new Qe(1, 0, -1), new Qe(1, 0, 0), new Qe(1, 0, 1), new Qe(1, 0, 2), new Qe(1, 0, 3), new Qe(1, 0, 4), new Qe(1, 1, -3), new Qe(1, 1, -2), new Qe(1, 1, -1), new Qe(1, 1, 0), new Qe(1, 1, 1), new Qe(1, 1, 3), new Qe(2, 0, -6), new Qe(2, 0, -5), new Qe(2, 0, -4), new Qe(2, 0, -3), new Qe(2, 0, -2), new Qe(2, 0, -1), new Qe(2, 0, 0), new Qe(2, 0, 1), new Qe(2, 0, 2), new Qe(2, 0, 3), new Qe(3, 0, -2), new Qe(3, 0, -1), new Qe(3, 0, 0)], S.g_PlutoLongitudeCoefficients = [new kt(-19799805, 19850055), new kt(897144, -4954829), new kt(611149, 1211027), new kt(-341243, -189585), new kt(129287, -34992), new kt(-38164, 30893), new kt(20442, -9987), new kt(-4063, -5071), new kt(-6016, -3336), new kt(-3956, 3039), new kt(-667, 3572), new kt(1276, 501), new kt(1152, -917), new kt(630, -1277), new kt(2571, -459), new kt(899, -1449), new kt(-1016, 1043), new kt(-2343, -1012), new kt(7042, 788), new kt(1199, -338), new kt(418, -67), new kt(120, -274), new kt(-60, -159), new kt(-82, -29), new kt(-36, -29), new kt(-40, 7), new kt(-14, 22), new kt(4, 13), new kt(5, 2), new kt(-1, 0), new kt(2, 0), new kt(-4, 5), new kt(4, -7), new kt(14, 24), new kt(-49, -34), new kt(163, -48), new kt(9, -24), new kt(-4, 1), new kt(-3, 1), new kt(1, 3), new kt(-3, -1), new kt(5, -3), new kt(0, 0)], S.g_PlutoLatitudeCoefficients = [new kt(-5452852, -14974862), new kt(3527812, 1672790), new kt(-1050748, 327647), new kt(178690, -292153), new kt(18650, 100340), new kt(-30697, -25823), new kt(4878, 11248), new kt(226, -64), new kt(2030, -836), new kt(69, -604), new kt(-247, -567), new kt(-57, 1), new kt(-122, 175), new kt(-49, -164), new kt(-197, 199), new kt(-25, 217), new kt(589, -248), new kt(-269, 711), new kt(185, 193), new kt(315, 807), new kt(-130, -43), new kt(5, 3), new kt(2, 17), new kt(2, 5), new kt(2, 3), new kt(3, 1), new kt(2, -1), new kt(1, -1), new kt(0, -1), new kt(0, 0), new kt(0, -2), new kt(2, 2), new kt(-7, 0), new kt(10, -8), new kt(-3, 20), new kt(6, 5), new kt(14, 17), new kt(-2, 0), new kt(0, 0), new kt(0, 0), new kt(0, 1), new kt(0, 0), new kt(1, 0)], S.g_PlutoRadiusCoefficients = [new kt(66865439, 68951812), new kt(-11827535, -332538), new kt(1593179, -1438890), new kt(-18444, 483220), new kt(-65977, -85431), new kt(31174, -6032), new kt(-5794, 22161), new kt(4601, 4032), new kt(-1729, 234), new kt(-415, 702), new kt(239, 723), new kt(67, -67), new kt(1034, -451), new kt(-129, 504), new kt(480, -231), new kt(2, -441), new kt(-3359, 265), new kt(7856, -7832), new kt(36, 45763), new kt(8663, 8547), new kt(-809, -769), new kt(263, -144), new kt(-126, 32), new kt(-35, -16), new kt(-19, -4), new kt(-15, 8), new kt(-4, 12), new kt(5, 6), new kt(3, 1), new kt(6, -2), new kt(2, 2), new kt(-2, -2), new kt(14, 13), new kt(-63, 13), new kt(136, -236), new kt(273, 1065), new kt(251, 149), new kt(-25, -9), new kt(9, -2), new kt(-8, 7), new kt(2, -10), new kt(19, 35), new kt(10, 3)], S.g_L0SaturnCoefficients = [new o(87401354, 0, 0), new o(11107660, 3.9620509, 213.29909544), new o(1414151, 4.5858152, 7.113547), new o(398379, 0.52112, 206.185548), new o(350769, 3.303299, 426.598191), new o(206816, 0.246584, 103.092774), new o(79271, 3.84007, 220.41264), new o(23990, 4.66977, 110.20632), new o(16574, 0.43719, 419.48464), new o(15820, 0.93809, 632.78374), new o(15054, 2.7167, 639.89729), new o(14907, 5.76903, 316.39187), new o(14610, 1.56519, 3.93215), new o(13160, 4.44891, 14.22709), new o(13005, 5.98119, 11.0457), new o(10725, 3.1294, 202.2534), new o(6126, 1.7633, 277.035), new o(5863, 0.2366, 529.691), new o(5228, 4.2078, 3.1814), new o(5020, 3.1779, 433.7117), new o(4593, 0.6198, 199.072), new o(4006, 2.2448, 63.7359), new o(3874, 3.2228, 138.5175), new o(3269, 0.7749, 949.1756), new o(2954, 0.9828, 95.9792), new o(2461, 2.0316, 735.8765), new o(1758, 3.2658, 522.5774), new o(1640, 5.505, 846.0828), new o(1581, 4.3727, 309.2783), new o(1391, 4.0233, 323.5054), new o(1124, 2.8373, 415.5525), new o(1087, 4.1834, 2.4477), new o(1017, 3.717, 227.5262), new o(957, 0.507, 1265.567), new o(853, 3.421, 175.166), new o(849, 3.191, 209.367), new o(789, 5.007, 0.963), new o(749, 2.144, 853.196), new o(744, 5.253, 224.345), new o(687, 1.747, 1052.268), new o(654, 1.599, 0.048), new o(634, 2.299, 412.371), new o(625, 0.97, 210.118), new o(580, 3.093, 74.782), new o(546, 2.127, 350.332), new o(543, 1.518, 9.561), new o(530, 4.449, 117.32), new o(478, 2.965, 137.033), new o(474, 5.475, 742.99), new o(452, 1.044, 490.334), new o(449, 1.29, 127.472), new o(372, 2.278, 217.231), new o(355, 3.013, 838.969), new o(347, 1.539, 340.771), new o(343, 0.246, 0.521), new o(330, 0.247, 1581.959), new o(322, 0.961, 203.738), new o(322, 2.572, 647.011), new o(309, 3.495, 216.48), new o(287, 2.37, 351.817), new o(278, 0.4, 211.815), new o(249, 1.47, 1368.66), new o(227, 4.91, 12.53), new o(220, 4.204, 200.769), new o(209, 1.345, 625.67), new o(208, 0.483, 1162.475), new o(208, 1.283, 39.357), new o(204, 6.011, 265.989), new o(185, 3.503, 149.563), new o(184, 0.973, 4.193), new o(182, 5.491, 2.921), new o(174, 1.863, 0.751), new o(165, 0.44, 5.417), new o(149, 5.736, 52.69), new o(148, 1.535, 5.629), new o(146, 6.231, 195.14), new o(140, 4.295, 21.341), new o(131, 4.068, 10.295), new o(125, 6.277, 1898.351), new o(122, 1.976, 4.666), new o(118, 5.341, 554.07), new o(117, 2.679, 1155.361), new o(114, 5.594, 1059.382), new o(112, 1.105, 191.208), new o(110, 0.166, 1.484), new o(109, 3.438, 536.805), new o(107, 4.012, 956.289), new o(104, 2.192, 88.866), new o(103, 1.197, 1685.052), new o(101, 4.965, 269.921)], S.g_L1SaturnCoefficients = [new o(21354295596, 0, 0), new o(1296855, 1.8282054, 213.2990954), new o(564348, 2.885001, 7.113547), new o(107679, 2.277699, 206.185548), new o(98323, 1.0807, 426.59819), new o(40255, 2.04128, 220.41264), new o(19942, 1.27955, 103.09277), new o(10512, 2.7488, 14.22709), new o(6939, 0.4049, 639.8973), new o(4803, 2.4419, 419.4846), new o(4056, 2.9217, 110.2063), new o(3769, 3.6497, 3.9322), new o(3385, 2.4169, 3.1814), new o(3302, 1.2626, 433.7117), new o(3071, 2.3274, 199.072), new o(1953, 3.5639, 11.0457), new o(1249, 2.628, 95.9792), new o(922, 1.961, 227.526), new o(706, 4.417, 529.691), new o(650, 6.174, 202.253), new o(628, 6.111, 309.278), new o(487, 6.04, 853.196), new o(479, 4.988, 522.577), new o(468, 4.617, 63.736), new o(417, 2.117, 323.505), new o(408, 1.299, 209.367), new o(352, 2.317, 632.784), new o(344, 3.959, 412.371), new o(340, 3.634, 316.392), new o(336, 3.772, 735.877), new o(332, 2.861, 210.118), new o(289, 2.733, 117.32), new o(281, 5.744, 2.448), new o(266, 0.543, 647.011), new o(230, 1.644, 216.48), new o(192, 2.965, 224.345), new o(173, 4.077, 846.083), new o(167, 2.597, 21.341), new o(136, 2.286, 10.295), new o(131, 3.441, 742.99), new o(128, 4.095, 217.231), new o(109, 6.161, 415.552), new o(98, 4.73, 838.97), new o(94, 3.48, 1052.27), new o(92, 3.95, 88.87), new o(87, 1.22, 440.83), new o(83, 3.11, 625.67), new o(78, 6.24, 302.16), new o(67, 0.29, 4.67), new o(66, 5.65, 9.56), new o(62, 4.29, 127.47), new o(62, 1.83, 195.14), new o(58, 2.48, 191.96), new o(57, 5.02, 137.03), new o(55, 0.28, 74.78), new o(54, 5.13, 490.33), new o(51, 1.46, 536.8), new o(47, 1.18, 149.56), new o(47, 5.15, 515.46), new o(46, 2.23, 956.29), new o(44, 2.71, 5.42), new o(40, 0.41, 269.92), new o(40, 3.89, 728.76), new o(38, 0.65, 422.67), new o(38, 2.53, 12.53), new o(37, 3.78, 2.92), new o(35, 6.08, 5.63), new o(34, 3.21, 1368.66), new o(33, 4.64, 277.03), new o(33, 5.43, 1066.5), new o(33, 0.3, 351.82), new o(32, 4.39, 1155.36), new o(31, 2.43, 52.69), new o(30, 2.84, 203), new o(30, 6.19, 284.15), new o(30, 3.39, 1059.38), new o(29, 2.03, 330.62), new o(28, 2.74, 265.99), new o(26, 4.51, 340.77)], S.g_L2SaturnCoefficients = [new o(116441, 1.179879, 7.113547), new o(91921, 0.07425, 213.2991), new o(90592, 0, 0), new o(15277, 4.06492, 206.18555), new o(10631, 0.25778, 220.41264), new o(10605, 5.40964, 426.59819), new o(4265, 1.046, 14.2271), new o(1216, 2.9186, 103.0928), new o(1165, 4.6094, 639.8973), new o(1082, 5.6913, 433.7117), new o(1045, 4.0421, 199.072), new o(1020, 0.6337, 3.1814), new o(634, 4.388, 419.485), new o(549, 5.573, 3.932), new o(457, 1.268, 110.206), new o(425, 0.209, 227.526), new o(274, 4.288, 95.979), new o(162, 1.381, 11.046), new o(129, 1.566, 309.278), new o(117, 3.881, 853.196), new o(105, 4.9, 647.011), new o(101, 0.893, 21.341), new o(96, 2.91, 316.39), new o(95, 5.63, 412.37), new o(85, 5.73, 209.37), new o(83, 6.05, 216.48), new o(82, 1.02, 117.32), new o(75, 4.76, 210.12), new o(67, 0.46, 522.58), new o(66, 0.48, 10.29), new o(64, 0.35, 323.51), new o(61, 4.88, 632.78), new o(53, 2.75, 529.69), new o(46, 5.69, 440.83), new o(45, 1.67, 202.25), new o(42, 5.71, 88.87), new o(32, 0.07, 63.74), new o(32, 1.67, 302.16), new o(31, 4.16, 191.96), new o(27, 0.83, 224.34), new o(25, 5.66, 735.88), new o(20, 5.94, 217.23), new o(18, 4.9, 625.67), new o(17, 1.63, 742.99), new o(16, 0.58, 515.46), new o(14, 0.21, 838.97), new o(14, 3.76, 195.14), new o(12, 4.72, 203), new o(12, 0.13, 234.64), new o(12, 3.12, 846.08), new o(11, 5.92, 536.8), new o(11, 5.6, 728.76), new o(11, 3.2, 1066.5), new o(10, 4.99, 422.67), new o(10, 0.26, 330.62), new o(10, 4.15, 860.31), new o(9, 0.46, 956.29), new o(8, 2.14, 269.92), new o(8, 5.25, 429.78), new o(8, 4.03, 9.56), new o(7, 5.4, 1052.27), new o(6, 4.46, 284.15), new o(6, 5.93, 405.26)], S.g_L3SaturnCoefficients = [new o(16039, 5.73945, 7.11355), new o(4250, 4.5854, 213.2991), new o(1907, 4.7608, 220.4126), new o(1466, 5.9133, 206.1855), new o(1162, 5.6197, 14.2271), new o(1067, 3.6082, 426.5982), new o(239, 3.861, 433.712), new o(237, 5.768, 199.072), new o(166, 5.116, 3.181), new o(151, 2.736, 639.897), new o(131, 4.743, 227.526), new o(63, 0.23, 419.48), new o(62, 4.74, 103.09), new o(40, 5.47, 21.34), new o(40, 5.96, 95.98), new o(39, 5.83, 110.21), new o(28, 3.01, 647.01), new o(25, 0.99, 3.93), new o(19, 1.92, 853.2), new o(18, 4.97, 10.29), new o(18, 1.03, 412.37), new o(18, 4.2, 216.48), new o(18, 3.32, 309.28), new o(16, 3.9, 440.83), new o(16, 5.62, 117.32), new o(13, 1.18, 88.87), new o(11, 5.58, 11.05), new o(11, 5.93, 191.96), new o(10, 3.95, 209.37), new o(9, 3.39, 302.16), new o(8, 4.88, 323.51), new o(7, 0.38, 632.78), new o(6, 2.25, 522.58), new o(6, 1.06, 210.12), new o(5, 4.64, 234.64), new o(4, 3.14, 0), new o(4, 2.31, 515.46), new o(3, 2.2, 860.31), new o(3, 0.59, 529.69), new o(3, 4.93, 224.34), new o(3, 0.42, 625.67), new o(2, 4.77, 330.62), new o(2, 3.35, 429.78), new o(2, 3.2, 202.25), new o(2, 1.19, 1066.5), new o(2, 1.35, 405.26), new o(2, 4.16, 223.59), new o(2, 3.07, 654.12)], S.g_L4SaturnCoefficients = [new o(1662, 3.9983, 7.1135), new o(257, 2.984, 220.413), new o(236, 3.902, 14.227), new o(149, 2.741, 213.299), new o(114, 3.142, 0), new o(110, 1.515, 206.186), new o(68, 1.72, 426.6), new o(40, 2.05, 433.71), new o(38, 1.24, 199.07), new o(31, 3.01, 227.53), new o(15, 0.83, 639.9), new o(9, 3.71, 21.34), new o(6, 2.42, 419.48), new o(6, 1.16, 647.01), new o(4, 1.45, 95.98), new o(4, 2.12, 440.83), new o(3, 4.09, 110.21), new o(3, 2.77, 412.37), new o(3, 3.01, 88.87), new o(3, 0, 853.2), new o(3, 0.39, 103.09), new o(2, 3.78, 117.32), new o(2, 2.83, 234.64), new o(2, 5.08, 309.28), new o(2, 2.24, 216.48), new o(2, 5.19, 302.16), new o(1, 1.55, 191.96)], S.g_L5SaturnCoefficients = [new o(124, 2.259, 7.114), new o(34, 2.16, 14.23), new o(28, 1.2, 220.41), new o(6, 1.22, 227.53), new o(5, 0.24, 433.71), new o(4, 6.23, 426.6), new o(3, 2.97, 199.07), new o(3, 4.29, 206.19), new o(2, 6.25, 213.3), new o(1, 5.28, 639.9), new o(1, 0.24, 440.83), new o(1, 3.14, 0)], S.g_B0SaturnCoefficients = [new o(4330678, 3.6028443, 213.2990954), new o(240348, 2.852385, 426.598191), new o(84746, 0, 0), new o(34116, 0.57297, 206.18555), new o(30863, 3.48442, 220.41264), new o(14734, 2.11847, 639.89729), new o(9917, 5.79, 419.4846), new o(6994, 4.736, 7.1135), new o(4808, 5.4331, 316.3919), new o(4788, 4.9651, 110.2063), new o(3432, 2.7326, 433.7117), new o(1506, 6.013, 103.0928), new o(1060, 5.631, 529.691), new o(969, 5.204, 632.784), new o(942, 1.396, 853.196), new o(708, 3.803, 323.505), new o(552, 5.131, 202.253), new o(400, 3.359, 227.526), new o(319, 3.626, 209.367), new o(316, 1.997, 647.011), new o(314, 0.465, 217.231), new o(284, 4.886, 224.345), new o(236, 2.139, 11.046), new o(215, 5.95, 846.083), new o(209, 2.12, 415.552), new o(207, 0.73, 199.072), new o(179, 2.954, 63.736), new o(141, 0.644, 490.334), new o(139, 4.595, 14.227), new o(139, 1.998, 735.877), new o(135, 5.245, 742.99), new o(122, 3.115, 522.577), new o(116, 3.109, 216.48), new o(114, 0.963, 210.118)], S.g_B1SaturnCoefficients = [new o(397555, 5.3329, 213.299095), new o(49479, 3.14159, 0), new o(18572, 6.09919, 426.59819), new o(14801, 2.30586, 206.18555), new o(9644, 1.6967, 220.4126), new o(3757, 1.2543, 419.4846), new o(2717, 5.9117, 639.8973), new o(1455, 0.8516, 433.7117), new o(1291, 2.9177, 7.1135), new o(853, 0.436, 316.392), new o(298, 0.919, 632.784), new o(292, 5.316, 853.196), new o(284, 1.619, 227.526), new o(275, 3.889, 103.093), new o(172, 0.052, 647.011), new o(166, 2.444, 199.072), new o(158, 5.209, 110.206), new o(128, 1.207, 529.691), new o(110, 2.457, 217.231), new o(82, 2.76, 210.12), new o(81, 2.86, 14.23), new o(69, 1.66, 202.25), new o(65, 1.26, 216.48), new o(61, 1.25, 209.37), new o(59, 1.82, 323.51), new o(46, 0.82, 440.83), new o(36, 1.82, 224.34), new o(34, 2.84, 117.32), new o(33, 1.31, 412.37), new o(32, 1.19, 846.08), new o(27, 4.65, 1066.5), new o(27, 4.44, 11.05)], S.g_B2SaturnCoefficients = [new o(20630, 0.50482, 213.2991), new o(3720, 3.9983, 206.1855), new o(1627, 6.1819, 220.4126), new o(1346, 0, 0), new o(706, 3.039, 419.485), new o(365, 5.099, 426.598), new o(330, 5.279, 433.712), new o(219, 3.828, 639.897), new o(139, 1.043, 7.114), new o(104, 6.157, 227.526), new o(93, 1.98, 316.39), new o(71, 4.15, 199.07), new o(52, 2.88, 632.78), new o(49, 4.43, 647.01), new o(41, 3.16, 853.2), new o(29, 4.53, 210.12), new o(24, 1.12, 14.23), new o(21, 4.35, 217.23), new o(20, 5.31, 440.83), new o(18, 0.85, 110.21), new o(17, 5.68, 216.48), new o(16, 4.26, 103.09), new o(14, 3, 412.37), new o(12, 2.53, 529.69), new o(8, 3.32, 202.25), new o(7, 5.56, 209.37), new o(7, 0.29, 323.51), new o(6, 1.16, 117.32), new o(6, 3.61, 869.31)], S.g_B3SaturnCoefficients = [new o(666, 1.99, 213.299), new o(632, 5.698, 206.186), new o(398, 0, 0), new o(188, 4.338, 220.413), new o(92, 4.84, 419.48), new o(52, 3.42, 433.71), new o(42, 2.38, 426.6), new o(26, 4.4, 227.53), new o(21, 5.85, 199.07), new o(18, 1.99, 639.9), new o(11, 5.37, 7.11), new o(10, 2.55, 647.01), new o(7, 3.46, 316.39), new o(6, 4.8, 632.78), new o(6, 0.02, 210.12), new o(6, 3.52, 440.83), new o(5, 5.64, 14.23), new o(5, 1.22, 853.2), new o(4, 4.71, 412.37), new o(3, 0.63, 103.09), new o(2, 3.72, 216.48)], S.g_B4SaturnCoefficients = [new o(80, 1.12, 206.19), new o(32, 3.12, 213.3), new o(17, 2.48, 220.41), new o(12, 3.14, 0), new o(9, 0.38, 419.48), new o(6, 1.56, 433.71), new o(5, 2.63, 227.53), new o(5, 1.28, 199.07), new o(1, 1.43, 426.6), new o(1, 0.67, 647.01), new o(1, 1.72, 440.83), new o(1, 6.18, 639.9)], S.g_B5SaturnCoefficients = [new o(8, 2.82, 206.19), new o(1, 0.51, 220.41)], S.g_R0SaturnCoefficients = [new o(955758136, 0, 0), new o(52921382, 2.3922622, 213.29909544), new o(1873680, 5.2354961, 206.1855484), new o(1464664, 1.6476305, 426.5981909), new o(821891, 5.9352, 316.39187), new o(547507, 5.015326, 103.092774), new o(371684, 2.271148, 220.412642), new o(361778, 3.139043, 7.113547), new o(140618, 5.704067, 632.783739), new o(108975, 3.293136, 110.206321), new o(69007, 5.941, 419.48464), new o(61053, 0.94038, 639.89729), new o(48913, 1.55733, 202.2534), new o(34144, 0.19519, 277.03499), new o(32402, 5.47085, 949.17561), new o(20937, 0.46349, 735.87651), new o(20839, 1.52103, 433.71174), new o(20747, 5.33256, 199.072), new o(15298, 3.05944, 529.69097), new o(14296, 2.60434, 323.50542), new o(12884, 1.64892, 138.5175), new o(11993, 5.98051, 846.08283), new o(11380, 1.73106, 522.57742), new o(9796, 5.2048, 1265.5675), new o(7753, 5.8519, 95.9792), new o(6771, 3.0043, 14.2271), new o(6466, 0.1773, 1052.2684), new o(5850, 1.4552, 415.5525), new o(5307, 0.5974, 63.7359), new o(4696, 2.1492, 227.5262), new o(4044, 1.6401, 209.3669), new o(3688, 0.7802, 412.3711), new o(3461, 1.8509, 175.1661), new o(3420, 4.9455, 1581.9593), new o(3401, 0.5539, 350.3321), new o(3376, 3.6953, 224.3448), new o(2976, 5.6847, 210.1177), new o(2885, 1.3876, 838.9693), new o(2881, 0.1796, 853.1964), new o(2508, 3.5385, 742.9901), new o(2448, 6.1841, 1368.6603), new o(2406, 2.9656, 117.3199), new o(2174, 0.0151, 340.7709), new o(2024, 5.0541, 11.0457)], S.g_R1SaturnCoefficients = [new o(6182981, 0.2584352, 213.2990954), new o(506578, 0.711147, 206.185548), new o(341394, 5.796358, 426.598191), new o(188491, 0.472157, 220.412642), new o(186262, 3.141593, 0), new o(143891, 1.407449, 7.113547), new o(49621, 6.01744, 103.09277), new o(20928, 5.09246, 639.89729), new o(19953, 1.1756, 419.48464), new o(18840, 1.6082, 110.20632), new o(13877, 0.75886, 199.072), new o(12893, 5.9433, 433.71174), new o(5397, 1.2885, 14.2271), new o(4869, 0.8679, 323.5054), new o(4247, 0.393, 227.5262), new o(3252, 1.2585, 95.9792), new o(3081, 3.4366, 522.5774), new o(2909, 4.6068, 202.2534), new o(2856, 2.1673, 735.8765), new o(1988, 2.4505, 412.3711), new o(1941, 6.0239, 209.3669), new o(1581, 1.2919, 210.1177), new o(1340, 4.308, 853.1964), new o(1316, 1.253, 117.3199), new o(1203, 1.8665, 316.3919), new o(1091, 0.0753, 216.4805), new o(966, 0.48, 632.784), new o(954, 5.152, 647.011), new o(898, 0.983, 529.691), new o(882, 1.885, 1052.268), new o(874, 1.402, 224.345), new o(785, 3.064, 838.969), new o(740, 1.382, 625.67), new o(658, 4.144, 309.278), new o(650, 1.725, 742.99), new o(613, 3.033, 63.736), new o(599, 2.549, 217.231), new o(503, 2.13, 3.932)], S.g_R2SaturnCoefficients = [new o(436902, 4.786717, 213.299095), new o(71923, 2.5007, 206.18555), new o(49767, 4.97168, 220.41264), new o(43221, 3.8694, 426.59819), new o(29646, 5.9631, 7.11355), new o(4721, 2.4753, 199.072), new o(4142, 4.1067, 433.7117), new o(3789, 3.0977, 639.8973), new o(2964, 1.3721, 103.0928), new o(2556, 2.8507, 419.4846), new o(2327, 0, 0), new o(2208, 6.2759, 110.2063), new o(2188, 5.8555, 14.2271), new o(1957, 4.9245, 227.5262), new o(924, 5.464, 323.505), new o(706, 2.971, 95.979), new o(546, 4.129, 412.371), new o(431, 5.178, 522.577), new o(405, 4.173, 209.367), new o(391, 4.481, 216.48), new o(374, 5.834, 117.32), new o(361, 3.277, 647.011), new o(356, 3.192, 210.118), new o(326, 2.269, 853.196), new o(207, 4.022, 735.877), new o(204, 0.088, 202.253), new o(180, 3.597, 632.784), new o(178, 4.097, 440.825), new o(154, 3.135, 625.67), new o(148, 0.136, 302.165), new o(133, 2.594, 191.958), new o(132, 5.933, 309.278)], S.g_R3SaturnCoefficients = [new o(20315, 3.02187, 213.2991), new o(8924, 3.1914, 220.4126), new o(6909, 4.3517, 206.1855), new o(4087, 4.2241, 7.1135), new o(3879, 2.0106, 426.5982), new o(1071, 4.2036, 199.072), new o(907, 2.283, 433.712), new o(606, 3.175, 227.526), new o(597, 4.135, 14.227), new o(483, 1.173, 639.897), new o(393, 0, 0), new o(229, 4.698, 419.485), new o(188, 4.59, 110.206), new o(150, 3.202, 103.093), new o(121, 3.768, 323.505), new o(102, 4.71, 95.979), new o(101, 5.819, 412.371), new o(93, 1.44, 647.01), new o(84, 2.63, 216.48), new o(73, 4.15, 117.32), new o(62, 2.31, 440.83), new o(55, 0.31, 853.2), new o(50, 2.39, 209.37), new o(45, 4.37, 191.96), new o(41, 0.69, 522.58), new o(40, 1.84, 302.16), new o(38, 5.94, 88.87), new o(32, 4.01, 21.34)], S.g_R4SaturnCoefficients = [new o(1202, 1.415, 220.4126), new o(708, 1.162, 213.299), new o(516, 6.24, 206.186), new o(427, 2.469, 7.114), new o(268, 0.187, 426.598), new o(170, 5.959, 199.072), new o(150, 0.48, 433.712), new o(145, 1.442, 227.526), new o(121, 2.405, 14.227), new o(47, 5.57, 639.9), new o(19, 5.86, 647.01), new o(17, 0.53, 440.83), new o(16, 2.9, 110.21), new o(15, 0.3, 419.48), new o(14, 1.3, 412.37), new o(13, 2.09, 323.51), new o(11, 0.22, 95.98), new o(11, 2.46, 117.32), new o(10, 3.14, 0), new o(9, 1.56, 88.87), new o(9, 2.28, 21.34), new o(9, 0.68, 216.48), new o(8, 1.27, 234.64)], S.g_R5SaturnCoefficients = [new o(129, 5.913, 220.413), new o(32, 0.69, 7.11), new o(27, 5.91, 227.53), new o(20, 4.95, 433.71), new o(20, 0.67, 14.23), new o(14, 2.67, 206.19), new o(14, 1.46, 199.07), new o(13, 4.59, 426.6), new o(7, 4.63, 213.3), new o(5, 3.61, 639.9), new o(4, 4.9, 440.83), new o(3, 4.07, 647.01), new o(3, 4.66, 191.96), new o(3, 0.49, 323.51), new o(3, 3.18, 419.48), new o(2, 3.7, 88.87), new o(2, 3.32, 95.98), new o(2, 0.56, 117.32)], S.g_L0UranusCoefficients = [new o(548129294, 0, 0), new o(9260408, 0.8910642, 74.7815986), new o(1504248, 3.6271926, 1.4844727), new o(365982, 1.899622, 73.297126), new o(272328, 3.358237, 149.563197), new o(70328, 5.39254, 63.7359), new o(68893, 6.09292, 76.26607), new o(61999, 2.26952, 2.96895), new o(61951, 2.85099, 11.0457), new o(26469, 3.14152, 71.81265), new o(25711, 6.1138, 454.90937), new o(21079, 4.36059, 148.07872), new o(17819, 1.74437, 36.64856), new o(14613, 4.73732, 3.93215), new o(11163, 5.82682, 224.3448), new o(10998, 0.48865, 138.5175), new o(9527, 2.9552, 35.1641), new o(7546, 5.2363, 109.9457), new o(4220, 3.2333, 70.8494), new o(4052, 2.2775, 151.0477), new o(3490, 5.4831, 146.5943), new o(3355, 1.0655, 4.4534), new o(3144, 4.752, 77.7505), new o(2927, 4.629, 9.5612), new o(2922, 5.3524, 85.8273), new o(2273, 4.366, 70.3282), new o(2149, 0.6075, 38.133), new o(2051, 1.5177, 0.1119), new o(1992, 4.9244, 277.035), new o(1667, 3.6274, 380.1278), new o(1533, 2.5859, 52.6902), new o(1376, 2.0428, 65.2204), new o(1372, 4.1964, 111.4302), new o(1284, 3.1135, 202.2534), new o(1282, 0.5427, 222.8603), new o(1244, 0.9161, 2.4477), new o(1221, 0.199, 108.4612), new o(1151, 4.179, 33.6796), new o(1150, 0.9334, 3.1814), new o(1090, 1.775, 12.5302), new o(1072, 0.2356, 62.2514), new o(946, 1.192, 127.472), new o(708, 5.183, 213.299), new o(653, 0.966, 78.714), new o(628, 0.182, 984.6), new o(607, 5.432, 529.691), new o(559, 3.358, 0.521), new o(524, 2.013, 299.126), new o(483, 2.106, 0.963), new o(471, 1.407, 184.727), new o(467, 0.415, 145.11), new o(434, 5.521, 183.243), new o(405, 5.987, 8.077), new o(399, 0.338, 415.552), new o(396, 5.87, 351.817), new o(379, 2.35, 56.622), new o(310, 5.833, 145.631), new o(300, 5.644, 22.091), new o(294, 5.839, 39.618), new o(252, 1.637, 221.376), new o(249, 4.746, 225.829), new o(239, 2.35, 137.033), new o(224, 0.516, 84.343), new o(223, 2.843, 0.261), new o(220, 1.922, 67.668), new o(217, 6.142, 5.938), new o(216, 4.778, 340.771), new o(208, 5.58, 68.844), new o(202, 1.297, 0.048), new o(199, 0.956, 152.532), new o(194, 1.888, 456.394), new o(193, 0.916, 453.425), new o(187, 1.319, 0.16), new o(182, 3.536, 79.235), new o(173, 1.539, 160.609), new o(172, 5.68, 219.891), new o(170, 3.677, 5.417), new o(169, 5.879, 18.159), new o(165, 1.424, 106.977), new o(163, 3.05, 112.915), new o(158, 0.738, 54.175), new o(147, 1.263, 59.804), new o(143, 1.3, 35.425), new o(139, 5.386, 32.195), new o(139, 4.26, 909.819), new o(124, 1.374, 7.114), new o(110, 2.027, 554.07), new o(109, 5.706, 77.963), new o(104, 5.028, 0.751), new o(104, 1.458, 24.379), new o(103, 0.681, 14.978)], S.g_L1UranusCoefficients = [new o(7502543122, 0, 0), new o(154458, 5.242017, 74.781599), new o(24456, 1.71256, 1.48447), new o(9258, 0.4284, 11.0457), new o(8266, 1.5022, 63.7359), new o(7842, 1.3198, 149.5632), new o(3899, 0.4648, 3.9322), new o(2284, 4.1737, 76.2661), new o(1927, 0.5301, 2.9689), new o(1233, 1.5863, 70.8494), new o(791, 5.436, 3.181), new o(767, 1.996, 73.297), new o(482, 2.984, 85.827), new o(450, 4.138, 138.517), new o(446, 3.723, 224.345), new o(427, 4.731, 71.813), new o(354, 2.583, 148.079), new o(348, 2.454, 9.561), new o(317, 5.579, 52.69), new o(206, 2.363, 2.448), new o(189, 4.202, 56.622), new o(184, 0.284, 151.048), new o(180, 5.684, 12.53), new o(171, 3.001, 78.714), new o(158, 2.909, 0.963), new o(155, 5.591, 4.453), new o(154, 4.652, 35.164), new o(152, 2.942, 77.751), new o(143, 2.59, 62.251), new o(121, 4.148, 127.472), new o(116, 3.732, 65.22), new o(102, 4.188, 145.631), new o(102, 6.034, 0.112), new o(88, 3.99, 18.16), new o(88, 6.16, 202.25), new o(81, 2.64, 22.09), new o(72, 6.05, 70.33), new o(69, 4.05, 77.96), new o(59, 3.7, 67.67), new o(47, 3.54, 351.82), new o(44, 5.91, 7.11), new o(43, 5.72, 5.42), new o(39, 4.92, 222.86), new o(36, 5.9, 33.68), new o(36, 3.29, 8.08), new o(36, 3.33, 71.6), new o(35, 5.08, 38.13), new o(31, 5.62, 984.6), new o(31, 5.5, 59.8), new o(31, 5.46, 160.61), new o(30, 1.66, 447.8), new o(29, 1.15, 462.02), new o(29, 4.52, 84.34), new o(27, 5.54, 131.4), new o(27, 6.15, 299.13), new o(26, 4.99, 137.03), new o(25, 5.74, 380.13)], S.g_L2UranusCoefficients = [new o(53033, 0, 0), new o(2358, 2.2601, 74.7816), new o(769, 4.526, 11.046), new o(552, 3.258, 63.736), new o(542, 2.276, 3.932), new o(529, 4.923, 1.484), new o(258, 3.691, 3.181), new o(239, 5.858, 149.563), new o(182, 6.218, 70.849), new o(54, 1.44, 76.27), new o(49, 6.03, 56.62), new o(45, 3.91, 2.45), new o(45, 0.81, 85.83), new o(38, 1.78, 52.69), new o(37, 4.46, 2.97), new o(33, 0.86, 9.56), new o(29, 5.1, 73.3), new o(24, 2.11, 18.16), new o(22, 5.99, 138.52), new o(22, 4.82, 78.71), new o(21, 2.4, 77.96), new o(21, 2.17, 224.34), new o(17, 2.54, 145.63), new o(17, 3.47, 12.53), new o(12, 0.02, 22.09), new o(11, 0.08, 127.47), new o(10, 5.16, 71.6), new o(10, 4.46, 62.25), new o(9, 4.26, 7.11), new o(8, 5.5, 67.67), new o(7, 1.25, 5.42), new o(6, 3.36, 447.8), new o(6, 5.45, 65.22), new o(6, 4.52, 151.05), new o(6, 5.73, 462.02)], S.g_L3UranusCoefficients = [new o(121, 0.024, 74.782), new o(68, 4.12, 3.93), new o(53, 2.39, 11.05), new o(46, 0, 0), new o(45, 2.04, 3.18), new o(44, 2.96, 1.48), new o(25, 4.89, 63.74), new o(21, 4.55, 70.85), new o(20, 2.31, 149.56), new o(9, 1.58, 56.62), new o(4, 0.23, 18.16), new o(4, 5.39, 76.27), new o(4, 0.95, 77.96), new o(3, 4.98, 85.83), new o(3, 4.13, 52.69), new o(3, 0.37, 78.71), new o(2, 0.86, 145.63), new o(2, 5.66, 9.56)], S.g_L4UranusCoefficients = [new o(114, 3.142, 0), new o(6, 4.58, 74.78), new o(3, 0.35, 11.05), new o(1, 3.42, 56.62)], S.g_B0UranusCoefficients = [new o(1346278, 2.6187781, 74.7815986), new o(62341, 5.08111, 149.5632), new o(61601, 3.14159, 0), new o(9964, 1.616, 76.2661), new o(9926, 0.5763, 73.2971), new o(3259, 1.2612, 224.3448), new o(2972, 2.2437, 1.4845), new o(2010, 6.0555, 148.0787), new o(1522, 0.2796, 63.7359), new o(924, 4.038, 151.048), new o(761, 6.14, 71.813), new o(522, 3.321, 138.517), new o(463, 0.743, 85.827), new o(437, 3.381, 529.691), new o(435, 0.341, 77.751), new o(431, 3.554, 213.299), new o(420, 5.213, 11.046), new o(245, 0.788, 2.969), new o(233, 2.257, 222.86), new o(216, 1.591, 38.133), new o(180, 3.725, 299.126), new o(175, 1.236, 146.594), new o(174, 1.937, 380.128), new o(160, 5.336, 111.43), new o(144, 5.962, 35.164), new o(116, 5.739, 70.849), new o(106, 0.941, 70.328), new o(102, 2.619, 78.714)], S.g_B1UranusCoefficients = [new o(206366, 4.123943, 74.781599), new o(8563, 0.3382, 149.5632), new o(1726, 2.1219, 73.2971), new o(1374, 0, 0), new o(1369, 3.0686, 76.2661), new o(451, 3.777, 1.484), new o(400, 2.848, 224.345), new o(307, 1.255, 148.079), new o(154, 3.786, 63.736), new o(112, 5.573, 151.048), new o(111, 5.329, 138.517), new o(83, 3.59, 71.81), new o(56, 3.4, 85.83), new o(54, 1.7, 77.75), new o(42, 1.21, 11.05), new o(41, 4.45, 78.71), new o(32, 3.77, 222.86), new o(30, 2.56, 2.97), new o(27, 5.34, 213.3), new o(26, 0.42, 380.13)], S.g_B2UranusCoefficients = [new o(9212, 5.8004, 74.7816), new o(557, 0, 0), new o(286, 2.177, 149.563), new o(95, 3.84, 73.3), new o(45, 4.88, 76.27), new o(20, 5.46, 1.48), new o(15, 0.88, 138.52), new o(14, 2.85, 148.08), new o(14, 5.07, 63.74), new o(10, 5, 224.34), new o(8, 6.27, 78.71)], S.g_B3UranusCoefficients = [new o(268, 1.251, 74.782), new o(11, 3.14, 0), new o(6, 4.01, 149.56), new o(3, 5.78, 73.3)], S.g_B4UranusCoefficients = [new o(6, 2.85, 74.78)], S.g_R0UranusCoefficients = [new o(1921264848, 0, 0), new o(88784984, 5.60377527, 74.78159857), new o(3440836, 0.328361, 73.2971259), new o(2055653, 1.7829517, 149.5631971), new o(649322, 4.522473, 76.266071), new o(602248, 3.860038, 63.735898), new o(496404, 1.401399, 454.909367), new o(338526, 1.580027, 138.517497), new o(243508, 1.570866, 71.812653), new o(190522, 1.998094, 1.484473), new o(161858, 2.791379, 148.078724), new o(143706, 1.383686, 11.0457), new o(93192, 0.17437, 36.64856), new o(89806, 3.66105, 109.94569), new o(71424, 4.24509, 224.3448), new o(46677, 1.39977, 35.16409), new o(39026, 3.36235, 277.03499), new o(39010, 1.66971, 70.84945), new o(36755, 3.88649, 146.59425), new o(30349, 0.701, 151.04767), new o(29156, 3.18056, 77.75054), new o(25786, 3.78538, 85.8273), new o(25620, 5.25656, 380.12777), new o(22637, 0.72519, 529.69097), new o(20473, 2.7964, 70.32818), new o(20472, 1.55589, 202.2534), new o(17901, 0.55455, 2.96895), new o(15503, 5.35405, 38.13304), new o(14702, 4.90434, 108.46122), new o(12897, 2.62154, 111.43016), new o(12328, 5.96039, 127.4718), new o(11959, 1.75044, 984.60033), new o(11853, 0.99343, 52.6902), new o(11696, 3.29826, 3.93215), new o(11495, 0.43774, 65.22037), new o(10793, 1.42105, 213.2991), new o(9111, 4.9964, 62.2514), new o(8421, 5.2535, 222.8603), new o(8402, 5.0388, 415.5525), new o(7449, 0.7949, 351.8166), new o(7329, 3.9728, 183.2428), new o(6046, 5.6796, 78.7138), new o(5524, 3.115, 9.5612), new o(5445, 5.1058, 145.1098), new o(5238, 2.6296, 33.6796), new o(4079, 3.2206, 340.7709), new o(3919, 4.2502, 39.6175), new o(3802, 6.1099, 184.7273), new o(3781, 3.4584, 456.3938), new o(3687, 2.4872, 453.4249), new o(3102, 4.1403, 219.8914), new o(2963, 0.8298, 56.6224), new o(2942, 0.4239, 299.1264), new o(2940, 2.1464, 137.033), new o(2938, 3.6766, 140.002), new o(2865, 0.31, 12.5302), new o(2538, 4.8546, 131.4039), new o(2364, 0.4425, 554.07), new o(2183, 2.9404, 305.3462)], S.g_R1UranusCoefficients = [new o(1479896, 3.6720571, 74.7815986), new o(71212, 6.22601, 63.7359), new o(68627, 6.13411, 149.5632), new o(24060, 3.14159, 0), new o(21468, 2.60177, 76.26607), new o(20857, 5.24625, 11.0457), new o(11405, 0.01848, 70.84945), new o(7497, 0.4236, 73.2971), new o(4244, 1.4169, 85.8273), new o(3927, 3.1551, 71.8127), new o(3578, 2.3116, 224.3448), new o(3506, 2.5835, 138.5175), new o(3229, 5.255, 3.9322), new o(3060, 0.1532, 1.4845), new o(2564, 0.9808, 148.0787), new o(2429, 3.9944, 52.6902), new o(1645, 2.6535, 127.4718), new o(1584, 1.4305, 78.7138), new o(1508, 5.06, 151.0477), new o(1490, 2.6756, 56.6224), new o(1413, 4.5746, 202.2534), new o(1403, 1.3699, 77.7505), new o(1228, 1.047, 62.2514), new o(1033, 0.2646, 131.4039), new o(992, 2.172, 65.22), new o(862, 5.055, 351.817), new o(744, 3.076, 35.164), new o(687, 2.499, 77.963), new o(647, 4.473, 70.328), new o(624, 0.863, 9.561), new o(604, 0.907, 984.6), new o(575, 3.231, 447.796), new o(562, 2.718, 462.023), new o(530, 5.917, 213.299), new o(528, 5.151, 2.969)], S.g_R2UranusCoefficients = [new o(22440, 0.69953, 74.7816), new o(4727, 1.699, 63.7359), new o(1682, 4.6483, 70.8494), new o(1650, 3.0966, 11.0457), new o(1434, 3.5212, 149.5632), new o(770, 0, 0), new o(500, 6.172, 76.266), new o(461, 0.767, 3.932), new o(390, 4.496, 56.622), new o(390, 5.527, 85.827), new o(292, 0.204, 52.69), new o(287, 3.534, 73.297), new o(273, 3.847, 138.517), new o(220, 1.964, 131.404), new o(216, 0.848, 77.963), new o(205, 3.248, 78.714), new o(149, 4.898, 127.472), new o(129, 2.081, 3.181)], S.g_R3UranusCoefficients = [new o(1164, 4.7345, 74.7816), new o(212, 3.343, 63.736), new o(196, 2.98, 70.849), new o(105, 0.958, 11.046), new o(73, 1, 149.56), new o(72, 0.03, 56.62), new o(55, 2.59, 3.93), new o(36, 5.65, 77.96), new o(34, 3.82, 76.27), new o(32, 3.6, 131.4)], S.g_R4UranusCoefficients = [new o(53, 3.01, 74.78), new o(10, 1.91, 56.62)], S.g_L0VenusCoefficients = [new o(317614667, 0, 0), new o(1353968, 5.5931332, 10213.2855462), new o(89892, 5.3065, 20426.57109), new o(5477, 4.4163, 7860.4194), new o(3456, 2.6996, 11790.6291), new o(2372, 2.9938, 3930.2097), new o(1664, 4.2502, 1577.3435), new o(1438, 4.1575, 9683.5946), new o(1317, 5.1867, 26.2983), new o(1201, 6.1536, 30639.8566), new o(769, 0.816, 9437.763), new o(761, 1.95, 529.691), new o(708, 1.065, 775.523), new o(585, 3.998, 191.448), new o(500, 4.123, 15720.839), new o(429, 3.586, 19367.189), new o(327, 5.677, 5507.553), new o(326, 4.591, 10404.734), new o(232, 3.163, 9153.904), new o(180, 4.653, 1109.379), new o(155, 5.57, 19651.048), new o(128, 4.226, 20.775), new o(128, 0.962, 5661.332), new o(106, 1.537, 801.821)], S.g_L1VenusCoefficients = [new o(1021352943053, 0, 0), new o(95708, 2.46424, 10213.28555), new o(14445, 0.51625, 20426.57109), new o(213, 1.795, 30639.857), new o(174, 2.655, 26.298), new o(152, 6.106, 1577.344), new o(82, 5.7, 191.45), new o(70, 2.68, 9437.76), new o(52, 3.6, 775.52), new o(38, 1.03, 529.69), new o(30, 1.25, 5507.55), new o(25, 6.11, 10404.73)], S.g_L2VenusCoefficients = [new o(54127, 0, 0), new o(3891, 0.3451, 10213.2855), new o(1338, 2.0201, 20426.5711), new o(24, 2.05, 26.3), new o(19, 3.54, 30639.86), new o(10, 3.97, 775.52), new o(7, 1.52, 1577.34), new o(6, 1, 191.45)], S.g_L3VenusCoefficients = [new o(136, 4.804, 10213.286), new o(78, 3.67, 20426.57), new o(26, 0, 0)], S.g_L4VenusCoefficients = [new o(114, 3.1416, 0), new o(3, 5.21, 20426.57), new o(2, 2.51, 10213.29)], S.g_L5VenusCoefficients = [new o(1, 3.14, 0)], S.g_B0VenusCoefficients = [new o(5923638, 0.2670278, 10213.2855462), new o(40108, 1.14737, 20426.57109), new o(32815, 3.14737, 0), new o(1011, 1.0895, 30639.8566), new o(149, 6.254, 18073.705), new o(138, 0.86, 1577.344), new o(130, 3.672, 9437.763), new o(120, 3.705, 2352.866), new o(108, 4.539, 22003.915)], S.g_B1VenusCoefficients = [new o(513348, 1.803643, 10213.285546), new o(4380, 3.3862, 20426.5711), new o(199, 0, 0), new o(197, 2.53, 30639.857)], S.g_B2VenusCoefficients = [new o(22378, 3.38509, 10213.28555), new o(282, 0, 0), new o(173, 5.256, 20426.571), new o(27, 3.87, 30639.86)], S.g_B3VenusCoefficients = [new o(647, 4.992, 10213.286), new o(20, 3.14, 0), new o(6, 0.77, 20426.57), new o(3, 5.44, 30639.86)], S.g_B4VenusCoefficients = [new o(14, 0.32, 10213.29)], S.g_R0VenusCoefficients = [new o(72334821, 0, 0), new o(489824, 4.021518, 10213.285546), new o(1658, 4.9021, 20426.5711), new o(1632, 2.8455, 7860.4194), new o(1378, 1.1285, 11790.6291), new o(498, 2.587, 9683.595), new o(374, 1.423, 3930.21), new o(264, 5.529, 9437.763), new o(237, 2.551, 15720.839), new o(222, 2.013, 19367.189), new o(126, 2.728, 1577.344), new o(119, 3.02, 10404.734)], S.g_R1VenusCoefficients = [new o(34551, 0.89199, 10213.28555), new o(234, 1.772, 20426.571), new o(234, 3.142, 0)], S.g_R2VenusCoefficients = [new o(1407, 5.0637, 10213.2855), new o(16, 5.47, 20426.57), new o(13, 0, 0)], S.g_R3VenusCoefficients = [new o(50, 3.22, 10213.29)], S.g_R4VenusCoefficients = [new o(1, 0.92, 10213.29)], Be._pI4_A = 0.785398155450821, Be._pI4_B = 794662735614793e-23, Be._pI4_C = 306161699786838e-31, Be._m_1_PI = 0.318309886183791, qr.ctab = [0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262, 263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283, 1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286, 1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520, 521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526, 527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546, 1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805, 1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816, 2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565, 2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584, 3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335, 3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314, 2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063, 2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082, 3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341, 3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855], qr.utab = [0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845], qr.jrll = [2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4], qr.jpll = [1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7], qr.xoffset = [-1, -1, 0, 1, 1, 1, 0, -1], qr.yoffset = [0, 1, 1, 1, 0, -1, -1, -1], ze.singleton = new ze(), ve.pointList = null, ve.lineList = null, ve.triangleFanPointList = null, ve.triangleList = null, ve.batchDirty = !0, ge._galDetails = new La(), ge._jupDetails = new Ma(), ge._jupPhisical = new As(), ge._jDateLast = 0, jt.RC = 0.017453292519943, jt._maxSeperation = 0.745, jt.containment = null, jt._constToDraw = "", jt.selectedSegment = null, jt._artFile = null, jt.artwork = null, jt.boundries = null, jt.pictureBlendStates = {}, ke.families = {}, $.zero = new $(), tt._s_identity = tt._createIdentity(), De._downloading = !1, De._imagesLoaded = !1, De._imageLoadCount = 0, Xr.starTexture = null, oi.vertLoc = 0, oi.initialized = !1, oi._prog = null, bi.vertLoc = 0, bi.initialized = !1, bi._prog = null, je.vertLoc = 0, je.colorLoc = 0, je.initialized = !1, je._prog = null, Ie.vertLoc = 0, Ie.colorLoc = 0, Ie.timeLoc = 0, Ie.initialized = !1, Ie._prog = null, se.vertLoc = 0, se.colorLoc = 0, se.pointSizeLoc = 0, se.timeLoc = 0, se.initialized = !1, se._prog = null, Gt.abcLoc = 0, Gt.abcLoc1 = 0, Gt.pointSizeLoc = 0, Gt.colorLoc = 0, Gt.weLoc = 0, Gt.nTLoc = 0, Gt.azLoc = 0, Gt.orbitLoc = 0, Gt.initialized = !1, Gt._prog = null, Pe.angleLoc = 0, Pe.initialized = !1, Pe._prog = null, ce.vertLoc = 0, ce.normalLoc = 0, ce.textureLoc = 0, ce.initialized = !1, ce._prog = null, ce.sunPosition = $.create(-1, -1, -1), ce.minLightingBrightness = 1, ce.atmosphereColor = j.fromArgb(0, 0, 0, 0), de.vertLoc = 0, de.normalLoc = 0, de.textureLoc = 0, de.initialized = !1, de._prog = null, de.sunPosition = $.create(-1, -1, -1), de.minLightingBrightness = 1, de.atmosphereColor = j.fromArgb(0, 0, 0, 0), ne.vertLoc = 0, ne.textureLoc = 0, ne.initialized = !1, ne._prog = null, ne.sunPosition = $.create(-1, -1, -1), ne.minLightingBrightness = 1, ne.atmosphereColor = j.fromArgb(0, 0, 0, 0), zt.vertLoc = 0, zt.textureLoc = 0, zt.initialized = !1, zt._prog = null, zt.blankValue = 0, zt.bScale = 1, zt.bZero = 0, zt.min = 0, zt.max = 0, zt.transparentBlack = !1, zt.containsBlanks = !1, zt.scaleType = 0, Oe.vertLoc = 0, Oe.textureLoc = 0, Oe.initialized = !1, Oe._prog = null, He.vertLoc = 0, He.textureLoc = 0, He.initialized = !1, He._prog = null, Ve.vertLoc = 0, Ve.textureLoc = 0, Ve.colorLoc = 0, Ve.initialized = !1, Ve._prog = null, Ze.vertLoc = 0, Ze.textureLoc = 0, Ze.colorLoc = 0, Ze.initialized = !1, Ze._prog = null, Ke.vertLoc = 0, Ke.textureLoc = 0, Ke.initialized = !1, Ke._prog = null, di.empty = null, W._galaxyImageIndexBuffer = null, W._galaxyImageTriangleCount = 0, W._milkyWayImage = null, W._starSprites = null, W._starCount = 0, W._starsDownloading = !1, W._stars = null, W._hipparcosIndex = {}, W._limitingMagnitude = 16, W._galaxyTextures = null, W._galaxyVertexCounts = null, W._largeSet = !0, W._cosmosReady = !1, W._cosmos = null, W._downloadingGalaxy = !1, W._eclipticCount = 0, W._eclipticYear = 0, W._monthDays = [31, 28.2421, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], W._monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], W._eclipticTextYear = 0, ur._sine = 0, ur._cose = 1, ur._degrad = Math.PI / 180, ur.baseDate = r.truncate(Q.utcToJulian(r.now())), Ce.colorTextures = {}, Ce.viridis = Ce.fromStringList(["#440154", "#440256", "#450457", "#450559", "#46075a", "#46085c", "#460a5d", "#460b5e", "#470d60", "#470e61", "#471063", "#471164", "#471365", "#481467", "#481668", "#481769", "#48186a", "#481a6c", "#481b6d", "#481c6e", "#481d6f", "#481f70", "#482071", "#482173", "#482374", "#482475", "#482576", "#482677", "#482878", "#482979", "#472a7a", "#472c7a", "#472d7b", "#472e7c", "#472f7d", "#46307e", "#46327e", "#46337f", "#463480", "#453581", "#453781", "#453882", "#443983", "#443a83", "#443b84", "#433d84", "#433e85", "#423f85", "#424086", "#424186", "#414287", "#414487", "#404588", "#404688", "#3f4788", "#3f4889", "#3e4989", "#3e4a89", "#3e4c8a", "#3d4d8a", "#3d4e8a", "#3c4f8a", "#3c508b", "#3b518b", "#3b528b", "#3a538b", "#3a548c", "#39558c", "#39568c", "#38588c", "#38598c", "#375a8c", "#375b8d", "#365c8d", "#365d8d", "#355e8d", "#355f8d", "#34608d", "#34618d", "#33628d", "#33638d", "#32648e", "#32658e", "#31668e", "#31678e", "#31688e", "#30698e", "#306a8e", "#2f6b8e", "#2f6c8e", "#2e6d8e", "#2e6e8e", "#2e6f8e", "#2d708e", "#2d718e", "#2c718e", "#2c728e", "#2c738e", "#2b748e", "#2b758e", "#2a768e", "#2a778e", "#2a788e", "#29798e", "#297a8e", "#297b8e", "#287c8e", "#287d8e", "#277e8e", "#277f8e", "#27808e", "#26818e", "#26828e", "#26828e", "#25838e", "#25848e", "#25858e", "#24868e", "#24878e", "#23888e", "#23898e", "#238a8d", "#228b8d", "#228c8d", "#228d8d", "#218e8d", "#218f8d", "#21908d", "#21918c", "#20928c", "#20928c", "#20938c", "#1f948c", "#1f958b", "#1f968b", "#1f978b", "#1f988b", "#1f998a", "#1f9a8a", "#1e9b8a", "#1e9c89", "#1e9d89", "#1f9e89", "#1f9f88", "#1fa088", "#1fa188", "#1fa187", "#1fa287", "#20a386", "#20a486", "#21a585", "#21a685", "#22a785", "#22a884", "#23a983", "#24aa83", "#25ab82", "#25ac82", "#26ad81", "#27ad81", "#28ae80", "#29af7f", "#2ab07f", "#2cb17e", "#2db27d", "#2eb37c", "#2fb47c", "#31b57b", "#32b67a", "#34b679", "#35b779", "#37b878", "#38b977", "#3aba76", "#3bbb75", "#3dbc74", "#3fbc73", "#40bd72", "#42be71", "#44bf70", "#46c06f", "#48c16e", "#4ac16d", "#4cc26c", "#4ec36b", "#50c46a", "#52c569", "#54c568", "#56c667", "#58c765", "#5ac864", "#5cc863", "#5ec962", "#60ca60", "#63cb5f", "#65cb5e", "#67cc5c", "#69cd5b", "#6ccd5a", "#6ece58", "#70cf57", "#73d056", "#75d054", "#77d153", "#7ad151", "#7cd250", "#7fd34e", "#81d34d", "#84d44b", "#86d549", "#89d548", "#8bd646", "#8ed645", "#90d743", "#93d741", "#95d840", "#98d83e", "#9bd93c", "#9dd93b", "#a0da39", "#a2da37", "#a5db36", "#a8db34", "#aadc32", "#addc30", "#b0dd2f", "#b2dd2d", "#b5de2b", "#b8de29", "#bade28", "#bddf26", "#c0df25", "#c2df23", "#c5e021", "#c8e020", "#cae11f", "#cde11d", "#d0e11c", "#d2e21b", "#d5e21a", "#d8e219", "#dae319", "#dde318", "#dfe318", "#e2e418", "#e5e419", "#e7e419", "#eae51a", "#ece51b", "#efe51c", "#f1e51d", "#f4e61e", "#f6e620", "#f8e621", "#fbe723", "#fde725"]), Ce.plasma = Ce.fromStringList(["#0d0887", "#100788", "#130789", "#16078a", "#19068c", "#1b068d", "#1d068e", "#20068f", "#220690", "#240691", "#260591", "#280592", "#2a0593", "#2c0594", "#2e0595", "#2f0596", "#310597", "#330597", "#350498", "#370499", "#38049a", "#3a049a", "#3c049b", "#3e049c", "#3f049c", "#41049d", "#43039e", "#44039e", "#46039f", "#48039f", "#4903a0", "#4b03a1", "#4c02a1", "#4e02a2", "#5002a2", "#5102a3", "#5302a3", "#5502a4", "#5601a4", "#5801a4", "#5901a5", "#5b01a5", "#5c01a6", "#5e01a6", "#6001a6", "#6100a7", "#6300a7", "#6400a7", "#6600a7", "#6700a8", "#6900a8", "#6a00a8", "#6c00a8", "#6e00a8", "#6f00a8", "#7100a8", "#7201a8", "#7401a8", "#7501a8", "#7701a8", "#7801a8", "#7a02a8", "#7b02a8", "#7d03a8", "#7e03a8", "#8004a8", "#8104a7", "#8305a7", "#8405a7", "#8606a6", "#8707a6", "#8808a6", "#8a09a5", "#8b0aa5", "#8d0ba5", "#8e0ca4", "#8f0da4", "#910ea3", "#920fa3", "#9410a2", "#9511a1", "#9613a1", "#9814a0", "#99159f", "#9a169f", "#9c179e", "#9d189d", "#9e199d", "#a01a9c", "#a11b9b", "#a21d9a", "#a31e9a", "#a51f99", "#a62098", "#a72197", "#a82296", "#aa2395", "#ab2494", "#ac2694", "#ad2793", "#ae2892", "#b02991", "#b12a90", "#b22b8f", "#b32c8e", "#b42e8d", "#b52f8c", "#b6308b", "#b7318a", "#b83289", "#ba3388", "#bb3488", "#bc3587", "#bd3786", "#be3885", "#bf3984", "#c03a83", "#c13b82", "#c23c81", "#c33d80", "#c43e7f", "#c5407e", "#c6417d", "#c7427c", "#c8437b", "#c9447a", "#ca457a", "#cb4679", "#cc4778", "#cc4977", "#cd4a76", "#ce4b75", "#cf4c74", "#d04d73", "#d14e72", "#d24f71", "#d35171", "#d45270", "#d5536f", "#d5546e", "#d6556d", "#d7566c", "#d8576b", "#d9586a", "#da5a6a", "#da5b69", "#db5c68", "#dc5d67", "#dd5e66", "#de5f65", "#de6164", "#df6263", "#e06363", "#e16462", "#e26561", "#e26660", "#e3685f", "#e4695e", "#e56a5d", "#e56b5d", "#e66c5c", "#e76e5b", "#e76f5a", "#e87059", "#e97158", "#e97257", "#ea7457", "#eb7556", "#eb7655", "#ec7754", "#ed7953", "#ed7a52", "#ee7b51", "#ef7c51", "#ef7e50", "#f07f4f", "#f0804e", "#f1814d", "#f1834c", "#f2844b", "#f3854b", "#f3874a", "#f48849", "#f48948", "#f58b47", "#f58c46", "#f68d45", "#f68f44", "#f79044", "#f79143", "#f79342", "#f89441", "#f89540", "#f9973f", "#f9983e", "#f99a3e", "#fa9b3d", "#fa9c3c", "#fa9e3b", "#fb9f3a", "#fba139", "#fba238", "#fca338", "#fca537", "#fca636", "#fca835", "#fca934", "#fdab33", "#fdac33", "#fdae32", "#fdaf31", "#fdb130", "#fdb22f", "#fdb42f", "#fdb52e", "#feb72d", "#feb82c", "#feba2c", "#febb2b", "#febd2a", "#febe2a", "#fec029", "#fdc229", "#fdc328", "#fdc527", "#fdc627", "#fdc827", "#fdca26", "#fdcb26", "#fccd25", "#fcce25", "#fcd025", "#fcd225", "#fbd324", "#fbd524", "#fbd724", "#fad824", "#fada24", "#f9dc24", "#f9dd25", "#f8df25", "#f8e125", "#f7e225", "#f7e425", "#f6e626", "#f6e826", "#f5e926", "#f5eb27", "#f4ed27", "#f3ee27", "#f3f027", "#f2f227", "#f1f426", "#f1f525", "#f0f724", "#f0f921"]), Ce.inferno = Ce.fromStringList(["#000004", "#010005", "#010106", "#010108", "#02010a", "#02020c", "#02020e", "#030210", "#040312", "#040314", "#050417", "#060419", "#07051b", "#08051d", "#09061f", "#0a0722", "#0b0724", "#0c0826", "#0d0829", "#0e092b", "#10092d", "#110a30", "#120a32", "#140b34", "#150b37", "#160b39", "#180c3c", "#190c3e", "#1b0c41", "#1c0c43", "#1e0c45", "#1f0c48", "#210c4a", "#230c4c", "#240c4f", "#260c51", "#280b53", "#290b55", "#2b0b57", "#2d0b59", "#2f0a5b", "#310a5c", "#320a5e", "#340a5f", "#360961", "#380962", "#390963", "#3b0964", "#3d0965", "#3e0966", "#400a67", "#420a68", "#440a68", "#450a69", "#470b6a", "#490b6a", "#4a0c6b", "#4c0c6b", "#4d0d6c", "#4f0d6c", "#510e6c", "#520e6d", "#540f6d", "#550f6d", "#57106e", "#59106e", "#5a116e", "#5c126e", "#5d126e", "#5f136e", "#61136e", "#62146e", "#64156e", "#65156e", "#67166e", "#69166e", "#6a176e", "#6c186e", "#6d186e", "#6f196e", "#71196e", "#721a6e", "#741a6e", "#751b6e", "#771c6d", "#781c6d", "#7a1d6d", "#7c1d6d", "#7d1e6d", "#7f1e6c", "#801f6c", "#82206c", "#84206b", "#85216b", "#87216b", "#88226a", "#8a226a", "#8c2369", "#8d2369", "#8f2469", "#902568", "#922568", "#932667", "#952667", "#972766", "#982766", "#9a2865", "#9b2964", "#9d2964", "#9f2a63", "#a02a63", "#a22b62", "#a32c61", "#a52c60", "#a62d60", "#a82e5f", "#a92e5e", "#ab2f5e", "#ad305d", "#ae305c", "#b0315b", "#b1325a", "#b3325a", "#b43359", "#b63458", "#b73557", "#b93556", "#ba3655", "#bc3754", "#bd3853", "#bf3952", "#c03a51", "#c13a50", "#c33b4f", "#c43c4e", "#c63d4d", "#c73e4c", "#c83f4b", "#ca404a", "#cb4149", "#cc4248", "#ce4347", "#cf4446", "#d04545", "#d24644", "#d34743", "#d44842", "#d54a41", "#d74b3f", "#d84c3e", "#d94d3d", "#da4e3c", "#db503b", "#dd513a", "#de5238", "#df5337", "#e05536", "#e15635", "#e25734", "#e35933", "#e45a31", "#e55c30", "#e65d2f", "#e75e2e", "#e8602d", "#e9612b", "#ea632a", "#eb6429", "#eb6628", "#ec6726", "#ed6925", "#ee6a24", "#ef6c23", "#ef6e21", "#f06f20", "#f1711f", "#f1731d", "#f2741c", "#f3761b", "#f37819", "#f47918", "#f57b17", "#f57d15", "#f67e14", "#f68013", "#f78212", "#f78410", "#f8850f", "#f8870e", "#f8890c", "#f98b0b", "#f98c0a", "#f98e09", "#fa9008", "#fa9207", "#fa9407", "#fb9606", "#fb9706", "#fb9906", "#fb9b06", "#fb9d07", "#fc9f07", "#fca108", "#fca309", "#fca50a", "#fca60c", "#fca80d", "#fcaa0f", "#fcac11", "#fcae12", "#fcb014", "#fcb216", "#fcb418", "#fbb61a", "#fbb81d", "#fbba1f", "#fbbc21", "#fbbe23", "#fac026", "#fac228", "#fac42a", "#fac62d", "#f9c72f", "#f9c932", "#f9cb35", "#f8cd37", "#f8cf3a", "#f7d13d", "#f7d340", "#f6d543", "#f6d746", "#f5d949", "#f5db4c", "#f4dd4f", "#f4df53", "#f4e156", "#f3e35a", "#f3e55d", "#f2e661", "#f2e865", "#f2ea69", "#f1ec6d", "#f1ed71", "#f1ef75", "#f1f179", "#f2f27d", "#f2f482", "#f3f586", "#f3f68a", "#f4f88e", "#f5f992", "#f6fa96", "#f8fb9a", "#f9fc9d", "#fafda1", "#fcffa4"]), Ce.magma = Ce.fromStringList(["#000004", "#010005", "#010106", "#010108", "#020109", "#02020b", "#02020d", "#03030f", "#030312", "#040414", "#050416", "#060518", "#06051a", "#07061c", "#08071e", "#090720", "#0a0822", "#0b0924", "#0c0926", "#0d0a29", "#0e0b2b", "#100b2d", "#110c2f", "#120d31", "#130d34", "#140e36", "#150e38", "#160f3b", "#180f3d", "#19103f", "#1a1042", "#1c1044", "#1d1147", "#1e1149", "#20114b", "#21114e", "#221150", "#241253", "#251255", "#271258", "#29115a", "#2a115c", "#2c115f", "#2d1161", "#2f1163", "#311165", "#331067", "#341069", "#36106b", "#38106c", "#390f6e", "#3b0f70", "#3d0f71", "#3f0f72", "#400f74", "#420f75", "#440f76", "#451077", "#471078", "#491078", "#4a1079", "#4c117a", "#4e117b", "#4f127b", "#51127c", "#52137c", "#54137d", "#56147d", "#57157e", "#59157e", "#5a167e", "#5c167f", "#5d177f", "#5f187f", "#601880", "#621980", "#641a80", "#651a80", "#671b80", "#681c81", "#6a1c81", "#6b1d81", "#6d1d81", "#6e1e81", "#701f81", "#721f81", "#732081", "#752181", "#762181", "#782281", "#792282", "#7b2382", "#7c2382", "#7e2482", "#802582", "#812581", "#832681", "#842681", "#862781", "#882781", "#892881", "#8b2981", "#8c2981", "#8e2a81", "#902a81", "#912b81", "#932b80", "#942c80", "#962c80", "#982d80", "#992d80", "#9b2e7f", "#9c2e7f", "#9e2f7f", "#a02f7f", "#a1307e", "#a3307e", "#a5317e", "#a6317d", "#a8327d", "#aa337d", "#ab337c", "#ad347c", "#ae347b", "#b0357b", "#b2357b", "#b3367a", "#b5367a", "#b73779", "#b83779", "#ba3878", "#bc3978", "#bd3977", "#bf3a77", "#c03a76", "#c23b75", "#c43c75", "#c53c74", "#c73d73", "#c83e73", "#ca3e72", "#cc3f71", "#cd4071", "#cf4070", "#d0416f", "#d2426f", "#d3436e", "#d5446d", "#d6456c", "#d8456c", "#d9466b", "#db476a", "#dc4869", "#de4968", "#df4a68", "#e04c67", "#e24d66", "#e34e65", "#e44f64", "#e55064", "#e75263", "#e85362", "#e95462", "#ea5661", "#eb5760", "#ec5860", "#ed5a5f", "#ee5b5e", "#ef5d5e", "#f05f5e", "#f1605d", "#f2625d", "#f2645c", "#f3655c", "#f4675c", "#f4695c", "#f56b5c", "#f66c5c", "#f66e5c", "#f7705c", "#f7725c", "#f8745c", "#f8765c", "#f9785d", "#f9795d", "#f97b5d", "#fa7d5e", "#fa7f5e", "#fa815f", "#fb835f", "#fb8560", "#fb8761", "#fc8961", "#fc8a62", "#fc8c63", "#fc8e64", "#fc9065", "#fd9266", "#fd9467", "#fd9668", "#fd9869", "#fd9a6a", "#fd9b6b", "#fe9d6c", "#fe9f6d", "#fea16e", "#fea36f", "#fea571", "#fea772", "#fea973", "#feaa74", "#feac76", "#feae77", "#feb078", "#feb27a", "#feb47b", "#feb67c", "#feb77e", "#feb97f", "#febb81", "#febd82", "#febf84", "#fec185", "#fec287", "#fec488", "#fec68a", "#fec88c", "#feca8d", "#fecc8f", "#fecd90", "#fecf92", "#fed194", "#fed395", "#fed597", "#fed799", "#fed89a", "#fdda9c", "#fddc9e", "#fddea0", "#fde0a1", "#fde2a3", "#fde3a5", "#fde5a7", "#fde7a9", "#fde9aa", "#fdebac", "#fcecae", "#fceeb0", "#fcf0b2", "#fcf2b4", "#fcf4b6", "#fcf6b8", "#fcf7b9", "#fcf9bb", "#fcfbbd", "#fcfdbf"]), Ce.cividis = Ce.fromStringList(["#00224e", "#00234f", "#002451", "#002553", "#002554", "#002656", "#002758", "#002859", "#00285b", "#00295d", "#002a5f", "#002a61", "#002b62", "#002c64", "#002c66", "#002d68", "#002e6a", "#002e6c", "#002f6d", "#00306f", "#003070", "#003170", "#003171", "#013271", "#053371", "#083370", "#0c3470", "#0f3570", "#123570", "#143670", "#163770", "#18376f", "#1a386f", "#1c396f", "#1e3a6f", "#203a6f", "#213b6e", "#233c6e", "#243c6e", "#263d6e", "#273e6e", "#293f6e", "#2a3f6d", "#2b406d", "#2d416d", "#2e416d", "#2f426d", "#31436d", "#32436d", "#33446d", "#34456c", "#35456c", "#36466c", "#38476c", "#39486c", "#3a486c", "#3b496c", "#3c4a6c", "#3d4a6c", "#3e4b6c", "#3f4c6c", "#404c6c", "#414d6c", "#424e6c", "#434e6c", "#444f6c", "#45506c", "#46516c", "#47516c", "#48526c", "#49536c", "#4a536c", "#4b546c", "#4c556c", "#4d556c", "#4e566c", "#4f576c", "#50576c", "#51586d", "#52596d", "#535a6d", "#545a6d", "#555b6d", "#555c6d", "#565c6d", "#575d6d", "#585e6d", "#595e6e", "#5a5f6e", "#5b606e", "#5c616e", "#5d616e", "#5e626e", "#5e636f", "#5f636f", "#60646f", "#61656f", "#62656f", "#636670", "#646770", "#656870", "#656870", "#666970", "#676a71", "#686a71", "#696b71", "#6a6c71", "#6b6d72", "#6c6d72", "#6c6e72", "#6d6f72", "#6e6f73", "#6f7073", "#707173", "#717274", "#727274", "#727374", "#737475", "#747475", "#757575", "#767676", "#777776", "#777777", "#787877", "#797977", "#7a7a78", "#7b7a78", "#7c7b78", "#7d7c78", "#7e7c78", "#7e7d78", "#7f7e78", "#807f78", "#817f78", "#828079", "#838179", "#848279", "#858279", "#868379", "#878478", "#888578", "#898578", "#8a8678", "#8b8778", "#8c8878", "#8d8878", "#8e8978", "#8f8a78", "#908b78", "#918b78", "#928c78", "#928d78", "#938e78", "#948e77", "#958f77", "#969077", "#979177", "#989277", "#999277", "#9a9376", "#9b9476", "#9c9576", "#9d9576", "#9e9676", "#9f9775", "#a09875", "#a19975", "#a29975", "#a39a74", "#a49b74", "#a59c74", "#a69c74", "#a79d73", "#a89e73", "#a99f73", "#aaa073", "#aba072", "#aca172", "#ada272", "#aea371", "#afa471", "#b0a571", "#b1a570", "#b3a670", "#b4a76f", "#b5a86f", "#b6a96f", "#b7a96e", "#b8aa6e", "#b9ab6d", "#baac6d", "#bbad6d", "#bcae6c", "#bdae6c", "#beaf6b", "#bfb06b", "#c0b16a", "#c1b26a", "#c2b369", "#c3b369", "#c4b468", "#c5b568", "#c6b667", "#c7b767", "#c8b866", "#c9b965", "#cbb965", "#ccba64", "#cdbb63", "#cebc63", "#cfbd62", "#d0be62", "#d1bf61", "#d2c060", "#d3c05f", "#d4c15f", "#d5c25e", "#d6c35d", "#d7c45c", "#d9c55c", "#dac65b", "#dbc75a", "#dcc859", "#ddc858", "#dec958", "#dfca57", "#e0cb56", "#e1cc55", "#e2cd54", "#e4ce53", "#e5cf52", "#e6d051", "#e7d150", "#e8d24f", "#e9d34e", "#ead34c", "#ebd44b", "#edd54a", "#eed649", "#efd748", "#f0d846", "#f1d945", "#f2da44", "#f3db42", "#f5dc41", "#f6dd3f", "#f7de3e", "#f8df3c", "#f9e03a", "#fbe138", "#fce236", "#fde334", "#fee434", "#fee535", "#fee636", "#fee838"]), Ce.greys = Ce.fromStringList(["#ffffff", "#ffffff", "#fefefe", "#fefefe", "#fdfdfd", "#fdfdfd", "#fcfcfc", "#fcfcfc", "#fbfbfb", "#fbfbfb", "#fafafa", "#fafafa", "#f9f9f9", "#f9f9f9", "#f8f8f8", "#f8f8f8", "#f7f7f7", "#f7f7f7", "#f7f7f7", "#f6f6f6", "#f6f6f6", "#f5f5f5", "#f5f5f5", "#f4f4f4", "#f4f4f4", "#f3f3f3", "#f3f3f3", "#f2f2f2", "#f2f2f2", "#f1f1f1", "#f1f1f1", "#f0f0f0", "#f0f0f0", "#efefef", "#eeeeee", "#eeeeee", "#ededed", "#ececec", "#ececec", "#ebebeb", "#eaeaea", "#e9e9e9", "#e9e9e9", "#e8e8e8", "#e7e7e7", "#e7e7e7", "#e6e6e6", "#e5e5e5", "#e4e4e4", "#e4e4e4", "#e3e3e3", "#e2e2e2", "#e1e1e1", "#e1e1e1", "#e0e0e0", "#dfdfdf", "#dfdfdf", "#dedede", "#dddddd", "#dcdcdc", "#dcdcdc", "#dbdbdb", "#dadada", "#dadada", "#d9d9d9", "#d8d8d8", "#d7d7d7", "#d6d6d6", "#d5d5d5", "#d4d4d4", "#d4d4d4", "#d3d3d3", "#d2d2d2", "#d1d1d1", "#d0d0d0", "#cfcfcf", "#cecece", "#cdcdcd", "#cccccc", "#cccccc", "#cbcbcb", "#cacaca", "#c9c9c9", "#c8c8c8", "#c7c7c7", "#c6c6c6", "#c5c5c5", "#c5c5c5", "#c4c4c4", "#c3c3c3", "#c2c2c2", "#c1c1c1", "#c0c0c0", "#bfbfbf", "#bebebe", "#bebebe", "#bdbdbd", "#bbbbbb", "#bababa", "#b9b9b9", "#b8b8b8", "#b6b6b6", "#b5b5b5", "#b4b4b4", "#b3b3b3", "#b2b2b2", "#b0b0b0", "#afafaf", "#aeaeae", "#adadad", "#ababab", "#aaaaaa", "#a9a9a9", "#a8a8a8", "#a7a7a7", "#a5a5a5", "#a4a4a4", "#a3a3a3", "#a2a2a2", "#a0a0a0", "#9f9f9f", "#9e9e9e", "#9d9d9d", "#9c9c9c", "#9a9a9a", "#999999", "#989898", "#979797", "#959595", "#949494", "#939393", "#929292", "#919191", "#909090", "#8f8f8f", "#8e8e8e", "#8d8d8d", "#8c8c8c", "#8a8a8a", "#898989", "#888888", "#878787", "#868686", "#858585", "#848484", "#838383", "#828282", "#818181", "#7f7f7f", "#7e7e7e", "#7d7d7d", "#7c7c7c", "#7b7b7b", "#7a7a7a", "#797979", "#787878", "#777777", "#767676", "#757575", "#737373", "#727272", "#717171", "#707070", "#6f6f6f", "#6e6e6e", "#6d6d6d", "#6c6c6c", "#6b6b6b", "#6a6a6a", "#696969", "#686868", "#676767", "#666666", "#656565", "#646464", "#636363", "#626262", "#616161", "#606060", "#5f5f5f", "#5e5e5e", "#5d5d5d", "#5c5c5c", "#5b5b5b", "#5a5a5a", "#585858", "#575757", "#565656", "#555555", "#545454", "#535353", "#525252", "#515151", "#505050", "#4e4e4e", "#4d4d4d", "#4b4b4b", "#4a4a4a", "#484848", "#474747", "#464646", "#444444", "#434343", "#414141", "#404040", "#3f3f3f", "#3d3d3d", "#3c3c3c", "#3a3a3a", "#393939", "#383838", "#363636", "#353535", "#333333", "#323232", "#303030", "#2f2f2f", "#2e2e2e", "#2c2c2c", "#2b2b2b", "#292929", "#282828", "#272727", "#252525", "#242424", "#232323", "#222222", "#212121", "#1f1f1f", "#1e1e1e", "#1d1d1d", "#1c1c1c", "#1b1b1b", "#1a1a1a", "#181818", "#171717", "#161616", "#151515", "#141414", "#131313", "#111111", "#101010", "#0f0f0f", "#0e0e0e", "#0d0d0d", "#0c0c0c", "#0a0a0a", "#090909", "#080808", "#070707", "#060606", "#050505", "#030303", "#020202", "#010101", "#000000"]), Ce.gray = Ce.fromStringList(["#000000", "#010101", "#020202", "#030303", "#040404", "#050505", "#060606", "#070707", "#080808", "#090909", "#0a0a0a", "#0b0b0b", "#0c0c0c", "#0d0d0d", "#0e0e0e", "#0f0f0f", "#101010", "#111111", "#121212", "#131313", "#141414", "#151515", "#161616", "#171717", "#181818", "#191919", "#1a1a1a", "#1b1b1b", "#1c1c1c", "#1d1d1d", "#1e1e1e", "#1f1f1f", "#202020", "#212121", "#222222", "#232323", "#242424", "#252525", "#262626", "#272727", "#282828", "#292929", "#2a2a2a", "#2b2b2b", "#2c2c2c", "#2d2d2d", "#2e2e2e", "#2f2f2f", "#303030", "#313131", "#323232", "#333333", "#343434", "#353535", "#363636", "#373737", "#383838", "#393939", "#3a3a3a", "#3b3b3b", "#3c3c3c", "#3d3d3d", "#3e3e3e", "#3f3f3f", "#404040", "#414141", "#424242", "#434343", "#444444", "#454545", "#464646", "#474747", "#484848", "#494949", "#4a4a4a", "#4b4b4b", "#4c4c4c", "#4d4d4d", "#4e4e4e", "#4f4f4f", "#505050", "#515151", "#525252", "#535353", "#545454", "#555555", "#565656", "#575757", "#585858", "#595959", "#5a5a5a", "#5b5b5b", "#5c5c5c", "#5d5d5d", "#5e5e5e", "#5f5f5f", "#606060", "#616161", "#626262", "#636363", "#646464", "#656565", "#666666", "#676767", "#686868", "#696969", "#6a6a6a", "#6b6b6b", "#6c6c6c", "#6d6d6d", "#6e6e6e", "#6f6f6f", "#707070", "#717171", "#727272", "#737373", "#747474", "#757575", "#767676", "#777777", "#787878", "#797979", "#7a7a7a", "#7b7b7b", "#7c7c7c", "#7d7d7d", "#7e7e7e", "#7f7f7f", "#808080", "#818181", "#828282", "#838383", "#848484", "#858585", "#868686", "#878787", "#888888", "#898989", "#8a8a8a", "#8b8b8b", "#8c8c8c", "#8d8d8d", "#8e8e8e", "#8f8f8f", "#909090", "#919191", "#929292", "#939393", "#949494", "#959595", "#969696", "#979797", "#989898", "#999999", "#9a9a9a", "#9b9b9b", "#9c9c9c", "#9d9d9d", "#9e9e9e", "#9f9f9f", "#a0a0a0", "#a1a1a1", "#a2a2a2", "#a3a3a3", "#a4a4a4", "#a5a5a5", "#a6a6a6", "#a7a7a7", "#a8a8a8", "#a9a9a9", "#aaaaaa", "#ababab", "#acacac", "#adadad", "#aeaeae", "#afafaf", "#b0b0b0", "#b1b1b1", "#b2b2b2", "#b3b3b3", "#b4b4b4", "#b5b5b5", "#b6b6b6", "#b7b7b7", "#b8b8b8", "#b9b9b9", "#bababa", "#bbbbbb", "#bcbcbc", "#bdbdbd", "#bebebe", "#bfbfbf", "#c0c0c0", "#c1c1c1", "#c2c2c2", "#c3c3c3", "#c4c4c4", "#c5c5c5", "#c6c6c6", "#c7c7c7", "#c8c8c8", "#c9c9c9", "#cacaca", "#cbcbcb", "#cccccc", "#cdcdcd", "#cecece", "#cfcfcf", "#d0d0d0", "#d1d1d1", "#d2d2d2", "#d3d3d3", "#d4d4d4", "#d5d5d5", "#d6d6d6", "#d7d7d7", "#d8d8d8", "#d9d9d9", "#dadada", "#dbdbdb", "#dcdcdc", "#dddddd", "#dedede", "#dfdfdf", "#e0e0e0", "#e1e1e1", "#e2e2e2", "#e3e3e3", "#e4e4e4", "#e5e5e5", "#e6e6e6", "#e7e7e7", "#e8e8e8", "#e9e9e9", "#eaeaea", "#ebebeb", "#ececec", "#ededed", "#eeeeee", "#efefef", "#f0f0f0", "#f1f1f1", "#f2f2f2", "#f3f3f3", "#f4f4f4", "#f5f5f5", "#f6f6f6", "#f7f7f7", "#f8f8f8", "#f9f9f9", "#fafafa", "#fbfbfb", "#fcfcfc", "#fdfdfd", "#fefefe", "#ffffff"]), Ce.purples = Ce.fromStringList(["#fcfbfd", "#fcfbfd", "#fbfafc", "#fbfafc", "#faf9fc", "#faf9fc", "#faf8fb", "#f9f8fb", "#f9f7fb", "#f8f7fb", "#f8f7fa", "#f8f6fa", "#f7f6fa", "#f7f5fa", "#f6f5f9", "#f6f4f9", "#f5f4f9", "#f5f4f9", "#f5f3f8", "#f4f3f8", "#f4f2f8", "#f3f2f8", "#f3f1f7", "#f3f1f7", "#f2f0f7", "#f2f0f7", "#f1f0f6", "#f1eff6", "#f1eff6", "#f0eef6", "#f0eef5", "#efedf5", "#efedf5", "#eeecf5", "#eeecf4", "#edebf4", "#ecebf4", "#eceaf3", "#ebe9f3", "#eae9f3", "#eae8f2", "#e9e8f2", "#e8e7f2", "#e8e6f2", "#e7e6f1", "#e6e5f1", "#e6e5f1", "#e5e4f0", "#e4e3f0", "#e4e3f0", "#e3e2ef", "#e2e2ef", "#e2e1ef", "#e1e0ee", "#e0e0ee", "#e0dfee", "#dfdfed", "#dedeed", "#dedded", "#ddddec", "#dcdcec", "#dcdcec", "#dbdbec", "#dadaeb", "#dadaeb", "#d9d9ea", "#d8d8ea", "#d7d7e9", "#d6d6e9", "#d5d5e9", "#d4d4e8", "#d3d3e8", "#d2d2e7", "#d1d2e7", "#d0d1e6", "#cfd0e6", "#cecfe5", "#cecee5", "#cdcde4", "#cccce4", "#cbcbe3", "#cacae3", "#c9c9e2", "#c8c8e2", "#c7c8e1", "#c6c7e1", "#c5c6e1", "#c4c5e0", "#c3c4e0", "#c2c3df", "#c1c2df", "#c0c1de", "#bfc0de", "#bebfdd", "#bebedd", "#bdbedc", "#bcbddc", "#bbbbdb", "#babadb", "#b9b9da", "#b8b8d9", "#b7b7d9", "#b6b6d8", "#b5b5d7", "#b4b4d7", "#b3b3d6", "#b2b2d5", "#b1b1d5", "#b0afd4", "#afaed4", "#aeadd3", "#aeacd2", "#adabd2", "#acaad1", "#aba9d0", "#aaa8d0", "#a9a7cf", "#a8a6cf", "#a7a4ce", "#a6a3cd", "#a5a2cd", "#a4a1cc", "#a3a0cb", "#a29fcb", "#a19eca", "#a09dca", "#9f9cc9", "#9e9bc8", "#9e9ac8", "#9d99c7", "#9c98c7", "#9b97c6", "#9a96c6", "#9995c6", "#9894c5", "#9793c5", "#9692c4", "#9591c4", "#9490c3", "#9390c3", "#928fc3", "#918ec2", "#908dc2", "#8f8cc1", "#8e8bc1", "#8e8ac0", "#8d89c0", "#8c88bf", "#8b87bf", "#8a86bf", "#8986be", "#8885be", "#8784bd", "#8683bd", "#8582bc", "#8481bc", "#8380bb", "#827fbb", "#817ebb", "#807dba", "#807cba", "#7f7bb9", "#7e79b8", "#7d78b7", "#7d77b7", "#7c75b6", "#7b74b5", "#7b72b4", "#7a71b4", "#7970b3", "#796eb2", "#786db2", "#776cb1", "#776ab0", "#7669af", "#7567af", "#7566ae", "#7465ad", "#7363ad", "#7262ac", "#7261ab", "#715faa", "#705eaa", "#705ca9", "#6f5ba8", "#6e5aa8", "#6e58a7", "#6d57a6", "#6c55a5", "#6c54a5", "#6b53a4", "#6a51a3", "#6950a3", "#694fa2", "#684da1", "#674ca1", "#674ba0", "#66499f", "#65489f", "#65479e", "#64459e", "#63449d", "#63439c", "#62429c", "#61409b", "#613f9a", "#603e9a", "#5f3c99", "#5e3b98", "#5e3a98", "#5d3897", "#5c3797", "#5c3696", "#5b3495", "#5a3395", "#5a3294", "#593093", "#582f93", "#582e92", "#572c92", "#562b91", "#552a90", "#552890", "#54278f", "#53268f", "#53258e", "#52238d", "#51228d", "#51218c", "#50208c", "#4f1f8b", "#4f1d8b", "#4e1c8a", "#4d1b89", "#4d1a89", "#4c1888", "#4c1788", "#4b1687", "#4a1587", "#4a1486", "#491285", "#481185", "#481084", "#470f84", "#460d83", "#460c83", "#450b82", "#440a82", "#440981", "#430780", "#420680", "#42057f", "#41047f", "#40027e", "#40017e", "#3f007d"]), Ce.blues = Ce.fromStringList(["#f7fbff", "#f6faff", "#f5fafe", "#f5f9fe", "#f4f9fe", "#f3f8fe", "#f2f8fd", "#f2f7fd", "#f1f7fd", "#f0f6fd", "#eff6fc", "#eef5fc", "#eef5fc", "#edf4fc", "#ecf4fb", "#ebf3fb", "#eaf3fb", "#eaf2fb", "#e9f2fa", "#e8f1fa", "#e7f1fa", "#e7f0fa", "#e6f0f9", "#e5eff9", "#e4eff9", "#e3eef9", "#e3eef8", "#e2edf8", "#e1edf8", "#e0ecf8", "#dfecf7", "#dfebf7", "#deebf7", "#ddeaf7", "#dceaf6", "#dce9f6", "#dbe9f6", "#dae8f6", "#d9e8f5", "#d9e7f5", "#d8e7f5", "#d7e6f5", "#d6e6f4", "#d6e5f4", "#d5e5f4", "#d4e4f4", "#d3e4f3", "#d3e3f3", "#d2e3f3", "#d1e2f3", "#d0e2f2", "#d0e1f2", "#cfe1f2", "#cee0f2", "#cde0f1", "#cddff1", "#ccdff1", "#cbdef1", "#cadef0", "#caddf0", "#c9ddf0", "#c8dcf0", "#c7dcef", "#c7dbef", "#c6dbef", "#c4daee", "#c3daee", "#c2d9ee", "#c1d9ed", "#bfd8ed", "#bed8ec", "#bdd7ec", "#bcd7eb", "#bad6eb", "#b9d6ea", "#b8d5ea", "#b7d4ea", "#b5d4e9", "#b4d3e9", "#b3d3e8", "#b2d2e8", "#b0d2e7", "#afd1e7", "#aed1e7", "#add0e6", "#abd0e6", "#aacfe5", "#a9cfe5", "#a8cee4", "#a6cee4", "#a5cde3", "#a4cce3", "#a3cce3", "#a1cbe2", "#a0cbe2", "#9fcae1", "#9dcae1", "#9cc9e1", "#9ac8e0", "#99c7e0", "#97c6df", "#95c5df", "#94c4df", "#92c4de", "#91c3de", "#8fc2de", "#8dc1dd", "#8cc0dd", "#8abfdd", "#89bedc", "#87bddc", "#85bcdc", "#84bcdb", "#82bbdb", "#81badb", "#7fb9da", "#7db8da", "#7cb7da", "#7ab6d9", "#79b5d9", "#77b5d9", "#75b4d8", "#74b3d8", "#72b2d8", "#71b1d7", "#6fb0d7", "#6dafd7", "#6caed6", "#6aaed6", "#69add5", "#68acd5", "#66abd4", "#65aad4", "#64a9d3", "#63a8d3", "#61a7d2", "#60a7d2", "#5fa6d1", "#5da5d1", "#5ca4d0", "#5ba3d0", "#5aa2cf", "#58a1cf", "#57a0ce", "#56a0ce", "#549fcd", "#539ecd", "#529dcc", "#519ccc", "#4f9bcb", "#4e9acb", "#4d99ca", "#4b98ca", "#4a98c9", "#4997c9", "#4896c8", "#4695c8", "#4594c7", "#4493c7", "#4292c6", "#4191c6", "#4090c5", "#3f8fc5", "#3e8ec4", "#3d8dc4", "#3c8cc3", "#3b8bc2", "#3a8ac2", "#3989c1", "#3888c1", "#3787c0", "#3686c0", "#3585bf", "#3484bf", "#3383be", "#3282be", "#3181bd", "#3080bd", "#2f7fbc", "#2e7ebc", "#2d7dbb", "#2c7cba", "#2b7bba", "#2a7ab9", "#2979b9", "#2777b8", "#2676b8", "#2575b7", "#2474b7", "#2373b6", "#2272b6", "#2171b5", "#2070b4", "#206fb4", "#1f6eb3", "#1e6db2", "#1d6cb1", "#1c6bb0", "#1c6ab0", "#1b69af", "#1a68ae", "#1967ad", "#1966ad", "#1865ac", "#1764ab", "#1663aa", "#1562a9", "#1561a9", "#1460a8", "#135fa7", "#125ea6", "#125da6", "#115ca5", "#105ba4", "#0f5aa3", "#0e59a2", "#0e58a2", "#0d57a1", "#0c56a0", "#0b559f", "#0a549e", "#0a539e", "#09529d", "#08519c", "#08509b", "#084f99", "#084e98", "#084d96", "#084c95", "#084b93", "#084a91", "#084990", "#08488e", "#08478d", "#08468b", "#08458a", "#084488", "#084387", "#084285", "#084184", "#084082", "#083e81", "#083d7f", "#083c7d", "#083b7c", "#083a7a", "#083979", "#083877", "#083776", "#083674", "#083573", "#083471", "#083370", "#08326e", "#08316d", "#08306b"]), Ce.greens = Ce.fromStringList(["#f7fcf5", "#f6fcf4", "#f6fcf4", "#f5fbf3", "#f5fbf2", "#f4fbf2", "#f4fbf1", "#f3faf0", "#f2faf0", "#f2faef", "#f1faee", "#f1faee", "#f0f9ed", "#f0f9ec", "#eff9ec", "#eff9eb", "#eef8ea", "#edf8ea", "#edf8e9", "#ecf8e8", "#ecf8e8", "#ebf7e7", "#ebf7e7", "#eaf7e6", "#e9f7e5", "#e9f7e5", "#e8f6e4", "#e8f6e3", "#e7f6e3", "#e7f6e2", "#e6f5e1", "#e5f5e1", "#e5f5e0", "#e4f5df", "#e3f4de", "#e2f4dd", "#e1f3dc", "#e0f3db", "#dff3da", "#def2d9", "#ddf2d8", "#dcf2d7", "#dbf1d6", "#dbf1d5", "#daf0d4", "#d9f0d3", "#d8f0d2", "#d7efd1", "#d6efd0", "#d5efcf", "#d4eece", "#d3eecd", "#d2edcc", "#d1edcb", "#d0edca", "#cfecc9", "#ceecc8", "#cdecc7", "#ccebc6", "#cbebc5", "#cbeac4", "#caeac3", "#c9eac2", "#c8e9c1", "#c7e9c0", "#c6e8bf", "#c4e8bd", "#c3e7bc", "#c2e7bb", "#c1e6ba", "#c0e6b9", "#bee5b8", "#bde5b6", "#bce4b5", "#bbe4b4", "#bae3b3", "#b8e3b2", "#b7e2b1", "#b6e2af", "#b5e1ae", "#b4e1ad", "#b2e0ac", "#b1e0ab", "#b0dfaa", "#afdfa8", "#aedea7", "#acdea6", "#abdda5", "#aadda4", "#a9dca3", "#a8dca2", "#a7dba0", "#a5db9f", "#a4da9e", "#a3da9d", "#a2d99c", "#a0d99b", "#9fd899", "#9ed798", "#9cd797", "#9bd696", "#99d595", "#98d594", "#97d492", "#95d391", "#94d390", "#92d28f", "#91d28e", "#90d18d", "#8ed08b", "#8dd08a", "#8bcf89", "#8ace88", "#88ce87", "#87cd86", "#86cc85", "#84cc83", "#83cb82", "#81ca81", "#80ca80", "#7fc97f", "#7dc87e", "#7cc87c", "#7ac77b", "#79c67a", "#78c679", "#76c578", "#75c477", "#73c476", "#72c375", "#70c274", "#6ec173", "#6dc072", "#6bc072", "#6abf71", "#68be70", "#66bd6f", "#65bd6f", "#63bc6e", "#62bb6d", "#60ba6c", "#5eb96b", "#5db96b", "#5bb86a", "#5ab769", "#58b668", "#56b567", "#55b567", "#53b466", "#52b365", "#50b264", "#4eb264", "#4db163", "#4bb062", "#4aaf61", "#48ae60", "#46ae60", "#45ad5f", "#43ac5e", "#42ab5d", "#40aa5d", "#3fa95c", "#3fa85b", "#3ea75a", "#3da65a", "#3ca559", "#3ba458", "#3aa357", "#39a257", "#38a156", "#37a055", "#369f54", "#359e53", "#349d53", "#339c52", "#329b51", "#319a50", "#309950", "#2f984f", "#2f974e", "#2e964d", "#2d954d", "#2c944c", "#2b934b", "#2a924a", "#29914a", "#289049", "#278f48", "#268e47", "#258d47", "#248c46", "#238b45", "#228a44", "#218944", "#208843", "#1f8742", "#1e8741", "#1d8640", "#1c8540", "#1a843f", "#19833e", "#18823d", "#17813d", "#16803c", "#157f3b", "#147e3a", "#137d39", "#127c39", "#117b38", "#107a37", "#0e7936", "#0d7836", "#0c7735", "#0b7734", "#0a7633", "#097532", "#087432", "#077331", "#067230", "#05712f", "#03702e", "#026f2e", "#016e2d", "#006d2c", "#006c2c", "#006b2b", "#00692a", "#00682a", "#006729", "#006529", "#006428", "#006328", "#006227", "#006027", "#005f26", "#005e26", "#005c25", "#005b25", "#005a24", "#005924", "#005723", "#005622", "#005522", "#005321", "#005221", "#005120", "#005020", "#004e1f", "#004d1f", "#004c1e", "#004a1e", "#00491d", "#00481d", "#00471c", "#00451c", "#00441b"]), Ce.oranges = Ce.fromStringList(["#fff5eb", "#fff5ea", "#fff4e9", "#fff4e8", "#fff3e7", "#fff3e6", "#fff2e6", "#fff2e5", "#fff1e4", "#fff1e3", "#fff0e2", "#fff0e1", "#ffefe0", "#ffefdf", "#ffeede", "#ffeedd", "#feeddc", "#feeddc", "#feeddb", "#feecda", "#feecd9", "#feebd8", "#feebd7", "#feead6", "#feead5", "#fee9d4", "#fee9d3", "#fee8d2", "#fee8d2", "#fee7d1", "#fee7d0", "#fee6cf", "#fee6ce", "#fee5cc", "#fee5cb", "#fee4ca", "#fee3c8", "#fee2c7", "#fee2c6", "#fee1c4", "#fee0c3", "#fee0c1", "#fedfc0", "#fedebf", "#fedebd", "#feddbc", "#fedcbb", "#fedcb9", "#fddbb8", "#fddab6", "#fdd9b5", "#fdd9b4", "#fdd8b2", "#fdd7b1", "#fdd7af", "#fdd6ae", "#fdd5ad", "#fdd5ab", "#fdd4aa", "#fdd3a9", "#fdd3a7", "#fdd2a6", "#fdd1a4", "#fdd1a3", "#fdd0a2", "#fdcfa0", "#fdce9e", "#fdcd9c", "#fdcb9b", "#fdca99", "#fdc997", "#fdc895", "#fdc794", "#fdc692", "#fdc590", "#fdc48f", "#fdc38d", "#fdc28b", "#fdc189", "#fdc088", "#fdbf86", "#fdbe84", "#fdbd83", "#fdbb81", "#fdba7f", "#fdb97d", "#fdb87c", "#fdb77a", "#fdb678", "#fdb576", "#fdb475", "#fdb373", "#fdb271", "#fdb170", "#fdb06e", "#fdaf6c", "#fdae6a", "#fdad69", "#fdac67", "#fdab66", "#fda965", "#fda863", "#fda762", "#fda660", "#fda55f", "#fda45d", "#fda35c", "#fda25a", "#fda159", "#fda057", "#fd9f56", "#fd9e54", "#fd9d53", "#fd9c51", "#fd9b50", "#fd9a4e", "#fd994d", "#fd984b", "#fd974a", "#fd9649", "#fd9547", "#fd9446", "#fd9344", "#fd9243", "#fd9141", "#fd9040", "#fd8f3e", "#fd8e3d", "#fd8c3b", "#fc8b3a", "#fc8a39", "#fc8937", "#fb8836", "#fb8735", "#fb8634", "#fa8532", "#fa8331", "#f98230", "#f9812e", "#f9802d", "#f87f2c", "#f87e2b", "#f87d29", "#f77b28", "#f77a27", "#f67925", "#f67824", "#f67723", "#f57622", "#f57520", "#f5741f", "#f4721e", "#f4711c", "#f3701b", "#f36f1a", "#f36e19", "#f26d17", "#f26c16", "#f26b15", "#f16913", "#f16813", "#f06712", "#ef6612", "#ee6511", "#ee6410", "#ed6310", "#ec620f", "#eb610f", "#eb600e", "#ea5f0e", "#e95e0d", "#e85d0c", "#e75c0c", "#e75b0b", "#e65a0b", "#e5590a", "#e4580a", "#e45709", "#e35608", "#e25508", "#e15407", "#e15307", "#e05206", "#df5106", "#de5005", "#de4e05", "#dd4d04", "#dc4c03", "#db4b03", "#db4a02", "#da4902", "#d94801", "#d84801", "#d64701", "#d54601", "#d34601", "#d14501", "#d04501", "#ce4401", "#cd4401", "#cb4302", "#c94202", "#c84202", "#c64102", "#c54102", "#c34002", "#c14002", "#c03f02", "#be3f02", "#bd3e02", "#bb3d02", "#b93d02", "#b83c02", "#b63c02", "#b53b02", "#b33b02", "#b13a03", "#b03903", "#ae3903", "#ad3803", "#ab3803", "#a93703", "#a83703", "#a63603", "#a53603", "#a43503", "#a23503", "#a13403", "#a03403", "#9f3303", "#9e3303", "#9c3203", "#9b3203", "#9a3103", "#993103", "#973003", "#963003", "#952f03", "#942f03", "#932f03", "#912e04", "#902e04", "#8f2d04", "#8e2d04", "#8c2c04", "#8b2c04", "#8a2b04", "#892b04", "#882a04", "#862a04", "#852904", "#842904", "#832804", "#812804", "#802704", "#7f2704"]), Ce.reds = Ce.fromStringList(["#fff5f0", "#fff4ef", "#fff4ee", "#fff3ed", "#fff2ec", "#fff2eb", "#fff1ea", "#fff0e9", "#fff0e8", "#ffefe8", "#ffeee7", "#ffeee6", "#ffede5", "#ffece4", "#ffece3", "#ffebe2", "#feeae1", "#feeae0", "#fee9df", "#fee8de", "#fee8dd", "#fee7dc", "#fee7db", "#fee6da", "#fee5d9", "#fee5d8", "#fee4d8", "#fee3d7", "#fee3d6", "#fee2d5", "#fee1d4", "#fee1d3", "#fee0d2", "#fedfd0", "#fedecf", "#fedccd", "#fedbcc", "#fedaca", "#fed9c9", "#fed8c7", "#fdd7c6", "#fdd5c4", "#fdd4c2", "#fdd3c1", "#fdd2bf", "#fdd1be", "#fdd0bc", "#fdcebb", "#fdcdb9", "#fdccb8", "#fdcbb6", "#fdcab5", "#fdc9b3", "#fdc7b2", "#fdc6b0", "#fdc5ae", "#fcc4ad", "#fcc3ab", "#fcc2aa", "#fcc1a8", "#fcbfa7", "#fcbea5", "#fcbda4", "#fcbca2", "#fcbba1", "#fcb99f", "#fcb89e", "#fcb79c", "#fcb69b", "#fcb499", "#fcb398", "#fcb296", "#fcb095", "#fcaf93", "#fcae92", "#fcad90", "#fcab8f", "#fcaa8d", "#fca98c", "#fca78b", "#fca689", "#fca588", "#fca486", "#fca285", "#fca183", "#fca082", "#fc9e80", "#fc9d7f", "#fc9c7d", "#fc9b7c", "#fc997a", "#fc9879", "#fc9777", "#fc9576", "#fc9474", "#fc9373", "#fc9272", "#fc9070", "#fc8f6f", "#fc8e6e", "#fc8d6d", "#fc8b6b", "#fc8a6a", "#fc8969", "#fc8767", "#fc8666", "#fc8565", "#fc8464", "#fc8262", "#fc8161", "#fc8060", "#fc7f5f", "#fb7d5d", "#fb7c5c", "#fb7b5b", "#fb7a5a", "#fb7858", "#fb7757", "#fb7656", "#fb7555", "#fb7353", "#fb7252", "#fb7151", "#fb7050", "#fb6e4e", "#fb6d4d", "#fb6c4c", "#fb6b4b", "#fb694a", "#fa6849", "#fa6648", "#fa6547", "#f96346", "#f96245", "#f96044", "#f85f43", "#f85d42", "#f75c41", "#f75b40", "#f7593f", "#f6583e", "#f6563d", "#f6553c", "#f5533b", "#f5523a", "#f4503a", "#f44f39", "#f44d38", "#f34c37", "#f34a36", "#f34935", "#f24734", "#f24633", "#f14432", "#f14331", "#f14130", "#f0402f", "#f03f2e", "#f03d2d", "#ef3c2c", "#ee3a2c", "#ed392b", "#ec382b", "#eb372a", "#ea362a", "#e93529", "#e83429", "#e63328", "#e53228", "#e43027", "#e32f27", "#e22e27", "#e12d26", "#e02c26", "#de2b25", "#dd2a25", "#dc2924", "#db2824", "#da2723", "#d92523", "#d82422", "#d72322", "#d52221", "#d42121", "#d32020", "#d21f20", "#d11e1f", "#d01d1f", "#cf1c1f", "#ce1a1e", "#cc191e", "#cb181d", "#ca181d", "#c9181d", "#c8171c", "#c7171c", "#c5171c", "#c4161c", "#c3161b", "#c2161b", "#c1161b", "#bf151b", "#be151a", "#bd151a", "#bc141a", "#bb141a", "#b91419", "#b81419", "#b71319", "#b61319", "#b51318", "#b31218", "#b21218", "#b11218", "#b01217", "#af1117", "#ad1117", "#ac1117", "#ab1016", "#aa1016", "#a91016", "#a81016", "#a60f15", "#a50f15", "#a30f15", "#a10e15", "#9f0e14", "#9d0d14", "#9c0d14", "#9a0c14", "#980c13", "#960b13", "#940b13", "#920a13", "#900a12", "#8e0912", "#8c0912", "#8a0812", "#880811", "#860811", "#840711", "#820711", "#800610", "#7e0610", "#7c0510", "#7a0510", "#79040f", "#77040f", "#75030f", "#73030f", "#71020e", "#6f020e", "#6d010e", "#6b010e", "#69000d", "#67000d"]), Ce.rdYlBu = Ce.fromStringList(["#a50026", "#a70226", "#a90426", "#ab0626", "#ad0826", "#af0926", "#b10b26", "#b30d26", "#b50f26", "#b71126", "#b91326", "#bb1526", "#bd1726", "#be1827", "#c01a27", "#c21c27", "#c41e27", "#c62027", "#c82227", "#ca2427", "#cc2627", "#ce2827", "#d02927", "#d22b27", "#d42d27", "#d62f27", "#d83128", "#d93429", "#da362a", "#db382b", "#dc3b2c", "#dd3d2d", "#de402e", "#e0422f", "#e14430", "#e24731", "#e34933", "#e44c34", "#e54e35", "#e65036", "#e75337", "#e95538", "#ea5739", "#eb5a3a", "#ec5c3b", "#ed5f3c", "#ee613e", "#ef633f", "#f16640", "#f26841", "#f36b42", "#f46d43", "#f47044", "#f57245", "#f57547", "#f57748", "#f67a49", "#f67c4a", "#f67f4b", "#f7814c", "#f7844e", "#f8864f", "#f88950", "#f88c51", "#f98e52", "#f99153", "#f99355", "#fa9656", "#fa9857", "#fa9b58", "#fb9d59", "#fba05b", "#fba35c", "#fca55d", "#fca85e", "#fcaa5f", "#fdad60", "#fdaf62", "#fdb164", "#fdb366", "#fdb567", "#fdb769", "#fdb96b", "#fdbb6d", "#fdbd6f", "#fdbf71", "#fdc173", "#fdc374", "#fdc576", "#fdc778", "#fec87a", "#feca7c", "#fecc7e", "#fece7f", "#fed081", "#fed283", "#fed485", "#fed687", "#fed889", "#feda8a", "#fedc8c", "#fede8e", "#fee090", "#fee192", "#fee294", "#fee496", "#fee597", "#fee699", "#fee79b", "#fee99d", "#feea9f", "#feeba1", "#feeca2", "#feeda4", "#feefa6", "#fff0a8", "#fff1aa", "#fff2ac", "#fff3ad", "#fff5af", "#fff6b1", "#fff7b3", "#fff8b5", "#fffab7", "#fffbb9", "#fffcba", "#fffdbc", "#fffebe", "#feffc0", "#fdfec2", "#fcfec5", "#fbfdc7", "#fafdc9", "#f8fccb", "#f7fcce", "#f6fbd0", "#f5fbd2", "#f3fbd4", "#f2fad6", "#f1fad9", "#f0f9db", "#eff9dd", "#edf8df", "#ecf8e2", "#ebf7e4", "#eaf7e6", "#e9f6e8", "#e7f6eb", "#e6f5ed", "#e5f5ef", "#e4f4f1", "#e2f4f4", "#e1f3f6", "#e0f3f8", "#def2f7", "#dcf1f7", "#daf0f6", "#d8eff6", "#d6eef5", "#d4edf4", "#d1ecf4", "#cfebf3", "#cdeaf3", "#cbe9f2", "#c9e8f2", "#c7e7f1", "#c5e6f0", "#c3e5f0", "#c1e4ef", "#bfe3ef", "#bde2ee", "#bbe1ed", "#b9e0ed", "#b6dfec", "#b4deec", "#b2ddeb", "#b0dcea", "#aedbea", "#acdae9", "#aad8e9", "#a8d6e8", "#a6d5e7", "#a3d3e6", "#a1d1e5", "#9fd0e4", "#9dcee3", "#9bcce2", "#99cae1", "#97c9e0", "#94c7df", "#92c5de", "#90c3dd", "#8ec2dc", "#8cc0db", "#8abeda", "#87bdd9", "#85bbd9", "#83b9d8", "#81b7d7", "#7fb6d6", "#7db4d5", "#7ab2d4", "#78b0d3", "#76afd2", "#74add1", "#72abd0", "#70a9cf", "#6ea6ce", "#6da4cc", "#6ba2cb", "#69a0ca", "#679ec9", "#659bc8", "#6399c7", "#6297c6", "#6095c4", "#5e93c3", "#5c90c2", "#5a8ec1", "#588cc0", "#578abf", "#5588be", "#5385bd", "#5183bb", "#4f81ba", "#4d7fb9", "#4b7db8", "#4a7ab7", "#4878b6", "#4676b5", "#4574b3", "#4471b2", "#436fb1", "#426cb0", "#416aaf", "#4167ad", "#4065ac", "#3f62ab", "#3e60aa", "#3e5ea8", "#3d5ba7", "#3c59a6", "#3b56a5", "#3a54a4", "#3a51a2", "#394fa1", "#384ca0", "#374a9f", "#36479e", "#36459c", "#35429b", "#34409a", "#333d99", "#333b97", "#323896", "#313695"]), P._version = 0, P._frameWizardDialog = new Go(), P._dataVizWizardDialog = new Yo(), P._referenceFramePropsDialog = new qo(), P._greatCircleDialog = new Xo(), P._tourLayers = !1, P._layerMaps = {}, P._layerMapsTours = {}, P._allMaps = {}, P._allMapsTours = {}, P._currentMap = "Earth", P._layerList = {}, P._layerListTours = {}, P._moonfile = "", P._selectedLayer = null, P._lastMenuClick = new Mt(), Pn._type = null, cr.maX_VERTICES = 8e3, cr.maX_POLYGONS = 8e3, ga._orbitalToWwt = tt.create(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1), ga._initBegun = !1, hr._pinTextureCache = {}, hr._pins = null, function() {
          typeof document > "u" || document.getElementById("canvas");
        }(), Ge.mpcList = [], Ge._initBegun = !1, Ge._mpcBlendStates = new Array(7), Ge.starTexture = null, Ge._mpcVertexBuffer = null, Ge._mpcCount = 0, D.highPercision = !0, D.showActualSize = X.get_active().get_actualPlanetScale(), D.RC = Math.PI / 180, D._jNow = 0, D._planetAngles = [new Wi(286.13, 63.87, 84.176, 14.1844), new Wi(281.0097, 61.4143, 329.548, 6.1385025), new Wi(272.76, 67.16, 160.2, -1.4813688), new Wi(317.68143, 52.8865, 176.63, 350.89198226), new Wi(268.056595, 64.495303, 284.95, 870.536), new Wi(40.589, 83.537, 38.9, 810.7939024), new Wi(257.311, -15.175, 203.81, 501.1600928), new Wi(299.36, 43.46, 253.18, 536.3128492), new Wi(132.993, -6.163, 302.695, 56.3625225), new Wi(269.9949, 66.5392, 38.3213, 13.17635815), new Wi(268.05, 64.5, 200.39, 203.4889538), new Wi(268.08, 64.51, 36.022, 101.3747235), new Wi(268.2, 64.57, 44.064, 50.3176081), new Wi(268.72, 64.83, 259.51, 21.5710715), new Wi(0, 0, 0, 0), new Wi(0, 0, 0, 0), new Wi(0, 0, 0, 0), new Wi(0, 0, 0, 0), new Wi(0, 0, 0, 0), new Wi(0, 90, 190.147, 360.9856235)], D._lastPlanetCenterID = -2, D._orbitalSampleRate = 256, D._obliquity = 23.5 * D.RC, D._drawOrder = {}, D.earthMatrix = new tt(), D.earthMatrixInv = new tt(), D._lastUpdate = /* @__PURE__ */ new Date(), D._ringsTriangleLists = new Array(2), D._ringImage = null, D._triangleCountRings = 192 + 1 * 2, D._ringsVertexBuffer = null, D._planetSprite = new Kn(), D._planetPoints = null, ti.useGl = !1, ti.useGlVersion2 = !1, ti.back = 0, Me.width = 1024, Me.height = 768, Me._contractionInPixels = -0.5, Me.trianglesRendered = 0, Me.trianglesCulled = 0, Me.renderingOn = !0, Me._factor = 1, Me.cullInside = !0, Me._hw = 0, Me._qw = 0, Me._hh = 0, Me._qh = 0, X._active = null, X.tourSettings = null, Tr._caches = {}, Tr._allGlyphs = "", Q.last = Q.get_metaNow(), Q.framesPerSecond = 30, Q.frameDumping = !1, Q.cancelFrameDump = !1, Q.currentFrameNumber = 0, Q.totalFrames = 0, Q._metaNow = r.now(), Q._offset = 0, Q._now = r.now(), Q._syncToClock = !0, Q._timeRate = 1, Q._altitude = 0, ma._eTypeBuckets = [-3, -0.186, -0.168, -0.158, -0.15, -0.143, -0.137, -0.13, -0.123, -0.115, -0.104, -0.089, -0.068, -0.042, -0.011, 0.024, 0.064, 0.111, 0.169, 0.252, 3], G.currentRenderGeneration = 0, G.tileTargetX = -1, G.tileTargetY = -1, G.tileTargetLevel = -1, G.tilesInView = 0, G.trianglesRendered = 0, G.tilesTouched = 0, G.frustumList = null, G.prepDevice = null, G.uvMultiple = 256, G.callCount = 0, G.useAccomidation = !0, G.demEnabled = !1, G.maxLevel = 20, G.meshComplexity = 50, G.imageQuality = 50, G.lastDeepestLevel = 0, G.deepestLevel = 0, G.RC = 3.1415927 / 180, Ut._queue = {}, Ut._tiles = {}, Ut.openThreads = 8, Ut.readyToRenderCount = 0, Ut.maxTileCacheSize = 800, Ut.maxReadyToRenderSize = 200, Ut.accessID = 0, Ut._maxTotalToPurge = 0, gi.defaultAnchor = 1, gi.clipboardFormat = "WorldWideTelescope.Overlay", gi.nextId = 11231, gi.RC = 3.1415927 / 180, mi._points = new Array(9 * 3 * 2), Oi.capturing = !1, Oi.currentEditor = null, qe._playing = !1, qe._switchedToFullScreen = !1, qe.noRestoreUIOnStop = !1, Mr.clipboardFormat = "WorldWideTelescope.Slide", oe._undoStack = new r.Stack(), oe._redoStack = new r.Stack(), yi.kilometersPerAu = 149598e3, yi.auPerParsec = 206264.806, yi.auPerLightYear = 63239.6717, yi.ssmUnitConversion = 370, ia.id = 1, Io.earthRadius = 6371e3, Z.imageSets = [], Z.exploreRoot = new pn(), Z.imageSetName = "", Z.showDataLayers = !1, Z._renderNeeded = !1, Z.constellationsFigures = null, Z.constellationsBoundries = null, Z.solarSystemObjectsNames = ["Sun", "Mercury", "Venus", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto", "Moon", "Io", "Europa", "Ganymede", "Callisto", "IoShadow", "EuropaShadow", "GanymedeShadow", "CallistoShadow", "SunEclipsed", "Earth", "Custom", "Undefined"], Z.singleton = new Z(), Z.singleton.renderContext = new ti(), Q.last = r.now(), Q.updateClock(), U.RC = 3.1415927 / 180, U.RCRA = 3.1415927 / 12, U.radius = 1, U._rotationMatrix = null, Qi._halfpi$1 = Math.PI / 2, Qi._inv_halfpi$1 = 2 / Math.PI, Qi._twothird$1 = 2 / 3, rs._galacticMatrix$1 = tt.create(-0.0548755604024359, -0.483835015526738, -0.873437090247923, 0, -0.867666148981161, 0.455983776232537, -0.198076373464674, 0, 0.494109427943568, 0.746982244476371, -0.444829629919504, 0, 0, 0, 0, 1), ar.naN = 0 / 0, Ne._translateUI$1 = null, Ne._translateUILines$1 = null, Ne._scaleUI$1 = null, Ne._rotateUi$1 = null, Ui._circleTexture$1 = null, hs._circleTexture$1 = null, kr._circleTexture$1 = null, Pi.slashIndexBuffer = new Array(64), Pi.backSlashIndexBuffer = new Array(64), Pi.rootIndexBuffer = new Array(4), ir.issGuid = er.fromString("00000001-0002-0003-0405-060708090a0b"), ir._loading$2 = !1, ir._issmodel$2 = null, ir._doc$2 = null, t_;
      }), _exports_object;
    });
  }(src)), src.exports;
}
const require$$1 = /* @__PURE__ */ getAugmentedNamespace(vue_runtime_esmBundler);
(function(r, u) {
  (function(v, w) {
    r.exports = w(requireSrc(), require$$1);
  })(typeof self < "u" ? self : commonjsGlobal, (d, v) => (
    /******/
    (() => {
      var w = {
        /***/
        535: (
          /***/
          (V, N) => {
            N.Z = (z, st) => {
              const et = z.__vccOpts || z;
              for (const [ct, Ct] of st)
                et[ct] = Ct;
              return et;
            };
          }
        ),
        /***/
        415: (
          /***/
          (V) => {
            V.exports = d;
          }
        ),
        /***/
        203: (
          /***/
          (V) => {
            V.exports = v;
          }
        )
        /******/
      }, C = {};
      function L(V) {
        var N = C[V];
        if (N !== void 0)
          return N.exports;
        var z = C[V] = {
          /******/
          // no module.id needed
          /******/
          // no module.loaded needed
          /******/
          exports: {}
          /******/
        };
        return w[V](z, z.exports, L), z.exports;
      }
      L.d = (V, N) => {
        for (var z in N)
          L.o(N, z) && !L.o(V, z) && Object.defineProperty(V, z, { enumerable: !0, get: N[z] });
      }, L.g = function() {
        if (typeof globalThis == "object")
          return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object")
            return window;
        }
      }(), L.o = (V, N) => Object.prototype.hasOwnProperty.call(V, N), L.r = (V) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(V, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(V, "__esModule", { value: !0 });
      }, L.p = "";
      var E = {};
      return (() => {
        if (L.r(E), L.d(E, {
          ImageSetLayerState: () => (
            /* reexport */
            xa
          ),
          ImagesetInfo: () => (
            /* reexport */
            hi
          ),
          SpreadSheetLayerInfo: () => (
            /* reexport */
            ys
          ),
          WWTAwareComponent: () => (
            /* reexport */
            Gn
          ),
          WWTComponent: () => (
            /* reexport */
            Ts
          ),
          engineStore: () => (
            /* reexport */
            Hn
          ),
          wwtPinia: () => (
            /* reexport */
            Bi
          )
        }), typeof window < "u") {
          var V = window.document.currentScript, N = V && V.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
          N && (L.p = N[1]);
        }
        var z = L(203), st = !1;
        /*!
          * pinia v2.0.32
          * (c) 2023 Eduardo San Martin Morote
          * @license MIT
          */
        let et;
        const ct = (T) => et = T, Ct = (
          /* istanbul ignore next */
          Symbol()
        );
        function At(T) {
          return T && typeof T == "object" && Object.prototype.toString.call(T) === "[object Object]" && typeof T.toJSON != "function";
        }
        var qt;
        (function(T) {
          T.direct = "direct", T.patchObject = "patch object", T.patchFunction = "patch function";
        })(qt || (qt = {}));
        function vt() {
          const T = (0, z.effectScope)(!0), k = T.run(() => (0, z.ref)({}));
          let I = [], Y = [];
          const at = (0, z.markRaw)({
            install(nt) {
              ct(at), at._a = nt, nt.provide(Ct, at), nt.config.globalProperties.$pinia = at, Y.forEach((Tt) => I.push(Tt)), Y = [];
            },
            use(nt) {
              return !this._a && !st ? Y.push(nt) : I.push(nt), this;
            },
            _p: I,
            // it's actually undefined here
            // @ts-expect-error
            _a: null,
            _e: T,
            _s: /* @__PURE__ */ new Map(),
            state: k
          });
          return at;
        }
        const _t = () => {
        };
        function Et(T, k, I, Y = _t) {
          T.push(k);
          const at = () => {
            const nt = T.indexOf(k);
            nt > -1 && (T.splice(nt, 1), Y());
          };
          return !I && (0, z.getCurrentScope)() && (0, z.onScopeDispose)(at), at;
        }
        function ft(T, ...k) {
          T.slice().forEach((I) => {
            I(...k);
          });
        }
        function wt(T, k) {
          T instanceof Map && k instanceof Map && k.forEach((I, Y) => T.set(Y, I)), T instanceof Set && k instanceof Set && k.forEach(T.add, T);
          for (const I in k) {
            if (!k.hasOwnProperty(I))
              continue;
            const Y = k[I], at = T[I];
            At(at) && At(Y) && T.hasOwnProperty(I) && !(0, z.isRef)(Y) && !(0, z.isReactive)(Y) ? T[I] = wt(at, Y) : T[I] = Y;
          }
          return T;
        }
        const Zt = (
          /* istanbul ignore next */
          Symbol()
        );
        function Ot(T) {
          return !At(T) || !T.hasOwnProperty(Zt);
        }
        const { assign: bt } = Object;
        function Xt(T) {
          return !!((0, z.isRef)(T) && T.effect);
        }
        function ie(T, k, I, Y) {
          const { state: at, actions: nt, getters: Tt } = k, Rt = I.state.value[T];
          let Ae;
          function Wt() {
            Rt || (I.state.value[T] = at ? at() : {});
            const Fe = (0, z.toRefs)(I.state.value[T]);
            return bt(Fe, nt, Object.keys(Tt || {}).reduce((Se, vr) => (Se[vr] = (0, z.markRaw)((0, z.computed)(() => {
              ct(I);
              const Lt = I._s.get(T);
              return Tt[vr].call(Lt, Lt);
            })), Se), {}));
          }
          return Ae = Yt(T, Wt, k, I, Y, !0), Ae.$reset = function() {
            const Se = at ? at() : {};
            this.$patch((vr) => {
              bt(vr, Se);
            });
          }, Ae;
        }
        function Yt(T, k, I = {}, Y, at, nt) {
          let Tt;
          const Rt = bt({ actions: {} }, I), Ae = {
            deep: !0
            // flush: 'post',
          };
          let Wt, Fe, Se = (0, z.markRaw)([]), vr = (0, z.markRaw)([]), Lt;
          const Gr = Y.state.value[T];
          !nt && !Gr && (Y.state.value[T] = {}), (0, z.ref)({});
          let ye;
          function ca(dt) {
            let zi;
            Wt = Fe = !1, typeof dt == "function" ? (dt(Y.state.value[T]), zi = {
              type: qt.patchFunction,
              storeId: T,
              events: Lt
            }) : (wt(Y.state.value[T], dt), zi = {
              type: qt.patchObject,
              payload: dt,
              storeId: T,
              events: Lt
            });
            const Ar = ye = Symbol();
            (0, z.nextTick)().then(() => {
              ye === Ar && (Wt = !0);
            }), Fe = !0, ft(Se, zi, Y.state.value[T]);
          }
          const Ur = _t;
          function Ms() {
            Tt.stop(), Se = [], vr = [], Y._s.delete(T);
          }
          function Aa(dt, zi) {
            return function() {
              ct(Y);
              const Ar = Array.from(arguments), Xn = [], br = [];
              function Ls(fe) {
                Xn.push(fe);
              }
              function ci(fe) {
                br.push(fe);
              }
              ft(vr, {
                args: Ar,
                name: dt,
                store: Gi,
                after: Ls,
                onError: ci
              });
              let Yn;
              try {
                Yn = zi.apply(this && this.$id === T ? this : Gi, Ar);
              } catch (fe) {
                throw ft(br, fe), fe;
              }
              return Yn instanceof Promise ? Yn.then((fe) => (ft(Xn, fe), fe)).catch((fe) => (ft(br, fe), Promise.reject(fe))) : (ft(Xn, Yn), Yn);
            };
          }
          const xs = {
            _p: Y,
            // _s: scope,
            $id: T,
            $onAction: Et.bind(null, vr),
            $patch: ca,
            $reset: Ur,
            $subscribe(dt, zi = {}) {
              const Ar = Et(Se, dt, zi.detached, () => Xn()), Xn = Tt.run(() => (0, z.watch)(() => Y.state.value[T], (br) => {
                (zi.flush === "sync" ? Fe : Wt) && dt({
                  storeId: T,
                  type: qt.direct,
                  events: Lt
                }, br);
              }, bt({}, Ae, zi)));
              return Ar;
            },
            $dispose: Ms
          }, Gi = (0, z.reactive)(xs);
          Y._s.set(T, Gi);
          const qn = Y._e.run(() => (Tt = (0, z.effectScope)(), Tt.run(() => k())));
          for (const dt in qn) {
            const zi = qn[dt];
            if ((0, z.isRef)(zi) && !Xt(zi) || (0, z.isReactive)(zi))
              nt || (Gr && Ot(zi) && ((0, z.isRef)(zi) ? zi.value = Gr[dt] : wt(zi, Gr[dt])), Y.state.value[T][dt] = zi);
            else if (typeof zi == "function") {
              const Ar = Aa(dt, zi);
              qn[dt] = Ar, Rt.actions[dt] = zi;
            }
          }
          return bt(Gi, qn), bt((0, z.toRaw)(Gi), qn), Object.defineProperty(Gi, "$state", {
            get: () => Y.state.value[T],
            set: (dt) => {
              ca((zi) => {
                bt(zi, dt);
              });
            }
          }), Y._p.forEach((dt) => {
            bt(Gi, Tt.run(() => dt({
              store: Gi,
              app: Y._a,
              pinia: Y,
              options: Rt
            })));
          }), Gr && nt && I.hydrate && I.hydrate(Gi.$state, Gr), Wt = !0, Fe = !0, Gi;
        }
        function ae(T, k, I) {
          let Y, at;
          const nt = typeof k == "function";
          typeof T == "string" ? (Y = T, at = nt ? I : k) : (at = T, Y = T.id);
          function Tt(Rt, Ae) {
            const Wt = (0, z.getCurrentInstance)();
            return Rt = // in test mode, ignore the argument provided as we can always retrieve a
            // pinia instance with getActivePinia()
            Rt || Wt && (0, z.inject)(Ct, null), Rt && ct(Rt), Rt = et, Rt._s.has(Y) || (nt ? Yt(Y, k, at, Rt) : ie(Y, at, Rt)), Rt._s.get(Y);
          }
          return Tt.$id = Y, Tt;
        }
        function Re(T, k) {
          return Array.isArray(k) ? k.reduce((I, Y) => (I[Y] = function() {
            return T(this.$pinia)[Y];
          }, I), {}) : Object.keys(k).reduce((I, Y) => (I[Y] = function() {
            const at = T(this.$pinia), nt = k[Y];
            return typeof nt == "function" ? nt.call(this, at) : at[nt];
          }, I), {});
        }
        function me(T, k) {
          return Array.isArray(k) ? k.reduce((I, Y) => (I[Y] = function(...at) {
            return T(this.$pinia)[Y](...at);
          }, I), {}) : Object.keys(k).reduce((I, Y) => (I[Y] = function(...at) {
            return T(this.$pinia)[k[Y]](...at);
          }, I), {});
        }
        var Fi = function(T, k) {
          return Fi = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(I, Y) {
            I.__proto__ = Y;
          } || function(I, Y) {
            for (var at in Y)
              Object.prototype.hasOwnProperty.call(Y, at) && (I[at] = Y[at]);
          }, Fi(T, k);
        };
        function ei(T, k) {
          if (typeof k != "function" && k !== null)
            throw new TypeError("Class extends value " + String(k) + " is not a constructor or null");
          Fi(T, k);
          function I() {
            this.constructor = T;
          }
          T.prototype = k === null ? Object.create(k) : (I.prototype = k.prototype, new I());
        }
        var si = function() {
          return si = Object.assign || function(k) {
            for (var I, Y = 1, at = arguments.length; Y < at; Y++) {
              I = arguments[Y];
              for (var nt in I)
                Object.prototype.hasOwnProperty.call(I, nt) && (k[nt] = I[nt]);
            }
            return k;
          }, si.apply(this, arguments);
        };
        function $e(T, k, I, Y) {
          function at(nt) {
            return nt instanceof I ? nt : new I(function(Tt) {
              Tt(nt);
            });
          }
          return new (I || (I = Promise))(function(nt, Tt) {
            function Rt(Fe) {
              try {
                Wt(Y.next(Fe));
              } catch (Se) {
                Tt(Se);
              }
            }
            function Ae(Fe) {
              try {
                Wt(Y.throw(Fe));
              } catch (Se) {
                Tt(Se);
              }
            }
            function Wt(Fe) {
              Fe.done ? nt(Fe.value) : at(Fe.value).then(Rt, Ae);
            }
            Wt((Y = Y.apply(T, k || [])).next());
          });
        }
        function Ai(T, k) {
          var I = { label: 0, sent: function() {
            if (nt[0] & 1)
              throw nt[1];
            return nt[1];
          }, trys: [], ops: [] }, Y, at, nt, Tt;
          return Tt = { next: Rt(0), throw: Rt(1), return: Rt(2) }, typeof Symbol == "function" && (Tt[Symbol.iterator] = function() {
            return this;
          }), Tt;
          function Rt(Wt) {
            return function(Fe) {
              return Ae([Wt, Fe]);
            };
          }
          function Ae(Wt) {
            if (Y)
              throw new TypeError("Generator is already executing.");
            for (; Tt && (Tt = 0, Wt[0] && (I = 0)), I; )
              try {
                if (Y = 1, at && (nt = Wt[0] & 2 ? at.return : Wt[0] ? at.throw || ((nt = at.return) && nt.call(at), 0) : at.next) && !(nt = nt.call(at, Wt[1])).done)
                  return nt;
                switch (at = 0, nt && (Wt = [Wt[0] & 2, nt.value]), Wt[0]) {
                  case 0:
                  case 1:
                    nt = Wt;
                    break;
                  case 4:
                    return I.label++, { value: Wt[1], done: !1 };
                  case 5:
                    I.label++, at = Wt[1], Wt = [0];
                    continue;
                  case 7:
                    Wt = I.ops.pop(), I.trys.pop();
                    continue;
                  default:
                    if (nt = I.trys, !(nt = nt.length > 0 && nt[nt.length - 1]) && (Wt[0] === 6 || Wt[0] === 2)) {
                      I = 0;
                      continue;
                    }
                    if (Wt[0] === 3 && (!nt || Wt[1] > nt[0] && Wt[1] < nt[3])) {
                      I.label = Wt[1];
                      break;
                    }
                    if (Wt[0] === 6 && I.label < nt[1]) {
                      I.label = nt[1], nt = Wt;
                      break;
                    }
                    if (nt && I.label < nt[2]) {
                      I.label = nt[2], I.ops.push(Wt);
                      break;
                    }
                    nt[2] && I.ops.pop(), I.trys.pop();
                    continue;
                }
                Wt = k.call(T, I);
              } catch (Fe) {
                Wt = [6, Fe], at = 0;
              } finally {
                Y = nt = 0;
              }
            if (Wt[0] & 5)
              throw Wt[1];
            return { value: Wt[0] ? Wt[1] : void 0, done: !0 };
          }
        }
        function ki(T) {
          var k = typeof Symbol == "function" && Symbol.iterator, I = k && T[k], Y = 0;
          if (I)
            return I.call(T);
          if (T && typeof T.length == "number")
            return {
              next: function() {
                return T && Y >= T.length && (T = void 0), { value: T && T[Y++], done: !T };
              }
            };
          throw new TypeError(k ? "Object is not iterable." : "Symbol.iterator is not defined.");
        }
        function Hr(T, k) {
          var I = typeof Symbol == "function" && T[Symbol.iterator];
          if (!I)
            return T;
          var Y = I.call(T), at, nt = [], Tt;
          try {
            for (; (k === void 0 || k-- > 0) && !(at = Y.next()).done; )
              nt.push(at.value);
          } catch (Rt) {
            Tt = { error: Rt };
          } finally {
            try {
              at && !at.done && (I = Y.return) && I.call(Y);
            } finally {
              if (Tt)
                throw Tt.error;
            }
          }
          return nt;
        }
        var gr = 3.14159265358979, Fn = 180 / gr, Ca = gr / 180, la = 12 / gr, Rr = gr / 12, Mn = 12 / 180, Bn;
        (function(T) {
          T[T.depth = 0] = "depth", T[T.altitude = 1] = "altitude", T[T.distance = 2] = "distance", T[T.seaLevel = 3] = "seaLevel", T[T.terrain = 4] = "terrain";
        })(Bn || (Bn = {}));
        var Or;
        (function(T) {
          T[T.meters = 1] = "meters", T[T.feet = 2] = "feet", T[T.inches = 3] = "inches", T[T.miles = 4] = "miles", T[T.kilometers = 5] = "kilometers", T[T.astronomicalUnits = 6] = "astronomicalUnits", T[T.lightYears = 7] = "lightYears", T[T.parsecs = 8] = "parsecs", T[T.megaParsecs = 9] = "megaParsecs", T[T.custom = 10] = "custom";
        })(Or || (Or = {}));
        var xn;
        (function(T) {
          T[T.gamma = 0] = "gamma", T[T.xRay = 1] = "xRay", T[T.ultraviolet = 2] = "ultraviolet", T[T.visible = 3] = "visible", T[T.hydrogenAlpha = 4] = "hydrogenAlpha", T[T.IR = 4] = "IR", T[T.microwave = 5] = "microwave", T[T.radio = 6] = "radio", T[T.visibleNight = 6] = "visibleNight";
        })(xn || (xn = {}));
        var $r;
        (function(T) {
          T[T.star = 1] = "star", T[T.supernova = 2] = "supernova", T[T.blackHole = 4] = "blackHole", T[T.neutronStar = 8] = "neutronStar", T[T.doubleStar = 16] = "doubleStar", T[T.multipleStars = 32] = "multipleStars", T[T.asterism = 64] = "asterism", T[T.constellation = 128] = "constellation", T[T.openCluster = 256] = "openCluster", T[T.globularCluster = 512] = "globularCluster", T[T.nebulousCluster = 1024] = "nebulousCluster", T[T.nebula = 2048] = "nebula", T[T.emissionNebula = 4096] = "emissionNebula", T[T.planetaryNebula = 8192] = "planetaryNebula", T[T.reflectionNebula = 16384] = "reflectionNebula", T[T.darkNebula = 32768] = "darkNebula", T[T.giantMolecularCloud = 65536] = "giantMolecularCloud", T[T.supernovaRemnant = 131072] = "supernovaRemnant", T[T.interstellarDust = 262144] = "interstellarDust", T[T.quasar = 524288] = "quasar", T[T.galaxy = 1048576] = "galaxy", T[T.spiralGalaxy = 2097152] = "spiralGalaxy", T[T.irregularGalaxy = 4194304] = "irregularGalaxy", T[T.ellipticalGalaxy = 8388608] = "ellipticalGalaxy", T[T.knot = 16777216] = "knot", T[T.plateDefect = 33554432] = "plateDefect", T[T.clusterOfGalaxies = 67108864] = "clusterOfGalaxies", T[T.otherNGC = 134217728] = "otherNGC", T[T.unidentified = 268435456] = "unidentified", T[T.solarSystem = 536870912] = "solarSystem", T[T.unfiltered = 1073741823] = "unfiltered", T[T.stellar = 63] = "stellar", T[T.stellarGroupings = 2032] = "stellarGroupings", T[T.nebulae = 523264] = "nebulae", T[T.galactic = 133693440] = "galactic", T[T.other = 436207616] = "other";
        })($r || ($r = {}));
        var rt;
        (function(T) {
          T[T.spherical = 0] = "spherical", T[T.rectangular = 1] = "rectangular", T[T.orbital = 2] = "orbital";
        })(rt || (rt = {}));
        var ht;
        (function(T) {
          T[T.byteT = 0] = "byteT", T[T.int16T = 1] = "int16T", T[T.int32T = 2] = "int32T", T[T.floatT = 3] = "floatT", T[T.doubleT = 4] = "doubleT", T[T.none = 5] = "none";
        })(ht || (ht = {}));
        var It;
        (function(T) {
          T[T.fadeIn = 1] = "fadeIn", T[T.fadeOut = 2] = "fadeOut", T[T.both = 3] = "both", T[T.none = 4] = "none";
        })(It || (It = {}));
        var Bt;
        (function(T) {
          T[T.explorer = 0] = "explorer", T[T.tour = 1] = "tour", T[T.search = 2] = "search", T[T.constellation = 3] = "constellation", T[T.view = 4] = "view", T[T.goTo = 5] = "goTo", T[T.community = 6] = "community", T[T.context = 7] = "context", T[T.voTable = 8] = "voTable", T[T.imageStack = 9] = "imageStack";
        })(Bt || (Bt = {}));
        var Nt;
        (function(T) {
          T[T.interval = 0] = "interval", T[T.conditionalGet = 1] = "conditionalGet", T[T.viewChange = 2] = "viewChange";
        })(Nt || (Nt = {}));
        var Jt;
        (function(T) {
          T[T.earth = 0] = "earth", T[T.planet = 1] = "planet", T[T.sky = 2] = "sky", T[T.panorama = 3] = "panorama";
        })(Jt || (Jt = {}));
        var le;
        (function(T) {
          T[T.earth = 0] = "earth", T[T.planet = 1] = "planet", T[T.sky = 2] = "sky", T[T.panorama = 3] = "panorama", T[T.solarSystem = 4] = "solarSystem", T[T.sandbox = 5] = "sandbox";
        })(le || (le = {}));
        var S;
        (function(T) {
          T[T.screen = 0] = "screen", T[T.world = 1] = "world";
        })(S || (S = {}));
        var te;
        (function(T) {
          T[T.gaussian = 0] = "gaussian", T[T.point = 1] = "point", T[T.circle = 2] = "circle", T[T.square = 3] = "square", T[T.pushPin = 4] = "pushPin", T[T.custom = 5] = "custom";
        })(te || (te = {}));
        var Vt;
        (function(T) {
          T[T.linear = 0] = "linear", T[T.power = 1] = "power", T[T.log = 2] = "log", T[T.constant = 3] = "constant", T[T.stellarMagnitude = 4] = "stellarMagnitude";
        })(Vt || (Vt = {}));
        var Kt;
        (function(T) {
          T[T.mercator = 0] = "mercator", T[T.equirectangular = 1] = "equirectangular", T[T.tangent = 2] = "tangent", T[T.tan = 2] = "tan", T[T.toast = 3] = "toast", T[T.spherical = 4] = "spherical", T[T.skyImage = 5] = "skyImage", T[T.plotted = 6] = "plotted";
        })(Kt || (Kt = {}));
        var be;
        (function(T) {
          T[T.hours = 0] = "hours", T[T.degrees = 1] = "degrees";
        })(be || (be = {}));
        var Te;
        (function(T) {
          T[T.sky = 0] = "sky", T[T.ecliptic = 1] = "ecliptic", T[T.galactic = 2] = "galactic", T[T.sun = 3] = "sun", T[T.mercury = 4] = "mercury", T[T.venus = 5] = "venus", T[T.earth = 6] = "earth", T[T.mars = 7] = "mars", T[T.jupiter = 8] = "jupiter", T[T.saturn = 9] = "saturn", T[T.uranus = 10] = "uranus", T[T.neptune = 11] = "neptune", T[T.pluto = 12] = "pluto", T[T.moon = 13] = "moon", T[T.io = 14] = "io", T[T.europa = 15] = "europa", T[T.ganymede = 16] = "ganymede", T[T.callisto = 17] = "callisto", T[T.custom = 18] = "custom", T[T.identity = 19] = "identity", T[T.sandbox = 20] = "sandbox";
        })(Te || (Te = {}));
        var Ue;
        (function(T) {
          T[T.fixedSherical = 0] = "fixedSherical", T[T.orbital = 1] = "orbital", T[T.trajectory = 2] = "trajectory", T[T.synodic = 3] = "synodic";
        })(Ue || (Ue = {}));
        var Le;
        (function(T) {
          T[T.linear = 0] = "linear", T[T.log = 1] = "log", T[T.power = 2] = "power", T[T.squareRoot = 3] = "squareRoot", T[T.histogramEqualization = 4] = "histogramEqualization";
        })(Le || (Le = {}));
        var Ci;
        (function(T) {
          T[T.sun = 0] = "sun", T[T.mercury = 1] = "mercury", T[T.venus = 2] = "venus", T[T.mars = 3] = "mars", T[T.jupiter = 4] = "jupiter", T[T.saturn = 5] = "saturn", T[T.uranus = 6] = "uranus", T[T.neptune = 7] = "neptune", T[T.pluto = 8] = "pluto", T[T.moon = 9] = "moon", T[T.io = 10] = "io", T[T.europa = 11] = "europa", T[T.ganymede = 12] = "ganymede", T[T.callisto = 13] = "callisto", T[T.ioShadow = 14] = "ioShadow", T[T.europaShadow = 15] = "europaShadow", T[T.ganymedeShadow = 16] = "ganymedeShadow", T[T.callistoShadow = 17] = "callistoShadow", T[T.sunEclipsed = 18] = "sunEclipsed", T[T.earth = 19] = "earth", T[T.custom = 20] = "custom", T[T.undefined = 65536] = "undefined";
        })(Ci || (Ci = {}));
        var pe = L(415), Ri = [
          "astronomical",
          "color",
          "enabled",
          "fadeSpan",
          "name",
          "opacity",
          "opened",
          "referenceFrame",
          "version"
        ];
        function x(T, k) {
          var I, Y;
          try {
            for (var at = ki(Ri), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        var Vr = (
          /** @class */
          function() {
            function T(k) {
              x(k, this);
            }
            return T.prototype.get_astronomical = function() {
              return this.astronomical;
            }, T.prototype.set_astronomical = function(k) {
              return this.astronomical = k, k;
            }, T.prototype.get_color = function() {
              return this.color;
            }, T.prototype.set_color = function(k) {
              return this.color = k, k;
            }, T.prototype.get_enabled = function() {
              return this.enabled;
            }, T.prototype.set_enabled = function(k) {
              return this.enabled = k, k;
            }, T.prototype.get_endTime = function() {
              return this.endTime;
            }, T.prototype.set_endTime = function(k) {
              return this.endTime = k, k;
            }, T.prototype.get_fadeSpan = function() {
              return this.fadeSpan;
            }, T.prototype.set_fadeSpan = function(k) {
              return this.fadeSpan = k, k;
            }, T.prototype.get_fadeType = function() {
              return this.fadeType;
            }, T.prototype.set_fadeType = function(k) {
              return this.fadeType = k, k;
            }, T.prototype.get_name = function() {
              return this.name;
            }, T.prototype.set_name = function(k) {
              return this.name = k, k;
            }, T.prototype.get_opacity = function() {
              return this.opacity;
            }, T.prototype.set_opacity = function(k) {
              return this.opacity = k, k;
            }, T.prototype.get_opened = function() {
              return this.opened;
            }, T.prototype.set_opened = function(k) {
              return this.opened = k, k;
            }, T.prototype.get_referenceFrame = function() {
              return this.referenceFrame;
            }, T.prototype.set_referenceFrame = function(k) {
              return this.referenceFrame = k, k;
            }, T.prototype.get_startTime = function() {
              return this.startTime;
            }, T.prototype.set_startTime = function(k) {
              return this.startTime = k, k;
            }, T.prototype.get_version = function() {
              return this.version;
            }, T.prototype.set_version = function(k) {
              return this.version = k, k;
            }, T;
          }()
        ), dn = [
          "colorMapperName",
          "overrideDefaultLayer"
        ];
        Ri.concat(dn);
        function Jr(T, k) {
          var I = "set_" + k[0], Y = k[1];
          T[I](Y);
        }
        function ui(T, k) {
          var I, Y;
          x(T, k);
          try {
            for (var at = ki(dn), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        var mr = (
          /** @class */
          function(T) {
            ei(k, T);
            function k(I) {
              var Y = (
                // Here we redundantly copy the generic Layer settings, but TypeScript
                // requires the super() call. Oh well.
                T.call(this, I) || this
              );
              return ui(I, Y), Y;
            }
            return k.prototype.get_colorMapperName = function() {
              return this.colorMapperName;
            }, k.prototype.set_colorMapperName = function(I) {
              return this.colorMapperName = I, I;
            }, k.prototype.get_overrideDefaultLayer = function() {
              return this.overrideDefaultLayer;
            }, k.prototype.set_overrideDefaultLayer = function(I) {
              return this.overrideDefaultLayer = I, I;
            }, k;
          }(Vr)
        ), pr = [
          "altColumn",
          "altType",
          "altUnit",
          "barChartBitmask",
          "beginRange",
          "cartesianCustomScale",
          "cartesianScale",
          "colorMapColumn",
          "colorMapperName",
          "coordinatesType",
          "decay",
          "dynamicColor",
          "dynamicData",
          "endDateColumn",
          "endRange",
          "geometryColumn",
          "hyperlinkColumn",
          "hyperlinkFormat",
          "latColumn",
          "lngColumn",
          "markerColumn",
          "markerIndex",
          "markerScale",
          "nameColumn",
          "normalizeColorMap",
          "normalizeColorMapMax",
          "normalizeColorMapMin",
          "normalizeSize",
          "normalizeSizeClip",
          "normalizeSizeMax",
          "normalizeSizeMin",
          "plotType",
          "pointScaleType",
          "raUnits",
          "scaleFactor",
          "showFarSide",
          "sizeColumn",
          "startDateColumn",
          "timeSeries",
          "xAxisColumn",
          "xAxisReverse",
          "yAxisColumn",
          "yAxisReverse",
          "zAxisColumn",
          "zAxisReverse"
        ];
        Ri.concat(pr);
        function zn(T, k) {
          var I = "set_" + k[0], Y = k[1];
          T[I](Y);
        }
        function ii(T, k) {
          var I, Y;
          x(T, k);
          try {
            for (var at = ki(pr), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        var Ga = (
          /** @class */
          function(T) {
            ei(k, T);
            function k(I) {
              var Y = (
                // Here we redundantly copy the generic Layer settings, but TypeScript
                // requires the super() call. Oh well.
                T.call(this, I) || this
              );
              return ii(I, Y), Y;
            }
            return k.prototype.get_altColumn = function() {
              return this.altColumn;
            }, k.prototype.set_altColumn = function(I) {
              return this.altColumn = I, I;
            }, k.prototype.get_altType = function() {
              return this.altType;
            }, k.prototype.set_altType = function(I) {
              return this.altType = I, I;
            }, k.prototype.get_altUnit = function() {
              return this.altUnit;
            }, k.prototype.set_altUnit = function(I) {
              return this.altUnit = I, I;
            }, k.prototype.get_barChartBitmask = function() {
              return this.barChartBitmask;
            }, k.prototype.set_barChartBitmask = function(I) {
              return this.barChartBitmask = I, I;
            }, k.prototype.get_beginRange = function() {
              return this.beginRange;
            }, k.prototype.set_beginRange = function(I) {
              return this.beginRange = I, I;
            }, k.prototype.get_cartesianCustomScale = function() {
              return this.cartesianCustomScale;
            }, k.prototype.set_cartesianCustomScale = function(I) {
              return this.cartesianCustomScale = I, I;
            }, k.prototype.get_cartesianScale = function() {
              return this.cartesianScale;
            }, k.prototype.set_cartesianScale = function(I) {
              return this.cartesianScale = I, I;
            }, k.prototype.get_colorMapColumn = function() {
              return this.colorMapColumn;
            }, k.prototype.set_colorMapColumn = function(I) {
              return this.colorMapColumn = I, I;
            }, k.prototype.get_colorMapperName = function() {
              return this.colorMapperName;
            }, k.prototype.set_colorMapperName = function(I) {
              return this.colorMapperName = I, I;
            }, k.prototype.get_coordinatesType = function() {
              return this.coordinatesType;
            }, k.prototype.set_coordinatesType = function(I) {
              return this.coordinatesType = I, I;
            }, k.prototype.get_decay = function() {
              return this.decay;
            }, k.prototype.set_decay = function(I) {
              return this.decay = I, I;
            }, k.prototype.get_dynamicColor = function() {
              return this.dynamicColor;
            }, k.prototype.set_dynamicColor = function(I) {
              return this.dynamicColor = I, I;
            }, k.prototype.get_dynamicData = function() {
              return this.dynamicData;
            }, k.prototype.set_dynamicData = function(I) {
              return this.dynamicData = I, I;
            }, k.prototype.get_endDateColumn = function() {
              return this.endDateColumn;
            }, k.prototype.set_endDateColumn = function(I) {
              return this.endDateColumn = I, I;
            }, k.prototype.get_endRange = function() {
              return this.endRange;
            }, k.prototype.set_endRange = function(I) {
              return this.endRange = I, I;
            }, k.prototype.get_geometryColumn = function() {
              return this.geometryColumn;
            }, k.prototype.set_geometryColumn = function(I) {
              return this.geometryColumn = I, I;
            }, k.prototype.get_hyperlinkColumn = function() {
              return this.hyperlinkColumn;
            }, k.prototype.set_hyperlinkColumn = function(I) {
              return this.hyperlinkColumn = I, I;
            }, k.prototype.get_hyperlinkFormat = function() {
              return this.hyperlinkFormat;
            }, k.prototype.set_hyperlinkFormat = function(I) {
              return this.hyperlinkFormat = I, I;
            }, k.prototype.get_latColumn = function() {
              return this.latColumn;
            }, k.prototype.set_latColumn = function(I) {
              return this.latColumn = I, I;
            }, k.prototype.get_lngColumn = function() {
              return this.lngColumn;
            }, k.prototype.set_lngColumn = function(I) {
              return this.lngColumn = I, I;
            }, k.prototype.get_markerColumn = function() {
              return this.markerColumn;
            }, k.prototype.set_markerColumn = function(I) {
              return this.markerColumn = I, I;
            }, k.prototype.get_markerIndex = function() {
              return this.markerIndex;
            }, k.prototype.set_markerIndex = function(I) {
              return this.markerIndex = I, I;
            }, k.prototype.get_markerScale = function() {
              return this.markerScale;
            }, k.prototype.set_markerScale = function(I) {
              return this.markerScale = I, I;
            }, k.prototype.get_nameColumn = function() {
              return this.nameColumn;
            }, k.prototype.set_nameColumn = function(I) {
              return this.nameColumn = I, I;
            }, k.prototype.get_normalizeColorMap = function() {
              return this.normalizeColorMap;
            }, k.prototype.set_normalizeColorMap = function(I) {
              return this.normalizeColorMap = I, I;
            }, k.prototype.get_normalizeColorMapMax = function() {
              return this.normalizeColorMapMax;
            }, k.prototype.set_normalizeColorMapMax = function(I) {
              return this.normalizeColorMapMax = I, I;
            }, k.prototype.get_normalizeColorMapMin = function() {
              return this.normalizeColorMapMin;
            }, k.prototype.set_normalizeColorMapMin = function(I) {
              return this.normalizeColorMapMin = I, I;
            }, k.prototype.get_normalizeSize = function() {
              return this.normalizeSize;
            }, k.prototype.set_normalizeSize = function(I) {
              return this.normalizeSize = I, I;
            }, k.prototype.get_normalizeSizeClip = function() {
              return this.normalizeSizeClip;
            }, k.prototype.set_normalizeSizeClip = function(I) {
              return this.normalizeSizeClip = I, I;
            }, k.prototype.get_normalizeSizeMax = function() {
              return this.normalizeSizeMax;
            }, k.prototype.set_normalizeSizeMax = function(I) {
              return this.normalizeSizeMax = I, I;
            }, k.prototype.get_normalizeSizeMin = function() {
              return this.normalizeSizeMin;
            }, k.prototype.set_normalizeSizeMin = function(I) {
              return this.normalizeSizeMin = I, I;
            }, k.prototype.get_plotType = function() {
              return this.plotType;
            }, k.prototype.set_plotType = function(I) {
              return this.plotType = I, I;
            }, k.prototype.get_pointScaleType = function() {
              return this.pointScaleType;
            }, k.prototype.set_pointScaleType = function(I) {
              return this.pointScaleType = I, I;
            }, k.prototype.get_raUnits = function() {
              return this.raUnits;
            }, k.prototype.set_raUnits = function(I) {
              return this.raUnits = I, I;
            }, k.prototype.get_scaleFactor = function() {
              return this.scaleFactor;
            }, k.prototype.set_scaleFactor = function(I) {
              return this.scaleFactor = I, I;
            }, k.prototype.get_showFarSide = function() {
              return this.showFarSide;
            }, k.prototype.set_showFarSide = function(I) {
              return this.showFarSide = I, I;
            }, k.prototype.get_sizeColumn = function() {
              return this.sizeColumn;
            }, k.prototype.set_sizeColumn = function(I) {
              return this.sizeColumn = I, I;
            }, k.prototype.get_startDateColumn = function() {
              return this.startDateColumn;
            }, k.prototype.set_startDateColumn = function(I) {
              return this.startDateColumn = I, I;
            }, k.prototype.get_timeSeries = function() {
              return this.timeSeries;
            }, k.prototype.set_timeSeries = function(I) {
              return this.timeSeries = I, I;
            }, k.prototype.get_xAxisColumn = function() {
              return this.xAxisColumn;
            }, k.prototype.set_xAxisColumn = function(I) {
              return this.xAxisColumn = I, I;
            }, k.prototype.get_xAxisReverse = function() {
              return this.xAxisReverse;
            }, k.prototype.set_xAxisReverse = function(I) {
              return this.xAxisReverse = I, I;
            }, k.prototype.get_yAxisColumn = function() {
              return this.yAxisColumn;
            }, k.prototype.set_yAxisColumn = function(I) {
              return this.yAxisColumn = I, I;
            }, k.prototype.get_yAxisReverse = function() {
              return this.yAxisReverse;
            }, k.prototype.set_yAxisReverse = function(I) {
              return this.yAxisReverse = I, I;
            }, k.prototype.get_zAxisColumn = function() {
              return this.zAxisColumn;
            }, k.prototype.set_zAxisColumn = function(I) {
              return this.zAxisColumn = I, I;
            }, k.prototype.get_zAxisReverse = function() {
              return this.zAxisReverse;
            }, k.prototype.set_zAxisReverse = function(I) {
              return this.zAxisReverse = I, I;
            }, k;
          }(Vr)
        ), o = [
          "id",
          "label",
          "opacity",
          "showHoverLabel",
          "tag"
        ];
        function ua(T, k) {
          var I, Y;
          try {
            for (var at = ki(o), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        var On = (
          /** @class */
          function() {
            function T(k) {
              ua(k, this);
            }
            return T.prototype.get_id = function() {
              return this.id;
            }, T.prototype.set_id = function(k) {
              return this.id = k, k;
            }, T.prototype.get_label = function() {
              return this.label;
            }, T.prototype.set_label = function(k) {
              return this.label = k, k;
            }, T.prototype.get_opacity = function() {
              return this.opacity;
            }, T.prototype.set_opacity = function(k) {
              return this.opacity = k, k;
            }, T.prototype.get_showHoverLabel = function() {
              return this.showHoverLabel;
            }, T.prototype.set_showHoverLabel = function(k) {
              return this.showHoverLabel = k, k;
            }, T.prototype.get_tag = function() {
              return this.tag;
            }, T.prototype.set_tag = function(k) {
              return this.tag = k, k;
            }, T;
          }()
        ), qa = [
          "fill",
          "fillColor",
          "lineColor",
          "lineWidth",
          "radius",
          "skyRelative"
        ];
        o.concat(qa);
        function Ta(T, k) {
          var I, Y;
          ua(T, k);
          try {
            for (var at = ki(qa), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        (function(T) {
          ei(k, T);
          function k(I) {
            var Y = T.call(this, I) || this;
            return Ta(I, Y), Y;
          }
          return k.prototype.get_fill = function() {
            return this.fill;
          }, k.prototype.set_fill = function(I) {
            return this.fill = I, I;
          }, k.prototype.get_fillColor = function() {
            return this.fillColor;
          }, k.prototype.set_fillColor = function(I) {
            return this.fillColor = I, I;
          }, k.prototype.get_lineColor = function() {
            return this.lineColor;
          }, k.prototype.set_lineColor = function(I) {
            return this.lineColor = I, I;
          }, k.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, k.prototype.set_lineWidth = function(I) {
            return this.lineWidth = I, I;
          }, k.prototype.get_radius = function() {
            return this.radius;
          }, k.prototype.set_radius = function(I) {
            return this.radius = I, I;
          }, k.prototype.get_skyRelative = function() {
            return this.skyRelative;
          }, k.prototype.set_skyRelative = function(I) {
            return this.skyRelative = I, I;
          }, k;
        })(On);
        var Xa = [
          "fill",
          "fillColor",
          "lineColor",
          "lineWidth"
        ];
        o.concat(Xa);
        function re(T, k) {
          var I, Y;
          ua(T, k);
          try {
            for (var at = ki(Xa), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        (function(T) {
          ei(k, T);
          function k(I) {
            var Y = T.call(this, I) || this;
            return re(I, Y), Y;
          }
          return k.prototype.get_fill = function() {
            return this.fill;
          }, k.prototype.set_fill = function(I) {
            return this.fill = I, I;
          }, k.prototype.get_fillColor = function() {
            return this.fillColor;
          }, k.prototype.set_fillColor = function(I) {
            return this.fillColor = I, I;
          }, k.prototype.get_lineColor = function() {
            return this.lineColor;
          }, k.prototype.set_lineColor = function(I) {
            return this.lineColor = I, I;
          }, k.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, k.prototype.set_lineWidth = function(I) {
            return this.lineWidth = I, I;
          }, k;
        })(On);
        var Ya = [
          "lineColor",
          "lineWidth"
        ];
        o.concat(Ya);
        function Vn(T, k) {
          var I, Y;
          ua(T, k);
          try {
            for (var at = ki(Ya), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        (function(T) {
          ei(k, T);
          function k(I) {
            var Y = T.call(this, I) || this;
            return Vn(I, Y), Y;
          }
          return k.prototype.get_lineColor = function() {
            return this.lineColor;
          }, k.prototype.set_lineColor = function(I) {
            return this.lineColor = I, I;
          }, k.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, k.prototype.set_lineWidth = function(I) {
            return this.lineWidth = I, I;
          }, k;
        })(On);
        var ja = [
          "altColumn",
          "altType",
          "altUnit",
          "autoUpdate",
          "beginRange",
          "cartesianCustomScale",
          "cartesianScale",
          "colorMapColumn",
          "coordinatesType",
          "dataSourceUrl",
          "decay",
          "dynamicData",
          "endDateColumn",
          "endRange",
          "hyperlinkColumn",
          "hyperlinkFormat",
          "latColumn",
          "lngColumn",
          "markerColumn",
          "markerIndex",
          "markerScale",
          "nameColumn",
          "plotType",
          "pointScaleType",
          "raUnits",
          "scaleFactor",
          "showFarSide",
          "sizeColumn",
          "startDateColumn",
          "timeSeries",
          "xAxisColumn",
          "xAxisReverse",
          "yAxisColumn",
          "yAxisReverse",
          "zAxisColumn",
          "zAxisReverse"
        ];
        Ri.concat(ja);
        function Ma(T, k) {
          var I, Y;
          x(T, k);
          try {
            for (var at = ki(ja), nt = at.next(); !nt.done; nt = at.next()) {
              var Tt = nt.value;
              k["set_" + Tt](T["get_" + Tt]());
            }
          } catch (Rt) {
            I = { error: Rt };
          } finally {
            try {
              nt && !nt.done && (Y = at.return) && Y.call(at);
            } finally {
              if (I)
                throw I.error;
            }
          }
        }
        (function(T) {
          ei(k, T);
          function k(I) {
            var Y = (
              // Here we redundantly copy the generic Layer settings, but TypeScript
              // requires the super() call. Oh well.
              T.call(this, I) || this
            );
            return Ma(I, Y), Y;
          }
          return k.prototype.get_altColumn = function() {
            return this.altColumn;
          }, k.prototype.set_altColumn = function(I) {
            return this.altColumn = I, I;
          }, k.prototype.get_altType = function() {
            return this.altType;
          }, k.prototype.set_altType = function(I) {
            return this.altType = I, I;
          }, k.prototype.get_altUnit = function() {
            return this.altUnit;
          }, k.prototype.set_altUnit = function(I) {
            return this.altUnit = I, I;
          }, k.prototype.get_autoUpdate = function() {
            return this.autoUpdate;
          }, k.prototype.set_autoUpdate = function(I) {
            return this.autoUpdate = I, I;
          }, k.prototype.get_beginRange = function() {
            return this.beginRange;
          }, k.prototype.set_beginRange = function(I) {
            return this.beginRange = I, I;
          }, k.prototype.get_cartesianCustomScale = function() {
            return this.cartesianCustomScale;
          }, k.prototype.set_cartesianCustomScale = function(I) {
            return this.cartesianCustomScale = I, I;
          }, k.prototype.get_cartesianScale = function() {
            return this.cartesianScale;
          }, k.prototype.set_cartesianScale = function(I) {
            return this.cartesianScale = I, I;
          }, k.prototype.get_colorMapColumn = function() {
            return this.colorMapColumn;
          }, k.prototype.set_colorMapColumn = function(I) {
            return this.colorMapColumn = I, I;
          }, k.prototype.get_coordinatesType = function() {
            return this.coordinatesType;
          }, k.prototype.set_coordinatesType = function(I) {
            return this.coordinatesType = I, I;
          }, k.prototype.get_dataSourceUrl = function() {
            return this.dataSourceUrl;
          }, k.prototype.set_dataSourceUrl = function(I) {
            return this.dataSourceUrl = I, I;
          }, k.prototype.get_decay = function() {
            return this.decay;
          }, k.prototype.set_decay = function(I) {
            return this.decay = I, I;
          }, k.prototype.get_dynamicData = function() {
            return this.dynamicData;
          }, k.prototype.set_dynamicData = function(I) {
            return this.dynamicData = I, I;
          }, k.prototype.get_endDateColumn = function() {
            return this.endDateColumn;
          }, k.prototype.set_endDateColumn = function(I) {
            return this.endDateColumn = I, I;
          }, k.prototype.get_endRange = function() {
            return this.endRange;
          }, k.prototype.set_endRange = function(I) {
            return this.endRange = I, I;
          }, k.prototype.get_hyperlinkColumn = function() {
            return this.hyperlinkColumn;
          }, k.prototype.set_hyperlinkColumn = function(I) {
            return this.hyperlinkColumn = I, I;
          }, k.prototype.get_hyperlinkFormat = function() {
            return this.hyperlinkFormat;
          }, k.prototype.set_hyperlinkFormat = function(I) {
            return this.hyperlinkFormat = I, I;
          }, k.prototype.get_latColumn = function() {
            return this.latColumn;
          }, k.prototype.set_latColumn = function(I) {
            return this.latColumn = I, I;
          }, k.prototype.get_lngColumn = function() {
            return this.lngColumn;
          }, k.prototype.set_lngColumn = function(I) {
            return this.lngColumn = I, I;
          }, k.prototype.get_markerColumn = function() {
            return this.markerColumn;
          }, k.prototype.set_markerColumn = function(I) {
            return this.markerColumn = I, I;
          }, k.prototype.get_markerIndex = function() {
            return this.markerIndex;
          }, k.prototype.set_markerIndex = function(I) {
            return this.markerIndex = I, I;
          }, k.prototype.get_markerScale = function() {
            return this.markerScale;
          }, k.prototype.set_markerScale = function(I) {
            return this.markerScale = I, I;
          }, k.prototype.get_nameColumn = function() {
            return this.nameColumn;
          }, k.prototype.set_nameColumn = function(I) {
            return this.nameColumn = I, I;
          }, k.prototype.get_plotType = function() {
            return this.plotType;
          }, k.prototype.set_plotType = function(I) {
            return this.plotType = I, I;
          }, k.prototype.get_pointScaleType = function() {
            return this.pointScaleType;
          }, k.prototype.set_pointScaleType = function(I) {
            return this.pointScaleType = I, I;
          }, k.prototype.get_raUnits = function() {
            return this.raUnits;
          }, k.prototype.set_raUnits = function(I) {
            return this.raUnits = I, I;
          }, k.prototype.get_scaleFactor = function() {
            return this.scaleFactor;
          }, k.prototype.set_scaleFactor = function(I) {
            return this.scaleFactor = I, I;
          }, k.prototype.get_showFarSide = function() {
            return this.showFarSide;
          }, k.prototype.set_showFarSide = function(I) {
            return this.showFarSide = I, I;
          }, k.prototype.get_sizeColumn = function() {
            return this.sizeColumn;
          }, k.prototype.set_sizeColumn = function(I) {
            return this.sizeColumn = I, I;
          }, k.prototype.get_startDateColumn = function() {
            return this.startDateColumn;
          }, k.prototype.set_startDateColumn = function(I) {
            return this.startDateColumn = I, I;
          }, k.prototype.get_timeSeries = function() {
            return this.timeSeries;
          }, k.prototype.set_timeSeries = function(I) {
            return this.timeSeries = I, I;
          }, k.prototype.get_xAxisColumn = function() {
            return this.xAxisColumn;
          }, k.prototype.set_xAxisColumn = function(I) {
            return this.xAxisColumn = I, I;
          }, k.prototype.get_xAxisReverse = function() {
            return this.xAxisReverse;
          }, k.prototype.set_xAxisReverse = function(I) {
            return this.xAxisReverse = I, I;
          }, k.prototype.get_yAxisColumn = function() {
            return this.yAxisColumn;
          }, k.prototype.set_yAxisColumn = function(I) {
            return this.yAxisColumn = I, I;
          }, k.prototype.get_yAxisReverse = function() {
            return this.yAxisReverse;
          }, k.prototype.set_yAxisReverse = function(I) {
            return this.yAxisReverse = I, I;
          }, k.prototype.get_zAxisColumn = function() {
            return this.zAxisColumn;
          }, k.prototype.set_zAxisColumn = function(I) {
            return this.zAxisColumn = I, I;
          }, k.prototype.get_zAxisReverse = function() {
            return this.zAxisReverse;
          }, k.prototype.set_zAxisReverse = function(I) {
            return this.zAxisReverse = I, I;
          }, k;
        })(Vr);
        var Un = (
          /** @class */
          function() {
            function T(k, I, Y) {
              this.payload = k, this.resolve = I, this.reject = Y;
            }
            return T;
          }()
        ), Za = (
          /** @class */
          function() {
            function T(k) {
              k === void 0 && (k = {});
              var I = this;
              this.readyPromises = [], this.readyFired = !1, this.arrivePromises = [], this.arriveSeqnum = 0, this.collectionLoadedPromises = [], this.collectionRequests = /* @__PURE__ */ new Map(), this.tourReadyPromises = [], this.tourReadySeqnum = 0, this.tourEndedCallback = null;
              var Y = new pe.WWTControlBuilder(k.elId || "wwt");
              if (k.startInternalRenderLoop !== void 0 && Y.startRenderLoop(k.startInternalRenderLoop), k.freestandingAssetBaseurl !== void 0 && Y.freestandingMode(k.freestandingAssetBaseurl), k.startLatDeg !== void 0 && k.startLngDeg !== void 0) {
                var at = k.startZoomDeg || 360;
                Y.initialView(k.startLatDeg, k.startLngDeg, at);
              }
              k.startMode !== void 0 && Y.initialMode(k.startMode), this.si = Y.create(), this.ctl = pe.WWTControl.singleton, this.lm = pe.LayerManager, this.stc = pe.SpaceTimeController, this.applySetting(["showConstellationBoundries", !1]), this.applySetting(["showConstellationFigures", !1]), this.applySetting(["showConstellationSelection", !1]), this.applySetting(["showCrosshairs", !1]), this.si.add_ready(function(nt) {
                var Tt, Rt;
                try {
                  for (var Ae = ki(I.readyPromises), Wt = Ae.next(); !Wt.done; Wt = Ae.next()) {
                    var Fe = Wt.value;
                    Fe.resolve();
                  }
                } catch (Se) {
                  Tt = { error: Se };
                } finally {
                  try {
                    Wt && !Wt.done && (Rt = Ae.return) && Rt.call(Ae);
                  } finally {
                    if (Tt)
                      throw Tt.error;
                  }
                }
                I.readyFired = !0, I.readyPromises = [];
              }), this.si.add_arrived(function(nt, Tt) {
                var Rt, Ae;
                try {
                  for (var Wt = ki(I.arrivePromises), Fe = Wt.next(); !Fe.done; Fe = Wt.next()) {
                    var Se = Fe.value;
                    Se.payload < I.arriveSeqnum ? Se.reject("superseded") : Se.resolve();
                  }
                } catch (vr) {
                  Rt = { error: vr };
                } finally {
                  try {
                    Fe && !Fe.done && (Ae = Wt.return) && Ae.call(Wt);
                  } finally {
                    if (Rt)
                      throw Rt.error;
                  }
                }
                I.arrivePromises = [];
              }), this.si.add_tourReady(function(nt) {
                var Tt, Rt;
                try {
                  for (var Ae = ki(I.tourReadyPromises), Wt = Ae.next(); !Wt.done; Wt = Ae.next()) {
                    var Fe = Wt.value;
                    Fe.payload < I.tourReadySeqnum ? Fe.reject("superseded") : Fe.resolve();
                  }
                } catch (Se) {
                  Tt = { error: Se };
                } finally {
                  try {
                    Wt && !Wt.done && (Rt = Ae.return) && Rt.call(Ae);
                  } finally {
                    if (Tt)
                      throw Tt.error;
                  }
                }
                I.tourReadyPromises = [];
              }), pe.TourPlayer.add_tourEnded(function(nt) {
                var Tt = I.getActiveTourPlayer();
                Tt !== null && I.tourEndedCallback !== null && I.tourEndedCallback(Tt);
              });
            }
            return T.prototype.waitForReady = function() {
              return $e(this, void 0, void 0, function() {
                var k = this;
                return Ai(this, function(I) {
                  return [2, new Promise(function(Y, at) {
                    k.readyFired ? Y() : k.readyPromises.push(new Un(null, Y, at));
                  })];
                });
              });
            }, T.prototype.makeArrivePromise = function(k) {
              var I, Y, at = this;
              this.arriveSeqnum += 1;
              var nt = this.arriveSeqnum;
              try {
                for (var Tt = ki(this.arrivePromises), Rt = Tt.next(); !Rt.done; Rt = Tt.next()) {
                  var Ae = Rt.value;
                  Ae.reject("superseded");
                }
              } catch (Wt) {
                I = { error: Wt };
              } finally {
                try {
                  Rt && !Rt.done && (Y = Tt.return) && Y.call(Tt);
                } finally {
                  if (I)
                    throw I.error;
                }
              }
              return this.arrivePromises = [], new Promise(function(Wt, Fe) {
                at.arriveSeqnum > nt ? Fe("superseded") : k ? Wt() : at.arrivePromises.push(new Un(nt, Wt, Fe));
              });
            }, T.prototype.gotoRADecZoom = function(k, I, Y, at, nt) {
              return $e(this, void 0, void 0, function() {
                return Ai(this, function(Tt) {
                  return this.ctl.gotoRADecZoom(k * la, I * Fn, Y, at, nt), [2, this.makeArrivePromise(at)];
                });
              });
            }, T.prototype.timeToRADecZoom = function(k, I, Y, at) {
              var nt = this.ctl.timeToRADecZoom(k * la, I * Fn, Y, at);
              return nt;
            }, T.prototype.gotoTarget = function(k) {
              return $e(this, void 0, void 0, function() {
                return Ai(this, function(I) {
                  return this.ctl.gotoTarget(k.place, k.noZoom, k.instant, k.trackObject), [2, this.makeArrivePromise(k.instant)];
                });
              });
            }, T.prototype.addImagesetToRepository = function(k) {
              return pe.WWTControl.addImageSetToRepository(k);
            }, T.prototype.loadImageCollection = function(k, I) {
              return $e(this, void 0, void 0, function() {
                var Y, at, nt = this;
                return Ai(this, function(Tt) {
                  return Y = this.collectionRequests.get(k), Y != null ? [2, Promise.resolve(Y)] : (Y === void 0 && (this.collectionRequests.set(k, null), at = { f: null }, I === void 0 && (I = !1), at.f = pe.Wtml.getWtmlFile(k, function() {
                    var Rt = at.f;
                    nt.collectionRequests.set(k, Rt), nt.collectionLoadedPromises = nt.collectionLoadedPromises.filter(function(Ae) {
                      return Ae.payload == k ? (Ae.resolve(Rt), !1) : !0;
                    });
                  }, I)), [2, new Promise(function(Rt, Ae) {
                    var Wt = nt.collectionRequests.get(k);
                    Wt != null ? Rt(Wt) : nt.collectionLoadedPromises.push(new Un(k, Rt, Ae));
                  })]);
                });
              });
            }, T.prototype.addImageSetLayer = function(k) {
              return $e(this, void 0, void 0, function() {
                var I = this;
                return Ai(this, function(Y) {
                  return [2, new Promise(function(at, nt) {
                    I.si.addImageSetLayer(k.url, k.mode, k.name, k.goto, function(Tt) {
                      at(Tt);
                    });
                  })];
                });
              });
            }, T.prototype.setImageSetLayerOrder = function(k) {
              this.si.setImageSetLayerOrder(k.id, k.order);
            }, T.prototype.stretchFitsLayer = function(k) {
              var I = this.lm.get_layerList()[k.id];
              if (I && I instanceof pe.ImageSetLayer) {
                I.setImageScalePhysical(k.stretch, k.vmin, k.vmax);
                var Y = I.getFitsImage();
                Y !== null && (I.get_imageSet().get_fitsProperties().transparentBlack = !1);
              }
            }, T.prototype.setFitsLayerColormap = function(k) {
              var I = this.lm.get_layerList()[k.id];
              I && I instanceof pe.ImageSetLayer && I.set_colorMapperName(k.name);
            }, T.prototype.applyFitsLayerSettings = function(k) {
              var I, Y, at = this.lm.get_layerList()[k.id];
              if (at && at instanceof pe.ImageSetLayer)
                try {
                  for (var nt = ki(k.settings), Tt = nt.next(); !Tt.done; Tt = nt.next()) {
                    var Rt = Tt.value;
                    Jr(at, Rt);
                  }
                } catch (Ae) {
                  I = { error: Ae };
                } finally {
                  try {
                    Tt && !Tt.done && (Y = nt.return) && Y.call(nt);
                  } finally {
                    if (I)
                      throw I.error;
                  }
                }
            }, T.prototype.updateTableLayer = function(k) {
              var I = this.lm.get_layerList()[k.id];
              I && I instanceof pe.SpreadSheetLayer && I.updateData(k.dataCsv, !0, !0, !0);
            }, T.prototype.applyTableLayerSettings = function(k) {
              var I, Y, at = this.lm.get_layerList()[k.id];
              if (at && at instanceof pe.SpreadSheetLayer)
                try {
                  for (var nt = ki(k.settings), Tt = nt.next(); !Tt.done; Tt = nt.next()) {
                    var Rt = Tt.value;
                    zn(at, Rt);
                  }
                } catch (Ae) {
                  I = { error: Ae };
                } finally {
                  try {
                    Tt && !Tt.done && (Y = nt.return) && Y.call(nt);
                  } finally {
                    if (I)
                      throw I.error;
                  }
                }
            }, T.prototype.addCatalogHipsByName = function(k) {
              return $e(this, void 0, void 0, function() {
                var I = this;
                return Ai(this, function(Y) {
                  return [2, new Promise(function(at, nt) {
                    var Tt = I.ctl.getImagesetByName(k.name);
                    Tt === null ? nt() : I.ctl.renderContext.addCatalogHips(Tt, function() {
                      at(Tt);
                    });
                  })];
                });
              });
            }, T.prototype.getCatalogHipsDataInView = function(k) {
              return $e(this, void 0, void 0, function() {
                var I = this;
                return Ai(this, function(Y) {
                  return [2, new Promise(function(at, nt) {
                    I.ctl.renderContext.getCatalogHipsDataInView(k.imageset, k.limit, function(Tt) {
                      at(Tt);
                    });
                  })];
                });
              });
            }, T.prototype.applySetting = function(k) {
              var I = "set_" + k[0], Y = k[1];
              this.si.settings[I](Y);
            }, T.prototype.setBackgroundImageByName = function(k) {
              this.ctl.setBackgroundImageByName(k);
            }, T.prototype.setForegroundImageByName = function(k) {
              this.ctl.setForegroundImageByName(k);
            }, T.prototype.setForegroundOpacity = function(k) {
              this.si.setForegroundOpacity(k);
            }, T.prototype.setupForImageset = function(k) {
              var I;
              k.background ? I = k.background : I = this.ctl.getDefaultImageset(k.foreground.get_dataSetType(), k.foreground.get_bandPass());
              var Y;
              k.foreground.get_levels() > 0 ? Y = k.foreground.get_baseTileDegrees() : Y = k.foreground.get_baseTileDegrees() * k.foreground.get_offsetY() * 2;
              var at = new pe.Place();
              at.set_type(k.foreground.get_dataSetType()), at.set_backgroundImageset(I), at.set_studyImageset(k.foreground);
              var nt = !1;
              switch (k.foreground.get_dataSetType()) {
                case le.sky:
                  Y == 180 ? nt = !0 : (at.set_RA(k.foreground.get_centerX() * Mn), at.set_dec(k.foreground.get_centerY()), at.set_zoomLevel(Y * 6));
                  break;
                case le.earth:
                case le.planet:
                  at.set_zoomLevel(120), Y != 180 && (at.set_lng(k.foreground.get_centerX()), at.set_lat(k.foreground.get_centerY()));
                  break;
                default:
                  at.set_zoomLevel(360);
                  break;
              }
              this.ctl.renderContext.set_backgroundImageset(I), this.ctl.gotoTarget(
                at,
                nt,
                !0,
                // instant
                !0
                // trackObject
              );
            }, T.prototype.getActiveTourPlayer = function() {
              return this.ctl.uiController === null ? null : this.ctl.uiController instanceof pe.TourPlayer ? this.ctl.uiController : null;
            }, T.prototype.getIsTourPlaying = function(k) {
              return pe.TourPlayer.get_playing();
            }, T.prototype.loadTour = function(k) {
              return $e(this, void 0, void 0, function() {
                var I, Y, at, nt, Tt, Rt, Ae = this;
                return Ai(this, function(Wt) {
                  this.ctl.loadTour(k), this.tourReadySeqnum += 1, I = this.tourReadySeqnum;
                  try {
                    for (Y = ki(this.tourReadyPromises), at = Y.next(); !at.done; at = Y.next())
                      nt = at.value, nt.reject("superseded");
                  } catch (Fe) {
                    Tt = { error: Fe };
                  } finally {
                    try {
                      at && !at.done && (Rt = Y.return) && Rt.call(Y);
                    } finally {
                      if (Tt)
                        throw Tt.error;
                    }
                  }
                  return this.tourReadyPromises = [], [2, new Promise(function(Fe, Se) {
                    Ae.tourReadySeqnum > I ? Se("superseded") : Ae.tourReadyPromises.push(new Un(I, Fe, Se));
                  })];
                });
              });
            }, T.prototype.loadAndPlayTour = function(k) {
              return $e(this, void 0, void 0, function() {
                var I, Y, at, nt, Tt, Rt, Ae = this;
                return Ai(this, function(Wt) {
                  this.ctl.playTour(k), this.tourReadySeqnum += 1, I = this.tourReadySeqnum;
                  try {
                    for (Y = ki(this.tourReadyPromises), at = Y.next(); !at.done; at = Y.next())
                      nt = at.value, nt.reject("superseded");
                  } catch (Fe) {
                    Tt = { error: Fe };
                  } finally {
                    try {
                      at && !at.done && (Rt = Y.return) && Rt.call(Y);
                    } finally {
                      if (Tt)
                        throw Tt.error;
                    }
                  }
                  return this.tourReadyPromises = [], [2, new Promise(function(Fe, Se) {
                    Ae.tourReadySeqnum > I ? Se("superseded") : Ae.tourReadyPromises.push(new Un(I, Fe, Se));
                  })];
                });
              });
            }, T.prototype.getEffectiveTourTimecode = function() {
              var k = this.getActiveTourPlayer();
              if (k === null)
                return 0;
              var I = k.get_tour();
              if (I === null)
                return 0;
              var Y = I.get_currentTourstopIndex();
              if (Y < 0)
                return 0;
              var at = I.elapsedTimeTillTourstop(Y), nt = I.get_tourStops()[Y], Tt = nt.get_tweenPosition() * nt.get_duration() * 1e-3, Rt = at + Tt;
              if (Rt < 0)
                return 0;
              var Ae = I.get_runTime() * 1e-3;
              return Rt > Ae ? Ae : Rt;
            }, T.prototype.seekToTourTimecode = function(k) {
              var I = this.getActiveTourPlayer();
              if (I !== null) {
                var Y = I.get_tour();
                if (Y !== null) {
                  for (var at = Y.get_tourStops(), nt = at.length - 1, Tt = 0; Tt < at.length; Tt++) {
                    var Rt = Y.elapsedTimeTillTourstop(Tt);
                    if (Rt >= k) {
                      nt = Tt - 1;
                      break;
                    }
                  }
                  nt < 0 && (nt = 0), I.playFromTourstop(at[nt]);
                }
              }
            }, T.prototype.captureFrame = function(k) {
              var I = this;
              return new Promise(function(Y, at) {
                I.ctl.captureFrame(function(nt) {
                  return Y(nt);
                }, k.width, k.height, k.format);
              });
            }, T.prototype.captureVideo = function(k) {
              var I = this.ctl, Y = new ReadableStream({
                start: function(at) {
                  function nt() {
                    var Tt = 0;
                    I.captureVideo(function(Rt) {
                      Tt++, at.enqueue(Rt), Tt >= k.totalFrames && at.close();
                    }, k.width, k.height, k.framesPerSecond, k.totalFrames, k.format);
                  }
                  return nt();
                }
              });
              return Y;
            }, T;
          }()
        ), bs = (
          /** @class */
          function() {
            function T() {
              this.inst = null, this.onLinkedCallbacks = [];
            }
            return T.prototype.link = function(k) {
              var I, Y;
              if (this.inst !== null)
                throw new Error("must unlink WWT Pinia global state before relinking");
              this.inst = k;
              try {
                for (var at = ki(this.onLinkedCallbacks), nt = at.next(); !nt.done; nt = at.next()) {
                  var Tt = nt.value;
                  Tt();
                }
              } catch (Rt) {
                I = { error: Rt };
              } finally {
                try {
                  nt && !nt.done && (Y = at.return) && Y.call(at);
                } finally {
                  if (I)
                    throw I.error;
                }
              }
              this.onLinkedCallbacks = [];
            }, T.prototype.unlink = function() {
              this.inst = null;
            }, T;
          }()
        ), hi = (
          /** @class */
          function() {
            function T(k, I, Y, at, nt, Tt) {
              Tt === void 0 && (Tt = null), this.url = k, this.name = I, this.type = Y, this.description = at, this.extension = nt, this.id = Tt;
            }
            return T.fromImageset = function(k) {
              var I, Y;
              return new T(k.get_url(), k.get_name(), k.get_dataSetType(), k.get_creditsText(), k.get_extension(), (Y = (I = k.get_hipsProperties()) === null || I === void 0 ? void 0 : I.get_catalogSpreadSheetLayer().id.toString()) !== null && Y !== void 0 ? Y : null);
            }, T;
          }()
        ), ys = (
          /** @class */
          function() {
            function T(k, I, Y) {
              this.id = k, this.referenceFrame = I, this.name = Y ?? k;
            }
            return T.prototype.setName = function(k) {
              this.name = k;
            }, T;
          }()
        ), xa = (
          /** @class */
          function() {
            function T(k) {
              this.guidText = k.id.toString(), this.settings = new mr(k);
              var I = k.get_imageSet().get_fitsProperties();
              this.scaleType = I.scaleType, this.vmin = I.lowerCut, this.vmax = I.upperCut, this.colormapName = I.colorMapName;
            }
            return T.prototype.getGuid = function() {
              return this.guidText;
            }, T;
          }()
        );
        function Ln(T) {
          if (T.inst === null)
            throw new Error("cannot get activeLayersList without linking to WWTInstance");
          var k = [];
          function I(at) {
            var nt, Tt, Rt, Ae;
            try {
              for (var Wt = ki(at.layers), Fe = Wt.next(); !Fe.done; Fe = Wt.next()) {
                var Se = Fe.value;
                k.push(Se.id.toString());
              }
            } catch (Ur) {
              nt = { error: Ur };
            } finally {
              try {
                Fe && !Fe.done && (Tt = Wt.return) && Tt.call(Wt);
              } finally {
                if (nt)
                  throw nt.error;
              }
            }
            try {
              for (var vr = ki(Object.entries(at.childMaps)), Lt = vr.next(); !Lt.done; Lt = vr.next()) {
                var Gr = Hr(Lt.value, 2), ye = Gr[0], ca = Gr[1];
                I(ca);
              }
            } catch (Ur) {
              Rt = { error: Ur };
            } finally {
              try {
                Lt && !Lt.done && (Ae = vr.return) && Ae.call(vr);
              } finally {
                if (Rt)
                  throw Rt.error;
              }
            }
          }
          var Y = T.inst.lm.get_allMaps()[T.inst.ctl.getCurrentReferenceFrame()];
          return Y && I(Y), k;
        }
        function tr() {
          return pe.WWTControl.getImageSets().map(hi.fromImageset);
        }
        var Hn = ae("wwt-engine", {
          // NOTE: We were originally alphabetizing these all, but now I think it will be
          // better to group topically related fields.
          state: function() {
            return {
              activeLayers: [],
              availableImagesets: [],
              backgroundImageset: null,
              clockDiscontinuities: 0,
              clockRate: 1,
              currentTime: /* @__PURE__ */ new Date(),
              decRad: 0,
              foregroundImageset: null,
              foregroundOpacity: 100,
              imagesetLayers: {},
              isTourPlayerActive: !1,
              isTourPlaying: !1,
              raRad: 0,
              renderType: le.sky,
              rollRad: 0,
              spreadSheetLayers: {},
              timeAtStartup: Date.now(),
              tourCompletions: 0,
              tourRunTime: null,
              tourStopStartTimes: [],
              tourTimecode: 0,
              showWebGl2Warning: !1,
              zoomDeg: 0
            };
          },
          getters: {
            lookupImageset: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot lookupImageset without linking to WWTInstance");
                return k.$wwt.inst.ctl.getImagesetByName(I);
              };
            },
            findRADecForScreenPoint: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot findRADecForScreenPoint without linking to WWTInstance");
                var Y = k.$wwt.inst.ctl.getCoordinatesForScreenPoint(I.x, I.y);
                return { ra: (15 * Y.x + 720) % 360, dec: Y.y };
              };
            },
            findScreenPointForRADec: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot findScreenPointForRADec without linking to WWTInstance");
                return k.$wwt.inst.ctl.getScreenPointForCoordinates(I.ra / 15, I.dec);
              };
            },
            imagesetStateForLayer: function(T) {
              return function(k) {
                return T.imagesetLayers[k] || null;
              };
            },
            activeImagesetLayerStates: function() {
              var T, k, I = [];
              try {
                for (var Y = ki(this.activeLayers), at = Y.next(); !at.done; at = Y.next()) {
                  var nt = at.value, Tt = this.imagesetLayers[nt];
                  Tt && I.push(Tt);
                }
              } catch (Rt) {
                T = { error: Rt };
              } finally {
                try {
                  at && !at.done && (k = Y.return) && k.call(Y);
                } finally {
                  if (T)
                    throw T.error;
                }
              }
              return I;
            },
            catalogLayerKey: function(T) {
              return function(k) {
                var I;
                return (I = k.id) !== null && I !== void 0 ? I : "";
              };
            },
            imagesetForLayer: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get imagesetForLayer without linking to WWTInstance");
                var Y = k.$wwt.inst.lm.get_layerList()[I];
                return Y !== null && Y instanceof pe.ImageSetLayer ? Y.get_imageSet() : null;
              };
            },
            imagesetLayerById: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get imagesetLayerById without linking to WWTInstance");
                var Y = k.layerById(I);
                return Y !== null && Y instanceof pe.ImageSetLayer ? Y : null;
              };
            },
            layerForHipsCatalog: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get layerForHipsCatalog without linking to WWTInstance");
                var Y = pe.Guid.createFrom(I).toString();
                return k.spreadSheetLayerById(Y);
              };
            },
            layerById: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get layerById without linking to WWTInstance");
                return k.$wwt.inst.lm.get_layerList()[I];
              };
            },
            spreadsheetStateForHipsCatalog: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get spreadsheetStateForHipsCatalog without linking to WWTInstance");
                var Y = pe.Guid.createFrom(I).toString();
                return T.spreadSheetLayers[Y] || null;
              };
            },
            spreadSheetLayerById: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get spreadsheetLayerById without linking to WWTInstance");
                var Y = k.layerById(I);
                return Y !== null && Y instanceof pe.SpreadSheetLayer ? Y : null;
              };
            },
            spreadsheetStateById: function(T) {
              return function(k) {
                return T.spreadSheetLayers[k] || null;
              };
            },
            spreadSheetLayer: function(T) {
              var k = this;
              return function(I) {
                if (k.$wwt.inst === null)
                  throw new Error("cannot get spreadSheetLayer without linking to WWTInstance");
                var Y = k.catalogLayerKey(I);
                return k.spreadSheetLayerById(Y);
              };
            },
            spreadsheetState: function(T) {
              var k = this;
              return function(I) {
                var Y = k.catalogLayerKey(I);
                return T.spreadSheetLayers[Y] || null;
              };
            }
          },
          actions: {
            internalLinkToInstance: function(T) {
              this.$wwt.link(T);
            },
            internalUnlinkFromInstance: function() {
              this.$wwt.unlink();
            },
            internalUpdate: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot internalUpdate without linking to WWTInstance");
              var T = this.$wwt.inst, k = T.si.getRA() * Rr;
              this.raRad != k && (this.raRad = k);
              var I = T.si.getDec() * Ca;
              this.decRad != I && (this.decRad = I);
              var Y = T.ctl.renderContext.viewCamera.zoom;
              this.zoomDeg != Y && (this.zoomDeg = Y);
              var at = T.ctl.renderContext.viewCamera.rotation;
              this.rollRad != at && (this.rollRad = at);
              var nt = T.ctl.renderContext.get_backgroundImageset() || null;
              this.backgroundImageset != nt && (this.backgroundImageset = nt);
              var Tt = T.stc.get_now();
              this.currentTime != Tt && (this.currentTime = Tt);
              var Rt = T.ctl.renderContext.get_foregroundImageset() || null;
              this.foregroundImageset != Rt && (this.foregroundImageset = Rt), this.foregroundOpacity != T.ctl.renderContext.viewCamera.opacity && (this.foregroundOpacity = T.ctl.renderContext.viewCamera.opacity), this.renderType != T.ctl.renderType && (this.renderType = T.ctl.renderType);
              var Ae = T.getActiveTourPlayer();
              this.tourTimecode = T.getEffectiveTourTimecode(), Ae !== null ? (this.isTourPlayerActive = !0, this.isTourPlaying = T.getIsTourPlaying(Ae)) : (this.isTourPlayerActive = !1, this.isTourPlaying = !1);
              var Wt = !T.si.isUsingWebGl2() && Date.now() - this.timeAtStartup < 15e3;
              this.showWebGl2Warning != Wt && (this.showWebGl2Warning = Wt);
            },
            internalIncrementTourCompletions: function() {
              this.tourCompletions += 1;
            },
            applySetting: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot applySetting without linking to WWTInstance");
              this.$wwt.inst.applySetting(T);
            },
            setBackgroundImageByName: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setBackgroundImageByName without linking to WWTInstance");
              this.$wwt.inst.setBackgroundImageByName(T);
            },
            setForegroundImageByName: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setForegroundImageByName without linking to WWTInstance");
              this.$wwt.inst.setForegroundImageByName(T);
            },
            setForegroundOpacity: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setForegroundOpacity without linking to WWTInstance");
              this.$wwt.inst.setForegroundOpacity(T), this.foregroundOpacity = T;
            },
            setupForImageset: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setupForImageset without linking to WWTInstance");
              this.$wwt.inst.setupForImageset(T);
            },
            zoom: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot zoom without linking to WWTInstance");
              this.$wwt.inst.ctl.zoom(T);
            },
            move: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot move without linking to WWTInstance");
              this.$wwt.inst.ctl.move(T.x, T.y);
            },
            tilt: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot tilt without linking to WWTInstance");
              this.$wwt.inst.ctl._tilt(T.x, T.y);
            },
            setTime: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTime without linking to WWTInstance");
              this.$wwt.inst.stc.set_now(T), this.clockDiscontinuities += 1;
            },
            setClockRate: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setClockRate without linking to WWTInstance");
              this.$wwt.inst.stc.get_timeRate() != T && (this.$wwt.inst.stc.set_timeRate(T), this.clockRate = T, this.clockDiscontinuities += 1);
            },
            setClockSync: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setClockSync without linking to WWTInstance");
              this.$wwt.inst.stc.get_syncToClock() != T && (this.$wwt.inst.stc.set_syncToClock(T), T ? this.clockRate = this.$wwt.inst.stc.get_timeRate() : this.clockRate = 0, this.clockDiscontinuities += 1);
            },
            startTour: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot start tour without linking to WWTInstance");
              var T = this.$wwt.inst.getActiveTourPlayer();
              if (T === null)
                throw new Error("no tour to start");
              T.play();
            },
            toggleTourPlayPauseState: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot play/pause tour without linking to WWTInstance");
              var T = this.$wwt.inst.getActiveTourPlayer();
              if (T === null)
                throw new Error("no tour to play/pause");
              T.pauseTour();
            },
            setTourPlayerLeaveSettingsWhenStopped: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTourPlayerLeaveSettingsWhenStopped without linking to WWTInstance");
              var k = this.$wwt.inst.getActiveTourPlayer();
              if (k === null)
                throw new Error("no tour player to control");
              k.set_leaveSettingsWhenStopped(T);
            },
            seekToTourTimecode: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot seekToTourTimecode without linking to WWTInstance");
              this.$wwt.inst.seekToTourTimecode(T);
            },
            viewAsTourXml: function(T) {
              return $e(this, void 0, void 0, function() {
                var k, I, Y, at, nt;
                return Ai(this, function(Tt) {
                  return pe.WWTControl.singleton.createTour(T || ""), k = pe.WWTControl.singleton.tourEdit, k.addSlide(!1), I = k.get_tour(), I === null ? [2, Promise.resolve(null)] : (Y = I.saveToBlob(), at = new FileReader(), at.readAsText(Y), nt = "", [2, new Promise(function(Rt, Ae) {
                    at.onloadend = function() {
                      nt += at.result, Rt(nt);
                    };
                  })]);
                });
              });
            },
            waitForReady: function() {
              return $e(this, void 0, void 0, function() {
                var T = this;
                return Ai(this, function(k) {
                  return this.$wwt.inst !== null ? [2, this.$wwt.inst.waitForReady()] : [2, new Promise(function(I, Y) {
                    var at = function() {
                      T.$wwt.inst.waitForReady().then(I);
                    };
                    T.$wwt.inst !== null ? at() : T.$wwt.onLinkedCallbacks.push(at);
                  })];
                });
              });
            },
            gotoRADecZoom: function(T) {
              var k = T.raRad, I = T.decRad, Y = T.zoomDeg, at = T.instant, nt = T.rollRad;
              return $e(this, void 0, void 0, function() {
                return Ai(this, function(Tt) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot gotoRADecZoom without linking to WWTInstance");
                  return [2, this.$wwt.inst.gotoRADecZoom(k, I, Y, at, nt)];
                });
              });
            },
            timeToRADecZoom: function(T) {
              var k = T.raRad, I = T.decRad, Y = T.zoomDeg, at = T.rollRad;
              if (this.$wwt.inst === null)
                throw new Error("cannot get timeToRADecZoom without linking to WWTInstance");
              return this.$wwt.inst.timeToRADecZoom(k, I, Y, at);
            },
            gotoTarget: function(T) {
              return $e(this, void 0, void 0, function() {
                return Ai(this, function(k) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot gotoTarget without linking to WWTInstance");
                  return [2, this.$wwt.inst.gotoTarget(T)];
                });
              });
            },
            setTrackedObject: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTrackedObject without linking to WWTInstance");
              this.$wwt.inst.ctl.renderContext.set_solarSystemTrack(T);
            },
            loadTour: function(T) {
              var k = T.url, I = T.play;
              return $e(this, void 0, void 0, function() {
                var Y, at, nt, Tt, Rt, Ae;
                return Ai(this, function(Wt) {
                  switch (Wt.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot loadTour without linking to WWTInstance");
                      return I ? [4, this.$wwt.inst.loadAndPlayTour(k)] : [3, 2];
                    case 1:
                      return Wt.sent(), [3, 4];
                    case 2:
                      return [4, this.$wwt.inst.loadTour(k)];
                    case 3:
                      Wt.sent(), Wt.label = 4;
                    case 4:
                      if (Y = null, at = [], nt = this.$wwt.inst.getActiveTourPlayer(), nt !== null && (Tt = nt.get_tour(), Tt !== null))
                        for (Y = Tt.get_runTime() * 1e-3, Rt = Tt.get_tourStops().length, Ae = 0; Ae < Rt; Ae++)
                          at.push(Tt.elapsedTimeTillTourstop(Ae));
                      return [2, { tourRunTime: Y, tourStopStartTimes: at }];
                  }
                });
              });
            },
            loadImageCollection: function(T) {
              var k = T.url, I = T.loadChildFolders;
              return $e(this, void 0, void 0, function() {
                var Y;
                return Ai(this, function(at) {
                  switch (at.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot loadImageCollection without linking to WWTInstance");
                      return [4, this.$wwt.inst.loadImageCollection(k, I)];
                    case 1:
                      return Y = at.sent(), this.availableImagesets = tr(), [2, Y];
                  }
                });
              });
            },
            addImagesetToRepository: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot addImagesetToRepository without linking to WWTInstance");
              return this.$wwt.inst.addImagesetToRepository(T);
            },
            // General layers
            deleteLayer: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot deleteLayer without linking to WWTInstance");
              var k = "";
              if (typeof T == "string") {
                k = T;
                var I = pe.Guid.fromString(T);
                this.$wwt.inst.lm.deleteLayerByID(I, !0, !0);
              } else
                k = T.toString(), this.$wwt.inst.lm.deleteLayerByID(T, !0, !0);
              delete this.imagesetLayers[k], delete this.spreadSheetLayers[k], this.activeLayers = Ln(this.$wwt);
            },
            // Imageset layers, including FITS layers
            addImageSetLayer: function(T) {
              return $e(this, void 0, void 0, function() {
                var k, I;
                return Ai(this, function(Y) {
                  switch (Y.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot addImageSetLayer without linking to WWTInstance");
                      return [4, this.$wwt.inst.addImageSetLayer(T)];
                    case 1:
                      return k = Y.sent(), I = k.id.toString(), this.imagesetLayers[I] = new xa(k), this.activeLayers = Ln(this.$wwt), [2, k];
                  }
                });
              });
            },
            // deprecated, but maintained for compatibility:
            loadFitsLayer: function(T) {
              return $e(this, void 0, void 0, function() {
                var k;
                return Ai(this, function(I) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot loadFitsLayer without linking to WWTInstance");
                  return k = {
                    url: T.url,
                    mode: "fits",
                    name: T.name,
                    goto: T.gotoTarget
                  }, [2, this.$wwt.inst.addImageSetLayer(k)];
                });
              });
            },
            setImageSetLayerOrder: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setImageSetLayerOrder without linking to WWTInstance");
              this.$wwt.inst.setImageSetLayerOrder(T), this.activeLayers = Ln(this.$wwt);
            },
            stretchFitsLayer: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot stretchFitsLayer without linking to WWTInstance");
              this.$wwt.inst.stretchFitsLayer(T);
              var k = this.imagesetLayers[T.id];
              k && (k.scaleType = T.stretch, k.vmin = T.vmin, k.vmax = T.vmax);
            },
            setFitsLayerColormap: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setFitsLayerColormap without linking to WWTInstance");
              this.$wwt.inst.setFitsLayerColormap(T);
              var k = this.imagesetLayers[T.id];
              k && (k.colormapName = T.name);
            },
            applyFitsLayerSettings: function(T) {
              var k, I;
              if (this.$wwt.inst === null)
                throw new Error("cannot applyFitsLayerSettings without linking to WWTInstance");
              this.$wwt.inst.applyFitsLayerSettings(T);
              var Y = this.imagesetLayers[T.id];
              if (Y)
                try {
                  for (var at = ki(T.settings), nt = at.next(); !nt.done; nt = at.next()) {
                    var Tt = nt.value;
                    Jr(Y.settings, Tt);
                  }
                } catch (Rt) {
                  k = { error: Rt };
                } finally {
                  try {
                    nt && !nt.done && (I = at.return) && I.call(at);
                  } finally {
                    if (k)
                      throw k.error;
                  }
                }
            },
            // Spreadsheet layers
            createTableLayer: function(T) {
              return $e(this, void 0, void 0, function() {
                var k, I, Y, at;
                return Ai(this, function(nt) {
                  switch (nt.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot createTableLayer without linking to WWTInstance");
                      return k = this.$wwt.inst.lm.createSpreadsheetLayer(T.referenceFrame, T.name, T.dataCsv), k.set_lngColumn(-1), k.set_latColumn(-1), k.set_altColumn(-1), k.set_sizeColumn(-1), k.set_colorMapColumn(-1), k.set_startDateColumn(-1), k.set_endDateColumn(-1), k.set_xAxisColumn(-1), k.set_yAxisColumn(-1), k.set_zAxisColumn(-1), k.set_altUnit(Or.meters), k.set_referenceFrame(T.referenceFrame), T.referenceFrame == "Sky" && k.set_astronomical(!0), I = Promise.resolve(k), [4, I];
                    case 1:
                      return Y = nt.sent(), at = Y.id.toString(), this.spreadSheetLayers[at] = new Ga(Y), this.activeLayers = Ln(this.$wwt), [2, Y];
                  }
                });
              });
            },
            applyTableLayerSettings: function(T) {
              var k, I;
              if (this.$wwt.inst === null)
                throw new Error("cannot applyTableLayerSettings without linking to WWTInstance");
              this.$wwt.inst.applyTableLayerSettings(T);
              var Y = this.spreadSheetLayers[T.id];
              if (Y !== void 0)
                try {
                  for (var at = ki(T.settings), nt = at.next(); !nt.done; nt = at.next()) {
                    var Tt = nt.value;
                    zn(Y, Tt);
                  }
                } catch (Rt) {
                  k = { error: Rt };
                } finally {
                  try {
                    nt && !nt.done && (I = at.return) && I.call(at);
                  } finally {
                    if (k)
                      throw k.error;
                  }
                }
            },
            updateTableLayer: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot updateTableLayer without linking to WWTInstance");
              this.$wwt.inst.updateTableLayer(T);
            },
            // Progressive HiPS catalogs.
            //
            // These have some characteristics of imagesets, and some characteristics
            // of spreadsheet layers.
            addCatalogHipsByName: function(T) {
              return $e(this, void 0, void 0, function() {
                var k, I, Y, at, nt;
                return Ai(this, function(Tt) {
                  switch (Tt.label) {
                    case 0:
                      if (this.$wwt.inst == null)
                        throw new Error("cannot addCatalogHipsByName without linking to WWTInstance");
                      return [4, this.$wwt.inst.addCatalogHipsByName(T)];
                    case 1:
                      return k = Tt.sent(), I = k.get_hipsProperties(), I !== null && (Y = I.get_catalogSpreadSheetLayer(), at = Y.id.toString(), this.spreadSheetLayers[at] = new Ga(Y), nt = tr().find(function(Rt) {
                        return Rt.name === T.name;
                      }), nt !== void 0 && (nt.id = at)), this.activeLayers = Ln(this.$wwt), [2, k];
                  }
                });
              });
            },
            getCatalogHipsDataInView: function(T) {
              if (this.$wwt.inst == null)
                throw new Error("cannot getCatalogHipsDataInView without linking to WWTInstance");
              return this.$wwt.inst.getCatalogHipsDataInView(T);
            },
            removeCatalogHipsByName: function(T) {
              if (this.$wwt.inst == null)
                throw new Error("cannot removeCatalogHipsByName without linking to WWTInstance");
              this.$wwt.inst.ctl.removeCatalogHipsByName(T);
              var k = pe.Guid.createFrom(T).toString();
              delete this.spreadSheetLayers[k], this.activeLayers = Ln(this.$wwt);
            },
            // Annotations
            addAnnotation: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot addAnnotation without linking to WWTInstance");
              this.$wwt.inst.si.addAnnotation(T);
            },
            removeAnnotation: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot removeAnnotation without linking to WWTInstance");
              this.$wwt.inst.si.removeAnnotation(T);
            },
            clearAnnotations: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot clearAnnotations without linking to WWTInstance");
              this.$wwt.inst.si.clearAnnotations();
            },
            // Capturing the current display
            captureFrame: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot captureThumbnail without linking to WWTInstance");
              return this.$wwt.inst.captureFrame(T);
            },
            // Capturing a video as a readable stream
            captureVideo: function(T) {
              if (this.$wwt.inst === null)
                throw new Error("cannot captureVideo without linking to WWTInstance");
              return this.$wwt.inst.captureVideo(T);
            }
          }
        }), Gn = (0, z.defineComponent)({
          props: {
            /** The namespace of the Pinia module used to track the WWT component’s state.
             * This prop should have the same value in all components in the app that
             * reference WWT.
             */
            wwtNamespace: { type: String, default: "wwt", required: !0 },
            wwtFreestandingAssetBaseurl: String
          },
          computed: si(si({}, Re(Hn, {
            /** The GUIDs of all rendered layers, in their draw order.
             *
             * This list gives the GUIDs of the layers that are currently candidates for
             * rendering. This list is determined by the hierarchy of "layer maps"
             * registered with the engine and its current rendering mode. Layers in this
             * list might not be actually rendered if their `enabled` flag is false, if
             * they are fully transparent, and so on.
             **/
            wwtActiveLayers: "activeLayers",
            /** Information about the imagesets that are available to be used as a background.
               *
               * The info includes the name, which can then be used to set the background image
               * via the [[setBackgroundImageByName]] mutation.
               */
            wwtAvailableImagesets: "availableImagesets",
            /** The current background [Imageset](../../engine/classes/imageset.html), or
             * null if it is undefined.
             *
             * You can cause this state variable to change using the
             * [[setBackgroundImageByName]] mutation.
             * **/
            wwtBackgroundImageset: "backgroundImageset",
            /** The current time of WWT internal clock. In normal operation this variable
             * will change with every rendered WWT frame, or every 30 ms or so.
             */
            wwtCurrentTime: "currentTime",
            /** The number of times that the progression of the WWT internal clock has
             * been changed discontinuously.
             *
             * The main use of this state variable is that you can
             * [watch](https://vuejs.org/api/reactivity-core.html#watch) for changes to it and be alerted
             * when the clock has been altered. */
            wwtClockDiscontinuities: "clockDiscontinuities",
            /** The rate at which the WWT internal clock progresses compared to real time.
             * If the WWT clock is paused, this will be zero. Negative and fractional
             * values are both possible. */
            wwtClockRate: "clockRate",
            /** The current declination of the center of the WWT view, in radians.
             *
             * TODO: define the meaning here for view modes other than "sky."
             */
            wwtDecRad: "decRad",
            /** The current foreground [Imageset](../../engine/classes/imageset.html), or
             * null if it is undefined.
             *
             * You can cause this state variable to change using the
             * [[setForegroundImageByName]] mutation.
             * **/
            wwtForegroundImageset: "foregroundImageset",
            /** The opacity of the foreground imageset. Values range between 0 (invisible)
              * and 100 (fully opaque). */
            wwtForegroundOpacity: "foregroundOpacity",
            /** A table of activated imageset layers.
             *
             * Use [[imagesetStateForLayer]] to access information about a particular
             * layer.
             */
            wwtImagesetLayers: "imagesetLayers",
            /** Whether a tour has been loaded up and is available for playback. */
            wwtIsTourPlayerActive: "isTourPlayerActive",
            /** Whether a tour is actively playing back right now. This can spontaneously become
              * false if the tour completes playing. */
            wwtIsTourPlaying: "isTourPlaying",
            /** The current right ascension of the center of the WWT view, in radians.
             *
             * TODO: define the meaning here for view modes other than "sky."
             */
            wwtRARad: "raRad",
            /** The current mode of the WWT renderer.
             *
             * This is derived from the "type" of the active background imageset. To
             * change the mode, change the background imageset with
             * [[setBackgroundImageByName]].
             */
            wwtRenderType: "renderType",
            /** The current roll of the view camera, in radians */
            wwtRollRad: "rollRad",
            /** Whether or not to show a warning about recommending WebGL 2 */
            wwtShowWebGl2Warning: "showWebGl2Warning",
            /** A table of activated imageset layers.
             *
             * Use [[imagesetStateForLayer]] to access information about a particular
             * layer.
             */
            wwtSpreadSheetLayers: "spreadSheetLayers",
            /** The number of times that a WWT tour has completed playing.
             *
             * The main use of this state variable is that you can
             * [watch](https://vuejs.org/api/reactivity-core.html#watch) for changes to it and be alerted
             * when a tour finishes. Watching [[wwtIsTourPlaying]] doesn't suffice because
             * that will trigger when a tour is paused. */
            wwtTourCompletions: "tourCompletions",
            /** The total runtime of the current tour, in seconds, if there is one. */
            wwtTourRunTime: "tourRunTime",
            /** The timecodes at which the current tour’s "stops" begin, in seconds.
             *
             * Each WWT tour is composed of one or more "stops", each of which has a fixed
             * wall-clock duration. This variable gives the start times of the stops under
             * the assumption that they all follow one another in sequence. It is possible
             * to have nonlinear flow from one stop to the next.
             *
             * If no tour is loaded, this is an empty array.
             */
            wwtTourStopStartTimes: "tourStopStartTimes",
            /** The "timecode" of the current tour playback progression.
             *
             * The "timecode" is approximately the number of seconds elapsed since tour
             * playback began. More precisely, however, it is the start time of the
             * current tour stop, plus however much wall-clock time has elapsed while at
             * that stop. Because it is possible for stops to link to each other
             * non-linearly, it is also possible for the timecode to progress non-linearly
             * even when the tour plays back without user interaction.
             *
             * In combination with [[wwtTourStopStartTimes]], you can use this value to
             * determine the index number of the currently active tour stop.
             *
             * If no tour is loaded, this is zero.
             */
            wwtTourTimecode: "tourTimecode",
            /** The WWT zoom level, in degrees.
             *
             * TODO: define the semantics here in 3D and other modes.
             *
             * In 2D sky mode, the zoom level is the angular height of the viewport,
             * *times six*.
             */
            wwtZoomDeg: "zoomDeg"
          })), Re(Hn, [
            /** Get the reactive state for the active imageset layers
             *
             * These layers are created using the [[addImageSetLayer]] action. The state
             * structures returned by this function are part of the reactive store, so
             * you can wire them up to your UI and they will update correctly. The list is
             * returned in the engine's render order.
             *
             * @returns The layer states
             */
            "activeImagesetLayerStates",
            /** Get the right ascension and declination, in degrees, for x, y coordinates on the screen */
            "findRADecForScreenPoint",
            /** Given an RA and Dec position, return the x, y coordinates of the screen point */
            "findScreenPointForRADec",
            /** Look up the WWT engine object for an active imageset layer.
             *
             * This getter gets the WWT `Imageset` object associated with an imageset
             * layer. The returned object is *not* part of the Vue(x) reactivity system,
             * so you shouldn't use it to set up UI elements, but you can obtain more
             * detailed information about the imageset than is stored in the state
             * management system. For UI purposes, use [[imagesetStateForLayer]].
             *
             * @param guidtext The GUID of the layer to query, as a string
             * @returns The layer's underlying imageset, or null if the GUID is
             * unrecognized
             */
            "imagesetForLayer",
            /** Look up the reactive state for an active imageset layer.
             *
             * These layers are created using the [[addImageSetLayer]] action. The state
             * returned by this function is part of the reactive store, so you can
             * wire it up to your UI and it will update as the layer settings are changed.
             * If you need "runtime" state not captured in the reactivity system, you may
             * need to use [[imagesetForLayer]] instead.
             *
             * @param guidtext The GUID of the layer to query, as a string
             * @returns The layer state, or null if the GUID is unrecognized
             */
            "imagesetStateForLayer",
            /** Get the actual WWT `SpreadSheetLayer` for the named HiPS catalog.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetStateForHipsCatalog]] instead.
             *
             * @param name The `datasetName` of the HiPS catalog
             */
            "layerForHipsCatalog",
            /** Look up an [Imageset](../../engine/classes/imageset.html) in the engine’s
             * table of ones with registered names.
             *
             * This delegates to
             * [WWTControl.getImagesetByName()](../../engine/wwtcontrol.html#getimagesetbyname),
             * which has very eager name-matching rules. But if nothing matches, null is
             * returned.
             *
             * Imagesets are not added to the engine’s list of names automatically. In
             * order for an imageset to be findable by this function, its containing
             * folder must have been loaded using the [[loadImageCollection]] action.
             */
            "lookupImageset",
            /** Get the actual WWT `SpreadSheetLayer` for the table layer with the given ID.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetState]] instead.
             *
             * @param id The table layer's identifier.
             */
            "spreadSheetLayerById",
            /** Get the actual WWT `SpreadSheetLayer` for the table layer corresponding
             * to the given CatalogLayerInfo.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetState]] instead.
             *
             * @param id The table layer's identifier.
             */
            "spreadSheetLayer",
            /** Get reactive `SpreadSheetLayer` settings for the table layer corresponding to
             * the given CatalogLayerInfo.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param catalog A CatalogLayerInfo object corresponding to the layer.
             */
            "spreadsheetState",
            /** Get reactive `SpreadSheetLayer` settings for the table layer with the given ID.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param id The identifier of the table layer.
             */
            "spreadsheetStateById",
            /** Get reactive `SpreadSheetLayer` settings for the named HiPS catalog.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param name The `datasetName` of the HiPS catalog
             */
            "spreadsheetStateForHipsCatalog"
          ])),
          methods: si({}, me(Hn, [
            /** Add a "catalog HiPS" dataset to the current view, by name.
             *
             * If the catalog name is not in the engine's registry, the promise rejects.
             */
            "addCatalogHipsByName",
            /** Request the creation of a tabular data layer.
             *
             * The action resolves to a new [SpreadSheetLayer](../../engine/classes/spreadsheetlayer.html) instance.
             */
            "createTableLayer",
            /** Request an export of the catalog HiPS data within the current viewport. */
            "getCatalogHipsDataInView",
            /** Command the view to steer to a specific configuration.
             *
             * The async action completes when the view arrives, or when
             * a subsequent view command overrides this one.
             *
             * TODO: document semantics when not in 2D sky mode!
             */
            "gotoRADecZoom",
            /** Returns the time it would take, in seconds, to navigate to the given target. */
            "timeToRADecZoom",
            /** Command the view to steer as specified in
             * [the options](../../engine-helpers/interfaces/gototargetoptions.html).
             *
             * The async action completes when the view arrives, or when
             * a subsequent view command overrides this one.
             */
            "gotoTarget",
            /** Request the engine to load the specified image collection.
             *
             * The image collection is a [WTML file](https://docs.worldwidetelescope.org/data-guide/1/data-file-formats/collections/)
             * Images in collections loaded this way become usable for name-based lookup
             * by interfaces such as [[setForegroundImageByName]].
             *
             * The action resolves to a [Folder](../../engine/classes/folder.html) instance.
             * It’s asynchronous because the specified WTML file has to be downloaded.
             */
            "loadImageCollection",
            /** Add an imageset directly into the engine's database.
             *
             * If an imageset with the same URL has already been loaded, this is a
             * no-op.
             *
             * This returns the imageset that ultimately resides in the engine's
             * database. It could either be the input argument, if it was newly added,
             * or a pre-existing imageset in the no-op condition.
             */
            "addImagesetToRepository",
            /** Deprecated. Use addImageSetLayer instead.
             * Request the creation of a FITS image layer.
             *
             * The action resolves to a new [ImageSetLayer](../../engine/classes/imagesetlayer.html) instance.
             * It’s asynchronous because the requested FITS file has to be downloaded.
             */
            "loadFitsLayer",
            /** Request the creation of a image layer. Either a single FITS or an image set.
             *
             * The action resolves to a new [ImageSetLayer](../../engine/classes/imagesetlayer.html) instance.
             * It’s asynchronous because the requested url has to be downloaded.
             */
            "addImageSetLayer",
            /** Request the engine to load a tour file.
             *
             * The action resolves when the load is complete. It’s asynchronous because
             * the full WTT tour file has to be downloaded.
            */
            "loadTour",
            /** Get the current view as a one-slide tour, serialized to XML */
            "viewAsTourXml",
            /** Wait for the WWT engine to become ready for usage.
             *
             * You should invoke this action and wait for is completion before trying to
             * do anything else with a WWT-aware component. The action resolves when the
             * WWT engine has completed its initialization, which involes the download of
             * some supporting data files.
             */
            "waitForReady",
            // Formerly mutations
            // TODO: Alphabetize this into one big list
            /** Add an [Annotation](../../engine/classes/annotation.html) to the view. */
            "addAnnotation",
            /** Alter one or more settings of the specified FITS image layer as specified
             * in [the options](../../engine-helpers/interfaces/applyfitslayersettingsoptions.html).
             */
            "applyFitsLayerSettings",
            /** Alter one or more settings of the specified tabular data layers as specified
             * in [the options](../../engine-helpers/interfaces/applytablelayersettingsoptions.html).
             */
            "applyTableLayerSettings",
            /** Alter one [WWT engine setting](../../engine/modules.html#enginesetting). */
            "applySetting",
            /** Capture the current frame as an image `Blob` with the desired width, height, and format.
             * The first argument is a callback function to execute on the created `Blob`. */
            "captureFrame",
            /** Capture a video as a stream of image `Blob`s with the desired width, height and format.
             * The number of frames per second and total frame count are specified as well. */
            "captureVideo",
            /** Clear all [Annotations](../../engine/classes/annotation.html) from the view. */
            "clearAnnotations",
            /** Delete the specified layer from the layer manager.
             *
             * A layer may be identified by either its name or its [id](../../engine/classes/layer.html#id).
             */
            "deleteLayer",
            /** Remove the specified [Annotation](../../engine/classes/annotation.html) from the view. */
            "removeAnnotation",
            /** Remove a "catalog HiPS" dataset to the current view, by name. */
            "removeCatalogHipsByName",
            /** Seek tour playback to the specified timecode.
             *
             * See [[wwtTourTimecode]] for a definition of the tour timecode.
             *
             * An important limitation is that the engine can only seek to the very
             * beginning of a tour stop. If you request a timecode in the middle of a
             * slide, the seek will actually occur to the start time of that slide.
             */
            "seekToTourTimecode",
            /** Set the current background [Imageset](../../engine/classes/imageset.html)
             * based on its name.
             *
             * The name lookup here is effectively done using [[lookupImageset]]. If
             * the name is not found, the current background imageset remains unchanged.
             *
             * Changing the background imageset may change the value of [[wwtRenderType]],
             * and the overall "mode" of the WWT renderer.
             */
            "setBackgroundImageByName",
            /** Set the rate at which the WWT clock progresses compared to wall-clock time.
             *
             * A value of 10 means that the WWT clock progresses ten times faster than
             * real time. A value of -0.1 means that the WWT clock moves backwards, ten
             * times slower than real time.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setClockRate",
            /** Set whether the WWT clock should progress with real time.
             *
             * See
             * [SpaceTimeController.set_syncToClock()](../../engine/modules/spacetimecontroller.html#set_synctoclock).
             * This interface effectively allows you to pause the WWT clock.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setClockSync",
            /** Set the colormap used for a FITS image layer according to
             * [the options](../../engine-helpers/interfaces/setfitslayercolormapoptions.html).
             */
            "setFitsLayerColormap",
            /** Set the current foreground [Imageset](../../engine/classes/imageset.html)
             * based on its name.
             *
             * The name lookup here is effectively done using [[lookupImageset]]. If
             * the name is not found, the current foreground imageset remains unchanged.
             */
            "setForegroundImageByName",
            /** Set the opacity of the foreground imageset.
             *
             * Valid values are between 0 (invisible) and 100 (fully opaque).
             */
            "setForegroundOpacity",
            /** Change the [ImageSetLayer](../../engine/classes/imagesetlayer.html)
             * position in the draw cycle.
             */
            "setImageSetLayerOrder",
            /** Set whether the renderer settings of tours should remain applied after
             * those tours finish playing back.
             *
             * This specialized option helps avoid jarring visual effects when tours
             * finish playing. If a tour activates a renderer option like "local horizon
             * mode", by default that option will turn off when the tour finishes, causing
             * the view to suddenly change. If this option is set to True, that setting
             * will remain active, preventing the sudden change.
             */
            "setTourPlayerLeaveSettingsWhenStopped",
            /** Set the current time of WWT's internal clock.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setTime",
            /** Set the "tracked object" in the 3D solar system view.
             *
             * Allowed values are
             * [defined in @wwtelescope/engine-types](../../engine-types/enums/solarsystemobjects.html).
             */
            "setTrackedObject",
            /** Set up the background and foreground imagesets according to
             * [the options](../../engine-helpers/interfaces/setupforimagesetoptions.html)
             *
             * The main use of this interface is that it provides a mechanism to guess
             * the appropriate background imageset given a foreground imageset that you
             * want to show.
             */
            "setupForImageset",
            /** Start playback of the currently loaded tour.
             *
             * Nothing happens if no tour is loaded.
             */
            "startTour",
            /** Alter the "stretch" of a FITS image layer according to
             * [the options](../../engine-helpers/interfaces/stretchfitslayeroptions.html).
             */
            "stretchFitsLayer",
            /** Toggle the play/pause state of the current tour.
             *
             * Nothing happens if no tour is loaded.
             */
            "toggleTourPlayPauseState",
            /** Update the contents of a tabular data layer according to
             * [the options](../../engine-helpers/interfaces/updatetablelayeroptions.html).
             */
            "updateTableLayer",
            //"updateAvailableImagesets",
            /** Set the zoom level of the view.
             *
             * This action may result in an action that takes a perceptible amount of
             * time to resolve, if the "smooth pan" renderer option is enabled. To have
             * proper asynchronous feedback about when the zoom operation completes, use
             * [[gotoRADecZoom]].
             */
            "zoom",
            /** Moves the position of the view */
            "move",
            /** Tilts the position of the view */
            "tilt"
          ]))
        }), Ss = ["id"];
        function La(T, k, I, Y, at, nt) {
          return (0, z.openBlock)(), (0, z.createElementBlock)("div", {
            id: T.uniqueId,
            class: "wwtelescope-component"
          }, null, 8, Ss);
        }
        var Ka = 0;
        const $i = (0, z.defineComponent)({
          props: {
            wwtNamespace: { type: String, default: "wwt", required: !0 },
            wwtFreestandingAssetBaseurl: String
          },
          data: function() {
            return {
              uniqueId: "",
              wwt: void 0,
              renderLoopId: void 0
            };
          },
          methods: si({}, me(Hn, [
            "internalIncrementTourCompletions",
            "internalLinkToInstance",
            "internalUnlinkFromInstance",
            "internalUpdate",
            "waitForReady"
          ])),
          created: function() {
            var T = "wwtcmpt".concat(Ka);
            Object.defineProperties(this, {
              uniqueId: { get: function() {
                return T;
              } }
            }), Ka += 1;
          },
          mounted: function() {
            var T = this;
            this.wwt = (0, z.markRaw)(new Za({
              elId: this.uniqueId,
              startInternalRenderLoop: !1,
              // Start at the Galactic Center by default. RA of the GC ~= 266.4 deg; in WWT, lng = 360 - RA.
              startLatDeg: -28.9,
              startLngDeg: 93.6,
              freestandingAssetBaseurl: this.wwtFreestandingAssetBaseurl
            })), this.internalLinkToInstance(this.wwt);
            var k = function() {
              var I = T.wwt;
              T.renderLoopId = window.requestAnimationFrame(k), I.ctl.renderOneFrame(), T.internalUpdate();
            };
            this.waitForReady().then(function() {
              (0, z.nextTick)().then(function() {
                T.renderLoopId = window.requestAnimationFrame(k);
              });
            }), this.wwt.tourEndedCallback = function(I) {
              T.internalIncrementTourCompletions();
            };
          },
          unmounted: function() {
            this.renderLoopId !== void 0 && (window.cancelAnimationFrame(this.renderLoopId), this.renderLoopId = void 0), this.wwt !== void 0 && (this.wwt.tourEndedCallback = null), this.internalUnlinkFromInstance();
          }
        });
        var Cs = L(535);
        const Ts = /* @__PURE__ */ (0, Cs.Z)($i, [["render", La]]);
        var Bi = vt();
        Bi.use(function(T) {
          var k = T.store;
          k.$wwt = new bs();
        });
      })(), E;
    })()
  ));
})(index_umd);
var index_umdExports = index_umd.exports, PI = 3.14159265358979, TWOPI = 2 * PI, R2D = 180 / PI, R2H = 12 / PI;
function angnorm(r) {
  for (; r < 0; )
    r += TWOPI;
  for (; r >= TWOPI; )
    r -= TWOPI;
  return r;
}
function _formatSexagesimal(r, u, d, v, w, C) {
  var L = "";
  r < 0 ? (r = -r, L = "-") : u && (L = "+");
  var E = Math.floor(r);
  r = (r - E) * 60;
  var V = Math.floor(r);
  r = (r - V) * 60;
  var N = Math.floor(r), z = r - N, st = String(E).padStart(d, "0"), et = String(V).padStart(2, "0"), ct = String(N).padStart(2, "0"), Ct = z.toFixed(C).slice(1);
  return "".concat(L).concat(st).concat(v).concat(et).concat(w).concat(ct).concat(Ct);
}
function fmtHours(r, u, d, v) {
  return u === void 0 && (u = ":"), d === void 0 && (d = ":"), v === void 0 && (v = 0), _formatSexagesimal(angnorm(r) * R2H, !1, 2, u, d, v);
}
function fmtDegLat(r, u, d, v) {
  return u === void 0 && (u = ":"), d === void 0 && (d = ":"), v === void 0 && (v = 0), r < -PI || r > PI ? " ??".concat(u, "??").concat(d, "??") : _formatSexagesimal(r * R2D, !0, 2, u, d, v);
}
const App_vue_vue_type_style_index_0_lang = "", _export_sfc = (r, u) => {
  const d = r.__vccOpts || r;
  for (const [v, w] of u)
    d[v] = w;
  return d;
}, _sfc_main = {
  extends: index_umdExports.WWTAwareComponent,
  data() {
    return {
      show: !1
    };
  },
  computed: {
    coordText() {
      return `${fmtHours(this.wwtRARad)} ${fmtDegLat(this.wwtDecRad)}`;
    }
  },
  mounted() {
    setTimeout(() => {
      this.show = !0;
    }, 1e3);
  }
}, _hoisted_1 = { class: "wwt-app" }, _hoisted_2 = { class: "coord-overlay" };
function _sfc_render(r, u, d, v, w, C) {
  const L = resolveComponent("WorldWideTelescope");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    w.show ? (openBlock(), createBlock(L, {
      key: 0,
      "wwt-namespace": "mywwt"
    })) : createCommentVNode("", !0),
    createBaseVNode("p", _hoisted_2, toDisplayString(C.coordText), 1)
  ]);
}
const App = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]), app = createApp(App, {
  wwtNamespace: "mywwt"
});
app.use(index_umdExports.wwtPinia);
app.component("WorldWideTelescope", index_umdExports.WWTComponent);
function render({ model: r, el: u }) {
  return app.mount(u), () => app.unmount();
}
var common = {};
(function(r) {
  var u = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
  function d(C, L) {
    return Object.prototype.hasOwnProperty.call(C, L);
  }
  r.assign = function(C) {
    for (var L = Array.prototype.slice.call(arguments, 1); L.length; ) {
      var E = L.shift();
      if (E) {
        if (typeof E != "object")
          throw new TypeError(E + "must be non-object");
        for (var V in E)
          d(E, V) && (C[V] = E[V]);
      }
    }
    return C;
  }, r.shrinkBuf = function(C, L) {
    return C.length === L ? C : C.subarray ? C.subarray(0, L) : (C.length = L, C);
  };
  var v = {
    arraySet: function(C, L, E, V, N) {
      if (L.subarray && C.subarray) {
        C.set(L.subarray(E, E + V), N);
        return;
      }
      for (var z = 0; z < V; z++)
        C[N + z] = L[E + z];
    },
    // Join array of chunks to single array.
    flattenChunks: function(C) {
      var L, E, V, N, z, st;
      for (V = 0, L = 0, E = C.length; L < E; L++)
        V += C[L].length;
      for (st = new Uint8Array(V), N = 0, L = 0, E = C.length; L < E; L++)
        z = C[L], st.set(z, N), N += z.length;
      return st;
    }
  }, w = {
    arraySet: function(C, L, E, V, N) {
      for (var z = 0; z < V; z++)
        C[N + z] = L[E + z];
    },
    // Join array of chunks to single array.
    flattenChunks: function(C) {
      return [].concat.apply([], C);
    }
  };
  r.setTyped = function(C) {
    C ? (r.Buf8 = Uint8Array, r.Buf16 = Uint16Array, r.Buf32 = Int32Array, r.assign(r, v)) : (r.Buf8 = Array, r.Buf16 = Array, r.Buf32 = Array, r.assign(r, w));
  }, r.setTyped(u);
})(common);
var deflate$4 = {}, deflate$3 = {}, trees$1 = {}, utils$6 = common, Z_FIXED$1 = 4, Z_BINARY = 0, Z_TEXT = 1, Z_UNKNOWN$1 = 2;
function zero$1(r) {
  for (var u = r.length; --u >= 0; )
    r[u] = 0;
}
var STORED_BLOCK = 0, STATIC_TREES = 1, DYN_TREES = 2, MIN_MATCH$1 = 3, MAX_MATCH$1 = 258, LENGTH_CODES$1 = 29, LITERALS$1 = 256, L_CODES$1 = LITERALS$1 + 1 + LENGTH_CODES$1, D_CODES$1 = 30, BL_CODES$1 = 19, HEAP_SIZE$1 = 2 * L_CODES$1 + 1, MAX_BITS$1 = 15, Buf_size = 16, MAX_BL_BITS = 7, END_BLOCK = 256, REP_3_6 = 16, REPZ_3_10 = 17, REPZ_11_138 = 18, extra_lbits = (
  /* extra bits for each length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
), extra_dbits = (
  /* extra bits for each distance code */
  [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
), extra_blbits = (
  /* extra bits for each bit length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
), bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], DIST_CODE_LEN = 512, static_ltree = new Array((L_CODES$1 + 2) * 2);
zero$1(static_ltree);
var static_dtree = new Array(D_CODES$1 * 2);
zero$1(static_dtree);
var _dist_code = new Array(DIST_CODE_LEN);
zero$1(_dist_code);
var _length_code = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);
zero$1(_length_code);
var base_length = new Array(LENGTH_CODES$1);
zero$1(base_length);
var base_dist = new Array(D_CODES$1);
zero$1(base_dist);
function StaticTreeDesc(r, u, d, v, w) {
  this.static_tree = r, this.extra_bits = u, this.extra_base = d, this.elems = v, this.max_length = w, this.has_stree = r && r.length;
}
var static_l_desc, static_d_desc, static_bl_desc;
function TreeDesc(r, u) {
  this.dyn_tree = r, this.max_code = 0, this.stat_desc = u;
}
function d_code(r) {
  return r < 256 ? _dist_code[r] : _dist_code[256 + (r >>> 7)];
}
function put_short(r, u) {
  r.pending_buf[r.pending++] = u & 255, r.pending_buf[r.pending++] = u >>> 8 & 255;
}
function send_bits(r, u, d) {
  r.bi_valid > Buf_size - d ? (r.bi_buf |= u << r.bi_valid & 65535, put_short(r, r.bi_buf), r.bi_buf = u >> Buf_size - r.bi_valid, r.bi_valid += d - Buf_size) : (r.bi_buf |= u << r.bi_valid & 65535, r.bi_valid += d);
}
function send_code(r, u, d) {
  send_bits(
    r,
    d[u * 2],
    d[u * 2 + 1]
    /*.Len*/
  );
}
function bi_reverse(r, u) {
  var d = 0;
  do
    d |= r & 1, r >>>= 1, d <<= 1;
  while (--u > 0);
  return d >>> 1;
}
function bi_flush(r) {
  r.bi_valid === 16 ? (put_short(r, r.bi_buf), r.bi_buf = 0, r.bi_valid = 0) : r.bi_valid >= 8 && (r.pending_buf[r.pending++] = r.bi_buf & 255, r.bi_buf >>= 8, r.bi_valid -= 8);
}
function gen_bitlen(r, u) {
  var d = u.dyn_tree, v = u.max_code, w = u.stat_desc.static_tree, C = u.stat_desc.has_stree, L = u.stat_desc.extra_bits, E = u.stat_desc.extra_base, V = u.stat_desc.max_length, N, z, st, et, ct, Ct, At = 0;
  for (et = 0; et <= MAX_BITS$1; et++)
    r.bl_count[et] = 0;
  for (d[r.heap[r.heap_max] * 2 + 1] = 0, N = r.heap_max + 1; N < HEAP_SIZE$1; N++)
    z = r.heap[N], et = d[d[z * 2 + 1] * 2 + 1] + 1, et > V && (et = V, At++), d[z * 2 + 1] = et, !(z > v) && (r.bl_count[et]++, ct = 0, z >= E && (ct = L[z - E]), Ct = d[z * 2], r.opt_len += Ct * (et + ct), C && (r.static_len += Ct * (w[z * 2 + 1] + ct)));
  if (At !== 0) {
    do {
      for (et = V - 1; r.bl_count[et] === 0; )
        et--;
      r.bl_count[et]--, r.bl_count[et + 1] += 2, r.bl_count[V]--, At -= 2;
    } while (At > 0);
    for (et = V; et !== 0; et--)
      for (z = r.bl_count[et]; z !== 0; )
        st = r.heap[--N], !(st > v) && (d[st * 2 + 1] !== et && (r.opt_len += (et - d[st * 2 + 1]) * d[st * 2], d[st * 2 + 1] = et), z--);
  }
}
function gen_codes(r, u, d) {
  var v = new Array(MAX_BITS$1 + 1), w = 0, C, L;
  for (C = 1; C <= MAX_BITS$1; C++)
    v[C] = w = w + d[C - 1] << 1;
  for (L = 0; L <= u; L++) {
    var E = r[L * 2 + 1];
    E !== 0 && (r[L * 2] = bi_reverse(v[E]++, E));
  }
}
function tr_static_init() {
  var r, u, d, v, w, C = new Array(MAX_BITS$1 + 1);
  for (d = 0, v = 0; v < LENGTH_CODES$1 - 1; v++)
    for (base_length[v] = d, r = 0; r < 1 << extra_lbits[v]; r++)
      _length_code[d++] = v;
  for (_length_code[d - 1] = v, w = 0, v = 0; v < 16; v++)
    for (base_dist[v] = w, r = 0; r < 1 << extra_dbits[v]; r++)
      _dist_code[w++] = v;
  for (w >>= 7; v < D_CODES$1; v++)
    for (base_dist[v] = w << 7, r = 0; r < 1 << extra_dbits[v] - 7; r++)
      _dist_code[256 + w++] = v;
  for (u = 0; u <= MAX_BITS$1; u++)
    C[u] = 0;
  for (r = 0; r <= 143; )
    static_ltree[r * 2 + 1] = 8, r++, C[8]++;
  for (; r <= 255; )
    static_ltree[r * 2 + 1] = 9, r++, C[9]++;
  for (; r <= 279; )
    static_ltree[r * 2 + 1] = 7, r++, C[7]++;
  for (; r <= 287; )
    static_ltree[r * 2 + 1] = 8, r++, C[8]++;
  for (gen_codes(static_ltree, L_CODES$1 + 1, C), r = 0; r < D_CODES$1; r++)
    static_dtree[r * 2 + 1] = 5, static_dtree[r * 2] = bi_reverse(r, 5);
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1), static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES$1, MAX_BITS$1), static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES$1, MAX_BL_BITS);
}
function init_block(r) {
  var u;
  for (u = 0; u < L_CODES$1; u++)
    r.dyn_ltree[u * 2] = 0;
  for (u = 0; u < D_CODES$1; u++)
    r.dyn_dtree[u * 2] = 0;
  for (u = 0; u < BL_CODES$1; u++)
    r.bl_tree[u * 2] = 0;
  r.dyn_ltree[END_BLOCK * 2] = 1, r.opt_len = r.static_len = 0, r.last_lit = r.matches = 0;
}
function bi_windup(r) {
  r.bi_valid > 8 ? put_short(r, r.bi_buf) : r.bi_valid > 0 && (r.pending_buf[r.pending++] = r.bi_buf), r.bi_buf = 0, r.bi_valid = 0;
}
function copy_block(r, u, d, v) {
  bi_windup(r), v && (put_short(r, d), put_short(r, ~d)), utils$6.arraySet(r.pending_buf, r.window, u, d, r.pending), r.pending += d;
}
function smaller(r, u, d, v) {
  var w = u * 2, C = d * 2;
  return r[w] < r[C] || r[w] === r[C] && v[u] <= v[d];
}
function pqdownheap(r, u, d) {
  for (var v = r.heap[d], w = d << 1; w <= r.heap_len && (w < r.heap_len && smaller(u, r.heap[w + 1], r.heap[w], r.depth) && w++, !smaller(u, v, r.heap[w], r.depth)); )
    r.heap[d] = r.heap[w], d = w, w <<= 1;
  r.heap[d] = v;
}
function compress_block(r, u, d) {
  var v, w, C = 0, L, E;
  if (r.last_lit !== 0)
    do
      v = r.pending_buf[r.d_buf + C * 2] << 8 | r.pending_buf[r.d_buf + C * 2 + 1], w = r.pending_buf[r.l_buf + C], C++, v === 0 ? send_code(r, w, u) : (L = _length_code[w], send_code(r, L + LITERALS$1 + 1, u), E = extra_lbits[L], E !== 0 && (w -= base_length[L], send_bits(r, w, E)), v--, L = d_code(v), send_code(r, L, d), E = extra_dbits[L], E !== 0 && (v -= base_dist[L], send_bits(r, v, E)));
    while (C < r.last_lit);
  send_code(r, END_BLOCK, u);
}
function build_tree(r, u) {
  var d = u.dyn_tree, v = u.stat_desc.static_tree, w = u.stat_desc.has_stree, C = u.stat_desc.elems, L, E, V = -1, N;
  for (r.heap_len = 0, r.heap_max = HEAP_SIZE$1, L = 0; L < C; L++)
    d[L * 2] !== 0 ? (r.heap[++r.heap_len] = V = L, r.depth[L] = 0) : d[L * 2 + 1] = 0;
  for (; r.heap_len < 2; )
    N = r.heap[++r.heap_len] = V < 2 ? ++V : 0, d[N * 2] = 1, r.depth[N] = 0, r.opt_len--, w && (r.static_len -= v[N * 2 + 1]);
  for (u.max_code = V, L = r.heap_len >> 1; L >= 1; L--)
    pqdownheap(r, d, L);
  N = C;
  do
    L = r.heap[
      1
      /*SMALLEST*/
    ], r.heap[
      1
      /*SMALLEST*/
    ] = r.heap[r.heap_len--], pqdownheap(
      r,
      d,
      1
      /*SMALLEST*/
    ), E = r.heap[
      1
      /*SMALLEST*/
    ], r.heap[--r.heap_max] = L, r.heap[--r.heap_max] = E, d[N * 2] = d[L * 2] + d[E * 2], r.depth[N] = (r.depth[L] >= r.depth[E] ? r.depth[L] : r.depth[E]) + 1, d[L * 2 + 1] = d[E * 2 + 1] = N, r.heap[
      1
      /*SMALLEST*/
    ] = N++, pqdownheap(
      r,
      d,
      1
      /*SMALLEST*/
    );
  while (r.heap_len >= 2);
  r.heap[--r.heap_max] = r.heap[
    1
    /*SMALLEST*/
  ], gen_bitlen(r, u), gen_codes(d, V, r.bl_count);
}
function scan_tree(r, u, d) {
  var v, w = -1, C, L = u[0 * 2 + 1], E = 0, V = 7, N = 4;
  for (L === 0 && (V = 138, N = 3), u[(d + 1) * 2 + 1] = 65535, v = 0; v <= d; v++)
    C = L, L = u[(v + 1) * 2 + 1], !(++E < V && C === L) && (E < N ? r.bl_tree[C * 2] += E : C !== 0 ? (C !== w && r.bl_tree[C * 2]++, r.bl_tree[REP_3_6 * 2]++) : E <= 10 ? r.bl_tree[REPZ_3_10 * 2]++ : r.bl_tree[REPZ_11_138 * 2]++, E = 0, w = C, L === 0 ? (V = 138, N = 3) : C === L ? (V = 6, N = 3) : (V = 7, N = 4));
}
function send_tree(r, u, d) {
  var v, w = -1, C, L = u[0 * 2 + 1], E = 0, V = 7, N = 4;
  for (L === 0 && (V = 138, N = 3), v = 0; v <= d; v++)
    if (C = L, L = u[(v + 1) * 2 + 1], !(++E < V && C === L)) {
      if (E < N)
        do
          send_code(r, C, r.bl_tree);
        while (--E !== 0);
      else
        C !== 0 ? (C !== w && (send_code(r, C, r.bl_tree), E--), send_code(r, REP_3_6, r.bl_tree), send_bits(r, E - 3, 2)) : E <= 10 ? (send_code(r, REPZ_3_10, r.bl_tree), send_bits(r, E - 3, 3)) : (send_code(r, REPZ_11_138, r.bl_tree), send_bits(r, E - 11, 7));
      E = 0, w = C, L === 0 ? (V = 138, N = 3) : C === L ? (V = 6, N = 3) : (V = 7, N = 4);
    }
}
function build_bl_tree(r) {
  var u;
  for (scan_tree(r, r.dyn_ltree, r.l_desc.max_code), scan_tree(r, r.dyn_dtree, r.d_desc.max_code), build_tree(r, r.bl_desc), u = BL_CODES$1 - 1; u >= 3 && r.bl_tree[bl_order[u] * 2 + 1] === 0; u--)
    ;
  return r.opt_len += 3 * (u + 1) + 5 + 5 + 4, u;
}
function send_all_trees(r, u, d, v) {
  var w;
  for (send_bits(r, u - 257, 5), send_bits(r, d - 1, 5), send_bits(r, v - 4, 4), w = 0; w < v; w++)
    send_bits(r, r.bl_tree[bl_order[w] * 2 + 1], 3);
  send_tree(r, r.dyn_ltree, u - 1), send_tree(r, r.dyn_dtree, d - 1);
}
function detect_data_type(r) {
  var u = 4093624447, d;
  for (d = 0; d <= 31; d++, u >>>= 1)
    if (u & 1 && r.dyn_ltree[d * 2] !== 0)
      return Z_BINARY;
  if (r.dyn_ltree[9 * 2] !== 0 || r.dyn_ltree[10 * 2] !== 0 || r.dyn_ltree[13 * 2] !== 0)
    return Z_TEXT;
  for (d = 32; d < LITERALS$1; d++)
    if (r.dyn_ltree[d * 2] !== 0)
      return Z_TEXT;
  return Z_BINARY;
}
var static_init_done = !1;
function _tr_init(r) {
  static_init_done || (tr_static_init(), static_init_done = !0), r.l_desc = new TreeDesc(r.dyn_ltree, static_l_desc), r.d_desc = new TreeDesc(r.dyn_dtree, static_d_desc), r.bl_desc = new TreeDesc(r.bl_tree, static_bl_desc), r.bi_buf = 0, r.bi_valid = 0, init_block(r);
}
function _tr_stored_block(r, u, d, v) {
  send_bits(r, (STORED_BLOCK << 1) + (v ? 1 : 0), 3), copy_block(r, u, d, !0);
}
function _tr_align(r) {
  send_bits(r, STATIC_TREES << 1, 3), send_code(r, END_BLOCK, static_ltree), bi_flush(r);
}
function _tr_flush_block(r, u, d, v) {
  var w, C, L = 0;
  r.level > 0 ? (r.strm.data_type === Z_UNKNOWN$1 && (r.strm.data_type = detect_data_type(r)), build_tree(r, r.l_desc), build_tree(r, r.d_desc), L = build_bl_tree(r), w = r.opt_len + 3 + 7 >>> 3, C = r.static_len + 3 + 7 >>> 3, C <= w && (w = C)) : w = C = d + 5, d + 4 <= w && u !== -1 ? _tr_stored_block(r, u, d, v) : r.strategy === Z_FIXED$1 || C === w ? (send_bits(r, (STATIC_TREES << 1) + (v ? 1 : 0), 3), compress_block(r, static_ltree, static_dtree)) : (send_bits(r, (DYN_TREES << 1) + (v ? 1 : 0), 3), send_all_trees(r, r.l_desc.max_code + 1, r.d_desc.max_code + 1, L + 1), compress_block(r, r.dyn_ltree, r.dyn_dtree)), init_block(r), v && bi_windup(r);
}
function _tr_tally(r, u, d) {
  return r.pending_buf[r.d_buf + r.last_lit * 2] = u >>> 8 & 255, r.pending_buf[r.d_buf + r.last_lit * 2 + 1] = u & 255, r.pending_buf[r.l_buf + r.last_lit] = d & 255, r.last_lit++, u === 0 ? r.dyn_ltree[d * 2]++ : (r.matches++, u--, r.dyn_ltree[(_length_code[d] + LITERALS$1 + 1) * 2]++, r.dyn_dtree[d_code(u) * 2]++), r.last_lit === r.lit_bufsize - 1;
}
trees$1._tr_init = _tr_init;
trees$1._tr_stored_block = _tr_stored_block;
trees$1._tr_flush_block = _tr_flush_block;
trees$1._tr_tally = _tr_tally;
trees$1._tr_align = _tr_align;
function adler32$2(r, u, d, v) {
  for (var w = r & 65535 | 0, C = r >>> 16 & 65535 | 0, L = 0; d !== 0; ) {
    L = d > 2e3 ? 2e3 : d, d -= L;
    do
      w = w + u[v++] | 0, C = C + w | 0;
    while (--L);
    w %= 65521, C %= 65521;
  }
  return w | C << 16 | 0;
}
var adler32_1 = adler32$2;
function makeTable() {
  for (var r, u = [], d = 0; d < 256; d++) {
    r = d;
    for (var v = 0; v < 8; v++)
      r = r & 1 ? 3988292384 ^ r >>> 1 : r >>> 1;
    u[d] = r;
  }
  return u;
}
var crcTable = makeTable();
function crc32$2(r, u, d, v) {
  var w = crcTable, C = v + d;
  r ^= -1;
  for (var L = v; L < C; L++)
    r = r >>> 8 ^ w[(r ^ u[L]) & 255];
  return r ^ -1;
}
var crc32_1 = crc32$2, messages = {
  2: "need dictionary",
  /* Z_NEED_DICT       2  */
  1: "stream end",
  /* Z_STREAM_END      1  */
  0: "",
  /* Z_OK              0  */
  "-1": "file error",
  /* Z_ERRNO         (-1) */
  "-2": "stream error",
  /* Z_STREAM_ERROR  (-2) */
  "-3": "data error",
  /* Z_DATA_ERROR    (-3) */
  "-4": "insufficient memory",
  /* Z_MEM_ERROR     (-4) */
  "-5": "buffer error",
  /* Z_BUF_ERROR     (-5) */
  "-6": "incompatible version"
  /* Z_VERSION_ERROR (-6) */
}, utils$5 = common, trees = trees$1, adler32$1 = adler32_1, crc32$1 = crc32_1, msg$2 = messages, Z_NO_FLUSH$1 = 0, Z_PARTIAL_FLUSH = 1, Z_FULL_FLUSH = 3, Z_FINISH$2 = 4, Z_BLOCK$1 = 5, Z_OK$2 = 0, Z_STREAM_END$2 = 1, Z_STREAM_ERROR$1 = -2, Z_DATA_ERROR$1 = -3, Z_BUF_ERROR$1 = -5, Z_DEFAULT_COMPRESSION$1 = -1, Z_FILTERED = 1, Z_HUFFMAN_ONLY = 2, Z_RLE = 3, Z_FIXED = 4, Z_DEFAULT_STRATEGY$1 = 0, Z_UNKNOWN = 2, Z_DEFLATED$2 = 8, MAX_MEM_LEVEL = 9, MAX_WBITS$1 = 15, DEF_MEM_LEVEL = 8, LENGTH_CODES = 29, LITERALS = 256, L_CODES = LITERALS + 1 + LENGTH_CODES, D_CODES = 30, BL_CODES = 19, HEAP_SIZE = 2 * L_CODES + 1, MAX_BITS = 15, MIN_MATCH = 3, MAX_MATCH = 258, MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1, PRESET_DICT = 32, INIT_STATE = 42, EXTRA_STATE = 69, NAME_STATE = 73, COMMENT_STATE = 91, HCRC_STATE = 103, BUSY_STATE = 113, FINISH_STATE = 666, BS_NEED_MORE = 1, BS_BLOCK_DONE = 2, BS_FINISH_STARTED = 3, BS_FINISH_DONE = 4, OS_CODE = 3;
function err(r, u) {
  return r.msg = msg$2[u], u;
}
function rank(r) {
  return (r << 1) - (r > 4 ? 9 : 0);
}
function zero(r) {
  for (var u = r.length; --u >= 0; )
    r[u] = 0;
}
function flush_pending(r) {
  var u = r.state, d = u.pending;
  d > r.avail_out && (d = r.avail_out), d !== 0 && (utils$5.arraySet(r.output, u.pending_buf, u.pending_out, d, r.next_out), r.next_out += d, u.pending_out += d, r.total_out += d, r.avail_out -= d, u.pending -= d, u.pending === 0 && (u.pending_out = 0));
}
function flush_block_only(r, u) {
  trees._tr_flush_block(r, r.block_start >= 0 ? r.block_start : -1, r.strstart - r.block_start, u), r.block_start = r.strstart, flush_pending(r.strm);
}
function put_byte(r, u) {
  r.pending_buf[r.pending++] = u;
}
function putShortMSB(r, u) {
  r.pending_buf[r.pending++] = u >>> 8 & 255, r.pending_buf[r.pending++] = u & 255;
}
function read_buf(r, u, d, v) {
  var w = r.avail_in;
  return w > v && (w = v), w === 0 ? 0 : (r.avail_in -= w, utils$5.arraySet(u, r.input, r.next_in, w, d), r.state.wrap === 1 ? r.adler = adler32$1(r.adler, u, w, d) : r.state.wrap === 2 && (r.adler = crc32$1(r.adler, u, w, d)), r.next_in += w, r.total_in += w, w);
}
function longest_match(r, u) {
  var d = r.max_chain_length, v = r.strstart, w, C, L = r.prev_length, E = r.nice_match, V = r.strstart > r.w_size - MIN_LOOKAHEAD ? r.strstart - (r.w_size - MIN_LOOKAHEAD) : 0, N = r.window, z = r.w_mask, st = r.prev, et = r.strstart + MAX_MATCH, ct = N[v + L - 1], Ct = N[v + L];
  r.prev_length >= r.good_match && (d >>= 2), E > r.lookahead && (E = r.lookahead);
  do
    if (w = u, !(N[w + L] !== Ct || N[w + L - 1] !== ct || N[w] !== N[v] || N[++w] !== N[v + 1])) {
      v += 2, w++;
      do
        ;
      while (N[++v] === N[++w] && N[++v] === N[++w] && N[++v] === N[++w] && N[++v] === N[++w] && N[++v] === N[++w] && N[++v] === N[++w] && N[++v] === N[++w] && N[++v] === N[++w] && v < et);
      if (C = MAX_MATCH - (et - v), v = et - MAX_MATCH, C > L) {
        if (r.match_start = u, L = C, C >= E)
          break;
        ct = N[v + L - 1], Ct = N[v + L];
      }
    }
  while ((u = st[u & z]) > V && --d !== 0);
  return L <= r.lookahead ? L : r.lookahead;
}
function fill_window(r) {
  var u = r.w_size, d, v, w, C, L;
  do {
    if (C = r.window_size - r.lookahead - r.strstart, r.strstart >= u + (u - MIN_LOOKAHEAD)) {
      utils$5.arraySet(r.window, r.window, u, u, 0), r.match_start -= u, r.strstart -= u, r.block_start -= u, v = r.hash_size, d = v;
      do
        w = r.head[--d], r.head[d] = w >= u ? w - u : 0;
      while (--v);
      v = u, d = v;
      do
        w = r.prev[--d], r.prev[d] = w >= u ? w - u : 0;
      while (--v);
      C += u;
    }
    if (r.strm.avail_in === 0)
      break;
    if (v = read_buf(r.strm, r.window, r.strstart + r.lookahead, C), r.lookahead += v, r.lookahead + r.insert >= MIN_MATCH)
      for (L = r.strstart - r.insert, r.ins_h = r.window[L], r.ins_h = (r.ins_h << r.hash_shift ^ r.window[L + 1]) & r.hash_mask; r.insert && (r.ins_h = (r.ins_h << r.hash_shift ^ r.window[L + MIN_MATCH - 1]) & r.hash_mask, r.prev[L & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = L, L++, r.insert--, !(r.lookahead + r.insert < MIN_MATCH)); )
        ;
  } while (r.lookahead < MIN_LOOKAHEAD && r.strm.avail_in !== 0);
}
function deflate_stored(r, u) {
  var d = 65535;
  for (d > r.pending_buf_size - 5 && (d = r.pending_buf_size - 5); ; ) {
    if (r.lookahead <= 1) {
      if (fill_window(r), r.lookahead === 0 && u === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (r.lookahead === 0)
        break;
    }
    r.strstart += r.lookahead, r.lookahead = 0;
    var v = r.block_start + d;
    if ((r.strstart === 0 || r.strstart >= v) && (r.lookahead = r.strstart - v, r.strstart = v, flush_block_only(r, !1), r.strm.avail_out === 0) || r.strstart - r.block_start >= r.w_size - MIN_LOOKAHEAD && (flush_block_only(r, !1), r.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return r.insert = 0, u === Z_FINISH$2 ? (flush_block_only(r, !0), r.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : (r.strstart > r.block_start && (flush_block_only(r, !1), r.strm.avail_out === 0), BS_NEED_MORE);
}
function deflate_fast(r, u) {
  for (var d, v; ; ) {
    if (r.lookahead < MIN_LOOKAHEAD) {
      if (fill_window(r), r.lookahead < MIN_LOOKAHEAD && u === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (r.lookahead === 0)
        break;
    }
    if (d = 0, r.lookahead >= MIN_MATCH && (r.ins_h = (r.ins_h << r.hash_shift ^ r.window[r.strstart + MIN_MATCH - 1]) & r.hash_mask, d = r.prev[r.strstart & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = r.strstart), d !== 0 && r.strstart - d <= r.w_size - MIN_LOOKAHEAD && (r.match_length = longest_match(r, d)), r.match_length >= MIN_MATCH)
      if (v = trees._tr_tally(r, r.strstart - r.match_start, r.match_length - MIN_MATCH), r.lookahead -= r.match_length, r.match_length <= r.max_lazy_match && r.lookahead >= MIN_MATCH) {
        r.match_length--;
        do
          r.strstart++, r.ins_h = (r.ins_h << r.hash_shift ^ r.window[r.strstart + MIN_MATCH - 1]) & r.hash_mask, d = r.prev[r.strstart & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = r.strstart;
        while (--r.match_length !== 0);
        r.strstart++;
      } else
        r.strstart += r.match_length, r.match_length = 0, r.ins_h = r.window[r.strstart], r.ins_h = (r.ins_h << r.hash_shift ^ r.window[r.strstart + 1]) & r.hash_mask;
    else
      v = trees._tr_tally(r, 0, r.window[r.strstart]), r.lookahead--, r.strstart++;
    if (v && (flush_block_only(r, !1), r.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return r.insert = r.strstart < MIN_MATCH - 1 ? r.strstart : MIN_MATCH - 1, u === Z_FINISH$2 ? (flush_block_only(r, !0), r.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : r.last_lit && (flush_block_only(r, !1), r.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function deflate_slow(r, u) {
  for (var d, v, w; ; ) {
    if (r.lookahead < MIN_LOOKAHEAD) {
      if (fill_window(r), r.lookahead < MIN_LOOKAHEAD && u === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (r.lookahead === 0)
        break;
    }
    if (d = 0, r.lookahead >= MIN_MATCH && (r.ins_h = (r.ins_h << r.hash_shift ^ r.window[r.strstart + MIN_MATCH - 1]) & r.hash_mask, d = r.prev[r.strstart & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = r.strstart), r.prev_length = r.match_length, r.prev_match = r.match_start, r.match_length = MIN_MATCH - 1, d !== 0 && r.prev_length < r.max_lazy_match && r.strstart - d <= r.w_size - MIN_LOOKAHEAD && (r.match_length = longest_match(r, d), r.match_length <= 5 && (r.strategy === Z_FILTERED || r.match_length === MIN_MATCH && r.strstart - r.match_start > 4096) && (r.match_length = MIN_MATCH - 1)), r.prev_length >= MIN_MATCH && r.match_length <= r.prev_length) {
      w = r.strstart + r.lookahead - MIN_MATCH, v = trees._tr_tally(r, r.strstart - 1 - r.prev_match, r.prev_length - MIN_MATCH), r.lookahead -= r.prev_length - 1, r.prev_length -= 2;
      do
        ++r.strstart <= w && (r.ins_h = (r.ins_h << r.hash_shift ^ r.window[r.strstart + MIN_MATCH - 1]) & r.hash_mask, d = r.prev[r.strstart & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = r.strstart);
      while (--r.prev_length !== 0);
      if (r.match_available = 0, r.match_length = MIN_MATCH - 1, r.strstart++, v && (flush_block_only(r, !1), r.strm.avail_out === 0))
        return BS_NEED_MORE;
    } else if (r.match_available) {
      if (v = trees._tr_tally(r, 0, r.window[r.strstart - 1]), v && flush_block_only(r, !1), r.strstart++, r.lookahead--, r.strm.avail_out === 0)
        return BS_NEED_MORE;
    } else
      r.match_available = 1, r.strstart++, r.lookahead--;
  }
  return r.match_available && (v = trees._tr_tally(r, 0, r.window[r.strstart - 1]), r.match_available = 0), r.insert = r.strstart < MIN_MATCH - 1 ? r.strstart : MIN_MATCH - 1, u === Z_FINISH$2 ? (flush_block_only(r, !0), r.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : r.last_lit && (flush_block_only(r, !1), r.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function deflate_rle(r, u) {
  for (var d, v, w, C, L = r.window; ; ) {
    if (r.lookahead <= MAX_MATCH) {
      if (fill_window(r), r.lookahead <= MAX_MATCH && u === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (r.lookahead === 0)
        break;
    }
    if (r.match_length = 0, r.lookahead >= MIN_MATCH && r.strstart > 0 && (w = r.strstart - 1, v = L[w], v === L[++w] && v === L[++w] && v === L[++w])) {
      C = r.strstart + MAX_MATCH;
      do
        ;
      while (v === L[++w] && v === L[++w] && v === L[++w] && v === L[++w] && v === L[++w] && v === L[++w] && v === L[++w] && v === L[++w] && w < C);
      r.match_length = MAX_MATCH - (C - w), r.match_length > r.lookahead && (r.match_length = r.lookahead);
    }
    if (r.match_length >= MIN_MATCH ? (d = trees._tr_tally(r, 1, r.match_length - MIN_MATCH), r.lookahead -= r.match_length, r.strstart += r.match_length, r.match_length = 0) : (d = trees._tr_tally(r, 0, r.window[r.strstart]), r.lookahead--, r.strstart++), d && (flush_block_only(r, !1), r.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return r.insert = 0, u === Z_FINISH$2 ? (flush_block_only(r, !0), r.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : r.last_lit && (flush_block_only(r, !1), r.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function deflate_huff(r, u) {
  for (var d; ; ) {
    if (r.lookahead === 0 && (fill_window(r), r.lookahead === 0)) {
      if (u === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      break;
    }
    if (r.match_length = 0, d = trees._tr_tally(r, 0, r.window[r.strstart]), r.lookahead--, r.strstart++, d && (flush_block_only(r, !1), r.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return r.insert = 0, u === Z_FINISH$2 ? (flush_block_only(r, !0), r.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : r.last_lit && (flush_block_only(r, !1), r.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function Config(r, u, d, v, w) {
  this.good_length = r, this.max_lazy = u, this.nice_length = d, this.max_chain = v, this.func = w;
}
var configuration_table;
configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),
  /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),
  /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),
  /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),
  /* 3 */
  new Config(4, 4, 16, 16, deflate_slow),
  /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),
  /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),
  /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),
  /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),
  /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)
  /* 9 max compression */
];
function lm_init(r) {
  r.window_size = 2 * r.w_size, zero(r.head), r.max_lazy_match = configuration_table[r.level].max_lazy, r.good_match = configuration_table[r.level].good_length, r.nice_match = configuration_table[r.level].nice_length, r.max_chain_length = configuration_table[r.level].max_chain, r.strstart = 0, r.block_start = 0, r.lookahead = 0, r.insert = 0, r.match_length = r.prev_length = MIN_MATCH - 1, r.match_available = 0, r.ins_h = 0;
}
function DeflateState() {
  this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Z_DEFLATED$2, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new utils$5.Buf16(HEAP_SIZE * 2), this.dyn_dtree = new utils$5.Buf16((2 * D_CODES + 1) * 2), this.bl_tree = new utils$5.Buf16((2 * BL_CODES + 1) * 2), zero(this.dyn_ltree), zero(this.dyn_dtree), zero(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new utils$5.Buf16(MAX_BITS + 1), this.heap = new utils$5.Buf16(2 * L_CODES + 1), zero(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new utils$5.Buf16(2 * L_CODES + 1), zero(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
}
function deflateResetKeep(r) {
  var u;
  return !r || !r.state ? err(r, Z_STREAM_ERROR$1) : (r.total_in = r.total_out = 0, r.data_type = Z_UNKNOWN, u = r.state, u.pending = 0, u.pending_out = 0, u.wrap < 0 && (u.wrap = -u.wrap), u.status = u.wrap ? INIT_STATE : BUSY_STATE, r.adler = u.wrap === 2 ? 0 : 1, u.last_flush = Z_NO_FLUSH$1, trees._tr_init(u), Z_OK$2);
}
function deflateReset(r) {
  var u = deflateResetKeep(r);
  return u === Z_OK$2 && lm_init(r.state), u;
}
function deflateSetHeader(r, u) {
  return !r || !r.state || r.state.wrap !== 2 ? Z_STREAM_ERROR$1 : (r.state.gzhead = u, Z_OK$2);
}
function deflateInit2(r, u, d, v, w, C) {
  if (!r)
    return Z_STREAM_ERROR$1;
  var L = 1;
  if (u === Z_DEFAULT_COMPRESSION$1 && (u = 6), v < 0 ? (L = 0, v = -v) : v > 15 && (L = 2, v -= 16), w < 1 || w > MAX_MEM_LEVEL || d !== Z_DEFLATED$2 || v < 8 || v > 15 || u < 0 || u > 9 || C < 0 || C > Z_FIXED)
    return err(r, Z_STREAM_ERROR$1);
  v === 8 && (v = 9);
  var E = new DeflateState();
  return r.state = E, E.strm = r, E.wrap = L, E.gzhead = null, E.w_bits = v, E.w_size = 1 << E.w_bits, E.w_mask = E.w_size - 1, E.hash_bits = w + 7, E.hash_size = 1 << E.hash_bits, E.hash_mask = E.hash_size - 1, E.hash_shift = ~~((E.hash_bits + MIN_MATCH - 1) / MIN_MATCH), E.window = new utils$5.Buf8(E.w_size * 2), E.head = new utils$5.Buf16(E.hash_size), E.prev = new utils$5.Buf16(E.w_size), E.lit_bufsize = 1 << w + 6, E.pending_buf_size = E.lit_bufsize * 4, E.pending_buf = new utils$5.Buf8(E.pending_buf_size), E.d_buf = 1 * E.lit_bufsize, E.l_buf = (1 + 2) * E.lit_bufsize, E.level = u, E.strategy = C, E.method = d, deflateReset(r);
}
function deflateInit(r, u) {
  return deflateInit2(r, u, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);
}
function deflate$2(r, u) {
  var d, v, w, C;
  if (!r || !r.state || u > Z_BLOCK$1 || u < 0)
    return r ? err(r, Z_STREAM_ERROR$1) : Z_STREAM_ERROR$1;
  if (v = r.state, !r.output || !r.input && r.avail_in !== 0 || v.status === FINISH_STATE && u !== Z_FINISH$2)
    return err(r, r.avail_out === 0 ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$1);
  if (v.strm = r, d = v.last_flush, v.last_flush = u, v.status === INIT_STATE)
    if (v.wrap === 2)
      r.adler = 0, put_byte(v, 31), put_byte(v, 139), put_byte(v, 8), v.gzhead ? (put_byte(
        v,
        (v.gzhead.text ? 1 : 0) + (v.gzhead.hcrc ? 2 : 0) + (v.gzhead.extra ? 4 : 0) + (v.gzhead.name ? 8 : 0) + (v.gzhead.comment ? 16 : 0)
      ), put_byte(v, v.gzhead.time & 255), put_byte(v, v.gzhead.time >> 8 & 255), put_byte(v, v.gzhead.time >> 16 & 255), put_byte(v, v.gzhead.time >> 24 & 255), put_byte(v, v.level === 9 ? 2 : v.strategy >= Z_HUFFMAN_ONLY || v.level < 2 ? 4 : 0), put_byte(v, v.gzhead.os & 255), v.gzhead.extra && v.gzhead.extra.length && (put_byte(v, v.gzhead.extra.length & 255), put_byte(v, v.gzhead.extra.length >> 8 & 255)), v.gzhead.hcrc && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending, 0)), v.gzindex = 0, v.status = EXTRA_STATE) : (put_byte(v, 0), put_byte(v, 0), put_byte(v, 0), put_byte(v, 0), put_byte(v, 0), put_byte(v, v.level === 9 ? 2 : v.strategy >= Z_HUFFMAN_ONLY || v.level < 2 ? 4 : 0), put_byte(v, OS_CODE), v.status = BUSY_STATE);
    else {
      var L = Z_DEFLATED$2 + (v.w_bits - 8 << 4) << 8, E = -1;
      v.strategy >= Z_HUFFMAN_ONLY || v.level < 2 ? E = 0 : v.level < 6 ? E = 1 : v.level === 6 ? E = 2 : E = 3, L |= E << 6, v.strstart !== 0 && (L |= PRESET_DICT), L += 31 - L % 31, v.status = BUSY_STATE, putShortMSB(v, L), v.strstart !== 0 && (putShortMSB(v, r.adler >>> 16), putShortMSB(v, r.adler & 65535)), r.adler = 1;
    }
  if (v.status === EXTRA_STATE)
    if (v.gzhead.extra) {
      for (w = v.pending; v.gzindex < (v.gzhead.extra.length & 65535) && !(v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > w && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending - w, w)), flush_pending(r), w = v.pending, v.pending === v.pending_buf_size)); )
        put_byte(v, v.gzhead.extra[v.gzindex] & 255), v.gzindex++;
      v.gzhead.hcrc && v.pending > w && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending - w, w)), v.gzindex === v.gzhead.extra.length && (v.gzindex = 0, v.status = NAME_STATE);
    } else
      v.status = NAME_STATE;
  if (v.status === NAME_STATE)
    if (v.gzhead.name) {
      w = v.pending;
      do {
        if (v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > w && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending - w, w)), flush_pending(r), w = v.pending, v.pending === v.pending_buf_size)) {
          C = 1;
          break;
        }
        v.gzindex < v.gzhead.name.length ? C = v.gzhead.name.charCodeAt(v.gzindex++) & 255 : C = 0, put_byte(v, C);
      } while (C !== 0);
      v.gzhead.hcrc && v.pending > w && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending - w, w)), C === 0 && (v.gzindex = 0, v.status = COMMENT_STATE);
    } else
      v.status = COMMENT_STATE;
  if (v.status === COMMENT_STATE)
    if (v.gzhead.comment) {
      w = v.pending;
      do {
        if (v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > w && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending - w, w)), flush_pending(r), w = v.pending, v.pending === v.pending_buf_size)) {
          C = 1;
          break;
        }
        v.gzindex < v.gzhead.comment.length ? C = v.gzhead.comment.charCodeAt(v.gzindex++) & 255 : C = 0, put_byte(v, C);
      } while (C !== 0);
      v.gzhead.hcrc && v.pending > w && (r.adler = crc32$1(r.adler, v.pending_buf, v.pending - w, w)), C === 0 && (v.status = HCRC_STATE);
    } else
      v.status = HCRC_STATE;
  if (v.status === HCRC_STATE && (v.gzhead.hcrc ? (v.pending + 2 > v.pending_buf_size && flush_pending(r), v.pending + 2 <= v.pending_buf_size && (put_byte(v, r.adler & 255), put_byte(v, r.adler >> 8 & 255), r.adler = 0, v.status = BUSY_STATE)) : v.status = BUSY_STATE), v.pending !== 0) {
    if (flush_pending(r), r.avail_out === 0)
      return v.last_flush = -1, Z_OK$2;
  } else if (r.avail_in === 0 && rank(u) <= rank(d) && u !== Z_FINISH$2)
    return err(r, Z_BUF_ERROR$1);
  if (v.status === FINISH_STATE && r.avail_in !== 0)
    return err(r, Z_BUF_ERROR$1);
  if (r.avail_in !== 0 || v.lookahead !== 0 || u !== Z_NO_FLUSH$1 && v.status !== FINISH_STATE) {
    var V = v.strategy === Z_HUFFMAN_ONLY ? deflate_huff(v, u) : v.strategy === Z_RLE ? deflate_rle(v, u) : configuration_table[v.level].func(v, u);
    if ((V === BS_FINISH_STARTED || V === BS_FINISH_DONE) && (v.status = FINISH_STATE), V === BS_NEED_MORE || V === BS_FINISH_STARTED)
      return r.avail_out === 0 && (v.last_flush = -1), Z_OK$2;
    if (V === BS_BLOCK_DONE && (u === Z_PARTIAL_FLUSH ? trees._tr_align(v) : u !== Z_BLOCK$1 && (trees._tr_stored_block(v, 0, 0, !1), u === Z_FULL_FLUSH && (zero(v.head), v.lookahead === 0 && (v.strstart = 0, v.block_start = 0, v.insert = 0))), flush_pending(r), r.avail_out === 0))
      return v.last_flush = -1, Z_OK$2;
  }
  return u !== Z_FINISH$2 ? Z_OK$2 : v.wrap <= 0 ? Z_STREAM_END$2 : (v.wrap === 2 ? (put_byte(v, r.adler & 255), put_byte(v, r.adler >> 8 & 255), put_byte(v, r.adler >> 16 & 255), put_byte(v, r.adler >> 24 & 255), put_byte(v, r.total_in & 255), put_byte(v, r.total_in >> 8 & 255), put_byte(v, r.total_in >> 16 & 255), put_byte(v, r.total_in >> 24 & 255)) : (putShortMSB(v, r.adler >>> 16), putShortMSB(v, r.adler & 65535)), flush_pending(r), v.wrap > 0 && (v.wrap = -v.wrap), v.pending !== 0 ? Z_OK$2 : Z_STREAM_END$2);
}
function deflateEnd(r) {
  var u;
  return !r || !r.state ? Z_STREAM_ERROR$1 : (u = r.state.status, u !== INIT_STATE && u !== EXTRA_STATE && u !== NAME_STATE && u !== COMMENT_STATE && u !== HCRC_STATE && u !== BUSY_STATE && u !== FINISH_STATE ? err(r, Z_STREAM_ERROR$1) : (r.state = null, u === BUSY_STATE ? err(r, Z_DATA_ERROR$1) : Z_OK$2));
}
function deflateSetDictionary(r, u) {
  var d = u.length, v, w, C, L, E, V, N, z;
  if (!r || !r.state || (v = r.state, L = v.wrap, L === 2 || L === 1 && v.status !== INIT_STATE || v.lookahead))
    return Z_STREAM_ERROR$1;
  for (L === 1 && (r.adler = adler32$1(r.adler, u, d, 0)), v.wrap = 0, d >= v.w_size && (L === 0 && (zero(v.head), v.strstart = 0, v.block_start = 0, v.insert = 0), z = new utils$5.Buf8(v.w_size), utils$5.arraySet(z, u, d - v.w_size, v.w_size, 0), u = z, d = v.w_size), E = r.avail_in, V = r.next_in, N = r.input, r.avail_in = d, r.next_in = 0, r.input = u, fill_window(v); v.lookahead >= MIN_MATCH; ) {
    w = v.strstart, C = v.lookahead - (MIN_MATCH - 1);
    do
      v.ins_h = (v.ins_h << v.hash_shift ^ v.window[w + MIN_MATCH - 1]) & v.hash_mask, v.prev[w & v.w_mask] = v.head[v.ins_h], v.head[v.ins_h] = w, w++;
    while (--C);
    v.strstart = w, v.lookahead = MIN_MATCH - 1, fill_window(v);
  }
  return v.strstart += v.lookahead, v.block_start = v.strstart, v.insert = v.lookahead, v.lookahead = 0, v.match_length = v.prev_length = MIN_MATCH - 1, v.match_available = 0, r.next_in = V, r.input = N, r.avail_in = E, v.wrap = L, Z_OK$2;
}
deflate$3.deflateInit = deflateInit;
deflate$3.deflateInit2 = deflateInit2;
deflate$3.deflateReset = deflateReset;
deflate$3.deflateResetKeep = deflateResetKeep;
deflate$3.deflateSetHeader = deflateSetHeader;
deflate$3.deflate = deflate$2;
deflate$3.deflateEnd = deflateEnd;
deflate$3.deflateSetDictionary = deflateSetDictionary;
deflate$3.deflateInfo = "pako deflate (from Nodeca project)";
var strings$2 = {}, utils$4 = common, STR_APPLY_OK = !0, STR_APPLY_UIA_OK = !0;
try {
  String.fromCharCode.apply(null, [0]);
} catch (r) {
  STR_APPLY_OK = !1;
}
try {
  String.fromCharCode.apply(null, new Uint8Array(1));
} catch (r) {
  STR_APPLY_UIA_OK = !1;
}
var _utf8len = new utils$4.Buf8(256);
for (var q = 0; q < 256; q++)
  _utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;
_utf8len[254] = _utf8len[254] = 1;
strings$2.string2buf = function(r) {
  var u, d, v, w, C, L = r.length, E = 0;
  for (w = 0; w < L; w++)
    d = r.charCodeAt(w), (d & 64512) === 55296 && w + 1 < L && (v = r.charCodeAt(w + 1), (v & 64512) === 56320 && (d = 65536 + (d - 55296 << 10) + (v - 56320), w++)), E += d < 128 ? 1 : d < 2048 ? 2 : d < 65536 ? 3 : 4;
  for (u = new utils$4.Buf8(E), C = 0, w = 0; C < E; w++)
    d = r.charCodeAt(w), (d & 64512) === 55296 && w + 1 < L && (v = r.charCodeAt(w + 1), (v & 64512) === 56320 && (d = 65536 + (d - 55296 << 10) + (v - 56320), w++)), d < 128 ? u[C++] = d : d < 2048 ? (u[C++] = 192 | d >>> 6, u[C++] = 128 | d & 63) : d < 65536 ? (u[C++] = 224 | d >>> 12, u[C++] = 128 | d >>> 6 & 63, u[C++] = 128 | d & 63) : (u[C++] = 240 | d >>> 18, u[C++] = 128 | d >>> 12 & 63, u[C++] = 128 | d >>> 6 & 63, u[C++] = 128 | d & 63);
  return u;
};
function buf2binstring(r, u) {
  if (u < 65534 && (r.subarray && STR_APPLY_UIA_OK || !r.subarray && STR_APPLY_OK))
    return String.fromCharCode.apply(null, utils$4.shrinkBuf(r, u));
  for (var d = "", v = 0; v < u; v++)
    d += String.fromCharCode(r[v]);
  return d;
}
strings$2.buf2binstring = function(r) {
  return buf2binstring(r, r.length);
};
strings$2.binstring2buf = function(r) {
  for (var u = new utils$4.Buf8(r.length), d = 0, v = u.length; d < v; d++)
    u[d] = r.charCodeAt(d);
  return u;
};
strings$2.buf2string = function(r, u) {
  var d, v, w, C, L = u || r.length, E = new Array(L * 2);
  for (v = 0, d = 0; d < L; ) {
    if (w = r[d++], w < 128) {
      E[v++] = w;
      continue;
    }
    if (C = _utf8len[w], C > 4) {
      E[v++] = 65533, d += C - 1;
      continue;
    }
    for (w &= C === 2 ? 31 : C === 3 ? 15 : 7; C > 1 && d < L; )
      w = w << 6 | r[d++] & 63, C--;
    if (C > 1) {
      E[v++] = 65533;
      continue;
    }
    w < 65536 ? E[v++] = w : (w -= 65536, E[v++] = 55296 | w >> 10 & 1023, E[v++] = 56320 | w & 1023);
  }
  return buf2binstring(E, v);
};
strings$2.utf8border = function(r, u) {
  var d;
  for (u = u || r.length, u > r.length && (u = r.length), d = u - 1; d >= 0 && (r[d] & 192) === 128; )
    d--;
  return d < 0 || d === 0 ? u : d + _utf8len[r[d]] > u ? d : u;
};
function ZStream$2() {
  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
}
var zstream = ZStream$2, zlib_deflate = deflate$3, utils$3 = common, strings$1 = strings$2, msg$1 = messages, ZStream$1 = zstream, toString$1 = Object.prototype.toString, Z_NO_FLUSH = 0, Z_FINISH$1 = 4, Z_OK$1 = 0, Z_STREAM_END$1 = 1, Z_SYNC_FLUSH = 2, Z_DEFAULT_COMPRESSION = -1, Z_DEFAULT_STRATEGY = 0, Z_DEFLATED$1 = 8;
function Deflate(r) {
  if (!(this instanceof Deflate))
    return new Deflate(r);
  this.options = utils$3.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED$1,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ""
  }, r || {});
  var u = this.options;
  u.raw && u.windowBits > 0 ? u.windowBits = -u.windowBits : u.gzip && u.windowBits > 0 && u.windowBits < 16 && (u.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new ZStream$1(), this.strm.avail_out = 0;
  var d = zlib_deflate.deflateInit2(
    this.strm,
    u.level,
    u.method,
    u.windowBits,
    u.memLevel,
    u.strategy
  );
  if (d !== Z_OK$1)
    throw new Error(msg$1[d]);
  if (u.header && zlib_deflate.deflateSetHeader(this.strm, u.header), u.dictionary) {
    var v;
    if (typeof u.dictionary == "string" ? v = strings$1.string2buf(u.dictionary) : toString$1.call(u.dictionary) === "[object ArrayBuffer]" ? v = new Uint8Array(u.dictionary) : v = u.dictionary, d = zlib_deflate.deflateSetDictionary(this.strm, v), d !== Z_OK$1)
      throw new Error(msg$1[d]);
    this._dict_set = !0;
  }
}
Deflate.prototype.push = function(r, u) {
  var d = this.strm, v = this.options.chunkSize, w, C;
  if (this.ended)
    return !1;
  C = u === ~~u ? u : u === !0 ? Z_FINISH$1 : Z_NO_FLUSH, typeof r == "string" ? d.input = strings$1.string2buf(r) : toString$1.call(r) === "[object ArrayBuffer]" ? d.input = new Uint8Array(r) : d.input = r, d.next_in = 0, d.avail_in = d.input.length;
  do {
    if (d.avail_out === 0 && (d.output = new utils$3.Buf8(v), d.next_out = 0, d.avail_out = v), w = zlib_deflate.deflate(d, C), w !== Z_STREAM_END$1 && w !== Z_OK$1)
      return this.onEnd(w), this.ended = !0, !1;
    (d.avail_out === 0 || d.avail_in === 0 && (C === Z_FINISH$1 || C === Z_SYNC_FLUSH)) && (this.options.to === "string" ? this.onData(strings$1.buf2binstring(utils$3.shrinkBuf(d.output, d.next_out))) : this.onData(utils$3.shrinkBuf(d.output, d.next_out)));
  } while ((d.avail_in > 0 || d.avail_out === 0) && w !== Z_STREAM_END$1);
  return C === Z_FINISH$1 ? (w = zlib_deflate.deflateEnd(this.strm), this.onEnd(w), this.ended = !0, w === Z_OK$1) : (C === Z_SYNC_FLUSH && (this.onEnd(Z_OK$1), d.avail_out = 0), !0);
};
Deflate.prototype.onData = function(r) {
  this.chunks.push(r);
};
Deflate.prototype.onEnd = function(r) {
  r === Z_OK$1 && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = utils$3.flattenChunks(this.chunks)), this.chunks = [], this.err = r, this.msg = this.strm.msg;
};
function deflate$1(r, u) {
  var d = new Deflate(u);
  if (d.push(r, !0), d.err)
    throw d.msg || msg$1[d.err];
  return d.result;
}
function deflateRaw(r, u) {
  return u = u || {}, u.raw = !0, deflate$1(r, u);
}
function gzip(r, u) {
  return u = u || {}, u.gzip = !0, deflate$1(r, u);
}
deflate$4.Deflate = Deflate;
deflate$4.deflate = deflate$1;
deflate$4.deflateRaw = deflateRaw;
deflate$4.gzip = gzip;
var inflate$4 = {}, inflate$3 = {}, BAD$1 = 30, TYPE$1 = 12, inffast = function r(u, d) {
  var v, w, C, L, E, V, N, z, st, et, ct, Ct, At, qt, vt, _t, Et, ft, wt, Zt, Ot, bt, Xt, ie, Yt;
  v = u.state, w = u.next_in, ie = u.input, C = w + (u.avail_in - 5), L = u.next_out, Yt = u.output, E = L - (d - u.avail_out), V = L + (u.avail_out - 257), N = v.dmax, z = v.wsize, st = v.whave, et = v.wnext, ct = v.window, Ct = v.hold, At = v.bits, qt = v.lencode, vt = v.distcode, _t = (1 << v.lenbits) - 1, Et = (1 << v.distbits) - 1;
  t:
    do {
      At < 15 && (Ct += ie[w++] << At, At += 8, Ct += ie[w++] << At, At += 8), ft = qt[Ct & _t];
      e:
        for (; ; ) {
          if (wt = ft >>> 24, Ct >>>= wt, At -= wt, wt = ft >>> 16 & 255, wt === 0)
            Yt[L++] = ft & 65535;
          else if (wt & 16) {
            Zt = ft & 65535, wt &= 15, wt && (At < wt && (Ct += ie[w++] << At, At += 8), Zt += Ct & (1 << wt) - 1, Ct >>>= wt, At -= wt), At < 15 && (Ct += ie[w++] << At, At += 8, Ct += ie[w++] << At, At += 8), ft = vt[Ct & Et];
            i:
              for (; ; ) {
                if (wt = ft >>> 24, Ct >>>= wt, At -= wt, wt = ft >>> 16 & 255, wt & 16) {
                  if (Ot = ft & 65535, wt &= 15, At < wt && (Ct += ie[w++] << At, At += 8, At < wt && (Ct += ie[w++] << At, At += 8)), Ot += Ct & (1 << wt) - 1, Ot > N) {
                    u.msg = "invalid distance too far back", v.mode = BAD$1;
                    break t;
                  }
                  if (Ct >>>= wt, At -= wt, wt = L - E, Ot > wt) {
                    if (wt = Ot - wt, wt > st && v.sane) {
                      u.msg = "invalid distance too far back", v.mode = BAD$1;
                      break t;
                    }
                    if (bt = 0, Xt = ct, et === 0) {
                      if (bt += z - wt, wt < Zt) {
                        Zt -= wt;
                        do
                          Yt[L++] = ct[bt++];
                        while (--wt);
                        bt = L - Ot, Xt = Yt;
                      }
                    } else if (et < wt) {
                      if (bt += z + et - wt, wt -= et, wt < Zt) {
                        Zt -= wt;
                        do
                          Yt[L++] = ct[bt++];
                        while (--wt);
                        if (bt = 0, et < Zt) {
                          wt = et, Zt -= wt;
                          do
                            Yt[L++] = ct[bt++];
                          while (--wt);
                          bt = L - Ot, Xt = Yt;
                        }
                      }
                    } else if (bt += et - wt, wt < Zt) {
                      Zt -= wt;
                      do
                        Yt[L++] = ct[bt++];
                      while (--wt);
                      bt = L - Ot, Xt = Yt;
                    }
                    for (; Zt > 2; )
                      Yt[L++] = Xt[bt++], Yt[L++] = Xt[bt++], Yt[L++] = Xt[bt++], Zt -= 3;
                    Zt && (Yt[L++] = Xt[bt++], Zt > 1 && (Yt[L++] = Xt[bt++]));
                  } else {
                    bt = L - Ot;
                    do
                      Yt[L++] = Yt[bt++], Yt[L++] = Yt[bt++], Yt[L++] = Yt[bt++], Zt -= 3;
                    while (Zt > 2);
                    Zt && (Yt[L++] = Yt[bt++], Zt > 1 && (Yt[L++] = Yt[bt++]));
                  }
                } else if (wt & 64) {
                  u.msg = "invalid distance code", v.mode = BAD$1;
                  break t;
                } else {
                  ft = vt[(ft & 65535) + (Ct & (1 << wt) - 1)];
                  continue i;
                }
                break;
              }
          } else if (wt & 64)
            if (wt & 32) {
              v.mode = TYPE$1;
              break t;
            } else {
              u.msg = "invalid literal/length code", v.mode = BAD$1;
              break t;
            }
          else {
            ft = qt[(ft & 65535) + (Ct & (1 << wt) - 1)];
            continue e;
          }
          break;
        }
    } while (w < C && L < V);
  Zt = At >> 3, w -= Zt, At -= Zt << 3, Ct &= (1 << At) - 1, u.next_in = w, u.next_out = L, u.avail_in = w < C ? 5 + (C - w) : 5 - (w - C), u.avail_out = L < V ? 257 + (V - L) : 257 - (L - V), v.hold = Ct, v.bits = At;
}, utils$2 = common, MAXBITS = 15, ENOUGH_LENS$1 = 852, ENOUGH_DISTS$1 = 592, CODES$1 = 0, LENS$1 = 1, DISTS$1 = 2, lbase = [
  /* Length codes 257..285 base */
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  15,
  17,
  19,
  23,
  27,
  31,
  35,
  43,
  51,
  59,
  67,
  83,
  99,
  115,
  131,
  163,
  195,
  227,
  258,
  0,
  0
], lext = [
  /* Length codes 257..285 extra */
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  17,
  17,
  17,
  17,
  18,
  18,
  18,
  18,
  19,
  19,
  19,
  19,
  20,
  20,
  20,
  20,
  21,
  21,
  21,
  21,
  16,
  72,
  78
], dbase = [
  /* Distance codes 0..29 base */
  1,
  2,
  3,
  4,
  5,
  7,
  9,
  13,
  17,
  25,
  33,
  49,
  65,
  97,
  129,
  193,
  257,
  385,
  513,
  769,
  1025,
  1537,
  2049,
  3073,
  4097,
  6145,
  8193,
  12289,
  16385,
  24577,
  0,
  0
], dext = [
  /* Distance codes 0..29 extra */
  16,
  16,
  16,
  16,
  17,
  17,
  18,
  18,
  19,
  19,
  20,
  20,
  21,
  21,
  22,
  22,
  23,
  23,
  24,
  24,
  25,
  25,
  26,
  26,
  27,
  27,
  28,
  28,
  29,
  29,
  64,
  64
], inftrees = function r(u, d, v, w, C, L, E, V) {
  var N = V.bits, z = 0, st = 0, et = 0, ct = 0, Ct = 0, At = 0, qt = 0, vt = 0, _t = 0, Et = 0, ft, wt, Zt, Ot, bt, Xt = null, ie = 0, Yt, ae = new utils$2.Buf16(MAXBITS + 1), Re = new utils$2.Buf16(MAXBITS + 1), me = null, Fi = 0, ei, si, $e;
  for (z = 0; z <= MAXBITS; z++)
    ae[z] = 0;
  for (st = 0; st < w; st++)
    ae[d[v + st]]++;
  for (Ct = N, ct = MAXBITS; ct >= 1 && ae[ct] === 0; ct--)
    ;
  if (Ct > ct && (Ct = ct), ct === 0)
    return C[L++] = 1 << 24 | 64 << 16 | 0, C[L++] = 1 << 24 | 64 << 16 | 0, V.bits = 1, 0;
  for (et = 1; et < ct && ae[et] === 0; et++)
    ;
  for (Ct < et && (Ct = et), vt = 1, z = 1; z <= MAXBITS; z++)
    if (vt <<= 1, vt -= ae[z], vt < 0)
      return -1;
  if (vt > 0 && (u === CODES$1 || ct !== 1))
    return -1;
  for (Re[1] = 0, z = 1; z < MAXBITS; z++)
    Re[z + 1] = Re[z] + ae[z];
  for (st = 0; st < w; st++)
    d[v + st] !== 0 && (E[Re[d[v + st]]++] = st);
  if (u === CODES$1 ? (Xt = me = E, Yt = 19) : u === LENS$1 ? (Xt = lbase, ie -= 257, me = lext, Fi -= 257, Yt = 256) : (Xt = dbase, me = dext, Yt = -1), Et = 0, st = 0, z = et, bt = L, At = Ct, qt = 0, Zt = -1, _t = 1 << Ct, Ot = _t - 1, u === LENS$1 && _t > ENOUGH_LENS$1 || u === DISTS$1 && _t > ENOUGH_DISTS$1)
    return 1;
  for (; ; ) {
    ei = z - qt, E[st] < Yt ? (si = 0, $e = E[st]) : E[st] > Yt ? (si = me[Fi + E[st]], $e = Xt[ie + E[st]]) : (si = 32 + 64, $e = 0), ft = 1 << z - qt, wt = 1 << At, et = wt;
    do
      wt -= ft, C[bt + (Et >> qt) + wt] = ei << 24 | si << 16 | $e | 0;
    while (wt !== 0);
    for (ft = 1 << z - 1; Et & ft; )
      ft >>= 1;
    if (ft !== 0 ? (Et &= ft - 1, Et += ft) : Et = 0, st++, --ae[z] === 0) {
      if (z === ct)
        break;
      z = d[v + E[st]];
    }
    if (z > Ct && (Et & Ot) !== Zt) {
      for (qt === 0 && (qt = Ct), bt += et, At = z - qt, vt = 1 << At; At + qt < ct && (vt -= ae[At + qt], !(vt <= 0)); )
        At++, vt <<= 1;
      if (_t += 1 << At, u === LENS$1 && _t > ENOUGH_LENS$1 || u === DISTS$1 && _t > ENOUGH_DISTS$1)
        return 1;
      Zt = Et & Ot, C[Zt] = Ct << 24 | At << 16 | bt - L | 0;
    }
  }
  return Et !== 0 && (C[bt + Et] = z - qt << 24 | 64 << 16 | 0), V.bits = Ct, 0;
}, utils$1 = common, adler32 = adler32_1, crc32 = crc32_1, inflate_fast = inffast, inflate_table = inftrees, CODES = 0, LENS = 1, DISTS = 2, Z_FINISH = 4, Z_BLOCK = 5, Z_TREES = 6, Z_OK = 0, Z_STREAM_END = 1, Z_NEED_DICT = 2, Z_STREAM_ERROR = -2, Z_DATA_ERROR = -3, Z_MEM_ERROR = -4, Z_BUF_ERROR = -5, Z_DEFLATED = 8, HEAD = 1, FLAGS = 2, TIME = 3, OS = 4, EXLEN = 5, EXTRA = 6, NAME = 7, COMMENT = 8, HCRC = 9, DICTID = 10, DICT = 11, TYPE = 12, TYPEDO = 13, STORED = 14, COPY_ = 15, COPY = 16, TABLE = 17, LENLENS = 18, CODELENS = 19, LEN_ = 20, LEN = 21, LENEXT = 22, DIST = 23, DISTEXT = 24, MATCH = 25, LIT = 26, CHECK = 27, LENGTH = 28, DONE = 29, BAD = 30, MEM = 31, SYNC = 32, ENOUGH_LENS = 852, ENOUGH_DISTS = 592, MAX_WBITS = 15, DEF_WBITS = MAX_WBITS;
function zswap32(r) {
  return (r >>> 24 & 255) + (r >>> 8 & 65280) + ((r & 65280) << 8) + ((r & 255) << 24);
}
function InflateState() {
  this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new utils$1.Buf16(320), this.work = new utils$1.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
}
function inflateResetKeep(r) {
  var u;
  return !r || !r.state ? Z_STREAM_ERROR : (u = r.state, r.total_in = r.total_out = u.total = 0, r.msg = "", u.wrap && (r.adler = u.wrap & 1), u.mode = HEAD, u.last = 0, u.havedict = 0, u.dmax = 32768, u.head = null, u.hold = 0, u.bits = 0, u.lencode = u.lendyn = new utils$1.Buf32(ENOUGH_LENS), u.distcode = u.distdyn = new utils$1.Buf32(ENOUGH_DISTS), u.sane = 1, u.back = -1, Z_OK);
}
function inflateReset(r) {
  var u;
  return !r || !r.state ? Z_STREAM_ERROR : (u = r.state, u.wsize = 0, u.whave = 0, u.wnext = 0, inflateResetKeep(r));
}
function inflateReset2(r, u) {
  var d, v;
  return !r || !r.state || (v = r.state, u < 0 ? (d = 0, u = -u) : (d = (u >> 4) + 1, u < 48 && (u &= 15)), u && (u < 8 || u > 15)) ? Z_STREAM_ERROR : (v.window !== null && v.wbits !== u && (v.window = null), v.wrap = d, v.wbits = u, inflateReset(r));
}
function inflateInit2(r, u) {
  var d, v;
  return r ? (v = new InflateState(), r.state = v, v.window = null, d = inflateReset2(r, u), d !== Z_OK && (r.state = null), d) : Z_STREAM_ERROR;
}
function inflateInit(r) {
  return inflateInit2(r, DEF_WBITS);
}
var virgin = !0, lenfix, distfix;
function fixedtables(r) {
  if (virgin) {
    var u;
    for (lenfix = new utils$1.Buf32(512), distfix = new utils$1.Buf32(32), u = 0; u < 144; )
      r.lens[u++] = 8;
    for (; u < 256; )
      r.lens[u++] = 9;
    for (; u < 280; )
      r.lens[u++] = 7;
    for (; u < 288; )
      r.lens[u++] = 8;
    for (inflate_table(LENS, r.lens, 0, 288, lenfix, 0, r.work, { bits: 9 }), u = 0; u < 32; )
      r.lens[u++] = 5;
    inflate_table(DISTS, r.lens, 0, 32, distfix, 0, r.work, { bits: 5 }), virgin = !1;
  }
  r.lencode = lenfix, r.lenbits = 9, r.distcode = distfix, r.distbits = 5;
}
function updatewindow(r, u, d, v) {
  var w, C = r.state;
  return C.window === null && (C.wsize = 1 << C.wbits, C.wnext = 0, C.whave = 0, C.window = new utils$1.Buf8(C.wsize)), v >= C.wsize ? (utils$1.arraySet(C.window, u, d - C.wsize, C.wsize, 0), C.wnext = 0, C.whave = C.wsize) : (w = C.wsize - C.wnext, w > v && (w = v), utils$1.arraySet(C.window, u, d - v, w, C.wnext), v -= w, v ? (utils$1.arraySet(C.window, u, d - v, v, 0), C.wnext = v, C.whave = C.wsize) : (C.wnext += w, C.wnext === C.wsize && (C.wnext = 0), C.whave < C.wsize && (C.whave += w))), 0;
}
function inflate$2(r, u) {
  var d, v, w, C, L, E, V, N, z, st, et, ct, Ct, At, qt = 0, vt, _t, Et, ft, wt, Zt, Ot, bt, Xt = new utils$1.Buf8(4), ie, Yt, ae = (
    /* permutation of code lengths */
    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
  );
  if (!r || !r.state || !r.output || !r.input && r.avail_in !== 0)
    return Z_STREAM_ERROR;
  d = r.state, d.mode === TYPE && (d.mode = TYPEDO), L = r.next_out, w = r.output, V = r.avail_out, C = r.next_in, v = r.input, E = r.avail_in, N = d.hold, z = d.bits, st = E, et = V, bt = Z_OK;
  t:
    for (; ; )
      switch (d.mode) {
        case HEAD:
          if (d.wrap === 0) {
            d.mode = TYPEDO;
            break;
          }
          for (; z < 16; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          if (d.wrap & 2 && N === 35615) {
            d.check = 0, Xt[0] = N & 255, Xt[1] = N >>> 8 & 255, d.check = crc32(d.check, Xt, 2, 0), N = 0, z = 0, d.mode = FLAGS;
            break;
          }
          if (d.flags = 0, d.head && (d.head.done = !1), !(d.wrap & 1) || /* check if zlib header allowed */
          (((N & 255) << 8) + (N >> 8)) % 31) {
            r.msg = "incorrect header check", d.mode = BAD;
            break;
          }
          if ((N & 15) !== Z_DEFLATED) {
            r.msg = "unknown compression method", d.mode = BAD;
            break;
          }
          if (N >>>= 4, z -= 4, Ot = (N & 15) + 8, d.wbits === 0)
            d.wbits = Ot;
          else if (Ot > d.wbits) {
            r.msg = "invalid window size", d.mode = BAD;
            break;
          }
          d.dmax = 1 << Ot, r.adler = d.check = 1, d.mode = N & 512 ? DICTID : TYPE, N = 0, z = 0;
          break;
        case FLAGS:
          for (; z < 16; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          if (d.flags = N, (d.flags & 255) !== Z_DEFLATED) {
            r.msg = "unknown compression method", d.mode = BAD;
            break;
          }
          if (d.flags & 57344) {
            r.msg = "unknown header flags set", d.mode = BAD;
            break;
          }
          d.head && (d.head.text = N >> 8 & 1), d.flags & 512 && (Xt[0] = N & 255, Xt[1] = N >>> 8 & 255, d.check = crc32(d.check, Xt, 2, 0)), N = 0, z = 0, d.mode = TIME;
        case TIME:
          for (; z < 32; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          d.head && (d.head.time = N), d.flags & 512 && (Xt[0] = N & 255, Xt[1] = N >>> 8 & 255, Xt[2] = N >>> 16 & 255, Xt[3] = N >>> 24 & 255, d.check = crc32(d.check, Xt, 4, 0)), N = 0, z = 0, d.mode = OS;
        case OS:
          for (; z < 16; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          d.head && (d.head.xflags = N & 255, d.head.os = N >> 8), d.flags & 512 && (Xt[0] = N & 255, Xt[1] = N >>> 8 & 255, d.check = crc32(d.check, Xt, 2, 0)), N = 0, z = 0, d.mode = EXLEN;
        case EXLEN:
          if (d.flags & 1024) {
            for (; z < 16; ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            d.length = N, d.head && (d.head.extra_len = N), d.flags & 512 && (Xt[0] = N & 255, Xt[1] = N >>> 8 & 255, d.check = crc32(d.check, Xt, 2, 0)), N = 0, z = 0;
          } else
            d.head && (d.head.extra = null);
          d.mode = EXTRA;
        case EXTRA:
          if (d.flags & 1024 && (ct = d.length, ct > E && (ct = E), ct && (d.head && (Ot = d.head.extra_len - d.length, d.head.extra || (d.head.extra = new Array(d.head.extra_len)), utils$1.arraySet(
            d.head.extra,
            v,
            C,
            // extra field is limited to 65536 bytes
            // - no need for additional size check
            ct,
            /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
            Ot
          )), d.flags & 512 && (d.check = crc32(d.check, v, ct, C)), E -= ct, C += ct, d.length -= ct), d.length))
            break t;
          d.length = 0, d.mode = NAME;
        case NAME:
          if (d.flags & 2048) {
            if (E === 0)
              break t;
            ct = 0;
            do
              Ot = v[C + ct++], d.head && Ot && d.length < 65536 && (d.head.name += String.fromCharCode(Ot));
            while (Ot && ct < E);
            if (d.flags & 512 && (d.check = crc32(d.check, v, ct, C)), E -= ct, C += ct, Ot)
              break t;
          } else
            d.head && (d.head.name = null);
          d.length = 0, d.mode = COMMENT;
        case COMMENT:
          if (d.flags & 4096) {
            if (E === 0)
              break t;
            ct = 0;
            do
              Ot = v[C + ct++], d.head && Ot && d.length < 65536 && (d.head.comment += String.fromCharCode(Ot));
            while (Ot && ct < E);
            if (d.flags & 512 && (d.check = crc32(d.check, v, ct, C)), E -= ct, C += ct, Ot)
              break t;
          } else
            d.head && (d.head.comment = null);
          d.mode = HCRC;
        case HCRC:
          if (d.flags & 512) {
            for (; z < 16; ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            if (N !== (d.check & 65535)) {
              r.msg = "header crc mismatch", d.mode = BAD;
              break;
            }
            N = 0, z = 0;
          }
          d.head && (d.head.hcrc = d.flags >> 9 & 1, d.head.done = !0), r.adler = d.check = 0, d.mode = TYPE;
          break;
        case DICTID:
          for (; z < 32; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          r.adler = d.check = zswap32(N), N = 0, z = 0, d.mode = DICT;
        case DICT:
          if (d.havedict === 0)
            return r.next_out = L, r.avail_out = V, r.next_in = C, r.avail_in = E, d.hold = N, d.bits = z, Z_NEED_DICT;
          r.adler = d.check = 1, d.mode = TYPE;
        case TYPE:
          if (u === Z_BLOCK || u === Z_TREES)
            break t;
        case TYPEDO:
          if (d.last) {
            N >>>= z & 7, z -= z & 7, d.mode = CHECK;
            break;
          }
          for (; z < 3; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          switch (d.last = N & 1, N >>>= 1, z -= 1, N & 3) {
            case 0:
              d.mode = STORED;
              break;
            case 1:
              if (fixedtables(d), d.mode = LEN_, u === Z_TREES) {
                N >>>= 2, z -= 2;
                break t;
              }
              break;
            case 2:
              d.mode = TABLE;
              break;
            case 3:
              r.msg = "invalid block type", d.mode = BAD;
          }
          N >>>= 2, z -= 2;
          break;
        case STORED:
          for (N >>>= z & 7, z -= z & 7; z < 32; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          if ((N & 65535) !== (N >>> 16 ^ 65535)) {
            r.msg = "invalid stored block lengths", d.mode = BAD;
            break;
          }
          if (d.length = N & 65535, N = 0, z = 0, d.mode = COPY_, u === Z_TREES)
            break t;
        case COPY_:
          d.mode = COPY;
        case COPY:
          if (ct = d.length, ct) {
            if (ct > E && (ct = E), ct > V && (ct = V), ct === 0)
              break t;
            utils$1.arraySet(w, v, C, ct, L), E -= ct, C += ct, V -= ct, L += ct, d.length -= ct;
            break;
          }
          d.mode = TYPE;
          break;
        case TABLE:
          for (; z < 14; ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          if (d.nlen = (N & 31) + 257, N >>>= 5, z -= 5, d.ndist = (N & 31) + 1, N >>>= 5, z -= 5, d.ncode = (N & 15) + 4, N >>>= 4, z -= 4, d.nlen > 286 || d.ndist > 30) {
            r.msg = "too many length or distance symbols", d.mode = BAD;
            break;
          }
          d.have = 0, d.mode = LENLENS;
        case LENLENS:
          for (; d.have < d.ncode; ) {
            for (; z < 3; ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            d.lens[ae[d.have++]] = N & 7, N >>>= 3, z -= 3;
          }
          for (; d.have < 19; )
            d.lens[ae[d.have++]] = 0;
          if (d.lencode = d.lendyn, d.lenbits = 7, ie = { bits: d.lenbits }, bt = inflate_table(CODES, d.lens, 0, 19, d.lencode, 0, d.work, ie), d.lenbits = ie.bits, bt) {
            r.msg = "invalid code lengths set", d.mode = BAD;
            break;
          }
          d.have = 0, d.mode = CODELENS;
        case CODELENS:
          for (; d.have < d.nlen + d.ndist; ) {
            for (; qt = d.lencode[N & (1 << d.lenbits) - 1], vt = qt >>> 24, _t = qt >>> 16 & 255, Et = qt & 65535, !(vt <= z); ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            if (Et < 16)
              N >>>= vt, z -= vt, d.lens[d.have++] = Et;
            else {
              if (Et === 16) {
                for (Yt = vt + 2; z < Yt; ) {
                  if (E === 0)
                    break t;
                  E--, N += v[C++] << z, z += 8;
                }
                if (N >>>= vt, z -= vt, d.have === 0) {
                  r.msg = "invalid bit length repeat", d.mode = BAD;
                  break;
                }
                Ot = d.lens[d.have - 1], ct = 3 + (N & 3), N >>>= 2, z -= 2;
              } else if (Et === 17) {
                for (Yt = vt + 3; z < Yt; ) {
                  if (E === 0)
                    break t;
                  E--, N += v[C++] << z, z += 8;
                }
                N >>>= vt, z -= vt, Ot = 0, ct = 3 + (N & 7), N >>>= 3, z -= 3;
              } else {
                for (Yt = vt + 7; z < Yt; ) {
                  if (E === 0)
                    break t;
                  E--, N += v[C++] << z, z += 8;
                }
                N >>>= vt, z -= vt, Ot = 0, ct = 11 + (N & 127), N >>>= 7, z -= 7;
              }
              if (d.have + ct > d.nlen + d.ndist) {
                r.msg = "invalid bit length repeat", d.mode = BAD;
                break;
              }
              for (; ct--; )
                d.lens[d.have++] = Ot;
            }
          }
          if (d.mode === BAD)
            break;
          if (d.lens[256] === 0) {
            r.msg = "invalid code -- missing end-of-block", d.mode = BAD;
            break;
          }
          if (d.lenbits = 9, ie = { bits: d.lenbits }, bt = inflate_table(LENS, d.lens, 0, d.nlen, d.lencode, 0, d.work, ie), d.lenbits = ie.bits, bt) {
            r.msg = "invalid literal/lengths set", d.mode = BAD;
            break;
          }
          if (d.distbits = 6, d.distcode = d.distdyn, ie = { bits: d.distbits }, bt = inflate_table(DISTS, d.lens, d.nlen, d.ndist, d.distcode, 0, d.work, ie), d.distbits = ie.bits, bt) {
            r.msg = "invalid distances set", d.mode = BAD;
            break;
          }
          if (d.mode = LEN_, u === Z_TREES)
            break t;
        case LEN_:
          d.mode = LEN;
        case LEN:
          if (E >= 6 && V >= 258) {
            r.next_out = L, r.avail_out = V, r.next_in = C, r.avail_in = E, d.hold = N, d.bits = z, inflate_fast(r, et), L = r.next_out, w = r.output, V = r.avail_out, C = r.next_in, v = r.input, E = r.avail_in, N = d.hold, z = d.bits, d.mode === TYPE && (d.back = -1);
            break;
          }
          for (d.back = 0; qt = d.lencode[N & (1 << d.lenbits) - 1], vt = qt >>> 24, _t = qt >>> 16 & 255, Et = qt & 65535, !(vt <= z); ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          if (_t && !(_t & 240)) {
            for (ft = vt, wt = _t, Zt = Et; qt = d.lencode[Zt + ((N & (1 << ft + wt) - 1) >> ft)], vt = qt >>> 24, _t = qt >>> 16 & 255, Et = qt & 65535, !(ft + vt <= z); ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            N >>>= ft, z -= ft, d.back += ft;
          }
          if (N >>>= vt, z -= vt, d.back += vt, d.length = Et, _t === 0) {
            d.mode = LIT;
            break;
          }
          if (_t & 32) {
            d.back = -1, d.mode = TYPE;
            break;
          }
          if (_t & 64) {
            r.msg = "invalid literal/length code", d.mode = BAD;
            break;
          }
          d.extra = _t & 15, d.mode = LENEXT;
        case LENEXT:
          if (d.extra) {
            for (Yt = d.extra; z < Yt; ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            d.length += N & (1 << d.extra) - 1, N >>>= d.extra, z -= d.extra, d.back += d.extra;
          }
          d.was = d.length, d.mode = DIST;
        case DIST:
          for (; qt = d.distcode[N & (1 << d.distbits) - 1], vt = qt >>> 24, _t = qt >>> 16 & 255, Et = qt & 65535, !(vt <= z); ) {
            if (E === 0)
              break t;
            E--, N += v[C++] << z, z += 8;
          }
          if (!(_t & 240)) {
            for (ft = vt, wt = _t, Zt = Et; qt = d.distcode[Zt + ((N & (1 << ft + wt) - 1) >> ft)], vt = qt >>> 24, _t = qt >>> 16 & 255, Et = qt & 65535, !(ft + vt <= z); ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            N >>>= ft, z -= ft, d.back += ft;
          }
          if (N >>>= vt, z -= vt, d.back += vt, _t & 64) {
            r.msg = "invalid distance code", d.mode = BAD;
            break;
          }
          d.offset = Et, d.extra = _t & 15, d.mode = DISTEXT;
        case DISTEXT:
          if (d.extra) {
            for (Yt = d.extra; z < Yt; ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            d.offset += N & (1 << d.extra) - 1, N >>>= d.extra, z -= d.extra, d.back += d.extra;
          }
          if (d.offset > d.dmax) {
            r.msg = "invalid distance too far back", d.mode = BAD;
            break;
          }
          d.mode = MATCH;
        case MATCH:
          if (V === 0)
            break t;
          if (ct = et - V, d.offset > ct) {
            if (ct = d.offset - ct, ct > d.whave && d.sane) {
              r.msg = "invalid distance too far back", d.mode = BAD;
              break;
            }
            ct > d.wnext ? (ct -= d.wnext, Ct = d.wsize - ct) : Ct = d.wnext - ct, ct > d.length && (ct = d.length), At = d.window;
          } else
            At = w, Ct = L - d.offset, ct = d.length;
          ct > V && (ct = V), V -= ct, d.length -= ct;
          do
            w[L++] = At[Ct++];
          while (--ct);
          d.length === 0 && (d.mode = LEN);
          break;
        case LIT:
          if (V === 0)
            break t;
          w[L++] = d.length, V--, d.mode = LEN;
          break;
        case CHECK:
          if (d.wrap) {
            for (; z < 32; ) {
              if (E === 0)
                break t;
              E--, N |= v[C++] << z, z += 8;
            }
            if (et -= V, r.total_out += et, d.total += et, et && (r.adler = d.check = /*UPDATE(state.check, put - _out, _out);*/
            d.flags ? crc32(d.check, w, et, L - et) : adler32(d.check, w, et, L - et)), et = V, (d.flags ? N : zswap32(N)) !== d.check) {
              r.msg = "incorrect data check", d.mode = BAD;
              break;
            }
            N = 0, z = 0;
          }
          d.mode = LENGTH;
        case LENGTH:
          if (d.wrap && d.flags) {
            for (; z < 32; ) {
              if (E === 0)
                break t;
              E--, N += v[C++] << z, z += 8;
            }
            if (N !== (d.total & 4294967295)) {
              r.msg = "incorrect length check", d.mode = BAD;
              break;
            }
            N = 0, z = 0;
          }
          d.mode = DONE;
        case DONE:
          bt = Z_STREAM_END;
          break t;
        case BAD:
          bt = Z_DATA_ERROR;
          break t;
        case MEM:
          return Z_MEM_ERROR;
        case SYNC:
        default:
          return Z_STREAM_ERROR;
      }
  return r.next_out = L, r.avail_out = V, r.next_in = C, r.avail_in = E, d.hold = N, d.bits = z, (d.wsize || et !== r.avail_out && d.mode < BAD && (d.mode < CHECK || u !== Z_FINISH)) && updatewindow(r, r.output, r.next_out, et - r.avail_out), st -= r.avail_in, et -= r.avail_out, r.total_in += st, r.total_out += et, d.total += et, d.wrap && et && (r.adler = d.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
  d.flags ? crc32(d.check, w, et, r.next_out - et) : adler32(d.check, w, et, r.next_out - et)), r.data_type = d.bits + (d.last ? 64 : 0) + (d.mode === TYPE ? 128 : 0) + (d.mode === LEN_ || d.mode === COPY_ ? 256 : 0), (st === 0 && et === 0 || u === Z_FINISH) && bt === Z_OK && (bt = Z_BUF_ERROR), bt;
}
function inflateEnd(r) {
  if (!r || !r.state)
    return Z_STREAM_ERROR;
  var u = r.state;
  return u.window && (u.window = null), r.state = null, Z_OK;
}
function inflateGetHeader(r, u) {
  var d;
  return !r || !r.state || (d = r.state, !(d.wrap & 2)) ? Z_STREAM_ERROR : (d.head = u, u.done = !1, Z_OK);
}
function inflateSetDictionary(r, u) {
  var d = u.length, v, w, C;
  return !r || !r.state || (v = r.state, v.wrap !== 0 && v.mode !== DICT) ? Z_STREAM_ERROR : v.mode === DICT && (w = 1, w = adler32(w, u, d, 0), w !== v.check) ? Z_DATA_ERROR : (C = updatewindow(r, u, d, d), C ? (v.mode = MEM, Z_MEM_ERROR) : (v.havedict = 1, Z_OK));
}
inflate$3.inflateReset = inflateReset;
inflate$3.inflateReset2 = inflateReset2;
inflate$3.inflateResetKeep = inflateResetKeep;
inflate$3.inflateInit = inflateInit;
inflate$3.inflateInit2 = inflateInit2;
inflate$3.inflate = inflate$2;
inflate$3.inflateEnd = inflateEnd;
inflate$3.inflateGetHeader = inflateGetHeader;
inflate$3.inflateSetDictionary = inflateSetDictionary;
inflate$3.inflateInfo = "pako inflate (from Nodeca project)";
var constants$1 = {
  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH: 0,
  Z_PARTIAL_FLUSH: 1,
  Z_SYNC_FLUSH: 2,
  Z_FULL_FLUSH: 3,
  Z_FINISH: 4,
  Z_BLOCK: 5,
  Z_TREES: 6,
  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK: 0,
  Z_STREAM_END: 1,
  Z_NEED_DICT: 2,
  Z_ERRNO: -1,
  Z_STREAM_ERROR: -2,
  Z_DATA_ERROR: -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR: -5,
  //Z_VERSION_ERROR: -6,
  /* compression levels */
  Z_NO_COMPRESSION: 0,
  Z_BEST_SPEED: 1,
  Z_BEST_COMPRESSION: 9,
  Z_DEFAULT_COMPRESSION: -1,
  Z_FILTERED: 1,
  Z_HUFFMAN_ONLY: 2,
  Z_RLE: 3,
  Z_FIXED: 4,
  Z_DEFAULT_STRATEGY: 0,
  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY: 0,
  Z_TEXT: 1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN: 2,
  /* The deflate compression method */
  Z_DEFLATED: 8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};
function GZheader$1() {
  this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
}
var gzheader = GZheader$1, zlib_inflate = inflate$3, utils = common, strings = strings$2, c = constants$1, msg = messages, ZStream = zstream, GZheader = gzheader, toString = Object.prototype.toString;
function Inflate(r) {
  if (!(this instanceof Inflate))
    return new Inflate(r);
  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ""
  }, r || {});
  var u = this.options;
  u.raw && u.windowBits >= 0 && u.windowBits < 16 && (u.windowBits = -u.windowBits, u.windowBits === 0 && (u.windowBits = -15)), u.windowBits >= 0 && u.windowBits < 16 && !(r && r.windowBits) && (u.windowBits += 32), u.windowBits > 15 && u.windowBits < 48 && (u.windowBits & 15 || (u.windowBits |= 15)), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new ZStream(), this.strm.avail_out = 0;
  var d = zlib_inflate.inflateInit2(
    this.strm,
    u.windowBits
  );
  if (d !== c.Z_OK)
    throw new Error(msg[d]);
  if (this.header = new GZheader(), zlib_inflate.inflateGetHeader(this.strm, this.header), u.dictionary && (typeof u.dictionary == "string" ? u.dictionary = strings.string2buf(u.dictionary) : toString.call(u.dictionary) === "[object ArrayBuffer]" && (u.dictionary = new Uint8Array(u.dictionary)), u.raw && (d = zlib_inflate.inflateSetDictionary(this.strm, u.dictionary), d !== c.Z_OK)))
    throw new Error(msg[d]);
}
Inflate.prototype.push = function(r, u) {
  var d = this.strm, v = this.options.chunkSize, w = this.options.dictionary, C, L, E, V, N, z = !1;
  if (this.ended)
    return !1;
  L = u === ~~u ? u : u === !0 ? c.Z_FINISH : c.Z_NO_FLUSH, typeof r == "string" ? d.input = strings.binstring2buf(r) : toString.call(r) === "[object ArrayBuffer]" ? d.input = new Uint8Array(r) : d.input = r, d.next_in = 0, d.avail_in = d.input.length;
  do {
    if (d.avail_out === 0 && (d.output = new utils.Buf8(v), d.next_out = 0, d.avail_out = v), C = zlib_inflate.inflate(d, c.Z_NO_FLUSH), C === c.Z_NEED_DICT && w && (C = zlib_inflate.inflateSetDictionary(this.strm, w)), C === c.Z_BUF_ERROR && z === !0 && (C = c.Z_OK, z = !1), C !== c.Z_STREAM_END && C !== c.Z_OK)
      return this.onEnd(C), this.ended = !0, !1;
    d.next_out && (d.avail_out === 0 || C === c.Z_STREAM_END || d.avail_in === 0 && (L === c.Z_FINISH || L === c.Z_SYNC_FLUSH)) && (this.options.to === "string" ? (E = strings.utf8border(d.output, d.next_out), V = d.next_out - E, N = strings.buf2string(d.output, E), d.next_out = V, d.avail_out = v - V, V && utils.arraySet(d.output, d.output, E, V, 0), this.onData(N)) : this.onData(utils.shrinkBuf(d.output, d.next_out))), d.avail_in === 0 && d.avail_out === 0 && (z = !0);
  } while ((d.avail_in > 0 || d.avail_out === 0) && C !== c.Z_STREAM_END);
  return C === c.Z_STREAM_END && (L = c.Z_FINISH), L === c.Z_FINISH ? (C = zlib_inflate.inflateEnd(this.strm), this.onEnd(C), this.ended = !0, C === c.Z_OK) : (L === c.Z_SYNC_FLUSH && (this.onEnd(c.Z_OK), d.avail_out = 0), !0);
};
Inflate.prototype.onData = function(r) {
  this.chunks.push(r);
};
Inflate.prototype.onEnd = function(r) {
  r === c.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = utils.flattenChunks(this.chunks)), this.chunks = [], this.err = r, this.msg = this.strm.msg;
};
function inflate$1(r, u) {
  var d = new Inflate(u);
  if (d.push(r, !0), d.err)
    throw d.msg || msg[d.err];
  return d.result;
}
function inflateRaw(r, u) {
  return u = u || {}, u.raw = !0, inflate$1(r, u);
}
inflate$4.Inflate = Inflate;
inflate$4.inflate = inflate$1;
inflate$4.inflateRaw = inflateRaw;
inflate$4.ungzip = inflate$1;
var assign = common.assign, deflate = deflate$4, inflate = inflate$4, constants = constants$1, pako = {};
assign(pako, deflate, inflate, constants);
var pako_1 = pako;
const index$1 = /* @__PURE__ */ getDefaultExportFromCjs(pako_1), index$2 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: index$1
}, [pako_1]);
var getRandomValues, rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues && (getRandomValues = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto < "u" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto), !getRandomValues))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return getRandomValues(rnds8);
}
const REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
function validate(r) {
  return typeof r == "string" && REGEX.test(r);
}
var byteToHex = [];
for (var i = 0; i < 256; ++i)
  byteToHex.push((i + 256).toString(16).substr(1));
function stringify(r) {
  var u = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, d = (byteToHex[r[u + 0]] + byteToHex[r[u + 1]] + byteToHex[r[u + 2]] + byteToHex[r[u + 3]] + "-" + byteToHex[r[u + 4]] + byteToHex[r[u + 5]] + "-" + byteToHex[r[u + 6]] + byteToHex[r[u + 7]] + "-" + byteToHex[r[u + 8]] + byteToHex[r[u + 9]] + "-" + byteToHex[r[u + 10]] + byteToHex[r[u + 11]] + byteToHex[r[u + 12]] + byteToHex[r[u + 13]] + byteToHex[r[u + 14]] + byteToHex[r[u + 15]]).toLowerCase();
  if (!validate(d))
    throw TypeError("Stringified UUID is invalid");
  return d;
}
var _nodeId, _clockseq, _lastMSecs = 0, _lastNSecs = 0;
function v1(r, u, d) {
  var v = u && d || 0, w = u || new Array(16);
  r = r || {};
  var C = r.node || _nodeId, L = r.clockseq !== void 0 ? r.clockseq : _clockseq;
  if (C == null || L == null) {
    var E = r.random || (r.rng || rng)();
    C == null && (C = _nodeId = [E[0] | 1, E[1], E[2], E[3], E[4], E[5]]), L == null && (L = _clockseq = (E[6] << 8 | E[7]) & 16383);
  }
  var V = r.msecs !== void 0 ? r.msecs : Date.now(), N = r.nsecs !== void 0 ? r.nsecs : _lastNSecs + 1, z = V - _lastMSecs + (N - _lastNSecs) / 1e4;
  if (z < 0 && r.clockseq === void 0 && (L = L + 1 & 16383), (z < 0 || V > _lastMSecs) && r.nsecs === void 0 && (N = 0), N >= 1e4)
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  _lastMSecs = V, _lastNSecs = N, _clockseq = L, V += 122192928e5;
  var st = ((V & 268435455) * 1e4 + N) % 4294967296;
  w[v++] = st >>> 24 & 255, w[v++] = st >>> 16 & 255, w[v++] = st >>> 8 & 255, w[v++] = st & 255;
  var et = V / 4294967296 * 1e4 & 268435455;
  w[v++] = et >>> 8 & 255, w[v++] = et & 255, w[v++] = et >>> 24 & 15 | 16, w[v++] = et >>> 16 & 255, w[v++] = L >>> 8 | 128, w[v++] = L & 255;
  for (var ct = 0; ct < 6; ++ct)
    w[v + ct] = C[ct];
  return u || stringify(w);
}
function parse(r) {
  if (!validate(r))
    throw TypeError("Invalid UUID");
  var u, d = new Uint8Array(16);
  return d[0] = (u = parseInt(r.slice(0, 8), 16)) >>> 24, d[1] = u >>> 16 & 255, d[2] = u >>> 8 & 255, d[3] = u & 255, d[4] = (u = parseInt(r.slice(9, 13), 16)) >>> 8, d[5] = u & 255, d[6] = (u = parseInt(r.slice(14, 18), 16)) >>> 8, d[7] = u & 255, d[8] = (u = parseInt(r.slice(19, 23), 16)) >>> 8, d[9] = u & 255, d[10] = (u = parseInt(r.slice(24, 36), 16)) / 1099511627776 & 255, d[11] = u / 4294967296 & 255, d[12] = u >>> 24 & 255, d[13] = u >>> 16 & 255, d[14] = u >>> 8 & 255, d[15] = u & 255, d;
}
function stringToBytes(r) {
  r = unescape(encodeURIComponent(r));
  for (var u = [], d = 0; d < r.length; ++d)
    u.push(r.charCodeAt(d));
  return u;
}
var DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", URL$1 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
function v35(r, u, d) {
  function v(w, C, L, E) {
    if (typeof w == "string" && (w = stringToBytes(w)), typeof C == "string" && (C = parse(C)), C.length !== 16)
      throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
    var V = new Uint8Array(16 + w.length);
    if (V.set(C), V.set(w, C.length), V = d(V), V[6] = V[6] & 15 | u, V[8] = V[8] & 63 | 128, L) {
      E = E || 0;
      for (var N = 0; N < 16; ++N)
        L[E + N] = V[N];
      return L;
    }
    return stringify(V);
  }
  try {
    v.name = r;
  } catch {
  }
  return v.DNS = DNS, v.URL = URL$1, v;
}
function md5(r) {
  if (typeof r == "string") {
    var u = unescape(encodeURIComponent(r));
    r = new Uint8Array(u.length);
    for (var d = 0; d < u.length; ++d)
      r[d] = u.charCodeAt(d);
  }
  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(r), r.length * 8));
}
function md5ToHexEncodedArray(r) {
  for (var u = [], d = r.length * 32, v = "0123456789abcdef", w = 0; w < d; w += 8) {
    var C = r[w >> 5] >>> w % 32 & 255, L = parseInt(v.charAt(C >>> 4 & 15) + v.charAt(C & 15), 16);
    u.push(L);
  }
  return u;
}
function getOutputLength(r) {
  return (r + 64 >>> 9 << 4) + 14 + 1;
}
function wordsToMd5(r, u) {
  r[u >> 5] |= 128 << u % 32, r[getOutputLength(u) - 1] = u;
  for (var d = 1732584193, v = -271733879, w = -1732584194, C = 271733878, L = 0; L < r.length; L += 16) {
    var E = d, V = v, N = w, z = C;
    d = md5ff(d, v, w, C, r[L], 7, -680876936), C = md5ff(C, d, v, w, r[L + 1], 12, -389564586), w = md5ff(w, C, d, v, r[L + 2], 17, 606105819), v = md5ff(v, w, C, d, r[L + 3], 22, -1044525330), d = md5ff(d, v, w, C, r[L + 4], 7, -176418897), C = md5ff(C, d, v, w, r[L + 5], 12, 1200080426), w = md5ff(w, C, d, v, r[L + 6], 17, -1473231341), v = md5ff(v, w, C, d, r[L + 7], 22, -45705983), d = md5ff(d, v, w, C, r[L + 8], 7, 1770035416), C = md5ff(C, d, v, w, r[L + 9], 12, -1958414417), w = md5ff(w, C, d, v, r[L + 10], 17, -42063), v = md5ff(v, w, C, d, r[L + 11], 22, -1990404162), d = md5ff(d, v, w, C, r[L + 12], 7, 1804603682), C = md5ff(C, d, v, w, r[L + 13], 12, -40341101), w = md5ff(w, C, d, v, r[L + 14], 17, -1502002290), v = md5ff(v, w, C, d, r[L + 15], 22, 1236535329), d = md5gg(d, v, w, C, r[L + 1], 5, -165796510), C = md5gg(C, d, v, w, r[L + 6], 9, -1069501632), w = md5gg(w, C, d, v, r[L + 11], 14, 643717713), v = md5gg(v, w, C, d, r[L], 20, -373897302), d = md5gg(d, v, w, C, r[L + 5], 5, -701558691), C = md5gg(C, d, v, w, r[L + 10], 9, 38016083), w = md5gg(w, C, d, v, r[L + 15], 14, -660478335), v = md5gg(v, w, C, d, r[L + 4], 20, -405537848), d = md5gg(d, v, w, C, r[L + 9], 5, 568446438), C = md5gg(C, d, v, w, r[L + 14], 9, -1019803690), w = md5gg(w, C, d, v, r[L + 3], 14, -187363961), v = md5gg(v, w, C, d, r[L + 8], 20, 1163531501), d = md5gg(d, v, w, C, r[L + 13], 5, -1444681467), C = md5gg(C, d, v, w, r[L + 2], 9, -51403784), w = md5gg(w, C, d, v, r[L + 7], 14, 1735328473), v = md5gg(v, w, C, d, r[L + 12], 20, -1926607734), d = md5hh(d, v, w, C, r[L + 5], 4, -378558), C = md5hh(C, d, v, w, r[L + 8], 11, -2022574463), w = md5hh(w, C, d, v, r[L + 11], 16, 1839030562), v = md5hh(v, w, C, d, r[L + 14], 23, -35309556), d = md5hh(d, v, w, C, r[L + 1], 4, -1530992060), C = md5hh(C, d, v, w, r[L + 4], 11, 1272893353), w = md5hh(w, C, d, v, r[L + 7], 16, -155497632), v = md5hh(v, w, C, d, r[L + 10], 23, -1094730640), d = md5hh(d, v, w, C, r[L + 13], 4, 681279174), C = md5hh(C, d, v, w, r[L], 11, -358537222), w = md5hh(w, C, d, v, r[L + 3], 16, -722521979), v = md5hh(v, w, C, d, r[L + 6], 23, 76029189), d = md5hh(d, v, w, C, r[L + 9], 4, -640364487), C = md5hh(C, d, v, w, r[L + 12], 11, -421815835), w = md5hh(w, C, d, v, r[L + 15], 16, 530742520), v = md5hh(v, w, C, d, r[L + 2], 23, -995338651), d = md5ii(d, v, w, C, r[L], 6, -198630844), C = md5ii(C, d, v, w, r[L + 7], 10, 1126891415), w = md5ii(w, C, d, v, r[L + 14], 15, -1416354905), v = md5ii(v, w, C, d, r[L + 5], 21, -57434055), d = md5ii(d, v, w, C, r[L + 12], 6, 1700485571), C = md5ii(C, d, v, w, r[L + 3], 10, -1894986606), w = md5ii(w, C, d, v, r[L + 10], 15, -1051523), v = md5ii(v, w, C, d, r[L + 1], 21, -2054922799), d = md5ii(d, v, w, C, r[L + 8], 6, 1873313359), C = md5ii(C, d, v, w, r[L + 15], 10, -30611744), w = md5ii(w, C, d, v, r[L + 6], 15, -1560198380), v = md5ii(v, w, C, d, r[L + 13], 21, 1309151649), d = md5ii(d, v, w, C, r[L + 4], 6, -145523070), C = md5ii(C, d, v, w, r[L + 11], 10, -1120210379), w = md5ii(w, C, d, v, r[L + 2], 15, 718787259), v = md5ii(v, w, C, d, r[L + 9], 21, -343485551), d = safeAdd(d, E), v = safeAdd(v, V), w = safeAdd(w, N), C = safeAdd(C, z);
  }
  return [d, v, w, C];
}
function bytesToWords(r) {
  if (r.length === 0)
    return [];
  for (var u = r.length * 8, d = new Uint32Array(getOutputLength(u)), v = 0; v < u; v += 8)
    d[v >> 5] |= (r[v / 8] & 255) << v % 32;
  return d;
}
function safeAdd(r, u) {
  var d = (r & 65535) + (u & 65535), v = (r >> 16) + (u >> 16) + (d >> 16);
  return v << 16 | d & 65535;
}
function bitRotateLeft(r, u) {
  return r << u | r >>> 32 - u;
}
function md5cmn(r, u, d, v, w, C) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(u, r), safeAdd(v, C)), w), d);
}
function md5ff(r, u, d, v, w, C, L) {
  return md5cmn(u & d | ~u & v, r, u, w, C, L);
}
function md5gg(r, u, d, v, w, C, L) {
  return md5cmn(u & v | d & ~v, r, u, w, C, L);
}
function md5hh(r, u, d, v, w, C, L) {
  return md5cmn(u ^ d ^ v, r, u, w, C, L);
}
function md5ii(r, u, d, v, w, C, L) {
  return md5cmn(d ^ (u | ~v), r, u, w, C, L);
}
var v3 = v35("v3", 48, md5);
const v3$1 = v3;
function v4(r, u, d) {
  r = r || {};
  var v = r.random || (r.rng || rng)();
  if (v[6] = v[6] & 15 | 64, v[8] = v[8] & 63 | 128, u) {
    d = d || 0;
    for (var w = 0; w < 16; ++w)
      u[d + w] = v[w];
    return u;
  }
  return stringify(v);
}
function f(r, u, d, v) {
  switch (r) {
    case 0:
      return u & d ^ ~u & v;
    case 1:
      return u ^ d ^ v;
    case 2:
      return u & d ^ u & v ^ d & v;
    case 3:
      return u ^ d ^ v;
  }
}
function ROTL(r, u) {
  return r << u | r >>> 32 - u;
}
function sha1(r) {
  var u = [1518500249, 1859775393, 2400959708, 3395469782], d = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  if (typeof r == "string") {
    var v = unescape(encodeURIComponent(r));
    r = [];
    for (var w = 0; w < v.length; ++w)
      r.push(v.charCodeAt(w));
  } else
    Array.isArray(r) || (r = Array.prototype.slice.call(r));
  r.push(128);
  for (var C = r.length / 4 + 2, L = Math.ceil(C / 16), E = new Array(L), V = 0; V < L; ++V) {
    for (var N = new Uint32Array(16), z = 0; z < 16; ++z)
      N[z] = r[V * 64 + z * 4] << 24 | r[V * 64 + z * 4 + 1] << 16 | r[V * 64 + z * 4 + 2] << 8 | r[V * 64 + z * 4 + 3];
    E[V] = N;
  }
  E[L - 1][14] = (r.length - 1) * 8 / Math.pow(2, 32), E[L - 1][14] = Math.floor(E[L - 1][14]), E[L - 1][15] = (r.length - 1) * 8 & 4294967295;
  for (var st = 0; st < L; ++st) {
    for (var et = new Uint32Array(80), ct = 0; ct < 16; ++ct)
      et[ct] = E[st][ct];
    for (var Ct = 16; Ct < 80; ++Ct)
      et[Ct] = ROTL(et[Ct - 3] ^ et[Ct - 8] ^ et[Ct - 14] ^ et[Ct - 16], 1);
    for (var At = d[0], qt = d[1], vt = d[2], _t = d[3], Et = d[4], ft = 0; ft < 80; ++ft) {
      var wt = Math.floor(ft / 20), Zt = ROTL(At, 5) + f(wt, qt, vt, _t) + Et + u[wt] + et[ft] >>> 0;
      Et = _t, _t = vt, vt = ROTL(qt, 30) >>> 0, qt = At, At = Zt;
    }
    d[0] = d[0] + At >>> 0, d[1] = d[1] + qt >>> 0, d[2] = d[2] + vt >>> 0, d[3] = d[3] + _t >>> 0, d[4] = d[4] + Et >>> 0;
  }
  return [d[0] >> 24 & 255, d[0] >> 16 & 255, d[0] >> 8 & 255, d[0] & 255, d[1] >> 24 & 255, d[1] >> 16 & 255, d[1] >> 8 & 255, d[1] & 255, d[2] >> 24 & 255, d[2] >> 16 & 255, d[2] >> 8 & 255, d[2] & 255, d[3] >> 24 & 255, d[3] >> 16 & 255, d[3] >> 8 & 255, d[3] & 255, d[4] >> 24 & 255, d[4] >> 16 & 255, d[4] >> 8 & 255, d[4] & 255];
}
var v5 = v35("v5", 80, sha1);
const v5$1 = v5, nil = "00000000-0000-0000-0000-000000000000";
function version(r) {
  if (!validate(r))
    throw TypeError("Invalid UUID");
  return parseInt(r.substr(14, 1), 16);
}
const index = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  NIL: nil,
  parse,
  stringify,
  v1,
  v3: v3$1,
  v4,
  v5: v5$1,
  validate,
  version
}, Symbol.toStringTag, { value: "Module" }));
export {
  render
};
